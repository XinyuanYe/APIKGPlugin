{"idx": 7, "node_name": "l", "Dec": "the listener to add"}{"idx": 9, "node_name": "l", "Dec": "the listener to remove"}{"idx": 16, "node_name": "t", "Dec": "the type of the listener to be counted"}{"idx": 18, "node_name": "t", "Dec": "the type of the listener to be added"}{"idx": 19, "node_name": "l", "Dec": "the listener to be added"}{"idx": 21, "node_name": "t", "Dec": "the type of the listener to be removed"}{"idx": 22, "node_name": "l", "Dec": "the listener to be removed"}{"idx": 28, "node_name": "l", "Dec": "the listener to add"}{"idx": 30, "node_name": "l", "Dec": "the listener to remove"}{"idx": 32, "node_name": "l", "Dec": "the listener to add"}{"idx": 34, "node_name": "l", "Dec": "the listener to remove"}{"idx": 36, "node_name": "l", "Dec": "the listener to add"}{"idx": 38, "node_name": "l", "Dec": "the listener to remove"}{"idx": 40, "node_name": "l", "Dec": "the listener to add"}{"idx": 42, "node_name": "l", "Dec": "the listener to remove"}{"idx": 44, "node_name": "l", "Dec": "the listener to add"}{"idx": 46, "node_name": "l", "Dec": "the listener to remove"}{"idx": 48, "node_name": "l", "Dec": "the listener to add"}{"idx": 50, "node_name": "l", "Dec": "the listener to remove"}{"idx": 52, "node_name": "l", "Dec": "the listener to add"}{"idx": 54, "node_name": "l", "Dec": "the listener to remove"}{"idx": 56, "node_name": "l", "Dec": "the listener to add"}{"idx": 58, "node_name": "l", "Dec": "the listener to remove"}{"idx": 60, "node_name": "l", "Dec": "the listener to add"}{"idx": 62, "node_name": "l", "Dec": "the listener to remove"}{"idx": 64, "node_name": "l", "Dec": "the listener to add"}{"idx": 66, "node_name": "l", "Dec": "the listener to remove"}{"idx": 68, "node_name": "l", "Dec": "the listener to add"}{"idx": 70, "node_name": "l", "Dec": "the listener to remove"}{"idx": 106, "node_name": "theevent", "Dec": "the event to be processed"}{"idx": 108, "node_name": "p", "Dec": "the point to be accessed"}{"idx": 111, "node_name": "l", "Dec": "the listener to add"}{"idx": 113, "node_name": "l", "Dec": "the listener to remove"}{"idx": 115, "node_name": "l", "Dec": "the listener to add"}{"idx": 117, "node_name": "l", "Dec": "the listener to remove"}{"idx": 127, "node_name": "l", "Dec": "the listener to add"}{"idx": 129, "node_name": "l", "Dec": "the listener to remove"}{"idx": 131, "node_name": "l", "Dec": "the listener to add"}{"idx": 133, "node_name": "l", "Dec": "the listener to remove"}{"idx": 135, "node_name": "l", "Dec": "the listener to add"}{"idx": 137, "node_name": "l", "Dec": "the listener to remove"}{"idx": 139, "node_name": "l", "Dec": "the listener to add"}{"idx": 141, "node_name": "l", "Dec": "the listener to remove"}{"idx": 143, "node_name": "l", "Dec": "the listener to add"}{"idx": 145, "node_name": "l", "Dec": "the listener to remove"}{"idx": 147, "node_name": "l", "Dec": "the listener to add"}{"idx": 149, "node_name": "l", "Dec": "the listener to remove"}{"idx": 151, "node_name": "l", "Dec": "the listener to add"}{"idx": 153, "node_name": "l", "Dec": "the listener to remove"}{"idx": 155, "node_name": "l", "Dec": "the listener to add"}{"idx": 157, "node_name": "l", "Dec": "the listener to remove"}{"idx": 159, "node_name": "l", "Dec": "the listener to add"}{"idx": 161, "node_name": "l", "Dec": "the listener to remove"}{"idx": 163, "node_name": "l", "Dec": "the listener to add"}{"idx": 165, "node_name": "l", "Dec": "the listener to remove"}{"idx": 167, "node_name": "l", "Dec": "the listener to add"}{"idx": 169, "node_name": "l", "Dec": "the listener to remove"}{"idx": 171, "node_name": "l", "Dec": "the listener to add"}{"idx": 173, "node_name": "l", "Dec": "the listener to remove"}{"idx": 175, "node_name": "l", "Dec": "the listener to add"}{"idx": 177, "node_name": "l", "Dec": "the listener to remove"}{"idx": 179, "node_name": "l", "Dec": "the listener to add"}{"idx": 181, "node_name": "l", "Dec": "the listener to remove"}{"idx": 183, "node_name": "l", "Dec": "the listener to add"}{"idx": 185, "node_name": "l", "Dec": "the listener to remove"}{"idx": 187, "node_name": "l", "Dec": "the listener to add"}{"idx": 189, "node_name": "l", "Dec": "the listener to remove"}{"idx": 191, "node_name": "l", "Dec": "the listener to add"}{"idx": 193, "node_name": "l", "Dec": "the listener to remove"}{"idx": 195, "node_name": "l", "Dec": "the listener to add"}{"idx": 197, "node_name": "l", "Dec": "the listener to remove"}{"idx": 200, "node_name": "w", "Dec": "the window that was created"}{"idx": 202, "node_name": "w", "Dec": "the window that was destroyed"}{"idx": 207, "node_name": "o", "Dec": "the component that does not implement interface accessible"}{"idx": 209, "node_name": "c", "Dec": "a class"}{"idx": 211, "node_name": "o", "Dec": "an object ; if a null is passed in a null is returned"}{"idx": 214, "node_name": "o", "Dec": "the component that does not implement interface accessible"}{"idx": 216, "node_name": "o", "Dec": "the object to check against"}{"idx": 221, "node_name": "s", "Dec": "the new localized name of the object"}{"idx": 224, "node_name": "s", "Dec": "the new localized description of the object"}{"idx": 231, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 234, "node_name": "l", "Dec": "the propertychangelistener to be added"}{"idx": 236, "node_name": "l", "Dec": "the propertychangelistener to be removed"}{"idx": 239, "node_name": "c", "Dec": "the new color for the background"}{"idx": 242, "node_name": "c", "Dec": "the new color for the foreground"}{"idx": 245, "node_name": "c", "Dec": "the new cursor for the object"}{"idx": 248, "node_name": "f", "Dec": "the new font for the object"}{"idx": 250, "node_name": "f", "Dec": "the font"}{"idx": 253, "node_name": "b", "Dec": "if true , enables this object ; otherwise , disables it"}{"idx": 256, "node_name": "b", "Dec": "if true , shows this object ; otherwise , hides it"}{"idx": 259, "node_name": "p", "Dec": "the point relative to the coordinate system of the object"}{"idx": 263, "node_name": "p", "Dec": "the new position for the top-left corner"}{"idx": 266, "node_name": "r", "Dec": "rectangle indicating this component's bounds"}{"idx": 269, "node_name": "d", "Dec": "the dimension specifying the new size of the object"}{"idx": 271, "node_name": "p", "Dec": "the point relative to the coordinate system of this object"}{"idx": 275, "node_name": "l", "Dec": "the focus listener"}{"idx": 277, "node_name": "l", "Dec": "the focus listener ; removeFocusListener(java.awt.event.FocusListener) performs no function , nor does it throw an exception if the listener specified was not previously added to this component ; if listener is null , no exception is thrown and no action is performed ."}{"idx": 290, "node_name": "index", "Dec": "the index of the component to retrieve"}{"idx": 293, "node_name": "index", "Dec": "the index of the first component to retrieve"}{"idx": 294, "node_name": "length", "Dec": "the number of components to retrieve , or -1 to retrieve all components to the end of this array ."}{"idx": 296, "node_name": "value", "Dec": "the new value"}{"idx": 297, "node_name": "index", "Dec": "the index of the component to set"}{"idx": 299, "node_name": "values", "Dec": "a list of value objects to be placed in this array . if values.size() is less that the length of the array , the first values.size() elements are set ."}{"idx": 301, "node_name": "index", "Dec": "the index of the first component to set ."}{"idx": 302, "node_name": "values", "Dec": "a list of value objects to be placed in this array ."}{"idx": 303, "node_name": "srcindex", "Dec": "the index of the first source value to use ."}{"idx": 304, "node_name": "length", "Dec": "the number of components to set , or -1 to set all components to the end of this array or the end of values ( whichever comes first ) ."}{"idx": 307, "node_name": "length", "Dec": "the number of components in the new array"}{"idx": 315, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 324, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 330, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 352, "node_name": "field", "Dec": "the field to set ."}{"idx": 353, "node_name": "value", "Dec": "the value to be assigned ."}{"idx": 355, "node_name": "thread", "Dec": "the thread in which to invoke ."}{"idx": 356, "node_name": "method", "Dec": "invokeMethod(com.sun.jdi.ThreadReference,com.sun.jdi.Method,java.util.List,int) to invoke ."}{"idx": 357, "node_name": "arguments", "Dec": "the list of value arguments bound to the invoked method . values from the list are assigned to arguments in the order they appear in invokeMethod(com.sun.jdi.ThreadReference,com.sun.jdi.Method,java.util.List,int) signature ."}{"idx": 358, "node_name": "options", "Dec": "the integer bit flag options ."}{"idx": 360, "node_name": "thread", "Dec": "the thread in which to invoke ."}{"idx": 361, "node_name": "method", "Dec": "the constructor method to invoke ."}{"idx": 362, "node_name": "arguments", "Dec": "the list of value arguments bound to the invoked constructor . values from the list are assigned to arguments in the order they appear in the constructor signature ."}{"idx": 363, "node_name": "options", "Dec": "the integer bit flag options ."}{"idx": 365, "node_name": "name", "Dec": "the name of concreteMethodByName(java.lang.String,java.lang.String) to find ."}{"idx": 366, "node_name": "signature", "Dec": "the signature of concreteMethodByName(java.lang.String,java.lang.String) to find"}{"idx": 369, "node_name": "arguments", "Dec": "the argument map to be used in launching the vm ."}{"idx": 403, "node_name": "s", "Dec": "the detailed message ."}{"idx": 404, "node_name": "name", "Dec": "the name of the invalid or inconsistent argument ."}{"idx": 406, "node_name": "s", "Dec": "the detailed message ."}{"idx": 407, "node_name": "names", "Dec": "a list containing the names of the invalid or inconsistent argument ."}{"idx": 411, "node_name": "arguments", "Dec": "the argument map to be used in launching the vm ."}{"idx": 420, "node_name": "message", "Dec": "the detail message pertaining to this exception ."}{"idx": 425, "node_name": "pkt", "Dec": "the packet to write to the target vm ."}{"idx": 440, "node_name": "address", "Dec": "the address of the target vm ."}{"idx": 441, "node_name": "attachtimeout", "Dec": "if this transport service supports an attach timeout , and if attachtimeout is positive , then it specifies the timeout , in milliseconds ( more or less ) , to use when attaching to the target vm . if the transport service does not support an attach timeout , or if attachtimeout is specified as zero then attach without any timeout ."}{"idx": 442, "node_name": "handshaketimeout", "Dec": "if this transport service supports a handshake timeout , and if handshaketimeout is positive , then it specifies the timeout , in milliseconds ( more or less ) , to use when handshaking with the target vm . the exact usage of the timeout are specific to the transport service . a transport service may , for example , use the handshake timeout as the inter-character timeout while waiting for the jdwp-handshake message from the target vm . alternatively , a transport service may , for example , use the handshaketimeout as a timeout for the duration of the handshake exchange . if the transport service does not support a handshake timeout , or if handshaketimeout is specified as zero then the handshake does not timeout if there isn't a response from the target vm ."}{"idx": 444, "node_name": "address", "Dec": "the address to start listening for connections , or null to listen on an address chosen by the transport service ."}{"idx": 447, "node_name": "listenkey", "Dec": "the listen key obtained from a previous call to startlistening ( string ) or startlistening() ."}{"idx": 449, "node_name": "listenkey", "Dec": "a listen key obtained from a previous call to startlistening ( string ) or startlistening() ."}{"idx": 450, "node_name": "accepttimeout", "Dec": "if this transport service supports an accept timeout , and if accepttimeout is positive then block for up to accepttimeout milliseconds , more or less , while waiting for the target vm to connect . if the transport service does not support an accept timeout or if accepttimeout is zero then block indefinitely for a target vm to connect ."}{"idx": 451, "node_name": "handshaketimeout", "Dec": "if this transport service supports a handshake timeout , and if handshaketimeout is positive , then it specifies the timeout , in milliseconds ( more or less ) , to use when handshaking with the target vm . the exact usage of the timeout is specific to the transport service . a transport service may , for example , use the handshake timeout as the inter-character timeout while waiting for the jdwp-handshake message from the target vm . alternatively , a transport service may , for example , use the timeout as a timeout for the duration of the handshake exchange . if the transport service does not support a handshake timeout , of if handshaketimeout is specified as zero then the handshake does not timeout if there isn't a response from the target vm ."}{"idx": 460, "node_name": "message", "Dec": "the detail message pertaining to this exception ."}{"idx": 469, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 486, "node_name": "timeout", "Dec": "time in milliseconds to wait for the next event"}{"idx": 537, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 543, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 555, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 562, "node_name": "thread", "Dec": "the thread in which to invoke ."}{"idx": 563, "node_name": "method", "Dec": "invokeMethod(com.sun.jdi.ThreadReference,com.sun.jdi.Method,java.util.List,int) to invoke ."}{"idx": 564, "node_name": "arguments", "Dec": "the list of value arguments bound to the invoked method . values from the list are assigned to arguments in the order they appear in invokeMethod(com.sun.jdi.ThreadReference,com.sun.jdi.Method,java.util.List,int) signature ."}{"idx": 565, "node_name": "options", "Dec": "the integer bit flag options ."}{"idx": 577, "node_name": "msg", "Dec": "the detail message ; can be null"}{"idx": 589, "node_name": "name", "Dec": "permission name . must be \" virtualmachinemanager \" ."}{"idx": 591, "node_name": "name", "Dec": "permission name . must be \" virtualmachinemanager \" ."}{"idx": 592, "node_name": "actions", "Dec": "must be either null or the empty string ."}{"idx": 600, "node_name": "frame", "Dec": "the stackframe querying visibility"}{"idx": 603, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 613, "node_name": "stratum", "Dec": "the stratum to retrieve information from or null for the declaring type's default stratum ."}{"idx": 616, "node_name": "stratum", "Dec": "the stratum to retrieve information from or null for the declaring type's default stratum ."}{"idx": 619, "node_name": "stratum", "Dec": "the stratum to retrieve information from or null for the declaring type's default stratum ."}{"idx": 621, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 627, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 645, "node_name": "stratum", "Dec": "the stratum to retrieve information from or null for the referencetype.defaultstratum()"}{"idx": 646, "node_name": "sourcename", "Dec": "return locations only within this source file or null to return locations ."}{"idx": 648, "node_name": "linenumber", "Dec": "the line number"}{"idx": 650, "node_name": "stratum", "Dec": "the stratum to use for comparing line number and source name , or null to use the default stratum"}{"idx": 651, "node_name": "sourcename", "Dec": "the source name containing the line number , or null to match all source names"}{"idx": 652, "node_name": "linenumber", "Dec": "the line number"}{"idx": 660, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 683, "node_name": "sig", "Dec": "the field containing the requested value"}{"idx": 685, "node_name": "fields", "Dec": "a list of field objects containing the requested values ."}{"idx": 687, "node_name": "field", "Dec": "the field containing the requested value"}{"idx": 688, "node_name": "value", "Dec": "the new value to assign"}{"idx": 690, "node_name": "thread", "Dec": "the thread in which to invoke ."}{"idx": 691, "node_name": "method", "Dec": "invokeMethod(com.sun.jdi.ThreadReference,com.sun.jdi.Method,java.util.List,int) to invoke ."}{"idx": 692, "node_name": "arguments", "Dec": "the list of value arguments bound to the invoked method . values from the list are assigned to arguments in the order they appear in invokeMethod(com.sun.jdi.ThreadReference,com.sun.jdi.Method,java.util.List,int) signature ."}{"idx": 693, "node_name": "options", "Dec": "the integer bit flag options ."}{"idx": 702, "node_name": "maxreferrers", "Dec": "the maximum number of referring objects to return . must be non-negative . if zero , all referring objects are returned ."}{"idx": 704, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 727, "node_name": "stratum", "Dec": "the stratum to retrieve information from or null for the declaring type's default stratum ."}{"idx": 729, "node_name": "stratum", "Dec": "the stratum to retrieve information from or null for the declaring type's default stratum ."}{"idx": 742, "node_name": "fieldname", "Dec": "a string containing the name of desired field ."}{"idx": 747, "node_name": "name", "Dec": "the name of methodsByName(java.lang.String) to find ."}{"idx": 749, "node_name": "name", "Dec": "the name of methodsByName(java.lang.String,java.lang.String) to find ."}{"idx": 750, "node_name": "signature", "Dec": "the signature of methodsByName(java.lang.String,java.lang.String) to find"}{"idx": 753, "node_name": "field", "Dec": "the field containing the requested value"}{"idx": 755, "node_name": "fields", "Dec": "a list of field objects containing the requested values ."}{"idx": 759, "node_name": "stratum", "Dec": "the stratum to retrieve information from or null for the defaultstratum() ."}{"idx": 760, "node_name": "sourcename", "Dec": "return locations only within this source file or null to return locations ."}{"idx": 762, "node_name": "linenumber", "Dec": "the line number"}{"idx": 764, "node_name": "stratum", "Dec": "the stratum to use for comparing line number and source name , or null to use the defaultstratum() ."}{"idx": 765, "node_name": "sourcename", "Dec": "the source name containing the line number , or null to match all source names"}{"idx": 766, "node_name": "linenumber", "Dec": "the line number"}{"idx": 770, "node_name": "maxinstances", "Dec": "the maximum number of instances to return . must be non-negative . if zero , all instances are returned ."}{"idx": 772, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 782, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 784, "node_name": "instance", "Dec": "the object which must be the current instance in order to pass this filter ."}{"idx": 787, "node_name": "reftype", "Dec": "the reference type to filter on ."}{"idx": 789, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 791, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 793, "node_name": "sourcenamepattern", "Dec": "the pattern string to filter for ."}{"idx": 796, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 798, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 808, "node_name": "val", "Dec": "true if the event request is to be enabled ; false otherwise ."}{"idx": 812, "node_name": "count", "Dec": "the number of ocurrences before generating an event ."}{"idx": 814, "node_name": "policy", "Dec": "the selected suspend policy ."}{"idx": 824, "node_name": "reftype", "Dec": "if non-null , specifies that exceptions which are instances of reftype will be reported . note : this will include instances of sub-types . if null , all instances will be reported"}{"idx": 825, "node_name": "notifycaught", "Dec": "if true , caught exceptions will be reported ."}{"idx": 826, "node_name": "notifyuncaught", "Dec": "if true , uncaught exceptions will be reported ."}{"idx": 834, "node_name": "thread", "Dec": "the thread in which to step"}{"idx": 835, "node_name": "depth", "Dec": "the step depth"}{"idx": 836, "node_name": "size", "Dec": "the step size"}{"idx": 838, "node_name": "location", "Dec": "the location of the new breakpoint ."}{"idx": 840, "node_name": "field", "Dec": "the field to watch"}{"idx": 842, "node_name": "field", "Dec": "the field to watch"}{"idx": 845, "node_name": "eventrequest", "Dec": "the eventrequest to remove"}{"idx": 847, "node_name": "eventrequests", "Dec": "the list of eventrequests to remove"}{"idx": 870, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 872, "node_name": "reftype", "Dec": "the reference type to filter on ."}{"idx": 874, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 876, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 878, "node_name": "instance", "Dec": "the object which must be the current instance in order to pass this filter ."}{"idx": 884, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 886, "node_name": "reftype", "Dec": "the reference type to filter on ."}{"idx": 888, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 890, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 892, "node_name": "instance", "Dec": "the object which must be the current instance in order to pass this filter ."}{"idx": 895, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 897, "node_name": "reftype", "Dec": "the reference type to filter on ."}{"idx": 899, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 901, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 903, "node_name": "instance", "Dec": "the object which must be the current instance in order to pass this filter ."}{"idx": 907, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 909, "node_name": "reftype", "Dec": "the reference type to filter on ."}{"idx": 911, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 913, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 915, "node_name": "instance", "Dec": "the object which must be the current instance in order to pass this filter ."}{"idx": 918, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 920, "node_name": "reftype", "Dec": "the reference type to filter on ."}{"idx": 922, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 924, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 926, "node_name": "instance", "Dec": "the object which must be the current instance in order to pass this filter ."}{"idx": 929, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 931, "node_name": "reftype", "Dec": "the reference type to filter on ."}{"idx": 933, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 935, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 937, "node_name": "instance", "Dec": "the object which must be the current instance in order to pass this filter ."}{"idx": 940, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 942, "node_name": "reftype", "Dec": "the reference type to filter on ."}{"idx": 944, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 946, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 948, "node_name": "instance", "Dec": "the object which must be the current instance in order to pass this filter ."}{"idx": 959, "node_name": "reftype", "Dec": "the reference type to filter on ."}{"idx": 961, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 963, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 965, "node_name": "instance", "Dec": "the object which must be the current instance in order to pass this filter ."}{"idx": 968, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 971, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 976, "node_name": "thread", "Dec": "the thread to filter on ."}{"idx": 978, "node_name": "reftype", "Dec": "the reference type to filter on ."}{"idx": 980, "node_name": "classpattern", "Dec": "the pattern string to filter for ."}{"idx": 982, "node_name": "classpattern", "Dec": "the pattern string to filter against ."}{"idx": 984, "node_name": "instance", "Dec": "the object which must be the current instance in order to pass this filter ."}{"idx": 989, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 997, "node_name": "name", "Dec": "the variable name to find"}{"idx": 999, "node_name": "variable", "Dec": "the localvariable to be accessed"}{"idx": 1001, "node_name": "variables", "Dec": "a list of localvariable objects to be accessed"}{"idx": 1003, "node_name": "variable", "Dec": "the field containing the requested value"}{"idx": 1004, "node_name": "value", "Dec": "the new value to assign"}{"idx": 1028, "node_name": "throwable", "Dec": "the asynchronous exception to throw ."}{"idx": 1037, "node_name": "index", "Dec": "the desired frame"}{"idx": 1039, "node_name": "start", "Dec": "the index of the first frame to retrieve . index 0 represents the current frame ."}{"idx": 1040, "node_name": "length", "Dec": "the number of frames to retrieve"}{"idx": 1045, "node_name": "frame", "Dec": "stack frame to pop . frame is on this thread's call stack ."}{"idx": 1047, "node_name": "value", "Dec": "the value forceEarlyReturn(com.sun.jdi.Value) is to return ."}{"idx": 1071, "node_name": "classname", "Dec": "the class / interface name to search for"}{"idx": 1074, "node_name": "classtobytes", "Dec": "a map from referencetype to array of byte . the bytes represent the new class definition and are in java virtual machine class file format ."}{"idx": 1082, "node_name": "value", "Dec": "a boolean for which to create the value"}{"idx": 1084, "node_name": "value", "Dec": "a byte for which to create the value"}{"idx": 1086, "node_name": "value", "Dec": "a char for which to create the value"}{"idx": 1088, "node_name": "value", "Dec": "a short for which to create the value"}{"idx": 1090, "node_name": "value", "Dec": "an int for which to create the value"}{"idx": 1092, "node_name": "value", "Dec": "a long for which to create the value"}{"idx": 1094, "node_name": "value", "Dec": "a float for which to create the value"}{"idx": 1096, "node_name": "value", "Dec": "a double for which to create the value"}{"idx": 1098, "node_name": "value", "Dec": "the string to be created"}{"idx": 1103, "node_name": "exitcode", "Dec": "the exit code for the target vm . on some platforms , the exit code might be truncated , for example , to the lower order 8 bits ."}{"idx": 1129, "node_name": "stratum", "Dec": "the stratum to set as vm default , or null to use per-class defaults ."}{"idx": 1132, "node_name": "reftypes", "Dec": "the list of referencetype objects for which counts are to be obtained ."}{"idx": 1137, "node_name": "traceflags", "Dec": "identifies which kinds of tracing to enable ."}{"idx": 1148, "node_name": "connection", "Dec": "the open connection to the target vm ."}{"idx": 1149, "node_name": "process", "Dec": "if launched , the process object for the target vm . null if not launched ."}{"idx": 1166, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 1172, "node_name": "gcname", "Dec": "the name of the garbage collector used to perform the collection"}{"idx": 1173, "node_name": "gcaction", "Dec": "the name of the action performed by the garbage collector"}{"idx": 1174, "node_name": "gccause", "Dec": "the cause of the garbage collection action"}{"idx": 1175, "node_name": "gcinfo", "Dec": "a gcinfo object providing statistics about the gc cycle"}{"idx": 1181, "node_name": "cd", "Dec": "compositedata representing a garbagecollectionnotificationinfo"}{"idx": 1193, "node_name": "ct", "Dec": "the compositetype that the caller expects . this parameter is ignored and can be null ."}{"idx": 1196, "node_name": "outputfile", "Dec": "the system-dependent filename"}{"idx": 1197, "node_name": "live", "Dec": "if true dump only live objects i.e. objects that are reachable from others"}{"idx": 1201, "node_name": "name", "Dec": "name of a vm option"}{"idx": 1202, "node_name": "value", "Dec": "new value of the vm option to be set"}{"idx": 1214, "node_name": "ids", "Dec": "an array of thread ids ."}{"idx": 1216, "node_name": "ids", "Dec": "an array of thread ids ."}{"idx": 1218, "node_name": "id", "Dec": "the thread id of a thread"}{"idx": 1220, "node_name": "ids", "Dec": "an array of thread ids ."}{"idx": 1224, "node_name": "enable", "Dec": "true to enable ; false to disable ."}{"idx": 1230, "node_name": "name", "Dec": "name of a vm option ."}{"idx": 1231, "node_name": "value", "Dec": "value of a vm option ."}{"idx": 1232, "node_name": "writeable", "Dec": "true if a vm option can be set dynamically , or false otherwise ."}{"idx": 1233, "node_name": "origin", "Dec": "where the value of a vm option came from ."}{"idx": 1239, "node_name": "cd", "Dec": "compositedata representing a vmoption"}{"idx": 1243, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 1261, "node_name": "realm", "Dec": "the http basic authentication realm"}{"idx": 1264, "node_name": "username", "Dec": "the username from the request"}{"idx": 1265, "node_name": "password", "Dec": "the password from the request"}{"idx": 1269, "node_name": "exchange", "Dec": "the httpexchange"}{"idx": 1273, "node_name": "exchange", "Dec": "the httpexchange to be filtered ."}{"idx": 1274, "node_name": "chain", "Dec": "the chain which allows the next filter to be invoked ."}{"idx": 1279, "node_name": "key", "Dec": "the key to search for"}{"idx": 1281, "node_name": "key", "Dec": "the header name"}{"idx": 1282, "node_name": "value", "Dec": "the header value to add to the header"}{"idx": 1284, "node_name": "key", "Dec": "the header name"}{"idx": 1285, "node_name": "value", "Dec": "the header value to set ."}{"idx": 1290, "node_name": "h", "Dec": "the handler to set for this context"}{"idx": 1296, "node_name": "auth", "Dec": "the authenticator to set . if null then any previously set authenticator is removed , and client authentication will no longer be required ."}{"idx": 1309, "node_name": "rcode", "Dec": "the response code to send"}{"idx": 1310, "node_name": "responselength", "Dec": "if > 0 , specifies a fixed response body length and that exact number of bytes must be written to the stream acquired from getresponsebody() , or else if equal to 0 , then chunked encoding is used , and an arbitrary number of bytes may be written . if <= -1 , then no response body length is specified and no response body may be written ."}{"idx": 1316, "node_name": "name", "Dec": "the name of the attribute to retrieve"}{"idx": 1318, "node_name": "name", "Dec": "the name to associate with the attribute value"}{"idx": 1319, "node_name": "value", "Dec": "the object to store as the attribute value . null value is permitted ."}{"idx": 1321, "node_name": "i", "Dec": "the filtered input stream to set as this object's inputstream , or null if no change ."}{"idx": 1322, "node_name": "o", "Dec": "the filtered output stream to set as this object's outputstream , or null if no change ."}{"idx": 1326, "node_name": "exchange", "Dec": "the exchange containing the request from the client and used to send the response"}{"idx": 1329, "node_name": "username", "Dec": "the name of the user within the realm"}{"idx": 1330, "node_name": "realm", "Dec": "the realm ."}{"idx": 1332, "node_name": "another", "Dec": "the reference object with which to compare ."}{"idx": 1340, "node_name": "context", "Dec": "the sslcontext to use for this configurator"}{"idx": 1343, "node_name": "params", "Dec": "the httpsparameters to be configured ."}{"idx": 1348, "node_name": "addr", "Dec": "the address to listen on , if null then bind() must be called to set the address"}{"idx": 1349, "node_name": "backlog", "Dec": "the socket backlog . if this value is less than or equal to zero , then a system default value is used ."}{"idx": 1351, "node_name": "addr", "Dec": "the address to listen on"}{"idx": 1352, "node_name": "backlog", "Dec": "the socket backlog . if this value is less than or equal to zero , then a system default value is used ."}{"idx": 1355, "node_name": "executor", "Dec": "the executor to set , or null for default implementation"}{"idx": 1358, "node_name": "delay", "Dec": "the maximum time in seconds to wait until exchanges have finished ."}{"idx": 1360, "node_name": "path", "Dec": "the root uri path to associate the context with"}{"idx": 1361, "node_name": "handler", "Dec": "the handler to invoke for incoming requests ."}{"idx": 1363, "node_name": "path", "Dec": "the root uri path to associate the context with"}{"idx": 1365, "node_name": "path", "Dec": "the path of the handler to remove"}{"idx": 1367, "node_name": "context", "Dec": "the context to remove"}{"idx": 1377, "node_name": "params", "Dec": "the sslparameters to set . if null then the existing parameters ( if any ) remain unchanged ."}{"idx": 1380, "node_name": "ciphersuites", "Dec": "the array of ciphersuites ( or null )"}{"idx": 1383, "node_name": "protocols", "Dec": "the array of protocols ( or null )"}{"idx": 1386, "node_name": "wantclientauth", "Dec": "whether client authentication should be requested"}{"idx": 1389, "node_name": "needclientauth", "Dec": "whether client authentication should be required"}{"idx": 1394, "node_name": "addr", "Dec": "the address to listen on , if null then bind() must be called to set the address"}{"idx": 1395, "node_name": "backlog", "Dec": "the socket backlog . if this value is less than or equal to zero , then a system default value is used ."}{"idx": 1397, "node_name": "config", "Dec": "the httpsconfigurator to set"}{"idx": 1402, "node_name": "addr", "Dec": "the address to bind to . may be null"}{"idx": 1403, "node_name": "backlog", "Dec": "the socket backlog . a value of zero means the systems default"}{"idx": 1405, "node_name": "addr", "Dec": "the address to bind to . may be null"}{"idx": 1406, "node_name": "backlog", "Dec": "the socket backlog . a value of zero means the systems default"}{"idx": 1411, "node_name": "notification", "Dec": "the notification"}{"idx": 1412, "node_name": "attachment", "Dec": "the object attached to the receive operation when it was initiated ."}{"idx": 1414, "node_name": "notification", "Dec": "the notification"}{"idx": 1415, "node_name": "attachment", "Dec": "the object attached to the receive operation when it was initiated ."}{"idx": 1417, "node_name": "notification", "Dec": "the notification"}{"idx": 1418, "node_name": "attachment", "Dec": "the object attached to the receive operation when it was initiated ."}{"idx": 1420, "node_name": "notification", "Dec": "the notification"}{"idx": 1421, "node_name": "attachment", "Dec": "the object attached to the receive operation when it was initiated ."}{"idx": 1423, "node_name": "notification", "Dec": "the notification"}{"idx": 1424, "node_name": "attachment", "Dec": "the object attached to the receive operation when it was initiated ."}{"idx": 1427, "node_name": "associationid", "Dec": "the association id"}{"idx": 1428, "node_name": "maxinstreams", "Dec": "the maximum number of inbound streams"}{"idx": 1429, "node_name": "maxoutstreams", "Dec": "the maximum number of outbound streams"}{"idx": 1436, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 1444, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 1448, "node_name": "msg", "Dec": "the string that contains a detailed message"}{"idx": 1452, "node_name": "msg", "Dec": "the string that contains a detailed message"}{"idx": 1456, "node_name": "msg", "Dec": "the string that contains a detailed message"}{"idx": 1460, "node_name": "address", "Dec": "for a connected sctpchannel the address is the preferred peer address of the association to send the message to , or null to use the peer primary address . for an sctpmultichannel the address is used to determine the association , or if no association exists with a peer of that address then one is setup ."}{"idx": 1461, "node_name": "streamnumber", "Dec": "the stream number that the message will be sent on"}{"idx": 1463, "node_name": "association", "Dec": "the association to send the message on"}{"idx": 1464, "node_name": "address", "Dec": "the preferred peer address of the association to send the message to , or null to use the peer primary address"}{"idx": 1465, "node_name": "streamnumber", "Dec": "the stream number that the message will be sent on ."}{"idx": 1471, "node_name": "complete", "Dec": "true if , and only if , the message is complete"}{"idx": 1474, "node_name": "unordered", "Dec": "true requests the un-ordered delivery of the message , false indicates that the message is ordered ."}{"idx": 1477, "node_name": "ppid", "Dec": "the payload protocol identifier , or 0 indicate an unspecified payload protocol identifier ."}{"idx": 1480, "node_name": "streamnumber", "Dec": "the stream number"}{"idx": 1483, "node_name": "millis", "Dec": "the time period in milliseconds , or 0 to indicate that no timeout should occur"}{"idx": 1488, "node_name": "notification", "Dec": "the notification"}{"idx": 1489, "node_name": "attachment", "Dec": "the object attached to the receive operation when it was initiated ."}{"idx": 1493, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 1501, "node_name": "provider", "Dec": "the selector provider for this channel"}{"idx": 1504, "node_name": "remote", "Dec": "the remote address to which the new channel is to be connected"}{"idx": 1505, "node_name": "maxoutstreams", "Dec": "the number of streams that the application wishes to be able to send to . must be non negative and no larger than 65536 . 0 to use the endpoints default value ."}{"idx": 1506, "node_name": "maxinstreams", "Dec": "the maximum number of inbound streams the application is prepared to support . must be non negative and no larger than 65536 . 0 to use the endpoints default value ."}{"idx": 1509, "node_name": "local", "Dec": "the local address to bind the socket , or null to bind the socket to an automatically assigned socket address"}{"idx": 1511, "node_name": "address", "Dec": "the address to add to the bound addresses for the socket"}{"idx": 1513, "node_name": "address", "Dec": "the address to remove from the bound addresses for the socket"}{"idx": 1515, "node_name": "remote", "Dec": "the remote peer to which this channel is to be connected"}{"idx": 1517, "node_name": "remote", "Dec": "the remote peer to which this channel is to be connected"}{"idx": 1518, "node_name": "maxoutstreams", "Dec": "must be non negative and no larger than 65536 . 0 to use the endpoints default value ."}{"idx": 1519, "node_name": "maxinstreams", "Dec": "must be non negative and no larger than 65536 . 0 to use the endpoints default value ."}{"idx": 1526, "node_name": "name", "Dec": "the socket option"}{"idx": 1528, "node_name": "name", "Dec": "the socket option"}{"idx": 1529, "node_name": "value", "Dec": "the value of the socket option . a value of null may be a valid value for some socket options ."}{"idx": 1533, "node_name": "dst", "Dec": "the buffer into which message bytes are to be transferred"}{"idx": 1534, "node_name": "attachment", "Dec": "the object to attach to the receive operation ; can be null"}{"idx": 1535, "node_name": "handler", "Dec": "a handler to handle notifications from the sctp stack , or null to ignore any notifications ."}{"idx": 1537, "node_name": "src", "Dec": "the buffer containing the message to be sent"}{"idx": 1538, "node_name": "messageinfo", "Dec": "ancillary data about the message to be sent"}{"idx": 1541, "node_name": "provider", "Dec": "the selector provider for this channel"}{"idx": 1545, "node_name": "local", "Dec": "the local address to bind the socket , or null to bind the socket to an automatically assigned socket address"}{"idx": 1546, "node_name": "backlog", "Dec": "the maximum number of pending connections"}{"idx": 1548, "node_name": "local", "Dec": "the local address to bind the socket , or null to bind the socket to an automatically assigned socket address"}{"idx": 1550, "node_name": "address", "Dec": "the address to add to the bound addresses for the socket"}{"idx": 1552, "node_name": "address", "Dec": "the address to remove from the bound addresses for the socket"}{"idx": 1555, "node_name": "association", "Dec": "the association"}{"idx": 1557, "node_name": "association", "Dec": "the association to shutdown"}{"idx": 1559, "node_name": "name", "Dec": "the socket option"}{"idx": 1560, "node_name": "association", "Dec": "the association whose option should be retrieved , or null if this option should be retrieved at the channel's socket level ."}{"idx": 1562, "node_name": "name", "Dec": "the socket option"}{"idx": 1563, "node_name": "association", "Dec": "the association whose option should be set , or null if this option should be set at the channel's socket level ."}{"idx": 1564, "node_name": "value", "Dec": "the value of the socket option . a value of null may be a valid value for some socket options ."}{"idx": 1568, "node_name": "buffer", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 1569, "node_name": "attachment", "Dec": "the object to attach to the receive operation ; can be null"}{"idx": 1570, "node_name": "handler", "Dec": "a handler to handle notifications from the sctp stack , or null to ignore any notifications ."}{"idx": 1572, "node_name": "buffer", "Dec": "the buffer containing the message to be sent"}{"idx": 1573, "node_name": "messageinfo", "Dec": "ancillary data about the message to be sent"}{"idx": 1575, "node_name": "association", "Dec": "the association to branch off"}{"idx": 1578, "node_name": "provider", "Dec": "the selector provider for this channel"}{"idx": 1582, "node_name": "local", "Dec": "the local address to bind the socket , or null to bind the socket to an automatically assigned socket address"}{"idx": 1584, "node_name": "local", "Dec": "the local address to bind the socket , or null to bind the socket to an automatically assigned socket address"}{"idx": 1585, "node_name": "backlog", "Dec": "the maximum number of pending associations"}{"idx": 1587, "node_name": "address", "Dec": "the address to add to the bound addresses for the socket"}{"idx": 1589, "node_name": "address", "Dec": "the address to remove from the bound addresses for the socket"}{"idx": 1592, "node_name": "name", "Dec": "the socket option"}{"idx": 1594, "node_name": "name", "Dec": "the socket option"}{"idx": 1595, "node_name": "value", "Dec": "the value of the socket option . a value of null may be a valid value for some socket options ."}{"idx": 1601, "node_name": "maxinstreams", "Dec": "the maximum number of inbound streams , where 0 <= maxinstreams <= 65536"}{"idx": 1602, "node_name": "maxoutstreams", "Dec": "the maximum number of outbound streams , where 0 <= maxoutstreams <= 65536"}{"idx": 1607, "node_name": "obj", "Dec": "the object to be compared with this init max streams"}{"idx": 1633, "node_name": "callbacks", "Dec": "the callbacks to handle"}{"idx": 1636, "node_name": "name", "Dec": "the principal's string distinguished name ."}{"idx": 1638, "node_name": "object", "Dec": "the object to compare this principal against ."}{"idx": 1645, "node_name": "uri", "Dec": "the uri"}{"idx": 1647, "node_name": "applicationname", "Dec": "the name used to index the configuration"}{"idx": 1654, "node_name": "subject", "Dec": "the subject to be authenticated ."}{"idx": 1655, "node_name": "callbackhandler", "Dec": "a callbackhandler for communicating with the end user ( prompting for usernames and passwords , for example ) ."}{"idx": 1656, "node_name": "sharedstate", "Dec": "shared loginmodule state ."}{"idx": 1657, "node_name": "options", "Dec": "options specified in the login configuration for this particular loginmodule ."}{"idx": 1665, "node_name": "subject", "Dec": "the subject to be authenticated ."}{"idx": 1666, "node_name": "callbackhandler", "Dec": "a callbackhandler for communicating with the end user ( prompting for usernames and passwords , for example ) , which may be null ."}{"idx": 1667, "node_name": "sharedstate", "Dec": "shared loginmodule state ."}{"idx": 1668, "node_name": "options", "Dec": "options specified in the login configuration for this particular loginmodule ."}{"idx": 1676, "node_name": "subject", "Dec": "the subject to be authenticated ."}{"idx": 1677, "node_name": "callbackhandler", "Dec": "a callbackhandler for communication with the end user ( prompting for usernames and passwords , for example ) ."}{"idx": 1678, "node_name": "sharedstate", "Dec": "shared loginmodule state ."}{"idx": 1679, "node_name": "options", "Dec": "options specified in the login configuration for this particular loginmodule ."}{"idx": 1687, "node_name": "subject", "Dec": "the subject to be authenticated ."}{"idx": 1688, "node_name": "callbackhandler", "Dec": "a callbackhandler to acquire the username and password ."}{"idx": 1689, "node_name": "sharedstate", "Dec": "shared loginmodule state ."}{"idx": 1690, "node_name": "options", "Dec": "options specified in the login configuration for this particular loginmodule ."}{"idx": 1698, "node_name": "subject", "Dec": "the subject to be authenticated ."}{"idx": 1699, "node_name": "callbackhandler", "Dec": "a callbackhandler for communicating with the end user ( prompting for usernames and passwords , for example ) . this particular loginmodule only extracts the underlying nt system information , so this parameter is ignored ."}{"idx": 1700, "node_name": "sharedstate", "Dec": "shared loginmodule state ."}{"idx": 1701, "node_name": "options", "Dec": "options specified in the login configuration for this particular loginmodule ."}{"idx": 1718, "node_name": "subject", "Dec": "the subject to be authenticated ."}{"idx": 1719, "node_name": "callbackhandler", "Dec": "a callbackhandler for communicating with the end user ( prompting for usernames and passwords , for example ) ."}{"idx": 1720, "node_name": "sharedstate", "Dec": "shared loginmodule state ."}{"idx": 1721, "node_name": "options", "Dec": "options specified in the login configuration for this particular loginmodule ."}{"idx": 1738, "node_name": "name", "Dec": "the windows nt domain name for this user ."}{"idx": 1742, "node_name": "o", "Dec": "object to be compared for equality with this ntdomainprincipal ."}{"idx": 1746, "node_name": "token", "Dec": "the windows nt security token for this user ."}{"idx": 1750, "node_name": "o", "Dec": "object to be compared for equality with this ntnumericcredential ."}{"idx": 1754, "node_name": "stringsid", "Dec": "the windows nt sid ."}{"idx": 1758, "node_name": "o", "Dec": "object to be compared for equality with this ntsid ."}{"idx": 1762, "node_name": "name", "Dec": "a string version of the windows nt sid for this user's domain ."}{"idx": 1765, "node_name": "o", "Dec": "object to be compared for equality with this ntsiddomainprincipal ."}{"idx": 1768, "node_name": "name", "Dec": "the windows nt group sid for this user ."}{"idx": 1771, "node_name": "o", "Dec": "object to be compared for equality with this ntsidgroupprincipal ."}{"idx": 1774, "node_name": "name", "Dec": "the primary windows nt group sid for this user ."}{"idx": 1777, "node_name": "o", "Dec": "object to be compared for equality with this ntsidprimarygroupprincipal ."}{"idx": 1780, "node_name": "name", "Dec": "a string version of the windows nt sid for this user ."}{"idx": 1783, "node_name": "o", "Dec": "object to be compared for equality with this ntsiduserprincipal ."}{"idx": 1786, "node_name": "name", "Dec": "the windows nt username for this user ."}{"idx": 1790, "node_name": "o", "Dec": "object to be compared for equality with this ntprincipal ."}{"idx": 1796, "node_name": "name", "Dec": "the user's group identification number ( gid ) for this user ."}{"idx": 1797, "node_name": "primarygroup", "Dec": "true if the specified gid represents the primary group to which this user belongs ."}{"idx": 1799, "node_name": "name", "Dec": "the user's group identification number ( gid ) for this user represented as a long ."}{"idx": 1800, "node_name": "primarygroup", "Dec": "true if the specified gid represents the primary group to which this user belongs ."}{"idx": 1806, "node_name": "o", "Dec": "object to be compared for equality with this unixnumericgroupprincipal ."}{"idx": 1810, "node_name": "name", "Dec": "the user identification number ( uid ) for this user ."}{"idx": 1812, "node_name": "name", "Dec": "the user identification number ( uid ) for this user represented as a long ."}{"idx": 1817, "node_name": "o", "Dec": "object to be compared for equality with this unixnumericuserprincipal ."}{"idx": 1821, "node_name": "name", "Dec": "the unix username for this user ."}{"idx": 1825, "node_name": "o", "Dec": "object to be compared for equality with this unixprincipal ."}{"idx": 1829, "node_name": "name", "Dec": "the principal's string name ."}{"idx": 1831, "node_name": "object", "Dec": "the object to compare this principal against ."}{"idx": 1837, "node_name": "type", "Dec": "the ad-type"}{"idx": 1838, "node_name": "data", "Dec": "the ad-data , a copy of the data will be saved inside the object ."}{"idx": 1843, "node_name": "type", "Dec": "the type of the attribute requested"}{"idx": 1845, "node_name": "state", "Dec": "true if the policy should be respected"}{"idx": 1849, "node_name": "name", "Dec": "the name of the principal to impersonate"}{"idx": 1853, "node_name": "principals", "Dec": "a gssname containing one or more mechanism specific representations of the same entity . these mechanism specific representations will be populated in the returned subject's principal set ."}{"idx": 1854, "node_name": "credentials", "Dec": "a gsscredential containing one or more mechanism specific credentials for the same entity . these mechanism specific credentials will be populated in the returned subject's private credential set . passing in a value of null will imply that the private credential set should be left empty ."}{"idx": 1857, "node_name": "name", "Dec": "the inquiretype allowed by this permission . \" * \" means all inquiretypes are allowed ."}{"idx": 1861, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 1869, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 1889, "node_name": "visitor", "Dec": "the visitor to be called"}{"idx": 1890, "node_name": "data", "Dec": "a parameter value to be passed to the visitor method"}{"idx": 1895, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 1898, "node_name": "node", "Dec": "the node being visited"}{"idx": 1899, "node_name": "p", "Dec": "a parameter value"}{"idx": 1901, "node_name": "node", "Dec": "the node being visited"}{"idx": 1902, "node_name": "p", "Dec": "a parameter value"}{"idx": 1904, "node_name": "node", "Dec": "the node being visited"}{"idx": 1905, "node_name": "p", "Dec": "a parameter value"}{"idx": 1907, "node_name": "node", "Dec": "the node being visited"}{"idx": 1908, "node_name": "p", "Dec": "a parameter value"}{"idx": 1910, "node_name": "node", "Dec": "the node being visited"}{"idx": 1911, "node_name": "p", "Dec": "a parameter value"}{"idx": 1913, "node_name": "node", "Dec": "the node being visited"}{"idx": 1914, "node_name": "p", "Dec": "a parameter value"}{"idx": 1916, "node_name": "node", "Dec": "the node being visited"}{"idx": 1917, "node_name": "p", "Dec": "a parameter value"}{"idx": 1919, "node_name": "node", "Dec": "the node being visited"}{"idx": 1920, "node_name": "p", "Dec": "a parameter value"}{"idx": 1922, "node_name": "node", "Dec": "the node being visited"}{"idx": 1923, "node_name": "p", "Dec": "a parameter value"}{"idx": 1925, "node_name": "node", "Dec": "the node being visited"}{"idx": 1926, "node_name": "p", "Dec": "a parameter value"}{"idx": 1928, "node_name": "node", "Dec": "the node being visited"}{"idx": 1929, "node_name": "p", "Dec": "a parameter value"}{"idx": 1931, "node_name": "node", "Dec": "the node being visited"}{"idx": 1932, "node_name": "p", "Dec": "a parameter value"}{"idx": 1934, "node_name": "node", "Dec": "the node being visited"}{"idx": 1935, "node_name": "p", "Dec": "a parameter value"}{"idx": 1937, "node_name": "node", "Dec": "the node being visited"}{"idx": 1938, "node_name": "p", "Dec": "a parameter value"}{"idx": 1940, "node_name": "node", "Dec": "the node being visited"}{"idx": 1941, "node_name": "p", "Dec": "a parameter value"}{"idx": 1943, "node_name": "node", "Dec": "the node being visited"}{"idx": 1944, "node_name": "p", "Dec": "a parameter value"}{"idx": 1946, "node_name": "node", "Dec": "the node being visited"}{"idx": 1947, "node_name": "p", "Dec": "a parameter value"}{"idx": 1949, "node_name": "node", "Dec": "the node being visited"}{"idx": 1950, "node_name": "p", "Dec": "a parameter value"}{"idx": 1952, "node_name": "node", "Dec": "the node being visited"}{"idx": 1953, "node_name": "p", "Dec": "a parameter value"}{"idx": 1955, "node_name": "node", "Dec": "the node being visited"}{"idx": 1956, "node_name": "p", "Dec": "a parameter value"}{"idx": 1958, "node_name": "node", "Dec": "the node being visited"}{"idx": 1959, "node_name": "p", "Dec": "a parameter value"}{"idx": 1961, "node_name": "node", "Dec": "the node being visited"}{"idx": 1962, "node_name": "p", "Dec": "a parameter value"}{"idx": 1964, "node_name": "node", "Dec": "the node being visited"}{"idx": 1965, "node_name": "p", "Dec": "a parameter value"}{"idx": 1967, "node_name": "node", "Dec": "the node being visited"}{"idx": 1968, "node_name": "p", "Dec": "a parameter value"}{"idx": 1970, "node_name": "node", "Dec": "the node being visited"}{"idx": 1971, "node_name": "p", "Dec": "a parameter value"}{"idx": 1973, "node_name": "node", "Dec": "the node being visited"}{"idx": 1974, "node_name": "p", "Dec": "a parameter value"}{"idx": 1976, "node_name": "node", "Dec": "the node being visited"}{"idx": 1977, "node_name": "p", "Dec": "a parameter value"}{"idx": 1979, "node_name": "node", "Dec": "the node being visited"}{"idx": 1980, "node_name": "p", "Dec": "a parameter value"}{"idx": 1982, "node_name": "node", "Dec": "the node being visited"}{"idx": 1983, "node_name": "p", "Dec": "a parameter value"}{"idx": 1985, "node_name": "node", "Dec": "the node being visited"}{"idx": 1986, "node_name": "p", "Dec": "a parameter value"}{"idx": 1988, "node_name": "node", "Dec": "the node being visited"}{"idx": 1989, "node_name": "p", "Dec": "a parameter value"}{"idx": 1991, "node_name": "node", "Dec": "the node being visited"}{"idx": 1992, "node_name": "p", "Dec": "a parameter value"}{"idx": 1994, "node_name": "node", "Dec": "the node being visited"}{"idx": 1995, "node_name": "p", "Dec": "a parameter value"}{"idx": 1997, "node_name": "node", "Dec": "the node being visited"}{"idx": 1998, "node_name": "p", "Dec": "a parameter value"}{"idx": 2000, "node_name": "node", "Dec": "the node being visited"}{"idx": 2001, "node_name": "p", "Dec": "a parameter value"}{"idx": 2003, "node_name": "node", "Dec": "the node being visited"}{"idx": 2004, "node_name": "p", "Dec": "a parameter value"}{"idx": 2173, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 2180, "node_name": "line", "Dec": "line number ( beginning at 1 )"}{"idx": 2182, "node_name": "line", "Dec": "line number ( beginning at 1 )"}{"idx": 2183, "node_name": "column", "Dec": "tab-expanded column number ( beginning 1 )"}{"idx": 2185, "node_name": "pos", "Dec": "character offset of the position"}{"idx": 2187, "node_name": "pos", "Dec": "character offset of the position"}{"idx": 2198, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 2227, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 2280, "node_name": "visitor", "Dec": "the visitor to be called"}{"idx": 2281, "node_name": "data", "Dec": "a value to be passed to the visitor"}{"idx": 2285, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 2289, "node_name": "node", "Dec": "the node being visited"}{"idx": 2290, "node_name": "p", "Dec": "a parameter value"}{"idx": 2292, "node_name": "node", "Dec": "the node being visited"}{"idx": 2293, "node_name": "p", "Dec": "a parameter value"}{"idx": 2295, "node_name": "node", "Dec": "the node being visited"}{"idx": 2296, "node_name": "p", "Dec": "a parameter value"}{"idx": 2298, "node_name": "node", "Dec": "the node being visited"}{"idx": 2299, "node_name": "p", "Dec": "a parameter value"}{"idx": 2301, "node_name": "node", "Dec": "the node being visited"}{"idx": 2302, "node_name": "p", "Dec": "a parameter value"}{"idx": 2304, "node_name": "node", "Dec": "the node being visited"}{"idx": 2305, "node_name": "p", "Dec": "a parameter value"}{"idx": 2307, "node_name": "node", "Dec": "the node being visited"}{"idx": 2308, "node_name": "p", "Dec": "a parameter value"}{"idx": 2310, "node_name": "node", "Dec": "the node being visited"}{"idx": 2311, "node_name": "p", "Dec": "a parameter value"}{"idx": 2313, "node_name": "node", "Dec": "the node being visited"}{"idx": 2314, "node_name": "p", "Dec": "a parameter value"}{"idx": 2316, "node_name": "node", "Dec": "the node being visited"}{"idx": 2317, "node_name": "p", "Dec": "a parameter value"}{"idx": 2319, "node_name": "node", "Dec": "the node being visited"}{"idx": 2320, "node_name": "p", "Dec": "a parameter value"}{"idx": 2322, "node_name": "node", "Dec": "the node being visited"}{"idx": 2323, "node_name": "p", "Dec": "a parameter value"}{"idx": 2325, "node_name": "node", "Dec": "the node being visited"}{"idx": 2326, "node_name": "p", "Dec": "a parameter value"}{"idx": 2328, "node_name": "node", "Dec": "the node being visited"}{"idx": 2329, "node_name": "p", "Dec": "a parameter value"}{"idx": 2331, "node_name": "node", "Dec": "the node being visited"}{"idx": 2332, "node_name": "p", "Dec": "a parameter value"}{"idx": 2334, "node_name": "node", "Dec": "the node being visited"}{"idx": 2335, "node_name": "p", "Dec": "a parameter value"}{"idx": 2337, "node_name": "node", "Dec": "the node being visited"}{"idx": 2338, "node_name": "p", "Dec": "a parameter value"}{"idx": 2340, "node_name": "node", "Dec": "the node being visited"}{"idx": 2341, "node_name": "p", "Dec": "a parameter value"}{"idx": 2343, "node_name": "node", "Dec": "the node being visited"}{"idx": 2344, "node_name": "p", "Dec": "a parameter value"}{"idx": 2346, "node_name": "node", "Dec": "the node being visited"}{"idx": 2347, "node_name": "p", "Dec": "a parameter value"}{"idx": 2349, "node_name": "node", "Dec": "the node being visited"}{"idx": 2350, "node_name": "p", "Dec": "a parameter value"}{"idx": 2352, "node_name": "node", "Dec": "the node being visited"}{"idx": 2353, "node_name": "p", "Dec": "a parameter value"}{"idx": 2355, "node_name": "node", "Dec": "the node being visited"}{"idx": 2356, "node_name": "p", "Dec": "a parameter value"}{"idx": 2358, "node_name": "node", "Dec": "the node being visited"}{"idx": 2359, "node_name": "p", "Dec": "a parameter value"}{"idx": 2361, "node_name": "node", "Dec": "the node being visited"}{"idx": 2362, "node_name": "p", "Dec": "a parameter value"}{"idx": 2364, "node_name": "node", "Dec": "the node being visited"}{"idx": 2365, "node_name": "p", "Dec": "a parameter value"}{"idx": 2367, "node_name": "node", "Dec": "the node being visited"}{"idx": 2368, "node_name": "p", "Dec": "a parameter value"}{"idx": 2370, "node_name": "node", "Dec": "the node being visited"}{"idx": 2371, "node_name": "p", "Dec": "a parameter value"}{"idx": 2373, "node_name": "node", "Dec": "the node being visited"}{"idx": 2374, "node_name": "p", "Dec": "a parameter value"}{"idx": 2376, "node_name": "node", "Dec": "the node being visited"}{"idx": 2377, "node_name": "p", "Dec": "a parameter value"}{"idx": 2379, "node_name": "node", "Dec": "the node being visited"}{"idx": 2380, "node_name": "p", "Dec": "a parameter value"}{"idx": 2382, "node_name": "node", "Dec": "the node being visited"}{"idx": 2383, "node_name": "p", "Dec": "a parameter value"}{"idx": 2385, "node_name": "node", "Dec": "the node being visited"}{"idx": 2386, "node_name": "p", "Dec": "a parameter value"}{"idx": 2388, "node_name": "node", "Dec": "the node being visited"}{"idx": 2389, "node_name": "p", "Dec": "a parameter value"}{"idx": 2391, "node_name": "node", "Dec": "the node being visited"}{"idx": 2392, "node_name": "p", "Dec": "a parameter value"}{"idx": 2394, "node_name": "node", "Dec": "the node being visited"}{"idx": 2395, "node_name": "p", "Dec": "a parameter value"}{"idx": 2397, "node_name": "node", "Dec": "the node being visited"}{"idx": 2398, "node_name": "p", "Dec": "a parameter value"}{"idx": 2400, "node_name": "node", "Dec": "the node being visited"}{"idx": 2401, "node_name": "p", "Dec": "a parameter value"}{"idx": 2403, "node_name": "node", "Dec": "the node being visited"}{"idx": 2404, "node_name": "p", "Dec": "a parameter value"}{"idx": 2406, "node_name": "node", "Dec": "the node being visited"}{"idx": 2407, "node_name": "p", "Dec": "a parameter value"}{"idx": 2409, "node_name": "node", "Dec": "the node being visited"}{"idx": 2410, "node_name": "p", "Dec": "a parameter value"}{"idx": 2412, "node_name": "node", "Dec": "the node being visited"}{"idx": 2413, "node_name": "p", "Dec": "a parameter value"}{"idx": 2415, "node_name": "node", "Dec": "the node being visited"}{"idx": 2416, "node_name": "p", "Dec": "a parameter value"}{"idx": 2418, "node_name": "node", "Dec": "the node being visited"}{"idx": 2419, "node_name": "p", "Dec": "a parameter value"}{"idx": 2421, "node_name": "node", "Dec": "the node being visited"}{"idx": 2422, "node_name": "p", "Dec": "a parameter value"}{"idx": 2424, "node_name": "node", "Dec": "the node being visited"}{"idx": 2425, "node_name": "p", "Dec": "a parameter value"}{"idx": 2427, "node_name": "node", "Dec": "the node being visited"}{"idx": 2428, "node_name": "p", "Dec": "a parameter value"}{"idx": 2430, "node_name": "node", "Dec": "the node being visited"}{"idx": 2431, "node_name": "p", "Dec": "a parameter value"}{"idx": 2433, "node_name": "node", "Dec": "the node being visited"}{"idx": 2434, "node_name": "p", "Dec": "a parameter value"}{"idx": 2436, "node_name": "node", "Dec": "the node being visited"}{"idx": 2437, "node_name": "p", "Dec": "a parameter value"}{"idx": 2439, "node_name": "node", "Dec": "the node being visited"}{"idx": 2440, "node_name": "p", "Dec": "a parameter value"}{"idx": 2442, "node_name": "node", "Dec": "the node being visited"}{"idx": 2443, "node_name": "p", "Dec": "a parameter value"}{"idx": 2445, "node_name": "node", "Dec": "the node being visited"}{"idx": 2446, "node_name": "p", "Dec": "a parameter value"}{"idx": 2448, "node_name": "node", "Dec": "the node being visited"}{"idx": 2449, "node_name": "p", "Dec": "a parameter value"}{"idx": 2451, "node_name": "node", "Dec": "the node being visited"}{"idx": 2452, "node_name": "p", "Dec": "a parameter value"}{"idx": 2454, "node_name": "node", "Dec": "the node being visited"}{"idx": 2455, "node_name": "p", "Dec": "a parameter value"}{"idx": 2457, "node_name": "node", "Dec": "the node being visited"}{"idx": 2458, "node_name": "p", "Dec": "a parameter value"}{"idx": 2460, "node_name": "node", "Dec": "the node being visited"}{"idx": 2461, "node_name": "p", "Dec": "a parameter value"}{"idx": 2463, "node_name": "node", "Dec": "the node being visited"}{"idx": 2464, "node_name": "p", "Dec": "a parameter value"}{"idx": 2466, "node_name": "node", "Dec": "the node being visited"}{"idx": 2467, "node_name": "p", "Dec": "a parameter value"}{"idx": 2500, "node_name": "file", "Dec": "compilationunit in which to find tree ."}{"idx": 2501, "node_name": "comment", "Dec": "the comment tree that encloses the tree for which the position is being sought"}{"idx": 2502, "node_name": "tree", "Dec": "tree for which a position is sought ."}{"idx": 2504, "node_name": "file", "Dec": "compilationunit in which to find tree ."}{"idx": 2505, "node_name": "comment", "Dec": "the comment tree that encloses the tree for which the position is being sought"}{"idx": 2506, "node_name": "tree", "Dec": "tree for which a position is sought ."}{"idx": 2509, "node_name": "name", "Dec": "the name of the attribute"}{"idx": 2510, "node_name": "vkind", "Dec": "the kind of attribute value"}{"idx": 2511, "node_name": "value", "Dec": "the value , if any , of the attribute"}{"idx": 2513, "node_name": "name", "Dec": "the name of the author"}{"idx": 2515, "node_name": "text", "Dec": "the content of the tag"}{"idx": 2517, "node_name": "text", "Dec": "the content of the comment"}{"idx": 2519, "node_name": "text", "Dec": "the content of the tag"}{"idx": 2521, "node_name": "fullbody", "Dec": "the entire body of the doc comment"}{"idx": 2522, "node_name": "tags", "Dec": "the block tags in the doc comment"}{"idx": 2524, "node_name": "fullbody", "Dec": "the entire body of the doc comment"}{"idx": 2525, "node_name": "tags", "Dec": "the block tags in the doc comment"}{"idx": 2526, "node_name": "preamble", "Dec": "the meta content of an html file including the body tag"}{"idx": 2527, "node_name": "postamble", "Dec": "the meta content of an html including the closing body tag"}{"idx": 2530, "node_name": "text", "Dec": "the content of the declaration"}{"idx": 2532, "node_name": "name", "Dec": "the name of the html element"}{"idx": 2534, "node_name": "name", "Dec": "the name of the entity , representing the characters between ' < ' and ' ; ' in the representation of the entity in an html document"}{"idx": 2536, "node_name": "text", "Dec": "the unparseable text"}{"idx": 2537, "node_name": "diag", "Dec": "a diagnostic associated with the unparseable text , or null"}{"idx": 2539, "node_name": "name", "Dec": "the name of the exception"}{"idx": 2540, "node_name": "description", "Dec": "a description of why the exception might be thrown"}{"idx": 2542, "node_name": "text", "Dec": "the content of the tag"}{"idx": 2544, "node_name": "name", "Dec": "the name of the identifier"}{"idx": 2546, "node_name": "term", "Dec": "the search term"}{"idx": 2547, "node_name": "description", "Dec": "an optional description of the search term"}{"idx": 2550, "node_name": "ref", "Dec": "the api element being referenced"}{"idx": 2551, "node_name": "label", "Dec": "an optional label for the link"}{"idx": 2553, "node_name": "ref", "Dec": "the api element being referenced"}{"idx": 2554, "node_name": "label", "Dec": "an optional label for the link"}{"idx": 2556, "node_name": "text", "Dec": "the content of the tag"}{"idx": 2558, "node_name": "istypeparameter", "Dec": "true if this is a type parameter , and false otherwise"}{"idx": 2559, "node_name": "name", "Dec": "the parameter being described"}{"idx": 2560, "node_name": "description", "Dec": "the description of the parameter"}{"idx": 2562, "node_name": "name", "Dec": "the name of the service type"}{"idx": 2563, "node_name": "description", "Dec": "a description of the service being provided"}{"idx": 2565, "node_name": "signature", "Dec": "the doc comment signature of the reference"}{"idx": 2567, "node_name": "description", "Dec": "the description of the return value of a method"}{"idx": 2569, "node_name": "reference", "Dec": "the reference"}{"idx": 2571, "node_name": "description", "Dec": "the description for the tag"}{"idx": 2573, "node_name": "description", "Dec": "the description for the tag"}{"idx": 2575, "node_name": "name", "Dec": "the name of the field"}{"idx": 2576, "node_name": "type", "Dec": "the type of the field"}{"idx": 2577, "node_name": "description", "Dec": "the description of the field"}{"idx": 2579, "node_name": "text", "Dec": "the content of the tag"}{"idx": 2581, "node_name": "name", "Dec": "the name of the html element"}{"idx": 2582, "node_name": "attrs", "Dec": "the attributes"}{"idx": 2583, "node_name": "selfclosing", "Dec": "true if the start element is marked as self-closing ; otherwise false"}{"idx": 2585, "node_name": "summary", "Dec": "the content of the tag"}{"idx": 2587, "node_name": "propertyname", "Dec": "the system property name"}{"idx": 2589, "node_name": "text", "Dec": "the text"}{"idx": 2591, "node_name": "name", "Dec": "the name of the exception"}{"idx": 2592, "node_name": "description", "Dec": "a description of why the exception might be thrown"}{"idx": 2594, "node_name": "name", "Dec": "the name of the block tag"}{"idx": 2595, "node_name": "content", "Dec": "the content"}{"idx": 2597, "node_name": "name", "Dec": "the name of the inline tag"}{"idx": 2598, "node_name": "content", "Dec": "the content"}{"idx": 2600, "node_name": "name", "Dec": "the name of the service type"}{"idx": 2601, "node_name": "description", "Dec": "a description of how the service will be used"}{"idx": 2603, "node_name": "ref", "Dec": "a reference to the value"}{"idx": 2605, "node_name": "text", "Dec": "the content of the tag"}{"idx": 2607, "node_name": "pos", "Dec": "the position"}{"idx": 2609, "node_name": "list", "Dec": "the list"}{"idx": 2612, "node_name": "treepath", "Dec": "the treepath from which the root node was created ."}{"idx": 2613, "node_name": "t", "Dec": "the doccommenttree to create the path for ."}{"idx": 2615, "node_name": "p", "Dec": "the parent node"}{"idx": 2616, "node_name": "t", "Dec": "the child node"}{"idx": 2618, "node_name": "treepath", "Dec": "the path for the node with which the doc comment is associated"}{"idx": 2619, "node_name": "doc", "Dec": "the doc comment associated with the node"}{"idx": 2620, "node_name": "target", "Dec": "a node within the doc comment"}{"idx": 2622, "node_name": "path", "Dec": "a path identifying a node within a doc comment tree"}{"idx": 2623, "node_name": "target", "Dec": "a node to be located within the given node"}{"idx": 2631, "node_name": "path", "Dec": "the path"}{"idx": 2632, "node_name": "p", "Dec": "a value to be passed to visitor methods"}{"idx": 2634, "node_name": "tree", "Dec": "the tree to be scanned"}{"idx": 2635, "node_name": "p", "Dec": "a value to be passed to visitor methods"}{"idx": 2640, "node_name": "task", "Dec": "the compilation task for which to get the trees object"}{"idx": 2642, "node_name": "env", "Dec": "the processing environment for which to get the trees object"}{"idx": 2645, "node_name": "path", "Dec": "the path for the tree node"}{"idx": 2647, "node_name": "e", "Dec": "an element whose documentation is required"}{"idx": 2649, "node_name": "fileobject", "Dec": "the content container"}{"idx": 2651, "node_name": "e", "Dec": "an element whose path is used as a reference"}{"idx": 2652, "node_name": "relativepath", "Dec": "the relative path from the element"}{"idx": 2654, "node_name": "fileobject", "Dec": "a file object encapsulating the html content"}{"idx": 2655, "node_name": "packageelement", "Dec": "a package element to associate with the given file object representing a legacy package.html , null otherwise"}{"idx": 2657, "node_name": "path", "Dec": "the path for the tree node"}{"idx": 2659, "node_name": "list", "Dec": "the doctree list to interrogate"}{"idx": 2662, "node_name": "kind", "Dec": "the kind of message"}{"idx": 2663, "node_name": "msg", "Dec": "the message , or an empty string if none"}{"idx": 2664, "node_name": "t", "Dec": "the tree to use as a position hint"}{"idx": 2665, "node_name": "c", "Dec": "the doc comment tree to use as a position hint"}{"idx": 2666, "node_name": "root", "Dec": "the compilation unit that contains tree"}{"idx": 2668, "node_name": "breakiterator", "Dec": "a break iterator or null to specify the default sentence breaker"}{"idx": 2673, "node_name": "node", "Dec": "the node to be scanned"}{"idx": 2674, "node_name": "p", "Dec": "a parameter value passed to the visit method"}{"idx": 2676, "node_name": "nodes", "Dec": "the nodes to be scanned"}{"idx": 2677, "node_name": "p", "Dec": "a parameter value to be passed to the visit method for each node"}{"idx": 2679, "node_name": "r1", "Dec": "the first of the values to be combined"}{"idx": 2680, "node_name": "r2", "Dec": "the second of the values to be combined"}{"idx": 2682, "node_name": "node", "Dec": "the node being visited"}{"idx": 2683, "node_name": "p", "Dec": "a parameter value"}{"idx": 2685, "node_name": "node", "Dec": "the node being visited"}{"idx": 2686, "node_name": "p", "Dec": "a parameter value"}{"idx": 2688, "node_name": "node", "Dec": "the node being visited"}{"idx": 2689, "node_name": "p", "Dec": "a parameter value"}{"idx": 2691, "node_name": "node", "Dec": "the node being visited"}{"idx": 2692, "node_name": "p", "Dec": "a parameter value"}{"idx": 2694, "node_name": "node", "Dec": "the node being visited"}{"idx": 2695, "node_name": "p", "Dec": "a parameter value"}{"idx": 2697, "node_name": "node", "Dec": "the node being visited"}{"idx": 2698, "node_name": "p", "Dec": "a parameter value"}{"idx": 2700, "node_name": "node", "Dec": "the node being visited"}{"idx": 2701, "node_name": "p", "Dec": "a parameter value"}{"idx": 2703, "node_name": "node", "Dec": "the node being visited"}{"idx": 2704, "node_name": "p", "Dec": "a parameter value"}{"idx": 2706, "node_name": "node", "Dec": "the node being visited"}{"idx": 2707, "node_name": "p", "Dec": "a parameter value"}{"idx": 2709, "node_name": "node", "Dec": "the node being visited"}{"idx": 2710, "node_name": "p", "Dec": "a parameter value"}{"idx": 2712, "node_name": "node", "Dec": "the node being visited"}{"idx": 2713, "node_name": "p", "Dec": "a parameter value"}{"idx": 2715, "node_name": "node", "Dec": "the node being visited"}{"idx": 2716, "node_name": "p", "Dec": "a parameter value"}{"idx": 2718, "node_name": "node", "Dec": "the node being visited"}{"idx": 2719, "node_name": "p", "Dec": "a parameter value"}{"idx": 2721, "node_name": "node", "Dec": "the node being visited"}{"idx": 2722, "node_name": "p", "Dec": "a parameter value"}{"idx": 2724, "node_name": "node", "Dec": "the node being visited"}{"idx": 2725, "node_name": "p", "Dec": "a parameter value"}{"idx": 2727, "node_name": "node", "Dec": "the node being visited"}{"idx": 2728, "node_name": "p", "Dec": "a parameter value"}{"idx": 2730, "node_name": "node", "Dec": "the node being visited"}{"idx": 2731, "node_name": "p", "Dec": "a parameter value"}{"idx": 2733, "node_name": "node", "Dec": "the node being visited"}{"idx": 2734, "node_name": "p", "Dec": "a parameter value"}{"idx": 2736, "node_name": "node", "Dec": "the node being visited"}{"idx": 2737, "node_name": "p", "Dec": "a parameter value"}{"idx": 2739, "node_name": "node", "Dec": "the node being visited"}{"idx": 2740, "node_name": "p", "Dec": "a parameter value"}{"idx": 2742, "node_name": "node", "Dec": "the node being visited"}{"idx": 2743, "node_name": "p", "Dec": "a parameter value"}{"idx": 2745, "node_name": "node", "Dec": "the node being visited"}{"idx": 2746, "node_name": "p", "Dec": "a parameter value"}{"idx": 2748, "node_name": "node", "Dec": "the node being visited"}{"idx": 2749, "node_name": "p", "Dec": "a parameter value"}{"idx": 2751, "node_name": "node", "Dec": "the node being visited"}{"idx": 2752, "node_name": "p", "Dec": "a parameter value"}{"idx": 2754, "node_name": "node", "Dec": "the node being visited"}{"idx": 2755, "node_name": "p", "Dec": "a parameter value"}{"idx": 2757, "node_name": "node", "Dec": "the node being visited"}{"idx": 2758, "node_name": "p", "Dec": "a parameter value"}{"idx": 2760, "node_name": "node", "Dec": "the node being visited"}{"idx": 2761, "node_name": "p", "Dec": "a parameter value"}{"idx": 2763, "node_name": "node", "Dec": "the node being visited"}{"idx": 2764, "node_name": "p", "Dec": "a parameter value"}{"idx": 2766, "node_name": "node", "Dec": "the node being visited"}{"idx": 2767, "node_name": "p", "Dec": "a parameter value"}{"idx": 2769, "node_name": "node", "Dec": "the node being visited"}{"idx": 2770, "node_name": "p", "Dec": "a parameter value"}{"idx": 2772, "node_name": "node", "Dec": "the node being visited"}{"idx": 2773, "node_name": "p", "Dec": "a parameter value"}{"idx": 2775, "node_name": "node", "Dec": "the node being visited"}{"idx": 2776, "node_name": "p", "Dec": "a parameter value"}{"idx": 2778, "node_name": "node", "Dec": "the node being visited"}{"idx": 2779, "node_name": "p", "Dec": "a parameter value"}{"idx": 2781, "node_name": "node", "Dec": "the node being visited"}{"idx": 2782, "node_name": "p", "Dec": "a parameter value"}{"idx": 2784, "node_name": "node", "Dec": "the node being visited"}{"idx": 2785, "node_name": "p", "Dec": "a parameter value"}{"idx": 2787, "node_name": "node", "Dec": "the node being visited"}{"idx": 2788, "node_name": "p", "Dec": "a parameter value"}{"idx": 2792, "node_name": "processingenvironment", "Dec": "the processing environment"}{"idx": 2797, "node_name": "tasklistener", "Dec": "the task listener"}{"idx": 2799, "node_name": "tasklistener", "Dec": "the task listener"}{"idx": 2801, "node_name": "tasklistener", "Dec": "the task listener"}{"idx": 2803, "node_name": "provider", "Dec": "the provider ."}{"idx": 2805, "node_name": "path", "Dec": "the path"}{"idx": 2810, "node_name": "parameter", "Dec": "the parameter for which the name should be inferred ."}{"idx": 2814, "node_name": "task", "Dec": "the compilation task that has just been started"}{"idx": 2815, "node_name": "args", "Dec": "arguments , if any , for the plug-in"}{"idx": 2820, "node_name": "defaultvalue", "Dec": "the default value to be returned by the default action ."}{"idx": 2822, "node_name": "node", "Dec": "the node being visited"}{"idx": 2823, "node_name": "p", "Dec": "the parameter value passed to the visit method"}{"idx": 2825, "node_name": "node", "Dec": "the node on which to dispatch"}{"idx": 2826, "node_name": "p", "Dec": "a parameter to be passed to the appropriate visit method"}{"idx": 2828, "node_name": "nodes", "Dec": "the nodes on which to dispatch"}{"idx": 2829, "node_name": "p", "Dec": "a parameter value to be passed to each appropriate visit method"}{"idx": 2831, "node_name": "node", "Dec": "the node being visited"}{"idx": 2832, "node_name": "p", "Dec": "a parameter value"}{"idx": 2834, "node_name": "node", "Dec": "the node being visited"}{"idx": 2835, "node_name": "p", "Dec": "a parameter value"}{"idx": 2837, "node_name": "node", "Dec": "the node being visited"}{"idx": 2838, "node_name": "p", "Dec": "a parameter value"}{"idx": 2840, "node_name": "node", "Dec": "the node being visited"}{"idx": 2841, "node_name": "p", "Dec": "a parameter value"}{"idx": 2843, "node_name": "node", "Dec": "the node being visited"}{"idx": 2844, "node_name": "p", "Dec": "a parameter value"}{"idx": 2846, "node_name": "node", "Dec": "the node being visited"}{"idx": 2847, "node_name": "p", "Dec": "a parameter value"}{"idx": 2849, "node_name": "node", "Dec": "the node being visited"}{"idx": 2850, "node_name": "p", "Dec": "a parameter value"}{"idx": 2852, "node_name": "node", "Dec": "the node being visited"}{"idx": 2853, "node_name": "p", "Dec": "a parameter value"}{"idx": 2855, "node_name": "node", "Dec": "the node being visited"}{"idx": 2856, "node_name": "p", "Dec": "a parameter value"}{"idx": 2858, "node_name": "node", "Dec": "the node being visited"}{"idx": 2859, "node_name": "p", "Dec": "a parameter value"}{"idx": 2861, "node_name": "node", "Dec": "the node being visited"}{"idx": 2862, "node_name": "p", "Dec": "a parameter value"}{"idx": 2864, "node_name": "node", "Dec": "the node being visited"}{"idx": 2865, "node_name": "p", "Dec": "a parameter value"}{"idx": 2867, "node_name": "node", "Dec": "the node being visited"}{"idx": 2868, "node_name": "p", "Dec": "a parameter value"}{"idx": 2870, "node_name": "node", "Dec": "the node being visited"}{"idx": 2871, "node_name": "p", "Dec": "a parameter value"}{"idx": 2873, "node_name": "node", "Dec": "the node being visited"}{"idx": 2874, "node_name": "p", "Dec": "a parameter value"}{"idx": 2876, "node_name": "node", "Dec": "the node being visited"}{"idx": 2877, "node_name": "p", "Dec": "a parameter value"}{"idx": 2879, "node_name": "node", "Dec": "the node being visited"}{"idx": 2880, "node_name": "p", "Dec": "a parameter value"}{"idx": 2882, "node_name": "node", "Dec": "the node being visited"}{"idx": 2883, "node_name": "p", "Dec": "a parameter value"}{"idx": 2885, "node_name": "node", "Dec": "the node being visited"}{"idx": 2886, "node_name": "p", "Dec": "a parameter value"}{"idx": 2888, "node_name": "node", "Dec": "the node being visited"}{"idx": 2889, "node_name": "p", "Dec": "a parameter value"}{"idx": 2891, "node_name": "node", "Dec": "the node being visited"}{"idx": 2892, "node_name": "p", "Dec": "a parameter value"}{"idx": 2894, "node_name": "node", "Dec": "the node being visited"}{"idx": 2895, "node_name": "p", "Dec": "a parameter value"}{"idx": 2897, "node_name": "node", "Dec": "the node being visited"}{"idx": 2898, "node_name": "p", "Dec": "a parameter value"}{"idx": 2900, "node_name": "node", "Dec": "the node being visited"}{"idx": 2901, "node_name": "p", "Dec": "a parameter value"}{"idx": 2903, "node_name": "node", "Dec": "the node being visited"}{"idx": 2904, "node_name": "p", "Dec": "a parameter value"}{"idx": 2906, "node_name": "node", "Dec": "the node being visited"}{"idx": 2907, "node_name": "p", "Dec": "a parameter value"}{"idx": 2909, "node_name": "node", "Dec": "the node being visited"}{"idx": 2910, "node_name": "p", "Dec": "a parameter value"}{"idx": 2912, "node_name": "node", "Dec": "the node being visited"}{"idx": 2913, "node_name": "p", "Dec": "a parameter value"}{"idx": 2915, "node_name": "node", "Dec": "the node being visited"}{"idx": 2916, "node_name": "p", "Dec": "a parameter value"}{"idx": 2918, "node_name": "node", "Dec": "the node being visited"}{"idx": 2919, "node_name": "p", "Dec": "a parameter value"}{"idx": 2921, "node_name": "node", "Dec": "the node being visited"}{"idx": 2922, "node_name": "p", "Dec": "a parameter value"}{"idx": 2924, "node_name": "node", "Dec": "the node being visited"}{"idx": 2925, "node_name": "p", "Dec": "a parameter value"}{"idx": 2927, "node_name": "node", "Dec": "the node being visited"}{"idx": 2928, "node_name": "p", "Dec": "a parameter value"}{"idx": 2930, "node_name": "node", "Dec": "the node being visited"}{"idx": 2931, "node_name": "p", "Dec": "a parameter value"}{"idx": 2933, "node_name": "node", "Dec": "the node being visited"}{"idx": 2934, "node_name": "p", "Dec": "a parameter value"}{"idx": 2936, "node_name": "node", "Dec": "the node being visited"}{"idx": 2937, "node_name": "p", "Dec": "a parameter value"}{"idx": 2942, "node_name": "defaultvalue", "Dec": "the default value to be returned by the default action ."}{"idx": 2944, "node_name": "node", "Dec": "the node being visited"}{"idx": 2945, "node_name": "p", "Dec": "the parameter value passed to the visit method"}{"idx": 2947, "node_name": "node", "Dec": "the node on which to dispatch"}{"idx": 2948, "node_name": "p", "Dec": "a parameter to be passed to the appropriate visit method"}{"idx": 2950, "node_name": "nodes", "Dec": "the nodes on which to dispatch"}{"idx": 2951, "node_name": "p", "Dec": "a parameter value to be passed to each appropriate visit method"}{"idx": 2953, "node_name": "node", "Dec": "the node being visited"}{"idx": 2954, "node_name": "p", "Dec": "a parameter value"}{"idx": 2956, "node_name": "node", "Dec": "the node being visited"}{"idx": 2957, "node_name": "p", "Dec": "a parameter value"}{"idx": 2959, "node_name": "node", "Dec": "the node being visited"}{"idx": 2960, "node_name": "p", "Dec": "a parameter value"}{"idx": 2962, "node_name": "node", "Dec": "the node being visited"}{"idx": 2963, "node_name": "p", "Dec": "a parameter value"}{"idx": 2965, "node_name": "node", "Dec": "the node being visited"}{"idx": 2966, "node_name": "p", "Dec": "a parameter value"}{"idx": 2968, "node_name": "node", "Dec": "the node being visited"}{"idx": 2969, "node_name": "p", "Dec": "a parameter value"}{"idx": 2971, "node_name": "node", "Dec": "the node being visited"}{"idx": 2972, "node_name": "p", "Dec": "a parameter value"}{"idx": 2974, "node_name": "node", "Dec": "the node being visited"}{"idx": 2975, "node_name": "p", "Dec": "a parameter value"}{"idx": 2977, "node_name": "node", "Dec": "the node being visited"}{"idx": 2978, "node_name": "p", "Dec": "a parameter value"}{"idx": 2980, "node_name": "node", "Dec": "the node being visited"}{"idx": 2981, "node_name": "p", "Dec": "a parameter value"}{"idx": 2983, "node_name": "node", "Dec": "the node being visited"}{"idx": 2984, "node_name": "p", "Dec": "a parameter value"}{"idx": 2986, "node_name": "node", "Dec": "the node being visited"}{"idx": 2987, "node_name": "p", "Dec": "a parameter value"}{"idx": 2989, "node_name": "node", "Dec": "the node being visited"}{"idx": 2990, "node_name": "p", "Dec": "a parameter value"}{"idx": 2992, "node_name": "node", "Dec": "the node being visited"}{"idx": 2993, "node_name": "p", "Dec": "a parameter value"}{"idx": 2995, "node_name": "node", "Dec": "the node being visited"}{"idx": 2996, "node_name": "p", "Dec": "a parameter value"}{"idx": 2998, "node_name": "node", "Dec": "the node being visited"}{"idx": 2999, "node_name": "p", "Dec": "a parameter value"}{"idx": 3001, "node_name": "node", "Dec": "the node being visited"}{"idx": 3002, "node_name": "p", "Dec": "a parameter value"}{"idx": 3004, "node_name": "node", "Dec": "the node being visited"}{"idx": 3005, "node_name": "p", "Dec": "a parameter value"}{"idx": 3007, "node_name": "node", "Dec": "the node being visited"}{"idx": 3008, "node_name": "p", "Dec": "a parameter value"}{"idx": 3010, "node_name": "node", "Dec": "the node being visited"}{"idx": 3011, "node_name": "p", "Dec": "a parameter value"}{"idx": 3013, "node_name": "node", "Dec": "the node being visited"}{"idx": 3014, "node_name": "p", "Dec": "a parameter value"}{"idx": 3016, "node_name": "node", "Dec": "the node being visited"}{"idx": 3017, "node_name": "p", "Dec": "a parameter value"}{"idx": 3019, "node_name": "node", "Dec": "the node being visited"}{"idx": 3020, "node_name": "p", "Dec": "a parameter value"}{"idx": 3022, "node_name": "node", "Dec": "the node being visited"}{"idx": 3023, "node_name": "p", "Dec": "a parameter value"}{"idx": 3025, "node_name": "node", "Dec": "the node being visited"}{"idx": 3026, "node_name": "p", "Dec": "a parameter value"}{"idx": 3028, "node_name": "node", "Dec": "the node being visited"}{"idx": 3029, "node_name": "p", "Dec": "a parameter value"}{"idx": 3031, "node_name": "node", "Dec": "the node being visited"}{"idx": 3032, "node_name": "p", "Dec": "a parameter value"}{"idx": 3034, "node_name": "node", "Dec": "the node being visited"}{"idx": 3035, "node_name": "p", "Dec": "a parameter value"}{"idx": 3037, "node_name": "node", "Dec": "the node being visited"}{"idx": 3038, "node_name": "p", "Dec": "a parameter value"}{"idx": 3040, "node_name": "node", "Dec": "the node being visited"}{"idx": 3041, "node_name": "p", "Dec": "a parameter value"}{"idx": 3043, "node_name": "node", "Dec": "the node being visited"}{"idx": 3044, "node_name": "p", "Dec": "a parameter value"}{"idx": 3046, "node_name": "node", "Dec": "the node being visited"}{"idx": 3047, "node_name": "p", "Dec": "a parameter value"}{"idx": 3049, "node_name": "node", "Dec": "the node being visited"}{"idx": 3050, "node_name": "p", "Dec": "a parameter value"}{"idx": 3052, "node_name": "node", "Dec": "the node being visited"}{"idx": 3053, "node_name": "p", "Dec": "a parameter value"}{"idx": 3055, "node_name": "node", "Dec": "the node being visited"}{"idx": 3056, "node_name": "p", "Dec": "a parameter value"}{"idx": 3058, "node_name": "node", "Dec": "the node being visited"}{"idx": 3059, "node_name": "p", "Dec": "a parameter value"}{"idx": 3061, "node_name": "node", "Dec": "the node being visited"}{"idx": 3062, "node_name": "p", "Dec": "a parameter value"}{"idx": 3064, "node_name": "node", "Dec": "the node being visited"}{"idx": 3065, "node_name": "p", "Dec": "a parameter value"}{"idx": 3067, "node_name": "node", "Dec": "the node being visited"}{"idx": 3068, "node_name": "p", "Dec": "a parameter value"}{"idx": 3070, "node_name": "node", "Dec": "the node being visited"}{"idx": 3071, "node_name": "p", "Dec": "a parameter value"}{"idx": 3073, "node_name": "node", "Dec": "the node being visited"}{"idx": 3074, "node_name": "p", "Dec": "a parameter value"}{"idx": 3076, "node_name": "node", "Dec": "the node being visited"}{"idx": 3077, "node_name": "p", "Dec": "a parameter value"}{"idx": 3079, "node_name": "node", "Dec": "the node being visited"}{"idx": 3080, "node_name": "p", "Dec": "a parameter value"}{"idx": 3082, "node_name": "node", "Dec": "the node being visited"}{"idx": 3083, "node_name": "p", "Dec": "a parameter value"}{"idx": 3085, "node_name": "node", "Dec": "the node being visited"}{"idx": 3086, "node_name": "p", "Dec": "a parameter value"}{"idx": 3088, "node_name": "node", "Dec": "the node being visited"}{"idx": 3089, "node_name": "p", "Dec": "a parameter value"}{"idx": 3091, "node_name": "node", "Dec": "the node being visited"}{"idx": 3092, "node_name": "p", "Dec": "a parameter value"}{"idx": 3094, "node_name": "node", "Dec": "the node being visited"}{"idx": 3095, "node_name": "p", "Dec": "a parameter value"}{"idx": 3097, "node_name": "node", "Dec": "the node being visited"}{"idx": 3098, "node_name": "p", "Dec": "a parameter value"}{"idx": 3100, "node_name": "node", "Dec": "the node being visited"}{"idx": 3101, "node_name": "p", "Dec": "a parameter value"}{"idx": 3103, "node_name": "node", "Dec": "the node being visited"}{"idx": 3104, "node_name": "p", "Dec": "a parameter value"}{"idx": 3106, "node_name": "node", "Dec": "the node being visited"}{"idx": 3107, "node_name": "p", "Dec": "a parameter value"}{"idx": 3109, "node_name": "node", "Dec": "the node being visited"}{"idx": 3110, "node_name": "p", "Dec": "a parameter value"}{"idx": 3113, "node_name": "file", "Dec": "compilationunit in which to find tree ."}{"idx": 3114, "node_name": "tree", "Dec": "tree for which a position is sought ."}{"idx": 3116, "node_name": "file", "Dec": "compilationunit in which to find tree ."}{"idx": 3117, "node_name": "tree", "Dec": "tree for which a position is sought ."}{"idx": 3120, "node_name": "kind", "Dec": "the kind of the event"}{"idx": 3122, "node_name": "kind", "Dec": "the kind of the event"}{"idx": 3123, "node_name": "sourcefile", "Dec": "the source file"}{"idx": 3125, "node_name": "kind", "Dec": "the kind of the event"}{"idx": 3126, "node_name": "unit", "Dec": "the compilation unit"}{"idx": 3128, "node_name": "kind", "Dec": "the kind of the event"}{"idx": 3129, "node_name": "unit", "Dec": "the compilation unit"}{"idx": 3130, "node_name": "clazz", "Dec": "the type element"}{"idx": 3138, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 3141, "node_name": "e", "Dec": "the event"}{"idx": 3143, "node_name": "e", "Dec": "the event"}{"idx": 3146, "node_name": "node", "Dec": "the root node"}{"idx": 3148, "node_name": "path", "Dec": "the parent path"}{"idx": 3149, "node_name": "tree", "Dec": "the child node"}{"idx": 3151, "node_name": "unit", "Dec": "the compilation unit to search"}{"idx": 3152, "node_name": "target", "Dec": "the node to locate"}{"idx": 3154, "node_name": "path", "Dec": "the path in which to search"}{"idx": 3155, "node_name": "target", "Dec": "the node to locate"}{"idx": 3163, "node_name": "path", "Dec": "the path identifying the node to be scanned"}{"idx": 3164, "node_name": "p", "Dec": "a parameter value passed to visit methods"}{"idx": 3166, "node_name": "tree", "Dec": "the node to be scanned"}{"idx": 3167, "node_name": "p", "Dec": "a parameter value passed to the visit method"}{"idx": 3172, "node_name": "task", "Dec": "the compilation task for which to get the trees object"}{"idx": 3174, "node_name": "env", "Dec": "the processing environment for which to get the trees object"}{"idx": 3177, "node_name": "element", "Dec": "the element"}{"idx": 3179, "node_name": "element", "Dec": "the element"}{"idx": 3181, "node_name": "method", "Dec": "the executable element"}{"idx": 3183, "node_name": "e", "Dec": "the element"}{"idx": 3184, "node_name": "a", "Dec": "the annotation mirror"}{"idx": 3186, "node_name": "e", "Dec": "the element"}{"idx": 3187, "node_name": "a", "Dec": "the annotation mirror"}{"idx": 3188, "node_name": "v", "Dec": "the annotation value"}{"idx": 3190, "node_name": "unit", "Dec": "the compilation unit"}{"idx": 3191, "node_name": "node", "Dec": "the tree node"}{"idx": 3193, "node_name": "e", "Dec": "the element"}{"idx": 3195, "node_name": "e", "Dec": "the element"}{"idx": 3196, "node_name": "a", "Dec": "the annotation mirror"}{"idx": 3198, "node_name": "e", "Dec": "the element"}{"idx": 3199, "node_name": "a", "Dec": "the annotation mirror"}{"idx": 3200, "node_name": "v", "Dec": "the annotation value"}{"idx": 3202, "node_name": "path", "Dec": "the tree path"}{"idx": 3204, "node_name": "path", "Dec": "the tree path"}{"idx": 3206, "node_name": "path", "Dec": "the tree path"}{"idx": 3208, "node_name": "path", "Dec": "the tree path"}{"idx": 3210, "node_name": "scope", "Dec": "the scope to be checked"}{"idx": 3211, "node_name": "type", "Dec": "the type to be checked"}{"idx": 3213, "node_name": "scope", "Dec": "the scope to be checked"}{"idx": 3214, "node_name": "member", "Dec": "the member to be checked"}{"idx": 3215, "node_name": "type", "Dec": "the type for which to check if the member is accessible"}{"idx": 3217, "node_name": "errortype", "Dec": "the errortype for which we want to get the original type ."}{"idx": 3219, "node_name": "kind", "Dec": "the kind of message"}{"idx": 3220, "node_name": "msg", "Dec": "the message , or an empty string if none"}{"idx": 3221, "node_name": "t", "Dec": "the tree to use as a position hint"}{"idx": 3222, "node_name": "root", "Dec": "the compilation unit that contains tree"}{"idx": 3224, "node_name": "tree", "Dec": "the tree for the catch clause"}{"idx": 3228, "node_name": "tree", "Dec": "the node to be scanned"}{"idx": 3229, "node_name": "p", "Dec": "a parameter value passed to the visit method"}{"idx": 3231, "node_name": "nodes", "Dec": "the nodes to be scanned"}{"idx": 3232, "node_name": "p", "Dec": "a parameter value to be passed to the visit method for each node"}{"idx": 3234, "node_name": "r1", "Dec": "the first of the values to be combined"}{"idx": 3235, "node_name": "r2", "Dec": "the second of the values to be combined"}{"idx": 3237, "node_name": "node", "Dec": "the node being visited"}{"idx": 3238, "node_name": "p", "Dec": "a parameter value"}{"idx": 3240, "node_name": "node", "Dec": "the node being visited"}{"idx": 3241, "node_name": "p", "Dec": "a parameter value"}{"idx": 3243, "node_name": "node", "Dec": "the node being visited"}{"idx": 3244, "node_name": "p", "Dec": "a parameter value"}{"idx": 3246, "node_name": "node", "Dec": "the node being visited"}{"idx": 3247, "node_name": "p", "Dec": "a parameter value"}{"idx": 3249, "node_name": "node", "Dec": "the node being visited"}{"idx": 3250, "node_name": "p", "Dec": "a parameter value"}{"idx": 3252, "node_name": "node", "Dec": "the node being visited"}{"idx": 3253, "node_name": "p", "Dec": "a parameter value"}{"idx": 3255, "node_name": "node", "Dec": "the node being visited"}{"idx": 3256, "node_name": "p", "Dec": "a parameter value"}{"idx": 3258, "node_name": "node", "Dec": "the node being visited"}{"idx": 3259, "node_name": "p", "Dec": "a parameter value"}{"idx": 3261, "node_name": "node", "Dec": "the node being visited"}{"idx": 3262, "node_name": "p", "Dec": "a parameter value"}{"idx": 3264, "node_name": "node", "Dec": "the node being visited"}{"idx": 3265, "node_name": "p", "Dec": "a parameter value"}{"idx": 3267, "node_name": "node", "Dec": "the node being visited"}{"idx": 3268, "node_name": "p", "Dec": "a parameter value"}{"idx": 3270, "node_name": "node", "Dec": "the node being visited"}{"idx": 3271, "node_name": "p", "Dec": "a parameter value"}{"idx": 3273, "node_name": "node", "Dec": "the node being visited"}{"idx": 3274, "node_name": "p", "Dec": "a parameter value"}{"idx": 3276, "node_name": "node", "Dec": "the node being visited"}{"idx": 3277, "node_name": "p", "Dec": "a parameter value"}{"idx": 3279, "node_name": "node", "Dec": "the node being visited"}{"idx": 3280, "node_name": "p", "Dec": "a parameter value"}{"idx": 3282, "node_name": "node", "Dec": "the node being visited"}{"idx": 3283, "node_name": "p", "Dec": "a parameter value"}{"idx": 3285, "node_name": "node", "Dec": "the node being visited"}{"idx": 3286, "node_name": "p", "Dec": "a parameter value"}{"idx": 3288, "node_name": "node", "Dec": "the node being visited"}{"idx": 3289, "node_name": "p", "Dec": "a parameter value"}{"idx": 3291, "node_name": "node", "Dec": "the node being visited"}{"idx": 3292, "node_name": "p", "Dec": "a parameter value"}{"idx": 3294, "node_name": "node", "Dec": "the node being visited"}{"idx": 3295, "node_name": "p", "Dec": "a parameter value"}{"idx": 3297, "node_name": "node", "Dec": "the node being visited"}{"idx": 3298, "node_name": "p", "Dec": "a parameter value"}{"idx": 3300, "node_name": "node", "Dec": "the node being visited"}{"idx": 3301, "node_name": "p", "Dec": "a parameter value"}{"idx": 3303, "node_name": "node", "Dec": "the node being visited"}{"idx": 3304, "node_name": "p", "Dec": "a parameter value"}{"idx": 3306, "node_name": "node", "Dec": "the node being visited"}{"idx": 3307, "node_name": "p", "Dec": "a parameter value"}{"idx": 3309, "node_name": "node", "Dec": "the node being visited"}{"idx": 3310, "node_name": "p", "Dec": "a parameter value"}{"idx": 3312, "node_name": "node", "Dec": "the node being visited"}{"idx": 3313, "node_name": "p", "Dec": "a parameter value"}{"idx": 3315, "node_name": "node", "Dec": "the node being visited"}{"idx": 3316, "node_name": "p", "Dec": "a parameter value"}{"idx": 3318, "node_name": "node", "Dec": "the node being visited"}{"idx": 3319, "node_name": "p", "Dec": "a parameter value"}{"idx": 3321, "node_name": "node", "Dec": "the node being visited"}{"idx": 3322, "node_name": "p", "Dec": "a parameter value"}{"idx": 3324, "node_name": "node", "Dec": "the node being visited"}{"idx": 3325, "node_name": "p", "Dec": "a parameter value"}{"idx": 3327, "node_name": "node", "Dec": "the node being visited"}{"idx": 3328, "node_name": "p", "Dec": "a parameter value"}{"idx": 3330, "node_name": "node", "Dec": "the node being visited"}{"idx": 3331, "node_name": "p", "Dec": "a parameter value"}{"idx": 3333, "node_name": "node", "Dec": "the node being visited"}{"idx": 3334, "node_name": "p", "Dec": "a parameter value"}{"idx": 3336, "node_name": "node", "Dec": "the node being visited"}{"idx": 3337, "node_name": "p", "Dec": "a parameter value"}{"idx": 3339, "node_name": "node", "Dec": "the node being visited"}{"idx": 3340, "node_name": "p", "Dec": "a parameter value"}{"idx": 3342, "node_name": "node", "Dec": "the node being visited"}{"idx": 3343, "node_name": "p", "Dec": "a parameter value"}{"idx": 3345, "node_name": "node", "Dec": "the node being visited"}{"idx": 3346, "node_name": "p", "Dec": "a parameter value"}{"idx": 3348, "node_name": "node", "Dec": "the node being visited"}{"idx": 3349, "node_name": "p", "Dec": "a parameter value"}{"idx": 3351, "node_name": "node", "Dec": "the node being visited"}{"idx": 3352, "node_name": "p", "Dec": "a parameter value"}{"idx": 3354, "node_name": "node", "Dec": "the node being visited"}{"idx": 3355, "node_name": "p", "Dec": "a parameter value"}{"idx": 3357, "node_name": "node", "Dec": "the node being visited"}{"idx": 3358, "node_name": "p", "Dec": "a parameter value"}{"idx": 3360, "node_name": "node", "Dec": "the node being visited"}{"idx": 3361, "node_name": "p", "Dec": "a parameter value"}{"idx": 3363, "node_name": "node", "Dec": "the node being visited"}{"idx": 3364, "node_name": "p", "Dec": "a parameter value"}{"idx": 3366, "node_name": "node", "Dec": "the node being visited"}{"idx": 3367, "node_name": "p", "Dec": "a parameter value"}{"idx": 3369, "node_name": "node", "Dec": "the node being visited"}{"idx": 3370, "node_name": "p", "Dec": "a parameter value"}{"idx": 3372, "node_name": "node", "Dec": "the node being visited"}{"idx": 3373, "node_name": "p", "Dec": "a parameter value"}{"idx": 3375, "node_name": "node", "Dec": "the node being visited"}{"idx": 3376, "node_name": "p", "Dec": "a parameter value"}{"idx": 3378, "node_name": "node", "Dec": "the node being visited"}{"idx": 3379, "node_name": "p", "Dec": "a parameter value"}{"idx": 3381, "node_name": "node", "Dec": "the node being visited"}{"idx": 3382, "node_name": "p", "Dec": "a parameter value"}{"idx": 3384, "node_name": "node", "Dec": "the node being visited"}{"idx": 3385, "node_name": "p", "Dec": "a parameter value"}{"idx": 3387, "node_name": "node", "Dec": "the node being visited"}{"idx": 3388, "node_name": "p", "Dec": "a parameter value"}{"idx": 3390, "node_name": "node", "Dec": "the node being visited"}{"idx": 3391, "node_name": "p", "Dec": "a parameter value"}{"idx": 3393, "node_name": "node", "Dec": "the node being visited"}{"idx": 3394, "node_name": "p", "Dec": "a parameter value"}{"idx": 3396, "node_name": "node", "Dec": "the node being visited"}{"idx": 3397, "node_name": "p", "Dec": "a parameter value"}{"idx": 3401, "node_name": "s", "Dec": "the detail message ."}{"idx": 3403, "node_name": "s", "Dec": "the detail message ."}{"idx": 3404, "node_name": "returnvalue", "Dec": "the return value"}{"idx": 3409, "node_name": "s", "Dec": "the detail message ."}{"idx": 3413, "node_name": "s", "Dec": "the detail message ."}{"idx": 3416, "node_name": "message", "Dec": "the detail message ."}{"idx": 3419, "node_name": "name", "Dec": "permission name . must be either \" attachvirtualmachine \" , or \" createattachprovider \" ."}{"idx": 3421, "node_name": "name", "Dec": "permission name . must be either \" attachvirtualmachine \" , or \" createattachprovider \" ."}{"idx": 3422, "node_name": "actions", "Dec": "not used and should be null , or the empty string ."}{"idx": 3428, "node_name": "id", "Dec": "the abstract identifier that identifies the java virtual machine ."}{"idx": 3430, "node_name": "vmd", "Dec": "the virtual machine descriptor"}{"idx": 3435, "node_name": "provider", "Dec": "the attach provider creating this class ."}{"idx": 3436, "node_name": "id", "Dec": "the abstract identifier that identifies the java virtual machine ."}{"idx": 3439, "node_name": "id", "Dec": "the abstract identifier that identifies the java virtual machine ."}{"idx": 3441, "node_name": "vmd", "Dec": "the virtual machine descriptor ."}{"idx": 3446, "node_name": "agentlibrary", "Dec": "the name of the agent library ."}{"idx": 3447, "node_name": "options", "Dec": "the options to provide to the agent_onattach [ _l ] function ( can be null ) ."}{"idx": 3449, "node_name": "agentlibrary", "Dec": "the name of the agent library ."}{"idx": 3451, "node_name": "agentpath", "Dec": "the full path of the agent library ."}{"idx": 3452, "node_name": "options", "Dec": "the options to provide to the agent_onattach [ _l ] function ( can be null ) ."}{"idx": 3454, "node_name": "agentpath", "Dec": "the full path to the agent library ."}{"idx": 3456, "node_name": "agent", "Dec": "path to the jar file containing the agent ."}{"idx": 3457, "node_name": "options", "Dec": "the options to provide to the agent's agentmain method ( can be null ) ."}{"idx": 3459, "node_name": "agent", "Dec": "path to the jar file containing the agent ."}{"idx": 3463, "node_name": "agentproperties", "Dec": "a properties object containing the configuration properties for the agent ."}{"idx": 3467, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 3471, "node_name": "provider", "Dec": "the attachprovider to attach to the java virtual machine ."}{"idx": 3472, "node_name": "id", "Dec": "the virtual machine identifier ."}{"idx": 3473, "node_name": "displayname", "Dec": "the display name ."}{"idx": 3475, "node_name": "provider", "Dec": "the attachprovider to attach to the java virtual machine ."}{"idx": 3476, "node_name": "id", "Dec": "the virtual machine identifier ."}{"idx": 3482, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 3487, "node_name": "args", "Dec": "command line arguments"}{"idx": 3489, "node_name": "args", "Dec": "the command line arguments that would normally be passed to the javac program as described in the man page ."}{"idx": 3491, "node_name": "args", "Dec": "the command line arguments that would normally be passed to the javac program as described in the man page ."}{"idx": 3492, "node_name": "out", "Dec": "printwriter to which the compiler's diagnostic output is directed ."}{"idx": 3496, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 3502, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 3504, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 3508, "node_name": "context", "Dec": "a jconsolecontext object"}{"idx": 3514, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 3516, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 3533, "node_name": "min", "Dec": "the minimum value"}{"idx": 3536, "node_name": "max", "Dec": "the maximum value"}{"idx": 3539, "node_name": "u", "Dec": "the unit increment"}{"idx": 3542, "node_name": "b", "Dec": "the block increment"}{"idx": 3545, "node_name": "v", "Dec": "the length of the indicator"}{"idx": 3548, "node_name": "v", "Dec": "the current value , between minimum and maximum"}{"idx": 3551, "node_name": "l", "Dec": "the listener to receive events"}{"idx": 3553, "node_name": "l", "Dec": "the listener being removed"}{"idx": 3580, "node_name": "rule", "Dec": "the compositing rule"}{"idx": 3582, "node_name": "rule", "Dec": "the compositing rule"}{"idx": 3583, "node_name": "alpha", "Dec": "the constant alpha to be multiplied with the alpha of the source . alpha must be a floating point number in the inclusive range [ 0.0 , 1.0 ] ."}{"idx": 3585, "node_name": "srccolormodel", "Dec": "the colormodel of the source"}{"idx": 3586, "node_name": "dstcolormodel", "Dec": "the colormodel of the destination"}{"idx": 3587, "node_name": "hints", "Dec": "the hint that the context object uses to choose between rendering alternatives"}{"idx": 3591, "node_name": "rule", "Dec": "the compositing rule"}{"idx": 3593, "node_name": "alpha", "Dec": "the constant alpha to be multiplied with the alpha of the source . alpha must be a floating point number in the inclusive range [ 0.0 , 1.0 ] ."}{"idx": 3596, "node_name": "obj", "Dec": "the object to test for equality"}{"idx": 3599, "node_name": "msg", "Dec": "the detail message ."}{"idx": 3624, "node_name": "source", "Dec": "the object where the event originated"}{"idx": 3625, "node_name": "id", "Dec": "the event type"}{"idx": 3627, "node_name": "newsource", "Dec": "the new object to which the event should be dispatched"}{"idx": 3637, "node_name": "a", "Dec": "listener-a"}{"idx": 3638, "node_name": "b", "Dec": "listener-b"}{"idx": 3640, "node_name": "oldl", "Dec": "the listener to be removed"}{"idx": 3642, "node_name": "e", "Dec": "the component event"}{"idx": 3644, "node_name": "e", "Dec": "the component event"}{"idx": 3646, "node_name": "e", "Dec": "the component event"}{"idx": 3648, "node_name": "e", "Dec": "the component event"}{"idx": 3650, "node_name": "e", "Dec": "the component event"}{"idx": 3652, "node_name": "e", "Dec": "the component event"}{"idx": 3654, "node_name": "e", "Dec": "the focus event"}{"idx": 3656, "node_name": "e", "Dec": "the focus event"}{"idx": 3658, "node_name": "e", "Dec": "the key event"}{"idx": 3660, "node_name": "e", "Dec": "the key event"}{"idx": 3662, "node_name": "e", "Dec": "the key event"}{"idx": 3664, "node_name": "e", "Dec": "the mouse event"}{"idx": 3666, "node_name": "e", "Dec": "the mouse event"}{"idx": 3668, "node_name": "e", "Dec": "the mouse event"}{"idx": 3670, "node_name": "e", "Dec": "the mouse event"}{"idx": 3672, "node_name": "e", "Dec": "the mouse event"}{"idx": 3674, "node_name": "e", "Dec": "the mouse event"}{"idx": 3676, "node_name": "e", "Dec": "the mouse event"}{"idx": 3678, "node_name": "e", "Dec": "the window event"}{"idx": 3680, "node_name": "e", "Dec": "the window event"}{"idx": 3682, "node_name": "e", "Dec": "the window event"}{"idx": 3684, "node_name": "e", "Dec": "the window event"}{"idx": 3686, "node_name": "e", "Dec": "the window event"}{"idx": 3688, "node_name": "e", "Dec": "the window event"}{"idx": 3690, "node_name": "e", "Dec": "the window event"}{"idx": 3692, "node_name": "e", "Dec": "the window event"}{"idx": 3694, "node_name": "e", "Dec": "the window event"}{"idx": 3696, "node_name": "e", "Dec": "the window event"}{"idx": 3698, "node_name": "e", "Dec": "the action event"}{"idx": 3700, "node_name": "e", "Dec": "the item event"}{"idx": 3702, "node_name": "e", "Dec": "the adjustment event"}{"idx": 3704, "node_name": "e", "Dec": "the item event"}{"idx": 3706, "node_name": "e", "Dec": "the item event"}{"idx": 3708, "node_name": "e", "Dec": "the item event"}{"idx": 3710, "node_name": "e", "Dec": "the item event"}{"idx": 3712, "node_name": "e", "Dec": "the item event"}{"idx": 3714, "node_name": "e", "Dec": "the mouse event"}{"idx": 3716, "node_name": "a", "Dec": "component-listener-a"}{"idx": 3717, "node_name": "b", "Dec": "component-listener-b"}{"idx": 3719, "node_name": "a", "Dec": "container-listener-a"}{"idx": 3720, "node_name": "b", "Dec": "container-listener-b"}{"idx": 3722, "node_name": "a", "Dec": "focus-listener-a"}{"idx": 3723, "node_name": "b", "Dec": "focus-listener-b"}{"idx": 3725, "node_name": "a", "Dec": "key-listener-a"}{"idx": 3726, "node_name": "b", "Dec": "key-listener-b"}{"idx": 3728, "node_name": "a", "Dec": "mouse-listener-a"}{"idx": 3729, "node_name": "b", "Dec": "mouse-listener-b"}{"idx": 3731, "node_name": "a", "Dec": "mouse-motion-listener-a"}{"idx": 3732, "node_name": "b", "Dec": "mouse-motion-listener-b"}{"idx": 3734, "node_name": "a", "Dec": "window-listener-a"}{"idx": 3735, "node_name": "b", "Dec": "window-listener-b"}{"idx": 3737, "node_name": "a", "Dec": "window-state-listener-a"}{"idx": 3738, "node_name": "b", "Dec": "window-state-listener-b"}{"idx": 3740, "node_name": "a", "Dec": "window-focus-listener-a"}{"idx": 3741, "node_name": "b", "Dec": "window-focus-listener-b"}{"idx": 3743, "node_name": "a", "Dec": "action-listener-a"}{"idx": 3744, "node_name": "b", "Dec": "action-listener-b"}{"idx": 3746, "node_name": "a", "Dec": "item-listener-a"}{"idx": 3747, "node_name": "b", "Dec": "item-listener-b"}{"idx": 3749, "node_name": "a", "Dec": "adjustment-listener-a"}{"idx": 3750, "node_name": "b", "Dec": "adjustment-listener-b"}{"idx": 3752, "node_name": "a", "Dec": "text-listener-a"}{"idx": 3753, "node_name": "b", "Dec": "text-listener-b"}{"idx": 3755, "node_name": "a", "Dec": "input-method-listener-a"}{"idx": 3756, "node_name": "b", "Dec": "input-method-listener-b"}{"idx": 3758, "node_name": "a", "Dec": "hierarchy-listener-a"}{"idx": 3759, "node_name": "b", "Dec": "hierarchy-listener-b"}{"idx": 3761, "node_name": "a", "Dec": "hierarchy-bounds-listener-a"}{"idx": 3762, "node_name": "b", "Dec": "hierarchy-bounds-listener-b"}{"idx": 3764, "node_name": "a", "Dec": "mouse-wheel-listener-a"}{"idx": 3765, "node_name": "b", "Dec": "mouse-wheel-listener-b"}{"idx": 3767, "node_name": "l", "Dec": "component-listener-l"}{"idx": 3768, "node_name": "oldl", "Dec": "the component-listener being removed"}{"idx": 3770, "node_name": "l", "Dec": "container-listener-l"}{"idx": 3771, "node_name": "oldl", "Dec": "the container-listener being removed"}{"idx": 3773, "node_name": "l", "Dec": "focus-listener-l"}{"idx": 3774, "node_name": "oldl", "Dec": "the focus-listener being removed"}{"idx": 3776, "node_name": "l", "Dec": "key-listener-l"}{"idx": 3777, "node_name": "oldl", "Dec": "the key-listener being removed"}{"idx": 3779, "node_name": "l", "Dec": "mouse-listener-l"}{"idx": 3780, "node_name": "oldl", "Dec": "the mouse-listener being removed"}{"idx": 3782, "node_name": "l", "Dec": "mouse-motion-listener-l"}{"idx": 3783, "node_name": "oldl", "Dec": "the mouse-motion-listener being removed"}{"idx": 3785, "node_name": "l", "Dec": "window-listener-l"}{"idx": 3786, "node_name": "oldl", "Dec": "the window-listener being removed"}{"idx": 3788, "node_name": "l", "Dec": "window-state-listener-l"}{"idx": 3789, "node_name": "oldl", "Dec": "the window-state-listener being removed"}{"idx": 3791, "node_name": "l", "Dec": "window-focus-listener-l"}{"idx": 3792, "node_name": "oldl", "Dec": "the window-focus-listener being removed"}{"idx": 3794, "node_name": "l", "Dec": "action-listener-l"}{"idx": 3795, "node_name": "oldl", "Dec": "the action-listener being removed"}{"idx": 3797, "node_name": "l", "Dec": "item-listener-l"}{"idx": 3798, "node_name": "oldl", "Dec": "the item-listener being removed"}{"idx": 3800, "node_name": "l", "Dec": "adjustment-listener-l"}{"idx": 3801, "node_name": "oldl", "Dec": "the adjustment-listener being removed"}{"idx": 3803, "node_name": "l", "Dec": "text-listener-l"}{"idx": 3804, "node_name": "oldl", "Dec": "the text-listener being removed"}{"idx": 3806, "node_name": "l", "Dec": "input-method-listener-l"}{"idx": 3807, "node_name": "oldl", "Dec": "the input-method-listener being removed"}{"idx": 3809, "node_name": "l", "Dec": "hierarchy-listener-l"}{"idx": 3810, "node_name": "oldl", "Dec": "the hierarchy-listener being removed"}{"idx": 3812, "node_name": "l", "Dec": "hierarchy-bounds-listener-l"}{"idx": 3813, "node_name": "oldl", "Dec": "the hierarchy-bounds-listener being removed"}{"idx": 3815, "node_name": "l", "Dec": "mouse-wheel-listener-l"}{"idx": 3816, "node_name": "oldl", "Dec": "the mouse-wheel-listener being removed"}{"idx": 3818, "node_name": "a", "Dec": "event listener-a"}{"idx": 3819, "node_name": "b", "Dec": "event listener-b"}{"idx": 3821, "node_name": "l", "Dec": "the listener being removed from"}{"idx": 3822, "node_name": "oldl", "Dec": "the listener being removed"}{"idx": 3824, "node_name": "s", "Dec": "the stream to save to"}{"idx": 3825, "node_name": "k", "Dec": "a prefix stream to put before each serializable listener"}{"idx": 3827, "node_name": "s", "Dec": "the stream to save to"}{"idx": 3828, "node_name": "k", "Dec": "a prefix stream to put before each serializable listener"}{"idx": 3829, "node_name": "l", "Dec": "the listener chain to save"}{"idx": 3831, "node_name": "l", "Dec": "the specified java.util.eventlistener"}{"idx": 3832, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 3835, "node_name": "msg", "Dec": "the detail message"}{"idx": 3839, "node_name": "keychar", "Dec": "the character value for a keyboard key"}{"idx": 3840, "node_name": "keycode", "Dec": "the key code for this awtkeystroke"}{"idx": 3841, "node_name": "modifiers", "Dec": "a bitwise-ored combination of any modifiers"}{"idx": 3842, "node_name": "onkeyrelease", "Dec": "true if this awtkeystroke corresponds to a key release ; false otherwise"}{"idx": 3844, "node_name": "keychar", "Dec": "the character value for a keyboard key"}{"idx": 3846, "node_name": "keychar", "Dec": "the character object for a keyboard character"}{"idx": 3847, "node_name": "modifiers", "Dec": "a bitwise-ored combination of any modifiers"}{"idx": 3849, "node_name": "keycode", "Dec": "an int specifying the numeric code for a keyboard key"}{"idx": 3850, "node_name": "modifiers", "Dec": "a bitwise-ored combination of any modifiers"}{"idx": 3851, "node_name": "onkeyrelease", "Dec": "true if the awtkeystroke should represent a key release ; false otherwise"}{"idx": 3853, "node_name": "keycode", "Dec": "an int specifying the numeric code for a keyboard key"}{"idx": 3854, "node_name": "modifiers", "Dec": "a bitwise-ored combination of any modifiers"}{"idx": 3856, "node_name": "anevent", "Dec": "the keyevent from which to obtain the awtkeystroke"}{"idx": 3858, "node_name": "s", "Dec": "a string formatted as described above"}{"idx": 3866, "node_name": "anobject", "Dec": "the object to compare this object to"}{"idx": 3871, "node_name": "name", "Dec": "the name of the awtpermission"}{"idx": 3873, "node_name": "name", "Dec": "the name of the awtpermission"}{"idx": 3874, "node_name": "actions", "Dec": "should be null"}{"idx": 3883, "node_name": "width", "Dec": "the width of this basicstroke . the width must be greater than or equal to 0.0f . if width is set to 0.0f , the stroke is rendered as the thinnest possible line for the target device and the antialias hint setting ."}{"idx": 3884, "node_name": "cap", "Dec": "the decoration of the ends of a basicstroke"}{"idx": 3885, "node_name": "join", "Dec": "the decoration applied where path segments meet"}{"idx": 3886, "node_name": "miterlimit", "Dec": "the limit to trim the miter join . the miterlimit must be greater than or equal to 1.0f ."}{"idx": 3887, "node_name": "dash", "Dec": "the array representing the dashing pattern"}{"idx": 3888, "node_name": "dash_phase", "Dec": "the offset to start the dashing pattern"}{"idx": 3890, "node_name": "width", "Dec": "the width of the basicstroke"}{"idx": 3891, "node_name": "cap", "Dec": "the decoration of the ends of a basicstroke"}{"idx": 3892, "node_name": "join", "Dec": "the decoration applied where path segments meet"}{"idx": 3893, "node_name": "miterlimit", "Dec": "the limit to trim the miter join"}{"idx": 3895, "node_name": "width", "Dec": "the width of the basicstroke"}{"idx": 3896, "node_name": "cap", "Dec": "the decoration of the ends of a basicstroke"}{"idx": 3897, "node_name": "join", "Dec": "the decoration applied where path segments meet"}{"idx": 3899, "node_name": "width", "Dec": "the width of the basicstroke"}{"idx": 3902, "node_name": "s", "Dec": "the shape boundary be stroked"}{"idx": 3911, "node_name": "obj", "Dec": "the specified object to compare to this basicstroke"}{"idx": 3928, "node_name": "hgap", "Dec": "the horizontal gap ."}{"idx": 3929, "node_name": "vgap", "Dec": "the vertical gap ."}{"idx": 3932, "node_name": "hgap", "Dec": "the horizontal gap between components"}{"idx": 3935, "node_name": "vgap", "Dec": "the vertical gap between components"}{"idx": 3937, "node_name": "comp", "Dec": "the component to be added ."}{"idx": 3938, "node_name": "constraints", "Dec": "an object that specifies how and where the component is added to the layout ."}{"idx": 3940, "node_name": "comp", "Dec": "the component to be removed ."}{"idx": 3942, "node_name": "constraints", "Dec": "the desired constraint , one of center , north , south , west , east , page_start , page_end , line_start , line_end"}{"idx": 3944, "node_name": "constraints", "Dec": "the desired absolute position , one of center , north , south , east , west"}{"idx": 3945, "node_name": "target", "Dec": "the container used to obtain the constraint location based on the target container's component orientation ."}{"idx": 3947, "node_name": "comp", "Dec": "the component to be queried"}{"idx": 3949, "node_name": "target", "Dec": "the container in which to do the layout ."}{"idx": 3951, "node_name": "target", "Dec": "the container in which to do the layout ."}{"idx": 3953, "node_name": "target", "Dec": "the component which needs to be laid out"}{"idx": 3955, "node_name": "parent", "Dec": "the target container"}{"idx": 3957, "node_name": "parent", "Dec": "the target container"}{"idx": 3959, "node_name": "target", "Dec": "the target container"}{"idx": 3961, "node_name": "target", "Dec": "the container in which to do the layout ."}{"idx": 3972, "node_name": "frontcaps", "Dec": "the capabilities of the front buffer ; cannot be null"}{"idx": 3973, "node_name": "backcaps", "Dec": "the capabilities of the back and intermediate buffers ; cannot be null"}{"idx": 3974, "node_name": "flipcontents", "Dec": "the contents of the back buffer after page-flipping , null if page flipping is not used ( implies blitting )"}{"idx": 3989, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 3991, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 3994, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 4001, "node_name": "label", "Dec": "a string label for the button , or null for no label"}{"idx": 4005, "node_name": "label", "Dec": "the new label , or null if the button has no label ."}{"idx": 4007, "node_name": "command", "Dec": "a string used to set the button's action command . if the string is null then the action command is set to match the label of the button ."}{"idx": 4010, "node_name": "l", "Dec": "the action listener"}{"idx": 4012, "node_name": "l", "Dec": "the action listener"}{"idx": 4015, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 4017, "node_name": "e", "Dec": "the event"}{"idx": 4019, "node_name": "e", "Dec": "the action event"}{"idx": 4028, "node_name": "config", "Dec": "a reference to a graphicsconfiguration object or null"}{"idx": 4031, "node_name": "g", "Dec": "the specified graphics context"}{"idx": 4033, "node_name": "g", "Dec": "the specified graphics context"}{"idx": 4035, "node_name": "numbuffers", "Dec": "number of buffers to create , including the front buffer"}{"idx": 4037, "node_name": "numbuffers", "Dec": "number of buffers to create"}{"idx": 4038, "node_name": "caps", "Dec": "the required capabilities for creating the buffer strategy ; cannot be null"}{"idx": 4044, "node_name": "hgap", "Dec": "the horizontal gap ."}{"idx": 4045, "node_name": "vgap", "Dec": "the vertical gap ."}{"idx": 4048, "node_name": "hgap", "Dec": "the horizontal gap between components ."}{"idx": 4051, "node_name": "vgap", "Dec": "the vertical gap between components ."}{"idx": 4053, "node_name": "comp", "Dec": "the component to be added ."}{"idx": 4054, "node_name": "constraints", "Dec": "a tag that identifies a particular card in the layout ."}{"idx": 4056, "node_name": "comp", "Dec": "the component to be removed ."}{"idx": 4058, "node_name": "parent", "Dec": "the parent container in which to do the layout"}{"idx": 4060, "node_name": "parent", "Dec": "the parent container in which to do the layout"}{"idx": 4062, "node_name": "target", "Dec": "the component which needs to be laid out"}{"idx": 4064, "node_name": "parent", "Dec": "the target container"}{"idx": 4066, "node_name": "parent", "Dec": "the target container"}{"idx": 4068, "node_name": "target", "Dec": "the target container"}{"idx": 4070, "node_name": "parent", "Dec": "the parent container in which to do the layout"}{"idx": 4072, "node_name": "parent", "Dec": "the parent container in which to do the layout"}{"idx": 4074, "node_name": "parent", "Dec": "the parent container in which to do the layout"}{"idx": 4076, "node_name": "parent", "Dec": "the parent container in which to do the layout"}{"idx": 4078, "node_name": "parent", "Dec": "the parent container in which to do the layout"}{"idx": 4080, "node_name": "parent", "Dec": "the parent container in which to do the layout"}{"idx": 4081, "node_name": "name", "Dec": "the component name"}{"idx": 4086, "node_name": "e", "Dec": "the event to be processed"}{"idx": 4091, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 4093, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 4096, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 4104, "node_name": "label", "Dec": "a string label for this check box , or null for no label ."}{"idx": 4106, "node_name": "label", "Dec": "a string label for this check box , or null for no label"}{"idx": 4107, "node_name": "state", "Dec": "the initial state of this check box"}{"idx": 4109, "node_name": "label", "Dec": "a string label for this check box , or null for no label ."}{"idx": 4110, "node_name": "state", "Dec": "the initial state of this check box ."}{"idx": 4111, "node_name": "group", "Dec": "a check box group for this check box , or null for no group ."}{"idx": 4113, "node_name": "label", "Dec": "a string label for this check box , or null for no label ."}{"idx": 4114, "node_name": "group", "Dec": "a check box group for this check box , or null for no group ."}{"idx": 4115, "node_name": "state", "Dec": "the initial state of this check box ."}{"idx": 4119, "node_name": "label", "Dec": "a string to set as the new label , or null for no label ."}{"idx": 4122, "node_name": "state", "Dec": "the boolean state of the check box"}{"idx": 4126, "node_name": "g", "Dec": "the new check box group , or null to remove this check box from any check box group"}{"idx": 4128, "node_name": "l", "Dec": "the item listener"}{"idx": 4130, "node_name": "l", "Dec": "the item listener"}{"idx": 4133, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 4135, "node_name": "e", "Dec": "the event"}{"idx": 4137, "node_name": "e", "Dec": "the item event"}{"idx": 4144, "node_name": "box", "Dec": "the checkbox to set as the current selection ."}{"idx": 4152, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 4154, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 4157, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 4164, "node_name": "label", "Dec": "a string label for the check box menu item , or null for an unlabeled menu item ."}{"idx": 4166, "node_name": "label", "Dec": "a string label for the check box menu item , or null for an unlabeled menu item ."}{"idx": 4167, "node_name": "state", "Dec": "the initial state of the menu item , where true indicates \" on \" and false indicates \" off . \""}{"idx": 4171, "node_name": "b", "Dec": "true if the check box menu item is on , otherwise false"}{"idx": 4174, "node_name": "l", "Dec": "the item listener"}{"idx": 4176, "node_name": "l", "Dec": "the item listener"}{"idx": 4179, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 4181, "node_name": "e", "Dec": "the event"}{"idx": 4183, "node_name": "e", "Dec": "the item event"}{"idx": 4192, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 4194, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 4200, "node_name": "index", "Dec": "the index at which to begin"}{"idx": 4202, "node_name": "item", "Dec": "the item to be added"}{"idx": 4204, "node_name": "item", "Dec": "the item to be added"}{"idx": 4206, "node_name": "item", "Dec": "the non-null item to be inserted"}{"idx": 4207, "node_name": "index", "Dec": "the position at which the item should be inserted"}{"idx": 4209, "node_name": "item", "Dec": "the item to remove from this choice menu"}{"idx": 4211, "node_name": "position", "Dec": "the position of the item"}{"idx": 4217, "node_name": "pos", "Dec": "the position of the selected item"}{"idx": 4219, "node_name": "str", "Dec": "the specified string"}{"idx": 4221, "node_name": "l", "Dec": "the item listener"}{"idx": 4223, "node_name": "l", "Dec": "the item listener"}{"idx": 4226, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 4228, "node_name": "e", "Dec": "the event"}{"idx": 4230, "node_name": "e", "Dec": "the item event"}{"idx": 4235, "node_name": "s", "Dec": "the specified detail message"}{"idx": 4268, "node_name": "type", "Dec": "one of the colorspace type constants"}{"idx": 4269, "node_name": "numcomponents", "Dec": "the number of components in the color space"}{"idx": 4271, "node_name": "colorspace", "Dec": "a specific color space identified by one of the predefined class constants ( e.g. cs_srgb , cs_linear_rgb , cs_ciexyz , cs_gray , or cs_pycc )"}{"idx": 4274, "node_name": "colorvalue", "Dec": "a float array with length of at least the number of components in this colorspace"}{"idx": 4276, "node_name": "rgbvalue", "Dec": "a float array with length of at least 3"}{"idx": 4278, "node_name": "colorvalue", "Dec": "a float array with length of at least the number of components in this colorspace"}{"idx": 4280, "node_name": "colorvalue", "Dec": "a float array with length of at least 3"}{"idx": 4284, "node_name": "idx", "Dec": "the component index"}{"idx": 4286, "node_name": "component", "Dec": "the component index"}{"idx": 4288, "node_name": "component", "Dec": "the component index"}{"idx": 4291, "node_name": "profile", "Dec": "the specified icc_profile object"}{"idx": 4294, "node_name": "colorvalue", "Dec": "a float array with length of at least the number of components in this colorspace"}{"idx": 4296, "node_name": "rgbvalue", "Dec": "a float array with length of at least 3"}{"idx": 4298, "node_name": "colorvalue", "Dec": "a float array with length of at least the number of components in this colorspace"}{"idx": 4300, "node_name": "colorvalue", "Dec": "a float array with length of at least 3"}{"idx": 4302, "node_name": "component", "Dec": "the component index"}{"idx": 4304, "node_name": "component", "Dec": "the component index"}{"idx": 4426, "node_name": "data", "Dec": "the specified icc profile data"}{"idx": 4428, "node_name": "cspace", "Dec": "the type of color space to create a profile for . the specified type is one of the color space constants defined in the colorspace class ."}{"idx": 4430, "node_name": "filename", "Dec": "the file that contains the data for the profile"}{"idx": 4432, "node_name": "s", "Dec": "the input stream from which to read the profile data"}{"idx": 4439, "node_name": "filename", "Dec": "the file to write the profile data to"}{"idx": 4441, "node_name": "s", "Dec": "the stream to write the profile data to"}{"idx": 4444, "node_name": "tagsignature", "Dec": "the icc tag signature for the data element you want to get"}{"idx": 4446, "node_name": "tagsignature", "Dec": "the icc tag signature for the data element you want to set"}{"idx": 4447, "node_name": "tagdata", "Dec": "the data to set for the specified tag signature"}{"idx": 4461, "node_name": "component", "Dec": "the icc_profilergb constant that represents the component whose trc you want to retrieve"}{"idx": 4463, "node_name": "component", "Dec": "the icc_profilergb constant that represents the component whose trc you want to retrieve : redcomponent , greencomponent , or bluecomponent"}{"idx": 4492, "node_name": "r", "Dec": "the red component"}{"idx": 4493, "node_name": "g", "Dec": "the green component"}{"idx": 4494, "node_name": "b", "Dec": "the blue component"}{"idx": 4496, "node_name": "r", "Dec": "the red component"}{"idx": 4497, "node_name": "g", "Dec": "the green component"}{"idx": 4498, "node_name": "b", "Dec": "the blue component"}{"idx": 4499, "node_name": "a", "Dec": "the alpha component"}{"idx": 4501, "node_name": "rgb", "Dec": "the combined rgb components"}{"idx": 4503, "node_name": "rgba", "Dec": "the combined rgba components"}{"idx": 4504, "node_name": "hasalpha", "Dec": "true if the alpha bits are valid ; false otherwise"}{"idx": 4506, "node_name": "r", "Dec": "the red component"}{"idx": 4507, "node_name": "g", "Dec": "the green component"}{"idx": 4508, "node_name": "b", "Dec": "the blue component"}{"idx": 4510, "node_name": "r", "Dec": "the red component"}{"idx": 4511, "node_name": "g", "Dec": "the green component"}{"idx": 4512, "node_name": "b", "Dec": "the blue component"}{"idx": 4513, "node_name": "a", "Dec": "the alpha component"}{"idx": 4515, "node_name": "cspace", "Dec": "the colorspace to be used to interpret the components"}{"idx": 4516, "node_name": "components", "Dec": "an arbitrary number of color components that is compatible with the colorspace"}{"idx": 4517, "node_name": "alpha", "Dec": "alpha value"}{"idx": 4527, "node_name": "obj", "Dec": "the object to test for equality with this color"}{"idx": 4530, "node_name": "nm", "Dec": "a string that represents an opaque color as a 24-bit integer"}{"idx": 4532, "node_name": "nm", "Dec": "the name of the color property"}{"idx": 4534, "node_name": "nm", "Dec": "the name of the color property"}{"idx": 4535, "node_name": "v", "Dec": "the default color"}{"idx": 4537, "node_name": "nm", "Dec": "the name of the color property"}{"idx": 4538, "node_name": "v", "Dec": "the default color value , as an integer"}{"idx": 4540, "node_name": "hue", "Dec": "the hue component of the color"}{"idx": 4541, "node_name": "saturation", "Dec": "the saturation of the color"}{"idx": 4542, "node_name": "brightness", "Dec": "the brightness of the color"}{"idx": 4544, "node_name": "r", "Dec": "the red component of the color"}{"idx": 4545, "node_name": "g", "Dec": "the green component of the color"}{"idx": 4546, "node_name": "b", "Dec": "the blue component of the color"}{"idx": 4547, "node_name": "hsbvals", "Dec": "the array used to return the three hsb values , or null"}{"idx": 4549, "node_name": "h", "Dec": "the hue component"}{"idx": 4550, "node_name": "s", "Dec": "the saturation of the color"}{"idx": 4551, "node_name": "b", "Dec": "the brightness of the color"}{"idx": 4553, "node_name": "comparray", "Dec": "an array that getRGBComponents(float[]) fills with color and alpha components and returns"}{"idx": 4555, "node_name": "comparray", "Dec": "an array that getRGBColorComponents(float[]) fills with color components and returns"}{"idx": 4557, "node_name": "comparray", "Dec": "an array that getComponents(float[]) fills with the color and alpha components of this color in its colorspace and returns"}{"idx": 4559, "node_name": "comparray", "Dec": "an array that getColorComponents(float[]) fills with the color components of this color in its colorspace and returns"}{"idx": 4561, "node_name": "cspace", "Dec": "a specified colorspace"}{"idx": 4562, "node_name": "comparray", "Dec": "an array that getComponents(java.awt.color.ColorSpace,float[]) fills with the color and alpha components of this color in the specified colorspace and returns"}{"idx": 4564, "node_name": "cspace", "Dec": "a specified colorspace"}{"idx": 4565, "node_name": "comparray", "Dec": "an array that getColorComponents(java.awt.color.ColorSpace,float[]) fills with the color components of this color in the specified colorspace"}{"idx": 4568, "node_name": "cm", "Dec": "the preferred colormodel which represents the most convenient format for the caller to receive the pixel data , or null if there is no preference ."}{"idx": 4569, "node_name": "r", "Dec": "the device space bounding box of the graphics primitive being rendered ."}{"idx": 4570, "node_name": "r2d", "Dec": "the user space bounding box of the graphics primitive being rendered ."}{"idx": 4571, "node_name": "xform", "Dec": "the affinetransform from user space into device space ."}{"idx": 4572, "node_name": "hints", "Dec": "the set of hints that the context object can use to choose between rendering alternatives ."}{"idx": 4576, "node_name": "s", "Dec": "the specified detail message"}{"idx": 4586, "node_name": "listener", "Dec": "the property change listener to be added"}{"idx": 4588, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 4597, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 4602, "node_name": "c", "Dec": "the new color for the background"}{"idx": 4605, "node_name": "c", "Dec": "the new color for the foreground"}{"idx": 4608, "node_name": "cursor", "Dec": "the new cursor for the object"}{"idx": 4611, "node_name": "f", "Dec": "the new font for the object"}{"idx": 4613, "node_name": "f", "Dec": "the font"}{"idx": 4616, "node_name": "b", "Dec": "if true , enables this object ; otherwise , disables it"}{"idx": 4619, "node_name": "b", "Dec": "if true , shows this object ; otherwise , hides it"}{"idx": 4622, "node_name": "p", "Dec": "the point relative to the coordinate system of the object"}{"idx": 4626, "node_name": "p", "Dec": "the coordinates of the object"}{"idx": 4629, "node_name": "r", "Dec": "a rectangle indicating this component's bounds"}{"idx": 4632, "node_name": "d", "Dec": "the dimension specifying the new size of the object"}{"idx": 4634, "node_name": "p", "Dec": "the point defining the top-left corner of the accessible , given in the coordinate space of the object's parent"}{"idx": 4638, "node_name": "l", "Dec": "the focus listener"}{"idx": 4640, "node_name": "l", "Dec": "the focus listener"}{"idx": 4644, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 4652, "node_name": "numbuffers", "Dec": "number of buffers to create , including the front buffer"}{"idx": 4653, "node_name": "caps", "Dec": "the capabilities of the buffers"}{"idx": 4656, "node_name": "numbuffers", "Dec": "the number of buffers to create"}{"idx": 4670, "node_name": "numbuffers", "Dec": "the number of buffers"}{"idx": 4671, "node_name": "caps", "Dec": "the capabilities of the buffers"}{"idx": 4673, "node_name": "numbuffers", "Dec": "number of buffers to create ; must be greater than one"}{"idx": 4674, "node_name": "caps", "Dec": "the capabilities of the buffers . buffercapabilities.ispageflipping must be true ."}{"idx": 4677, "node_name": "flipaction", "Dec": "an integer value describing the flipping action for the contents of the back buffer . this should be one of the values of the buffercapabilities.flipcontents property ."}{"idx": 4696, "node_name": "name", "Dec": "the string that is to be this component's name"}{"idx": 4699, "node_name": "dt", "Dec": "the droptarget"}{"idx": 4711, "node_name": "b", "Dec": "if true , this component is enabled ; otherwise this component is disabled"}{"idx": 4714, "node_name": "enable", "Dec": "true to enable , false to disable"}{"idx": 4716, "node_name": "b", "Dec": "if true , shows this component ; otherwise , hides this component"}{"idx": 4719, "node_name": "c", "Dec": "the color to become this component's foreground color ; if this parameter is null then this component will inherit the foreground color of its parent"}{"idx": 4723, "node_name": "c", "Dec": "the color to become this component's color ; if this parameter is null , then this component will inherit the background color of its parent"}{"idx": 4727, "node_name": "f", "Dec": "the font to become this component's font ; if this parameter is null then this component will inherit the font of its parent"}{"idx": 4731, "node_name": "l", "Dec": "the locale to become this component's locale"}{"idx": 4736, "node_name": "x", "Dec": "the x-coordinate of the new location's top-left corner in the parent's coordinate space"}{"idx": 4737, "node_name": "y", "Dec": "the y-coordinate of the new location's top-left corner in the parent's coordinate space"}{"idx": 4739, "node_name": "p", "Dec": "the point defining the top-left corner of the new location , given in the coordinate space of this component's parent"}{"idx": 4742, "node_name": "width", "Dec": "the new width of this component in pixels"}{"idx": 4743, "node_name": "height", "Dec": "the new height of this component in pixels"}{"idx": 4745, "node_name": "d", "Dec": "the dimension specifying the new size of this component"}{"idx": 4748, "node_name": "x", "Dec": "the new x-coordinate of this component"}{"idx": 4749, "node_name": "y", "Dec": "the new y-coordinate of this component"}{"idx": 4750, "node_name": "width", "Dec": "the new width of this component"}{"idx": 4751, "node_name": "height", "Dec": "the new height of this component"}{"idx": 4753, "node_name": "r", "Dec": "the new bounding rectangle for this component"}{"idx": 4759, "node_name": "rv", "Dec": "the return value , modified to the components bounds"}{"idx": 4761, "node_name": "rv", "Dec": "the return value , modified to the components size"}{"idx": 4763, "node_name": "rv", "Dec": "the return value , modified to the components location"}{"idx": 4767, "node_name": "preferredsize", "Dec": "the new preferred size , or null"}{"idx": 4771, "node_name": "minimumsize", "Dec": "the new minimum size of this component"}{"idx": 4775, "node_name": "maximumsize", "Dec": "a dimension containing the desired maximum allowable size"}{"idx": 4781, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 4782, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 4790, "node_name": "font", "Dec": "the font for which font metrics is to be obtained"}{"idx": 4792, "node_name": "cursor", "Dec": "one of the constants defined by the cursor class ; if this parameter is null then this component will inherit the cursor of its parent"}{"idx": 4796, "node_name": "g", "Dec": "the graphics context to use for painting"}{"idx": 4798, "node_name": "g", "Dec": "the specified context to use for updating"}{"idx": 4800, "node_name": "g", "Dec": "the graphics context to use for painting"}{"idx": 4803, "node_name": "tm", "Dec": "maximum time in milliseconds before update"}{"idx": 4805, "node_name": "x", "Dec": "the x coordinate"}{"idx": 4806, "node_name": "y", "Dec": "the y coordinate"}{"idx": 4807, "node_name": "width", "Dec": "the width"}{"idx": 4808, "node_name": "height", "Dec": "the height"}{"idx": 4810, "node_name": "tm", "Dec": "maximum time in milliseconds before update"}{"idx": 4811, "node_name": "x", "Dec": "the x coordinate"}{"idx": 4812, "node_name": "y", "Dec": "the y coordinate"}{"idx": 4813, "node_name": "width", "Dec": "the width"}{"idx": 4814, "node_name": "height", "Dec": "the height"}{"idx": 4816, "node_name": "g", "Dec": "the graphics context to use for printing"}{"idx": 4818, "node_name": "g", "Dec": "the graphics context to use for printing"}{"idx": 4820, "node_name": "img", "Dec": "the image being observed"}{"idx": 4821, "node_name": "infoflags", "Dec": "see imageupdate for more information"}{"idx": 4822, "node_name": "x", "Dec": "the x coordinate"}{"idx": 4823, "node_name": "y", "Dec": "the y coordinate"}{"idx": 4824, "node_name": "w", "Dec": "the width"}{"idx": 4825, "node_name": "h", "Dec": "the height"}{"idx": 4827, "node_name": "producer", "Dec": "the image producer"}{"idx": 4829, "node_name": "width", "Dec": "the specified width"}{"idx": 4830, "node_name": "height", "Dec": "the specified height"}{"idx": 4832, "node_name": "width", "Dec": "the specified width"}{"idx": 4833, "node_name": "height", "Dec": "the specified height"}{"idx": 4835, "node_name": "width", "Dec": "the specified width"}{"idx": 4836, "node_name": "height", "Dec": "the specified height"}{"idx": 4837, "node_name": "caps", "Dec": "the image capabilities"}{"idx": 4839, "node_name": "image", "Dec": "the image for which to prepare a screen representation"}{"idx": 4840, "node_name": "observer", "Dec": "the imageobserver object to be notified as the image is being prepared"}{"idx": 4842, "node_name": "image", "Dec": "the instance of image for which to prepare a screen representation"}{"idx": 4843, "node_name": "width", "Dec": "the width of the desired screen representation"}{"idx": 4844, "node_name": "height", "Dec": "the height of the desired screen representation"}{"idx": 4845, "node_name": "observer", "Dec": "the imageobserver object to be notified as the image is being prepared"}{"idx": 4847, "node_name": "image", "Dec": "the image object whose status is being checked"}{"idx": 4848, "node_name": "observer", "Dec": "the imageobserver object to be notified as the image is being prepared"}{"idx": 4850, "node_name": "image", "Dec": "the image object whose status is being checked"}{"idx": 4851, "node_name": "width", "Dec": "the width of the scaled version whose status is to be checked"}{"idx": 4852, "node_name": "height", "Dec": "the height of the scaled version whose status is to be checked"}{"idx": 4853, "node_name": "observer", "Dec": "the imageobserver object to be notified as the image is being prepared"}{"idx": 4855, "node_name": "ignorerepaint", "Dec": "true if the paint messages from the os should be ignored ; otherwise false"}{"idx": 4858, "node_name": "x", "Dec": "the x coordinate of the point"}{"idx": 4859, "node_name": "y", "Dec": "the y coordinate of the point"}{"idx": 4861, "node_name": "p", "Dec": "the point"}{"idx": 4863, "node_name": "x", "Dec": "the x coordinate"}{"idx": 4864, "node_name": "y", "Dec": "the y coordinate"}{"idx": 4866, "node_name": "p", "Dec": "the point"}{"idx": 4868, "node_name": "e", "Dec": "the event"}{"idx": 4870, "node_name": "l", "Dec": "the component listener"}{"idx": 4872, "node_name": "l", "Dec": "the component listener"}{"idx": 4875, "node_name": "l", "Dec": "the focus listener"}{"idx": 4877, "node_name": "l", "Dec": "the focus listener"}{"idx": 4880, "node_name": "l", "Dec": "the hierarchy listener"}{"idx": 4882, "node_name": "l", "Dec": "the hierarchy listener"}{"idx": 4885, "node_name": "l", "Dec": "the hierarchy bounds listener"}{"idx": 4887, "node_name": "l", "Dec": "the hierarchy bounds listener"}{"idx": 4890, "node_name": "l", "Dec": "the key listener ."}{"idx": 4892, "node_name": "l", "Dec": "the key listener"}{"idx": 4895, "node_name": "l", "Dec": "the mouse listener"}{"idx": 4897, "node_name": "l", "Dec": "the mouse listener"}{"idx": 4900, "node_name": "l", "Dec": "the mouse motion listener"}{"idx": 4902, "node_name": "l", "Dec": "the mouse motion listener"}{"idx": 4905, "node_name": "l", "Dec": "the mouse wheel listener"}{"idx": 4907, "node_name": "l", "Dec": "the mouse wheel listener ."}{"idx": 4910, "node_name": "l", "Dec": "the input method listener"}{"idx": 4912, "node_name": "l", "Dec": "the input method listener"}{"idx": 4915, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 4919, "node_name": "eventstoenable", "Dec": "the event mask defining the event types"}{"idx": 4921, "node_name": "eventstodisable", "Dec": "the event mask defining the event types"}{"idx": 4923, "node_name": "existingevent", "Dec": "the event already on the eventqueue"}{"idx": 4924, "node_name": "newevent", "Dec": "the event being posted to the eventqueue"}{"idx": 4926, "node_name": "e", "Dec": "the event"}{"idx": 4928, "node_name": "e", "Dec": "the component event"}{"idx": 4930, "node_name": "e", "Dec": "the focus event"}{"idx": 4932, "node_name": "e", "Dec": "the key event"}{"idx": 4934, "node_name": "e", "Dec": "the mouse event"}{"idx": 4936, "node_name": "e", "Dec": "the mouse motion event"}{"idx": 4938, "node_name": "e", "Dec": "the mouse wheel event"}{"idx": 4940, "node_name": "e", "Dec": "the input method event"}{"idx": 4942, "node_name": "e", "Dec": "the hierarchy event"}{"idx": 4944, "node_name": "e", "Dec": "the hierarchy event"}{"idx": 4949, "node_name": "focusable", "Dec": "indicates whether this component is focusable"}{"idx": 4951, "node_name": "id", "Dec": "one of keyboardfocusmanager.forward_traversal_keys , keyboardfocusmanager.backward_traversal_keys , or keyboardfocusmanager.up_cycle_traversal_keys"}{"idx": 4952, "node_name": "keystrokes", "Dec": "the set of awtkeystroke for the specified operation"}{"idx": 4954, "node_name": "id", "Dec": "one of keyboardfocusmanager.forward_traversal_keys , keyboardfocusmanager.backward_traversal_keys , or keyboardfocusmanager.up_cycle_traversal_keys"}{"idx": 4956, "node_name": "id", "Dec": "one of keyboardfocusmanager.forward_traversal_keys , keyboardfocusmanager.backward_traversal_keys , or keyboardfocusmanager.up_cycle_traversal_keys"}{"idx": 4958, "node_name": "focustraversalkeysenabled", "Dec": "whether focus traversal keys are enabled for this component"}{"idx": 4962, "node_name": "cause", "Dec": "the cause why the focus is requested"}{"idx": 4964, "node_name": "temporary", "Dec": "true if the focus change is temporary , such as when the window loses the focus ; for more information on temporary focus changes see the focus specification"}{"idx": 4966, "node_name": "temporary", "Dec": "true if the focus change is temporary , such as when the window loses the focus ; for more information on temporary focus changes see the focus specification"}{"idx": 4967, "node_name": "cause", "Dec": "the cause why the focus is requested"}{"idx": 4970, "node_name": "cause", "Dec": "the cause why the focus is requested"}{"idx": 4972, "node_name": "temporary", "Dec": "true if the focus change is temporary , such as when the window loses the focus ; for more information on temporary focus changes see the focus specification"}{"idx": 4975, "node_name": "container", "Dec": "the container to be tested"}{"idx": 4982, "node_name": "popup", "Dec": "the popup menu to be added to the component ."}{"idx": 4984, "node_name": "popup", "Dec": "the popup menu to be removed"}{"idx": 4989, "node_name": "out", "Dec": "a print stream"}{"idx": 4991, "node_name": "out", "Dec": "a print stream"}{"idx": 4992, "node_name": "indent", "Dec": "number of spaces to indent"}{"idx": 4994, "node_name": "out", "Dec": "the print writer to print to"}{"idx": 4996, "node_name": "out", "Dec": "the print writer to print to"}{"idx": 4997, "node_name": "indent", "Dec": "the number of spaces to indent"}{"idx": 4999, "node_name": "listener", "Dec": "the property change listener to be added"}{"idx": 5001, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 5004, "node_name": "propertyname", "Dec": "one of the property names listed above"}{"idx": 5005, "node_name": "listener", "Dec": "the property change listener to be added"}{"idx": 5007, "node_name": "propertyname", "Dec": "a valid property name"}{"idx": 5008, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 5010, "node_name": "propertyname", "Dec": "the property name"}{"idx": 5012, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 5013, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 5014, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 5016, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 5017, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 5018, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 5020, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 5021, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 5022, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 5024, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 5025, "node_name": "oldvalue", "Dec": "the old value of the property ( as a byte )"}{"idx": 5026, "node_name": "newvalue", "Dec": "the new value of the property ( as a byte )"}{"idx": 5028, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 5029, "node_name": "oldvalue", "Dec": "the old value of the property ( as a char )"}{"idx": 5030, "node_name": "newvalue", "Dec": "the new value of the property ( as a char )"}{"idx": 5032, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 5033, "node_name": "oldvalue", "Dec": "the old value of the property ( as a short )"}{"idx": 5034, "node_name": "newvalue", "Dec": "the new value of the property ( as a short )"}{"idx": 5036, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 5037, "node_name": "oldvalue", "Dec": "the old value of the property ( as a long )"}{"idx": 5038, "node_name": "newvalue", "Dec": "the new value of the property ( as a long )"}{"idx": 5040, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 5041, "node_name": "oldvalue", "Dec": "the old value of the property ( as a float )"}{"idx": 5042, "node_name": "newvalue", "Dec": "the new value of the property ( as a float )"}{"idx": 5044, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 5045, "node_name": "oldvalue", "Dec": "the old value of the property ( as a double )"}{"idx": 5046, "node_name": "newvalue", "Dec": "the new value of the property ( as a double )"}{"idx": 5048, "node_name": "o", "Dec": "the orientation to be set"}{"idx": 5051, "node_name": "orientation", "Dec": "the new component orientation of this component and the components contained within it ."}{"idx": 5054, "node_name": "shape", "Dec": "the new ' mixing-cutout ' shape"}{"idx": 5062, "node_name": "locale", "Dec": "the specified locale"}{"idx": 5065, "node_name": "srccolormodel", "Dec": "the colormodel of the source"}{"idx": 5066, "node_name": "dstcolormodel", "Dec": "the colormodel of the destination"}{"idx": 5067, "node_name": "hints", "Dec": "the hint that the context object uses to choose between rendering alternatives"}{"idx": 5071, "node_name": "src", "Dec": "the first source for the compositing operation"}{"idx": 5072, "node_name": "dstin", "Dec": "the second source for the compositing operation"}{"idx": 5073, "node_name": "dstout", "Dec": "the writableraster into which the result of the operation is stored"}{"idx": 5081, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 5083, "node_name": "p", "Dec": "the point defining the top-left corner of the accessible , given in the coordinate space of the object's parent"}{"idx": 5085, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 5087, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 5092, "node_name": "n", "Dec": "the index of the component to get ."}{"idx": 5096, "node_name": "comp", "Dec": "the component to be added"}{"idx": 5098, "node_name": "name", "Dec": "the name of the component to be added"}{"idx": 5099, "node_name": "comp", "Dec": "the component to be added"}{"idx": 5101, "node_name": "comp", "Dec": "the component to be added"}{"idx": 5102, "node_name": "index", "Dec": "the position at which to insert the component , or -1 to append the component to the end"}{"idx": 5104, "node_name": "comp", "Dec": "the component to be moved"}{"idx": 5105, "node_name": "index", "Dec": "the position in the container's list to insert the component , where getcomponentcount() appends to the end"}{"idx": 5107, "node_name": "comp", "Dec": "the component being queried"}{"idx": 5109, "node_name": "comp", "Dec": "the component to be added"}{"idx": 5110, "node_name": "constraints", "Dec": "an object expressing layout constraints for this component"}{"idx": 5112, "node_name": "comp", "Dec": "the component to be added"}{"idx": 5113, "node_name": "constraints", "Dec": "an object expressing layout constraints for this"}{"idx": 5114, "node_name": "index", "Dec": "the position in the container's list at which to insert the component ; -1 means insert at the end component"}{"idx": 5116, "node_name": "comp", "Dec": "the component to be added"}{"idx": 5117, "node_name": "constraints", "Dec": "an object expressing layout constraints for this component"}{"idx": 5118, "node_name": "index", "Dec": "the position in the container's list at which to insert the component , where -1 means append to the end"}{"idx": 5120, "node_name": "index", "Dec": "the index of the component to be removed"}{"idx": 5122, "node_name": "comp", "Dec": "the component to be removed"}{"idx": 5126, "node_name": "mgr", "Dec": "the specified layout manager"}{"idx": 5133, "node_name": "f", "Dec": "the font to become this container's font ."}{"idx": 5140, "node_name": "g", "Dec": "the specified graphics window"}{"idx": 5142, "node_name": "g", "Dec": "the specified graphics window"}{"idx": 5144, "node_name": "g", "Dec": "the specified graphics window"}{"idx": 5146, "node_name": "g", "Dec": "the graphics context ."}{"idx": 5148, "node_name": "g", "Dec": "the graphics context ."}{"idx": 5150, "node_name": "l", "Dec": "the container listener"}{"idx": 5152, "node_name": "l", "Dec": "the container listener"}{"idx": 5155, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 5157, "node_name": "e", "Dec": "the event"}{"idx": 5159, "node_name": "e", "Dec": "the container event"}{"idx": 5161, "node_name": "x", "Dec": "the x coordinate"}{"idx": 5162, "node_name": "y", "Dec": "the y coordinate"}{"idx": 5164, "node_name": "p", "Dec": "the point ."}{"idx": 5166, "node_name": "allowchildren", "Dec": "true if children should be taken into account"}{"idx": 5168, "node_name": "x", "Dec": "the x coordinate"}{"idx": 5169, "node_name": "y", "Dec": "the y coordinate"}{"idx": 5171, "node_name": "p", "Dec": "the point ."}{"idx": 5175, "node_name": "c", "Dec": "the component"}{"idx": 5178, "node_name": "out", "Dec": "a print stream"}{"idx": 5179, "node_name": "indent", "Dec": "the number of spaces to indent"}{"idx": 5181, "node_name": "out", "Dec": "a print writer"}{"idx": 5182, "node_name": "indent", "Dec": "the number of spaces to indent"}{"idx": 5184, "node_name": "id", "Dec": "one of keyboardfocusmanager.forward_traversal_keys , keyboardfocusmanager.backward_traversal_keys , keyboardfocusmanager.up_cycle_traversal_keys , or keyboardfocusmanager.down_cycle_traversal_keys"}{"idx": 5185, "node_name": "keystrokes", "Dec": "the set of awtkeystroke for the specified operation"}{"idx": 5187, "node_name": "id", "Dec": "one of keyboardfocusmanager.forward_traversal_keys , keyboardfocusmanager.backward_traversal_keys , keyboardfocusmanager.up_cycle_traversal_keys , or keyboardfocusmanager.down_cycle_traversal_keys"}{"idx": 5189, "node_name": "id", "Dec": "one of keyboardfocusmanager.forward_traversal_keys , keyboardfocusmanager.backward_traversal_keys , keyboardfocusmanager.up_cycle_traversal_keys , or keyboardfocusmanager.down_cycle_traversal_keys"}{"idx": 5191, "node_name": "container", "Dec": "the container to be tested"}{"idx": 5193, "node_name": "policy", "Dec": "the new focus traversal policy for this container"}{"idx": 5197, "node_name": "focuscycleroot", "Dec": "indicates whether this container is the root of a focus traversal cycle"}{"idx": 5200, "node_name": "provider", "Dec": "indicates whether this container will be used to provide focus traversal policy"}{"idx": 5204, "node_name": "o", "Dec": "the new component orientation of this container and the components contained within it ."}{"idx": 5206, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 5208, "node_name": "propertyname", "Dec": "one of the property names listed above"}{"idx": 5209, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 5213, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or a focus traversal policy provider"}{"idx": 5214, "node_name": "acomponent", "Dec": "a ( possibly indirect ) child of acontainer , or acontainer itself"}{"idx": 5216, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or focus traversal policy provider"}{"idx": 5217, "node_name": "acomponent", "Dec": "a ( possibly indirect ) child of acontainer , or acontainer itself"}{"idx": 5219, "node_name": "acontainer", "Dec": "the focus cycle root or focus traversal policy provider whose first component is to be returned"}{"idx": 5221, "node_name": "acontainer", "Dec": "the focus cycle root or focus traversal policy provider whose last component is to be returned"}{"idx": 5223, "node_name": "acontainer", "Dec": "the focus cycle root or focus traversal policy provider whose default component is to be returned"}{"idx": 5225, "node_name": "implicitdowncycletraversal", "Dec": "whether this containerorderfocustraversalpolicy transfers focus down-cycle implicitly"}{"idx": 5228, "node_name": "acomponent", "Dec": "the component whose fitness as a focus owner is to be tested"}{"idx": 5247, "node_name": "type", "Dec": "the type of cursor"}{"idx": 5249, "node_name": "name", "Dec": "the user-visible name of the cursor ."}{"idx": 5251, "node_name": "type", "Dec": "the type of predefined cursor"}{"idx": 5253, "node_name": "name", "Dec": "a string describing the desired system-specific custom cursor"}{"idx": 5262, "node_name": "name", "Dec": "for the clipboard"}{"idx": 5265, "node_name": "contents", "Dec": "the transferable object representing the clipboard content"}{"idx": 5266, "node_name": "owner", "Dec": "the object which owns the clipboard content"}{"idx": 5268, "node_name": "requestor", "Dec": "the object requesting the clip data ( not used )"}{"idx": 5271, "node_name": "flavor", "Dec": "the requested dataflavor for the contents"}{"idx": 5273, "node_name": "flavor", "Dec": "the requested dataflavor for the contents"}{"idx": 5275, "node_name": "listener", "Dec": "the listener to be added"}{"idx": 5277, "node_name": "listener", "Dec": "the listener to be removed"}{"idx": 5281, "node_name": "clipboard", "Dec": "the clipboard that is no longer owned"}{"idx": 5282, "node_name": "contents", "Dec": "the contents which this owner had placed on the clipboard"}{"idx": 5295, "node_name": "representationclass", "Dec": "the class used to transfer data in this flavor"}{"idx": 5296, "node_name": "humanpresentablename", "Dec": "the human-readable string used to identify this flavor ; if this parameter is null then the value of the mime content type is used"}{"idx": 5298, "node_name": "mimetype", "Dec": "the string used to identify the mime type for this flavor ; if the mimetype does not specify a \" class= \" parameter , or if the class is not successfully loaded , then an illegalargumentexception is thrown"}{"idx": 5299, "node_name": "humanpresentablename", "Dec": "the human-readable string used to identify this flavor ; if this parameter is null then the value of the mime content type is used"}{"idx": 5301, "node_name": "mimetype", "Dec": "the string used to identify the mime type for this flavor"}{"idx": 5302, "node_name": "humanpresentablename", "Dec": "the human-readable string used to identify this flavor"}{"idx": 5303, "node_name": "classloader", "Dec": "the class loader to use"}{"idx": 5305, "node_name": "mimetype", "Dec": "the string used to identify the mime type for this flavor ; if the class specified by \" class= \" parameter is not successfully loaded , then a classnotfoundexception is thrown"}{"idx": 5307, "node_name": "classname", "Dec": "the name of the class to be loaded"}{"idx": 5308, "node_name": "fallback", "Dec": "the fallback loader"}{"idx": 5312, "node_name": "availableflavors", "Dec": "an array of available dataflavors"}{"idx": 5314, "node_name": "transferable", "Dec": "the transferable whose data will be requested in this flavor"}{"idx": 5321, "node_name": "paramname", "Dec": "the parameter name requested"}{"idx": 5323, "node_name": "humanpresentablename", "Dec": "the new human presentable name"}{"idx": 5325, "node_name": "o", "Dec": "the object to compare with this"}{"idx": 5327, "node_name": "that", "Dec": "the dataflavor to compare with this"}{"idx": 5330, "node_name": "that", "Dec": "the dataflavor to compare with this"}{"idx": 5332, "node_name": "mimetype", "Dec": "the string representation of the mime type"}{"idx": 5334, "node_name": "dataflavor", "Dec": "the dataflavor to be compared"}{"idx": 5349, "node_name": "os", "Dec": "the stream to write the object to"}{"idx": 5351, "node_name": "is", "Dec": "the stream to read data from in order to restore the object"}{"idx": 5355, "node_name": "source", "Dec": "the clipboard that is the source of the event"}{"idx": 5358, "node_name": "e", "Dec": "a flavorevent object"}{"idx": 5361, "node_name": "flavors", "Dec": "an array of dataflavors which will be the key set of the returned map . if null is specified , a mapping of all dataflavors currently known to this flavormap to their corresponding string natives will be returned ."}{"idx": 5363, "node_name": "natives", "Dec": "an array of strings which will be the key set of the returned map . if null is specified , a mapping of all string natives currently known to this flavormap to their corresponding dataflavors will be returned ."}{"idx": 5366, "node_name": "flav", "Dec": "the dataflavor whose corresponding natives should be returned . if null is specified , all natives currently known to this flavortable are returned in a non-deterministic order ."}{"idx": 5368, "node_name": "nat", "Dec": "the native whose corresponding dataflavors should be returned . if null is specified , all dataflavors currently known to this flavortable are returned in a non-deterministic order ."}{"idx": 5372, "node_name": "s", "Dec": "the detail message"}{"idx": 5375, "node_name": "data", "Dec": "the string to be transferred"}{"idx": 5378, "node_name": "flavor", "Dec": "the requested flavor for the data"}{"idx": 5380, "node_name": "flavor", "Dec": "the requested flavor for the data"}{"idx": 5384, "node_name": "flav", "Dec": "the dataflavor whose corresponding natives should be returned . if null is specified , all natives currently known to the data transfer subsystem are returned in a non-deterministic order ."}{"idx": 5386, "node_name": "nat", "Dec": "the native whose corresponding dataflavors should be returned . if null is specified , all dataflavors currently known to the data transfer subsystem are returned in a non-deterministic order ."}{"idx": 5388, "node_name": "flavors", "Dec": "an array of dataflavors which will be the key set of the returned map . if null is specified , a mapping of all dataflavors known to the data transfer subsystem to their most preferred string natives will be returned ."}{"idx": 5390, "node_name": "natives", "Dec": "an array of strings which will be the key set of the returned map . if null is specified , a mapping of all supported string natives to their most preferred dataflavors will be returned ."}{"idx": 5392, "node_name": "flav", "Dec": "the dataflavor key for the mapping"}{"idx": 5393, "node_name": "nat", "Dec": "the string native value for the mapping"}{"idx": 5395, "node_name": "flav", "Dec": "the dataflavor key for the mappings"}{"idx": 5396, "node_name": "natives", "Dec": "the string native values for the mappings"}{"idx": 5398, "node_name": "nat", "Dec": "the string native key for the mapping"}{"idx": 5399, "node_name": "flav", "Dec": "the dataflavor value for the mapping"}{"idx": 5401, "node_name": "nat", "Dec": "the string native key for the mappings"}{"idx": 5402, "node_name": "flavors", "Dec": "the dataflavor values for the mappings"}{"idx": 5404, "node_name": "mimetype", "Dec": "the mime type to encode"}{"idx": 5406, "node_name": "flav", "Dec": "the dataflavor to encode"}{"idx": 5408, "node_name": "str", "Dec": "the string to test"}{"idx": 5410, "node_name": "nat", "Dec": "the string to decode"}{"idx": 5412, "node_name": "nat", "Dec": "the string to decode"}{"idx": 5416, "node_name": "flavor", "Dec": "the requested flavor for the data"}{"idx": 5418, "node_name": "flavor", "Dec": "the requested flavor for the data"}{"idx": 5421, "node_name": "flavor", "Dec": "the flavor object which caused the exception . may be null ."}{"idx": 5425, "node_name": "acomponent", "Dec": "the component whose fitness as a focus owner is to be tested"}{"idx": 5429, "node_name": "e", "Dec": "the awtevent to be dispatched"}{"idx": 5431, "node_name": "e", "Dec": "the keyevent to be dispatched"}{"idx": 5433, "node_name": "e", "Dec": "the keyevent to post-process"}{"idx": 5435, "node_name": "focusedcomponent", "Dec": "the component that is the basis for a focus traversal operation if the specified event represents a focus traversal key for the component"}{"idx": 5436, "node_name": "e", "Dec": "the event that may represent a focus traversal key"}{"idx": 5438, "node_name": "after", "Dec": "timestamp of current event , or the current , system time if the current event has no timestamp , or the awt cannot determine which event is currently being handled"}{"idx": 5439, "node_name": "untilfocused", "Dec": "component which will receive a focus_gained event before any pending keyevents"}{"idx": 5441, "node_name": "after", "Dec": "the timestamp specified in the call to enqueuekeyevents , or any value < 0"}{"idx": 5442, "node_name": "untilfocused", "Dec": "the component specified in the call to enqueuekeyevents"}{"idx": 5444, "node_name": "comp", "Dec": "the component specified in one or more calls to enqueuekeyevents , or a parent of such a component"}{"idx": 5446, "node_name": "acomponent", "Dec": "the component that is the basis for the focus traversal operation"}{"idx": 5448, "node_name": "acomponent", "Dec": "the component that is the basis for the focus traversal operation"}{"idx": 5450, "node_name": "acomponent", "Dec": "the component that is the basis for the focus traversal operation"}{"idx": 5452, "node_name": "acontainer", "Dec": "the container that is the basis for the focus traversal operation"}{"idx": 5457, "node_name": "e", "Dec": "the request to show the about dialog"}{"idx": 5461, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 5467, "node_name": "e", "Dec": "event"}{"idx": 5469, "node_name": "e", "Dec": "event"}{"idx": 5474, "node_name": "e", "Dec": "event"}{"idx": 5476, "node_name": "e", "Dec": "event"}{"idx": 5481, "node_name": "e", "Dec": "the request to reopen the app"}{"idx": 5488, "node_name": "action", "Dec": "the specified desktop.action"}{"idx": 5490, "node_name": "file", "Dec": "the file to be opened with the associated application"}{"idx": 5492, "node_name": "file", "Dec": "the file to be opened for editing"}{"idx": 5494, "node_name": "file", "Dec": "the file to be printed"}{"idx": 5496, "node_name": "uri", "Dec": "the uri to be displayed in the user default browser"}{"idx": 5499, "node_name": "mailtouri", "Dec": "the specified mailto : uri"}{"idx": 5501, "node_name": "listener", "Dec": "listener"}{"idx": 5503, "node_name": "listener", "Dec": "listener"}{"idx": 5505, "node_name": "abouthandler", "Dec": "the handler to respond to the abouthandler.handleabout ( aboutevent ) message"}{"idx": 5507, "node_name": "preferenceshandler", "Dec": "the handler to respond to the preferenceshandler.handlepreferences ( preferencesevent )"}{"idx": 5509, "node_name": "openfilehandler", "Dec": "handler"}{"idx": 5511, "node_name": "printfilehandler", "Dec": "handler"}{"idx": 5513, "node_name": "openurihandler", "Dec": "handler runtimepermission ( \" canprocessapplicationevents \") permission , or the calling thread is not allowed to create a subprocess"}{"idx": 5515, "node_name": "quithandler", "Dec": "the handler that is called when the application is asked to quit"}{"idx": 5517, "node_name": "strategy", "Dec": "the way this application should be shutdown"}{"idx": 5521, "node_name": "allwindows", "Dec": "if all windows of this application should be moved to the foreground , or only the foremost one"}{"idx": 5524, "node_name": "menubar", "Dec": "to use when no other frames are active"}{"idx": 5526, "node_name": "file", "Dec": "the file"}{"idx": 5528, "node_name": "file", "Dec": "the file"}{"idx": 5531, "node_name": "files", "Dec": "the list of files"}{"idx": 5532, "node_name": "searchterm", "Dec": "the search term"}{"idx": 5536, "node_name": "e", "Dec": "the request to open a list of files , and the search term used to find them , if any"}{"idx": 5539, "node_name": "uri", "Dec": "the uri the app was asked to open"}{"idx": 5543, "node_name": "e", "Dec": "the request to open a uri"}{"idx": 5548, "node_name": "e", "Dec": "the request to show preferences"}{"idx": 5551, "node_name": "files", "Dec": "the list of files"}{"idx": 5554, "node_name": "e", "Dec": "the request to print a list of files"}{"idx": 5559, "node_name": "e", "Dec": "the request to quit this application"}{"idx": 5560, "node_name": "response", "Dec": "the one-shot response object used to cancel or proceed with the quit action"}{"idx": 5567, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 5572, "node_name": "e", "Dec": "the screen sleep event"}{"idx": 5574, "node_name": "e", "Dec": "the screen sleep event"}{"idx": 5580, "node_name": "e", "Dec": "the system sleep event"}{"idx": 5582, "node_name": "e", "Dec": "the system sleep event"}{"idx": 5585, "node_name": "reason", "Dec": "the reason of the user session change"}{"idx": 5590, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 5593, "node_name": "e", "Dec": "the user session switch event"}{"idx": 5595, "node_name": "e", "Dec": "the user session switch event"}{"idx": 5603, "node_name": "owner", "Dec": "the owner of the dialog or null if this dialog has no owner"}{"idx": 5605, "node_name": "owner", "Dec": "the owner of the dialog or null if this dialog has no owner"}{"idx": 5606, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if false , the dialog is modeless ; if true , the modality type property is set to default_modality_type"}{"idx": 5608, "node_name": "owner", "Dec": "the owner of the dialog or null if this dialog has no owner"}{"idx": 5609, "node_name": "title", "Dec": "the title of the dialog or null if this dialog has no title"}{"idx": 5611, "node_name": "owner", "Dec": "the owner of the dialog or null if this dialog has no owner"}{"idx": 5612, "node_name": "title", "Dec": "the title of the dialog or null if this dialog has no title"}{"idx": 5613, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if false , the dialog is modeless ; if true , the modality type property is set to default_modality_type"}{"idx": 5615, "node_name": "owner", "Dec": "the owner of the dialog or null if this dialog has no owner"}{"idx": 5616, "node_name": "title", "Dec": "the title of the dialog or null if this dialog has no title"}{"idx": 5617, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if false , the dialog is modeless ; if true , the modality type property is set to default_modality_type"}{"idx": 5618, "node_name": "gc", "Dec": "the graphicsconfiguration of the target screen device ; if null , the default system graphicsconfiguration is assumed"}{"idx": 5620, "node_name": "owner", "Dec": "the owner of the dialog or null if this dialog has no owner"}{"idx": 5622, "node_name": "owner", "Dec": "the owner of the dialog or null if this has no owner"}{"idx": 5623, "node_name": "title", "Dec": "the title of the dialog or null if this dialog has no title"}{"idx": 5625, "node_name": "owner", "Dec": "the owner of the dialog or null if this dialog has no owner"}{"idx": 5626, "node_name": "title", "Dec": "the title of the dialog or null if this dialog has no title"}{"idx": 5627, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if false , the dialog is modeless ; if true , the modality type property is set to default_modality_type"}{"idx": 5629, "node_name": "owner", "Dec": "the owner of the dialog or null if this dialog has no owner"}{"idx": 5630, "node_name": "title", "Dec": "the title of the dialog or null if this dialog has no title"}{"idx": 5631, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if false , the dialog is modeless ; if true , the modality type property is set to default_modality_type"}{"idx": 5632, "node_name": "gc", "Dec": "the graphicsconfiguration of the target screen device ; if null , the default system graphicsconfiguration is assumed"}{"idx": 5634, "node_name": "owner", "Dec": "the owner of the dialog . the owner must be an instance of dialog , frame , any of their descendants or null"}{"idx": 5636, "node_name": "owner", "Dec": "the owner of the dialog . the owner must be an instance of dialog , frame , any of their descendants or null"}{"idx": 5637, "node_name": "title", "Dec": "the title of the dialog or null if this dialog has no title"}{"idx": 5639, "node_name": "owner", "Dec": "the owner of the dialog . the owner must be an instance of dialog , frame , any of their descendants or null"}{"idx": 5640, "node_name": "modalitytype", "Dec": "specifies whether dialog blocks input to other windows when shown . null value and unsupported modality types are equivalent to modeless"}{"idx": 5642, "node_name": "owner", "Dec": "the owner of the dialog . the owner must be an instance of dialog , frame , any of their descendants or null"}{"idx": 5643, "node_name": "title", "Dec": "the title of the dialog or null if this dialog has no title"}{"idx": 5644, "node_name": "modalitytype", "Dec": "specifies whether dialog blocks input to other windows when shown . null value and unsupported modality types are equivalent to modeless"}{"idx": 5646, "node_name": "owner", "Dec": "the owner of the dialog . the owner must be an instance of dialog , frame , any of their descendants or null"}{"idx": 5647, "node_name": "title", "Dec": "the title of the dialog or null if this dialog has no title"}{"idx": 5648, "node_name": "modalitytype", "Dec": "specifies whether dialog blocks input to other windows when shown . null value and unsupported modality types are equivalent to modeless"}{"idx": 5649, "node_name": "gc", "Dec": "the graphicsconfiguration of the target screen device ; if null , the default system graphicsconfiguration is assumed"}{"idx": 5653, "node_name": "modal", "Dec": "specifies whether dialog blocks input to other windows when shown ; calling to setmodal ( true ) is equivalent to setmodalitytype ( dialog.default_modality_type ) , and calling to setmodal ( false ) is equivalent to setmodalitytype ( dialog.modalitytype.modeless )"}{"idx": 5656, "node_name": "type", "Dec": "specifies whether dialog blocks input to other windows when shown . null value and unsupported modality types are equivalent to modeless"}{"idx": 5659, "node_name": "title", "Dec": "the title displayed in the dialog's border ; a null value results in an empty title"}{"idx": 5661, "node_name": "b", "Dec": "if true , makes the dialog visible , otherwise hides the dialog . if the dialog and / or its owner are not yet displayable , both are made displayable . the dialog will be validated prior to being made visible . if false , hides the dialog and then causes setvisible ( true ) to return if it is currently blocked . notes for modal dialogs . setvisible ( true ): if the dialog is not already visible , this call will not return until the dialog is hidden by calling setvisible ( false ) or dispose . setvisible ( false ): hides the dialog and then returns on setvisible ( true ) if it is currently blocked . it is ok to call setVisible(boolean) from the event dispatching thread because the toolkit ensures that other events are not blocked while setVisible(boolean) is blocked ."}{"idx": 5665, "node_name": "resizable", "Dec": "true if the user can resize this dialog ; false otherwise ."}{"idx": 5667, "node_name": "undecorated", "Dec": "true if no dialog decorations are to be enabled ; false if dialog decorations are to be enabled"}{"idx": 5674, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 5678, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 5684, "node_name": "d", "Dec": "the specified dimension for the width and height values"}{"idx": 5686, "node_name": "width", "Dec": "the specified width"}{"idx": 5687, "node_name": "height", "Dec": "the specified height"}{"idx": 5691, "node_name": "width", "Dec": "the new width for the dimension object"}{"idx": 5692, "node_name": "height", "Dec": "the new height for the dimension object"}{"idx": 5695, "node_name": "d", "Dec": "the new size for this dimension object"}{"idx": 5697, "node_name": "width", "Dec": "the new width for this dimension object"}{"idx": 5698, "node_name": "height", "Dec": "the new height for this dimension object"}{"idx": 5700, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 5707, "node_name": "width", "Dec": "the width of the display , in pixels"}{"idx": 5708, "node_name": "height", "Dec": "the height of the display , in pixels"}{"idx": 5709, "node_name": "bitdepth", "Dec": "the bit depth of the display , in bits per pixel . this can be bit_depth_multi if multiple bit depths are available ."}{"idx": 5710, "node_name": "refreshrate", "Dec": "the refresh rate of the display , in hertz . this can be refresh_rate_unknown if the information is not available ."}{"idx": 5716, "node_name": "dm", "Dec": "the display mode to compare to"}{"idx": 5720, "node_name": "cursorlocn", "Dec": "a point indicating the location of the cursor that triggered this operation ."}{"idx": 5730, "node_name": "dgr", "Dec": "the draggesturerecognizer firing this event"}{"idx": 5731, "node_name": "act", "Dec": "the user's preferred action . for information on allowable values , see the class description for draggestureevent"}{"idx": 5732, "node_name": "ori", "Dec": "the origin of the drag"}{"idx": 5733, "node_name": "evs", "Dec": "the list of events that comprise the gesture"}{"idx": 5741, "node_name": "array", "Dec": "the array of eventobject sub ( types )"}{"idx": 5745, "node_name": "dragcursor", "Dec": "the initial cursor for this drag operation or null for the default cursor handling ; see dragsourcecontext for more details on the cursor handling mechanism during drag and drop"}{"idx": 5746, "node_name": "transferable", "Dec": "the transferable representing the source data for this drag operation ."}{"idx": 5748, "node_name": "dragcursor", "Dec": "the initial cursor for this drag operation or null for the default cursor handling ; see dragsourcecontext for more details on the cursor handling mechanism during drag and drop"}{"idx": 5749, "node_name": "transferable", "Dec": "the source's transferable"}{"idx": 5750, "node_name": "dsl", "Dec": "the source's dragsourcelistener"}{"idx": 5752, "node_name": "dragcursor", "Dec": "the initial cursor for this drag operation or null for the default cursor handling ; see dragsourcecontext for more details on the cursor handling mechanism during drag and drop"}{"idx": 5753, "node_name": "dragimage", "Dec": "the source's dragimage"}{"idx": 5754, "node_name": "imageoffset", "Dec": "the dragimage's offset"}{"idx": 5755, "node_name": "transferable", "Dec": "the source's transferable"}{"idx": 5756, "node_name": "dsl", "Dec": "the source's dragsourcelistener"}{"idx": 5759, "node_name": "dge", "Dec": "the draggestureevent describing the gesture that has just occurred"}{"idx": 5767, "node_name": "ds", "Dec": "the dragsource this draggesturerecognizer will use to process the drag and drop operation"}{"idx": 5768, "node_name": "c", "Dec": "the component this draggesturerecognizer should \" observe \" the event stream to , in order to detect a drag initiating gesture . if this value is null , the draggesturerecognizer is not associated with any component ."}{"idx": 5769, "node_name": "sa", "Dec": "the set ( logical or ) of the dndconstants that this drag and drop operation will support"}{"idx": 5770, "node_name": "dgl", "Dec": "the draggesturerecognizer to notify when a drag gesture is detected"}{"idx": 5772, "node_name": "ds", "Dec": "the dragsource this draggesturerecognizer will use to process the drag and drop operation"}{"idx": 5773, "node_name": "c", "Dec": "the component this draggesturerecognizer should \" observe \" the event stream to , in order to detect a drag initiating gesture . if this value is null , the draggesturerecognizer is not associated with any component ."}{"idx": 5774, "node_name": "sa", "Dec": "the set ( logical or ) of the dndconstants that this drag and drop operation will support"}{"idx": 5776, "node_name": "ds", "Dec": "the dragsource this draggesturerecognizer will use to process the drag and drop operation"}{"idx": 5777, "node_name": "c", "Dec": "the component this draggesturerecognizer should \" observe \" the event stream to , in order to detect a drag initiating gesture . if this value is null , the draggesturerecognizer is not associated with any component ."}{"idx": 5779, "node_name": "ds", "Dec": "the dragsource this draggesturerecognizer will use to process the drag and drop operation"}{"idx": 5785, "node_name": "c", "Dec": "the component or null"}{"idx": 5788, "node_name": "actions", "Dec": "the permitted source drag action ( s )"}{"idx": 5792, "node_name": "dgl", "Dec": "the draggesturelistener to register with this draggesturerecognizer ."}{"idx": 5794, "node_name": "dgl", "Dec": "the draggesturelistener to unregister from this draggesturerecognizer"}{"idx": 5796, "node_name": "dragaction", "Dec": "the action initially selected by the users gesture"}{"idx": 5797, "node_name": "p", "Dec": "the point ( in component coords ) where the gesture originated"}{"idx": 5799, "node_name": "awtie", "Dec": "the inputevent to add to this draggesturerecognizer's internal array of events . note that null is not a valid value , and will be ignored ."}{"idx": 5811, "node_name": "trigger", "Dec": "the draggestureevent that initiated the drag"}{"idx": 5812, "node_name": "dragcursor", "Dec": "the initial cursor for this drag operation or null for the default cursor handling ; see dragsourcecontext for more details on the cursor handling mechanism during drag and drop"}{"idx": 5813, "node_name": "dragimage", "Dec": "the image to drag or null"}{"idx": 5814, "node_name": "imageoffset", "Dec": "the offset of the image origin from the hotspot of the cursor at the instant of the trigger"}{"idx": 5815, "node_name": "transferable", "Dec": "the subject data of the drag"}{"idx": 5816, "node_name": "dsl", "Dec": "the dragsourcelistener"}{"idx": 5817, "node_name": "flavormap", "Dec": "the flavormap to use , or null"}{"idx": 5819, "node_name": "trigger", "Dec": "the draggestureevent that initiated the drag"}{"idx": 5820, "node_name": "dragcursor", "Dec": "the initial cursor for this drag operation or null for the default cursor handling ; see dragsourcecontext for more details on the cursor handling mechanism during drag and drop"}{"idx": 5821, "node_name": "transferable", "Dec": "the subject data of the drag"}{"idx": 5822, "node_name": "dsl", "Dec": "the dragsourcelistener"}{"idx": 5823, "node_name": "flavormap", "Dec": "the flavormap to use or null"}{"idx": 5825, "node_name": "trigger", "Dec": "the draggestureevent that initiated the drag"}{"idx": 5826, "node_name": "dragcursor", "Dec": "the initial cursor for this drag operation or null for the default cursor handling ; see dragsourcecontext for more details on the cursor handling mechanism during drag and drop"}{"idx": 5827, "node_name": "dragimage", "Dec": "the image to drag or null"}{"idx": 5828, "node_name": "dragoffset", "Dec": "the offset of the image origin from the hotspot of the cursor at the instant of the trigger"}{"idx": 5829, "node_name": "transferable", "Dec": "the subject data of the drag"}{"idx": 5830, "node_name": "dsl", "Dec": "the dragsourcelistener"}{"idx": 5832, "node_name": "trigger", "Dec": "the draggestureevent that initiated the drag"}{"idx": 5833, "node_name": "dragcursor", "Dec": "the initial cursor for this drag operation or null for the default cursor handling ; see dragsourcecontext class for more details on the cursor handling mechanism during drag and drop"}{"idx": 5834, "node_name": "transferable", "Dec": "the subject data of the drag"}{"idx": 5835, "node_name": "dsl", "Dec": "the dragsourcelistener"}{"idx": 5837, "node_name": "dgl", "Dec": "the draggestureevent that triggered the drag"}{"idx": 5838, "node_name": "dragcursor", "Dec": "the initial cursor for this drag operation or null for the default cursor handling ; see dragsourcecontext class for more details on the cursor handling mechanism during drag and drop"}{"idx": 5839, "node_name": "dragimage", "Dec": "the image to drag or null"}{"idx": 5840, "node_name": "imageoffset", "Dec": "the offset of the image origin from the hotspot of the cursor at the instant of the trigger"}{"idx": 5841, "node_name": "t", "Dec": "the subject data of the drag"}{"idx": 5842, "node_name": "dsl", "Dec": "the dragsourcelistener"}{"idx": 5845, "node_name": "recognizerabstractclass", "Dec": "the requested abstract type"}{"idx": 5846, "node_name": "actions", "Dec": "the permitted source drag actions"}{"idx": 5847, "node_name": "c", "Dec": "the component target"}{"idx": 5848, "node_name": "dgl", "Dec": "the draggesturelistener to notify"}{"idx": 5850, "node_name": "c", "Dec": "the component target for the recognizer"}{"idx": 5851, "node_name": "actions", "Dec": "the permitted source actions"}{"idx": 5852, "node_name": "dgl", "Dec": "the draggesturelistener to notify"}{"idx": 5854, "node_name": "dsl", "Dec": "the dragsourcelistener to add"}{"idx": 5856, "node_name": "dsl", "Dec": "the dragsourcelistener to remove"}{"idx": 5859, "node_name": "dsml", "Dec": "the dragsourcemotionlistener to add"}{"idx": 5861, "node_name": "dsml", "Dec": "the dragsourcemotionlistener to remove"}{"idx": 5864, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 5869, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5871, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5873, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5875, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5877, "node_name": "dse", "Dec": "the dragsourceevent"}{"idx": 5879, "node_name": "dsde", "Dec": "the dragsourcedropevent"}{"idx": 5886, "node_name": "trigger", "Dec": "the triggering event"}{"idx": 5887, "node_name": "dragcursor", "Dec": "the initial cursor for this drag operation or null for the default cursor handling ; see class level documentation for more details on the cursor handling mechanism during drag and drop"}{"idx": 5888, "node_name": "dragimage", "Dec": "the image to drag ( or null )"}{"idx": 5889, "node_name": "offset", "Dec": "the offset of the image origin from the hotspot at the instant of the triggering event"}{"idx": 5890, "node_name": "t", "Dec": "the transferable"}{"idx": 5891, "node_name": "dsl", "Dec": "the dragsourcelistener"}{"idx": 5897, "node_name": "c", "Dec": "the initial cursor for this drag operation , or null for the default cursor handling ; see class level documentation for more details on the cursor handling during drag and drop"}{"idx": 5900, "node_name": "dsl", "Dec": "the dragsourcelistener to add . note that while null is not prohibited , it is not acceptable as a parameter ."}{"idx": 5902, "node_name": "dsl", "Dec": "the dragsourcelistener to remove ; note that while null is not prohibited , it is not acceptable as a parameter"}{"idx": 5905, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5907, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5909, "node_name": "dse", "Dec": "the dragsourceevent"}{"idx": 5911, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5913, "node_name": "dsde", "Dec": "the dragsourcedropevent"}{"idx": 5915, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5918, "node_name": "sourceact", "Dec": "the actions supported by the drag source"}{"idx": 5919, "node_name": "targetact", "Dec": "the drop target action"}{"idx": 5920, "node_name": "status", "Dec": "one of the fields default , enter , over , changed"}{"idx": 5923, "node_name": "dsc", "Dec": "the dragsourcecontext that is to manage notifications for this event ."}{"idx": 5924, "node_name": "dropaction", "Dec": "the user drop action ."}{"idx": 5925, "node_name": "action", "Dec": "the target drop action ."}{"idx": 5926, "node_name": "modifiers", "Dec": "the modifier keys down during event ( shift , ctrl , alt , meta ) either extended _down_mask or old _mask modifiers should be used , but both models should not be mixed in one event . use of the extended modifiers is preferred ."}{"idx": 5928, "node_name": "dsc", "Dec": "the dragsourcecontext associated with this event ."}{"idx": 5929, "node_name": "dropaction", "Dec": "the user drop action ."}{"idx": 5930, "node_name": "action", "Dec": "the target drop action ."}{"idx": 5931, "node_name": "modifiers", "Dec": "the modifier keys down during event ( shift , ctrl , alt , meta ) either extended _down_mask or old _mask modifiers should be used , but both models should not be mixed in one event . use of the extended modifiers is preferred ."}{"idx": 5932, "node_name": "x", "Dec": "the horizontal coordinate for the cursor location"}{"idx": 5933, "node_name": "y", "Dec": "the vertical coordinate for the cursor location"}{"idx": 5941, "node_name": "dsc", "Dec": "the dragsourcecontext associated with this dragsourcedropevent"}{"idx": 5942, "node_name": "action", "Dec": "the drop action"}{"idx": 5943, "node_name": "success", "Dec": "a boolean indicating if the drop was successful"}{"idx": 5945, "node_name": "dsc", "Dec": "the dragsourcecontext associated with this dragsourcedropevent"}{"idx": 5946, "node_name": "action", "Dec": "the drop action"}{"idx": 5947, "node_name": "success", "Dec": "a boolean indicating if the drop was successful"}{"idx": 5948, "node_name": "x", "Dec": "the horizontal coordinate for the cursor location"}{"idx": 5949, "node_name": "y", "Dec": "the vertical coordinate for the cursor location"}{"idx": 5951, "node_name": "dsc", "Dec": "the dragsourcecontext"}{"idx": 5956, "node_name": "dsc", "Dec": "the dragsourcecontext"}{"idx": 5958, "node_name": "dsc", "Dec": "the dragsourcecontext"}{"idx": 5959, "node_name": "x", "Dec": "the horizontal coordinate for the cursor location"}{"idx": 5960, "node_name": "y", "Dec": "the vertical coordinate for the cursor location"}{"idx": 5967, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5969, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5971, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5973, "node_name": "dse", "Dec": "the dragsourceevent"}{"idx": 5975, "node_name": "dsde", "Dec": "the dragsourcedropevent"}{"idx": 5978, "node_name": "dsde", "Dec": "the dragsourcedragevent"}{"idx": 5981, "node_name": "c", "Dec": "the component"}{"idx": 5982, "node_name": "p", "Dec": "the point"}{"idx": 5984, "node_name": "newlocn", "Dec": "the point"}{"idx": 5987, "node_name": "e", "Dec": "the actionevent"}{"idx": 5990, "node_name": "c", "Dec": "the component with which this droptarget is associated"}{"idx": 5991, "node_name": "ops", "Dec": "the default acceptable actions for this droptarget"}{"idx": 5992, "node_name": "dtl", "Dec": "the droptargetlistener for this droptarget"}{"idx": 5993, "node_name": "act", "Dec": "is the droptarget accepting drops ."}{"idx": 5994, "node_name": "fm", "Dec": "the flavormap to use , or null for the default flavormap"}{"idx": 5996, "node_name": "c", "Dec": "the component with which this droptarget is associated"}{"idx": 5997, "node_name": "ops", "Dec": "the default acceptable actions for this droptarget"}{"idx": 5998, "node_name": "dtl", "Dec": "the droptargetlistener for this droptarget"}{"idx": 5999, "node_name": "act", "Dec": "is the droptarget accepting drops ."}{"idx": 6002, "node_name": "c", "Dec": "the component with which this droptarget is associated"}{"idx": 6003, "node_name": "dtl", "Dec": "the droptargetlistener for this droptarget"}{"idx": 6005, "node_name": "c", "Dec": "the component with which this droptarget is associated"}{"idx": 6006, "node_name": "ops", "Dec": "the default acceptable actions for this droptarget"}{"idx": 6007, "node_name": "dtl", "Dec": "the droptargetlistener for this droptarget"}{"idx": 6009, "node_name": "c", "Dec": "the new component this droptarget is to be associated with ."}{"idx": 6012, "node_name": "ops", "Dec": "the default actions"}{"idx": 6015, "node_name": "isactive", "Dec": "sets the droptarget ( in ) active ."}{"idx": 6018, "node_name": "dtl", "Dec": "the new droptargetlistener"}{"idx": 6020, "node_name": "dtl", "Dec": "the droptargetlistener to deregister ."}{"idx": 6022, "node_name": "dtde", "Dec": "the droptargetdragevent"}{"idx": 6024, "node_name": "dtde", "Dec": "the droptargetdragevent"}{"idx": 6026, "node_name": "dtde", "Dec": "the droptargetdragevent"}{"idx": 6028, "node_name": "dte", "Dec": "the droptargetevent"}{"idx": 6030, "node_name": "dtde", "Dec": "the droptargetdropevent"}{"idx": 6033, "node_name": "fm", "Dec": "the new flavormap , or null to associate the default flavormap with this droptarget ."}{"idx": 6039, "node_name": "c", "Dec": "the component"}{"idx": 6040, "node_name": "p", "Dec": "the point"}{"idx": 6042, "node_name": "p", "Dec": "the point"}{"idx": 6044, "node_name": "dragcursorlocn", "Dec": "the point"}{"idx": 6049, "node_name": "dtde", "Dec": "the droptargetdragevent"}{"idx": 6051, "node_name": "dtde", "Dec": "the droptargetdragevent"}{"idx": 6053, "node_name": "dtde", "Dec": "the droptargetdragevent"}{"idx": 6055, "node_name": "dte", "Dec": "the droptargetevent"}{"idx": 6060, "node_name": "actions", "Dec": "an int representing the supported action ( s )"}{"idx": 6063, "node_name": "success", "Dec": "true for success , false if not"}{"idx": 6065, "node_name": "dragoperation", "Dec": "the supported action ( s )"}{"idx": 6068, "node_name": "dropoperation", "Dec": "the supported action ( s )"}{"idx": 6073, "node_name": "df", "Dec": "the dataflavor"}{"idx": 6076, "node_name": "t", "Dec": "the transferable to be proxied"}{"idx": 6077, "node_name": "local", "Dec": "true if t represents the result of a local drag-n-drop operation ."}{"idx": 6083, "node_name": "flavor", "Dec": "the requested flavor for the data"}{"idx": 6085, "node_name": "df", "Dec": "the requested flavor for the data"}{"idx": 6088, "node_name": "dtc", "Dec": "the droptargetcontext for this operation"}{"idx": 6089, "node_name": "cursorlocn", "Dec": "the location of the \" drag \" cursor's hotspot in component coordinates"}{"idx": 6090, "node_name": "dropaction", "Dec": "the user drop action"}{"idx": 6091, "node_name": "srcactions", "Dec": "the source drop actions"}{"idx": 6096, "node_name": "df", "Dec": "the dataflavor to test"}{"idx": 6101, "node_name": "dragoperation", "Dec": "the operation accepted by the target"}{"idx": 6105, "node_name": "dtc", "Dec": "the droptargetcontext for this operation"}{"idx": 6106, "node_name": "cursorlocn", "Dec": "the location of the \" drag \" cursor's hotspot in component coordinates"}{"idx": 6107, "node_name": "dropaction", "Dec": "the user drop action ."}{"idx": 6108, "node_name": "srcactions", "Dec": "the source drop actions ."}{"idx": 6110, "node_name": "dtc", "Dec": "the droptargetcontext for this operation"}{"idx": 6111, "node_name": "cursorlocn", "Dec": "the location of the \" drag \" cursor's hotspot in component's coordinates"}{"idx": 6112, "node_name": "dropaction", "Dec": "the user drop action ."}{"idx": 6113, "node_name": "srcactions", "Dec": "the source drop actions ."}{"idx": 6114, "node_name": "islocal", "Dec": "true if the source is in the same jvm as the target"}{"idx": 6119, "node_name": "df", "Dec": "the dataflavor to test"}{"idx": 6124, "node_name": "dropaction", "Dec": "the specified action"}{"idx": 6127, "node_name": "success", "Dec": "a boolean indicating that the drop transfer ( s ) are completed ."}{"idx": 6132, "node_name": "dtc", "Dec": "the droptargetcontext"}{"idx": 6136, "node_name": "dtde", "Dec": "the droptargetdragevent"}{"idx": 6138, "node_name": "dtde", "Dec": "the droptargetdragevent"}{"idx": 6140, "node_name": "dtde", "Dec": "the droptargetdragevent"}{"idx": 6142, "node_name": "dte", "Dec": "the droptargetevent"}{"idx": 6144, "node_name": "dtde", "Dec": "the droptargetdropevent"}{"idx": 6148, "node_name": "msg", "Dec": "the detail message"}{"idx": 6151, "node_name": "ds", "Dec": "the dragsource for the component c"}{"idx": 6152, "node_name": "c", "Dec": "the component to observe"}{"idx": 6153, "node_name": "act", "Dec": "the actions permitted for this drag"}{"idx": 6154, "node_name": "dgl", "Dec": "the draggesturelistener to notify when a gesture is detected"}{"idx": 6156, "node_name": "ds", "Dec": "the dragsource for the component c"}{"idx": 6157, "node_name": "c", "Dec": "the component to observe"}{"idx": 6158, "node_name": "act", "Dec": "the actions permitted for this drag"}{"idx": 6160, "node_name": "ds", "Dec": "the dragsource for the component c"}{"idx": 6161, "node_name": "c", "Dec": "the component to observe"}{"idx": 6163, "node_name": "ds", "Dec": "the dragsource for the component"}{"idx": 6167, "node_name": "e", "Dec": "the mouseevent"}{"idx": 6169, "node_name": "e", "Dec": "the mouseevent"}{"idx": 6171, "node_name": "e", "Dec": "the mouseevent"}{"idx": 6173, "node_name": "e", "Dec": "the mouseevent"}{"idx": 6175, "node_name": "e", "Dec": "the mouseevent"}{"idx": 6177, "node_name": "e", "Dec": "the mouseevent"}{"idx": 6179, "node_name": "e", "Dec": "the mouseevent"}{"idx": 6189, "node_name": "source", "Dec": "the object that originated the event"}{"idx": 6190, "node_name": "id", "Dec": "an integer that identifies the event . for information on allowable values , see the class description for actionevent"}{"idx": 6191, "node_name": "command", "Dec": "a string that may specify a command ( possibly one of several ) associated with the event"}{"idx": 6193, "node_name": "source", "Dec": "the object that originated the event"}{"idx": 6194, "node_name": "id", "Dec": "an integer that identifies the event . for information on allowable values , see the class description for actionevent"}{"idx": 6195, "node_name": "command", "Dec": "a string that may specify a command ( possibly one of several ) associated with the event"}{"idx": 6196, "node_name": "modifiers", "Dec": "the modifier keys down during event ( shift , ctrl , alt , meta ) . passing negative parameter is not recommended . zero value means that no modifiers were passed"}{"idx": 6198, "node_name": "source", "Dec": "the object that originated the event"}{"idx": 6199, "node_name": "id", "Dec": "an integer that identifies the event . for information on allowable values , see the class description for actionevent"}{"idx": 6200, "node_name": "command", "Dec": "a string that may specify a command ( possibly one of several ) associated with the event"}{"idx": 6201, "node_name": "modifiers", "Dec": "the modifier keys down during event ( shift , ctrl , alt , meta ) . passing negative parameter is not recommended . zero value means that no modifiers were passed"}{"idx": 6202, "node_name": "when", "Dec": "a long that gives the time the event occurred . passing negative or zero value is not recommended"}{"idx": 6209, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6220, "node_name": "source", "Dec": "the adjustable object where the event originated"}{"idx": 6221, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for adjustmentevent"}{"idx": 6222, "node_name": "type", "Dec": "an integer indicating the adjustment type . for information on allowable values , see the class description for adjustmentevent"}{"idx": 6223, "node_name": "value", "Dec": "the current value of the adjustment"}{"idx": 6225, "node_name": "source", "Dec": "the adjustable object where the event originated"}{"idx": 6226, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for adjustmentevent"}{"idx": 6227, "node_name": "type", "Dec": "an integer indicating the adjustment type . for information on allowable values , see the class description for adjustmentevent"}{"idx": 6228, "node_name": "value", "Dec": "the current value of the adjustment"}{"idx": 6229, "node_name": "isadjusting", "Dec": "a boolean that equals true if the event is one of a series of multiple adjusting events , otherwise false"}{"idx": 6236, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6239, "node_name": "event", "Dec": "the event to be processed"}{"idx": 6242, "node_name": "eventmask", "Dec": "the bitmap of event types to receive"}{"idx": 6243, "node_name": "listener", "Dec": "the listener object"}{"idx": 6245, "node_name": "event", "Dec": "the awt event"}{"idx": 6250, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6252, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6254, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6256, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6265, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6266, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for componentevent"}{"idx": 6271, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6273, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6275, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6277, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6281, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6283, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6290, "node_name": "source", "Dec": "the component object ( container ) that originated the event"}{"idx": 6291, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for containerevent"}{"idx": 6292, "node_name": "child", "Dec": "the component that was added or removed"}{"idx": 6298, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6300, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6304, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6306, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6310, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 6317, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6318, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for focusevent"}{"idx": 6319, "node_name": "temporary", "Dec": "equals true if the focus change is temporary ; false otherwise"}{"idx": 6320, "node_name": "opposite", "Dec": "the other component involved in the focus change , or null"}{"idx": 6322, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6323, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for focusevent"}{"idx": 6324, "node_name": "temporary", "Dec": "equals true if the focus change is temporary ; false otherwise"}{"idx": 6325, "node_name": "opposite", "Dec": "the other component involved in the focus change , or null"}{"idx": 6326, "node_name": "cause", "Dec": "the focus event cause ."}{"idx": 6328, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6329, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for focusevent"}{"idx": 6330, "node_name": "temporary", "Dec": "equals true if the focus change is temporary ; false otherwise"}{"idx": 6332, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6333, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for focusevent"}{"idx": 6340, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6342, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6346, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6348, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6351, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6353, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6364, "node_name": "source", "Dec": "the component object that originated the event"}{"idx": 6365, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for hierarchyevent"}{"idx": 6366, "node_name": "changed", "Dec": "the component at the top of the hierarchy which was changed"}{"idx": 6367, "node_name": "changedparent", "Dec": "the parent of the changed component . this may be the parent before or after the change , depending on the type of change"}{"idx": 6369, "node_name": "source", "Dec": "the component object that originated the event"}{"idx": 6370, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for hierarchyevent"}{"idx": 6371, "node_name": "changed", "Dec": "the component at the top of the hierarchy which was changed"}{"idx": 6372, "node_name": "changedparent", "Dec": "the parent of the changed component . this may be the parent before or after the change , depending on the type of change"}{"idx": 6373, "node_name": "changeflags", "Dec": "a bitmask which indicates the type ( s ) of the hierarchy_changed events represented in this event object . for information on allowable values , see the class description for hierarchyevent"}{"idx": 6381, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6392, "node_name": "button", "Dec": "is a number to represent a button starting from 1 . for example , int button = inputevent.getmaskforbutton ( 1 ); will have the same meaning as int button = inputevent.getmaskforbutton ( mouseevent.button1 ); because mouseevent.button1 equals to 1 . if a mouse has three enabled buttons ( see mouseinfo.getnumberofbuttons() ) then the values from the left column passed into getMaskForButton(int) will return corresponding values from the right column : button returned mask button1 button1_down_mask button2 button2_down_mask button3 button3_down_mask if a mouse has more than three enabled buttons then more values are admissible ( 4 , 5 , etc . ) . there is no assigned constants for these extended buttons . the button masks for the extra buttons returned by getMaskForButton(int) have no assigned names like the first three button masks . getMaskForButton(int) has the following implementation restriction . it returns masks for a limited number of buttons only . the maximum number is implementation dependent and may vary . this limit is defined by the relevant number of buttons that may hypothetically exist on the mouse but it is greater than the mouseinfo.getnumberofbuttons() ."}{"idx": 6403, "node_name": "modifiers", "Dec": "a modifier mask describing the extended modifier keys and mouse buttons for the event"}{"idx": 6410, "node_name": "source", "Dec": "the object where the event originated"}{"idx": 6411, "node_name": "id", "Dec": "the event type"}{"idx": 6412, "node_name": "when", "Dec": "a long integer that specifies the time the event occurred"}{"idx": 6413, "node_name": "text", "Dec": "the combined committed and composed text , committed text first ; must be null when the event type is caret_position_changed ; may be null for input_method_text_changed if there's no committed or composed text"}{"idx": 6414, "node_name": "committedcharactercount", "Dec": "the number of committed characters in the text"}{"idx": 6415, "node_name": "caret", "Dec": "the caret ( a.k.a. insertion point ); null if there's no caret within current composed text"}{"idx": 6416, "node_name": "visibleposition", "Dec": "the position that's most important to be visible ; null if there's no recommendation for a visible position within current composed text"}{"idx": 6418, "node_name": "source", "Dec": "the object where the event originated"}{"idx": 6419, "node_name": "id", "Dec": "the event type"}{"idx": 6420, "node_name": "text", "Dec": "the combined committed and composed text , committed text first ; must be null when the event type is caret_position_changed ; may be null for input_method_text_changed if there's no committed or composed text"}{"idx": 6421, "node_name": "committedcharactercount", "Dec": "the number of committed characters in the text"}{"idx": 6422, "node_name": "caret", "Dec": "the caret ( a.k.a. insertion point ); null if there's no caret within current composed text"}{"idx": 6423, "node_name": "visibleposition", "Dec": "the position that's most important to be visible ; null if there's no recommendation for a visible position within current composed text"}{"idx": 6425, "node_name": "source", "Dec": "the object where the event originated"}{"idx": 6426, "node_name": "id", "Dec": "the event type"}{"idx": 6427, "node_name": "caret", "Dec": "the caret ( a.k.a. insertion point ); null if there's no caret within current composed text"}{"idx": 6428, "node_name": "visibleposition", "Dec": "the position that's most important to be visible ; null if there's no recommendation for a visible position within current composed text"}{"idx": 6439, "node_name": "event", "Dec": "the event to be processed"}{"idx": 6441, "node_name": "event", "Dec": "the event to be processed"}{"idx": 6450, "node_name": "source", "Dec": "the object that originated the event"}{"idx": 6451, "node_name": "runnable", "Dec": "the runnable whose run() method will be executed"}{"idx": 6453, "node_name": "source", "Dec": "the object that originated the event"}{"idx": 6454, "node_name": "runnable", "Dec": "the runnable whose run() method will be executed"}{"idx": 6455, "node_name": "notifier", "Dec": "the object whose notifyall method will be called after runnable.run has returned or thrown an exception or after the event was disposed"}{"idx": 6456, "node_name": "catchthrowables", "Dec": "specifies whether dispatch should catch throwable when executing the runnable's run() method , or should instead propagate those throwables to the eventdispatchthread's dispatch loop"}{"idx": 6458, "node_name": "source", "Dec": "the object that originated the event"}{"idx": 6459, "node_name": "runnable", "Dec": "the runnable whose run() method will be executed"}{"idx": 6460, "node_name": "listener", "Dec": "the runnable whose run() method will be called after the invocationevent was dispatched or disposed"}{"idx": 6461, "node_name": "catchthrowables", "Dec": "specifies whether dispatch should catch throwable when executing the runnable's run() method , or should instead propagate those throwables to the eventdispatchthread's dispatch loop"}{"idx": 6463, "node_name": "source", "Dec": "the object that originated the event"}{"idx": 6464, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for invocationevent"}{"idx": 6465, "node_name": "runnable", "Dec": "the runnable whose run() method will be executed"}{"idx": 6466, "node_name": "notifier", "Dec": "the object whose notifyall method will be called after runnable.run has returned or thrown an exception or after the event was disposed"}{"idx": 6467, "node_name": "catchthrowables", "Dec": "specifies whether dispatch should catch throwable when executing the runnable's run() method , or should instead propagate those throwables to the eventdispatchthread's dispatch loop"}{"idx": 6481, "node_name": "source", "Dec": "the itemselectable object that originated the event"}{"idx": 6482, "node_name": "id", "Dec": "the integer that identifies the event type . for information on allowable values , see the class description for itemevent"}{"idx": 6483, "node_name": "item", "Dec": "an object -- the item affected by the event"}{"idx": 6484, "node_name": "statechange", "Dec": "an integer that indicates whether the item was selected or deselected . for information on allowable values , see the class description for itemevent"}{"idx": 6491, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6496, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6498, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6500, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6703, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6704, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for keyevent"}{"idx": 6705, "node_name": "when", "Dec": "a long integer that specifies the time the event occurred . passing negative or zero value is not recommended"}{"idx": 6706, "node_name": "modifiers", "Dec": "the modifier keys down during event ( shift , ctrl , alt , meta ) . passing negative value is not recommended . zero value means that no modifiers were passed . use either an extended _down_mask or old _mask modifiers , however do not mix models in the one event . the extended modifiers are preferred for using"}{"idx": 6707, "node_name": "keycode", "Dec": "the integer code for an actual key , or vk_undefined ( for a key-typed event )"}{"idx": 6708, "node_name": "keychar", "Dec": "the unicode character generated by this event , or char_undefined ( for key-pressed and key-released events which do not map to a valid unicode character )"}{"idx": 6709, "node_name": "keylocation", "Dec": "identifies the key location . the only legal values are key_location_unknown , key_location_standard , key_location_left , key_location_right , and key_location_numpad ."}{"idx": 6711, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6712, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for keyevent"}{"idx": 6713, "node_name": "when", "Dec": "a long integer that specifies the time the event occurred . passing negative or zero value is not recommended"}{"idx": 6714, "node_name": "modifiers", "Dec": "the modifier keys down during event ( shift , ctrl , alt , meta ) . passing negative value is not recommended . zero value means that no modifiers were passed . use either an extended _down_mask or old _mask modifiers , however do not mix models in the one event . the extended modifiers are preferred for using"}{"idx": 6715, "node_name": "keycode", "Dec": "the integer code for an actual key , or vk_undefined ( for a key-typed event )"}{"idx": 6716, "node_name": "keychar", "Dec": "the unicode character generated by this event , or char_undefined ( for key-pressed and key-released events which do not map to a valid unicode character )"}{"idx": 6719, "node_name": "keycode", "Dec": "an integer corresponding to an actual key on the keyboard ."}{"idx": 6722, "node_name": "keychar", "Dec": "a char corresponding to the combination of keystrokes that make up this event ."}{"idx": 6725, "node_name": "keycode", "Dec": "the key whose description is to be returned"}{"idx": 6730, "node_name": "c", "Dec": "the unicode character to be processed"}{"idx": 6733, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6735, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6737, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6741, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6743, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6745, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6762, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6763, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for mouseevent"}{"idx": 6764, "node_name": "when", "Dec": "a long integer that gives the time the event occurred . passing negative or zero value is not recommended"}{"idx": 6765, "node_name": "modifiers", "Dec": "a modifier mask describing the modifier keys and mouse buttons ( for example , shift , ctrl , alt , and meta ) that are down during the event . only extended modifiers are allowed to be used as a value for this parameter ( see the inputevent.getmodifiersex() class for the description of extended modifiers ) . passing negative parameter is not recommended . zero value means that no modifiers were passed"}{"idx": 6766, "node_name": "x", "Dec": "the horizontal x coordinate for the mouse location . it is allowed to pass negative values"}{"idx": 6767, "node_name": "y", "Dec": "the vertical y coordinate for the mouse location . it is allowed to pass negative values"}{"idx": 6768, "node_name": "clickcount", "Dec": "the number of mouse clicks associated with event . passing negative value is not recommended"}{"idx": 6769, "node_name": "popuptrigger", "Dec": "a boolean that equals true if this event is a trigger for a popup menu"}{"idx": 6770, "node_name": "button", "Dec": "an integer that indicates , which of the mouse buttons has changed its state . the following rules are applied to this parameter : if support for the extended mouse buttons is disabled by java then it is allowed to create mouseevent objects only with the standard buttons : nobutton , button1 , button2 , and button3 . if support for the extended mouse buttons is enabled by java then it is allowed to create mouseevent objects with the standard buttons . in case the support for extended mouse buttons is enabled by java , then in addition to the standard buttons , mouseevent objects can be created using buttons from the range starting from 4 to mouseinfo.getnumberofbuttons() if the mouse has more than three buttons ."}{"idx": 6772, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6773, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for mouseevent"}{"idx": 6774, "node_name": "when", "Dec": "a long integer that gives the time the event occurred . passing negative or zero value is not recommended"}{"idx": 6775, "node_name": "modifiers", "Dec": "a modifier mask describing the modifier keys and mouse buttons ( for example , shift , ctrl , alt , and meta ) that are down during the event . only extended modifiers are allowed to be used as a value for this parameter ( see the inputevent.getmodifiersex() class for the description of extended modifiers ) . passing negative parameter is not recommended . zero value means that no modifiers were passed"}{"idx": 6776, "node_name": "x", "Dec": "the horizontal x coordinate for the mouse location . it is allowed to pass negative values"}{"idx": 6777, "node_name": "y", "Dec": "the vertical y coordinate for the mouse location . it is allowed to pass negative values"}{"idx": 6778, "node_name": "clickcount", "Dec": "the number of mouse clicks associated with event . passing negative value is not recommended"}{"idx": 6779, "node_name": "popuptrigger", "Dec": "a boolean that equals true if this event is a trigger for a popup menu"}{"idx": 6781, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6782, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for mouseevent"}{"idx": 6783, "node_name": "when", "Dec": "a long integer that gives the time the event occurred . passing negative or zero value is not recommended"}{"idx": 6784, "node_name": "modifiers", "Dec": "a modifier mask describing the modifier keys and mouse buttons ( for example , shift , ctrl , alt , and meta ) that are down during the event . only extended modifiers are allowed to be used as a value for this parameter ( see the inputevent.getmodifiersex() class for the description of extended modifiers ) . passing negative parameter is not recommended . zero value means that no modifiers were passed"}{"idx": 6785, "node_name": "x", "Dec": "the horizontal x coordinate for the mouse location . it is allowed to pass negative values"}{"idx": 6786, "node_name": "y", "Dec": "the vertical y coordinate for the mouse location . it is allowed to pass negative values"}{"idx": 6787, "node_name": "xabs", "Dec": "the absolute horizontal x coordinate for the mouse location it is allowed to pass negative values"}{"idx": 6788, "node_name": "yabs", "Dec": "the absolute vertical y coordinate for the mouse location it is allowed to pass negative values"}{"idx": 6789, "node_name": "clickcount", "Dec": "the number of mouse clicks associated with event . passing negative value is not recommended"}{"idx": 6790, "node_name": "popuptrigger", "Dec": "a boolean that equals true if this event is a trigger for a popup menu"}{"idx": 6791, "node_name": "button", "Dec": "an integer that indicates , which of the mouse buttons has changed its state . the following rules are applied to this parameter : if support for the extended mouse buttons is disabled by java then it is allowed to create mouseevent objects only with the standard buttons : nobutton , button1 , button2 , and button3 . if support for the extended mouse buttons is enabled by java then it is allowed to create mouseevent objects with the standard buttons . in case the support for extended mouse buttons is enabled by java , then in addition to the standard buttons , mouseevent objects can be created using buttons from the range starting from 4 to mouseinfo.getnumberofbuttons() if the mouse has more than three buttons ."}{"idx": 6799, "node_name": "x", "Dec": "the horizontal x value to add to the current x coordinate position"}{"idx": 6800, "node_name": "y", "Dec": "the vertical y value to add to the current y coordinate position"}{"idx": 6805, "node_name": "modifiers", "Dec": "a modifier mask describing the modifier keys and mouse buttons that were down during the event"}{"idx": 6809, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6811, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6813, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6815, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6817, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6821, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6823, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6826, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6828, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6833, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6834, "node_name": "id", "Dec": "the integer that identifies the event"}{"idx": 6835, "node_name": "when", "Dec": "a long that gives the time the event occurred"}{"idx": 6836, "node_name": "modifiers", "Dec": "the modifier keys down during event ( shift , ctrl , alt , meta )"}{"idx": 6837, "node_name": "x", "Dec": "the horizontal x coordinate for the mouse location"}{"idx": 6838, "node_name": "y", "Dec": "the vertical y coordinate for the mouse location"}{"idx": 6839, "node_name": "clickcount", "Dec": "the number of mouse clicks associated with event"}{"idx": 6840, "node_name": "popuptrigger", "Dec": "a boolean , true if this event is a trigger for a popup-menu"}{"idx": 6841, "node_name": "scrolltype", "Dec": "the type of scrolling which should take place in response to this event ; valid values are wheel_unit_scroll and wheel_block_scroll"}{"idx": 6842, "node_name": "scrollamount", "Dec": "for scrolltype wheel_unit_scroll , the number of units to be scrolled"}{"idx": 6843, "node_name": "wheelrotation", "Dec": "the integer number of \" clicks \" by which the mouse wheel was rotated"}{"idx": 6845, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6846, "node_name": "id", "Dec": "the integer that identifies the event"}{"idx": 6847, "node_name": "when", "Dec": "a long that gives the time the event occurred"}{"idx": 6848, "node_name": "modifiers", "Dec": "the modifier keys down during event ( shift , ctrl , alt , meta )"}{"idx": 6849, "node_name": "x", "Dec": "the horizontal x coordinate for the mouse location"}{"idx": 6850, "node_name": "y", "Dec": "the vertical y coordinate for the mouse location"}{"idx": 6851, "node_name": "xabs", "Dec": "the absolute horizontal x coordinate for the mouse location"}{"idx": 6852, "node_name": "yabs", "Dec": "the absolute vertical y coordinate for the mouse location"}{"idx": 6853, "node_name": "clickcount", "Dec": "the number of mouse clicks associated with event"}{"idx": 6854, "node_name": "popuptrigger", "Dec": "a boolean , true if this event is a trigger for a popup-menu"}{"idx": 6855, "node_name": "scrolltype", "Dec": "the type of scrolling which should take place in response to this event ; valid values are wheel_unit_scroll and wheel_block_scroll"}{"idx": 6856, "node_name": "scrollamount", "Dec": "for scrolltype wheel_unit_scroll , the number of units to be scrolled"}{"idx": 6857, "node_name": "wheelrotation", "Dec": "the integer number of \" clicks \" by which the mouse wheel was rotated"}{"idx": 6859, "node_name": "source", "Dec": "the component that originated the event"}{"idx": 6860, "node_name": "id", "Dec": "the integer value that identifies the event"}{"idx": 6861, "node_name": "when", "Dec": "a long value that gives the time when the event occurred"}{"idx": 6862, "node_name": "modifiers", "Dec": "the modifier keys down during event ( shift , ctrl , alt , meta )"}{"idx": 6863, "node_name": "x", "Dec": "the horizontal x coordinate for the mouse location"}{"idx": 6864, "node_name": "y", "Dec": "the vertical y coordinate for the mouse location"}{"idx": 6865, "node_name": "xabs", "Dec": "the absolute horizontal x coordinate for the mouse location"}{"idx": 6866, "node_name": "yabs", "Dec": "the absolute vertical y coordinate for the mouse location"}{"idx": 6867, "node_name": "clickcount", "Dec": "the number of mouse clicks associated with the event"}{"idx": 6868, "node_name": "popuptrigger", "Dec": "a boolean value , true if this event is a trigger for a popup-menu"}{"idx": 6869, "node_name": "scrolltype", "Dec": "the type of scrolling which should take place in response to this event ; valid values are wheel_unit_scroll and wheel_block_scroll"}{"idx": 6870, "node_name": "scrollamount", "Dec": "for scrolltype wheel_unit_scroll , the number of units to be scrolled"}{"idx": 6871, "node_name": "wheelrotation", "Dec": "the integer number of \" clicks \" by which the mouse wheel was rotated"}{"idx": 6872, "node_name": "precisewheelrotation", "Dec": "the double number of \" clicks \" by which the mouse wheel was rotated"}{"idx": 6881, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6888, "node_name": "source", "Dec": "the object where the event originated"}{"idx": 6889, "node_name": "id", "Dec": "the integer that identifies the event type . for information on allowable values , see the class description for paintevent"}{"idx": 6890, "node_name": "updaterect", "Dec": "the rectangle area which needs to be repainted"}{"idx": 6893, "node_name": "updaterect", "Dec": "the rectangle area which needs to be repainted"}{"idx": 6899, "node_name": "source", "Dec": "the ( textcomponent ) object that originated the event"}{"idx": 6900, "node_name": "id", "Dec": "an integer that identifies the event type . for information on allowable values , see the class description for textevent"}{"idx": 6904, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6908, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6910, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6912, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6914, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6916, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6918, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6920, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6922, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6924, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6926, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6941, "node_name": "source", "Dec": "the window object that originated the event"}{"idx": 6942, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for windowevent"}{"idx": 6943, "node_name": "opposite", "Dec": "the other window involved in the focus or activation change , or null"}{"idx": 6944, "node_name": "oldstate", "Dec": "previous state of the window for window state change event . see #getoldstate ( ) for allowable values"}{"idx": 6945, "node_name": "newstate", "Dec": "new state of the window for window state change event . see #getnewstate ( ) for allowable values"}{"idx": 6947, "node_name": "source", "Dec": "the window object that originated the event"}{"idx": 6948, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for windowevent . it is expected that <init>(java.awt.Window,int,java.awt.Window) will not be used for other then window_activated , window_deactivated , window_gained_focus , or window_lost_focus . windowevent types , because the opposite window of other event types will always be null ."}{"idx": 6949, "node_name": "opposite", "Dec": "the other window involved in the focus or activation change , or null"}{"idx": 6951, "node_name": "source", "Dec": "the window object that originated the event"}{"idx": 6952, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for windowevent . it is expected that <init>(java.awt.Window,int,int,int) will not be used for other then window_state_changed windowevent types , because the previous and new window states are meaningless for other event types ."}{"idx": 6953, "node_name": "oldstate", "Dec": "an integer representing the previous window state . see #getoldstate ( ) for allowable values"}{"idx": 6954, "node_name": "newstate", "Dec": "an integer representing the new window state . see #getnewstate ( ) for allowable values"}{"idx": 6956, "node_name": "source", "Dec": "the window object that originated the event"}{"idx": 6957, "node_name": "id", "Dec": "an integer indicating the type of event . for information on allowable values , see the class description for windowevent ."}{"idx": 6965, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6967, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6970, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6972, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6974, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6976, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6978, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6980, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6982, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6985, "node_name": "e", "Dec": "the event to be processed"}{"idx": 6989, "node_name": "theevent", "Dec": "an instance of java.awt.awtevent , or a subclass of it"}{"idx": 6993, "node_name": "id", "Dec": "the id of the type of event desired"}{"idx": 6995, "node_name": "event", "Dec": "an instance of java.awt.awtevent , or a subclass of it"}{"idx": 6999, "node_name": "neweventqueue", "Dec": "an eventqueue ( or subclass thereof ) instance to be use"}{"idx": 7004, "node_name": "runnable", "Dec": "the runnable whose run method should be executed asynchronously in the event dispatch thread of the system eventqueue"}{"idx": 7006, "node_name": "runnable", "Dec": "the runnable whose run method should be executed synchronously in the event dispatch thread of the system eventqueue"}{"idx": 7011, "node_name": "parent", "Dec": "the owner of the dialog"}{"idx": 7013, "node_name": "parent", "Dec": "the owner of the dialog"}{"idx": 7014, "node_name": "title", "Dec": "the title of the dialog"}{"idx": 7016, "node_name": "parent", "Dec": "the owner of the dialog"}{"idx": 7017, "node_name": "title", "Dec": "the title of the dialog"}{"idx": 7018, "node_name": "mode", "Dec": "the mode of the dialog ; either filedialog.load or filedialog.save"}{"idx": 7020, "node_name": "parent", "Dec": "the owner of the dialog"}{"idx": 7022, "node_name": "parent", "Dec": "the owner of the dialog"}{"idx": 7023, "node_name": "title", "Dec": "the title of the dialog ; a null value will be accepted without causing a nullpointerexception to be thrown"}{"idx": 7025, "node_name": "parent", "Dec": "the owner of the dialog"}{"idx": 7026, "node_name": "title", "Dec": "the title of the dialog ; a null value will be accepted without causing a nullpointerexception to be thrown"}{"idx": 7027, "node_name": "mode", "Dec": "the mode of the dialog ; either filedialog.load or filedialog.save"}{"idx": 7029, "node_name": "title", "Dec": "the title displayed in the dialog's border ; a null value results in an empty title"}{"idx": 7033, "node_name": "mode", "Dec": "the mode for this file dialog , either filedialog.load or filedialog.save"}{"idx": 7036, "node_name": "dir", "Dec": "the specified directory"}{"idx": 7040, "node_name": "file", "Dec": "the file being set"}{"idx": 7042, "node_name": "enable", "Dec": "if true , multiple file selection is enabled ; false"}{"idx": 7046, "node_name": "filter", "Dec": "the specified filter"}{"idx": 7056, "node_name": "align", "Dec": "the alignment value"}{"idx": 7058, "node_name": "align", "Dec": "the alignment value"}{"idx": 7059, "node_name": "hgap", "Dec": "the horizontal gap between components and between the components and the borders of the container"}{"idx": 7060, "node_name": "vgap", "Dec": "the vertical gap between components and between the components and the borders of the container"}{"idx": 7063, "node_name": "align", "Dec": "one of the alignment values shown above"}{"idx": 7066, "node_name": "hgap", "Dec": "the horizontal gap between components and between the components and the borders of the container"}{"idx": 7069, "node_name": "vgap", "Dec": "the vertical gap between components and between the components and the borders of the container"}{"idx": 7071, "node_name": "alignonbaseline", "Dec": "whether or not components should be vertically aligned on their baseline"}{"idx": 7074, "node_name": "name", "Dec": "the name of the component"}{"idx": 7075, "node_name": "comp", "Dec": "the component to be added"}{"idx": 7077, "node_name": "comp", "Dec": "the component to remove"}{"idx": 7079, "node_name": "target", "Dec": "the container that needs to be laid out"}{"idx": 7081, "node_name": "target", "Dec": "the container that needs to be laid out"}{"idx": 7083, "node_name": "target", "Dec": "the specified component being laid out"}{"idx": 7088, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or focus traversal policy provider"}{"idx": 7089, "node_name": "acomponent", "Dec": "a ( possibly indirect ) child of acontainer , or acontainer itself"}{"idx": 7091, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or focus traversal policy provider"}{"idx": 7092, "node_name": "acomponent", "Dec": "a ( possibly indirect ) child of acontainer , or acontainer itself"}{"idx": 7094, "node_name": "acontainer", "Dec": "the focus cycle root or focus traversal policy provider whose first component is to be returned"}{"idx": 7096, "node_name": "acontainer", "Dec": "the focus cycle root or focus traversal policy provider whose last component is to be returned"}{"idx": 7098, "node_name": "acontainer", "Dec": "the focus cycle root or focus traversal policy provider whose default component is to be returned"}{"idx": 7100, "node_name": "window", "Dec": "the window whose initial component is to be returned"}{"idx": 7104, "node_name": "tx", "Dec": "the transform which is used to scale typographical points to pixels in this fontrendercontext . if null , an identity transform is used ."}{"idx": 7105, "node_name": "isantialiased", "Dec": "determines if the newly constructed object has anti-aliasing ."}{"idx": 7106, "node_name": "usesfractionalmetrics", "Dec": "determines if the newly constructed object has fractional metrics ."}{"idx": 7108, "node_name": "tx", "Dec": "the transform which is used to scale typographical points to pixels in this fontrendercontext . if null , an identity transform is used ."}{"idx": 7109, "node_name": "aahint", "Dec": "- one of the text antialiasing rendering hint values defined in java.awt.renderinghints . any other value will throw illegalargumentexception . value_text_antialias_default may be specified , in which case the mode used is implementation dependent ."}{"idx": 7110, "node_name": "fmhint", "Dec": "- one of the text fractional rendering hint values defined in java.awt.renderinghints . value_fractionalmetrics_default may be specified , in which case the mode used is implementation dependent . any other value will throw illegalargumentexception"}{"idx": 7119, "node_name": "obj", "Dec": "the object to test for equality"}{"idx": 7121, "node_name": "rhs", "Dec": "the fontrendercontext to test for equality"}{"idx": 7138, "node_name": "weight", "Dec": "the weight of this glyph when allocating space . must be non-negative ."}{"idx": 7139, "node_name": "growabsorb", "Dec": "if true this glyph absorbs all extra space at this priority and lower priority levels when it grows"}{"idx": 7140, "node_name": "growpriority", "Dec": "the priority level of this glyph when it grows"}{"idx": 7141, "node_name": "growleftlimit", "Dec": "the maximum amount by which the left side of this glyph can grow . must be non-negative ."}{"idx": 7142, "node_name": "growrightlimit", "Dec": "the maximum amount by which the right side of this glyph can grow . must be non-negative ."}{"idx": 7143, "node_name": "shrinkabsorb", "Dec": "if true , this glyph absorbs all remaining shrinkage at this and lower priority levels when it shrinks"}{"idx": 7144, "node_name": "shrinkpriority", "Dec": "the priority level of this glyph when it shrinks"}{"idx": 7145, "node_name": "shrinkleftlimit", "Dec": "the maximum amount by which the left side of this glyph can shrink . must be non-negative ."}{"idx": 7146, "node_name": "shrinkrightlimit", "Dec": "the maximum amount by which the right side of this glyph can shrink . must be non-negative ."}{"idx": 7154, "node_name": "advance", "Dec": "the advance width of the glyph"}{"idx": 7155, "node_name": "bounds", "Dec": "the black box bounds of the glyph"}{"idx": 7156, "node_name": "glyphtype", "Dec": "the type of the glyph"}{"idx": 7158, "node_name": "horizontal", "Dec": "if true , metrics are for a horizontal baseline , otherwise they are for a vertical baseline"}{"idx": 7159, "node_name": "advancex", "Dec": "the x-component of the glyph's advance"}{"idx": 7160, "node_name": "advancey", "Dec": "the y-component of the glyph's advance"}{"idx": 7161, "node_name": "bounds", "Dec": "the visual bounds of the glyph"}{"idx": 7162, "node_name": "glyphtype", "Dec": "the type of the glyph"}{"idx": 7187, "node_name": "glyphindex", "Dec": "the index into this glyphvector that corresponds to the glyph from which to retrieve the glyphcode ."}{"idx": 7189, "node_name": "beginglyphindex", "Dec": "the index into this glyphvector at which to start retrieving glyphcodes"}{"idx": 7190, "node_name": "numentries", "Dec": "the number of glyphcodes to retrieve"}{"idx": 7191, "node_name": "codereturn", "Dec": "the array that receives the glyphcodes and is then returned"}{"idx": 7193, "node_name": "glyphindex", "Dec": "the index of the glyph"}{"idx": 7195, "node_name": "beginglyphindex", "Dec": "the index of the first glyph"}{"idx": 7196, "node_name": "numentries", "Dec": "the number of glyph indices"}{"idx": 7197, "node_name": "codereturn", "Dec": "the array into which to return the character indices"}{"idx": 7201, "node_name": "renderfrc", "Dec": "the fontrendercontext of the graphics ."}{"idx": 7202, "node_name": "x", "Dec": "the x-coordinate at which to render this glyphvector ."}{"idx": 7203, "node_name": "y", "Dec": "the y-coordinate at which to render this glyphvector ."}{"idx": 7206, "node_name": "x", "Dec": "the x coordinate of this glyphvector ."}{"idx": 7207, "node_name": "y", "Dec": "the y coordinate of this glyphvector ."}{"idx": 7209, "node_name": "glyphindex", "Dec": "the index into this glyphvector"}{"idx": 7211, "node_name": "glyphindex", "Dec": "the index into this glyphvector"}{"idx": 7212, "node_name": "x", "Dec": "the x coordinate of the location of this glyphvector"}{"idx": 7213, "node_name": "y", "Dec": "the y coordinate of the location of this glyphvector"}{"idx": 7215, "node_name": "glyphindex", "Dec": "the index into this glyphvector"}{"idx": 7217, "node_name": "glyphindex", "Dec": "the index into this glyphvector"}{"idx": 7218, "node_name": "newpos", "Dec": "the point2d at which to position the glyph at the specified glyphindex"}{"idx": 7220, "node_name": "glyphindex", "Dec": "the index into this glyphvector"}{"idx": 7222, "node_name": "glyphindex", "Dec": "the index into this glyphvector"}{"idx": 7223, "node_name": "newtx", "Dec": "the new transform of the glyph at glyphindex"}{"idx": 7226, "node_name": "beginglyphindex", "Dec": "the index at which to begin retrieving glyph positions"}{"idx": 7227, "node_name": "numentries", "Dec": "the number of glyphs to retrieve"}{"idx": 7228, "node_name": "positionreturn", "Dec": "the array that receives the glyph positions and is then returned ."}{"idx": 7230, "node_name": "glyphindex", "Dec": "the index into this glyphvector that corresponds to the glyph from which to retrieve its logical bounds"}{"idx": 7232, "node_name": "glyphindex", "Dec": "the index into this glyphvector that corresponds to the glyph from which to retrieve its visual bounds"}{"idx": 7234, "node_name": "index", "Dec": "the index of the glyph ."}{"idx": 7235, "node_name": "renderfrc", "Dec": "the fontrendercontext of the graphics ."}{"idx": 7236, "node_name": "x", "Dec": "the x position at which to render this glyphvector ."}{"idx": 7237, "node_name": "y", "Dec": "the y position at which to render this glyphvector ."}{"idx": 7239, "node_name": "glyphindex", "Dec": "the index into this glyphvector that corresponds to the glyph from which to retrieve its metrics"}{"idx": 7241, "node_name": "glyphindex", "Dec": "the index into this glyphvector that corresponds to the glyph from which to retrieve its justification properties"}{"idx": 7243, "node_name": "set", "Dec": "the specified glyphvector to test"}{"idx": 7251, "node_name": "alignment", "Dec": "an int representing one of the graphicattribute alignment fields"}{"idx": 7257, "node_name": "tx", "Dec": "an optional affinetransform to apply to the outline of this graphicattribute . this can be null ."}{"idx": 7259, "node_name": "graphics", "Dec": "the graphics2d into which to render the graphic"}{"idx": 7260, "node_name": "x", "Dec": "the user-space x coordinate where the graphic is rendered"}{"idx": 7261, "node_name": "y", "Dec": "the user-space y coordinate where the graphic is rendered"}{"idx": 7266, "node_name": "image", "Dec": "the image rendered by this imagegraphicattribute . this object keeps a reference to image ."}{"idx": 7267, "node_name": "alignment", "Dec": "one of the alignments from this imagegraphicattribute"}{"idx": 7269, "node_name": "image", "Dec": "the image rendered by this imagegraphicattribute . this object keeps a reference to image ."}{"idx": 7270, "node_name": "alignment", "Dec": "one of the alignments from this imagegraphicattribute"}{"idx": 7271, "node_name": "originx", "Dec": "the x coordinate of the point within the image that appears at the origin of the imagegraphicattribute in the text line ."}{"idx": 7272, "node_name": "originy", "Dec": "the y coordinate of the point within the image that appears at the origin of the imagegraphicattribute in the text line ."}{"idx": 7279, "node_name": "rhs", "Dec": "the object to compare for equality"}{"idx": 7281, "node_name": "rhs", "Dec": "the imagegraphicattribute to compare for equality"}{"idx": 7305, "node_name": "name", "Dec": "the font name . this can be a font face name or a font family name , and may represent either a logical font or a physical font found in this graphicsenvironment . the family names for logical fonts are : dialog , dialoginput , monospaced , serif , or sansserif . pre-defined string constants exist for all of these names , for example , dialog . if name is null , the logical font name of the new font as returned by getname() is set to the name \" default \" ."}{"idx": 7306, "node_name": "style", "Dec": "the style constant for the font the style argument is an integer bitmask that may be plain , or a bitwise union of bold and / or italic ( for example , italic or bold|italic ) . if the style argument does not conform to one of the expected integer bitmasks then the style is set to plain ."}{"idx": 7307, "node_name": "size", "Dec": "the point size of the font"}{"idx": 7309, "node_name": "attributes", "Dec": "the attributes to assign to the new font , or null"}{"idx": 7311, "node_name": "font", "Dec": "from which to create this font ."}{"idx": 7313, "node_name": "chars", "Dec": "the text ."}{"idx": 7314, "node_name": "start", "Dec": "the index of the first char to examine ."}{"idx": 7315, "node_name": "end", "Dec": "the ending index , exclusive ."}{"idx": 7317, "node_name": "attributes", "Dec": "the attributes to assign to the new font"}{"idx": 7319, "node_name": "fontstream", "Dec": "an inputstream object representing the input data for the font or font collection ."}{"idx": 7321, "node_name": "fontfile", "Dec": "a file object containing the input data for the font or font collection ."}{"idx": 7323, "node_name": "fontformat", "Dec": "the type of the font , which is truetype_font if a truetype resource is specified . or type1_font if a type 1 resource is specified ."}{"idx": 7324, "node_name": "fontstream", "Dec": "an inputstream object representing the input data for the font ."}{"idx": 7326, "node_name": "fontformat", "Dec": "the type of the font , which is truetype_font if a truetype resource is specified or type1_font if a type 1 resource is specified . so long as the returned font , or its derived fonts are referenced the implementation may continue to access fontfile to retrieve font data . thus the results are undefined if the file is changed , or becomes inaccessible . to make the font available to font constructors the returned font must be registered in the graphicsenvironment by calling registerfont ( font ) ."}{"idx": 7327, "node_name": "fontfile", "Dec": "a file object representing the input data for the font ."}{"idx": 7331, "node_name": "l", "Dec": "locale for which to get the family name"}{"idx": 7336, "node_name": "l", "Dec": "a locale for which to get the font face name"}{"idx": 7346, "node_name": "nm", "Dec": "the property name"}{"idx": 7348, "node_name": "str", "Dec": "the name of the font , or null"}{"idx": 7350, "node_name": "nm", "Dec": "the case-insensitive property name"}{"idx": 7351, "node_name": "font", "Dec": "a default font to return if property nm is not defined"}{"idx": 7354, "node_name": "obj", "Dec": "the object to compare"}{"idx": 7359, "node_name": "c", "Dec": "a character used to identify the writing system"}{"idx": 7363, "node_name": "style", "Dec": "the style for the new font"}{"idx": 7364, "node_name": "size", "Dec": "the size for the new font"}{"idx": 7366, "node_name": "style", "Dec": "the style for the new font"}{"idx": 7367, "node_name": "trans", "Dec": "the affinetransform associated with the new font"}{"idx": 7369, "node_name": "size", "Dec": "the size for the new font ."}{"idx": 7371, "node_name": "trans", "Dec": "the affinetransform associated with the new font"}{"idx": 7373, "node_name": "style", "Dec": "the style for the new font"}{"idx": 7375, "node_name": "attributes", "Dec": "a map of attributes enabled for the new font"}{"idx": 7377, "node_name": "c", "Dec": "the character for which a glyph is needed"}{"idx": 7379, "node_name": "codepoint", "Dec": "the character ( unicode code point ) for which a glyph is needed ."}{"idx": 7381, "node_name": "str", "Dec": "a string object"}{"idx": 7383, "node_name": "text", "Dec": "the specified array of char values"}{"idx": 7384, "node_name": "start", "Dec": "the specified starting offset ( in chars ) into the specified array of char values"}{"idx": 7385, "node_name": "limit", "Dec": "the specified ending offset ( in chars ) into the specified array of char values"}{"idx": 7387, "node_name": "iter", "Dec": "a characteriterator object"}{"idx": 7388, "node_name": "start", "Dec": "the specified starting offset into the specified characteriterator ."}{"idx": 7389, "node_name": "limit", "Dec": "the specified ending offset into the specified characteriterator ."}{"idx": 7393, "node_name": "str", "Dec": "the specified string"}{"idx": 7394, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7396, "node_name": "str", "Dec": "the specified string"}{"idx": 7397, "node_name": "beginindex", "Dec": "the initial offset of str"}{"idx": 7398, "node_name": "limit", "Dec": "the end offset of str"}{"idx": 7399, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7401, "node_name": "chars", "Dec": "an array of characters"}{"idx": 7402, "node_name": "beginindex", "Dec": "the initial offset of chars"}{"idx": 7403, "node_name": "limit", "Dec": "the end offset of chars"}{"idx": 7404, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7406, "node_name": "ci", "Dec": "the specified characteriterator"}{"idx": 7407, "node_name": "beginindex", "Dec": "the initial offset in ci"}{"idx": 7408, "node_name": "limit", "Dec": "the end offset of ci"}{"idx": 7409, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7411, "node_name": "str", "Dec": "the specified string"}{"idx": 7412, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7414, "node_name": "str", "Dec": "the specified string"}{"idx": 7415, "node_name": "beginindex", "Dec": "the initial offset of str"}{"idx": 7416, "node_name": "limit", "Dec": "the end offset of str"}{"idx": 7417, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7419, "node_name": "chars", "Dec": "an array of characters"}{"idx": 7420, "node_name": "beginindex", "Dec": "the initial offset in the array of characters"}{"idx": 7421, "node_name": "limit", "Dec": "the end offset in the array of characters"}{"idx": 7422, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7424, "node_name": "ci", "Dec": "the specified characteriterator"}{"idx": 7425, "node_name": "beginindex", "Dec": "the initial offset in ci"}{"idx": 7426, "node_name": "limit", "Dec": "the end offset in ci"}{"idx": 7427, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7429, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7431, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7432, "node_name": "str", "Dec": "the specified string"}{"idx": 7434, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7435, "node_name": "chars", "Dec": "the specified array of characters"}{"idx": 7437, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7438, "node_name": "ci", "Dec": "the specified characteriterator"}{"idx": 7440, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7441, "node_name": "glyphcodes", "Dec": "the specified integer array"}{"idx": 7443, "node_name": "frc", "Dec": "the specified fontrendercontext"}{"idx": 7444, "node_name": "text", "Dec": "the text to layout"}{"idx": 7445, "node_name": "start", "Dec": "the start of the text to use for the glyphvector"}{"idx": 7446, "node_name": "limit", "Dec": "the limit of the text to use for the glyphvector"}{"idx": 7447, "node_name": "flags", "Dec": "control flags as described above"}{"idx": 7451, "node_name": "point", "Dec": "the point to convert . if it is not the same object as location , point will remain unmodified by this call ."}{"idx": 7452, "node_name": "location", "Dec": "a point2d to hold the returned location . it can be the same object as point ."}{"idx": 7454, "node_name": "location", "Dec": "a point2d representing the advance ( in x ) and offset ( in y ) of a location relative to the path . if location is not the same object as point , location will remain unmodified by this call ."}{"idx": 7455, "node_name": "preceding", "Dec": "if true , the portion preceding the advance should be used , if false the portion after should be used . this has no effect if the path does not break or bend sharply at the advance ."}{"idx": 7456, "node_name": "point", "Dec": "a point2d to hold the returned point . it can be the same object as location ."}{"idx": 7459, "node_name": "text", "Dec": "the text for which this linebreakmeasurer produces textlayout objects ; the text must contain at least one character ; if the text available through iter changes , further calls to this linebreakmeasurer instance are undefined ( except , in some cases , when insertchar or deletechar are invoked afterward"}{"idx": 7460, "node_name": "frc", "Dec": "contains information about a graphics device which is needed to measure the text correctly ; text measurements can vary slightly depending on the device resolution , and attributes such as antialiasing ; this parameter does not specify a translation between the linebreakmeasurer and user space"}{"idx": 7462, "node_name": "text", "Dec": "the text for which this linebreakmeasurer produces textlayout objects ; the text must contain at least one character ; if the text available through iter changes , further calls to this linebreakmeasurer instance are undefined ( except , in some cases , when insertchar or deletechar are invoked afterward"}{"idx": 7463, "node_name": "breakiter", "Dec": "the breakiterator which defines line breaks"}{"idx": 7464, "node_name": "frc", "Dec": "contains information about a graphics device which is needed to measure the text correctly ; text measurements can vary slightly depending on the device resolution , and attributes such as antialiasing ; this parameter does not specify a translation between the linebreakmeasurer and user space"}{"idx": 7466, "node_name": "wrappingwidth", "Dec": "the maximum visible advance permitted for the text in the next layout"}{"idx": 7468, "node_name": "wrappingwidth", "Dec": "the maximum visible advance permitted for the text in the next layout"}{"idx": 7469, "node_name": "offsetlimit", "Dec": "the first character that can not be included in the next layout , even if the text after the limit would fit within the wrapping width ; offsetlimit must be greater than the current position"}{"idx": 7470, "node_name": "requirenextword", "Dec": "if true , the current position that is returned if the entire next word does not fit within wrappingwidth ; if false , the offset returned is at least one greater than the current position"}{"idx": 7472, "node_name": "wrappingwidth", "Dec": "the maximum visible advance permitted for the text in the next layout"}{"idx": 7474, "node_name": "wrappingwidth", "Dec": "the maximum visible advance permitted for the text in the next layout"}{"idx": 7475, "node_name": "offsetlimit", "Dec": "the first character that can not be included in the next layout , even if the text after the limit would fit within the wrapping width ; offsetlimit must be greater than the current position"}{"idx": 7476, "node_name": "requirenextword", "Dec": "if true , and if the entire word at the current position does not fit within the wrapping width , null is returned . if false , a valid layout is returned that includes at least the character at the current position"}{"idx": 7479, "node_name": "newposition", "Dec": "the current position of this linebreakmeasurer ; the position should be within the text used to construct this linebreakmeasurer ( or in the text most recently passed to insertchar or deletechar"}{"idx": 7481, "node_name": "newparagraph", "Dec": "the text after the insertion"}{"idx": 7482, "node_name": "insertpos", "Dec": "the position in the text at which the character is inserted"}{"idx": 7484, "node_name": "newparagraph", "Dec": "the text after the deletion"}{"idx": 7485, "node_name": "deletepos", "Dec": "the position in the text at which the character is deleted"}{"idx": 7505, "node_name": "axes", "Dec": "an array containing axis values"}{"idx": 7507, "node_name": "glyphwidths", "Dec": "an array of floats representing the desired width of each glyph in font space"}{"idx": 7508, "node_name": "avgstemwidth", "Dec": "the average stem width for the overall font in font space"}{"idx": 7509, "node_name": "typicalcapheight", "Dec": "the height of a typical upper case char"}{"idx": 7510, "node_name": "typicalxheight", "Dec": "the height of a typical lower case char"}{"idx": 7511, "node_name": "italicangle", "Dec": "the angle at which the italics lean , in degrees counterclockwise from vertical"}{"idx": 7534, "node_name": "singlerange", "Dec": "the specified unicode range"}{"idx": 7536, "node_name": "singlerange", "Dec": "the unicode range given by a numericshaper.range constant ."}{"idx": 7538, "node_name": "ranges", "Dec": "the specified unicode ranges"}{"idx": 7540, "node_name": "ranges", "Dec": "the specified unicode ranges"}{"idx": 7542, "node_name": "ranges", "Dec": "the specified unicode ranges"}{"idx": 7543, "node_name": "defaultcontext", "Dec": "the starting context , such as numericshaper.european"}{"idx": 7545, "node_name": "ranges", "Dec": "the specified unicode ranges"}{"idx": 7546, "node_name": "defaultcontext", "Dec": "the starting context , such as numericshaper.range.european"}{"idx": 7548, "node_name": "text", "Dec": "an array of characters to convert"}{"idx": 7549, "node_name": "start", "Dec": "the index into text to start converting"}{"idx": 7550, "node_name": "count", "Dec": "the number of characters in text to convert"}{"idx": 7552, "node_name": "text", "Dec": "an array of characters"}{"idx": 7553, "node_name": "start", "Dec": "the index into text to start converting"}{"idx": 7554, "node_name": "count", "Dec": "the number of characters in text to convert"}{"idx": 7555, "node_name": "context", "Dec": "the context to which to convert the characters , such as numericshaper.european"}{"idx": 7557, "node_name": "text", "Dec": "a char array"}{"idx": 7558, "node_name": "start", "Dec": "the index into text to start converting"}{"idx": 7559, "node_name": "count", "Dec": "the number of chars in text to convert"}{"idx": 7560, "node_name": "context", "Dec": "the context to which to convert the characters , such as numericshaper.range.european"}{"idx": 7566, "node_name": "o", "Dec": "the specified object to compare to this numericshaper"}{"idx": 7571, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 7626, "node_name": "sfnttag", "Dec": "a four-character code as a 32-bit integer"}{"idx": 7628, "node_name": "strsfnttag", "Dec": "a four-character code as a string"}{"idx": 7630, "node_name": "sfnttag", "Dec": "a four-character code as a 32-bit integer"}{"idx": 7631, "node_name": "offset", "Dec": "index of first byte to return from table"}{"idx": 7632, "node_name": "count", "Dec": "number of bytes to return from table"}{"idx": 7634, "node_name": "strsfnttag", "Dec": "a four-character code as a string"}{"idx": 7635, "node_name": "offset", "Dec": "index of first byte to return from table"}{"idx": 7636, "node_name": "count", "Dec": "number of bytes to return from table"}{"idx": 7638, "node_name": "sfnttag", "Dec": "a four-character code as a 32-bit integer"}{"idx": 7640, "node_name": "strsfnttag", "Dec": "a four-character code as a string"}{"idx": 7645, "node_name": "shape", "Dec": "the shape to render . the shape is rendered with its origin at the origin of this shapegraphicattribute in the host textlayout . this object maintains a reference to shape ."}{"idx": 7646, "node_name": "alignment", "Dec": "one of the alignments from this shapegraphicattribute ."}{"idx": 7647, "node_name": "stroke", "Dec": "true if the shape should be stroked ; false if the shape should be filled ."}{"idx": 7653, "node_name": "tx", "Dec": "an optional affinetransform to apply to the this shapegraphicattribute . this can be null ."}{"idx": 7656, "node_name": "rhs", "Dec": "the object to compare for equality"}{"idx": 7658, "node_name": "rhs", "Dec": "the shapegraphicattribute to compare for equality"}{"idx": 7720, "node_name": "name", "Dec": "the attribute name to assign to this textattribute"}{"idx": 7728, "node_name": "obj", "Dec": "the object to test for equality"}{"idx": 7730, "node_name": "hitinfo", "Dec": "a specified texthitinfo"}{"idx": 7733, "node_name": "charindex", "Dec": "the index of the character hit"}{"idx": 7735, "node_name": "charindex", "Dec": "the index of the character hit"}{"idx": 7737, "node_name": "offset", "Dec": "an offset associated with the character before the offset"}{"idx": 7739, "node_name": "offset", "Dec": "an offset associated with the character after the offset"}{"idx": 7742, "node_name": "delta", "Dec": "the value to offset this charindex"}{"idx": 7746, "node_name": "hit1", "Dec": "a valid hit in layout"}{"idx": 7747, "node_name": "hit2", "Dec": "a valid hit in layout"}{"idx": 7748, "node_name": "layout", "Dec": "the textlayout in which hit1 and hit2 are used"}{"idx": 7752, "node_name": "string", "Dec": "the text to display"}{"idx": 7753, "node_name": "font", "Dec": "a font used to style the text"}{"idx": 7754, "node_name": "frc", "Dec": "contains information about a graphics device which is needed to measure the text correctly . text measurements can vary slightly depending on the device resolution , and attributes such as antialiasing . this parameter does not specify a translation between the textlayout and user space ."}{"idx": 7756, "node_name": "string", "Dec": "the text to display"}{"idx": 7757, "node_name": "attributes", "Dec": "the attributes used to style the text"}{"idx": 7758, "node_name": "frc", "Dec": "contains information about a graphics device which is needed to measure the text correctly . text measurements can vary slightly depending on the device resolution , and attributes such as antialiasing . this parameter does not specify a translation between the textlayout and user space ."}{"idx": 7760, "node_name": "text", "Dec": "the styled text to display"}{"idx": 7761, "node_name": "frc", "Dec": "contains information about a graphics device which is needed to measure the text correctly . text measurements can vary slightly depending on the device resolution , and attributes such as antialiasing . this parameter does not specify a translation between the textlayout and user space ."}{"idx": 7764, "node_name": "justificationwidth", "Dec": "the width to use when justifying the line . for best results , it should not be too different from the current advance of the line ."}{"idx": 7766, "node_name": "justificationwidth", "Dec": "the width to use when justifying the line . for best results , it should not be too different from the current advance of the line ."}{"idx": 7776, "node_name": "frc", "Dec": "the fontrendercontext of the graphics ."}{"idx": 7777, "node_name": "x", "Dec": "the x-coordinate at which to render this textlayout ."}{"idx": 7778, "node_name": "y", "Dec": "the y-coordinate at which to render this textlayout ."}{"idx": 7783, "node_name": "hit", "Dec": "a hit on a character in this textlayout"}{"idx": 7784, "node_name": "bounds", "Dec": "the bounds to which the caret info is constructed . the bounds is in baseline-relative coordinates ."}{"idx": 7786, "node_name": "hit", "Dec": "a hit on a character in this textlayout"}{"idx": 7788, "node_name": "hit", "Dec": "a hit on a character in this layout"}{"idx": 7790, "node_name": "offset", "Dec": "an insertion offset in this textlayout . cannot be less than 0 or greater than this textlayout object's character count ."}{"idx": 7791, "node_name": "policy", "Dec": "the policy used to select the strong caret"}{"idx": 7793, "node_name": "offset", "Dec": "an insertion offset in this textlayout . cannot be less than 0 or greater than the textlayout object's character count ."}{"idx": 7795, "node_name": "hit", "Dec": "a hit on a character in this textlayout ."}{"idx": 7797, "node_name": "offset", "Dec": "an insertion offset in this textlayout . cannot be less than 0 or greater than this textlayout object's character count ."}{"idx": 7798, "node_name": "policy", "Dec": "the policy used to select the strong caret"}{"idx": 7800, "node_name": "offset", "Dec": "an insertion offset in this textlayout . cannot be less than 0 or greater than this textlayout object's character count ."}{"idx": 7802, "node_name": "hit", "Dec": "the specified hit"}{"idx": 7804, "node_name": "hit", "Dec": "the hit at which to generate the caret"}{"idx": 7805, "node_name": "bounds", "Dec": "the bounds of the textlayout to use in generating the caret . the bounds is in baseline-relative coordinates ."}{"idx": 7807, "node_name": "hit", "Dec": "the hit at which to generate the caret"}{"idx": 7809, "node_name": "index", "Dec": "the index of the character from which to get the level"}{"idx": 7811, "node_name": "offset", "Dec": "an offset in this textlayout"}{"idx": 7812, "node_name": "bounds", "Dec": "the bounds to which to extend the carets . the bounds is in baseline-relative coordinates ."}{"idx": 7813, "node_name": "policy", "Dec": "the specified caretpolicy"}{"idx": 7815, "node_name": "offset", "Dec": "an offset in this textlayout"}{"idx": 7816, "node_name": "bounds", "Dec": "the bounds to which to extend the carets . this is in baseline-relative coordinates ."}{"idx": 7818, "node_name": "offset", "Dec": "an offset in this textlayout"}{"idx": 7820, "node_name": "firstendpoint", "Dec": "an endpoint of the visual range"}{"idx": 7821, "node_name": "secondendpoint", "Dec": "the other endpoint of the visual range . this endpoint can be less than firstendpoint ."}{"idx": 7823, "node_name": "firstendpoint", "Dec": "one end of the visual selection"}{"idx": 7824, "node_name": "secondendpoint", "Dec": "the other end of the visual selection"}{"idx": 7825, "node_name": "bounds", "Dec": "the bounding rectangle to which to extend the selection . this is in baseline-relative coordinates ."}{"idx": 7827, "node_name": "firstendpoint", "Dec": "one end of the visual selection"}{"idx": 7828, "node_name": "secondendpoint", "Dec": "the other end of the visual selection"}{"idx": 7830, "node_name": "firstendpoint", "Dec": "an endpoint in the range of characters to select"}{"idx": 7831, "node_name": "secondendpoint", "Dec": "the other endpoint of the range of characters to select . can be less than firstendpoint . the range includes the character at min ( firstendpoint , secondendpoint ) , but excludes max ( firstendpoint , secondendpoint ) ."}{"idx": 7832, "node_name": "bounds", "Dec": "the bounding rectangle to which to extend the selection . this is in baseline-relative coordinates ."}{"idx": 7834, "node_name": "firstendpoint", "Dec": "an endpoint in the range of characters to select"}{"idx": 7835, "node_name": "secondendpoint", "Dec": "the other endpoint of the range of characters to select . can be less than firstendpoint . the range includes the character at min ( firstendpoint , secondendpoint ) , but excludes max ( firstendpoint , secondendpoint ) ."}{"idx": 7837, "node_name": "firstendpoint", "Dec": "one end of the character range"}{"idx": 7838, "node_name": "secondendpoint", "Dec": "the other end of the character range . can be less than firstendpoint ."}{"idx": 7840, "node_name": "x", "Dec": "the x offset from the origin of this textlayout . this is in standard coordinates ."}{"idx": 7841, "node_name": "y", "Dec": "the y offset from the origin of this textlayout . this is in standard coordinates ."}{"idx": 7842, "node_name": "bounds", "Dec": "the bounds of the textlayout . this is in baseline-relative coordinates ."}{"idx": 7844, "node_name": "x", "Dec": "the x offset from the origin of this textlayout . this is in standard coordinates ."}{"idx": 7845, "node_name": "y", "Dec": "the y offset from the origin of this textlayout . this is in standard coordinates ."}{"idx": 7847, "node_name": "rhs", "Dec": "the textlayout to compare to this textlayout"}{"idx": 7850, "node_name": "g2", "Dec": "the graphics2d context into which to render the layout"}{"idx": 7851, "node_name": "x", "Dec": "the x coordinate of the origin of this textlayout"}{"idx": 7852, "node_name": "y", "Dec": "the y coordinate of the origin of this textlayout"}{"idx": 7854, "node_name": "tx", "Dec": "an optional affinetransform to apply to the outline of this textlayout ."}{"idx": 7857, "node_name": "hit", "Dec": "the hit to check . this must be a valid hit on the textlayout ."}{"idx": 7858, "node_name": "point", "Dec": "the returned point . the point is in standard coordinates ."}{"idx": 7861, "node_name": "text", "Dec": "the source paragraph . cannot be null ."}{"idx": 7862, "node_name": "frc", "Dec": "the information about a graphics device which is needed to measure the text correctly . cannot be null ."}{"idx": 7864, "node_name": "start", "Dec": "the character index at which to start measuring . start is an absolute index , not relative to the start of the paragraph"}{"idx": 7865, "node_name": "maxadvance", "Dec": "the graphical width in which the line must fit"}{"idx": 7867, "node_name": "start", "Dec": "the character index at which to start measuring"}{"idx": 7868, "node_name": "limit", "Dec": "the character index at which to stop measuring"}{"idx": 7870, "node_name": "start", "Dec": "the index of the first character"}{"idx": 7871, "node_name": "limit", "Dec": "the index after the last character . must be greater than start"}{"idx": 7873, "node_name": "newparagraph", "Dec": "the text of the paragraph after performing the insertion . cannot be null ."}{"idx": 7874, "node_name": "insertpos", "Dec": "the position in the text where the character was inserted . must not be less than the start of newparagraph , and must be less than the end of newparagraph ."}{"idx": 7876, "node_name": "newparagraph", "Dec": "the text of the paragraph after performing the deletion . cannot be null ."}{"idx": 7877, "node_name": "deletepos", "Dec": "the position in the text where the character was removed . must not be less than the start of newparagraph , and must not be greater than the end of newparagraph ."}{"idx": 7881, "node_name": "transform", "Dec": "the specified affinetransform to be wrapped , or null ."}{"idx": 7886, "node_name": "rhs", "Dec": "the object to compare to"}{"idx": 7889, "node_name": "reason", "Dec": "a string message indicating why the font is not accepted ."}{"idx": 7893, "node_name": "font", "Dec": "the font"}{"idx": 7904, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be measured"}{"idx": 7906, "node_name": "ch", "Dec": "the character to be measured"}{"idx": 7908, "node_name": "str", "Dec": "the string to be measured"}{"idx": 7910, "node_name": "data", "Dec": "the array of characters to be measured"}{"idx": 7911, "node_name": "off", "Dec": "the start offset of the characters in the array"}{"idx": 7912, "node_name": "len", "Dec": "the number of characters to be measured from the array"}{"idx": 7914, "node_name": "data", "Dec": "the array of bytes to be measured"}{"idx": 7915, "node_name": "off", "Dec": "the start offset of the bytes in the array"}{"idx": 7916, "node_name": "len", "Dec": "the number of bytes to be measured from the array"}{"idx": 7920, "node_name": "str", "Dec": "the specified string"}{"idx": 7921, "node_name": "context", "Dec": "the specified graphics context"}{"idx": 7923, "node_name": "str", "Dec": "the specified string"}{"idx": 7924, "node_name": "beginindex", "Dec": "the initial offset of str"}{"idx": 7925, "node_name": "limit", "Dec": "the end offset of str"}{"idx": 7926, "node_name": "context", "Dec": "the specified graphics context"}{"idx": 7928, "node_name": "chars", "Dec": "the specified character array"}{"idx": 7929, "node_name": "beginindex", "Dec": "the initial offset of chars"}{"idx": 7930, "node_name": "limit", "Dec": "the end offset of chars"}{"idx": 7931, "node_name": "context", "Dec": "the specified graphics context"}{"idx": 7933, "node_name": "ci", "Dec": "the specified characteriterator"}{"idx": 7934, "node_name": "beginindex", "Dec": "the initial offset in ci"}{"idx": 7935, "node_name": "limit", "Dec": "the end index of ci"}{"idx": 7936, "node_name": "context", "Dec": "the specified graphics context"}{"idx": 7938, "node_name": "str", "Dec": "the specified string"}{"idx": 7939, "node_name": "context", "Dec": "the specified graphics context"}{"idx": 7941, "node_name": "str", "Dec": "the specified string"}{"idx": 7942, "node_name": "beginindex", "Dec": "the offset of the beginning of str"}{"idx": 7943, "node_name": "limit", "Dec": "the end offset of str"}{"idx": 7944, "node_name": "context", "Dec": "the specified graphics context"}{"idx": 7946, "node_name": "chars", "Dec": "an array of characters"}{"idx": 7947, "node_name": "beginindex", "Dec": "the initial offset of the array of characters"}{"idx": 7948, "node_name": "limit", "Dec": "the end offset of the array of characters"}{"idx": 7949, "node_name": "context", "Dec": "the specified graphics context"}{"idx": 7951, "node_name": "ci", "Dec": "the specified characteriterator"}{"idx": 7952, "node_name": "beginindex", "Dec": "the initial offset in ci"}{"idx": 7953, "node_name": "limit", "Dec": "the end index of ci"}{"idx": 7954, "node_name": "context", "Dec": "the specified graphics context"}{"idx": 7956, "node_name": "context", "Dec": "the specified graphics context"}{"idx": 7970, "node_name": "gc", "Dec": "the graphicsconfiguration of the target screen device . if gc is null , the system default graphicsconfiguration is assumed ."}{"idx": 7972, "node_name": "title", "Dec": "the title to be displayed in the frame's border . a null value is treated as an empty string , \"\" ."}{"idx": 7974, "node_name": "title", "Dec": "the title to be displayed in the frame's border . a null value is treated as an empty string , \"\" ."}{"idx": 7975, "node_name": "gc", "Dec": "the graphicsconfiguration of the target screen device . if gc is null , the system default graphicsconfiguration is assumed ."}{"idx": 7979, "node_name": "title", "Dec": "the title to be displayed in the frame's border . a null value is treated as an empty string , \"\" ."}{"idx": 7983, "node_name": "mb", "Dec": "the menu bar being set . if this parameter is null then any existing menu bar on this frame is removed ."}{"idx": 7986, "node_name": "resizable", "Dec": "true if this frame is resizable ; false otherwise ."}{"idx": 7988, "node_name": "state", "Dec": "either frame.normal or frame.iconified ."}{"idx": 7990, "node_name": "state", "Dec": "a bitwise mask of frame state constants"}{"idx": 7994, "node_name": "bounds", "Dec": "bounds for the maximized state"}{"idx": 7997, "node_name": "undecorated", "Dec": "true if no frame decorations are to be enabled ; false if frame decorations are to be enabled"}{"idx": 8000, "node_name": "m", "Dec": "the menu component to remove . if m is null , then no action is taken"}{"idx": 8018, "node_name": "tx", "Dec": "the affinetransform object to copy"}{"idx": 8020, "node_name": "m00", "Dec": "the x coordinate scaling element of the 3x3 matrix"}{"idx": 8021, "node_name": "m10", "Dec": "the y coordinate shearing element of the 3x3 matrix"}{"idx": 8022, "node_name": "m01", "Dec": "the x coordinate shearing element of the 3x3 matrix"}{"idx": 8023, "node_name": "m11", "Dec": "the y coordinate scaling element of the 3x3 matrix"}{"idx": 8024, "node_name": "m02", "Dec": "the x coordinate translation element of the 3x3 matrix"}{"idx": 8025, "node_name": "m12", "Dec": "the y coordinate translation element of the 3x3 matrix"}{"idx": 8027, "node_name": "flatmatrix", "Dec": "the float array containing the values to be set in the new affinetransform object . the length of the array is assumed to be at least 4 . if the length of the array is less than 6 , only the first 4 values are taken . if the length of the array is greater than 6 , the first 6 values are taken ."}{"idx": 8029, "node_name": "m00", "Dec": "the x coordinate scaling element of the 3x3 matrix"}{"idx": 8030, "node_name": "m10", "Dec": "the y coordinate shearing element of the 3x3 matrix"}{"idx": 8031, "node_name": "m01", "Dec": "the x coordinate shearing element of the 3x3 matrix"}{"idx": 8032, "node_name": "m11", "Dec": "the y coordinate scaling element of the 3x3 matrix"}{"idx": 8033, "node_name": "m02", "Dec": "the x coordinate translation element of the 3x3 matrix"}{"idx": 8034, "node_name": "m12", "Dec": "the y coordinate translation element of the 3x3 matrix"}{"idx": 8036, "node_name": "flatmatrix", "Dec": "the double array containing the values to be set in the new affinetransform object . the length of the array is assumed to be at least 4 . if the length of the array is less than 6 , only the first 4 values are taken . if the length of the array is greater than 6 , the first 6 values are taken ."}{"idx": 8038, "node_name": "tx", "Dec": "the distance by which coordinates are translated in the x axis direction"}{"idx": 8039, "node_name": "ty", "Dec": "the distance by which coordinates are translated in the y axis direction"}{"idx": 8041, "node_name": "theta", "Dec": "the angle of rotation measured in radians"}{"idx": 8043, "node_name": "theta", "Dec": "the angle of rotation measured in radians"}{"idx": 8044, "node_name": "anchorx", "Dec": "the x coordinate of the rotation anchor point"}{"idx": 8045, "node_name": "anchory", "Dec": "the y coordinate of the rotation anchor point"}{"idx": 8047, "node_name": "vecx", "Dec": "the x coordinate of the rotation vector"}{"idx": 8048, "node_name": "vecy", "Dec": "the y coordinate of the rotation vector"}{"idx": 8050, "node_name": "vecx", "Dec": "the x coordinate of the rotation vector"}{"idx": 8051, "node_name": "vecy", "Dec": "the y coordinate of the rotation vector"}{"idx": 8052, "node_name": "anchorx", "Dec": "the x coordinate of the rotation anchor point"}{"idx": 8053, "node_name": "anchory", "Dec": "the y coordinate of the rotation anchor point"}{"idx": 8055, "node_name": "numquadrants", "Dec": "the number of 90 degree arcs to rotate by"}{"idx": 8057, "node_name": "numquadrants", "Dec": "the number of 90 degree arcs to rotate by"}{"idx": 8058, "node_name": "anchorx", "Dec": "the x coordinate of the rotation anchor point"}{"idx": 8059, "node_name": "anchory", "Dec": "the y coordinate of the rotation anchor point"}{"idx": 8061, "node_name": "sx", "Dec": "the factor by which coordinates are scaled along the x axis direction"}{"idx": 8062, "node_name": "sy", "Dec": "the factor by which coordinates are scaled along the y axis direction"}{"idx": 8064, "node_name": "shx", "Dec": "the multiplier by which coordinates are shifted in the direction of the positive x axis as a factor of their y coordinate"}{"idx": 8065, "node_name": "shy", "Dec": "the multiplier by which coordinates are shifted in the direction of the positive y axis as a factor of their x coordinate"}{"idx": 8069, "node_name": "flatmatrix", "Dec": "the double array used to store the returned values ."}{"idx": 8077, "node_name": "tx", "Dec": "the distance by which coordinates are translated in the x axis direction"}{"idx": 8078, "node_name": "ty", "Dec": "the distance by which coordinates are translated in the y axis direction"}{"idx": 8080, "node_name": "theta", "Dec": "the angle of rotation measured in radians"}{"idx": 8082, "node_name": "theta", "Dec": "the angle of rotation measured in radians"}{"idx": 8083, "node_name": "anchorx", "Dec": "the x coordinate of the rotation anchor point"}{"idx": 8084, "node_name": "anchory", "Dec": "the y coordinate of the rotation anchor point"}{"idx": 8086, "node_name": "vecx", "Dec": "the x coordinate of the rotation vector"}{"idx": 8087, "node_name": "vecy", "Dec": "the y coordinate of the rotation vector"}{"idx": 8089, "node_name": "vecx", "Dec": "the x coordinate of the rotation vector"}{"idx": 8090, "node_name": "vecy", "Dec": "the y coordinate of the rotation vector"}{"idx": 8091, "node_name": "anchorx", "Dec": "the x coordinate of the rotation anchor point"}{"idx": 8092, "node_name": "anchory", "Dec": "the y coordinate of the rotation anchor point"}{"idx": 8094, "node_name": "numquadrants", "Dec": "the number of 90 degree arcs to rotate by"}{"idx": 8096, "node_name": "numquadrants", "Dec": "the number of 90 degree arcs to rotate by"}{"idx": 8097, "node_name": "anchorx", "Dec": "the x coordinate of the rotation anchor point"}{"idx": 8098, "node_name": "anchory", "Dec": "the y coordinate of the rotation anchor point"}{"idx": 8100, "node_name": "sx", "Dec": "the factor by which coordinates are scaled along the x axis direction"}{"idx": 8101, "node_name": "sy", "Dec": "the factor by which coordinates are scaled along the y axis direction"}{"idx": 8103, "node_name": "shx", "Dec": "the multiplier by which coordinates are shifted in the direction of the positive x axis as a factor of their y coordinate"}{"idx": 8104, "node_name": "shy", "Dec": "the multiplier by which coordinates are shifted in the direction of the positive y axis as a factor of their x coordinate"}{"idx": 8107, "node_name": "tx", "Dec": "the distance by which coordinates are translated in the x axis direction"}{"idx": 8108, "node_name": "ty", "Dec": "the distance by which coordinates are translated in the y axis direction"}{"idx": 8110, "node_name": "theta", "Dec": "the angle of rotation measured in radians"}{"idx": 8112, "node_name": "theta", "Dec": "the angle of rotation measured in radians"}{"idx": 8113, "node_name": "anchorx", "Dec": "the x coordinate of the rotation anchor point"}{"idx": 8114, "node_name": "anchory", "Dec": "the y coordinate of the rotation anchor point"}{"idx": 8116, "node_name": "vecx", "Dec": "the x coordinate of the rotation vector"}{"idx": 8117, "node_name": "vecy", "Dec": "the y coordinate of the rotation vector"}{"idx": 8119, "node_name": "vecx", "Dec": "the x coordinate of the rotation vector"}{"idx": 8120, "node_name": "vecy", "Dec": "the y coordinate of the rotation vector"}{"idx": 8121, "node_name": "anchorx", "Dec": "the x coordinate of the rotation anchor point"}{"idx": 8122, "node_name": "anchory", "Dec": "the y coordinate of the rotation anchor point"}{"idx": 8124, "node_name": "numquadrants", "Dec": "the number of 90 degree arcs to rotate by"}{"idx": 8126, "node_name": "numquadrants", "Dec": "the number of 90 degree arcs to rotate by"}{"idx": 8127, "node_name": "anchorx", "Dec": "the x coordinate of the rotation anchor point"}{"idx": 8128, "node_name": "anchory", "Dec": "the y coordinate of the rotation anchor point"}{"idx": 8130, "node_name": "sx", "Dec": "the factor by which coordinates are scaled along the x axis direction"}{"idx": 8131, "node_name": "sy", "Dec": "the factor by which coordinates are scaled along the y axis direction"}{"idx": 8133, "node_name": "shx", "Dec": "the multiplier by which coordinates are shifted in the direction of the positive x axis as a factor of their y coordinate"}{"idx": 8134, "node_name": "shy", "Dec": "the multiplier by which coordinates are shifted in the direction of the positive y axis as a factor of their x coordinate"}{"idx": 8136, "node_name": "tx", "Dec": "the affinetransform object from which to copy the transform"}{"idx": 8138, "node_name": "m00", "Dec": "the x coordinate scaling element of the 3x3 matrix"}{"idx": 8139, "node_name": "m10", "Dec": "the y coordinate shearing element of the 3x3 matrix"}{"idx": 8140, "node_name": "m01", "Dec": "the x coordinate shearing element of the 3x3 matrix"}{"idx": 8141, "node_name": "m11", "Dec": "the y coordinate scaling element of the 3x3 matrix"}{"idx": 8142, "node_name": "m02", "Dec": "the x coordinate translation element of the 3x3 matrix"}{"idx": 8143, "node_name": "m12", "Dec": "the y coordinate translation element of the 3x3 matrix"}{"idx": 8145, "node_name": "tx", "Dec": "the affinetransform object to be concatenated with this affinetransform object ."}{"idx": 8147, "node_name": "tx", "Dec": "the affinetransform object to be concatenated with this affinetransform object ."}{"idx": 8151, "node_name": "ptsrc", "Dec": "the specified point2d to be transformed"}{"idx": 8152, "node_name": "ptdst", "Dec": "the specified point2d that stores the result of transforming ptsrc"}{"idx": 8154, "node_name": "ptsrc", "Dec": "the array containing the source point objects"}{"idx": 8155, "node_name": "ptdst", "Dec": "the array into which the transform point objects are returned"}{"idx": 8156, "node_name": "srcoff", "Dec": "the offset to the first point object to be transformed in the source array"}{"idx": 8157, "node_name": "dstoff", "Dec": "the offset to the location of the first transformed point object that is stored in the destination array"}{"idx": 8158, "node_name": "numpts", "Dec": "the number of point objects to be transformed"}{"idx": 8160, "node_name": "srcpts", "Dec": "the array containing the source point coordinates . each point is stored as a pair of x , y coordinates ."}{"idx": 8161, "node_name": "dstpts", "Dec": "the array into which the transformed point coordinates are returned . each point is stored as a pair of x , y coordinates ."}{"idx": 8162, "node_name": "srcoff", "Dec": "the offset to the first point to be transformed in the source array"}{"idx": 8163, "node_name": "dstoff", "Dec": "the offset to the location of the first transformed point that is stored in the destination array"}{"idx": 8164, "node_name": "numpts", "Dec": "the number of points to be transformed"}{"idx": 8166, "node_name": "srcpts", "Dec": "the array containing the source point coordinates . each point is stored as a pair of x , y coordinates ."}{"idx": 8167, "node_name": "dstpts", "Dec": "the array into which the transformed point coordinates are returned . each point is stored as a pair of x , y coordinates ."}{"idx": 8168, "node_name": "srcoff", "Dec": "the offset to the first point to be transformed in the source array"}{"idx": 8169, "node_name": "dstoff", "Dec": "the offset to the location of the first transformed point that is stored in the destination array"}{"idx": 8170, "node_name": "numpts", "Dec": "the number of point objects to be transformed"}{"idx": 8172, "node_name": "srcpts", "Dec": "the array containing the source point coordinates . each point is stored as a pair of x , y coordinates ."}{"idx": 8173, "node_name": "dstpts", "Dec": "the array into which the transformed point coordinates are returned . each point is stored as a pair of x , y coordinates ."}{"idx": 8174, "node_name": "srcoff", "Dec": "the offset to the first point to be transformed in the source array"}{"idx": 8175, "node_name": "dstoff", "Dec": "the offset to the location of the first transformed point that is stored in the destination array"}{"idx": 8176, "node_name": "numpts", "Dec": "the number of points to be transformed"}{"idx": 8178, "node_name": "srcpts", "Dec": "the array containing the source point coordinates . each point is stored as a pair of x , y coordinates ."}{"idx": 8179, "node_name": "dstpts", "Dec": "the array into which the transformed point coordinates are returned . each point is stored as a pair of x , y coordinates ."}{"idx": 8180, "node_name": "srcoff", "Dec": "the offset to the first point to be transformed in the source array"}{"idx": 8181, "node_name": "dstoff", "Dec": "the offset to the location of the first transformed point that is stored in the destination array"}{"idx": 8182, "node_name": "numpts", "Dec": "the number of point objects to be transformed"}{"idx": 8184, "node_name": "ptsrc", "Dec": "the point to be inverse transformed"}{"idx": 8185, "node_name": "ptdst", "Dec": "the resulting transformed point"}{"idx": 8187, "node_name": "srcpts", "Dec": "the array containing the source point coordinates . each point is stored as a pair of x , y coordinates ."}{"idx": 8188, "node_name": "dstpts", "Dec": "the array into which the transformed point coordinates are returned . each point is stored as a pair of x , y coordinates ."}{"idx": 8189, "node_name": "srcoff", "Dec": "the offset to the first point to be transformed in the source array"}{"idx": 8190, "node_name": "dstoff", "Dec": "the offset to the location of the first transformed point that is stored in the destination array"}{"idx": 8191, "node_name": "numpts", "Dec": "the number of point objects to be transformed"}{"idx": 8193, "node_name": "ptsrc", "Dec": "the distance vector to be delta transformed"}{"idx": 8194, "node_name": "ptdst", "Dec": "the resulting transformed distance vector"}{"idx": 8196, "node_name": "srcpts", "Dec": "the array containing the source distance vectors . each vector is stored as a pair of relative x , y coordinates ."}{"idx": 8197, "node_name": "dstpts", "Dec": "the array into which the transformed distance vectors are returned . each vector is stored as a pair of relative x , y coordinates ."}{"idx": 8198, "node_name": "srcoff", "Dec": "the offset to the first vector to be transformed in the source array"}{"idx": 8199, "node_name": "dstoff", "Dec": "the offset to the location of the first transformed vector that is stored in the destination array"}{"idx": 8200, "node_name": "numpts", "Dec": "the number of vector coordinate pairs to be transformed"}{"idx": 8202, "node_name": "psrc", "Dec": "the specified shape object to be transformed by this transform ."}{"idx": 8208, "node_name": "obj", "Dec": "the object to test for equality with this affinetransform"}{"idx": 8218, "node_name": "type", "Dec": "the closure type for the arc : arc2d.open , arc2d.chord , or arc2d.pie ."}{"idx": 8220, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the arc's framing rectangle ."}{"idx": 8221, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the arc's framing rectangle ."}{"idx": 8222, "node_name": "w", "Dec": "the overall width of the full ellipse of which this arc is a partial section ."}{"idx": 8223, "node_name": "h", "Dec": "the overall height of the full ellipse of which this arc is a partial section ."}{"idx": 8224, "node_name": "start", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8225, "node_name": "extent", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8226, "node_name": "type", "Dec": "the closure type for the arc : arc2d.open , arc2d.chord , or arc2d.pie ."}{"idx": 8228, "node_name": "ellipsebounds", "Dec": "the framing rectangle that defines the outer boundary of the full ellipse of which this arc is a partial section ."}{"idx": 8229, "node_name": "start", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8230, "node_name": "extent", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8231, "node_name": "type", "Dec": "the closure type for the arc : arc2d.open , arc2d.chord , or arc2d.pie ."}{"idx": 8240, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the arc ."}{"idx": 8241, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the arc ."}{"idx": 8242, "node_name": "w", "Dec": "the overall width of the full ellipse of which this arc is a partial section ."}{"idx": 8243, "node_name": "h", "Dec": "the overall height of the full ellipse of which this arc is a partial section ."}{"idx": 8244, "node_name": "angst", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8245, "node_name": "angext", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8246, "node_name": "closure", "Dec": "the closure type for the arc : arc2d.open , arc2d.chord , or arc2d.pie ."}{"idx": 8248, "node_name": "angst", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8250, "node_name": "angext", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8252, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the framing rectangle ."}{"idx": 8253, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the framing rectangle ."}{"idx": 8254, "node_name": "w", "Dec": "the width of the framing rectangle ."}{"idx": 8255, "node_name": "h", "Dec": "the height of the framing rectangle ."}{"idx": 8265, "node_name": "type", "Dec": "the closure type for the arc : arc2d.open , arc2d.chord , or arc2d.pie ."}{"idx": 8267, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the arc's framing rectangle ."}{"idx": 8268, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the arc's framing rectangle ."}{"idx": 8269, "node_name": "w", "Dec": "the overall width of the full ellipse of which this arc is a partial section ."}{"idx": 8270, "node_name": "h", "Dec": "the overall height of the full ellipse of which this arc is a partial section ."}{"idx": 8271, "node_name": "start", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8272, "node_name": "extent", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8273, "node_name": "type", "Dec": "the closure type for the arc : arc2d.open , arc2d.chord , or arc2d.pie ."}{"idx": 8275, "node_name": "ellipsebounds", "Dec": "the framing rectangle that defines the outer boundary of the full ellipse of which this arc is a partial section ."}{"idx": 8276, "node_name": "start", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8277, "node_name": "extent", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8278, "node_name": "type", "Dec": "the closure type for the arc : arc2d.open , arc2d.chord , or arc2d.pie ."}{"idx": 8287, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the arc ."}{"idx": 8288, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the arc ."}{"idx": 8289, "node_name": "w", "Dec": "the overall width of the full ellipse of which this arc is a partial section ."}{"idx": 8290, "node_name": "h", "Dec": "the overall height of the full ellipse of which this arc is a partial section ."}{"idx": 8291, "node_name": "angst", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8292, "node_name": "angext", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8293, "node_name": "closure", "Dec": "the closure type for the arc : arc2d.open , arc2d.chord , or arc2d.pie ."}{"idx": 8295, "node_name": "angst", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8297, "node_name": "angext", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8299, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the framing rectangle ."}{"idx": 8300, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the framing rectangle ."}{"idx": 8301, "node_name": "w", "Dec": "the width of the framing rectangle ."}{"idx": 8302, "node_name": "h", "Dec": "the height of the framing rectangle ."}{"idx": 8309, "node_name": "type", "Dec": "the closure type of this arc : open , chord , or pie ."}{"idx": 8316, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the arc ."}{"idx": 8317, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the arc ."}{"idx": 8318, "node_name": "w", "Dec": "the overall width of the full ellipse of which this arc is a partial section ."}{"idx": 8319, "node_name": "h", "Dec": "the overall height of the full ellipse of which this arc is a partial section ."}{"idx": 8320, "node_name": "angst", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8321, "node_name": "angext", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8322, "node_name": "closure", "Dec": "the closure type for the arc : open , chord , or pie ."}{"idx": 8324, "node_name": "loc", "Dec": "the point2d representing the coordinates of the upper-left corner of the arc ."}{"idx": 8325, "node_name": "size", "Dec": "the dimension2d representing the width and height of the full ellipse of which this arc is a partial section ."}{"idx": 8326, "node_name": "angst", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8327, "node_name": "angext", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8328, "node_name": "closure", "Dec": "the closure type for the arc : open , chord , or pie ."}{"idx": 8330, "node_name": "rect", "Dec": "the framing rectangle that defines the outer boundary of the full ellipse of which this arc is a partial section ."}{"idx": 8331, "node_name": "angst", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8332, "node_name": "angext", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8333, "node_name": "closure", "Dec": "the closure type for the arc : open , chord , or pie ."}{"idx": 8335, "node_name": "a", "Dec": "the arc2d to use to set the arc's values ."}{"idx": 8337, "node_name": "x", "Dec": "the x coordinate of the center of the arc ."}{"idx": 8338, "node_name": "y", "Dec": "the y coordinate of the center of the arc ."}{"idx": 8339, "node_name": "radius", "Dec": "the radius of the arc ."}{"idx": 8340, "node_name": "angst", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8341, "node_name": "angext", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8342, "node_name": "closure", "Dec": "the closure type for the arc : open , chord , or pie ."}{"idx": 8344, "node_name": "p1", "Dec": "the first point that defines the arc . the starting angle of the arc is tangent to the line specified by points ( p1 , p2 ) ."}{"idx": 8345, "node_name": "p2", "Dec": "the second point that defines the arc . the starting angle of the arc is tangent to the line specified by points ( p1 , p2 ) . the ending angle of the arc is tangent to the line specified by points ( p2 , p3 ) ."}{"idx": 8346, "node_name": "p3", "Dec": "the third point that defines the arc . the ending angle of the arc is tangent to the line specified by points ( p2 , p3 ) ."}{"idx": 8347, "node_name": "radius", "Dec": "the radius of the arc ."}{"idx": 8349, "node_name": "angst", "Dec": "the starting angle of the arc in degrees ."}{"idx": 8351, "node_name": "angext", "Dec": "the angular extent of the arc in degrees ."}{"idx": 8353, "node_name": "p", "Dec": "the point2d that defines the starting angle ."}{"idx": 8355, "node_name": "x1", "Dec": "the x coordinate of the arc's starting point ."}{"idx": 8356, "node_name": "y1", "Dec": "the y coordinate of the arc's starting point ."}{"idx": 8357, "node_name": "x2", "Dec": "the x coordinate of the arc's ending point ."}{"idx": 8358, "node_name": "y2", "Dec": "the y coordinate of the arc's ending point ."}{"idx": 8360, "node_name": "p1", "Dec": "the point2d that defines the arc's starting point ."}{"idx": 8361, "node_name": "p2", "Dec": "the point2d that defines the arc's ending point ."}{"idx": 8363, "node_name": "type", "Dec": "the integer constant that represents the closure type of this arc : open , chord , or pie ."}{"idx": 8365, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 8366, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 8367, "node_name": "w", "Dec": "the width of the specified rectangular shape"}{"idx": 8368, "node_name": "h", "Dec": "the height of the specified rectangular shape"}{"idx": 8371, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the framing rectangle ."}{"idx": 8372, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the framing rectangle ."}{"idx": 8373, "node_name": "w", "Dec": "the width of the framing rectangle ."}{"idx": 8374, "node_name": "h", "Dec": "the height of the framing rectangle ."}{"idx": 8376, "node_name": "angle", "Dec": "the angle to test ."}{"idx": 8378, "node_name": "x", "Dec": "the x coordinate of the point to test ."}{"idx": 8379, "node_name": "y", "Dec": "the y coordinate of the point to test ."}{"idx": 8381, "node_name": "x", "Dec": "the x coordinate of the rectangle's upper-left corner ."}{"idx": 8382, "node_name": "y", "Dec": "the y coordinate of the rectangle's upper-left corner ."}{"idx": 8383, "node_name": "w", "Dec": "the width of the rectangle ."}{"idx": 8384, "node_name": "h", "Dec": "the height of the rectangle ."}{"idx": 8386, "node_name": "x", "Dec": "the x coordinate of the rectangle's upper-left corner ."}{"idx": 8387, "node_name": "y", "Dec": "the y coordinate of the rectangle's upper-left corner ."}{"idx": 8388, "node_name": "w", "Dec": "the width of the rectangle ."}{"idx": 8389, "node_name": "h", "Dec": "the height of the rectangle ."}{"idx": 8391, "node_name": "r", "Dec": "the rectangle2d to test ."}{"idx": 8393, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if the untransformed coordinates are desired ."}{"idx": 8396, "node_name": "obj", "Dec": "an object to be compared with this arc2d ."}{"idx": 8400, "node_name": "s", "Dec": "the shape from which the area is constructed"}{"idx": 8402, "node_name": "rhs", "Dec": "the area to be added to the current shape"}{"idx": 8404, "node_name": "rhs", "Dec": "the area to be subtracted from the current shape"}{"idx": 8406, "node_name": "rhs", "Dec": "the area to be intersected with this area"}{"idx": 8408, "node_name": "rhs", "Dec": "the area to be exclusive ored with this area ."}{"idx": 8418, "node_name": "other", "Dec": "the area to be compared to this area"}{"idx": 8420, "node_name": "t", "Dec": "the transformation used to transform the area"}{"idx": 8422, "node_name": "t", "Dec": "the specified affinetransform used to transform the new area"}{"idx": 8424, "node_name": "x", "Dec": "the specified x coordinate to be tested"}{"idx": 8425, "node_name": "y", "Dec": "the specified y coordinate to be tested"}{"idx": 8427, "node_name": "p", "Dec": "the specified point2d to be tested"}{"idx": 8429, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8430, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8431, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 8432, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 8434, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 8436, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8437, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8438, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 8439, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 8441, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 8443, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 8445, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 8446, "node_name": "flatness", "Dec": "the maximum amount that the control points for a given curve can vary from colinear before a subdivided curve is replaced by a straight line connecting the end points"}{"idx": 8458, "node_name": "x1", "Dec": "the x coordinate for the start point of the resulting cubiccurve2d"}{"idx": 8459, "node_name": "y1", "Dec": "the y coordinate for the start point of the resulting cubiccurve2d"}{"idx": 8460, "node_name": "ctrlx1", "Dec": "the x coordinate for the first control point of the resulting cubiccurve2d"}{"idx": 8461, "node_name": "ctrly1", "Dec": "the y coordinate for the first control point of the resulting cubiccurve2d"}{"idx": 8462, "node_name": "ctrlx2", "Dec": "the x coordinate for the second control point of the resulting cubiccurve2d"}{"idx": 8463, "node_name": "ctrly2", "Dec": "the y coordinate for the second control point of the resulting cubiccurve2d"}{"idx": 8464, "node_name": "x2", "Dec": "the x coordinate for the end point of the resulting cubiccurve2d"}{"idx": 8465, "node_name": "y2", "Dec": "the y coordinate for the end point of the resulting cubiccurve2d"}{"idx": 8479, "node_name": "x1", "Dec": "the x coordinate used to set the start point of this cubiccurve2d"}{"idx": 8480, "node_name": "y1", "Dec": "the y coordinate used to set the start point of this cubiccurve2d"}{"idx": 8481, "node_name": "ctrlx1", "Dec": "the x coordinate used to set the first control point of this cubiccurve2d"}{"idx": 8482, "node_name": "ctrly1", "Dec": "the y coordinate used to set the first control point of this cubiccurve2d"}{"idx": 8483, "node_name": "ctrlx2", "Dec": "the x coordinate used to set the second control point of this cubiccurve2d"}{"idx": 8484, "node_name": "ctrly2", "Dec": "the y coordinate used to set the second control point of this cubiccurve2d"}{"idx": 8485, "node_name": "x2", "Dec": "the x coordinate used to set the end point of this cubiccurve2d"}{"idx": 8486, "node_name": "y2", "Dec": "the y coordinate used to set the end point of this cubiccurve2d"}{"idx": 8499, "node_name": "x1", "Dec": "the x coordinate for the start point of the resulting cubiccurve2d"}{"idx": 8500, "node_name": "y1", "Dec": "the y coordinate for the start point of the resulting cubiccurve2d"}{"idx": 8501, "node_name": "ctrlx1", "Dec": "the x coordinate for the first control point of the resulting cubiccurve2d"}{"idx": 8502, "node_name": "ctrly1", "Dec": "the y coordinate for the first control point of the resulting cubiccurve2d"}{"idx": 8503, "node_name": "ctrlx2", "Dec": "the x coordinate for the second control point of the resulting cubiccurve2d"}{"idx": 8504, "node_name": "ctrly2", "Dec": "the y coordinate for the second control point of the resulting cubiccurve2d"}{"idx": 8505, "node_name": "x2", "Dec": "the x coordinate for the end point of the resulting cubiccurve2d"}{"idx": 8506, "node_name": "y2", "Dec": "the y coordinate for the end point of the resulting cubiccurve2d"}{"idx": 8520, "node_name": "x1", "Dec": "the x coordinate used to set the start point of this cubiccurve2d"}{"idx": 8521, "node_name": "y1", "Dec": "the y coordinate used to set the start point of this cubiccurve2d"}{"idx": 8522, "node_name": "ctrlx1", "Dec": "the x coordinate used to set the first control point of this cubiccurve2d"}{"idx": 8523, "node_name": "ctrly1", "Dec": "the y coordinate used to set the first control point of this cubiccurve2d"}{"idx": 8524, "node_name": "ctrlx2", "Dec": "the x coordinate used to set the second control point of this cubiccurve2d"}{"idx": 8525, "node_name": "ctrly2", "Dec": "the y coordinate used to set the second control point of this cubiccurve2d"}{"idx": 8526, "node_name": "x2", "Dec": "the x coordinate used to set the end point of this cubiccurve2d"}{"idx": 8527, "node_name": "y2", "Dec": "the y coordinate used to set the end point of this cubiccurve2d"}{"idx": 8529, "node_name": "x1", "Dec": "the x coordinate used to set the start point of this cubiccurve2d"}{"idx": 8530, "node_name": "y1", "Dec": "the y coordinate used to set the start point of this cubiccurve2d"}{"idx": 8531, "node_name": "ctrlx1", "Dec": "the x coordinate used to set the first control point of this cubiccurve2d"}{"idx": 8532, "node_name": "ctrly1", "Dec": "the y coordinate used to set the first control point of this cubiccurve2d"}{"idx": 8533, "node_name": "ctrlx2", "Dec": "the x coordinate used to set the second control point of this cubiccurve2d"}{"idx": 8534, "node_name": "ctrly2", "Dec": "the y coordinate used to set the second control point of this cubiccurve2d"}{"idx": 8535, "node_name": "x2", "Dec": "the x coordinate used to set the end point of this cubiccurve2d"}{"idx": 8536, "node_name": "y2", "Dec": "the y coordinate used to set the end point of this cubiccurve2d"}{"idx": 8553, "node_name": "x1", "Dec": "the x coordinate used to set the start point of this cubiccurve2d"}{"idx": 8554, "node_name": "y1", "Dec": "the y coordinate used to set the start point of this cubiccurve2d"}{"idx": 8555, "node_name": "ctrlx1", "Dec": "the x coordinate used to set the first control point of this cubiccurve2d"}{"idx": 8556, "node_name": "ctrly1", "Dec": "the y coordinate used to set the first control point of this cubiccurve2d"}{"idx": 8557, "node_name": "ctrlx2", "Dec": "the x coordinate used to set the second control point of this cubiccurve2d"}{"idx": 8558, "node_name": "ctrly2", "Dec": "the y coordinate used to set the second control point of this cubiccurve2d"}{"idx": 8559, "node_name": "x2", "Dec": "the x coordinate used to set the end point of this cubiccurve2d"}{"idx": 8560, "node_name": "y2", "Dec": "the y coordinate used to set the end point of this cubiccurve2d"}{"idx": 8562, "node_name": "coords", "Dec": "a double array containing coordinates"}{"idx": 8563, "node_name": "offset", "Dec": "the index of coords from which to begin setting the end points and control points of this curve to the coordinates contained in coords"}{"idx": 8565, "node_name": "p1", "Dec": "the first specified point2d used to set the start point of this curve"}{"idx": 8566, "node_name": "cp1", "Dec": "the second specified point2d used to set the first control point of this curve"}{"idx": 8567, "node_name": "cp2", "Dec": "the third specified point2d used to set the second control point of this curve"}{"idx": 8568, "node_name": "p2", "Dec": "the fourth specified point2d used to set the end point of this curve"}{"idx": 8570, "node_name": "pts", "Dec": "an array of point2d objects"}{"idx": 8571, "node_name": "offset", "Dec": "the index of pts from which to begin setting the end points and control points of this curve to the points contained in pts"}{"idx": 8573, "node_name": "c", "Dec": "the specified cubiccurve2d"}{"idx": 8575, "node_name": "x1", "Dec": "the x coordinate that specifies the start point of a cubiccurve2d"}{"idx": 8576, "node_name": "y1", "Dec": "the y coordinate that specifies the start point of a cubiccurve2d"}{"idx": 8577, "node_name": "ctrlx1", "Dec": "the x coordinate that specifies the first control point of a cubiccurve2d"}{"idx": 8578, "node_name": "ctrly1", "Dec": "the y coordinate that specifies the first control point of a cubiccurve2d"}{"idx": 8579, "node_name": "ctrlx2", "Dec": "the x coordinate that specifies the second control point of a cubiccurve2d"}{"idx": 8580, "node_name": "ctrly2", "Dec": "the y coordinate that specifies the second control point of a cubiccurve2d"}{"idx": 8581, "node_name": "x2", "Dec": "the x coordinate that specifies the end point of a cubiccurve2d"}{"idx": 8582, "node_name": "y2", "Dec": "the y coordinate that specifies the end point of a cubiccurve2d"}{"idx": 8584, "node_name": "x1", "Dec": "the x coordinate that specifies the start point of a cubiccurve2d"}{"idx": 8585, "node_name": "y1", "Dec": "the y coordinate that specifies the start point of a cubiccurve2d"}{"idx": 8586, "node_name": "ctrlx1", "Dec": "the x coordinate that specifies the first control point of a cubiccurve2d"}{"idx": 8587, "node_name": "ctrly1", "Dec": "the y coordinate that specifies the first control point of a cubiccurve2d"}{"idx": 8588, "node_name": "ctrlx2", "Dec": "the x coordinate that specifies the second control point of a cubiccurve2d"}{"idx": 8589, "node_name": "ctrly2", "Dec": "the y coordinate that specifies the second control point of a cubiccurve2d"}{"idx": 8590, "node_name": "x2", "Dec": "the x coordinate that specifies the end point of a cubiccurve2d"}{"idx": 8591, "node_name": "y2", "Dec": "the y coordinate that specifies the end point of a cubiccurve2d"}{"idx": 8593, "node_name": "coords", "Dec": "an array containing coordinates"}{"idx": 8594, "node_name": "offset", "Dec": "the index of coords from which to begin getting the end points and control points of the curve"}{"idx": 8596, "node_name": "coords", "Dec": "an array containing coordinates"}{"idx": 8597, "node_name": "offset", "Dec": "the index of coords from which to begin getting the end points and control points of the curve"}{"idx": 8601, "node_name": "left", "Dec": "the cubic curve object for storing for the left or first half of the subdivided curve"}{"idx": 8602, "node_name": "right", "Dec": "the cubic curve object for storing for the right or second half of the subdivided curve"}{"idx": 8604, "node_name": "src", "Dec": "the cubic curve to be subdivided"}{"idx": 8605, "node_name": "left", "Dec": "the cubic curve object for storing the left or first half of the subdivided curve"}{"idx": 8606, "node_name": "right", "Dec": "the cubic curve object for storing the right or second half of the subdivided curve"}{"idx": 8608, "node_name": "src", "Dec": "the array holding the coordinates for the source curve"}{"idx": 8609, "node_name": "srcoff", "Dec": "the offset into the array of the beginning of the the 6 source coordinates"}{"idx": 8610, "node_name": "left", "Dec": "the array for storing the coordinates for the first half of the subdivided curve"}{"idx": 8611, "node_name": "leftoff", "Dec": "the offset into the array of the beginning of the the 6 left coordinates"}{"idx": 8612, "node_name": "right", "Dec": "the array for storing the coordinates for the second half of the subdivided curve"}{"idx": 8613, "node_name": "rightoff", "Dec": "the offset into the array of the beginning of the the 6 right coordinates"}{"idx": 8615, "node_name": "eqn", "Dec": "an array containing coefficients for a cubic"}{"idx": 8617, "node_name": "eqn", "Dec": "the specified array of coefficients to use to solve the cubic equation"}{"idx": 8618, "node_name": "res", "Dec": "the array that contains the non-complex roots resulting from the solution of the cubic equation"}{"idx": 8620, "node_name": "x", "Dec": "the specified x coordinate to be tested"}{"idx": 8621, "node_name": "y", "Dec": "the specified y coordinate to be tested"}{"idx": 8623, "node_name": "p", "Dec": "the specified point2d to be tested"}{"idx": 8625, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8626, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8627, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 8628, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 8630, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 8632, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8633, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8634, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 8635, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 8637, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 8640, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 8642, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 8643, "node_name": "flatness", "Dec": "the maximum amount that the control points for a given curve can vary from colinear before a subdivided curve is replaced by a straight line connecting the end points"}{"idx": 8650, "node_name": "width", "Dec": "the new width for the dimension object"}{"idx": 8651, "node_name": "height", "Dec": "the new height for the dimension object"}{"idx": 8653, "node_name": "d", "Dec": "the new size for the dimension2d object"}{"idx": 8662, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the framing rectangle"}{"idx": 8663, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the framing rectangle"}{"idx": 8664, "node_name": "w", "Dec": "the width of the framing rectangle"}{"idx": 8665, "node_name": "h", "Dec": "the height of the framing rectangle"}{"idx": 8672, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 8673, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 8674, "node_name": "w", "Dec": "the width of the specified rectangular shape"}{"idx": 8675, "node_name": "h", "Dec": "the height of the specified rectangular shape"}{"idx": 8684, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the framing rectangle"}{"idx": 8685, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the framing rectangle"}{"idx": 8686, "node_name": "w", "Dec": "the width of the framing rectangle"}{"idx": 8687, "node_name": "h", "Dec": "the height of the framing rectangle"}{"idx": 8694, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 8695, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 8696, "node_name": "w", "Dec": "the width of the specified rectangular shape"}{"idx": 8697, "node_name": "h", "Dec": "the height of the specified rectangular shape"}{"idx": 8699, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 8700, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 8701, "node_name": "w", "Dec": "the width of the specified rectangular shape"}{"idx": 8702, "node_name": "h", "Dec": "the height of the specified rectangular shape"}{"idx": 8707, "node_name": "x", "Dec": "the specified x coordinate to be tested"}{"idx": 8708, "node_name": "y", "Dec": "the specified y coordinate to be tested"}{"idx": 8710, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8711, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8712, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 8713, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 8715, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8716, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8717, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 8718, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 8720, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 8723, "node_name": "obj", "Dec": "an object to be compared with this ellipse2d ."}{"idx": 8726, "node_name": "src", "Dec": "the original unflattened path being iterated over"}{"idx": 8727, "node_name": "flatness", "Dec": "the maximum allowable distance between the control points and the flattened curve"}{"idx": 8729, "node_name": "src", "Dec": "the original unflattened path being iterated over"}{"idx": 8730, "node_name": "flatness", "Dec": "the maximum allowable distance between the control points and the flattened curve"}{"idx": 8731, "node_name": "limit", "Dec": "the maximum number of recursive subdivisions allowed for any curved segment"}{"idx": 8738, "node_name": "coords", "Dec": "an array that holds the data returned from currentSegment(float[])"}{"idx": 8740, "node_name": "coords", "Dec": "an array that holds the data returned from currentSegment(double[])"}{"idx": 8744, "node_name": "rule", "Dec": "the winding rule"}{"idx": 8746, "node_name": "rule", "Dec": "the winding rule"}{"idx": 8747, "node_name": "initialcapacity", "Dec": "the estimate for the number of path segments in the path"}{"idx": 8749, "node_name": "s", "Dec": "the specified shape object"}{"idx": 8753, "node_name": "s", "Dec": "the detail message"}{"idx": 8761, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 8762, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 8763, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 8764, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 8766, "node_name": "p1", "Dec": "the start point2d of this line segment"}{"idx": 8767, "node_name": "p2", "Dec": "the end point2d of this line segment"}{"idx": 8775, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 8776, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 8777, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 8778, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 8787, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 8788, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 8789, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 8790, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 8792, "node_name": "p1", "Dec": "the start point2d of this line segment"}{"idx": 8793, "node_name": "p2", "Dec": "the end point2d of this line segment"}{"idx": 8801, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 8802, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 8803, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 8804, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 8806, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 8807, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 8808, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 8809, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 8820, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 8821, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 8822, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 8823, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 8825, "node_name": "p1", "Dec": "the start point2d of the line segment"}{"idx": 8826, "node_name": "p2", "Dec": "the end point2d of the line segment"}{"idx": 8828, "node_name": "l", "Dec": "the specified line2d"}{"idx": 8830, "node_name": "x1", "Dec": "the x coordinate of the start point of the specified line segment"}{"idx": 8831, "node_name": "y1", "Dec": "the y coordinate of the start point of the specified line segment"}{"idx": 8832, "node_name": "x2", "Dec": "the x coordinate of the end point of the specified line segment"}{"idx": 8833, "node_name": "y2", "Dec": "the y coordinate of the end point of the specified line segment"}{"idx": 8834, "node_name": "px", "Dec": "the x coordinate of the specified point to be compared with the specified line segment"}{"idx": 8835, "node_name": "py", "Dec": "the y coordinate of the specified point to be compared with the specified line segment"}{"idx": 8837, "node_name": "px", "Dec": "the x coordinate of the specified point to be compared with this line2d"}{"idx": 8838, "node_name": "py", "Dec": "the y coordinate of the specified point to be compared with this line2d"}{"idx": 8840, "node_name": "p", "Dec": "the specified point2d to be compared with this line2d"}{"idx": 8842, "node_name": "x1", "Dec": "the x coordinate of the start point of the first specified line segment"}{"idx": 8843, "node_name": "y1", "Dec": "the y coordinate of the start point of the first specified line segment"}{"idx": 8844, "node_name": "x2", "Dec": "the x coordinate of the end point of the first specified line segment"}{"idx": 8845, "node_name": "y2", "Dec": "the y coordinate of the end point of the first specified line segment"}{"idx": 8846, "node_name": "x3", "Dec": "the x coordinate of the start point of the second specified line segment"}{"idx": 8847, "node_name": "y3", "Dec": "the y coordinate of the start point of the second specified line segment"}{"idx": 8848, "node_name": "x4", "Dec": "the x coordinate of the end point of the second specified line segment"}{"idx": 8849, "node_name": "y4", "Dec": "the y coordinate of the end point of the second specified line segment"}{"idx": 8851, "node_name": "x1", "Dec": "the x coordinate of the start point of the specified line segment"}{"idx": 8852, "node_name": "y1", "Dec": "the y coordinate of the start point of the specified line segment"}{"idx": 8853, "node_name": "x2", "Dec": "the x coordinate of the end point of the specified line segment"}{"idx": 8854, "node_name": "y2", "Dec": "the y coordinate of the end point of the specified line segment"}{"idx": 8856, "node_name": "l", "Dec": "the specified line2d"}{"idx": 8858, "node_name": "x1", "Dec": "the x coordinate of the start point of the specified line segment"}{"idx": 8859, "node_name": "y1", "Dec": "the y coordinate of the start point of the specified line segment"}{"idx": 8860, "node_name": "x2", "Dec": "the x coordinate of the end point of the specified line segment"}{"idx": 8861, "node_name": "y2", "Dec": "the y coordinate of the end point of the specified line segment"}{"idx": 8862, "node_name": "px", "Dec": "the x coordinate of the specified point being measured against the specified line segment"}{"idx": 8863, "node_name": "py", "Dec": "the y coordinate of the specified point being measured against the specified line segment"}{"idx": 8865, "node_name": "x1", "Dec": "the x coordinate of the start point of the specified line segment"}{"idx": 8866, "node_name": "y1", "Dec": "the y coordinate of the start point of the specified line segment"}{"idx": 8867, "node_name": "x2", "Dec": "the x coordinate of the end point of the specified line segment"}{"idx": 8868, "node_name": "y2", "Dec": "the y coordinate of the end point of the specified line segment"}{"idx": 8869, "node_name": "px", "Dec": "the x coordinate of the specified point being measured against the specified line segment"}{"idx": 8870, "node_name": "py", "Dec": "the y coordinate of the specified point being measured against the specified line segment"}{"idx": 8872, "node_name": "px", "Dec": "the x coordinate of the specified point being measured against this line segment"}{"idx": 8873, "node_name": "py", "Dec": "the y coordinate of the specified point being measured against this line segment"}{"idx": 8875, "node_name": "pt", "Dec": "the specified point2d being measured against this line segment ."}{"idx": 8877, "node_name": "px", "Dec": "the x coordinate of the specified point being measured against this line segment"}{"idx": 8878, "node_name": "py", "Dec": "the y coordinate of the specified point being measured against this line segment"}{"idx": 8880, "node_name": "pt", "Dec": "the specified point2d being measured against this line segment"}{"idx": 8882, "node_name": "x1", "Dec": "the x coordinate of the start point of the specified line"}{"idx": 8883, "node_name": "y1", "Dec": "the y coordinate of the start point of the specified line"}{"idx": 8884, "node_name": "x2", "Dec": "the x coordinate of the end point of the specified line"}{"idx": 8885, "node_name": "y2", "Dec": "the y coordinate of the end point of the specified line"}{"idx": 8886, "node_name": "px", "Dec": "the x coordinate of the specified point being measured against the specified line"}{"idx": 8887, "node_name": "py", "Dec": "the y coordinate of the specified point being measured against the specified line"}{"idx": 8889, "node_name": "x1", "Dec": "the x coordinate of the start point of the specified line"}{"idx": 8890, "node_name": "y1", "Dec": "the y coordinate of the start point of the specified line"}{"idx": 8891, "node_name": "x2", "Dec": "the x coordinate of the end point of the specified line"}{"idx": 8892, "node_name": "y2", "Dec": "the y coordinate of the end point of the specified line"}{"idx": 8893, "node_name": "px", "Dec": "the x coordinate of the specified point being measured against the specified line"}{"idx": 8894, "node_name": "py", "Dec": "the y coordinate of the specified point being measured against the specified line"}{"idx": 8896, "node_name": "px", "Dec": "the x coordinate of the specified point being measured against this line"}{"idx": 8897, "node_name": "py", "Dec": "the y coordinate of the specified point being measured against this line"}{"idx": 8899, "node_name": "pt", "Dec": "the specified point2d being measured against this line"}{"idx": 8901, "node_name": "px", "Dec": "the x coordinate of the specified point being measured against this line"}{"idx": 8902, "node_name": "py", "Dec": "the y coordinate of the specified point being measured against this line"}{"idx": 8904, "node_name": "pt", "Dec": "the specified point2d being measured"}{"idx": 8906, "node_name": "x", "Dec": "the x coordinate of the specified point to be tested"}{"idx": 8907, "node_name": "y", "Dec": "the y coordinate of the specified point to be tested"}{"idx": 8909, "node_name": "p", "Dec": "the specified point2d to be tested"}{"idx": 8911, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8912, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8913, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 8914, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 8916, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 8918, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8919, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 8920, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 8921, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 8923, "node_name": "r", "Dec": "the specified rectangle2d to be tested"}{"idx": 8926, "node_name": "at", "Dec": "the specified affinetransform"}{"idx": 8928, "node_name": "at", "Dec": "the specified affinetransform"}{"idx": 8929, "node_name": "flatness", "Dec": "the maximum amount that the control points for a given curve can vary from colinear before a subdivided curve is replaced by a straight line connecting the end points . since a line2d object is always flat , this parameter is ignored ."}{"idx": 8933, "node_name": "s", "Dec": "the detail message"}{"idx": 8937, "node_name": "rule", "Dec": "the winding rule"}{"idx": 8939, "node_name": "rule", "Dec": "the winding rule"}{"idx": 8940, "node_name": "initialcapacity", "Dec": "the estimate for the number of path segments in the path"}{"idx": 8942, "node_name": "s", "Dec": "the specified shape object"}{"idx": 8944, "node_name": "s", "Dec": "the specified shape object"}{"idx": 8945, "node_name": "at", "Dec": "the specified affinetransform object"}{"idx": 8947, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 8948, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 8950, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 8951, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 8953, "node_name": "x1", "Dec": "the x coordinate of the quadratic control point"}{"idx": 8954, "node_name": "y1", "Dec": "the y coordinate of the quadratic control point"}{"idx": 8955, "node_name": "x2", "Dec": "the x coordinate of the final end point"}{"idx": 8956, "node_name": "y2", "Dec": "the y coordinate of the final end point"}{"idx": 8958, "node_name": "x1", "Dec": "the x coordinate of the first b\u00e9zier control point"}{"idx": 8959, "node_name": "y1", "Dec": "the y coordinate of the first b\u00e9zier control point"}{"idx": 8960, "node_name": "x2", "Dec": "the x coordinate of the second b\u00e9zier control point"}{"idx": 8961, "node_name": "y2", "Dec": "the y coordinate of the second b\u00e9zier control point"}{"idx": 8962, "node_name": "x3", "Dec": "the x coordinate of the final end point"}{"idx": 8963, "node_name": "y3", "Dec": "the y coordinate of the final end point"}{"idx": 8965, "node_name": "pi", "Dec": "the pathiterator whose geometry is appended to this path"}{"idx": 8966, "node_name": "connect", "Dec": "a boolean to control whether or not to turn an initial moveto segment into a lineto segment to connect the new geometry to the existing path"}{"idx": 8968, "node_name": "at", "Dec": "the affinetransform used to transform the area"}{"idx": 8971, "node_name": "at", "Dec": "an affinetransform"}{"idx": 8976, "node_name": "rule", "Dec": "the winding rule"}{"idx": 8978, "node_name": "rule", "Dec": "the winding rule"}{"idx": 8979, "node_name": "initialcapacity", "Dec": "the estimate for the number of path segments in the path"}{"idx": 8981, "node_name": "s", "Dec": "the specified shape object"}{"idx": 8983, "node_name": "s", "Dec": "the specified shape object"}{"idx": 8984, "node_name": "at", "Dec": "the specified affinetransform object"}{"idx": 8986, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 8987, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 8989, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 8990, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 8992, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 8993, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 8995, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 8996, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 8998, "node_name": "x1", "Dec": "the x coordinate of the quadratic control point"}{"idx": 8999, "node_name": "y1", "Dec": "the y coordinate of the quadratic control point"}{"idx": 9000, "node_name": "x2", "Dec": "the x coordinate of the final end point"}{"idx": 9001, "node_name": "y2", "Dec": "the y coordinate of the final end point"}{"idx": 9003, "node_name": "x1", "Dec": "the x coordinate of the quadratic control point"}{"idx": 9004, "node_name": "y1", "Dec": "the y coordinate of the quadratic control point"}{"idx": 9005, "node_name": "x2", "Dec": "the x coordinate of the final end point"}{"idx": 9006, "node_name": "y2", "Dec": "the y coordinate of the final end point"}{"idx": 9008, "node_name": "x1", "Dec": "the x coordinate of the first b\u00e9zier control point"}{"idx": 9009, "node_name": "y1", "Dec": "the y coordinate of the first b\u00e9zier control point"}{"idx": 9010, "node_name": "x2", "Dec": "the x coordinate of the second b\u00e9zier control point"}{"idx": 9011, "node_name": "y2", "Dec": "the y coordinate of the second b\u00e9zier control point"}{"idx": 9012, "node_name": "x3", "Dec": "the x coordinate of the final end point"}{"idx": 9013, "node_name": "y3", "Dec": "the y coordinate of the final end point"}{"idx": 9015, "node_name": "x1", "Dec": "the x coordinate of the first b\u00e9zier control point"}{"idx": 9016, "node_name": "y1", "Dec": "the y coordinate of the first b\u00e9zier control point"}{"idx": 9017, "node_name": "x2", "Dec": "the x coordinate of the second b\u00e9zier control point"}{"idx": 9018, "node_name": "y2", "Dec": "the y coordinate of the second b\u00e9zier control point"}{"idx": 9019, "node_name": "x3", "Dec": "the x coordinate of the final end point"}{"idx": 9020, "node_name": "y3", "Dec": "the y coordinate of the final end point"}{"idx": 9022, "node_name": "pi", "Dec": "the pathiterator whose geometry is appended to this path"}{"idx": 9023, "node_name": "connect", "Dec": "a boolean to control whether or not to turn an initial moveto segment into a lineto segment to connect the new geometry to the existing path"}{"idx": 9025, "node_name": "at", "Dec": "the affinetransform used to transform the area"}{"idx": 9028, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 9034, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 9035, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 9037, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 9038, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 9040, "node_name": "x1", "Dec": "the x coordinate of the quadratic control point"}{"idx": 9041, "node_name": "y1", "Dec": "the y coordinate of the quadratic control point"}{"idx": 9042, "node_name": "x2", "Dec": "the x coordinate of the final end point"}{"idx": 9043, "node_name": "y2", "Dec": "the y coordinate of the final end point"}{"idx": 9045, "node_name": "x1", "Dec": "the x coordinate of the first b\u00e9zier control point"}{"idx": 9046, "node_name": "y1", "Dec": "the y coordinate of the first b\u00e9zier control point"}{"idx": 9047, "node_name": "x2", "Dec": "the x coordinate of the second b\u00e9zier control point"}{"idx": 9048, "node_name": "y2", "Dec": "the y coordinate of the second b\u00e9zier control point"}{"idx": 9049, "node_name": "x3", "Dec": "the x coordinate of the final end point"}{"idx": 9050, "node_name": "y3", "Dec": "the y coordinate of the final end point"}{"idx": 9053, "node_name": "s", "Dec": "the shape whose geometry is appended to this path"}{"idx": 9054, "node_name": "connect", "Dec": "a boolean to control whether or not to turn an initial moveto segment into a lineto segment to connect the new geometry to the existing path"}{"idx": 9056, "node_name": "pi", "Dec": "the pathiterator whose geometry is appended to this path"}{"idx": 9057, "node_name": "connect", "Dec": "a boolean to control whether or not to turn an initial moveto segment into a lineto segment to connect the new geometry to the existing path"}{"idx": 9060, "node_name": "rule", "Dec": "an integer representing the specified winding rule"}{"idx": 9064, "node_name": "at", "Dec": "the affinetransform used to transform the area"}{"idx": 9066, "node_name": "at", "Dec": "the affinetransform used to transform a new shape ."}{"idx": 9069, "node_name": "pi", "Dec": "the specified pathiterator"}{"idx": 9070, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 9071, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 9073, "node_name": "pi", "Dec": "the specified pathiterator"}{"idx": 9074, "node_name": "p", "Dec": "the specified point2d"}{"idx": 9076, "node_name": "x", "Dec": "the specified x coordinate to be tested"}{"idx": 9077, "node_name": "y", "Dec": "the specified y coordinate to be tested"}{"idx": 9079, "node_name": "p", "Dec": "the specified point2d to be tested"}{"idx": 9081, "node_name": "pi", "Dec": "the specified pathiterator"}{"idx": 9082, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 9083, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 9084, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 9085, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 9087, "node_name": "pi", "Dec": "the specified pathiterator"}{"idx": 9088, "node_name": "r", "Dec": "a specified rectangle2d"}{"idx": 9090, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9091, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9092, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 9093, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 9095, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9097, "node_name": "pi", "Dec": "the specified pathiterator"}{"idx": 9098, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 9099, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 9100, "node_name": "w", "Dec": "the width of the specified rectangular coordinates"}{"idx": 9101, "node_name": "h", "Dec": "the height of the specified rectangular coordinates"}{"idx": 9103, "node_name": "pi", "Dec": "the specified pathiterator"}{"idx": 9104, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9106, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9107, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9108, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 9109, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 9111, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9113, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 9114, "node_name": "flatness", "Dec": "the maximum distance that the line segments used to approximate the curved segments are allowed to deviate from any point on the original curve"}{"idx": 9129, "node_name": "coords", "Dec": "an array that holds the data returned from currentSegment(float[])"}{"idx": 9131, "node_name": "coords", "Dec": "an array that holds the data returned from currentSegment(double[])"}{"idx": 9137, "node_name": "x", "Dec": "the x coordinate of the newly constructed point2d"}{"idx": 9138, "node_name": "y", "Dec": "the y coordinate of the newly constructed point2d"}{"idx": 9142, "node_name": "x", "Dec": "the new x coordinate of this point2d"}{"idx": 9143, "node_name": "y", "Dec": "the new y coordinate of this point2d"}{"idx": 9150, "node_name": "x", "Dec": "the x coordinate of the newly constructed point2d"}{"idx": 9151, "node_name": "y", "Dec": "the y coordinate of the newly constructed point2d"}{"idx": 9155, "node_name": "x", "Dec": "the new x coordinate of this point2d"}{"idx": 9156, "node_name": "y", "Dec": "the new y coordinate of this point2d"}{"idx": 9158, "node_name": "x", "Dec": "the new x coordinate of this point2d"}{"idx": 9159, "node_name": "y", "Dec": "the new y coordinate of this point2d"}{"idx": 9166, "node_name": "x", "Dec": "the new x coordinate of this point2d"}{"idx": 9167, "node_name": "y", "Dec": "the new y coordinate of this point2d"}{"idx": 9169, "node_name": "p", "Dec": "the specified point2d to which to set this point2d"}{"idx": 9171, "node_name": "x1", "Dec": "the x coordinate of the first specified point"}{"idx": 9172, "node_name": "y1", "Dec": "the y coordinate of the first specified point"}{"idx": 9173, "node_name": "x2", "Dec": "the x coordinate of the second specified point"}{"idx": 9174, "node_name": "y2", "Dec": "the y coordinate of the second specified point"}{"idx": 9176, "node_name": "x1", "Dec": "the x coordinate of the first specified point"}{"idx": 9177, "node_name": "y1", "Dec": "the y coordinate of the first specified point"}{"idx": 9178, "node_name": "x2", "Dec": "the x coordinate of the second specified point"}{"idx": 9179, "node_name": "y2", "Dec": "the y coordinate of the second specified point"}{"idx": 9181, "node_name": "px", "Dec": "the x coordinate of the specified point to be measured against this point2d"}{"idx": 9182, "node_name": "py", "Dec": "the y coordinate of the specified point to be measured against this point2d"}{"idx": 9184, "node_name": "pt", "Dec": "the specified point to be measured against this point2d"}{"idx": 9186, "node_name": "px", "Dec": "the x coordinate of the specified point to be measured against this point2d"}{"idx": 9187, "node_name": "py", "Dec": "the y coordinate of the specified point to be measured against this point2d"}{"idx": 9189, "node_name": "pt", "Dec": "the specified point to be measured against this point2d"}{"idx": 9193, "node_name": "obj", "Dec": "an object to be compared with this point2d"}{"idx": 9203, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 9204, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 9205, "node_name": "ctrlx", "Dec": "the x coordinate of the control point"}{"idx": 9206, "node_name": "ctrly", "Dec": "the y coordinate of the control point"}{"idx": 9207, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 9208, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 9219, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 9220, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 9221, "node_name": "ctrlx", "Dec": "the x coordinate of the control point"}{"idx": 9222, "node_name": "ctrly", "Dec": "the y coordinate of the control point"}{"idx": 9223, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 9224, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 9235, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 9236, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 9237, "node_name": "ctrlx", "Dec": "the x coordinate of the control point"}{"idx": 9238, "node_name": "ctrly", "Dec": "the y coordinate of the control point"}{"idx": 9239, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 9240, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 9251, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 9252, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 9253, "node_name": "ctrlx", "Dec": "the x coordinate of the control point"}{"idx": 9254, "node_name": "ctrly", "Dec": "the y coordinate of the control point"}{"idx": 9255, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 9256, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 9258, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 9259, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 9260, "node_name": "ctrlx", "Dec": "the x coordinate of the control point"}{"idx": 9261, "node_name": "ctrly", "Dec": "the y coordinate of the control point"}{"idx": 9262, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 9263, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 9277, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 9278, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 9279, "node_name": "ctrlx", "Dec": "the x coordinate of the control point"}{"idx": 9280, "node_name": "ctrly", "Dec": "the y coordinate of the control point"}{"idx": 9281, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 9282, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 9284, "node_name": "coords", "Dec": "the array containing coordinate values"}{"idx": 9285, "node_name": "offset", "Dec": "the index into the array from which to start getting the coordinate values and assigning them to this quadcurve2d"}{"idx": 9287, "node_name": "p1", "Dec": "the start point"}{"idx": 9288, "node_name": "cp", "Dec": "the control point"}{"idx": 9289, "node_name": "p2", "Dec": "the end point"}{"idx": 9291, "node_name": "pts", "Dec": "an array containing point2d that define coordinate values"}{"idx": 9292, "node_name": "offset", "Dec": "the index into pts from which to start getting the coordinate values and assigning them to this quadcurve2d"}{"idx": 9294, "node_name": "c", "Dec": "the specified quadcurve2d"}{"idx": 9296, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 9297, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 9298, "node_name": "ctrlx", "Dec": "the x coordinate of the control point"}{"idx": 9299, "node_name": "ctrly", "Dec": "the y coordinate of the control point"}{"idx": 9300, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 9301, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 9303, "node_name": "x1", "Dec": "the x coordinate of the start point"}{"idx": 9304, "node_name": "y1", "Dec": "the y coordinate of the start point"}{"idx": 9305, "node_name": "ctrlx", "Dec": "the x coordinate of the control point"}{"idx": 9306, "node_name": "ctrly", "Dec": "the y coordinate of the control point"}{"idx": 9307, "node_name": "x2", "Dec": "the x coordinate of the end point"}{"idx": 9308, "node_name": "y2", "Dec": "the y coordinate of the end point"}{"idx": 9310, "node_name": "coords", "Dec": "an array containing coordinate values"}{"idx": 9311, "node_name": "offset", "Dec": "the index into coords from which to to start getting the values from the array"}{"idx": 9313, "node_name": "coords", "Dec": "an array containing coordinate values"}{"idx": 9314, "node_name": "offset", "Dec": "the index into coords from which to start getting the coordinate values"}{"idx": 9318, "node_name": "left", "Dec": "the quadcurve2d object for storing the left or first half of the subdivided curve"}{"idx": 9319, "node_name": "right", "Dec": "the quadcurve2d object for storing the right or second half of the subdivided curve"}{"idx": 9321, "node_name": "src", "Dec": "the quadratic curve to be subdivided"}{"idx": 9322, "node_name": "left", "Dec": "the quadcurve2d object for storing the left or first half of the subdivided curve"}{"idx": 9323, "node_name": "right", "Dec": "the quadcurve2d object for storing the right or second half of the subdivided curve"}{"idx": 9325, "node_name": "src", "Dec": "the array holding the coordinates for the source curve"}{"idx": 9326, "node_name": "srcoff", "Dec": "the offset into the array of the beginning of the the 6 source coordinates"}{"idx": 9327, "node_name": "left", "Dec": "the array for storing the coordinates for the first half of the subdivided curve"}{"idx": 9328, "node_name": "leftoff", "Dec": "the offset into the array of the beginning of the the 6 left coordinates"}{"idx": 9329, "node_name": "right", "Dec": "the array for storing the coordinates for the second half of the subdivided curve"}{"idx": 9330, "node_name": "rightoff", "Dec": "the offset into the array of the beginning of the the 6 right coordinates"}{"idx": 9332, "node_name": "eqn", "Dec": "the array that contains the quadratic coefficients"}{"idx": 9334, "node_name": "eqn", "Dec": "the specified array of coefficients to use to solve the quadratic equation"}{"idx": 9335, "node_name": "res", "Dec": "the array that contains the non-complex roots resulting from the solution of the quadratic equation"}{"idx": 9337, "node_name": "x", "Dec": "the specified x coordinate to be tested"}{"idx": 9338, "node_name": "y", "Dec": "the specified y coordinate to be tested"}{"idx": 9340, "node_name": "p", "Dec": "the specified point2d to be tested"}{"idx": 9342, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9343, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9344, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 9345, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 9347, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9349, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9350, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9351, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 9352, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 9354, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9357, "node_name": "at", "Dec": "an optional affinetransform to apply to the shape boundary"}{"idx": 9359, "node_name": "at", "Dec": "an optional affinetransform to apply to the boundary of the shape"}{"idx": 9360, "node_name": "flatness", "Dec": "the maximum distance that the control points for a subdivided curve can be with respect to a line connecting the end points of this curve before this curve is replaced by a straight line connecting the end points ."}{"idx": 9369, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the newly constructed rectangle2d"}{"idx": 9370, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the newly constructed rectangle2d"}{"idx": 9371, "node_name": "w", "Dec": "the width of the newly constructed rectangle2d"}{"idx": 9372, "node_name": "h", "Dec": "the height of the newly constructed rectangle2d"}{"idx": 9379, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of this rectangle2d"}{"idx": 9380, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of this rectangle2d"}{"idx": 9381, "node_name": "w", "Dec": "the width of this rectangle2d"}{"idx": 9382, "node_name": "h", "Dec": "the height of this rectangle2d"}{"idx": 9384, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9386, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 9387, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 9390, "node_name": "r", "Dec": "the rectangle2d to be intersected with this rectangle2d"}{"idx": 9392, "node_name": "r", "Dec": "the rectangle2d to be combined with this rectangle2d"}{"idx": 9401, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the newly constructed rectangle2d"}{"idx": 9402, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the newly constructed rectangle2d"}{"idx": 9403, "node_name": "w", "Dec": "the width of the newly constructed rectangle2d"}{"idx": 9404, "node_name": "h", "Dec": "the height of the newly constructed rectangle2d"}{"idx": 9411, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of this rectangle2d"}{"idx": 9412, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of this rectangle2d"}{"idx": 9413, "node_name": "w", "Dec": "the width of this rectangle2d"}{"idx": 9414, "node_name": "h", "Dec": "the height of this rectangle2d"}{"idx": 9416, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of this rectangle2d"}{"idx": 9417, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of this rectangle2d"}{"idx": 9418, "node_name": "w", "Dec": "the width of this rectangle2d"}{"idx": 9419, "node_name": "h", "Dec": "the height of this rectangle2d"}{"idx": 9421, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9423, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 9424, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 9427, "node_name": "r", "Dec": "the rectangle2d to be intersected with this rectangle2d"}{"idx": 9429, "node_name": "r", "Dec": "the rectangle2d to be combined with this rectangle2d"}{"idx": 9438, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of this rectangle2d"}{"idx": 9439, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of this rectangle2d"}{"idx": 9440, "node_name": "w", "Dec": "the width of this rectangle2d"}{"idx": 9441, "node_name": "h", "Dec": "the height of this rectangle2d"}{"idx": 9443, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9445, "node_name": "x1", "Dec": "the x coordinate of the start point of the specified line segment"}{"idx": 9446, "node_name": "y1", "Dec": "the y coordinate of the start point of the specified line segment"}{"idx": 9447, "node_name": "x2", "Dec": "the x coordinate of the end point of the specified line segment"}{"idx": 9448, "node_name": "y2", "Dec": "the y coordinate of the end point of the specified line segment"}{"idx": 9450, "node_name": "l", "Dec": "the specified line2d to test for intersection with the interior of this rectangle2d"}{"idx": 9452, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 9453, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 9455, "node_name": "p", "Dec": "the specified point2d"}{"idx": 9457, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of this rectangle2d"}{"idx": 9458, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of this rectangle2d"}{"idx": 9459, "node_name": "w", "Dec": "the width of this rectangle2d"}{"idx": 9460, "node_name": "h", "Dec": "the height of this rectangle2d"}{"idx": 9463, "node_name": "x", "Dec": "the specified x coordinate to be tested"}{"idx": 9464, "node_name": "y", "Dec": "the specified y coordinate to be tested"}{"idx": 9466, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9467, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9468, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 9469, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 9471, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9472, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9473, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 9474, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 9476, "node_name": "r", "Dec": "the rectangle2d to be intersected with this rectangle2d"}{"idx": 9478, "node_name": "src1", "Dec": "the first of a pair of rectangle2d objects to be intersected with each other"}{"idx": 9479, "node_name": "src2", "Dec": "the second of a pair of rectangle2d objects to be intersected with each other"}{"idx": 9480, "node_name": "dest", "Dec": "the rectangle2d that holds the results of the intersection of src1 and src2"}{"idx": 9482, "node_name": "r", "Dec": "the rectangle2d to be combined with this rectangle2d"}{"idx": 9484, "node_name": "src1", "Dec": "the first of a pair of rectangle2d objects to be combined with each other"}{"idx": 9485, "node_name": "src2", "Dec": "the second of a pair of rectangle2d objects to be combined with each other"}{"idx": 9486, "node_name": "dest", "Dec": "the rectangle2d that holds the results of the union of src1 and src2"}{"idx": 9488, "node_name": "newx", "Dec": "the x coordinate of the new point"}{"idx": 9489, "node_name": "newy", "Dec": "the y coordinate of the new point"}{"idx": 9491, "node_name": "pt", "Dec": "the new point2d to add to this rectangle2d ."}{"idx": 9493, "node_name": "r", "Dec": "the rectangle2d to add to this rectangle2d ."}{"idx": 9495, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 9497, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 9498, "node_name": "flatness", "Dec": "the maximum distance that the line segments used to approximate the curved segments are allowed to deviate from any point on the original curve . since rectangles are already flat , the flatness parameter is ignored ."}{"idx": 9501, "node_name": "obj", "Dec": "an object to be compared with this rectangle2d ."}{"idx": 9517, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 9518, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 9519, "node_name": "w", "Dec": "the width of the specified rectangular shape"}{"idx": 9520, "node_name": "h", "Dec": "the height of the specified rectangular shape"}{"idx": 9522, "node_name": "loc", "Dec": "the specified point2d"}{"idx": 9523, "node_name": "size", "Dec": "the specified dimension2d"}{"idx": 9525, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9527, "node_name": "x1", "Dec": "the x coordinate of the start point of the specified diagonal"}{"idx": 9528, "node_name": "y1", "Dec": "the y coordinate of the start point of the specified diagonal"}{"idx": 9529, "node_name": "x2", "Dec": "the x coordinate of the end point of the specified diagonal"}{"idx": 9530, "node_name": "y2", "Dec": "the y coordinate of the end point of the specified diagonal"}{"idx": 9532, "node_name": "p1", "Dec": "the start point2d of the specified diagonal"}{"idx": 9533, "node_name": "p2", "Dec": "the end point2d of the specified diagonal"}{"idx": 9535, "node_name": "centerx", "Dec": "the x coordinate of the specified center point"}{"idx": 9536, "node_name": "centery", "Dec": "the y coordinate of the specified center point"}{"idx": 9537, "node_name": "cornerx", "Dec": "the x coordinate of the specified corner point"}{"idx": 9538, "node_name": "cornery", "Dec": "the y coordinate of the specified corner point"}{"idx": 9540, "node_name": "center", "Dec": "the specified center point2d"}{"idx": 9541, "node_name": "corner", "Dec": "the specified corner point2d"}{"idx": 9543, "node_name": "p", "Dec": "the specified point2d to be tested"}{"idx": 9545, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9547, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 9550, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired ."}{"idx": 9551, "node_name": "flatness", "Dec": "the maximum distance that the line segments used to approximate the curved segments are allowed to deviate from any point on the original curve"}{"idx": 9562, "node_name": "x", "Dec": "the x coordinate of the newly constructed roundrectangle2d"}{"idx": 9563, "node_name": "y", "Dec": "the y coordinate of the newly constructed roundrectangle2d"}{"idx": 9564, "node_name": "w", "Dec": "the width to which to set the newly constructed roundrectangle2d"}{"idx": 9565, "node_name": "h", "Dec": "the height to which to set the newly constructed roundrectangle2d"}{"idx": 9566, "node_name": "arcw", "Dec": "the width of the arc to use to round off the corners of the newly constructed roundrectangle2d"}{"idx": 9567, "node_name": "arch", "Dec": "the height of the arc to use to round off the corners of the newly constructed roundrectangle2d"}{"idx": 9576, "node_name": "x", "Dec": "the x coordinate to which to set the location of this roundrectangle2d"}{"idx": 9577, "node_name": "y", "Dec": "the y coordinate to which to set the location of this roundrectangle2d"}{"idx": 9578, "node_name": "w", "Dec": "the width to which to set this roundrectangle2d"}{"idx": 9579, "node_name": "h", "Dec": "the height to which to set this roundrectangle2d"}{"idx": 9580, "node_name": "arcw", "Dec": "the width to which to set the arc of this roundrectangle2d"}{"idx": 9581, "node_name": "arch", "Dec": "the height to which to set the arc of this roundrectangle2d"}{"idx": 9583, "node_name": "rr", "Dec": "the specified roundrectangle2d"}{"idx": 9594, "node_name": "x", "Dec": "the x coordinate of the newly constructed roundrectangle2d"}{"idx": 9595, "node_name": "y", "Dec": "the y coordinate of the newly constructed roundrectangle2d"}{"idx": 9596, "node_name": "w", "Dec": "the width to which to set the newly constructed roundrectangle2d"}{"idx": 9597, "node_name": "h", "Dec": "the height to which to set the newly constructed roundrectangle2d"}{"idx": 9598, "node_name": "arcw", "Dec": "the width of the arc to use to round off the corners of the newly constructed roundrectangle2d"}{"idx": 9599, "node_name": "arch", "Dec": "the height of the arc to use to round off the corners of the newly constructed roundrectangle2d"}{"idx": 9608, "node_name": "x", "Dec": "the x coordinate to which to set the location of this roundrectangle2d"}{"idx": 9609, "node_name": "y", "Dec": "the y coordinate to which to set the location of this roundrectangle2d"}{"idx": 9610, "node_name": "w", "Dec": "the width to which to set this roundrectangle2d"}{"idx": 9611, "node_name": "h", "Dec": "the height to which to set this roundrectangle2d"}{"idx": 9612, "node_name": "arcw", "Dec": "the width to which to set the arc of this roundrectangle2d"}{"idx": 9613, "node_name": "arch", "Dec": "the height to which to set the arc of this roundrectangle2d"}{"idx": 9615, "node_name": "x", "Dec": "the x coordinate to which to set the location of this roundrectangle2d"}{"idx": 9616, "node_name": "y", "Dec": "the y coordinate to which to set the location of this roundrectangle2d"}{"idx": 9617, "node_name": "w", "Dec": "the width to which to set this roundrectangle2d"}{"idx": 9618, "node_name": "h", "Dec": "the height to which to set this roundrectangle2d"}{"idx": 9619, "node_name": "arcw", "Dec": "the width to which to set the arc of this roundrectangle2d"}{"idx": 9620, "node_name": "arch", "Dec": "the height to which to set the arc of this roundrectangle2d"}{"idx": 9622, "node_name": "rr", "Dec": "the specified roundrectangle2d"}{"idx": 9629, "node_name": "x", "Dec": "the x coordinate to which to set the location of this roundrectangle2d"}{"idx": 9630, "node_name": "y", "Dec": "the y coordinate to which to set the location of this roundrectangle2d"}{"idx": 9631, "node_name": "w", "Dec": "the width to which to set this roundrectangle2d"}{"idx": 9632, "node_name": "h", "Dec": "the height to which to set this roundrectangle2d"}{"idx": 9633, "node_name": "arcwidth", "Dec": "the width to which to set the arc of this roundrectangle2d"}{"idx": 9634, "node_name": "archeight", "Dec": "the height to which to set the arc of this roundrectangle2d"}{"idx": 9636, "node_name": "rr", "Dec": "the specified roundrectangle2d"}{"idx": 9638, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 9639, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular shape"}{"idx": 9640, "node_name": "w", "Dec": "the width of the specified rectangular shape"}{"idx": 9641, "node_name": "h", "Dec": "the height of the specified rectangular shape"}{"idx": 9643, "node_name": "x", "Dec": "the specified x coordinate to be tested"}{"idx": 9644, "node_name": "y", "Dec": "the specified y coordinate to be tested"}{"idx": 9646, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9647, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9648, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 9649, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 9651, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9652, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 9653, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 9654, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 9656, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 9659, "node_name": "obj", "Dec": "an object to be compared with this roundrectangle2d ."}{"idx": 9662, "node_name": "x1", "Dec": "x coordinate of the first specified point in user space"}{"idx": 9663, "node_name": "y1", "Dec": "y coordinate of the first specified point in user space"}{"idx": 9664, "node_name": "color1", "Dec": "color at the first specified point"}{"idx": 9665, "node_name": "x2", "Dec": "x coordinate of the second specified point in user space"}{"idx": 9666, "node_name": "y2", "Dec": "y coordinate of the second specified point in user space"}{"idx": 9667, "node_name": "color2", "Dec": "color at the second specified point"}{"idx": 9669, "node_name": "pt1", "Dec": "the first specified point in user space"}{"idx": 9670, "node_name": "color1", "Dec": "color at the first specified point"}{"idx": 9671, "node_name": "pt2", "Dec": "the second specified point in user space"}{"idx": 9672, "node_name": "color2", "Dec": "color at the second specified point"}{"idx": 9674, "node_name": "x1", "Dec": "x coordinate of the first specified point in user space"}{"idx": 9675, "node_name": "y1", "Dec": "y coordinate of the first specified point in user space"}{"idx": 9676, "node_name": "color1", "Dec": "color at the first specified point"}{"idx": 9677, "node_name": "x2", "Dec": "x coordinate of the second specified point in user space"}{"idx": 9678, "node_name": "y2", "Dec": "y coordinate of the second specified point in user space"}{"idx": 9679, "node_name": "color2", "Dec": "color at the second specified point"}{"idx": 9680, "node_name": "cyclic", "Dec": "true if the gradient pattern should cycle repeatedly between the two colors ; false otherwise"}{"idx": 9682, "node_name": "pt1", "Dec": "the first specified point in user space"}{"idx": 9683, "node_name": "color1", "Dec": "color at the first specified point"}{"idx": 9684, "node_name": "pt2", "Dec": "the second specified point in user space"}{"idx": 9685, "node_name": "color2", "Dec": "color at the second specified point"}{"idx": 9686, "node_name": "cyclic", "Dec": "true if the gradient pattern should cycle repeatedly between the two colors ; false otherwise"}{"idx": 9693, "node_name": "cm", "Dec": "the preferred colormodel which represents the most convenient format for the caller to receive the pixel data , or null if there is no preference ."}{"idx": 9694, "node_name": "devicebounds", "Dec": "the device space bounding box of the graphics primitive being rendered ."}{"idx": 9695, "node_name": "userbounds", "Dec": "the user space bounding box of the graphics primitive being rendered ."}{"idx": 9696, "node_name": "xform", "Dec": "the affinetransform from user space into device space ."}{"idx": 9697, "node_name": "hints", "Dec": "the set of hints that the context object can use to choose between rendering alternatives ."}{"idx": 9703, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 9704, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 9705, "node_name": "width", "Dec": "the width of the clipping rectangle ."}{"idx": 9706, "node_name": "height", "Dec": "the height of the clipping rectangle ."}{"idx": 9708, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 9709, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 9712, "node_name": "c", "Dec": "the new rendering color ."}{"idx": 9715, "node_name": "c1", "Dec": "the xor alternation color"}{"idx": 9718, "node_name": "font", "Dec": "the font ."}{"idx": 9721, "node_name": "f", "Dec": "the specified font"}{"idx": 9724, "node_name": "x", "Dec": "the x coordinate of the rectangle to intersect the clip with"}{"idx": 9725, "node_name": "y", "Dec": "the y coordinate of the rectangle to intersect the clip with"}{"idx": 9726, "node_name": "width", "Dec": "the width of the rectangle to intersect the clip with"}{"idx": 9727, "node_name": "height", "Dec": "the height of the rectangle to intersect the clip with"}{"idx": 9729, "node_name": "x", "Dec": "the x coordinate of the new clip rectangle ."}{"idx": 9730, "node_name": "y", "Dec": "the y coordinate of the new clip rectangle ."}{"idx": 9731, "node_name": "width", "Dec": "the width of the new clip rectangle ."}{"idx": 9732, "node_name": "height", "Dec": "the height of the new clip rectangle ."}{"idx": 9735, "node_name": "clip", "Dec": "the shape to use to set the clip"}{"idx": 9737, "node_name": "x", "Dec": "the x coordinate of the source rectangle ."}{"idx": 9738, "node_name": "y", "Dec": "the y coordinate of the source rectangle ."}{"idx": 9739, "node_name": "width", "Dec": "the width of the source rectangle ."}{"idx": 9740, "node_name": "height", "Dec": "the height of the source rectangle ."}{"idx": 9741, "node_name": "dx", "Dec": "the horizontal distance to copy the pixels ."}{"idx": 9742, "node_name": "dy", "Dec": "the vertical distance to copy the pixels ."}{"idx": 9744, "node_name": "x1", "Dec": "the first point's x coordinate ."}{"idx": 9745, "node_name": "y1", "Dec": "the first point's y coordinate ."}{"idx": 9746, "node_name": "x2", "Dec": "the second point's x coordinate ."}{"idx": 9747, "node_name": "y2", "Dec": "the second point's y coordinate ."}{"idx": 9749, "node_name": "x", "Dec": "the x coordinate of the rectangle to be filled ."}{"idx": 9750, "node_name": "y", "Dec": "the y coordinate of the rectangle to be filled ."}{"idx": 9751, "node_name": "width", "Dec": "the width of the rectangle to be filled ."}{"idx": 9752, "node_name": "height", "Dec": "the height of the rectangle to be filled ."}{"idx": 9754, "node_name": "x", "Dec": "the x coordinate of the rectangle to be drawn ."}{"idx": 9755, "node_name": "y", "Dec": "the y coordinate of the rectangle to be drawn ."}{"idx": 9756, "node_name": "width", "Dec": "the width of the rectangle to be drawn ."}{"idx": 9757, "node_name": "height", "Dec": "the height of the rectangle to be drawn ."}{"idx": 9759, "node_name": "x", "Dec": "the x coordinate of the rectangle to clear ."}{"idx": 9760, "node_name": "y", "Dec": "the y coordinate of the rectangle to clear ."}{"idx": 9761, "node_name": "width", "Dec": "the width of the rectangle to clear ."}{"idx": 9762, "node_name": "height", "Dec": "the height of the rectangle to clear ."}{"idx": 9764, "node_name": "x", "Dec": "the x coordinate of the rectangle to be drawn ."}{"idx": 9765, "node_name": "y", "Dec": "the y coordinate of the rectangle to be drawn ."}{"idx": 9766, "node_name": "width", "Dec": "the width of the rectangle to be drawn ."}{"idx": 9767, "node_name": "height", "Dec": "the height of the rectangle to be drawn ."}{"idx": 9768, "node_name": "arcwidth", "Dec": "the horizontal diameter of the arc at the four corners ."}{"idx": 9769, "node_name": "archeight", "Dec": "the vertical diameter of the arc at the four corners ."}{"idx": 9771, "node_name": "x", "Dec": "the x coordinate of the rectangle to be filled ."}{"idx": 9772, "node_name": "y", "Dec": "the y coordinate of the rectangle to be filled ."}{"idx": 9773, "node_name": "width", "Dec": "the width of the rectangle to be filled ."}{"idx": 9774, "node_name": "height", "Dec": "the height of the rectangle to be filled ."}{"idx": 9775, "node_name": "arcwidth", "Dec": "the horizontal diameter of the arc at the four corners ."}{"idx": 9776, "node_name": "archeight", "Dec": "the vertical diameter of the arc at the four corners ."}{"idx": 9778, "node_name": "x", "Dec": "the x coordinate of the rectangle to be drawn ."}{"idx": 9779, "node_name": "y", "Dec": "the y coordinate of the rectangle to be drawn ."}{"idx": 9780, "node_name": "width", "Dec": "the width of the rectangle to be drawn ."}{"idx": 9781, "node_name": "height", "Dec": "the height of the rectangle to be drawn ."}{"idx": 9782, "node_name": "raised", "Dec": "a boolean that determines whether the rectangle appears to be raised above the surface or sunk into the surface ."}{"idx": 9784, "node_name": "x", "Dec": "the x coordinate of the rectangle to be filled ."}{"idx": 9785, "node_name": "y", "Dec": "the y coordinate of the rectangle to be filled ."}{"idx": 9786, "node_name": "width", "Dec": "the width of the rectangle to be filled ."}{"idx": 9787, "node_name": "height", "Dec": "the height of the rectangle to be filled ."}{"idx": 9788, "node_name": "raised", "Dec": "a boolean value that determines whether the rectangle appears to be raised above the surface or etched into the surface ."}{"idx": 9790, "node_name": "x", "Dec": "the x coordinate of the upper left corner of the oval to be drawn ."}{"idx": 9791, "node_name": "y", "Dec": "the y coordinate of the upper left corner of the oval to be drawn ."}{"idx": 9792, "node_name": "width", "Dec": "the width of the oval to be drawn ."}{"idx": 9793, "node_name": "height", "Dec": "the height of the oval to be drawn ."}{"idx": 9795, "node_name": "x", "Dec": "the x coordinate of the upper left corner of the oval to be filled ."}{"idx": 9796, "node_name": "y", "Dec": "the y coordinate of the upper left corner of the oval to be filled ."}{"idx": 9797, "node_name": "width", "Dec": "the width of the oval to be filled ."}{"idx": 9798, "node_name": "height", "Dec": "the height of the oval to be filled ."}{"idx": 9800, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the arc to be drawn ."}{"idx": 9801, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the arc to be drawn ."}{"idx": 9802, "node_name": "width", "Dec": "the width of the arc to be drawn ."}{"idx": 9803, "node_name": "height", "Dec": "the height of the arc to be drawn ."}{"idx": 9804, "node_name": "startangle", "Dec": "the beginning angle ."}{"idx": 9805, "node_name": "arcangle", "Dec": "the angular extent of the arc , relative to the start angle ."}{"idx": 9807, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the arc to be filled ."}{"idx": 9808, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the arc to be filled ."}{"idx": 9809, "node_name": "width", "Dec": "the width of the arc to be filled ."}{"idx": 9810, "node_name": "height", "Dec": "the height of the arc to be filled ."}{"idx": 9811, "node_name": "startangle", "Dec": "the beginning angle ."}{"idx": 9812, "node_name": "arcangle", "Dec": "the angular extent of the arc , relative to the start angle ."}{"idx": 9814, "node_name": "xpoints", "Dec": "an array of x points"}{"idx": 9815, "node_name": "ypoints", "Dec": "an array of y points"}{"idx": 9816, "node_name": "npoints", "Dec": "the total number of points"}{"idx": 9818, "node_name": "xpoints", "Dec": "a an array of x coordinates ."}{"idx": 9819, "node_name": "ypoints", "Dec": "a an array of y coordinates ."}{"idx": 9820, "node_name": "npoints", "Dec": "a the total number of points ."}{"idx": 9822, "node_name": "p", "Dec": "the polygon to draw ."}{"idx": 9824, "node_name": "xpoints", "Dec": "a an array of x coordinates ."}{"idx": 9825, "node_name": "ypoints", "Dec": "a an array of y coordinates ."}{"idx": 9826, "node_name": "npoints", "Dec": "a the total number of points ."}{"idx": 9828, "node_name": "p", "Dec": "the polygon to fill ."}{"idx": 9830, "node_name": "str", "Dec": "the string to be drawn ."}{"idx": 9831, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 9832, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 9834, "node_name": "iterator", "Dec": "the iterator whose text is to be drawn"}{"idx": 9835, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 9836, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 9838, "node_name": "data", "Dec": "the array of characters to be drawn"}{"idx": 9839, "node_name": "offset", "Dec": "the start offset in the data"}{"idx": 9840, "node_name": "length", "Dec": "the number of characters to be drawn"}{"idx": 9841, "node_name": "x", "Dec": "the x coordinate of the baseline of the text"}{"idx": 9842, "node_name": "y", "Dec": "the y coordinate of the baseline of the text"}{"idx": 9844, "node_name": "data", "Dec": "the data to be drawn"}{"idx": 9845, "node_name": "offset", "Dec": "the start offset in the data"}{"idx": 9846, "node_name": "length", "Dec": "the number of bytes that are drawn"}{"idx": 9847, "node_name": "x", "Dec": "the x coordinate of the baseline of the text"}{"idx": 9848, "node_name": "y", "Dec": "the y coordinate of the baseline of the text"}{"idx": 9850, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 9851, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 9852, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 9853, "node_name": "observer", "Dec": "object to be notified as more of the image is converted ."}{"idx": 9855, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 9856, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 9857, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 9858, "node_name": "width", "Dec": "the width of the rectangle ."}{"idx": 9859, "node_name": "height", "Dec": "the height of the rectangle ."}{"idx": 9860, "node_name": "observer", "Dec": "object to be notified as more of the image is converted ."}{"idx": 9862, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 9863, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 9864, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 9865, "node_name": "bgcolor", "Dec": "the background color to paint under the non-opaque portions of the image ."}{"idx": 9866, "node_name": "observer", "Dec": "object to be notified as more of the image is converted ."}{"idx": 9868, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 9869, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 9870, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 9871, "node_name": "width", "Dec": "the width of the rectangle ."}{"idx": 9872, "node_name": "height", "Dec": "the height of the rectangle ."}{"idx": 9873, "node_name": "bgcolor", "Dec": "the background color to paint under the non-opaque portions of the image ."}{"idx": 9874, "node_name": "observer", "Dec": "object to be notified as more of the image is converted ."}{"idx": 9876, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 9877, "node_name": "dx1", "Dec": "the x coordinate of the first corner of the destination rectangle ."}{"idx": 9878, "node_name": "dy1", "Dec": "the y coordinate of the first corner of the destination rectangle ."}{"idx": 9879, "node_name": "dx2", "Dec": "the x coordinate of the second corner of the destination rectangle ."}{"idx": 9880, "node_name": "dy2", "Dec": "the y coordinate of the second corner of the destination rectangle ."}{"idx": 9881, "node_name": "sx1", "Dec": "the x coordinate of the first corner of the source rectangle ."}{"idx": 9882, "node_name": "sy1", "Dec": "the y coordinate of the first corner of the source rectangle ."}{"idx": 9883, "node_name": "sx2", "Dec": "the x coordinate of the second corner of the source rectangle ."}{"idx": 9884, "node_name": "sy2", "Dec": "the y coordinate of the second corner of the source rectangle ."}{"idx": 9885, "node_name": "observer", "Dec": "object to be notified as more of the image is scaled and converted ."}{"idx": 9887, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 9888, "node_name": "dx1", "Dec": "the x coordinate of the first corner of the destination rectangle ."}{"idx": 9889, "node_name": "dy1", "Dec": "the y coordinate of the first corner of the destination rectangle ."}{"idx": 9890, "node_name": "dx2", "Dec": "the x coordinate of the second corner of the destination rectangle ."}{"idx": 9891, "node_name": "dy2", "Dec": "the y coordinate of the second corner of the destination rectangle ."}{"idx": 9892, "node_name": "sx1", "Dec": "the x coordinate of the first corner of the source rectangle ."}{"idx": 9893, "node_name": "sy1", "Dec": "the y coordinate of the first corner of the source rectangle ."}{"idx": 9894, "node_name": "sx2", "Dec": "the x coordinate of the second corner of the source rectangle ."}{"idx": 9895, "node_name": "sy2", "Dec": "the y coordinate of the second corner of the source rectangle ."}{"idx": 9896, "node_name": "bgcolor", "Dec": "the background color to paint under the non-opaque portions of the image ."}{"idx": 9897, "node_name": "observer", "Dec": "object to be notified as more of the image is scaled and converted ."}{"idx": 9901, "node_name": "x", "Dec": "the x coordinate of the rectangle to test against the clip"}{"idx": 9902, "node_name": "y", "Dec": "the y coordinate of the rectangle to test against the clip"}{"idx": 9903, "node_name": "width", "Dec": "the width of the rectangle to test against the clip"}{"idx": 9904, "node_name": "height", "Dec": "the height of the rectangle to test against the clip"}{"idx": 9906, "node_name": "r", "Dec": "the rectangle where the current clipping area is copied to . any current values in this rectangle are overwritten ."}{"idx": 9910, "node_name": "x", "Dec": "the x coordinate of the rectangle to be drawn ."}{"idx": 9911, "node_name": "y", "Dec": "the y coordinate of the rectangle to be drawn ."}{"idx": 9912, "node_name": "width", "Dec": "the width of the rectangle to be drawn ."}{"idx": 9913, "node_name": "height", "Dec": "the height of the rectangle to be drawn ."}{"idx": 9914, "node_name": "raised", "Dec": "a boolean that determines whether the rectangle appears to be raised above the surface or sunk into the surface ."}{"idx": 9916, "node_name": "x", "Dec": "the x coordinate of the rectangle to be filled ."}{"idx": 9917, "node_name": "y", "Dec": "the y coordinate of the rectangle to be filled ."}{"idx": 9918, "node_name": "width", "Dec": "the width of the rectangle to be filled ."}{"idx": 9919, "node_name": "height", "Dec": "the height of the rectangle to be filled ."}{"idx": 9920, "node_name": "raised", "Dec": "a boolean value that determines whether the rectangle appears to be raised above the surface or etched into the surface ."}{"idx": 9922, "node_name": "s", "Dec": "the shape to be rendered"}{"idx": 9924, "node_name": "img", "Dec": "the specified image to be rendered . drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 9925, "node_name": "xform", "Dec": "the transformation from image space into user space"}{"idx": 9926, "node_name": "obs", "Dec": "the imageobserver to be notified as more of the image is converted"}{"idx": 9928, "node_name": "op", "Dec": "the filter to be applied to the image before rendering"}{"idx": 9929, "node_name": "img", "Dec": "the specified bufferedimage to be rendered . drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int) does nothing if img is null ."}{"idx": 9930, "node_name": "x", "Dec": "the x coordinate of the location in user space where the upper left corner of the image is rendered"}{"idx": 9931, "node_name": "y", "Dec": "the y coordinate of the location in user space where the upper left corner of the image is rendered"}{"idx": 9933, "node_name": "img", "Dec": "the image to be rendered . drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform) does nothing if img is null ."}{"idx": 9934, "node_name": "xform", "Dec": "the transformation from image space into user space"}{"idx": 9936, "node_name": "img", "Dec": "the image to be rendered . drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform) does nothing if img is null ."}{"idx": 9937, "node_name": "xform", "Dec": "the transformation from image space into user space"}{"idx": 9939, "node_name": "str", "Dec": "the string to be rendered"}{"idx": 9940, "node_name": "x", "Dec": "the x coordinate of the location where the string should be rendered"}{"idx": 9941, "node_name": "y", "Dec": "the y coordinate of the location where the string should be rendered"}{"idx": 9943, "node_name": "str", "Dec": "the string to be rendered"}{"idx": 9944, "node_name": "x", "Dec": "the x coordinate of the location where the string should be rendered"}{"idx": 9945, "node_name": "y", "Dec": "the y coordinate of the location where the string should be rendered"}{"idx": 9947, "node_name": "iterator", "Dec": "the iterator whose text is to be rendered"}{"idx": 9948, "node_name": "x", "Dec": "the x coordinate where the iterator's text is to be rendered"}{"idx": 9949, "node_name": "y", "Dec": "the y coordinate where the iterator's text is to be rendered"}{"idx": 9951, "node_name": "iterator", "Dec": "the iterator whose text is to be rendered"}{"idx": 9952, "node_name": "x", "Dec": "the x coordinate where the iterator's text is to be rendered"}{"idx": 9953, "node_name": "y", "Dec": "the y coordinate where the iterator's text is to be rendered"}{"idx": 9955, "node_name": "g", "Dec": "the glyphvector to be rendered"}{"idx": 9956, "node_name": "x", "Dec": "the x position in user space where the glyphs should be rendered"}{"idx": 9957, "node_name": "y", "Dec": "the y position in user space where the glyphs should be rendered"}{"idx": 9959, "node_name": "s", "Dec": "the shape to be filled"}{"idx": 9961, "node_name": "rect", "Dec": "the area in device space to check for a hit"}{"idx": 9962, "node_name": "s", "Dec": "the shape to check for a hit"}{"idx": 9963, "node_name": "onstroke", "Dec": "flag used to choose between testing the stroked or the filled shape . if the flag is true , the stroke outline is tested . if the flag is false , the filled shape is tested ."}{"idx": 9966, "node_name": "comp", "Dec": "the composite object to be used for rendering"}{"idx": 9968, "node_name": "paint", "Dec": "the paint object to be used to generate color during the rendering process , or null"}{"idx": 9970, "node_name": "s", "Dec": "the stroke object to be used to stroke a shape during the rendering process"}{"idx": 9972, "node_name": "hintkey", "Dec": "the key of the hint to be set ."}{"idx": 9973, "node_name": "hintvalue", "Dec": "the value indicating preferences for the specified hint category ."}{"idx": 9975, "node_name": "hintkey", "Dec": "the key corresponding to the hint to get ."}{"idx": 9977, "node_name": "hints", "Dec": "the rendering hints to be set"}{"idx": 9979, "node_name": "hints", "Dec": "the rendering hints to be set"}{"idx": 9982, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 9983, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 9985, "node_name": "tx", "Dec": "the distance to translate along the x-axis"}{"idx": 9986, "node_name": "ty", "Dec": "the distance to translate along the y-axis"}{"idx": 9988, "node_name": "theta", "Dec": "the angle of rotation in radians"}{"idx": 9990, "node_name": "theta", "Dec": "the angle of rotation in radians"}{"idx": 9991, "node_name": "x", "Dec": "the x coordinate of the origin of the rotation"}{"idx": 9992, "node_name": "y", "Dec": "the y coordinate of the origin of the rotation"}{"idx": 9994, "node_name": "sx", "Dec": "the amount by which x coordinates in subsequent rendering operations are multiplied relative to previous rendering operations ."}{"idx": 9995, "node_name": "sy", "Dec": "the amount by which y coordinates in subsequent rendering operations are multiplied relative to previous rendering operations ."}{"idx": 9997, "node_name": "shx", "Dec": "the multiplier by which coordinates are shifted in the positive x axis direction as a function of their y coordinate"}{"idx": 9998, "node_name": "shy", "Dec": "the multiplier by which coordinates are shifted in the positive y axis direction as a function of their x coordinate"}{"idx": 10000, "node_name": "tx", "Dec": "the affinetransform object to be composed with the current transform"}{"idx": 10002, "node_name": "tx", "Dec": "the affinetransform that was retrieved from the gettransform method"}{"idx": 10007, "node_name": "color", "Dec": "the background color that is used in subsequent calls to clearrect"}{"idx": 10011, "node_name": "s", "Dec": "the shape to be intersected with the current clip . if s is null , clip(java.awt.Shape) clears the current clip ."}{"idx": 10019, "node_name": "gc", "Dec": "the array of graphicsconfiguration objects to choose from ."}{"idx": 10021, "node_name": "gc", "Dec": "the graphicsconfiguration object to test"}{"idx": 10026, "node_name": "width", "Dec": "the width of the returned bufferedimage"}{"idx": 10027, "node_name": "height", "Dec": "the height of the returned bufferedimage"}{"idx": 10029, "node_name": "width", "Dec": "the width of the returned bufferedimage"}{"idx": 10030, "node_name": "height", "Dec": "the height of the returned bufferedimage"}{"idx": 10031, "node_name": "transparency", "Dec": "the specified transparency mode"}{"idx": 10033, "node_name": "width", "Dec": "the width of the returned volatileimage"}{"idx": 10034, "node_name": "height", "Dec": "the height of the returned volatileimage"}{"idx": 10036, "node_name": "width", "Dec": "the width of the returned volatileimage"}{"idx": 10037, "node_name": "height", "Dec": "the height of the returned volatileimage"}{"idx": 10038, "node_name": "transparency", "Dec": "the specified transparency mode"}{"idx": 10040, "node_name": "width", "Dec": "the width of the returned volatileimage"}{"idx": 10041, "node_name": "height", "Dec": "the height of the returned volatileimage"}{"idx": 10042, "node_name": "caps", "Dec": "the image capabilities"}{"idx": 10044, "node_name": "width", "Dec": "the width of the returned volatileimage"}{"idx": 10045, "node_name": "height", "Dec": "the height of the returned volatileimage"}{"idx": 10046, "node_name": "caps", "Dec": "the image capabilities"}{"idx": 10047, "node_name": "transparency", "Dec": "the specified transparency mode"}{"idx": 10050, "node_name": "transparency", "Dec": "the specified transparency mode"}{"idx": 10067, "node_name": "gct", "Dec": "the graphicsconfigtemplate object used to obtain a valid graphicsconfiguration"}{"idx": 10070, "node_name": "w", "Dec": "a window to use as the full-screen window ; null if returning to windowed mode . some platforms expect the fullscreen window to be a top-level component ( i.e. , a frame ); therefore it is preferable to use a frame here rather than a window ."}{"idx": 10074, "node_name": "dm", "Dec": "the new display mode of this graphics device ."}{"idx": 10079, "node_name": "translucencykind", "Dec": "a kind of translucency support"}{"idx": 10083, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 10092, "node_name": "img", "Dec": "the specified bufferedimage"}{"idx": 10096, "node_name": "l", "Dec": "a locale object that represents a particular geographical , political , or cultural region . specifying null is equivalent to specifying locale.getdefault() ."}{"idx": 10098, "node_name": "font", "Dec": "the font to be registered"}{"idx": 10149, "node_name": "gridx", "Dec": "the initial gridx value ."}{"idx": 10150, "node_name": "gridy", "Dec": "the initial gridy value ."}{"idx": 10151, "node_name": "gridwidth", "Dec": "the initial gridwidth value ."}{"idx": 10152, "node_name": "gridheight", "Dec": "the initial gridheight value ."}{"idx": 10153, "node_name": "weightx", "Dec": "the initial weightx value ."}{"idx": 10154, "node_name": "weighty", "Dec": "the initial weighty value ."}{"idx": 10155, "node_name": "anchor", "Dec": "the initial anchor value ."}{"idx": 10156, "node_name": "fill", "Dec": "the initial fill value ."}{"idx": 10157, "node_name": "insets", "Dec": "the initial insets value ."}{"idx": 10158, "node_name": "ipadx", "Dec": "the initial ipadx value ."}{"idx": 10159, "node_name": "ipady", "Dec": "the initial ipady value ."}{"idx": 10174, "node_name": "comp", "Dec": "the component to be modified"}{"idx": 10175, "node_name": "constraints", "Dec": "the constraints to be applied"}{"idx": 10177, "node_name": "comp", "Dec": "the component to be queried"}{"idx": 10179, "node_name": "comp", "Dec": "the component to be queried"}{"idx": 10184, "node_name": "x", "Dec": "the x coordinate of a point"}{"idx": 10185, "node_name": "y", "Dec": "the y coordinate of a point"}{"idx": 10187, "node_name": "name", "Dec": "the string to be associated with the component"}{"idx": 10188, "node_name": "comp", "Dec": "the component to be added"}{"idx": 10190, "node_name": "comp", "Dec": "the component to be added"}{"idx": 10191, "node_name": "constraints", "Dec": "an object that determines how the component is added to the layout"}{"idx": 10193, "node_name": "comp", "Dec": "the component to be removed ."}{"idx": 10195, "node_name": "parent", "Dec": "the container in which to do the layout"}{"idx": 10197, "node_name": "parent", "Dec": "the container in which to do the layout"}{"idx": 10199, "node_name": "target", "Dec": "the container which needs to be laid out"}{"idx": 10201, "node_name": "parent", "Dec": "the target container"}{"idx": 10203, "node_name": "parent", "Dec": "the target container"}{"idx": 10205, "node_name": "target", "Dec": "the target container"}{"idx": 10207, "node_name": "parent", "Dec": "the container in which to do the layout"}{"idx": 10210, "node_name": "parent", "Dec": "the layout container"}{"idx": 10211, "node_name": "sizeflag", "Dec": "either preferredsize or minsize"}{"idx": 10213, "node_name": "parent", "Dec": "the layout container"}{"idx": 10214, "node_name": "sizeflag", "Dec": "either preferredsize or minsize"}{"idx": 10216, "node_name": "constraints", "Dec": "the constraints to be applied"}{"idx": 10217, "node_name": "r", "Dec": "the rectangle to be adjusted"}{"idx": 10219, "node_name": "constraints", "Dec": "the constraints to be applied"}{"idx": 10220, "node_name": "r", "Dec": "the rectangle to be adjusted"}{"idx": 10222, "node_name": "parent", "Dec": "the layout container"}{"idx": 10223, "node_name": "info", "Dec": "the layout info for this parent"}{"idx": 10225, "node_name": "parent", "Dec": "the layout container"}{"idx": 10226, "node_name": "info", "Dec": "the layout info for this parent"}{"idx": 10228, "node_name": "parent", "Dec": "the layout container"}{"idx": 10230, "node_name": "parent", "Dec": "the layout container"}{"idx": 10235, "node_name": "rows", "Dec": "the rows , with the value zero meaning any number of rows ."}{"idx": 10236, "node_name": "cols", "Dec": "the columns , with the value zero meaning any number of columns ."}{"idx": 10238, "node_name": "rows", "Dec": "the rows , with the value zero meaning any number of rows"}{"idx": 10239, "node_name": "cols", "Dec": "the columns , with the value zero meaning any number of columns"}{"idx": 10240, "node_name": "hgap", "Dec": "the horizontal gap"}{"idx": 10241, "node_name": "vgap", "Dec": "the vertical gap"}{"idx": 10244, "node_name": "rows", "Dec": "the number of rows in this layout"}{"idx": 10247, "node_name": "cols", "Dec": "the number of columns in this layout"}{"idx": 10250, "node_name": "hgap", "Dec": "the horizontal gap between components"}{"idx": 10253, "node_name": "vgap", "Dec": "the vertical gap between components"}{"idx": 10255, "node_name": "name", "Dec": "the name of the component"}{"idx": 10256, "node_name": "comp", "Dec": "the component to be added"}{"idx": 10258, "node_name": "comp", "Dec": "the component to be removed"}{"idx": 10260, "node_name": "parent", "Dec": "the container in which to do the layout"}{"idx": 10262, "node_name": "parent", "Dec": "the container in which to do the layout"}{"idx": 10264, "node_name": "parent", "Dec": "the container in which to do the layout"}{"idx": 10269, "node_name": "msg", "Dec": "the error message"}{"idx": 10274, "node_name": "s", "Dec": "the string that contains a detailed message"}{"idx": 10279, "node_name": "locale", "Dec": "the desired new locale ."}{"idx": 10282, "node_name": "subsets", "Dec": "the subsets of the unicode character set from which characters may be input"}{"idx": 10284, "node_name": "enable", "Dec": "whether to enable the current input method for composition"}{"idx": 10288, "node_name": "event", "Dec": "the event"}{"idx": 10290, "node_name": "client", "Dec": "client component"}{"idx": 10302, "node_name": "selected", "Dec": "whether the text range is selected"}{"idx": 10303, "node_name": "state", "Dec": "the conversion state for the text range"}{"idx": 10305, "node_name": "selected", "Dec": "whether the text range is selected"}{"idx": 10306, "node_name": "state", "Dec": "the conversion state for the text range"}{"idx": 10307, "node_name": "variation", "Dec": "the style variation for the text range"}{"idx": 10309, "node_name": "selected", "Dec": "whether the text range is selected"}{"idx": 10310, "node_name": "state", "Dec": "the conversion state for the text range"}{"idx": 10311, "node_name": "variation", "Dec": "the variation for the text range"}{"idx": 10312, "node_name": "style", "Dec": "the rendering style attributes for the text range , or null"}{"idx": 10319, "node_name": "offset", "Dec": "the offset within the composed text , if there is composed text ; null otherwise"}{"idx": 10321, "node_name": "x", "Dec": "the absolute x coordinate on screen"}{"idx": 10322, "node_name": "y", "Dec": "the absolute y coordinate on screen"}{"idx": 10325, "node_name": "beginindex", "Dec": "the index of the first character"}{"idx": 10326, "node_name": "endindex", "Dec": "the index of the character following the last character"}{"idx": 10327, "node_name": "attributes", "Dec": "a list of attributes that the input method is interested in"}{"idx": 10330, "node_name": "attributes", "Dec": "a list of attributes that the input method is interested in"}{"idx": 10332, "node_name": "attributes", "Dec": "a list of attributes that the input method is interested in"}{"idx": 10345, "node_name": "context", "Dec": "the input method context for this input method"}{"idx": 10347, "node_name": "locale", "Dec": "locale to input"}{"idx": 10350, "node_name": "subsets", "Dec": "the subsets of the unicode character set from which characters may be input"}{"idx": 10352, "node_name": "enable", "Dec": "whether to enable the input method for composition"}{"idx": 10356, "node_name": "event", "Dec": "the event being dispatched to the input method"}{"idx": 10358, "node_name": "bounds", "Dec": "client window's bounds on the screen ; or null if the client window is iconified or invisible"}{"idx": 10361, "node_name": "istemporary", "Dec": "whether the focus change is temporary"}{"idx": 10369, "node_name": "id", "Dec": "the event type"}{"idx": 10370, "node_name": "text", "Dec": "the combined committed and composed text"}{"idx": 10371, "node_name": "committedcharactercount", "Dec": "the number of committed characters in the text"}{"idx": 10372, "node_name": "caret", "Dec": "the caret ( a.k.a. insertion point ); null if there's no caret within current composed text"}{"idx": 10373, "node_name": "visibleposition", "Dec": "the position that's most important to be visible ; null if there's no recommendation for a visible position within current composed text"}{"idx": 10375, "node_name": "title", "Dec": "the title to be displayed in the window's title bar , if there is such a title bar . a null value is treated as an empty string , \"\" ."}{"idx": 10376, "node_name": "attachtoinputcontext", "Dec": "whether this window should share the input context that corresponds to this input method context"}{"idx": 10378, "node_name": "title", "Dec": "the title to be displayed in the window's title bar , if there is such a title bar . a null value is treated as an empty string , \"\" ."}{"idx": 10379, "node_name": "attachtoinputcontext", "Dec": "whether this window should share the input context that corresponds to this input method context"}{"idx": 10381, "node_name": "inputmethod", "Dec": "the input method for which notifications are enabled or disabled"}{"idx": 10382, "node_name": "enable", "Dec": "true to enable , false to disable"}{"idx": 10387, "node_name": "inputlocale", "Dec": "the locale for which text input is supported , or null"}{"idx": 10388, "node_name": "displaylanguage", "Dec": "the language in which the name will be displayed"}{"idx": 10390, "node_name": "inputlocale", "Dec": "the locale for which text input is supported , or null"}{"idx": 10395, "node_name": "observer", "Dec": "an object waiting for the image to be loaded ."}{"idx": 10397, "node_name": "observer", "Dec": "an object waiting for the image to be loaded ."}{"idx": 10401, "node_name": "name", "Dec": "a property name ."}{"idx": 10402, "node_name": "observer", "Dec": "an object waiting for this image to be loaded ."}{"idx": 10409, "node_name": "xform", "Dec": "the affinetransform to use for the operation ."}{"idx": 10410, "node_name": "hints", "Dec": "the renderinghints object used to specify the interpolation type for the operation ."}{"idx": 10412, "node_name": "xform", "Dec": "the affinetransform to use for the operation ."}{"idx": 10413, "node_name": "interpolationtype", "Dec": "one of the integer interpolation type constants defined by this class : type_nearest_neighbor , type_bilinear , type_bicubic ."}{"idx": 10416, "node_name": "src", "Dec": "the bufferedimage to transform ."}{"idx": 10417, "node_name": "dst", "Dec": "the bufferedimage in which to store the results of the transformation ."}{"idx": 10419, "node_name": "src", "Dec": "the raster to transform ."}{"idx": 10420, "node_name": "dst", "Dec": "the raster in which to store the results of the transformation ."}{"idx": 10422, "node_name": "src", "Dec": "the bufferedimage to be transformed ."}{"idx": 10424, "node_name": "src", "Dec": "the raster to be transformed ."}{"idx": 10426, "node_name": "src", "Dec": "the bufferedimage to be transformed ."}{"idx": 10427, "node_name": "destcm", "Dec": "colormodel of the destination . if null , an appropriate colormodel is used ."}{"idx": 10429, "node_name": "src", "Dec": "the raster to be transformed ."}{"idx": 10431, "node_name": "srcpt", "Dec": "the point2d that represents the source point ."}{"idx": 10432, "node_name": "dstpt", "Dec": "the point2d in which to store the result ."}{"idx": 10437, "node_name": "width", "Dec": "the target width to scale the image"}{"idx": 10438, "node_name": "height", "Dec": "the target height to scale the image"}{"idx": 10440, "node_name": "hints", "Dec": "a set of hints that the imageconsumer uses to process the pixels"}{"idx": 10442, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 10443, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 10444, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 10445, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 10446, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 10447, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 10448, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 10449, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 10451, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 10452, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 10453, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 10454, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 10455, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 10456, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 10457, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 10458, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 10461, "node_name": "matrix", "Dec": "the matrix to use for the band combine operation ."}{"idx": 10462, "node_name": "hints", "Dec": "the renderinghints object for this operation . not currently used so it can be null ."}{"idx": 10465, "node_name": "src", "Dec": "the raster to be filtered ."}{"idx": 10466, "node_name": "dst", "Dec": "the raster in which to store the results of the filter operation ."}{"idx": 10468, "node_name": "src", "Dec": "the raster to be filtered ."}{"idx": 10470, "node_name": "src", "Dec": "the raster to be filtered ."}{"idx": 10472, "node_name": "srcpt", "Dec": "the point2d that represents the point in the source raster"}{"idx": 10473, "node_name": "dstpt", "Dec": "the point2d in which to store the result ."}{"idx": 10477, "node_name": "datatype", "Dec": "the data type for storing samples ."}{"idx": 10478, "node_name": "w", "Dec": "the width ( in pixels ) of the region of image data described ."}{"idx": 10479, "node_name": "h", "Dec": "the height ( in pixels ) of the region of image data described ."}{"idx": 10480, "node_name": "numbands", "Dec": "the number of bands for the image data ."}{"idx": 10482, "node_name": "datatype", "Dec": "the data type for storing samples ."}{"idx": 10483, "node_name": "w", "Dec": "the width ( in pixels ) of the region of image data described ."}{"idx": 10484, "node_name": "h", "Dec": "the height ( in pixels ) of the region of image data described ."}{"idx": 10485, "node_name": "scanlinestride", "Dec": "the line stride of the of the image data ."}{"idx": 10486, "node_name": "bankindices", "Dec": "the bank index for each band ."}{"idx": 10487, "node_name": "bandoffsets", "Dec": "the band offset for each band ."}{"idx": 10489, "node_name": "w", "Dec": "the width of the resulting bandedsamplemodel"}{"idx": 10490, "node_name": "h", "Dec": "the height of the resulting bandedsamplemodel"}{"idx": 10492, "node_name": "bands", "Dec": "a subset of bands from this componentsamplemodel"}{"idx": 10495, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 10496, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 10497, "node_name": "obj", "Dec": "if non-null , a primitive array in which to return the pixel data ."}{"idx": 10498, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 10500, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 10501, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 10502, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array"}{"idx": 10503, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10505, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location"}{"idx": 10506, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location"}{"idx": 10507, "node_name": "w", "Dec": "the width of the pixel rectangle"}{"idx": 10508, "node_name": "h", "Dec": "the height of the pixel rectangle"}{"idx": 10509, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array"}{"idx": 10510, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10512, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 10513, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 10514, "node_name": "b", "Dec": "the band to return"}{"idx": 10515, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10517, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 10518, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 10519, "node_name": "b", "Dec": "the band to return"}{"idx": 10520, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10522, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 10523, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 10524, "node_name": "b", "Dec": "the band to return"}{"idx": 10525, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10527, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location"}{"idx": 10528, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location"}{"idx": 10529, "node_name": "w", "Dec": "the width of the pixel rectangle"}{"idx": 10530, "node_name": "h", "Dec": "the height of the pixel rectangle"}{"idx": 10531, "node_name": "b", "Dec": "the band to return"}{"idx": 10532, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array"}{"idx": 10533, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10535, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 10536, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 10537, "node_name": "obj", "Dec": "if non-null , returns the primitive array in this object"}{"idx": 10538, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10540, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 10541, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 10542, "node_name": "iarray", "Dec": "the input samples in an int array"}{"idx": 10543, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10545, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location"}{"idx": 10546, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location"}{"idx": 10547, "node_name": "w", "Dec": "the width of the pixel rectangle"}{"idx": 10548, "node_name": "h", "Dec": "the height of the pixel rectangle"}{"idx": 10549, "node_name": "iarray", "Dec": "the input samples in an int array"}{"idx": 10550, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10552, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 10553, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 10554, "node_name": "b", "Dec": "the band to set"}{"idx": 10555, "node_name": "s", "Dec": "the input sample as an int"}{"idx": 10556, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10558, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 10559, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 10560, "node_name": "b", "Dec": "the band to set"}{"idx": 10561, "node_name": "s", "Dec": "the input sample as a float"}{"idx": 10562, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10564, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 10565, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 10566, "node_name": "b", "Dec": "the band to set"}{"idx": 10567, "node_name": "s", "Dec": "the input sample as a double"}{"idx": 10568, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10570, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location"}{"idx": 10571, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location"}{"idx": 10572, "node_name": "w", "Dec": "the width of the pixel rectangle"}{"idx": 10573, "node_name": "h", "Dec": "the height of the pixel rectangle"}{"idx": 10574, "node_name": "b", "Dec": "the band to set"}{"idx": 10575, "node_name": "iarray", "Dec": "the input sample array"}{"idx": 10576, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 10579, "node_name": "resolutionvariants", "Dec": "array of resolution variants sorted by image size"}{"idx": 10581, "node_name": "baseimageindex", "Dec": "the index of base image in the resolution variants array"}{"idx": 10582, "node_name": "resolutionvariants", "Dec": "array of resolution variants sorted by image size"}{"idx": 10599, "node_name": "width", "Dec": "width of the created image"}{"idx": 10600, "node_name": "height", "Dec": "height of the created image"}{"idx": 10601, "node_name": "imagetype", "Dec": "type of the created image"}{"idx": 10603, "node_name": "width", "Dec": "width of the created image"}{"idx": 10604, "node_name": "height", "Dec": "height of the created image"}{"idx": 10605, "node_name": "imagetype", "Dec": "type of the created image"}{"idx": 10606, "node_name": "cm", "Dec": "indexcolormodel of the created image"}{"idx": 10608, "node_name": "cm", "Dec": "colormodel for the new image"}{"idx": 10609, "node_name": "raster", "Dec": "raster for the image data"}{"idx": 10610, "node_name": "israsterpremultiplied", "Dec": "if true , the data in the raster has been premultiplied with alpha ."}{"idx": 10611, "node_name": "properties", "Dec": "hashtable of string / object pairs ."}{"idx": 10617, "node_name": "x", "Dec": "the x coordinate of the pixel from which to get the pixel in the default rgb color model and srgb color space"}{"idx": 10618, "node_name": "y", "Dec": "the y coordinate of the pixel from which to get the pixel in the default rgb color model and srgb color space"}{"idx": 10620, "node_name": "startx", "Dec": "the starting x coordinate"}{"idx": 10621, "node_name": "starty", "Dec": "the starting y coordinate"}{"idx": 10622, "node_name": "w", "Dec": "width of region"}{"idx": 10623, "node_name": "h", "Dec": "height of region"}{"idx": 10624, "node_name": "rgbarray", "Dec": "if not null , the rgb pixels are written here"}{"idx": 10625, "node_name": "offset", "Dec": "offset into the rgbarray"}{"idx": 10626, "node_name": "scansize", "Dec": "scanline stride for the rgbarray"}{"idx": 10628, "node_name": "x", "Dec": "the x coordinate of the pixel to set"}{"idx": 10629, "node_name": "y", "Dec": "the y coordinate of the pixel to set"}{"idx": 10630, "node_name": "rgb", "Dec": "the rgb value"}{"idx": 10632, "node_name": "startx", "Dec": "the starting x coordinate"}{"idx": 10633, "node_name": "starty", "Dec": "the starting y coordinate"}{"idx": 10634, "node_name": "w", "Dec": "width of the region"}{"idx": 10635, "node_name": "h", "Dec": "height of the region"}{"idx": 10636, "node_name": "rgbarray", "Dec": "the rgb pixels"}{"idx": 10637, "node_name": "offset", "Dec": "offset into the rgbarray"}{"idx": 10638, "node_name": "scansize", "Dec": "scanline stride for the rgbarray"}{"idx": 10642, "node_name": "observer", "Dec": "ignored"}{"idx": 10644, "node_name": "observer", "Dec": "ignored"}{"idx": 10647, "node_name": "name", "Dec": "the property name"}{"idx": 10648, "node_name": "observer", "Dec": "the imageobserver that receives notification regarding image information"}{"idx": 10650, "node_name": "name", "Dec": "the property name"}{"idx": 10654, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular region"}{"idx": 10655, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular region"}{"idx": 10656, "node_name": "w", "Dec": "the width of the specified rectangular region"}{"idx": 10657, "node_name": "h", "Dec": "the height of the specified rectangular region"}{"idx": 10660, "node_name": "isalphapremultiplied", "Dec": "true if the alpha has been premultiplied ; false otherwise ."}{"idx": 10676, "node_name": "tilex", "Dec": "the x index of the requested tile in the tile array"}{"idx": 10677, "node_name": "tiley", "Dec": "the y index of the requested tile in the tile array"}{"idx": 10680, "node_name": "rect", "Dec": "the region of the bufferedimage to be returned ."}{"idx": 10682, "node_name": "outraster", "Dec": "a writableraster to hold the returned part of the image , or null"}{"idx": 10684, "node_name": "r", "Dec": "the specified raster"}{"idx": 10686, "node_name": "to", "Dec": "the specified tileobserver"}{"idx": 10688, "node_name": "to", "Dec": "the specified tileobserver ."}{"idx": 10690, "node_name": "tilex", "Dec": "the x index of the tile ."}{"idx": 10691, "node_name": "tiley", "Dec": "the y index of the tile ."}{"idx": 10695, "node_name": "tilex", "Dec": "the x index of the tile"}{"idx": 10696, "node_name": "tiley", "Dec": "the y index of the tile"}{"idx": 10698, "node_name": "tilex", "Dec": "the x index of the tile"}{"idx": 10699, "node_name": "tiley", "Dec": "the y index of the tile"}{"idx": 10703, "node_name": "op", "Dec": "the specified bufferedimageop to use to filter a bufferedimage"}{"idx": 10706, "node_name": "width", "Dec": "the width to which to set the width of this bufferedimagefilter"}{"idx": 10707, "node_name": "height", "Dec": "the height to which to set the height of this bufferedimagefilter"}{"idx": 10709, "node_name": "model", "Dec": "the colormodel to which to set the colormodel of this bufferedimagefilter"}{"idx": 10711, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 10712, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 10713, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 10714, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 10715, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 10716, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 10717, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 10718, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 10720, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 10721, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 10722, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 10723, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 10724, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 10725, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 10726, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 10727, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 10729, "node_name": "status", "Dec": "the status of image loading"}{"idx": 10732, "node_name": "src", "Dec": "the bufferedimage to be filtered"}{"idx": 10733, "node_name": "dest", "Dec": "the bufferedimage in which to store the results$"}{"idx": 10735, "node_name": "src", "Dec": "the bufferedimage to be filtered"}{"idx": 10737, "node_name": "src", "Dec": "the bufferedimage to be filtered"}{"idx": 10738, "node_name": "destcm", "Dec": "colormodel of the destination . if null , the colormodel of the source is used ."}{"idx": 10740, "node_name": "srcpt", "Dec": "the point2d that represents the point in the source image"}{"idx": 10741, "node_name": "dstpt", "Dec": "the point2d in which to store the result"}{"idx": 10753, "node_name": "offset", "Dec": "the value subtracted from the input values before indexing into the arrays"}{"idx": 10754, "node_name": "data", "Dec": "an array of byte arrays representing a lookup table for each band"}{"idx": 10756, "node_name": "offset", "Dec": "the value subtracted from the input values before indexing into the array"}{"idx": 10757, "node_name": "data", "Dec": "an array of bytes"}{"idx": 10760, "node_name": "src", "Dec": "the source array ."}{"idx": 10761, "node_name": "dst", "Dec": "the destination array . this array must be at least as long as src . if dst is null , a new array will be allocated having the same length as src ."}{"idx": 10763, "node_name": "src", "Dec": "the source array ."}{"idx": 10764, "node_name": "dst", "Dec": "the destination array . this array must be at least as long as src . if dst is null , a new array will be allocated having the same length as src ."}{"idx": 10767, "node_name": "hints", "Dec": "the renderinghints object used to control the color conversion , or null"}{"idx": 10769, "node_name": "cspace", "Dec": "defines the destination colorspace or an intermediate colorspace"}{"idx": 10770, "node_name": "hints", "Dec": "the renderinghints object used to control the color conversion , or null"}{"idx": 10772, "node_name": "srccspace", "Dec": "the source colorspace"}{"idx": 10773, "node_name": "dstcspace", "Dec": "the destination colorspace"}{"idx": 10774, "node_name": "hints", "Dec": "the renderinghints object used to control the color conversion , or null"}{"idx": 10776, "node_name": "profiles", "Dec": "the array of icc_profile objects"}{"idx": 10777, "node_name": "hints", "Dec": "the renderinghints object used to control the color conversion , or null"}{"idx": 10780, "node_name": "src", "Dec": "the source bufferedimage to be converted"}{"idx": 10781, "node_name": "dest", "Dec": "the destination bufferedimage , or null"}{"idx": 10783, "node_name": "src", "Dec": "the source raster to be converted"}{"idx": 10784, "node_name": "dest", "Dec": "the destination writableraster , or null"}{"idx": 10786, "node_name": "src", "Dec": "the source bufferedimage"}{"idx": 10788, "node_name": "src", "Dec": "the source raster"}{"idx": 10790, "node_name": "src", "Dec": "source image for the filter operation ."}{"idx": 10791, "node_name": "destcm", "Dec": "colormodel of the destination . if null , an appropriate colormodel will be used ."}{"idx": 10793, "node_name": "src", "Dec": "the specified raster"}{"idx": 10795, "node_name": "srcpt", "Dec": "the specified source point2d"}{"idx": 10796, "node_name": "dstpt", "Dec": "the destination point2d"}{"idx": 10802, "node_name": "bits", "Dec": "the number of bits of a pixel"}{"idx": 10804, "node_name": "pixel_bits", "Dec": "the number of bits in the pixel values"}{"idx": 10805, "node_name": "bits", "Dec": "array that specifies the number of significant bits per color and alpha component"}{"idx": 10806, "node_name": "cspace", "Dec": "the specified colorspace"}{"idx": 10807, "node_name": "hasalpha", "Dec": "true if alpha information is present ; false otherwise"}{"idx": 10808, "node_name": "isalphapremultiplied", "Dec": "true if color samples are assumed to be premultiplied by the alpha samples ; false otherwise"}{"idx": 10809, "node_name": "transparency", "Dec": "what alpha values can be represented by this color model"}{"idx": 10810, "node_name": "transfertype", "Dec": "the type of the array used to represent pixel values"}{"idx": 10817, "node_name": "componentidx", "Dec": "the index of the color / alpha component"}{"idx": 10823, "node_name": "pixel", "Dec": "a specified pixel"}{"idx": 10825, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 10827, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 10829, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 10831, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 10833, "node_name": "indata", "Dec": "an array of pixel values"}{"idx": 10835, "node_name": "indata", "Dec": "an array of pixel values"}{"idx": 10837, "node_name": "indata", "Dec": "an array of pixel values"}{"idx": 10839, "node_name": "indata", "Dec": "the specified pixel"}{"idx": 10841, "node_name": "indata", "Dec": "the specified pixel"}{"idx": 10843, "node_name": "rgb", "Dec": "the integer pixel representation in the default rgb color model"}{"idx": 10844, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 10846, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 10847, "node_name": "components", "Dec": "the array to receive the color and alpha components of the specified pixel"}{"idx": 10848, "node_name": "offset", "Dec": "the offset into the components array at which to start storing the color and alpha components"}{"idx": 10850, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 10851, "node_name": "components", "Dec": "an array that receives the color and alpha components of the specified pixel"}{"idx": 10852, "node_name": "offset", "Dec": "the index into the components array at which to begin storing the color and alpha components of the specified pixel"}{"idx": 10854, "node_name": "normcomponents", "Dec": "an array containing normalized components"}{"idx": 10855, "node_name": "normoffset", "Dec": "the offset into the normcomponents array at which to start retrieving normalized components"}{"idx": 10856, "node_name": "components", "Dec": "an array that receives the components from normcomponents"}{"idx": 10857, "node_name": "offset", "Dec": "the index into components at which to begin storing normalized components from normcomponents"}{"idx": 10859, "node_name": "components", "Dec": "an array containing unnormalized components"}{"idx": 10860, "node_name": "offset", "Dec": "the offset into the components array at which to start retrieving unnormalized components"}{"idx": 10861, "node_name": "normcomponents", "Dec": "an array that receives the normalized components"}{"idx": 10862, "node_name": "normoffset", "Dec": "the index into normcomponents at which to begin storing normalized components"}{"idx": 10864, "node_name": "components", "Dec": "an array of unnormalized color and alpha components"}{"idx": 10865, "node_name": "offset", "Dec": "the index into components at which to begin retrieving the color and alpha components"}{"idx": 10867, "node_name": "components", "Dec": "an array of unnormalized color and alpha components"}{"idx": 10868, "node_name": "offset", "Dec": "the index into components at which to begin retrieving color and alpha components"}{"idx": 10869, "node_name": "obj", "Dec": "the object representing an array of color and alpha components"}{"idx": 10871, "node_name": "normcomponents", "Dec": "an array of normalized color and alpha components"}{"idx": 10872, "node_name": "normoffset", "Dec": "the index into normcomponents at which to begin retrieving the color and alpha components"}{"idx": 10874, "node_name": "normcomponents", "Dec": "an array of normalized color and alpha components"}{"idx": 10875, "node_name": "normoffset", "Dec": "the index into normcomponents at which to begin retrieving color and alpha components"}{"idx": 10876, "node_name": "obj", "Dec": "a primitive data array to hold the returned pixel"}{"idx": 10878, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 10879, "node_name": "normcomponents", "Dec": "an array to receive the normalized components"}{"idx": 10880, "node_name": "normoffset", "Dec": "the offset into the normcomponents array at which to start storing normalized components"}{"idx": 10882, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 10886, "node_name": "raster", "Dec": "the writableraster data"}{"idx": 10887, "node_name": "isalphapremultiplied", "Dec": "true if the alpha is premultiplied ; false otherwise"}{"idx": 10889, "node_name": "raster", "Dec": "the raster object to test for compatibility"}{"idx": 10891, "node_name": "w", "Dec": "the width to apply to the new writableraster"}{"idx": 10892, "node_name": "h", "Dec": "the height to apply to the new writableraster"}{"idx": 10894, "node_name": "w", "Dec": "the width to apply to the new samplemodel"}{"idx": 10895, "node_name": "h", "Dec": "the height to apply to the new samplemodel"}{"idx": 10897, "node_name": "sm", "Dec": "the specified samplemodel"}{"idx": 10899, "node_name": "raster", "Dec": "the specified raster"}{"idx": 10903, "node_name": "colorspace", "Dec": "the colorspace associated with this color model ."}{"idx": 10904, "node_name": "bits", "Dec": "the number of significant bits per component . may be null , in which case all bits of all component samples will be significant . ignored if transfertype is one of databuffer.type_short , databuffer.type_float , or databuffer.type_double , in which case all bits of all component samples will be significant ."}{"idx": 10905, "node_name": "hasalpha", "Dec": "if true , this color model supports alpha ."}{"idx": 10906, "node_name": "isalphapremultiplied", "Dec": "if true , alpha is premultiplied ."}{"idx": 10907, "node_name": "transparency", "Dec": "specifies what alpha values can be represented by this color model ."}{"idx": 10908, "node_name": "transfertype", "Dec": "specifies the type of primitive array used to represent pixel values ."}{"idx": 10910, "node_name": "colorspace", "Dec": "the colorspace associated with this color model ."}{"idx": 10911, "node_name": "hasalpha", "Dec": "if true , this color model supports alpha ."}{"idx": 10912, "node_name": "isalphapremultiplied", "Dec": "if true , alpha is premultiplied ."}{"idx": 10913, "node_name": "transparency", "Dec": "specifies what alpha values can be represented by this color model ."}{"idx": 10914, "node_name": "transfertype", "Dec": "specifies the type of primitive array used to represent pixel values ."}{"idx": 10916, "node_name": "pixel", "Dec": "the pixel from which you want to get the red color component ."}{"idx": 10918, "node_name": "pixel", "Dec": "the pixel from which you want to get the green color component ."}{"idx": 10920, "node_name": "pixel", "Dec": "the pixel from which you want to get the blue color component ."}{"idx": 10922, "node_name": "pixel", "Dec": "the pixel from which you want to get the alpha component ."}{"idx": 10924, "node_name": "pixel", "Dec": "the pixel from which you want to get the color / alpha components ."}{"idx": 10926, "node_name": "indata", "Dec": "the pixel from which you want to get the red color component , specified by an array of data elements of type transfertype ."}{"idx": 10928, "node_name": "indata", "Dec": "the pixel from which you want to get the green color component , specified by an array of data elements of type transfertype ."}{"idx": 10930, "node_name": "indata", "Dec": "the pixel from which you want to get the blue color component , specified by an array of data elements of type transfertype ."}{"idx": 10932, "node_name": "indata", "Dec": "the pixel from which you want to get the alpha component , specified by an array of data elements of type transfertype ."}{"idx": 10934, "node_name": "indata", "Dec": "the pixel from which you want to get the color / alpha components , specified by an array of data elements of type transfertype ."}{"idx": 10936, "node_name": "rgb", "Dec": "the integer representation of the pixel in the rgb color model"}{"idx": 10937, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 10939, "node_name": "pixel", "Dec": "the pixel value specified as an integer ."}{"idx": 10940, "node_name": "components", "Dec": "an integer array in which to store the unnormalized color / alpha components . if the components array is null , a new array is allocated ."}{"idx": 10941, "node_name": "offset", "Dec": "an offset into the components array ."}{"idx": 10943, "node_name": "pixel", "Dec": "a pixel value specified by an array of data elements of type transfertype ."}{"idx": 10944, "node_name": "components", "Dec": "an integer array in which to store the unnormalized color / alpha components . if the components array is null , a new array is allocated ."}{"idx": 10945, "node_name": "offset", "Dec": "an offset into the components array ."}{"idx": 10947, "node_name": "normcomponents", "Dec": "an array containing normalized components"}{"idx": 10948, "node_name": "normoffset", "Dec": "the offset into the normcomponents array at which to start retrieving normalized components"}{"idx": 10949, "node_name": "components", "Dec": "an array that receives the components from normcomponents"}{"idx": 10950, "node_name": "offset", "Dec": "the index into components at which to begin storing normalized components from normcomponents"}{"idx": 10952, "node_name": "components", "Dec": "an array containing unnormalized components"}{"idx": 10953, "node_name": "offset", "Dec": "the offset into the components array at which to start retrieving unnormalized components"}{"idx": 10954, "node_name": "normcomponents", "Dec": "an array that receives the normalized components"}{"idx": 10955, "node_name": "normoffset", "Dec": "the index into normcomponents at which to begin storing normalized components"}{"idx": 10957, "node_name": "components", "Dec": "an array of unnormalized color / alpha components ."}{"idx": 10958, "node_name": "offset", "Dec": "an offset into the components array ."}{"idx": 10960, "node_name": "components", "Dec": "an array of unnormalized color / alpha components ."}{"idx": 10961, "node_name": "offset", "Dec": "the integer offset into the components array ."}{"idx": 10962, "node_name": "obj", "Dec": "the object in which to store the data element array representation of the pixel . if obj variable is null , a new array is allocated . if obj is not null , it must be a primitive array of type transfertype . an arrayindexoutofboundsexception is thrown if obj is not large enough to hold a pixel value for this colormodel . since componentcolormodel can be subclassed , subclasses inherit the implementation of getDataElements(int[],int,java.lang.Object) and if they don't override it then they throw an exception if they use an unsupported transfertype ."}{"idx": 10964, "node_name": "normcomponents", "Dec": "an array of normalized color and alpha components"}{"idx": 10965, "node_name": "normoffset", "Dec": "the index into normcomponents at which to begin retrieving the color and alpha components"}{"idx": 10967, "node_name": "normcomponents", "Dec": "an array of normalized color and alpha components"}{"idx": 10968, "node_name": "normoffset", "Dec": "the index into normcomponents at which to begin retrieving color and alpha components"}{"idx": 10969, "node_name": "obj", "Dec": "a primitive data array to hold the returned pixel"}{"idx": 10971, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 10972, "node_name": "normcomponents", "Dec": "an array to receive the normalized components"}{"idx": 10973, "node_name": "normoffset", "Dec": "the offset into the normcomponents array at which to start storing normalized components"}{"idx": 10975, "node_name": "raster", "Dec": "the writableraster data"}{"idx": 10976, "node_name": "isalphapremultiplied", "Dec": "true if the alpha is premultiplied ; false otherwise"}{"idx": 10978, "node_name": "raster", "Dec": "the raster object to test for compatibility ."}{"idx": 10980, "node_name": "w", "Dec": "the width of the writableraster you want to create ."}{"idx": 10981, "node_name": "h", "Dec": "the height of the writableraster you want to create ."}{"idx": 10983, "node_name": "w", "Dec": "the width of the samplemodel you want to create ."}{"idx": 10984, "node_name": "h", "Dec": "the height of the samplemodel you want to create ."}{"idx": 10986, "node_name": "sm", "Dec": "the samplemodel to test for compatibility ."}{"idx": 10988, "node_name": "raster", "Dec": "the writableraster from which to extract the alpha channel ."}{"idx": 10990, "node_name": "obj", "Dec": "the object to test for equality"}{"idx": 11000, "node_name": "datatype", "Dec": "the data type for storing samples"}{"idx": 11001, "node_name": "w", "Dec": "the width ( in pixels ) of the region of image data described"}{"idx": 11002, "node_name": "h", "Dec": "the height ( in pixels ) of the region of image data described"}{"idx": 11003, "node_name": "pixelstride", "Dec": "the pixel stride of the region of image data described"}{"idx": 11004, "node_name": "scanlinestride", "Dec": "the line stride of the region of image data described"}{"idx": 11005, "node_name": "bandoffsets", "Dec": "the offsets of all bands"}{"idx": 11007, "node_name": "datatype", "Dec": "the data type for storing samples"}{"idx": 11008, "node_name": "w", "Dec": "the width ( in pixels ) of the region of image data described"}{"idx": 11009, "node_name": "h", "Dec": "the height ( in pixels ) of the region of image data described"}{"idx": 11010, "node_name": "pixelstride", "Dec": "the pixel stride of the region of image data described"}{"idx": 11011, "node_name": "scanlinestride", "Dec": "the line stride of the region of image data described"}{"idx": 11012, "node_name": "bankindices", "Dec": "the bank indices of all bands"}{"idx": 11013, "node_name": "bandoffsets", "Dec": "the band offsets of all bands"}{"idx": 11015, "node_name": "w", "Dec": "the width of the resulting samplemodel"}{"idx": 11016, "node_name": "h", "Dec": "the height of the resulting samplemodel"}{"idx": 11018, "node_name": "bands", "Dec": "a subset of bands from this componentsamplemodel"}{"idx": 11021, "node_name": "x", "Dec": "the x location of the pixel"}{"idx": 11022, "node_name": "y", "Dec": "the y location of the pixel"}{"idx": 11024, "node_name": "x", "Dec": "the x location of the specified pixel"}{"idx": 11025, "node_name": "y", "Dec": "the y location of the specified pixel"}{"idx": 11026, "node_name": "b", "Dec": "the specified band"}{"idx": 11029, "node_name": "band", "Dec": "the specified band"}{"idx": 11036, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 11037, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 11038, "node_name": "obj", "Dec": "if non-null , a primitive array in which to return the pixel data"}{"idx": 11039, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11041, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 11042, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 11043, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array"}{"idx": 11044, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11046, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location"}{"idx": 11047, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location"}{"idx": 11048, "node_name": "w", "Dec": "the width of the pixel rectangle"}{"idx": 11049, "node_name": "h", "Dec": "the height of the pixel rectangle"}{"idx": 11050, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array"}{"idx": 11051, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11053, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 11054, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 11055, "node_name": "b", "Dec": "the band to return"}{"idx": 11056, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11058, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 11059, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 11060, "node_name": "b", "Dec": "the band to return"}{"idx": 11061, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11063, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 11064, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 11065, "node_name": "b", "Dec": "the band to return"}{"idx": 11066, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11068, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location"}{"idx": 11069, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location"}{"idx": 11070, "node_name": "w", "Dec": "the width of the pixel rectangle"}{"idx": 11071, "node_name": "h", "Dec": "the height of the pixel rectangle"}{"idx": 11072, "node_name": "b", "Dec": "the band to return"}{"idx": 11073, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array"}{"idx": 11074, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11076, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 11077, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 11078, "node_name": "obj", "Dec": "a primitive array containing pixel data"}{"idx": 11079, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11081, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 11082, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 11083, "node_name": "iarray", "Dec": "the input samples in an int array"}{"idx": 11084, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11086, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location"}{"idx": 11087, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location"}{"idx": 11088, "node_name": "w", "Dec": "the width of the pixel rectangle"}{"idx": 11089, "node_name": "h", "Dec": "the height of the pixel rectangle"}{"idx": 11090, "node_name": "iarray", "Dec": "the input samples in an int array"}{"idx": 11091, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11093, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 11094, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 11095, "node_name": "b", "Dec": "the band to set"}{"idx": 11096, "node_name": "s", "Dec": "the input sample as an int"}{"idx": 11097, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11099, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 11100, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 11101, "node_name": "b", "Dec": "the band to set"}{"idx": 11102, "node_name": "s", "Dec": "the input sample as a float"}{"idx": 11103, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11105, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 11106, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 11107, "node_name": "b", "Dec": "the band to set"}{"idx": 11108, "node_name": "s", "Dec": "the input sample as a double"}{"idx": 11109, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11111, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location"}{"idx": 11112, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location"}{"idx": 11113, "node_name": "w", "Dec": "the width of the pixel rectangle"}{"idx": 11114, "node_name": "h", "Dec": "the height of the pixel rectangle"}{"idx": 11115, "node_name": "b", "Dec": "the band to set"}{"idx": 11116, "node_name": "iarray", "Dec": "the input samples in an int array"}{"idx": 11117, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 11122, "node_name": "kernel", "Dec": "the specified kernel"}{"idx": 11123, "node_name": "edgecondition", "Dec": "the specified edge condition"}{"idx": 11124, "node_name": "hints", "Dec": "the specified renderinghints object"}{"idx": 11126, "node_name": "kernel", "Dec": "the specified kernel"}{"idx": 11130, "node_name": "src", "Dec": "the source bufferedimage to filter"}{"idx": 11131, "node_name": "dst", "Dec": "the destination bufferedimage for the filtered src"}{"idx": 11133, "node_name": "src", "Dec": "the source raster to filter"}{"idx": 11134, "node_name": "dst", "Dec": "the destination writableraster for the filtered src"}{"idx": 11136, "node_name": "src", "Dec": "source image for the filter operation ."}{"idx": 11137, "node_name": "destcm", "Dec": "colormodel of the destination . can be null ."}{"idx": 11139, "node_name": "src", "Dec": "the source raster"}{"idx": 11141, "node_name": "src", "Dec": "the bufferedimage to be filtered"}{"idx": 11143, "node_name": "src", "Dec": "the source raster"}{"idx": 11145, "node_name": "srcpt", "Dec": "the point2d that represents the point in the source image"}{"idx": 11146, "node_name": "dstpt", "Dec": "the point2d in which to store the result"}{"idx": 11150, "node_name": "x", "Dec": "the x location of the top of the rectangle to be extracted"}{"idx": 11151, "node_name": "y", "Dec": "the y location of the top of the rectangle to be extracted"}{"idx": 11152, "node_name": "w", "Dec": "the width of the rectangle to be extracted"}{"idx": 11153, "node_name": "h", "Dec": "the height of the rectangle to be extracted"}{"idx": 11155, "node_name": "props", "Dec": "the properties from the source object"}{"idx": 11157, "node_name": "w", "Dec": "the width of the source image"}{"idx": 11158, "node_name": "h", "Dec": "the height of the source image"}{"idx": 11160, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11161, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11162, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 11163, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 11164, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 11165, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 11166, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 11167, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 11169, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11170, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11171, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 11172, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 11173, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 11174, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 11175, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 11176, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 11191, "node_name": "datatype", "Dec": "the data type of this databuffer"}{"idx": 11192, "node_name": "size", "Dec": "the size of the banks"}{"idx": 11194, "node_name": "datatype", "Dec": "the data type of this databuffer"}{"idx": 11195, "node_name": "size", "Dec": "the size of the banks"}{"idx": 11196, "node_name": "numbanks", "Dec": "the number of banks in this databuffer"}{"idx": 11198, "node_name": "datatype", "Dec": "the data type of this databuffer"}{"idx": 11199, "node_name": "size", "Dec": "the size of the banks"}{"idx": 11200, "node_name": "numbanks", "Dec": "the number of banks in this databuffer"}{"idx": 11201, "node_name": "offset", "Dec": "the offset for each bank"}{"idx": 11203, "node_name": "datatype", "Dec": "the data type of this databuffer"}{"idx": 11204, "node_name": "size", "Dec": "the size of the banks"}{"idx": 11205, "node_name": "numbanks", "Dec": "the number of banks in this databuffer"}{"idx": 11206, "node_name": "offsets", "Dec": "an array containing an offset for each bank ."}{"idx": 11208, "node_name": "type", "Dec": "the value of one of the defined datatype tags"}{"idx": 11215, "node_name": "i", "Dec": "the index of the requested data array element"}{"idx": 11217, "node_name": "bank", "Dec": "the specified bank"}{"idx": 11218, "node_name": "i", "Dec": "the index of the requested data array element"}{"idx": 11220, "node_name": "i", "Dec": "the specified index into the data array"}{"idx": 11221, "node_name": "val", "Dec": "the data to set the element at the specified index in the data array"}{"idx": 11223, "node_name": "bank", "Dec": "the specified bank"}{"idx": 11224, "node_name": "i", "Dec": "the specified index into the data array"}{"idx": 11225, "node_name": "val", "Dec": "the data to set the element in the specified bank at the specified index in the data array"}{"idx": 11227, "node_name": "i", "Dec": "the index of the requested data array element"}{"idx": 11229, "node_name": "bank", "Dec": "the specified bank"}{"idx": 11230, "node_name": "i", "Dec": "the index of the requested data array element"}{"idx": 11232, "node_name": "i", "Dec": "the specified index"}{"idx": 11233, "node_name": "val", "Dec": "the value to set the element at the specified index in the data array"}{"idx": 11235, "node_name": "bank", "Dec": "the specified bank"}{"idx": 11236, "node_name": "i", "Dec": "the specified index"}{"idx": 11237, "node_name": "val", "Dec": "the value to set the element in the specified bank at the specified index in the data array"}{"idx": 11239, "node_name": "i", "Dec": "the specified index"}{"idx": 11241, "node_name": "bank", "Dec": "the specified bank"}{"idx": 11242, "node_name": "i", "Dec": "the specified index"}{"idx": 11244, "node_name": "i", "Dec": "the specified index"}{"idx": 11245, "node_name": "val", "Dec": "the value to set the element at the specified index in the data array"}{"idx": 11247, "node_name": "bank", "Dec": "the specified bank"}{"idx": 11248, "node_name": "i", "Dec": "the specified index"}{"idx": 11249, "node_name": "val", "Dec": "the value to set the element in the specified bank at the specified index of the data array"}{"idx": 11252, "node_name": "size", "Dec": "the size of the databuffer ."}{"idx": 11254, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11255, "node_name": "numbanks", "Dec": "the number of banks in the a databuffer ."}{"idx": 11257, "node_name": "dataarray", "Dec": "the byte array for the databuffer ."}{"idx": 11258, "node_name": "size", "Dec": "the size of the databuffer bank ."}{"idx": 11260, "node_name": "dataarray", "Dec": "the byte array for the databuffer ."}{"idx": 11261, "node_name": "size", "Dec": "the size of the databuffer bank ."}{"idx": 11262, "node_name": "offset", "Dec": "the offset into the dataarray . dataarray must have at least offset + size elements ."}{"idx": 11264, "node_name": "dataarray", "Dec": "the byte arrays for the databuffer ."}{"idx": 11265, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11267, "node_name": "dataarray", "Dec": "the byte arrays for the databuffer ."}{"idx": 11268, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11269, "node_name": "offsets", "Dec": "the offsets into each array ."}{"idx": 11272, "node_name": "bank", "Dec": "the bank whose data array you want to get ."}{"idx": 11275, "node_name": "i", "Dec": "the data array element you want to get ."}{"idx": 11277, "node_name": "bank", "Dec": "the bank from which you want to get a data array element ."}{"idx": 11278, "node_name": "i", "Dec": "the data array element you want to get ."}{"idx": 11280, "node_name": "i", "Dec": "the data array element you want to set ."}{"idx": 11281, "node_name": "val", "Dec": "the integer value to which you want to set the data array element ."}{"idx": 11283, "node_name": "bank", "Dec": "the bank in which you want to set the data array element ."}{"idx": 11284, "node_name": "i", "Dec": "the data array element you want to set ."}{"idx": 11285, "node_name": "val", "Dec": "the integer value to which you want to set the specified data array element ."}{"idx": 11288, "node_name": "size", "Dec": "the number of elements in the databuffer ."}{"idx": 11290, "node_name": "size", "Dec": "the number of elements in each bank of the databuffer ."}{"idx": 11291, "node_name": "numbanks", "Dec": "the number of banks in the databuffer ."}{"idx": 11293, "node_name": "dataarray", "Dec": "an array of doubles to be used as the first and only bank of this databuffer ."}{"idx": 11294, "node_name": "size", "Dec": "the number of elements of the array to be used ."}{"idx": 11296, "node_name": "dataarray", "Dec": "an array of doubles to be used as the first and only bank of this databuffer ."}{"idx": 11297, "node_name": "size", "Dec": "the number of elements of the array to be used ."}{"idx": 11298, "node_name": "offset", "Dec": "the offset of the first element of the array that will be used ."}{"idx": 11300, "node_name": "dataarray", "Dec": "an array of arrays of doubles to be used as the banks of this databuffer ."}{"idx": 11301, "node_name": "size", "Dec": "the number of elements of each array to be used ."}{"idx": 11303, "node_name": "dataarray", "Dec": "an array of arrays of doubles to be used as the banks of this databuffer ."}{"idx": 11304, "node_name": "size", "Dec": "the number of elements of each array to be used ."}{"idx": 11305, "node_name": "offsets", "Dec": "an array of integer offsets , one for each bank ."}{"idx": 11308, "node_name": "bank", "Dec": "the data array"}{"idx": 11311, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11313, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11314, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11316, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11317, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11319, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11320, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11321, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11323, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11325, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11326, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11328, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11329, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11331, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11332, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11333, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11335, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11337, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11338, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11340, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11341, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11343, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11344, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11345, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11348, "node_name": "size", "Dec": "the number of elements in the databuffer ."}{"idx": 11350, "node_name": "size", "Dec": "the number of elements in each bank of the databuffer ."}{"idx": 11351, "node_name": "numbanks", "Dec": "the number of banks in the databuffer ."}{"idx": 11353, "node_name": "dataarray", "Dec": "an array of floats to be used as the first and only bank of this databuffer ."}{"idx": 11354, "node_name": "size", "Dec": "the number of elements of the array to be used ."}{"idx": 11356, "node_name": "dataarray", "Dec": "an array of floats to be used as the first and only bank of this databuffer ."}{"idx": 11357, "node_name": "size", "Dec": "the number of elements of the array to be used ."}{"idx": 11358, "node_name": "offset", "Dec": "the offset of the first element of the array that will be used ."}{"idx": 11360, "node_name": "dataarray", "Dec": "an array of arrays of floats to be used as the banks of this databuffer ."}{"idx": 11361, "node_name": "size", "Dec": "the number of elements of each array to be used ."}{"idx": 11363, "node_name": "dataarray", "Dec": "an array of arrays of floats to be used as the banks of this databuffer ."}{"idx": 11364, "node_name": "size", "Dec": "the number of elements of each array to be used ."}{"idx": 11365, "node_name": "offsets", "Dec": "an array of integer offsets , one for each bank ."}{"idx": 11368, "node_name": "bank", "Dec": "the data array"}{"idx": 11371, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11373, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11374, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11376, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11377, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11379, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11380, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11381, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11383, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11385, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11386, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11388, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11389, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11391, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11392, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11393, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11395, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11397, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11398, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11400, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11401, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11403, "node_name": "bank", "Dec": "the bank number ."}{"idx": 11404, "node_name": "i", "Dec": "the desired data array element ."}{"idx": 11405, "node_name": "val", "Dec": "the value to be set ."}{"idx": 11408, "node_name": "size", "Dec": "the size of the databuffer ."}{"idx": 11410, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11411, "node_name": "numbanks", "Dec": "the number of banks in the a databuffer ."}{"idx": 11413, "node_name": "dataarray", "Dec": "the integer array for the databuffer ."}{"idx": 11414, "node_name": "size", "Dec": "the size of the databuffer bank ."}{"idx": 11416, "node_name": "dataarray", "Dec": "the integer array for the databuffer ."}{"idx": 11417, "node_name": "size", "Dec": "the size of the databuffer bank ."}{"idx": 11418, "node_name": "offset", "Dec": "the offset into the dataarray ."}{"idx": 11420, "node_name": "dataarray", "Dec": "the integer arrays for the databuffer ."}{"idx": 11421, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11423, "node_name": "dataarray", "Dec": "the integer arrays for the databuffer ."}{"idx": 11424, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11425, "node_name": "offsets", "Dec": "the offsets into each array ."}{"idx": 11428, "node_name": "bank", "Dec": "the bank whose data array you want to get ."}{"idx": 11431, "node_name": "i", "Dec": "the data array element you want to get ."}{"idx": 11433, "node_name": "bank", "Dec": "the bank from which you want to get a data array element ."}{"idx": 11434, "node_name": "i", "Dec": "the data array element you want to get ."}{"idx": 11436, "node_name": "i", "Dec": "the data array element you want to set ."}{"idx": 11437, "node_name": "val", "Dec": "the integer value to which you want to set the data array element ."}{"idx": 11439, "node_name": "bank", "Dec": "the bank in which you want to set the data array element ."}{"idx": 11440, "node_name": "i", "Dec": "the data array element you want to set ."}{"idx": 11441, "node_name": "val", "Dec": "the integer value to which you want to set the specified data array element ."}{"idx": 11444, "node_name": "size", "Dec": "the size of the databuffer ."}{"idx": 11446, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11447, "node_name": "numbanks", "Dec": "the number of banks in the a databuffer ."}{"idx": 11449, "node_name": "dataarray", "Dec": "the short array for the databuffer ."}{"idx": 11450, "node_name": "size", "Dec": "the size of the databuffer bank ."}{"idx": 11452, "node_name": "dataarray", "Dec": "the short array for the databuffer ."}{"idx": 11453, "node_name": "size", "Dec": "the size of the databuffer bank ."}{"idx": 11454, "node_name": "offset", "Dec": "the offset into the dataarray ."}{"idx": 11456, "node_name": "dataarray", "Dec": "the short arrays for the databuffer ."}{"idx": 11457, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11459, "node_name": "dataarray", "Dec": "the short arrays for the databuffer ."}{"idx": 11460, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11461, "node_name": "offsets", "Dec": "the offsets into each array ."}{"idx": 11464, "node_name": "bank", "Dec": "the bank whose data array you want to get ."}{"idx": 11467, "node_name": "i", "Dec": "the data array element you want to get ."}{"idx": 11469, "node_name": "bank", "Dec": "the bank from which you want to get a data array element ."}{"idx": 11470, "node_name": "i", "Dec": "the data array element you want to get ."}{"idx": 11472, "node_name": "i", "Dec": "the data array element you want to set ."}{"idx": 11473, "node_name": "val", "Dec": "the integer value to which you want to set the data array element ."}{"idx": 11475, "node_name": "bank", "Dec": "the bank in which you want to set the data array element ."}{"idx": 11476, "node_name": "i", "Dec": "the data array element you want to set ."}{"idx": 11477, "node_name": "val", "Dec": "the integer value to which you want to set the specified data array element ."}{"idx": 11480, "node_name": "size", "Dec": "the size of the databuffer ."}{"idx": 11482, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11483, "node_name": "numbanks", "Dec": "the number of banks in the a databuffer ."}{"idx": 11485, "node_name": "dataarray", "Dec": "the unsigned-short array for the databuffer ."}{"idx": 11486, "node_name": "size", "Dec": "the size of the databuffer bank ."}{"idx": 11488, "node_name": "dataarray", "Dec": "the unsigned-short array for the databuffer ."}{"idx": 11489, "node_name": "size", "Dec": "the size of the databuffer bank ."}{"idx": 11490, "node_name": "offset", "Dec": "the offset into the dataarray ."}{"idx": 11492, "node_name": "dataarray", "Dec": "the unsigned-short arrays for the databuffer ."}{"idx": 11493, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11495, "node_name": "dataarray", "Dec": "the unsigned-short arrays for the databuffer ."}{"idx": 11496, "node_name": "size", "Dec": "the size of the banks in the databuffer ."}{"idx": 11497, "node_name": "offsets", "Dec": "the offsets into each array ."}{"idx": 11500, "node_name": "bank", "Dec": "the bank whose data array you want to get ."}{"idx": 11503, "node_name": "i", "Dec": "the data array element you want to get ."}{"idx": 11505, "node_name": "bank", "Dec": "the bank from which you want to get a data array element ."}{"idx": 11506, "node_name": "i", "Dec": "the data array element you want to get ."}{"idx": 11508, "node_name": "i", "Dec": "the data array element you want to set ."}{"idx": 11509, "node_name": "val", "Dec": "the integer value to which you want to set the data array element ."}{"idx": 11511, "node_name": "bank", "Dec": "the bank in which you want to set the data array element ."}{"idx": 11512, "node_name": "i", "Dec": "the data array element you want to set ."}{"idx": 11513, "node_name": "val", "Dec": "the integer value to which you want to set the specified data array element ."}{"idx": 11516, "node_name": "bits", "Dec": "the number of bits in the pixel values ; for example , the sum of the number of bits in the masks ."}{"idx": 11517, "node_name": "rmask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the red component"}{"idx": 11518, "node_name": "gmask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the green component"}{"idx": 11519, "node_name": "bmask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the blue component"}{"idx": 11521, "node_name": "bits", "Dec": "the number of bits in the pixel values ; for example , the sum of the number of bits in the masks ."}{"idx": 11522, "node_name": "rmask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the red component"}{"idx": 11523, "node_name": "gmask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the green component"}{"idx": 11524, "node_name": "bmask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the blue component"}{"idx": 11525, "node_name": "amask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the alpha component"}{"idx": 11527, "node_name": "space", "Dec": "the specified colorspace"}{"idx": 11528, "node_name": "bits", "Dec": "the number of bits in the pixel values ; for example , the sum of the number of bits in the masks ."}{"idx": 11529, "node_name": "rmask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the red component"}{"idx": 11530, "node_name": "gmask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the green component"}{"idx": 11531, "node_name": "bmask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the blue component"}{"idx": 11532, "node_name": "amask", "Dec": "specifies a mask indicating which bits in an integer pixel contain the alpha component"}{"idx": 11533, "node_name": "isalphapremultiplied", "Dec": "true if color samples are premultiplied by the alpha sample ; false otherwise"}{"idx": 11534, "node_name": "transfertype", "Dec": "the type of array used to represent pixel values"}{"idx": 11540, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11542, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11544, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11546, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11548, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11550, "node_name": "indata", "Dec": "the array containing the pixel value"}{"idx": 11552, "node_name": "indata", "Dec": "the array containing the pixel value"}{"idx": 11554, "node_name": "indata", "Dec": "the array containing the pixel value"}{"idx": 11556, "node_name": "indata", "Dec": "the specified pixel"}{"idx": 11558, "node_name": "indata", "Dec": "the specified pixel"}{"idx": 11560, "node_name": "rgb", "Dec": "the integer pixel representation in the default rgb color model"}{"idx": 11561, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11563, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11564, "node_name": "components", "Dec": "the array to receive the color and alpha components of the specified pixel"}{"idx": 11565, "node_name": "offset", "Dec": "the offset into the components array at which to start storing the color and alpha components"}{"idx": 11567, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11568, "node_name": "components", "Dec": "the array to receive the color and alpha components of the specified pixel"}{"idx": 11569, "node_name": "offset", "Dec": "the offset into the components array at which to start storing the color and alpha components"}{"idx": 11571, "node_name": "w", "Dec": "the width to apply to the new writableraster"}{"idx": 11572, "node_name": "h", "Dec": "the height to apply to the new writableraster"}{"idx": 11574, "node_name": "components", "Dec": "an array of unnormalized color and alpha components"}{"idx": 11575, "node_name": "offset", "Dec": "the index into components at which to begin retrieving the color and alpha components"}{"idx": 11577, "node_name": "components", "Dec": "an array of unnormalized color and alpha components"}{"idx": 11578, "node_name": "offset", "Dec": "the index into components at which to begin retrieving color and alpha components"}{"idx": 11579, "node_name": "obj", "Dec": "the object representing an array of color and alpha components"}{"idx": 11581, "node_name": "raster", "Dec": "the writableraster data"}{"idx": 11582, "node_name": "isalphapremultiplied", "Dec": "true if the alpha is premultiplied ; false otherwise"}{"idx": 11584, "node_name": "raster", "Dec": "the raster object to test for compatibility"}{"idx": 11588, "node_name": "orig", "Dec": "the specified imageproducer"}{"idx": 11589, "node_name": "imgf", "Dec": "the specified imagefilter"}{"idx": 11591, "node_name": "ic", "Dec": "the consumer for the filtered image"}{"idx": 11593, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11595, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11597, "node_name": "ic", "Dec": "the consumer for the filtered image"}{"idx": 11599, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11611, "node_name": "width", "Dec": "the width of the source image"}{"idx": 11612, "node_name": "height", "Dec": "the height of the source image"}{"idx": 11614, "node_name": "props", "Dec": "the list of properties to be associated with this image"}{"idx": 11616, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 11618, "node_name": "hintflags", "Dec": "a set of hints that the imageconsumer uses to process the pixels"}{"idx": 11620, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11621, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11622, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 11623, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 11624, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 11625, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 11626, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 11627, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 11629, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11630, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11631, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 11632, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 11633, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 11634, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 11635, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 11636, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 11638, "node_name": "status", "Dec": "the status of image loading"}{"idx": 11643, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11645, "node_name": "width", "Dec": "the width of the source image"}{"idx": 11646, "node_name": "height", "Dec": "the height of the source image"}{"idx": 11648, "node_name": "props", "Dec": "the properties from the source object"}{"idx": 11650, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 11652, "node_name": "hints", "Dec": "a set of hints that the imageconsumer uses to process the pixels"}{"idx": 11654, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11655, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11656, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 11657, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 11658, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 11659, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 11660, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 11661, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 11663, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11664, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 11665, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 11666, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 11667, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 11668, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 11669, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 11670, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 11672, "node_name": "status", "Dec": "the status of image loading"}{"idx": 11674, "node_name": "ip", "Dec": "the imageproducer that is feeding this instance of the filter"}{"idx": 11686, "node_name": "img", "Dec": "the image being observed ."}{"idx": 11687, "node_name": "infoflags", "Dec": "the bitwise inclusive or of the following flags : width , height , properties , somebits , framebits , allbits , error , abort ."}{"idx": 11688, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 11689, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 11690, "node_name": "width", "Dec": "the width ."}{"idx": 11691, "node_name": "height", "Dec": "the height ."}{"idx": 11694, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11696, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11698, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11700, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11702, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11705, "node_name": "s", "Dec": "the message to generate when a imagingopexception is thrown"}{"idx": 11708, "node_name": "bits", "Dec": "the number of bits each pixel occupies"}{"idx": 11709, "node_name": "size", "Dec": "the size of the color component arrays"}{"idx": 11710, "node_name": "r", "Dec": "the array of red color components"}{"idx": 11711, "node_name": "g", "Dec": "the array of green color components"}{"idx": 11712, "node_name": "b", "Dec": "the array of blue color components"}{"idx": 11714, "node_name": "bits", "Dec": "the number of bits each pixel occupies"}{"idx": 11715, "node_name": "size", "Dec": "the size of the color component arrays"}{"idx": 11716, "node_name": "r", "Dec": "the array of red color components"}{"idx": 11717, "node_name": "g", "Dec": "the array of green color components"}{"idx": 11718, "node_name": "b", "Dec": "the array of blue color components"}{"idx": 11719, "node_name": "trans", "Dec": "the index of the transparent pixel"}{"idx": 11721, "node_name": "bits", "Dec": "the number of bits each pixel occupies"}{"idx": 11722, "node_name": "size", "Dec": "the size of the color component arrays"}{"idx": 11723, "node_name": "r", "Dec": "the array of red color components"}{"idx": 11724, "node_name": "g", "Dec": "the array of green color components"}{"idx": 11725, "node_name": "b", "Dec": "the array of blue color components"}{"idx": 11726, "node_name": "a", "Dec": "the array of alpha value components"}{"idx": 11728, "node_name": "bits", "Dec": "the number of bits each pixel occupies"}{"idx": 11729, "node_name": "size", "Dec": "the size of the color component arrays"}{"idx": 11730, "node_name": "cmap", "Dec": "the array of color components"}{"idx": 11731, "node_name": "start", "Dec": "the starting offset of the first color component"}{"idx": 11732, "node_name": "hasalpha", "Dec": "indicates whether alpha values are contained in the cmap array"}{"idx": 11734, "node_name": "bits", "Dec": "the number of bits each pixel occupies"}{"idx": 11735, "node_name": "size", "Dec": "the size of the color component arrays"}{"idx": 11736, "node_name": "cmap", "Dec": "the array of color components"}{"idx": 11737, "node_name": "start", "Dec": "the starting offset of the first color component"}{"idx": 11738, "node_name": "hasalpha", "Dec": "indicates whether alpha values are contained in the cmap array"}{"idx": 11739, "node_name": "trans", "Dec": "the index of the fully transparent pixel"}{"idx": 11741, "node_name": "bits", "Dec": "the number of bits each pixel occupies"}{"idx": 11742, "node_name": "size", "Dec": "the size of the color component arrays"}{"idx": 11743, "node_name": "cmap", "Dec": "the array of color components"}{"idx": 11744, "node_name": "start", "Dec": "the starting offset of the first color component"}{"idx": 11745, "node_name": "hasalpha", "Dec": "indicates whether alpha values are contained in the cmap array"}{"idx": 11746, "node_name": "trans", "Dec": "the index of the fully transparent pixel"}{"idx": 11747, "node_name": "transfertype", "Dec": "the data type of the array used to represent pixel values . the data type must be either databuffer.type_byte or databuffer.type_ushort ."}{"idx": 11749, "node_name": "bits", "Dec": "the number of bits each pixel occupies"}{"idx": 11750, "node_name": "size", "Dec": "the size of the color component array"}{"idx": 11751, "node_name": "cmap", "Dec": "the array of color components"}{"idx": 11752, "node_name": "start", "Dec": "the starting offset of the first color component"}{"idx": 11753, "node_name": "transfertype", "Dec": "the specified data type"}{"idx": 11754, "node_name": "validbits", "Dec": "a biginteger object . if a bit is set in the biginteger , the pixel at that index is valid . if a bit is not set , the pixel at that index is considered invalid . if null , all pixels are valid . only bits from 0 to the map size are considered ."}{"idx": 11760, "node_name": "r", "Dec": "the specified array into which the elements of the array of red color components are copied"}{"idx": 11762, "node_name": "g", "Dec": "the specified array into which the elements of the array of green color components are copied"}{"idx": 11764, "node_name": "b", "Dec": "the specified array into which the elements of the array of blue color components are copied"}{"idx": 11766, "node_name": "a", "Dec": "the specified array into which the elements of the array of alpha components are copied"}{"idx": 11768, "node_name": "rgb", "Dec": "the specified array into which the converted argb values from this array of color and alpha components are copied ."}{"idx": 11770, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11772, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11774, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11776, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11778, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11780, "node_name": "rgb", "Dec": "the integer pixel representation in the default rgb color model"}{"idx": 11781, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11783, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11784, "node_name": "components", "Dec": "the array to receive the color and alpha components of the specified pixel"}{"idx": 11785, "node_name": "offset", "Dec": "the offset into the components array at which to start storing the color and alpha components"}{"idx": 11787, "node_name": "pixel", "Dec": "the specified pixel"}{"idx": 11788, "node_name": "components", "Dec": "an array that receives the color and alpha components of the specified pixel"}{"idx": 11789, "node_name": "offset", "Dec": "the index into the components array at which to begin storing the color and alpha components of the specified pixel"}{"idx": 11791, "node_name": "components", "Dec": "an array of unnormalized color and alpha components"}{"idx": 11792, "node_name": "offset", "Dec": "the index into components at which to begin retrieving the color and alpha components"}{"idx": 11794, "node_name": "components", "Dec": "an array of unnormalized color and alpha components"}{"idx": 11795, "node_name": "offset", "Dec": "the index into components at which to begin retrieving color and alpha components"}{"idx": 11796, "node_name": "pixel", "Dec": "the object representing an array of color and alpha components"}{"idx": 11798, "node_name": "w", "Dec": "the width to apply to the new writableraster"}{"idx": 11799, "node_name": "h", "Dec": "the height to apply to the new writableraster"}{"idx": 11801, "node_name": "raster", "Dec": "the raster object to test for compatibility"}{"idx": 11803, "node_name": "w", "Dec": "the width to apply to the new samplemodel"}{"idx": 11804, "node_name": "h", "Dec": "the height to apply to the new samplemodel"}{"idx": 11806, "node_name": "sm", "Dec": "the specified samplemodel , or null"}{"idx": 11808, "node_name": "raster", "Dec": "the specified raster"}{"idx": 11809, "node_name": "forceargb", "Dec": "if true , the returned bufferedimage is type_int_argb ; otherwise it is type_int_rgb"}{"idx": 11811, "node_name": "pixel", "Dec": "the specified pixel value"}{"idx": 11816, "node_name": "obj", "Dec": "the object to test for equality"}{"idx": 11828, "node_name": "observer", "Dec": "an object waiting for the image to be loaded ."}{"idx": 11830, "node_name": "observer", "Dec": "an object waiting for the image to be loaded ."}{"idx": 11834, "node_name": "name", "Dec": "a property name ."}{"idx": 11835, "node_name": "observer", "Dec": "an object waiting for this image to be loaded ."}{"idx": 11837, "node_name": "width", "Dec": "the width to which to scale the image ."}{"idx": 11838, "node_name": "height", "Dec": "the height to which to scale the image ."}{"idx": 11839, "node_name": "hints", "Dec": "flags to indicate the type of algorithm to use for image resampling ."}{"idx": 11842, "node_name": "gc", "Dec": "a graphicsconfiguration object . a value of null for this parameter will result in getting the image capabilities for the default graphicsconfiguration ."}{"idx": 11844, "node_name": "priority", "Dec": "a value between 0 and 1 , inclusive , where higher values indicate more importance for acceleration . a value of 0 means that this image should never be accelerated . other values are used simply to determine acceleration priority relative to other images ."}{"idx": 11848, "node_name": "width", "Dec": "width of the kernel"}{"idx": 11849, "node_name": "height", "Dec": "height of the kernel"}{"idx": 11850, "node_name": "data", "Dec": "kernel data in row major order"}{"idx": 11856, "node_name": "data", "Dec": "if non-null , contains the returned kernel data"}{"idx": 11860, "node_name": "lookup", "Dec": "the specified lookuptable"}{"idx": 11861, "node_name": "hints", "Dec": "the specified renderinghints , or null"}{"idx": 11864, "node_name": "src", "Dec": "the bufferedimage to be filtered"}{"idx": 11865, "node_name": "dst", "Dec": "the bufferedimage in which to store the results of the filter operation"}{"idx": 11867, "node_name": "src", "Dec": "the source raster to filter"}{"idx": 11868, "node_name": "dst", "Dec": "the destination writableraster for the filtered src"}{"idx": 11870, "node_name": "src", "Dec": "the bufferedimage to be filtered"}{"idx": 11872, "node_name": "src", "Dec": "the raster to be filtered"}{"idx": 11874, "node_name": "src", "Dec": "source image for the filter operation ."}{"idx": 11875, "node_name": "destcm", "Dec": "the destination's colormodel , which can be null ."}{"idx": 11877, "node_name": "src", "Dec": "the raster to be transformed"}{"idx": 11879, "node_name": "srcpt", "Dec": "a point2d that represents a point in the source image"}{"idx": 11880, "node_name": "dstpt", "Dec": "a point2d that represents the location in the destination"}{"idx": 11884, "node_name": "offset", "Dec": "the offset to subtract from input values before indexing into the data arrays for this lookuptable"}{"idx": 11885, "node_name": "numcomponents", "Dec": "the number of data arrays in this lookuptable"}{"idx": 11889, "node_name": "src", "Dec": "the source array of components of one pixel"}{"idx": 11890, "node_name": "dest", "Dec": "the destination array of components for one pixel , translated with this lookuptable"}{"idx": 11893, "node_name": "w", "Dec": "the width of the rectangle of pixels"}{"idx": 11894, "node_name": "h", "Dec": "the height of the rectangle of pixels"}{"idx": 11895, "node_name": "cm", "Dec": "the specified colormodel"}{"idx": 11896, "node_name": "pix", "Dec": "an array of pixels"}{"idx": 11897, "node_name": "off", "Dec": "the offset into the array of where to store the first pixel"}{"idx": 11898, "node_name": "scan", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 11900, "node_name": "w", "Dec": "the width of the rectangle of pixels"}{"idx": 11901, "node_name": "h", "Dec": "the height of the rectangle of pixels"}{"idx": 11902, "node_name": "cm", "Dec": "the specified colormodel"}{"idx": 11903, "node_name": "pix", "Dec": "an array of pixels"}{"idx": 11904, "node_name": "off", "Dec": "the offset into the array of where to store the first pixel"}{"idx": 11905, "node_name": "scan", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 11906, "node_name": "props", "Dec": "a list of properties that the imageproducer uses to process an image"}{"idx": 11908, "node_name": "w", "Dec": "the width of the rectangle of pixels"}{"idx": 11909, "node_name": "h", "Dec": "the height of the rectangle of pixels"}{"idx": 11910, "node_name": "cm", "Dec": "the specified colormodel"}{"idx": 11911, "node_name": "pix", "Dec": "an array of pixels"}{"idx": 11912, "node_name": "off", "Dec": "the offset into the array of where to store the first pixel"}{"idx": 11913, "node_name": "scan", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 11915, "node_name": "w", "Dec": "the width of the rectangle of pixels"}{"idx": 11916, "node_name": "h", "Dec": "the height of the rectangle of pixels"}{"idx": 11917, "node_name": "cm", "Dec": "the specified colormodel"}{"idx": 11918, "node_name": "pix", "Dec": "an array of pixels"}{"idx": 11919, "node_name": "off", "Dec": "the offset into the array of where to store the first pixel"}{"idx": 11920, "node_name": "scan", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 11921, "node_name": "props", "Dec": "a list of properties that the imageproducer uses to process an image"}{"idx": 11923, "node_name": "w", "Dec": "the width of the rectangle of pixels"}{"idx": 11924, "node_name": "h", "Dec": "the height of the rectangle of pixels"}{"idx": 11925, "node_name": "pix", "Dec": "an array of pixels"}{"idx": 11926, "node_name": "off", "Dec": "the offset into the array of where to store the first pixel"}{"idx": 11927, "node_name": "scan", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 11929, "node_name": "w", "Dec": "the width of the rectangle of pixels"}{"idx": 11930, "node_name": "h", "Dec": "the height of the rectangle of pixels"}{"idx": 11931, "node_name": "pix", "Dec": "an array of pixels"}{"idx": 11932, "node_name": "off", "Dec": "the offset into the array of where to store the first pixel"}{"idx": 11933, "node_name": "scan", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 11934, "node_name": "props", "Dec": "a list of properties that the imageproducer uses to process an image"}{"idx": 11936, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11938, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11940, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11942, "node_name": "ic", "Dec": "the specified imageconsumer image data through the imageconsumer interface ."}{"idx": 11944, "node_name": "ic", "Dec": "the specified imageconsumer"}{"idx": 11946, "node_name": "animated", "Dec": "true if the image is a multi-frame animation"}{"idx": 11948, "node_name": "fullbuffers", "Dec": "true if the complete pixel buffer should always be sent"}{"idx": 11951, "node_name": "x", "Dec": "the x coordinate of the upper left corner of the rectangle of pixels to be sent"}{"idx": 11952, "node_name": "y", "Dec": "the y coordinate of the upper left corner of the rectangle of pixels to be sent"}{"idx": 11953, "node_name": "w", "Dec": "the width of the rectangle of pixels to be sent"}{"idx": 11954, "node_name": "h", "Dec": "the height of the rectangle of pixels to be sent"}{"idx": 11956, "node_name": "x", "Dec": "the x coordinate of the upper left corner of the rectangle of pixels to be sent"}{"idx": 11957, "node_name": "y", "Dec": "the y coordinate of the upper left corner of the rectangle of pixels to be sent"}{"idx": 11958, "node_name": "w", "Dec": "the width of the rectangle of pixels to be sent"}{"idx": 11959, "node_name": "h", "Dec": "the height of the rectangle of pixels to be sent"}{"idx": 11960, "node_name": "framenotify", "Dec": "true if the consumers should be sent a singleframedone notification"}{"idx": 11962, "node_name": "newpix", "Dec": "the new pixel array"}{"idx": 11963, "node_name": "newmodel", "Dec": "the specified colormodel"}{"idx": 11964, "node_name": "offset", "Dec": "the offset into the array"}{"idx": 11965, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 11967, "node_name": "newpix", "Dec": "the new pixel array"}{"idx": 11968, "node_name": "newmodel", "Dec": "the specified colormodel"}{"idx": 11969, "node_name": "offset", "Dec": "the offset into the array"}{"idx": 11970, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 11973, "node_name": "datatype", "Dec": "the data type for storing samples"}{"idx": 11974, "node_name": "w", "Dec": "the width , in pixels , of the region of image data described"}{"idx": 11975, "node_name": "h", "Dec": "the height , in pixels , of the region of image data described"}{"idx": 11976, "node_name": "numberofbits", "Dec": "the number of bits per pixel"}{"idx": 11978, "node_name": "datatype", "Dec": "the data type for storing samples"}{"idx": 11979, "node_name": "w", "Dec": "the width , in pixels , of the region of image data described"}{"idx": 11980, "node_name": "h", "Dec": "the height , in pixels , of the region of image data described"}{"idx": 11981, "node_name": "numberofbits", "Dec": "the number of bits per pixel"}{"idx": 11982, "node_name": "scanlinestride", "Dec": "the line stride of the image data"}{"idx": 11983, "node_name": "databitoffset", "Dec": "the data bit offset for the region of image data described"}{"idx": 11985, "node_name": "w", "Dec": "the specified width"}{"idx": 11986, "node_name": "h", "Dec": "the specified height"}{"idx": 11991, "node_name": "band", "Dec": "the specified band"}{"idx": 11993, "node_name": "x", "Dec": "the x coordinate of the specified pixel"}{"idx": 11994, "node_name": "y", "Dec": "the y coordinate of the specified pixel"}{"idx": 11996, "node_name": "x", "Dec": "the specified pixel"}{"idx": 12002, "node_name": "bands", "Dec": "the specified bands"}{"idx": 12004, "node_name": "x", "Dec": "the x coordinate of the specified pixel"}{"idx": 12005, "node_name": "y", "Dec": "the y coordinate of the specified pixel"}{"idx": 12006, "node_name": "b", "Dec": "the band to return , which is assumed to be 0"}{"idx": 12007, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 12009, "node_name": "x", "Dec": "the x coordinate of the specified pixel"}{"idx": 12010, "node_name": "y", "Dec": "the y coordinate of the specified pixel"}{"idx": 12011, "node_name": "b", "Dec": "the band to return , which is assumed to be 0"}{"idx": 12012, "node_name": "s", "Dec": "the input sample as an int"}{"idx": 12013, "node_name": "data", "Dec": "the databuffer where image data is stored"}{"idx": 12015, "node_name": "x", "Dec": "the x coordinate of the specified pixel"}{"idx": 12016, "node_name": "y", "Dec": "the y coordinate of the specified pixel"}{"idx": 12017, "node_name": "obj", "Dec": "a primitive array in which to return the pixel data or null ."}{"idx": 12018, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12020, "node_name": "x", "Dec": "the x coordinate of the specified pixel"}{"idx": 12021, "node_name": "y", "Dec": "the y coordinate of the specified pixel"}{"idx": 12022, "node_name": "iarray", "Dec": "the array containing the pixel to be returned or null"}{"idx": 12023, "node_name": "data", "Dec": "the databuffer where image data is stored"}{"idx": 12025, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12026, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12027, "node_name": "obj", "Dec": "a primitive array containing pixel data"}{"idx": 12028, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 12030, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12031, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12032, "node_name": "iarray", "Dec": "the input pixel in an int array"}{"idx": 12033, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 12036, "node_name": "destimagewidth", "Dec": "the width of the destination image , in pixels ."}{"idx": 12037, "node_name": "destimageheight", "Dec": "the height of the destination image , in pixels ."}{"idx": 12041, "node_name": "space", "Dec": "the specified colorspace"}{"idx": 12042, "node_name": "bits", "Dec": "the number of bits in the pixel values"}{"idx": 12043, "node_name": "colormaskarray", "Dec": "array that specifies the masks representing the bits of the pixel values that represent the color components"}{"idx": 12044, "node_name": "alphamask", "Dec": "specifies the mask representing the bits of the pixel values that represent the alpha component"}{"idx": 12045, "node_name": "isalphapremultiplied", "Dec": "true if color samples are premultiplied by the alpha sample ; false otherwise"}{"idx": 12046, "node_name": "trans", "Dec": "specifies the alpha value that can be represented by this color model"}{"idx": 12047, "node_name": "transfertype", "Dec": "the type of array used to represent pixel values"}{"idx": 12049, "node_name": "space", "Dec": "the specified colorspace"}{"idx": 12050, "node_name": "bits", "Dec": "the number of bits in the pixel values"}{"idx": 12051, "node_name": "rmask", "Dec": "specifies the mask representing the bits of the pixel values that represent the red color component"}{"idx": 12052, "node_name": "gmask", "Dec": "specifies the mask representing the bits of the pixel values that represent the green color component"}{"idx": 12053, "node_name": "bmask", "Dec": "specifies the mask representing the bits of the pixel values that represent the blue color component"}{"idx": 12054, "node_name": "amask", "Dec": "specifies the mask representing the bits of the pixel values that represent the alpha component"}{"idx": 12055, "node_name": "isalphapremultiplied", "Dec": "true if color samples are premultiplied by the alpha sample ; false otherwise"}{"idx": 12056, "node_name": "trans", "Dec": "specifies the alpha value that can be represented by this color model"}{"idx": 12057, "node_name": "transfertype", "Dec": "the type of array used to represent pixel values"}{"idx": 12059, "node_name": "index", "Dec": "the specified color or alpha sample"}{"idx": 12062, "node_name": "w", "Dec": "the width ( in pixels ) of the region of the image data described"}{"idx": 12063, "node_name": "h", "Dec": "the height ( in pixels ) of the region of the image data described"}{"idx": 12065, "node_name": "sm", "Dec": "the specified samplemodel , or null"}{"idx": 12067, "node_name": "raster", "Dec": "a writableraster containing an image"}{"idx": 12069, "node_name": "obj", "Dec": "the object to test for equality"}{"idx": 12073, "node_name": "img", "Dec": "the image to retrieve pixels from"}{"idx": 12074, "node_name": "x", "Dec": "the x coordinate of the upper left corner of the rectangle of pixels to retrieve from the image , relative to the default ( unscaled ) size of the image"}{"idx": 12075, "node_name": "y", "Dec": "the y coordinate of the upper left corner of the rectangle of pixels to retrieve from the image"}{"idx": 12076, "node_name": "w", "Dec": "the width of the rectangle of pixels to retrieve"}{"idx": 12077, "node_name": "h", "Dec": "the height of the rectangle of pixels to retrieve"}{"idx": 12078, "node_name": "pix", "Dec": "the array of integers which are to be used to hold the rgb pixels retrieved from the image"}{"idx": 12079, "node_name": "off", "Dec": "the offset into the array of where to store the first pixel"}{"idx": 12080, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 12082, "node_name": "ip", "Dec": "the imageproducer that produces the image from which to retrieve pixels"}{"idx": 12083, "node_name": "x", "Dec": "the x coordinate of the upper left corner of the rectangle of pixels to retrieve from the image , relative to the default ( unscaled ) size of the image"}{"idx": 12084, "node_name": "y", "Dec": "the y coordinate of the upper left corner of the rectangle of pixels to retrieve from the image"}{"idx": 12085, "node_name": "w", "Dec": "the width of the rectangle of pixels to retrieve"}{"idx": 12086, "node_name": "h", "Dec": "the height of the rectangle of pixels to retrieve"}{"idx": 12087, "node_name": "pix", "Dec": "the array of integers which are to be used to hold the rgb pixels retrieved from the image"}{"idx": 12088, "node_name": "off", "Dec": "the offset into the array of where to store the first pixel"}{"idx": 12089, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 12091, "node_name": "img", "Dec": "the image to retrieve the image data from"}{"idx": 12092, "node_name": "x", "Dec": "the x coordinate of the upper left corner of the rectangle of pixels to retrieve from the image , relative to the default ( unscaled ) size of the image"}{"idx": 12093, "node_name": "y", "Dec": "the y coordinate of the upper left corner of the rectangle of pixels to retrieve from the image"}{"idx": 12094, "node_name": "w", "Dec": "the width of the rectangle of pixels to retrieve"}{"idx": 12095, "node_name": "h", "Dec": "the height of the rectangle of pixels to retrieve"}{"idx": 12096, "node_name": "forcergb", "Dec": "true if the pixels should always be converted to the default rgb colormodel"}{"idx": 12101, "node_name": "ms", "Dec": "the number of milliseconds to wait for the image pixels to arrive before timing out"}{"idx": 12108, "node_name": "width", "Dec": "the width of the dimension"}{"idx": 12109, "node_name": "height", "Dec": "the height of the dimension"}{"idx": 12111, "node_name": "hints", "Dec": "a set of hints used to process the pixels"}{"idx": 12113, "node_name": "props", "Dec": "the list of properties"}{"idx": 12115, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 12117, "node_name": "srcx", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12118, "node_name": "srcy", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12119, "node_name": "srcw", "Dec": "the width of the area of pixels"}{"idx": 12120, "node_name": "srch", "Dec": "the height of the area of pixels"}{"idx": 12121, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 12122, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 12123, "node_name": "srcoff", "Dec": "the offset into the pixels array"}{"idx": 12124, "node_name": "srcscan", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 12126, "node_name": "srcx", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12127, "node_name": "srcy", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12128, "node_name": "srcw", "Dec": "the width of the area of pixels"}{"idx": 12129, "node_name": "srch", "Dec": "the height of the area of pixels"}{"idx": 12130, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 12131, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 12132, "node_name": "srcoff", "Dec": "the offset into the pixels array"}{"idx": 12133, "node_name": "srcscan", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 12135, "node_name": "status", "Dec": "the status of image loading"}{"idx": 12139, "node_name": "datatype", "Dec": "the data type for storing samples ."}{"idx": 12140, "node_name": "w", "Dec": "the width ( in pixels ) of the region of image data described ."}{"idx": 12141, "node_name": "h", "Dec": "the height ( in pixels ) of the region of image data described ."}{"idx": 12142, "node_name": "pixelstride", "Dec": "the pixel stride of the image data ."}{"idx": 12143, "node_name": "scanlinestride", "Dec": "the line stride of the image data ."}{"idx": 12144, "node_name": "bandoffsets", "Dec": "the offsets of all bands ."}{"idx": 12146, "node_name": "w", "Dec": "the width of the resulting samplemodel"}{"idx": 12147, "node_name": "h", "Dec": "the height of the resulting samplemodel"}{"idx": 12149, "node_name": "bands", "Dec": "a subset of bands from this componentsamplemodel"}{"idx": 12163, "node_name": "samplemodel", "Dec": "the samplemodel that specifies the layout"}{"idx": 12164, "node_name": "origin", "Dec": "the point that specified the origin"}{"idx": 12166, "node_name": "samplemodel", "Dec": "the samplemodel that specifies the layout"}{"idx": 12167, "node_name": "databuffer", "Dec": "the databuffer that contains the image data"}{"idx": 12168, "node_name": "origin", "Dec": "the point that specifies the origin"}{"idx": 12170, "node_name": "samplemodel", "Dec": "the samplemodel that specifies the layout"}{"idx": 12171, "node_name": "databuffer", "Dec": "the databuffer that contains the image data"}{"idx": 12172, "node_name": "aregion", "Dec": "the rectangle that specifies the image area"}{"idx": 12173, "node_name": "samplemodeltranslate", "Dec": "the point that specifies the translation from samplemodel to raster coordinates"}{"idx": 12174, "node_name": "parent", "Dec": "the parent ( if any ) of this raster"}{"idx": 12176, "node_name": "datatype", "Dec": "the data type for storing samples"}{"idx": 12177, "node_name": "w", "Dec": "the width in pixels of the image data"}{"idx": 12178, "node_name": "h", "Dec": "the height in pixels of the image data"}{"idx": 12179, "node_name": "bands", "Dec": "the number of bands"}{"idx": 12180, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12182, "node_name": "datatype", "Dec": "the data type for storing samples"}{"idx": 12183, "node_name": "w", "Dec": "the width in pixels of the image data"}{"idx": 12184, "node_name": "h", "Dec": "the height in pixels of the image data"}{"idx": 12185, "node_name": "scanlinestride", "Dec": "the line stride of the image data"}{"idx": 12186, "node_name": "pixelstride", "Dec": "the pixel stride of the image data"}{"idx": 12187, "node_name": "bandoffsets", "Dec": "the offsets of all bands"}{"idx": 12188, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12190, "node_name": "datatype", "Dec": "the data type for storing samples"}{"idx": 12191, "node_name": "w", "Dec": "the width in pixels of the image data"}{"idx": 12192, "node_name": "h", "Dec": "the height in pixels of the image data"}{"idx": 12193, "node_name": "bands", "Dec": "the number of bands"}{"idx": 12194, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12196, "node_name": "datatype", "Dec": "the data type for storing samples"}{"idx": 12197, "node_name": "w", "Dec": "the width in pixels of the image data"}{"idx": 12198, "node_name": "h", "Dec": "the height in pixels of the image data"}{"idx": 12199, "node_name": "scanlinestride", "Dec": "the line stride of the image data"}{"idx": 12200, "node_name": "bankindices", "Dec": "the bank indices for each band"}{"idx": 12201, "node_name": "bandoffsets", "Dec": "the offsets of all bands"}{"idx": 12202, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12204, "node_name": "datatype", "Dec": "the data type for storing samples"}{"idx": 12205, "node_name": "w", "Dec": "the width in pixels of the image data"}{"idx": 12206, "node_name": "h", "Dec": "the height in pixels of the image data"}{"idx": 12207, "node_name": "bandmasks", "Dec": "an array containing an entry for each band"}{"idx": 12208, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12210, "node_name": "datatype", "Dec": "the data type for storing samples"}{"idx": 12211, "node_name": "w", "Dec": "the width in pixels of the image data"}{"idx": 12212, "node_name": "h", "Dec": "the height in pixels of the image data"}{"idx": 12213, "node_name": "bands", "Dec": "the number of bands"}{"idx": 12214, "node_name": "bitsperband", "Dec": "the number of bits per band"}{"idx": 12215, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12217, "node_name": "databuffer", "Dec": "the databuffer that contains the image data"}{"idx": 12218, "node_name": "w", "Dec": "the width in pixels of the image data"}{"idx": 12219, "node_name": "h", "Dec": "the height in pixels of the image data"}{"idx": 12220, "node_name": "scanlinestride", "Dec": "the line stride of the image data"}{"idx": 12221, "node_name": "pixelstride", "Dec": "the pixel stride of the image data"}{"idx": 12222, "node_name": "bandoffsets", "Dec": "the offsets of all bands"}{"idx": 12223, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12225, "node_name": "databuffer", "Dec": "the databuffer that contains the image data"}{"idx": 12226, "node_name": "w", "Dec": "the width in pixels of the image data"}{"idx": 12227, "node_name": "h", "Dec": "the height in pixels of the image data"}{"idx": 12228, "node_name": "scanlinestride", "Dec": "the line stride of the image data"}{"idx": 12229, "node_name": "bankindices", "Dec": "the bank indices for each band"}{"idx": 12230, "node_name": "bandoffsets", "Dec": "the offsets of all bands"}{"idx": 12231, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12233, "node_name": "databuffer", "Dec": "the databuffer that contains the image data"}{"idx": 12234, "node_name": "w", "Dec": "the width in pixels of the image data"}{"idx": 12235, "node_name": "h", "Dec": "the height in pixels of the image data"}{"idx": 12236, "node_name": "scanlinestride", "Dec": "the line stride of the image data"}{"idx": 12237, "node_name": "bandmasks", "Dec": "an array containing an entry for each band"}{"idx": 12238, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12240, "node_name": "databuffer", "Dec": "the databuffer that contains the image data"}{"idx": 12241, "node_name": "w", "Dec": "the width in pixels of the image data"}{"idx": 12242, "node_name": "h", "Dec": "the height in pixels of the image data"}{"idx": 12243, "node_name": "bitsperpixel", "Dec": "the number of bits for each pixel"}{"idx": 12244, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12246, "node_name": "sm", "Dec": "the specified samplemodel"}{"idx": 12247, "node_name": "db", "Dec": "the specified databuffer"}{"idx": 12248, "node_name": "location", "Dec": "the upper-left corner of the raster"}{"idx": 12250, "node_name": "sm", "Dec": "the specified samplemodel"}{"idx": 12251, "node_name": "location", "Dec": "the upper-left corner of the writableraster"}{"idx": 12253, "node_name": "sm", "Dec": "the specified samplemodel"}{"idx": 12254, "node_name": "db", "Dec": "the specified databuffer"}{"idx": 12255, "node_name": "location", "Dec": "the upper-left corner of the writableraster"}{"idx": 12261, "node_name": "w", "Dec": "the specified width of the new writableraster"}{"idx": 12262, "node_name": "h", "Dec": "the specified height of the new writableraster"}{"idx": 12264, "node_name": "rect", "Dec": "a rectangle that specifies the size and location of the writableraster"}{"idx": 12266, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the writableraster"}{"idx": 12267, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the writableraster"}{"idx": 12268, "node_name": "w", "Dec": "the specified width of the writableraster"}{"idx": 12269, "node_name": "h", "Dec": "the specified height of the writableraster"}{"idx": 12271, "node_name": "childminx", "Dec": "the x coordinate of the upper-left corner of the new raster"}{"idx": 12272, "node_name": "childminy", "Dec": "the y coordinate of the upper-left corner of the new raster"}{"idx": 12274, "node_name": "parentx", "Dec": "the x coordinate of the upper-left corner in this raster's coordinates"}{"idx": 12275, "node_name": "parenty", "Dec": "the y coordinate of the upper-left corner in this raster's coordinates"}{"idx": 12276, "node_name": "width", "Dec": "width of the region starting at ( parentx , parenty )"}{"idx": 12277, "node_name": "height", "Dec": "height of the region starting at ( parentx , parenty ) ."}{"idx": 12278, "node_name": "childminx", "Dec": "the x coordinate of the upper-left corner of the returned raster"}{"idx": 12279, "node_name": "childminy", "Dec": "the y coordinate of the upper-left corner of the returned raster"}{"idx": 12280, "node_name": "bandlist", "Dec": "array of band indices , or null to use all bands"}{"idx": 12292, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12293, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12294, "node_name": "outdata", "Dec": "an object reference to an array of type defined by gettransfertype() and length getnumdataelements() . if null , an array of appropriate type and size will be allocated"}{"idx": 12296, "node_name": "x", "Dec": "the x coordinate of the upper-left pixel location"}{"idx": 12297, "node_name": "y", "Dec": "the y coordinate of the upper-left pixel location"}{"idx": 12298, "node_name": "w", "Dec": "width of the pixel rectangle"}{"idx": 12299, "node_name": "h", "Dec": "height of the pixel rectangle"}{"idx": 12300, "node_name": "outdata", "Dec": "an object reference to an array of type defined by gettransfertype() and length w*h* getnumdataelements() . if null , an array of appropriate type and size will be allocated ."}{"idx": 12302, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12303, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12304, "node_name": "iarray", "Dec": "an optionally preallocated int array"}{"idx": 12306, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12307, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12308, "node_name": "farray", "Dec": "an optionally preallocated float array"}{"idx": 12310, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12311, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12312, "node_name": "darray", "Dec": "an optionally preallocated double array"}{"idx": 12314, "node_name": "x", "Dec": "the x coordinate of the upper-left pixel location"}{"idx": 12315, "node_name": "y", "Dec": "the y coordinate of the upper-left pixel location"}{"idx": 12316, "node_name": "w", "Dec": "width of the pixel rectangle"}{"idx": 12317, "node_name": "h", "Dec": "height of the pixel rectangle"}{"idx": 12318, "node_name": "iarray", "Dec": "an optionally pre-allocated int array"}{"idx": 12320, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12321, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12322, "node_name": "w", "Dec": "width of the pixel rectangle"}{"idx": 12323, "node_name": "h", "Dec": "height of the pixel rectangle"}{"idx": 12324, "node_name": "farray", "Dec": "an optionally pre-allocated float array"}{"idx": 12326, "node_name": "x", "Dec": "the x coordinate of the upper-left pixel location"}{"idx": 12327, "node_name": "y", "Dec": "the y coordinate of the upper-left pixel location"}{"idx": 12328, "node_name": "w", "Dec": "width of the pixel rectangle"}{"idx": 12329, "node_name": "h", "Dec": "height of the pixel rectangle"}{"idx": 12330, "node_name": "darray", "Dec": "an optionally pre-allocated double array"}{"idx": 12332, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12333, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12334, "node_name": "b", "Dec": "the band to return"}{"idx": 12336, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12337, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12338, "node_name": "b", "Dec": "the band to return"}{"idx": 12340, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12341, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12342, "node_name": "b", "Dec": "the band to return"}{"idx": 12344, "node_name": "x", "Dec": "the x coordinate of the upper-left pixel location"}{"idx": 12345, "node_name": "y", "Dec": "the y coordinate of the upper-left pixel location"}{"idx": 12346, "node_name": "w", "Dec": "width of the pixel rectangle"}{"idx": 12347, "node_name": "h", "Dec": "height of the pixel rectangle"}{"idx": 12348, "node_name": "b", "Dec": "the band to return"}{"idx": 12349, "node_name": "iarray", "Dec": "an optionally pre-allocated int array"}{"idx": 12351, "node_name": "x", "Dec": "the x coordinate of the upper-left pixel location"}{"idx": 12352, "node_name": "y", "Dec": "the y coordinate of the upper-left pixel location"}{"idx": 12353, "node_name": "w", "Dec": "width of the pixel rectangle"}{"idx": 12354, "node_name": "h", "Dec": "height of the pixel rectangle"}{"idx": 12355, "node_name": "b", "Dec": "the band to return"}{"idx": 12356, "node_name": "farray", "Dec": "an optionally pre-allocated float array"}{"idx": 12358, "node_name": "x", "Dec": "the x coordinate of the upper-left pixel location"}{"idx": 12359, "node_name": "y", "Dec": "the y coordinate of the upper-left pixel location"}{"idx": 12360, "node_name": "w", "Dec": "width of the pixel rectangle"}{"idx": 12361, "node_name": "h", "Dec": "height of the pixel rectangle"}{"idx": 12362, "node_name": "b", "Dec": "the band to return"}{"idx": 12363, "node_name": "darray", "Dec": "an optionally pre-allocated double array"}{"idx": 12366, "node_name": "s", "Dec": "the message to generate when a rasterformatexception is thrown"}{"idx": 12369, "node_name": "src", "Dec": "the source raster"}{"idx": 12370, "node_name": "dest", "Dec": "the destination writableraster"}{"idx": 12372, "node_name": "src", "Dec": "the source raster"}{"idx": 12374, "node_name": "src", "Dec": "the source raster"}{"idx": 12376, "node_name": "srcpt", "Dec": "the source point2d"}{"idx": 12377, "node_name": "dstpt", "Dec": "the destination point2d"}{"idx": 12381, "node_name": "i", "Dec": "the index of the source image ."}{"idx": 12382, "node_name": "rendercontext", "Dec": "the rendercontext being applied to the operation ."}{"idx": 12383, "node_name": "paramblock", "Dec": "a parameterblock containing the operation's sources and parameters ."}{"idx": 12384, "node_name": "image", "Dec": "the renderableimage being rendered ."}{"idx": 12386, "node_name": "rendercontext", "Dec": "the rendercontext specifying the rendering"}{"idx": 12387, "node_name": "paramblock", "Dec": "a parameterblock containing the operation's sources and parameters"}{"idx": 12389, "node_name": "paramblock", "Dec": "a parameterblock containing the operation's sources and parameters ."}{"idx": 12391, "node_name": "paramblock", "Dec": "a parameterblock containing the operation's sources and parameters ."}{"idx": 12392, "node_name": "name", "Dec": "a string naming the desired property ."}{"idx": 12400, "node_name": "sources", "Dec": "a vector of source images"}{"idx": 12402, "node_name": "sources", "Dec": "a vector of source images"}{"idx": 12403, "node_name": "parameters", "Dec": "a vector of parameters to be used in the rendering operation"}{"idx": 12407, "node_name": "source", "Dec": "an image object to be stored in the source list ."}{"idx": 12409, "node_name": "index", "Dec": "the index of the source to be returned ."}{"idx": 12411, "node_name": "source", "Dec": "the specified source image"}{"idx": 12412, "node_name": "index", "Dec": "the index into the sources vector at which to insert the specified source"}{"idx": 12414, "node_name": "index", "Dec": "the index of the source to be returned"}{"idx": 12416, "node_name": "index", "Dec": "the index of the source to be returned"}{"idx": 12420, "node_name": "sources", "Dec": "the vector of source images"}{"idx": 12425, "node_name": "parameters", "Dec": "the specified vector of parameters"}{"idx": 12428, "node_name": "obj", "Dec": "the object to add to the parameters vector"}{"idx": 12430, "node_name": "b", "Dec": "the byte to add to the parameters vector"}{"idx": 12432, "node_name": "c", "Dec": "the char to add to the parameters vector"}{"idx": 12434, "node_name": "s", "Dec": "the short to add to the parameters vector"}{"idx": 12436, "node_name": "i", "Dec": "the int to add to the parameters vector"}{"idx": 12438, "node_name": "l", "Dec": "the long to add to the parameters vector"}{"idx": 12440, "node_name": "f", "Dec": "the float to add to the parameters vector"}{"idx": 12442, "node_name": "d", "Dec": "the double to add to the parameters vector"}{"idx": 12444, "node_name": "obj", "Dec": "the parameter that replaces the parameter at the specified index in the parameters vector"}{"idx": 12445, "node_name": "index", "Dec": "the index of the parameter to be replaced with the specified parameter"}{"idx": 12447, "node_name": "b", "Dec": "the parameter that replaces the parameter at the specified index in the parameters vector"}{"idx": 12448, "node_name": "index", "Dec": "the index of the parameter to be replaced with the specified parameter"}{"idx": 12450, "node_name": "c", "Dec": "the parameter that replaces the parameter at the specified index in the parameters vector"}{"idx": 12451, "node_name": "index", "Dec": "the index of the parameter to be replaced with the specified parameter"}{"idx": 12453, "node_name": "s", "Dec": "the parameter that replaces the parameter at the specified index in the parameters vector"}{"idx": 12454, "node_name": "index", "Dec": "the index of the parameter to be replaced with the specified parameter"}{"idx": 12456, "node_name": "i", "Dec": "the parameter that replaces the parameter at the specified index in the parameters vector"}{"idx": 12457, "node_name": "index", "Dec": "the index of the parameter to be replaced with the specified parameter"}{"idx": 12459, "node_name": "l", "Dec": "the parameter that replaces the parameter at the specified index in the parameters vector"}{"idx": 12460, "node_name": "index", "Dec": "the index of the parameter to be replaced with the specified parameter"}{"idx": 12462, "node_name": "f", "Dec": "the parameter that replaces the parameter at the specified index in the parameters vector"}{"idx": 12463, "node_name": "index", "Dec": "the index of the parameter to be replaced with the specified parameter"}{"idx": 12465, "node_name": "d", "Dec": "the parameter that replaces the parameter at the specified index in the parameters vector"}{"idx": 12466, "node_name": "index", "Dec": "the index of the parameter to be replaced with the specified parameter"}{"idx": 12468, "node_name": "index", "Dec": "the index of the parameter to get"}{"idx": 12470, "node_name": "index", "Dec": "the index of the parameter to be returned ."}{"idx": 12472, "node_name": "index", "Dec": "the index of the parameter to be returned ."}{"idx": 12474, "node_name": "index", "Dec": "the index of the parameter to be returned ."}{"idx": 12476, "node_name": "index", "Dec": "the index of the parameter to be returned ."}{"idx": 12478, "node_name": "index", "Dec": "the index of the parameter to be returned ."}{"idx": 12480, "node_name": "index", "Dec": "the index of the parameter to be returned ."}{"idx": 12482, "node_name": "index", "Dec": "the index of the parameter to be returned ."}{"idx": 12488, "node_name": "name", "Dec": "the name of the property to get , as a string ."}{"idx": 12496, "node_name": "w", "Dec": "the width of rendered image in pixels , or 0 ."}{"idx": 12497, "node_name": "h", "Dec": "the height of rendered image in pixels , or 0 ."}{"idx": 12498, "node_name": "hints", "Dec": "a renderinghints object containing hints ."}{"idx": 12501, "node_name": "rendercontext", "Dec": "the rendercontext to use to produce the rendering ."}{"idx": 12504, "node_name": "crif", "Dec": "a contextualrenderedimagefactory object"}{"idx": 12505, "node_name": "paramblock", "Dec": "a parameterblock containing this operation's source images and other parameters necessary for the operation to run ."}{"idx": 12508, "node_name": "name", "Dec": "the name of the property to get , as a string ."}{"idx": 12516, "node_name": "paramblock", "Dec": "the new parameterblock ."}{"idx": 12519, "node_name": "w", "Dec": "the width of rendered image in pixels , or 0 ."}{"idx": 12520, "node_name": "h", "Dec": "the height of rendered image in pixels , or 0 ."}{"idx": 12521, "node_name": "hints", "Dec": "a renderinghints object containing hints ."}{"idx": 12524, "node_name": "rendercontext", "Dec": "the rendercontext to use to perform the rendering ."}{"idx": 12527, "node_name": "rdblimage", "Dec": "the renderableimage to be rendered ."}{"idx": 12528, "node_name": "rc", "Dec": "the rendercontext to use for producing the pixels ."}{"idx": 12530, "node_name": "rc", "Dec": "the new rendercontext ."}{"idx": 12532, "node_name": "ic", "Dec": "an imageconsumer to be added to the interest list ."}{"idx": 12534, "node_name": "ic", "Dec": "the imageconsumer to be checked ."}{"idx": 12536, "node_name": "ic", "Dec": "the imageconsumer to be removed ."}{"idx": 12538, "node_name": "ic", "Dec": "the imageconsumer to be added to the list of consumers ."}{"idx": 12540, "node_name": "ic", "Dec": "the imageconsumer requesting the resend ."}{"idx": 12544, "node_name": "usr2dev", "Dec": "an affinetransform ."}{"idx": 12545, "node_name": "aoi", "Dec": "a shape representing the area of interest ."}{"idx": 12546, "node_name": "hints", "Dec": "a renderinghints object containing rendering hints ."}{"idx": 12548, "node_name": "usr2dev", "Dec": "an affinetransform ."}{"idx": 12550, "node_name": "usr2dev", "Dec": "an affinetransform ."}{"idx": 12551, "node_name": "hints", "Dec": "a renderinghints object containing rendering hints ."}{"idx": 12553, "node_name": "usr2dev", "Dec": "an affinetransform ."}{"idx": 12554, "node_name": "aoi", "Dec": "a shape representing the area of interest ."}{"idx": 12557, "node_name": "hints", "Dec": "a renderinghints object that represents the rendering hints to assign to this rendercontext ."}{"idx": 12559, "node_name": "newtransform", "Dec": "the new affinetransform ."}{"idx": 12561, "node_name": "modtransform", "Dec": "the affinetransform to prepend to the current usr2dev transform ."}{"idx": 12563, "node_name": "modtransform", "Dec": "the affinetransform to append to the current usr2dev transform ."}{"idx": 12566, "node_name": "newaoi", "Dec": "the new area of interest ."}{"idx": 12571, "node_name": "paramblock", "Dec": "a parameterblock containing sources and parameters for the renderedimage to be created ."}{"idx": 12572, "node_name": "hints", "Dec": "a renderinghints object containing hints ."}{"idx": 12576, "node_name": "name", "Dec": "the name of the property"}{"idx": 12593, "node_name": "tilex", "Dec": "the x index of the requested tile in the tile array"}{"idx": 12594, "node_name": "tiley", "Dec": "the y index of the requested tile in the tile array"}{"idx": 12597, "node_name": "rect", "Dec": "the region of the renderedimage to be returned ."}{"idx": 12599, "node_name": "raster", "Dec": "a writableraster to hold the returned portion of the image , or null ."}{"idx": 12609, "node_name": "width", "Dec": "the target width to scale the image"}{"idx": 12610, "node_name": "height", "Dec": "the target height to scale the image"}{"idx": 12612, "node_name": "props", "Dec": "the properties from the source object"}{"idx": 12614, "node_name": "w", "Dec": "the width of the source image"}{"idx": 12615, "node_name": "h", "Dec": "the height of the source image"}{"idx": 12617, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12618, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12619, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 12620, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 12621, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 12622, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 12623, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 12624, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 12626, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12627, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12628, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 12629, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 12630, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 12631, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 12632, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 12633, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 12636, "node_name": "scalefactors", "Dec": "the specified scale factors"}{"idx": 12637, "node_name": "offsets", "Dec": "the specified offsets"}{"idx": 12638, "node_name": "hints", "Dec": "the specified renderinghints , or null"}{"idx": 12640, "node_name": "scalefactor", "Dec": "the specified scale factor"}{"idx": 12641, "node_name": "offset", "Dec": "the specified offset"}{"idx": 12642, "node_name": "hints", "Dec": "the specified renderinghints , or null"}{"idx": 12644, "node_name": "scalefactors", "Dec": "the array to contain the scale factors of this rescaleop"}{"idx": 12646, "node_name": "offsets", "Dec": "the array to contain the offsets of this rescaleop"}{"idx": 12649, "node_name": "src", "Dec": "the bufferedimage to be filtered"}{"idx": 12650, "node_name": "dst", "Dec": "the destination for the filtering operation or null"}{"idx": 12652, "node_name": "src", "Dec": "the raster to be filtered"}{"idx": 12653, "node_name": "dst", "Dec": "the destination for the filtering operation or null"}{"idx": 12655, "node_name": "src", "Dec": "the bufferedimage to be filtered"}{"idx": 12657, "node_name": "src", "Dec": "the rescaled destination raster"}{"idx": 12659, "node_name": "src", "Dec": "source image for the filter operation ."}{"idx": 12660, "node_name": "destcm", "Dec": "colormodel of the destination . if null , the colormodel of the source will be used ."}{"idx": 12662, "node_name": "src", "Dec": "the source raster"}{"idx": 12664, "node_name": "srcpt", "Dec": "a point in the source image"}{"idx": 12665, "node_name": "dstpt", "Dec": "the destination point or null"}{"idx": 12673, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 12675, "node_name": "oldcm", "Dec": "the colormodel object to be replaced on the fly"}{"idx": 12676, "node_name": "newcm", "Dec": "the colormodel object to replace oldcm on the fly"}{"idx": 12678, "node_name": "icm", "Dec": "the indexcolormodel object to be filtered"}{"idx": 12680, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the region of pixels"}{"idx": 12681, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the region of pixels"}{"idx": 12682, "node_name": "w", "Dec": "the width of the region of pixels"}{"idx": 12683, "node_name": "h", "Dec": "the height of the region of pixels"}{"idx": 12684, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 12685, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 12686, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the array"}{"idx": 12688, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12689, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12690, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 12691, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 12692, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 12693, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 12694, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 12695, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 12697, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12698, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the area of pixels to be set"}{"idx": 12699, "node_name": "w", "Dec": "the width of the area of pixels"}{"idx": 12700, "node_name": "h", "Dec": "the height of the area of pixels"}{"idx": 12701, "node_name": "model", "Dec": "the specified colormodel"}{"idx": 12702, "node_name": "pixels", "Dec": "the array of pixels"}{"idx": 12703, "node_name": "off", "Dec": "the offset into the pixels array"}{"idx": 12704, "node_name": "scansize", "Dec": "the distance from one row of pixels to the next in the pixels array"}{"idx": 12706, "node_name": "x", "Dec": "the x coordinate of the pixel"}{"idx": 12707, "node_name": "y", "Dec": "the y coordinate of the pixel"}{"idx": 12708, "node_name": "rgb", "Dec": "the integer pixel representation in the default rgb color model"}{"idx": 12715, "node_name": "datatype", "Dec": "the data type of the databuffer storing the pixel data ."}{"idx": 12716, "node_name": "w", "Dec": "the width ( in pixels ) of the region of image data ."}{"idx": 12717, "node_name": "h", "Dec": "the height ( in pixels ) of the region of image data ."}{"idx": 12718, "node_name": "numbands", "Dec": "the number of bands of the image data ."}{"idx": 12726, "node_name": "x", "Dec": "the x coordinate of the pixel location"}{"idx": 12727, "node_name": "y", "Dec": "the y coordinate of the pixel location"}{"idx": 12728, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array"}{"idx": 12729, "node_name": "data", "Dec": "the databuffer containing the image data"}{"idx": 12731, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12732, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12733, "node_name": "obj", "Dec": "if non-null , a primitive array in which to return the pixel data ."}{"idx": 12734, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12736, "node_name": "x", "Dec": "the minimum x coordinate of the pixel rectangle ."}{"idx": 12737, "node_name": "y", "Dec": "the minimum y coordinate of the pixel rectangle ."}{"idx": 12738, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12739, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12740, "node_name": "obj", "Dec": "if non-null , a primitive array in which to return the pixel data ."}{"idx": 12741, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12743, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12744, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12745, "node_name": "obj", "Dec": "a primitive array containing pixel data ."}{"idx": 12746, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12748, "node_name": "x", "Dec": "the minimum x coordinate of the pixel rectangle ."}{"idx": 12749, "node_name": "y", "Dec": "the minimum y coordinate of the pixel rectangle ."}{"idx": 12750, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12751, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12752, "node_name": "obj", "Dec": "a primitive array containing pixel data ."}{"idx": 12753, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12755, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12756, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12757, "node_name": "farray", "Dec": "if non-null , returns the samples in this array ."}{"idx": 12758, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12760, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12761, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12762, "node_name": "darray", "Dec": "if non-null , returns the samples in this array ."}{"idx": 12763, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12765, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12766, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12767, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12768, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12769, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array ."}{"idx": 12770, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12772, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12773, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12774, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12775, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12776, "node_name": "farray", "Dec": "if non-null , returns the samples in this array ."}{"idx": 12777, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12779, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12780, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12781, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12782, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12783, "node_name": "darray", "Dec": "if non-null , returns the samples in this array ."}{"idx": 12784, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12786, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12787, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12788, "node_name": "b", "Dec": "the band to return ."}{"idx": 12789, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12791, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12792, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12793, "node_name": "b", "Dec": "the band to return ."}{"idx": 12794, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12796, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12797, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12798, "node_name": "b", "Dec": "the band to return ."}{"idx": 12799, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12801, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12802, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12803, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12804, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12805, "node_name": "b", "Dec": "the band to return ."}{"idx": 12806, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array ."}{"idx": 12807, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12809, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12810, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12811, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12812, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12813, "node_name": "b", "Dec": "the band to return ."}{"idx": 12814, "node_name": "farray", "Dec": "if non-null , returns the samples in this array ."}{"idx": 12815, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12817, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12818, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12819, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12820, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12821, "node_name": "b", "Dec": "the band to return ."}{"idx": 12822, "node_name": "darray", "Dec": "if non-null , returns the samples in this array ."}{"idx": 12823, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12825, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12826, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12827, "node_name": "iarray", "Dec": "the input samples in an int array ."}{"idx": 12828, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12830, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12831, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12832, "node_name": "farray", "Dec": "the input samples in a float array ."}{"idx": 12833, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12835, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12836, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12837, "node_name": "darray", "Dec": "the input samples in a double array ."}{"idx": 12838, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12840, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12841, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12842, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12843, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12844, "node_name": "iarray", "Dec": "the input samples in an int array ."}{"idx": 12845, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12847, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12848, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12849, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12850, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12851, "node_name": "farray", "Dec": "the input samples in a float array ."}{"idx": 12852, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12854, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12855, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12856, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12857, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12858, "node_name": "darray", "Dec": "the input samples in a double array ."}{"idx": 12859, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12861, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12862, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12863, "node_name": "b", "Dec": "the band to set ."}{"idx": 12864, "node_name": "s", "Dec": "the input sample as an int ."}{"idx": 12865, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12867, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12868, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12869, "node_name": "b", "Dec": "the band to set ."}{"idx": 12870, "node_name": "s", "Dec": "the input sample as a float ."}{"idx": 12871, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12873, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12874, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12875, "node_name": "b", "Dec": "the band to set ."}{"idx": 12876, "node_name": "s", "Dec": "the input sample as a double ."}{"idx": 12877, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12879, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12880, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12881, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12882, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12883, "node_name": "b", "Dec": "the band to set ."}{"idx": 12884, "node_name": "iarray", "Dec": "the input samples in an int array ."}{"idx": 12885, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12887, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12888, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12889, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12890, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12891, "node_name": "b", "Dec": "the band to set ."}{"idx": 12892, "node_name": "farray", "Dec": "the input samples in a float array ."}{"idx": 12893, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12895, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12896, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12897, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12898, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12899, "node_name": "b", "Dec": "the band to set ."}{"idx": 12900, "node_name": "darray", "Dec": "the input samples in a double array ."}{"idx": 12901, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12903, "node_name": "w", "Dec": "the width of the image data"}{"idx": 12904, "node_name": "h", "Dec": "the height of the image data"}{"idx": 12906, "node_name": "bands", "Dec": "the subset of bands of this samplemodel"}{"idx": 12910, "node_name": "band", "Dec": "the specified band"}{"idx": 12913, "node_name": "offset", "Dec": "the value subtracted from the input values before indexing into the arrays"}{"idx": 12914, "node_name": "data", "Dec": "an array of short arrays representing a lookup table for each band"}{"idx": 12916, "node_name": "offset", "Dec": "the value subtracted from the input values before indexing into the arrays"}{"idx": 12917, "node_name": "data", "Dec": "an array of shorts"}{"idx": 12920, "node_name": "src", "Dec": "the source array ."}{"idx": 12921, "node_name": "dst", "Dec": "the destination array . this array must be at least as long as src . if dst is null , a new array will be allocated having the same length as src ."}{"idx": 12923, "node_name": "src", "Dec": "the source array ."}{"idx": 12924, "node_name": "dst", "Dec": "the destination array . this array must be at least as long as src . if dst is null , a new array will be allocated having the same length as src ."}{"idx": 12927, "node_name": "datatype", "Dec": "the data type for storing samples ."}{"idx": 12928, "node_name": "w", "Dec": "the width ( in pixels ) of the region of the image data described ."}{"idx": 12929, "node_name": "h", "Dec": "the height ( in pixels ) of the region of the image data described ."}{"idx": 12930, "node_name": "bitmasks", "Dec": "the bit masks for all bands ."}{"idx": 12932, "node_name": "datatype", "Dec": "the data type for storing samples ."}{"idx": 12933, "node_name": "w", "Dec": "the width ( in pixels ) of the region of image data described ."}{"idx": 12934, "node_name": "h", "Dec": "the height ( in pixels ) of the region of image data described ."}{"idx": 12935, "node_name": "scanlinestride", "Dec": "the line stride of the image data ."}{"idx": 12936, "node_name": "bitmasks", "Dec": "the bit masks for all bands ."}{"idx": 12939, "node_name": "w", "Dec": "the width of the resulting samplemodel"}{"idx": 12940, "node_name": "h", "Dec": "the height of the resulting samplemodel"}{"idx": 12944, "node_name": "band", "Dec": "the specified band"}{"idx": 12946, "node_name": "x", "Dec": "the x coordinate of the specified pixel"}{"idx": 12947, "node_name": "y", "Dec": "the y coordinate of the specified pixel"}{"idx": 12952, "node_name": "bands", "Dec": "the subset of bands of this samplemodel"}{"idx": 12954, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12955, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12956, "node_name": "obj", "Dec": "if non-null , a primitive array in which to return the pixel data ."}{"idx": 12957, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12959, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12960, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12961, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array"}{"idx": 12962, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12964, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12965, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12966, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12967, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12968, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array ."}{"idx": 12969, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12971, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12972, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12973, "node_name": "b", "Dec": "the band to return ."}{"idx": 12974, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12976, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12977, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12978, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12979, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12980, "node_name": "b", "Dec": "the band to return ."}{"idx": 12981, "node_name": "iarray", "Dec": "if non-null , returns the samples in this array ."}{"idx": 12982, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12984, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12985, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12986, "node_name": "obj", "Dec": "a primitive array containing pixel data ."}{"idx": 12987, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12989, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 12990, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 12991, "node_name": "iarray", "Dec": "the input samples in an int array ."}{"idx": 12992, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 12994, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 12995, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 12996, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 12997, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 12998, "node_name": "iarray", "Dec": "the input samples in an int array ."}{"idx": 12999, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 13001, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 13002, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 13003, "node_name": "b", "Dec": "the band to set ."}{"idx": 13004, "node_name": "s", "Dec": "the input sample as an int ."}{"idx": 13005, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 13007, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 13008, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 13009, "node_name": "w", "Dec": "the width of the pixel rectangle ."}{"idx": 13010, "node_name": "h", "Dec": "the height of the pixel rectangle ."}{"idx": 13011, "node_name": "b", "Dec": "the band to set ."}{"idx": 13012, "node_name": "iarray", "Dec": "the input samples in an int array ."}{"idx": 13013, "node_name": "data", "Dec": "the databuffer containing the image data ."}{"idx": 13016, "node_name": "source", "Dec": "the image that owns the tile ."}{"idx": 13017, "node_name": "tilex", "Dec": "the x index of the tile that is being updated ."}{"idx": 13018, "node_name": "tiley", "Dec": "the y index of the tile that is being updated ."}{"idx": 13019, "node_name": "willbewritable", "Dec": "if true , the tile will be grabbed for writing ; otherwise it is being released ."}{"idx": 13033, "node_name": "gc", "Dec": "a graphicsconfiguration object for this image to be validated against . a null gc implies that the validate method should skip the compatibility test ."}{"idx": 13039, "node_name": "samplemodel", "Dec": "the samplemodel that specifies the layout ."}{"idx": 13040, "node_name": "origin", "Dec": "the point that specifies the origin ."}{"idx": 13042, "node_name": "samplemodel", "Dec": "the samplemodel that specifies the layout ."}{"idx": 13043, "node_name": "databuffer", "Dec": "the databuffer that contains the image data ."}{"idx": 13044, "node_name": "origin", "Dec": "the point that specifies the origin ."}{"idx": 13046, "node_name": "samplemodel", "Dec": "the samplemodel that specifies the layout ."}{"idx": 13047, "node_name": "databuffer", "Dec": "the databuffer that contains the image data ."}{"idx": 13048, "node_name": "aregion", "Dec": "the rectangle that specifies the image area ."}{"idx": 13049, "node_name": "samplemodeltranslate", "Dec": "the point that specifies the translation from samplemodel to raster coordinates ."}{"idx": 13050, "node_name": "parent", "Dec": "the parent ( if any ) of this raster ."}{"idx": 13053, "node_name": "childminx", "Dec": "x coord of the upper left corner of the new raster ."}{"idx": 13054, "node_name": "childminy", "Dec": "y coord of the upper left corner of the new raster ."}{"idx": 13056, "node_name": "parentx", "Dec": "x coordinate of the upper left corner in this writableraster's coordinates ."}{"idx": 13057, "node_name": "parenty", "Dec": "y coordinate of the upper left corner in this writableraster's coordinates ."}{"idx": 13058, "node_name": "w", "Dec": "width of the region starting at ( parentx , parenty ) ."}{"idx": 13059, "node_name": "h", "Dec": "height of the region starting at ( parentx , parenty ) ."}{"idx": 13060, "node_name": "childminx", "Dec": "x coordinate of the upper left corner of the returned writableraster ."}{"idx": 13061, "node_name": "childminy", "Dec": "y coordinate of the upper left corner of the returned writableraster ."}{"idx": 13062, "node_name": "bandlist", "Dec": "array of band indices , or null to use all bands ."}{"idx": 13064, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 13065, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 13066, "node_name": "indata", "Dec": "an object reference to an array of type defined by gettransfertype() and length getnumdataelements() containing the pixel data to place at x , y ."}{"idx": 13068, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 13069, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 13070, "node_name": "inraster", "Dec": "raster containing data to place at x , y ."}{"idx": 13072, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 13073, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 13074, "node_name": "w", "Dec": "width of the pixel rectangle ."}{"idx": 13075, "node_name": "h", "Dec": "height of the pixel rectangle ."}{"idx": 13076, "node_name": "indata", "Dec": "an object reference to an array of type defined by gettransfertype() and length w*h* getnumdataelements() containing the pixel data to place between x , y and x+ w-1 , y+ h-1 ."}{"idx": 13078, "node_name": "srcraster", "Dec": "the raster from which to copy pixels ."}{"idx": 13080, "node_name": "dx", "Dec": "the x translation factor from src space to dst space of the copy ."}{"idx": 13081, "node_name": "dy", "Dec": "the y translation factor from src space to dst space of the copy ."}{"idx": 13082, "node_name": "srcraster", "Dec": "the raster from which to copy pixels ."}{"idx": 13084, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 13085, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 13086, "node_name": "iarray", "Dec": "the input samples in a int array ."}{"idx": 13088, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 13089, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 13090, "node_name": "farray", "Dec": "the input samples in a float array ."}{"idx": 13092, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 13093, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 13094, "node_name": "darray", "Dec": "the input samples in a double array ."}{"idx": 13096, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 13097, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 13098, "node_name": "w", "Dec": "width of the pixel rectangle ."}{"idx": 13099, "node_name": "h", "Dec": "height of the pixel rectangle ."}{"idx": 13100, "node_name": "iarray", "Dec": "the input int pixel array ."}{"idx": 13102, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 13103, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 13104, "node_name": "w", "Dec": "width of the pixel rectangle ."}{"idx": 13105, "node_name": "h", "Dec": "height of the pixel rectangle ."}{"idx": 13106, "node_name": "farray", "Dec": "the input float pixel array ."}{"idx": 13108, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 13109, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 13110, "node_name": "w", "Dec": "width of the pixel rectangle ."}{"idx": 13111, "node_name": "h", "Dec": "height of the pixel rectangle ."}{"idx": 13112, "node_name": "darray", "Dec": "the input double pixel array ."}{"idx": 13114, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 13115, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 13116, "node_name": "b", "Dec": "the band to set ."}{"idx": 13117, "node_name": "s", "Dec": "the input sample ."}{"idx": 13119, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 13120, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 13121, "node_name": "b", "Dec": "the band to set ."}{"idx": 13122, "node_name": "s", "Dec": "the input sample as a float ."}{"idx": 13124, "node_name": "x", "Dec": "the x coordinate of the pixel location ."}{"idx": 13125, "node_name": "y", "Dec": "the y coordinate of the pixel location ."}{"idx": 13126, "node_name": "b", "Dec": "the band to set ."}{"idx": 13127, "node_name": "s", "Dec": "the input sample as a double ."}{"idx": 13129, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 13130, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 13131, "node_name": "w", "Dec": "width of the pixel rectangle ."}{"idx": 13132, "node_name": "h", "Dec": "height of the pixel rectangle ."}{"idx": 13133, "node_name": "b", "Dec": "the band to set ."}{"idx": 13134, "node_name": "iarray", "Dec": "the input int sample array ."}{"idx": 13136, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 13137, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 13138, "node_name": "w", "Dec": "width of the pixel rectangle ."}{"idx": 13139, "node_name": "h", "Dec": "height of the pixel rectangle ."}{"idx": 13140, "node_name": "b", "Dec": "the band to set ."}{"idx": 13141, "node_name": "farray", "Dec": "the input float sample array ."}{"idx": 13143, "node_name": "x", "Dec": "the x coordinate of the upper left pixel location ."}{"idx": 13144, "node_name": "y", "Dec": "the y coordinate of the upper left pixel location ."}{"idx": 13145, "node_name": "w", "Dec": "width of the pixel rectangle ."}{"idx": 13146, "node_name": "h", "Dec": "height of the pixel rectangle ."}{"idx": 13147, "node_name": "b", "Dec": "the band to set ."}{"idx": 13148, "node_name": "darray", "Dec": "the input double sample array ."}{"idx": 13151, "node_name": "to", "Dec": "the specified tileobserver"}{"idx": 13153, "node_name": "to", "Dec": "the specified tileobserver"}{"idx": 13155, "node_name": "tilex", "Dec": "the x index of the tile ."}{"idx": 13156, "node_name": "tiley", "Dec": "the y index of the tile ."}{"idx": 13158, "node_name": "tilex", "Dec": "the x index of the tile ."}{"idx": 13159, "node_name": "tiley", "Dec": "the y index of the tile ."}{"idx": 13161, "node_name": "tilex", "Dec": "the x index of the tile ."}{"idx": 13162, "node_name": "tiley", "Dec": "the y index of the tile ."}{"idx": 13166, "node_name": "r", "Dec": "the specified raster"}{"idx": 13169, "node_name": "accelerated", "Dec": "whether or not an accelerated image is desired"}{"idx": 13179, "node_name": "top", "Dec": "the inset from the top ."}{"idx": 13180, "node_name": "left", "Dec": "the inset from the left ."}{"idx": 13181, "node_name": "bottom", "Dec": "the inset from the bottom ."}{"idx": 13182, "node_name": "right", "Dec": "the inset from the right ."}{"idx": 13184, "node_name": "top", "Dec": "the inset from the top ."}{"idx": 13185, "node_name": "left", "Dec": "the inset from the left ."}{"idx": 13186, "node_name": "bottom", "Dec": "the inset from the bottom ."}{"idx": 13187, "node_name": "right", "Dec": "the inset from the right ."}{"idx": 13189, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 13196, "node_name": "l", "Dec": "the listener to receive events"}{"idx": 13198, "node_name": "l", "Dec": "the listener being removed"}{"idx": 13219, "node_name": "obj", "Dec": "the jobattributes to copy"}{"idx": 13221, "node_name": "copies", "Dec": "an integer greater than 0"}{"idx": 13222, "node_name": "defaultselection", "Dec": "defaultselectiontype.all , defaultselectiontype.range , or defaultselectiontype.selection"}{"idx": 13223, "node_name": "destination", "Dec": "destinationtype.file or destinationtype.printer"}{"idx": 13224, "node_name": "dialog", "Dec": "dialogtype.common , dialogtype.native , or dialogtype.none"}{"idx": 13225, "node_name": "filename", "Dec": "the possibly null file name"}{"idx": 13226, "node_name": "maxpage", "Dec": "an integer greater than zero and greater than or equal to minpage"}{"idx": 13227, "node_name": "minpage", "Dec": "an integer greater than zero and less than or equal to maxpage"}{"idx": 13228, "node_name": "multipledocumenthandling", "Dec": "multipledocumenthandlingtype.separate_documents_collated_copies or multipledocumenthandlingtype.separate_documents_uncollated_copies"}{"idx": 13229, "node_name": "pageranges", "Dec": "an array of integer arrays of two elements ; an array is interpreted as a range spanning all pages including and between the specified pages ; ranges must be in ascending order and must not overlap ; specified page numbers cannot be less than minpage nor greater than maxpage ; for example : ( new int [ ] [ ] { new int [ ] { 1 , 3 } , new int [ ] { 5 , 5 } , new int [ ] { 15 , 19 } } ) , specifies pages 1 , 2 , 3 , 5 , 15 , 16 , 17 , 18 , and 19 . note that ( new int [ ] [ ] { new int [ ] { 1 , 1 } , new int [ ] { 1 , 2 } } ) , is an invalid set of page ranges because the two ranges overlap"}{"idx": 13230, "node_name": "printer", "Dec": "the possibly null printer name"}{"idx": 13231, "node_name": "sides", "Dec": "sidestype.one_sided , sidestype.two_sided_long_edge , or sidestype.two_sided_short_edge"}{"idx": 13234, "node_name": "obj", "Dec": "the jobattributes to copy"}{"idx": 13237, "node_name": "copies", "Dec": "an integer greater than 0"}{"idx": 13241, "node_name": "defaultselection", "Dec": "defaultselectiontype.all , defaultselectiontype.range , or defaultselectiontype.selection ."}{"idx": 13244, "node_name": "destination", "Dec": "destinationtype.file or destinationtype.printer ."}{"idx": 13247, "node_name": "dialog", "Dec": "dialogtype.common , dialogtype.native , or dialogtype.none ."}{"idx": 13250, "node_name": "filename", "Dec": "the possibly null file name ."}{"idx": 13253, "node_name": "frompage", "Dec": "an integer greater than zero and less than or equal to topage and greater than or equal to minpage and less than or equal to maxpage ."}{"idx": 13256, "node_name": "maxpage", "Dec": "an integer greater than zero and greater than or equal to minpage"}{"idx": 13259, "node_name": "minpage", "Dec": "an integer greater than zero and less than or equal to maxpage ."}{"idx": 13262, "node_name": "multipledocumenthandling", "Dec": "multipledocumenthandlingtype.separate_documents_collated_copies or multipledocumenthandlingtype.separate_documents_uncollated_copies ."}{"idx": 13266, "node_name": "pageranges", "Dec": "an array of integer arrays of 2 elements . an array is interpreted as a range spanning all pages including and between the specified pages . ranges must be in ascending order and must not overlap . specified page numbers cannot be less than minpage nor greater than maxpage . for example : ( new int [ ] [ ] { new int [ ] { 1 , 3 } , new int [ ] { 5 , 5 } , new int [ ] { 15 , 19 } } ) , specifies pages 1 , 2 , 3 , 5 , 15 , 16 , 17 , 18 , and 19 . note that ( new int [ ] [ ] { new int [ ] { 1 , 1 } , new int [ ] { 1 , 2 } } ) , is an invalid set of page ranges because the two ranges overlap ."}{"idx": 13269, "node_name": "printer", "Dec": "the possibly null printer name ."}{"idx": 13272, "node_name": "sides", "Dec": "sidestype.one_sided , sidestype.two_sided_long_edge , or sidestype.two_sided_short_edge ."}{"idx": 13276, "node_name": "topage", "Dec": "an integer greater than zero and greater than or equal to frompage and greater than or equal to minpage and less than or equal to maxpage ."}{"idx": 13278, "node_name": "obj", "Dec": "the object whose equality will be checked ."}{"idx": 13300, "node_name": "newmanager", "Dec": "the new keyboardfocusmanager for this thread's context"}{"idx": 13304, "node_name": "focusowner", "Dec": "the focus owner"}{"idx": 13310, "node_name": "permanentfocusowner", "Dec": "the permanent focus owner"}{"idx": 13314, "node_name": "focusedwindow", "Dec": "the focused window"}{"idx": 13318, "node_name": "activewindow", "Dec": "the active window"}{"idx": 13321, "node_name": "defaultpolicy", "Dec": "the new , default focustraversalpolicy"}{"idx": 13323, "node_name": "id", "Dec": "one of keyboardfocusmanager.forward_traversal_keys , keyboardfocusmanager.backward_traversal_keys , keyboardfocusmanager.up_cycle_traversal_keys , or keyboardfocusmanager.down_cycle_traversal_keys"}{"idx": 13324, "node_name": "keystrokes", "Dec": "the set of awtkeystrokes for the specified operation"}{"idx": 13326, "node_name": "id", "Dec": "one of keyboardfocusmanager.forward_traversal_keys , keyboardfocusmanager.backward_traversal_keys , keyboardfocusmanager.up_cycle_traversal_keys , or keyboardfocusmanager.down_cycle_traversal_keys"}{"idx": 13330, "node_name": "newfocuscycleroot", "Dec": "the new focus cycle root"}{"idx": 13332, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 13334, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 13337, "node_name": "propertyname", "Dec": "one of the property names listed above"}{"idx": 13338, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 13340, "node_name": "propertyname", "Dec": "a valid property name"}{"idx": 13341, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 13343, "node_name": "propertyname", "Dec": "the property name"}{"idx": 13345, "node_name": "propertyname", "Dec": "the name of the property that has changed"}{"idx": 13346, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 13347, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 13349, "node_name": "listener", "Dec": "the vetoablechangelistener to be added"}{"idx": 13351, "node_name": "listener", "Dec": "the vetoablechangelistener to be removed"}{"idx": 13354, "node_name": "propertyname", "Dec": "one of the property names listed above"}{"idx": 13355, "node_name": "listener", "Dec": "the vetoablechangelistener to be added"}{"idx": 13357, "node_name": "propertyname", "Dec": "a valid property name"}{"idx": 13358, "node_name": "listener", "Dec": "the vetoablechangelistener to be removed"}{"idx": 13360, "node_name": "propertyname", "Dec": "the property name"}{"idx": 13362, "node_name": "propertyname", "Dec": "the name of the property that has changed"}{"idx": 13363, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 13364, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 13366, "node_name": "dispatcher", "Dec": "the keyeventdispatcher to add to the dispatcher chain"}{"idx": 13368, "node_name": "dispatcher", "Dec": "the keyeventdispatcher to remove from the dispatcher chain"}{"idx": 13371, "node_name": "processor", "Dec": "the keyeventpostprocessor to add to the post-processor chain"}{"idx": 13373, "node_name": "processor", "Dec": "the keyeventpostprocessor to remove from the post- processor chain"}{"idx": 13376, "node_name": "e", "Dec": "the awtevent to be dispatched"}{"idx": 13378, "node_name": "target", "Dec": "the component to which the event should be dispatched"}{"idx": 13379, "node_name": "e", "Dec": "the event to dispatch"}{"idx": 13381, "node_name": "e", "Dec": "the keyevent which the current keyboardfocusmanager has requested that this keyeventdispatcher dispatch"}{"idx": 13383, "node_name": "e", "Dec": "the keyevent to post-process"}{"idx": 13385, "node_name": "focusedcomponent", "Dec": "the component that will be the basis for a focus traversal operation if the specified event represents a focus traversal key for the component"}{"idx": 13386, "node_name": "e", "Dec": "the event that may represent a focus traversal key"}{"idx": 13388, "node_name": "after", "Dec": "timestamp of current event , or the current , system time if the current event has no timestamp , or the awt cannot determine which event is currently being handled"}{"idx": 13389, "node_name": "untilfocused", "Dec": "component which should receive a focus_gained event before any pending keyevents"}{"idx": 13391, "node_name": "after", "Dec": "the timestamp specified in the call to enqueuekeyevents , or any value < 0"}{"idx": 13392, "node_name": "untilfocused", "Dec": "the component specified in the call to enqueuekeyevents"}{"idx": 13394, "node_name": "comp", "Dec": "the component specified in one or more calls to enqueuekeyevents"}{"idx": 13396, "node_name": "acomponent", "Dec": "the component that is the basis for the focus traversal operation"}{"idx": 13398, "node_name": "acomponent", "Dec": "the component that is the basis for the focus traversal operation"}{"idx": 13400, "node_name": "acomponent", "Dec": "the component that is the basis for the focus traversal operation"}{"idx": 13402, "node_name": "acontainer", "Dec": "the container that is the basis for the focus traversal operation"}{"idx": 13409, "node_name": "e", "Dec": "the keyevent to dispatch"}{"idx": 13412, "node_name": "e", "Dec": "the keyevent to post-process"}{"idx": 13423, "node_name": "text", "Dec": "the string that the label presents . a null value will be accepted without causing a nullpointerexception to be thrown ."}{"idx": 13425, "node_name": "text", "Dec": "the string that the label presents . a null value will be accepted without causing a nullpointerexception to be thrown ."}{"idx": 13426, "node_name": "alignment", "Dec": "the alignment value ."}{"idx": 13430, "node_name": "alignment", "Dec": "the alignment to be set ."}{"idx": 13433, "node_name": "text", "Dec": "the text that this label displays . if text is null , it is treated for display purposes like an empty string \"\" ."}{"idx": 13438, "node_name": "name", "Dec": "the string to be associated with the component"}{"idx": 13439, "node_name": "comp", "Dec": "the component to be added"}{"idx": 13441, "node_name": "comp", "Dec": "the component to be removed"}{"idx": 13443, "node_name": "parent", "Dec": "the container to be laid out"}{"idx": 13445, "node_name": "parent", "Dec": "the component to be laid out"}{"idx": 13447, "node_name": "parent", "Dec": "the container to be laid out"}{"idx": 13450, "node_name": "comp", "Dec": "the component to be added"}{"idx": 13451, "node_name": "constraints", "Dec": "where / how the component is added to the layout ."}{"idx": 13453, "node_name": "target", "Dec": "the target container"}{"idx": 13455, "node_name": "target", "Dec": "the target container"}{"idx": 13457, "node_name": "target", "Dec": "the target container"}{"idx": 13459, "node_name": "target", "Dec": "the target container"}{"idx": 13462, "node_name": "startx", "Dec": "the x coordinate of the gradient axis start point in user space"}{"idx": 13463, "node_name": "starty", "Dec": "the y coordinate of the gradient axis start point in user space"}{"idx": 13464, "node_name": "endx", "Dec": "the x coordinate of the gradient axis end point in user space"}{"idx": 13465, "node_name": "endy", "Dec": "the y coordinate of the gradient axis end point in user space"}{"idx": 13466, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 13467, "node_name": "colors", "Dec": "array of colors corresponding to each fractional value"}{"idx": 13469, "node_name": "startx", "Dec": "the x coordinate of the gradient axis start point in user space"}{"idx": 13470, "node_name": "starty", "Dec": "the y coordinate of the gradient axis start point in user space"}{"idx": 13471, "node_name": "endx", "Dec": "the x coordinate of the gradient axis end point in user space"}{"idx": 13472, "node_name": "endy", "Dec": "the y coordinate of the gradient axis end point in user space"}{"idx": 13473, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 13474, "node_name": "colors", "Dec": "array of colors corresponding to each fractional value"}{"idx": 13475, "node_name": "cyclemethod", "Dec": "either no_cycle , reflect , or repeat"}{"idx": 13477, "node_name": "start", "Dec": "the gradient axis start point2d in user space"}{"idx": 13478, "node_name": "end", "Dec": "the gradient axis end point2d in user space"}{"idx": 13479, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 13480, "node_name": "colors", "Dec": "array of colors corresponding to each fractional value"}{"idx": 13482, "node_name": "start", "Dec": "the gradient axis start point2d in user space"}{"idx": 13483, "node_name": "end", "Dec": "the gradient axis end point2d in user space"}{"idx": 13484, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 13485, "node_name": "colors", "Dec": "array of colors corresponding to each fractional value"}{"idx": 13486, "node_name": "cyclemethod", "Dec": "either no_cycle , reflect , or repeat"}{"idx": 13488, "node_name": "start", "Dec": "the gradient axis start point2d in user space"}{"idx": 13489, "node_name": "end", "Dec": "the gradient axis end point2d in user space"}{"idx": 13490, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 13491, "node_name": "colors", "Dec": "array of colors corresponding to each fractional value"}{"idx": 13492, "node_name": "cyclemethod", "Dec": "either no_cycle , reflect , or repeat"}{"idx": 13493, "node_name": "colorspace", "Dec": "which color space to use for interpolation , either srgb or linear_rgb"}{"idx": 13494, "node_name": "gradienttransform", "Dec": "transform to apply to the gradient"}{"idx": 13496, "node_name": "cm", "Dec": "the preferred colormodel which represents the most convenient format for the caller to receive the pixel data , or null if there is no preference ."}{"idx": 13497, "node_name": "devicebounds", "Dec": "the device space bounding box of the graphics primitive being rendered ."}{"idx": 13498, "node_name": "userbounds", "Dec": "the user space bounding box of the graphics primitive being rendered ."}{"idx": 13499, "node_name": "transform", "Dec": "the affinetransform from user space into device space ."}{"idx": 13500, "node_name": "hints", "Dec": "the set of hints that the context object can use to choose between rendering alternatives ."}{"idx": 13505, "node_name": "parent", "Dec": "the parent list"}{"idx": 13506, "node_name": "indexinparent", "Dec": "the index in the parent"}{"idx": 13514, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 13517, "node_name": "c", "Dec": "the new color for the background"}{"idx": 13520, "node_name": "c", "Dec": "the new color for the foreground"}{"idx": 13523, "node_name": "cursor", "Dec": "the new cursor for the object"}{"idx": 13526, "node_name": "f", "Dec": "the new font for the object"}{"idx": 13528, "node_name": "f", "Dec": "the font"}{"idx": 13531, "node_name": "b", "Dec": "if true , enables this object ; otherwise , disables it"}{"idx": 13534, "node_name": "b", "Dec": "if true , shows this object ; otherwise , hides it"}{"idx": 13537, "node_name": "p", "Dec": "the point relative to the coordinate system of the object"}{"idx": 13541, "node_name": "p", "Dec": "the new position for the top-left corner"}{"idx": 13544, "node_name": "r", "Dec": "rectangle indicating this component's bounds"}{"idx": 13547, "node_name": "d", "Dec": "- the dimension specifying the new size of the object ."}{"idx": 13549, "node_name": "p", "Dec": "the point relative to the coordinate system of this object"}{"idx": 13553, "node_name": "l", "Dec": "the focus listener"}{"idx": 13555, "node_name": "l", "Dec": "the focus listener"}{"idx": 13561, "node_name": "p", "Dec": "the point defining the top-left corner of the accessible , given in the coordinate space of the object's parent"}{"idx": 13564, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 13568, "node_name": "i", "Dec": "the zero-based index of selected items"}{"idx": 13570, "node_name": "i", "Dec": "the zero-based index of the child in this accessible object ."}{"idx": 13572, "node_name": "i", "Dec": "the zero-based index of selectable items"}{"idx": 13574, "node_name": "i", "Dec": "the zero-based index of selectable items"}{"idx": 13580, "node_name": "rows", "Dec": "the number of items to show ."}{"idx": 13582, "node_name": "rows", "Dec": "the number of items to show ."}{"idx": 13583, "node_name": "multiplemode", "Dec": "if true , then multiple selections are allowed ; otherwise , only one item can be selected at a time ."}{"idx": 13588, "node_name": "index", "Dec": "the position of the item"}{"idx": 13591, "node_name": "item", "Dec": "the item to be added"}{"idx": 13593, "node_name": "item", "Dec": "the item to be added ; if this parameter is null then the item is treated as an empty string , \"\""}{"idx": 13594, "node_name": "index", "Dec": "the position at which to add the item"}{"idx": 13596, "node_name": "newvalue", "Dec": "a new string to replace an existing item"}{"idx": 13597, "node_name": "index", "Dec": "the position of the item to replace"}{"idx": 13600, "node_name": "item", "Dec": "the item to remove from the list"}{"idx": 13602, "node_name": "position", "Dec": "the index of the item to delete"}{"idx": 13609, "node_name": "index", "Dec": "the position of the item to select"}{"idx": 13611, "node_name": "index", "Dec": "the position of the item to deselect"}{"idx": 13613, "node_name": "index", "Dec": "the item to be checked"}{"idx": 13617, "node_name": "b", "Dec": "if true then multiple selections are allowed ; otherwise , only one item from the list can be selected at once"}{"idx": 13620, "node_name": "index", "Dec": "the position of the item"}{"idx": 13622, "node_name": "rows", "Dec": "number of rows in the list"}{"idx": 13625, "node_name": "rows", "Dec": "number of rows in the list"}{"idx": 13628, "node_name": "l", "Dec": "the item listener"}{"idx": 13630, "node_name": "l", "Dec": "the item listener"}{"idx": 13633, "node_name": "l", "Dec": "the action listener"}{"idx": 13635, "node_name": "l", "Dec": "the action listener"}{"idx": 13638, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 13640, "node_name": "e", "Dec": "the event"}{"idx": 13642, "node_name": "e", "Dec": "the item event"}{"idx": 13644, "node_name": "e", "Dec": "the action event"}{"idx": 13653, "node_name": "comp", "Dec": "the component on which the images will eventually be drawn"}{"idx": 13655, "node_name": "image", "Dec": "the image to be tracked"}{"idx": 13656, "node_name": "id", "Dec": "an identifier used to track this image"}{"idx": 13658, "node_name": "image", "Dec": "the image to be tracked"}{"idx": 13659, "node_name": "id", "Dec": "an identifier that can be used to track this image"}{"idx": 13660, "node_name": "w", "Dec": "the width at which the image is rendered"}{"idx": 13661, "node_name": "h", "Dec": "the height at which the image is rendered"}{"idx": 13664, "node_name": "load", "Dec": "if true , start loading any images that are not yet being loaded"}{"idx": 13669, "node_name": "ms", "Dec": "the number of milliseconds to wait for the loading to complete"}{"idx": 13671, "node_name": "load", "Dec": "if true , start loading any images that are not yet being loaded"}{"idx": 13673, "node_name": "id", "Dec": "the identifier of the images to check"}{"idx": 13675, "node_name": "id", "Dec": "the identifier of the images to check"}{"idx": 13676, "node_name": "load", "Dec": "if true , start loading any images that are not yet being loaded"}{"idx": 13678, "node_name": "id", "Dec": "the identifier of the images to check"}{"idx": 13680, "node_name": "id", "Dec": "the identifier of the images to check"}{"idx": 13682, "node_name": "id", "Dec": "the identifier of the images to check"}{"idx": 13684, "node_name": "id", "Dec": "the identifier of the images to check"}{"idx": 13685, "node_name": "ms", "Dec": "the length of time , in milliseconds , to wait for the loading to complete"}{"idx": 13687, "node_name": "id", "Dec": "the identifier of the images to check"}{"idx": 13688, "node_name": "load", "Dec": "if true , start loading any images that are not yet being loaded"}{"idx": 13690, "node_name": "image", "Dec": "the image to be removed"}{"idx": 13692, "node_name": "image", "Dec": "the image to be removed"}{"idx": 13693, "node_name": "id", "Dec": "the tracking id from which to remove the image"}{"idx": 13695, "node_name": "image", "Dec": "the image to be removed"}{"idx": 13696, "node_name": "id", "Dec": "the tracking id from which to remove the image"}{"idx": 13697, "node_name": "width", "Dec": "the width to remove ( -1 for unscaled )"}{"idx": 13698, "node_name": "height", "Dec": "the height to remove ( -1 for unscaled )"}{"idx": 13705, "node_name": "label", "Dec": "the menu's label in the menu bar , or in another menu of which this menu is a submenu ."}{"idx": 13707, "node_name": "label", "Dec": "the menu's label in the menu bar , or in another menu of which this menu is a submenu ."}{"idx": 13708, "node_name": "tearoff", "Dec": "if true , the menu is a tear-off menu ."}{"idx": 13714, "node_name": "index", "Dec": "the position of the item to be returned ."}{"idx": 13716, "node_name": "mi", "Dec": "the menu item to be added"}{"idx": 13718, "node_name": "label", "Dec": "the text on the item"}{"idx": 13720, "node_name": "menuitem", "Dec": "the menu item to be inserted ."}{"idx": 13721, "node_name": "index", "Dec": "the position at which the menu item should be inserted ."}{"idx": 13723, "node_name": "label", "Dec": "the text on the item"}{"idx": 13724, "node_name": "index", "Dec": "the position at which the menu item should be inserted"}{"idx": 13727, "node_name": "index", "Dec": "the position at which the menu separator should be inserted ."}{"idx": 13729, "node_name": "index", "Dec": "the position of the item to be removed ."}{"idx": 13731, "node_name": "item", "Dec": "the item to be removed from the menu . if item is null or is not in this menu , remove(java.awt.MenuComponent) does nothing ."}{"idx": 13744, "node_name": "m", "Dec": "the menu to be set as the help menu"}{"idx": 13746, "node_name": "m", "Dec": "the menu to be added"}{"idx": 13748, "node_name": "index", "Dec": "the position of the menu to be removed ."}{"idx": 13750, "node_name": "m", "Dec": "the menu component to be removed ."}{"idx": 13753, "node_name": "i", "Dec": "the index position of the menu to be returned ."}{"idx": 13756, "node_name": "s", "Dec": "the specified menu shortcut ."}{"idx": 13758, "node_name": "s", "Dec": "the menu shortcut to delete ."}{"idx": 13771, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 13776, "node_name": "c", "Dec": "the new color for the background"}{"idx": 13779, "node_name": "c", "Dec": "the new color for the foreground"}{"idx": 13782, "node_name": "cursor", "Dec": "the new cursor for the object"}{"idx": 13785, "node_name": "f", "Dec": "the new font for the object"}{"idx": 13787, "node_name": "f", "Dec": "the font"}{"idx": 13790, "node_name": "b", "Dec": "if true , enables this object ; otherwise , disables it"}{"idx": 13793, "node_name": "b", "Dec": "if true , shows this object ; otherwise , hides it"}{"idx": 13796, "node_name": "p", "Dec": "the point relative to the coordinate system of the object"}{"idx": 13800, "node_name": "p", "Dec": "the new position for the top-left corner"}{"idx": 13803, "node_name": "r", "Dec": "a rectangle indicating this component's bounds"}{"idx": 13806, "node_name": "d", "Dec": "the dimension specifying the new size of the object"}{"idx": 13808, "node_name": "p", "Dec": "the point defining the top-left corner of the accessible , given in the coordinate space of the object's parent"}{"idx": 13812, "node_name": "l", "Dec": "the focus listener"}{"idx": 13814, "node_name": "l", "Dec": "the focus listener"}{"idx": 13817, "node_name": "i", "Dec": "the zero-based index of selected children"}{"idx": 13819, "node_name": "i", "Dec": "the zero-based index of the child in this accessible object"}{"idx": 13821, "node_name": "i", "Dec": "the zero-based index of the child"}{"idx": 13823, "node_name": "i", "Dec": "the zero-based index of the child"}{"idx": 13830, "node_name": "name", "Dec": "the name of the menu component"}{"idx": 13834, "node_name": "f", "Dec": "the font to be set"}{"idx": 13837, "node_name": "e", "Dec": "the event"}{"idx": 13839, "node_name": "e", "Dec": "the event"}{"idx": 13847, "node_name": "comp", "Dec": "the menu component to remove"}{"idx": 13856, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 13858, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 13861, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 13867, "node_name": "label", "Dec": "the label for this menu item ."}{"idx": 13869, "node_name": "label", "Dec": "the label for this menu item ."}{"idx": 13870, "node_name": "s", "Dec": "the instance of menushortcut associated with this menu item ."}{"idx": 13874, "node_name": "label", "Dec": "the new label , or null for no label ."}{"idx": 13877, "node_name": "b", "Dec": "if true , enables this menu item ; if false , disables it ."}{"idx": 13880, "node_name": "s", "Dec": "the menu shortcut to associate with this menu item ."}{"idx": 13883, "node_name": "eventstoenable", "Dec": "the event mask defining the event types"}{"idx": 13885, "node_name": "eventstodisable", "Dec": "the event mask defining the event types"}{"idx": 13887, "node_name": "command", "Dec": "the action command to be set for this menu item ."}{"idx": 13890, "node_name": "l", "Dec": "the action listener ."}{"idx": 13892, "node_name": "l", "Dec": "the action listener ."}{"idx": 13895, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 13897, "node_name": "e", "Dec": "the event"}{"idx": 13899, "node_name": "e", "Dec": "the action event"}{"idx": 13904, "node_name": "key", "Dec": "the raw keycode for this menushortcut , as would be returned in the keycode field of a keyevent if this key were pressed ."}{"idx": 13906, "node_name": "key", "Dec": "the raw keycode for this menushortcut , as would be returned in the keycode field of a keyevent if this key were pressed ."}{"idx": 13907, "node_name": "useshiftmodifier", "Dec": "indicates whether this menushortcut is invoked with the shift key down ."}{"idx": 13911, "node_name": "s", "Dec": "the menushortcut to compare with this ."}{"idx": 13913, "node_name": "obj", "Dec": "the object to compare with this ."}{"idx": 13923, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 13927, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 13943, "node_name": "obj", "Dec": "the pageattributes to copy ."}{"idx": 13945, "node_name": "color", "Dec": "colortype.color or colortype.monochrome ."}{"idx": 13946, "node_name": "media", "Dec": "one of the constant fields of the mediatype class ."}{"idx": 13947, "node_name": "orientationrequested", "Dec": "orientationrequestedtype.portrait or orientationrequestedtype.landscape ."}{"idx": 13948, "node_name": "origin", "Dec": "origintype.physical or origintype.printable"}{"idx": 13949, "node_name": "printquality", "Dec": "printqualitytype.draft , printqualitytype.normal , or printqualitytype.high"}{"idx": 13950, "node_name": "printerresolution", "Dec": "an integer array of 3 elements . the first element must be greater than 0 . the second element must be must be greater than 0 . the third element must be either 3 or 4 ."}{"idx": 13953, "node_name": "obj", "Dec": "the pageattributes to copy ."}{"idx": 13956, "node_name": "color", "Dec": "colortype.color or colortype.monochrome ."}{"idx": 13959, "node_name": "media", "Dec": "one of the constant fields of the mediatype class ."}{"idx": 13963, "node_name": "orientationrequested", "Dec": "orientationrequestedtype.portrait or orientationrequestedtype.landscape ."}{"idx": 13965, "node_name": "orientationrequested", "Dec": "3 or 4"}{"idx": 13969, "node_name": "origin", "Dec": "origintype.physical or origintype.printable"}{"idx": 13972, "node_name": "printquality", "Dec": "printqualitytype.draft , printqualitytype.normal , or printqualitytype.high"}{"idx": 13974, "node_name": "printquality", "Dec": "3 , 4 , or 5"}{"idx": 13978, "node_name": "printerresolution", "Dec": "an integer array of 3 elements . the first element must be greater than 0 . the second element must be must be greater than 0 . the third element must be either 3 or 4 ."}{"idx": 13980, "node_name": "printerresolution", "Dec": "an integer greater than 0 ."}{"idx": 13983, "node_name": "obj", "Dec": "the object whose equality will be checked ."}{"idx": 14154, "node_name": "cm", "Dec": "the preferred colormodel which represents the most convenient format for the caller to receive the pixel data , or null if there is no preference ."}{"idx": 14155, "node_name": "devicebounds", "Dec": "the device space bounding box of the graphics primitive being rendered . implementations of the paint interface are allowed to throw nullpointerexception for a null devicebounds ."}{"idx": 14156, "node_name": "userbounds", "Dec": "the user space bounding box of the graphics primitive being rendered . implementations of the paint interface are allowed to throw nullpointerexception for a null userbounds ."}{"idx": 14157, "node_name": "xform", "Dec": "the affinetransform from user space into device space . implementations of the paint interface are allowed to throw nullpointerexception for a null xform ."}{"idx": 14158, "node_name": "hints", "Dec": "the set of hints that the context object can use to choose between rendering alternatives . implementations of the paint interface are allowed to throw nullpointerexception for a null hints ."}{"idx": 14163, "node_name": "x", "Dec": "the x coordinate of the area in device space for which colors are generated ."}{"idx": 14164, "node_name": "y", "Dec": "the y coordinate of the area in device space for which colors are generated ."}{"idx": 14165, "node_name": "w", "Dec": "the width of the area in device space"}{"idx": 14166, "node_name": "h", "Dec": "the height of the area in device space"}{"idx": 14173, "node_name": "layout", "Dec": "the layout manager for this panel ."}{"idx": 14181, "node_name": "p", "Dec": "a point"}{"idx": 14183, "node_name": "x", "Dec": "the x coordinate of the newly constructed point"}{"idx": 14184, "node_name": "y", "Dec": "the y coordinate of the newly constructed point"}{"idx": 14189, "node_name": "p", "Dec": "a point , the new location for this point"}{"idx": 14191, "node_name": "x", "Dec": "the x coordinate of the new location"}{"idx": 14192, "node_name": "y", "Dec": "the y coordinate of the new location"}{"idx": 14194, "node_name": "x", "Dec": "the x coordinate of the new location"}{"idx": 14195, "node_name": "y", "Dec": "the y coordinate of the new location"}{"idx": 14197, "node_name": "x", "Dec": "the x coordinate of the new location"}{"idx": 14198, "node_name": "y", "Dec": "the y coordinate of the new location"}{"idx": 14200, "node_name": "dx", "Dec": "the distance to move this point along the x axis"}{"idx": 14201, "node_name": "dy", "Dec": "the distance to move this point along the y axis"}{"idx": 14203, "node_name": "obj", "Dec": "an object to be compared with this point2d"}{"idx": 14215, "node_name": "xpoints", "Dec": "an array of x coordinates"}{"idx": 14216, "node_name": "ypoints", "Dec": "an array of y coordinates"}{"idx": 14217, "node_name": "npoints", "Dec": "the total number of points in the polygon"}{"idx": 14221, "node_name": "deltax", "Dec": "the amount to translate along the x axis"}{"idx": 14222, "node_name": "deltay", "Dec": "the amount to translate along the y axis"}{"idx": 14224, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 14225, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 14228, "node_name": "p", "Dec": "the specified point to be tested"}{"idx": 14230, "node_name": "x", "Dec": "the specified x coordinate to be tested"}{"idx": 14231, "node_name": "y", "Dec": "the specified y coordinate to be tested"}{"idx": 14234, "node_name": "x", "Dec": "the specified x coordinate to be tested"}{"idx": 14235, "node_name": "y", "Dec": "the specified y coordinate to be tested"}{"idx": 14237, "node_name": "p", "Dec": "the specified point2d to be tested"}{"idx": 14239, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 14240, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 14241, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 14242, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 14244, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 14246, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 14247, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 14248, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 14249, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 14251, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 14253, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 14255, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 14256, "node_name": "flatness", "Dec": "the maximum amount that the control points for a given curve can vary from collinear before a subdivided curve is replaced by a straight line connecting the endpoints . since polygons are already flat the flatness parameter is ignored ."}{"idx": 14263, "node_name": "label", "Dec": "a non-null string specifying the popup menu's label"}{"idx": 14266, "node_name": "origin", "Dec": "the component which defines the coordinate space"}{"idx": 14267, "node_name": "x", "Dec": "the x coordinate position to popup the menu"}{"idx": 14268, "node_name": "y", "Dec": "the y coordinate position to popup the menu"}{"idx": 14274, "node_name": "pageindex", "Dec": "the zero based index of the page whose pageformat is being requested"}{"idx": 14276, "node_name": "pageindex", "Dec": "the zero based index of the page whose printable is being requested"}{"idx": 14278, "node_name": "pageindex", "Dec": "the zero based index of the page whose painter and format is altered"}{"idx": 14279, "node_name": "painter", "Dec": "the printable instance that renders the page"}{"idx": 14280, "node_name": "page", "Dec": "the size and orientation of the page"}{"idx": 14282, "node_name": "painter", "Dec": "the printable instance that renders the page"}{"idx": 14283, "node_name": "page", "Dec": "the size and orientation of the page"}{"idx": 14285, "node_name": "painter", "Dec": "the printable instance that renders the page"}{"idx": 14286, "node_name": "page", "Dec": "the size and orientation of the page"}{"idx": 14287, "node_name": "numpages", "Dec": "the number of pages to be added to the this book ."}{"idx": 14292, "node_name": "pageindex", "Dec": "the zero based index of the page whose pageformat is being requested"}{"idx": 14294, "node_name": "pageindex", "Dec": "the zero based index of the page whose printable is being requested"}{"idx": 14309, "node_name": "paper", "Dec": "the paper object to which to set the paper object for this pageformat ."}{"idx": 14311, "node_name": "orientation", "Dec": "the new orientation for the page"}{"idx": 14319, "node_name": "width", "Dec": "the value to which to set this paper object's width"}{"idx": 14320, "node_name": "height", "Dec": "the value to which to set this paper object's height"}{"idx": 14323, "node_name": "x", "Dec": "the x coordinate to which to set the upper-left corner of the imageable area of this paper"}{"idx": 14324, "node_name": "y", "Dec": "the y coordinate to which to set the upper-left corner of the imageable area of this paper"}{"idx": 14325, "node_name": "width", "Dec": "the value to which to set the width of the imageable area of this paper"}{"idx": 14326, "node_name": "height", "Dec": "the value to which to set the height of the imageable area of this paper"}{"idx": 14335, "node_name": "graphics", "Dec": "the context into which the page is drawn"}{"idx": 14336, "node_name": "pageformat", "Dec": "the size and orientation of the page being drawn"}{"idx": 14337, "node_name": "pageindex", "Dec": "the zero based index of the page to be drawn"}{"idx": 14341, "node_name": "msg", "Dec": "the message to be generated when a printerabortexception is thrown"}{"idx": 14345, "node_name": "msg", "Dec": "the message to generate when a printerexception is thrown"}{"idx": 14350, "node_name": "exception", "Dec": "the specified ioexception"}{"idx": 14358, "node_name": "mimetype", "Dec": "the required output format , or null to mean any format ."}{"idx": 14361, "node_name": "service", "Dec": "a print service that supports 2d printing"}{"idx": 14363, "node_name": "painter", "Dec": "the printable that renders each page of the document ."}{"idx": 14365, "node_name": "painter", "Dec": "the printable called to render each page of the document"}{"idx": 14366, "node_name": "format", "Dec": "the size and orientation of each page to be printed"}{"idx": 14368, "node_name": "document", "Dec": "the pages to be printed . it can not be null ."}{"idx": 14371, "node_name": "attributes", "Dec": "on input is application supplied attributes , on output the contents are updated to reflect user choices . this parameter may not be null ."}{"idx": 14373, "node_name": "page", "Dec": "the default pageformat presented to the user for modification"}{"idx": 14375, "node_name": "attributes", "Dec": "on input is application supplied attributes , on output the contents are updated to reflect user choices . this parameter may not be null ."}{"idx": 14377, "node_name": "page", "Dec": "the pageformat to be cloned and altered"}{"idx": 14380, "node_name": "attributes", "Dec": "a set of printing attributes , for example obtained from calling printdialog . if attributes is null a default pageformat is returned ."}{"idx": 14382, "node_name": "page", "Dec": "the pageformat that is cloned and whose settings are changed to be compatible with the current printer"}{"idx": 14385, "node_name": "attributes", "Dec": "a set of attributes for the job"}{"idx": 14387, "node_name": "copies", "Dec": "the number of copies to be printed"}{"idx": 14391, "node_name": "jobname", "Dec": "the name of the document to be printed"}{"idx": 14406, "node_name": "cx", "Dec": "the x coordinate in user space of the center point of the circle defining the gradient . the last color of the gradient is mapped to the perimeter of this circle ."}{"idx": 14407, "node_name": "cy", "Dec": "the y coordinate in user space of the center point of the circle defining the gradient . the last color of the gradient is mapped to the perimeter of this circle ."}{"idx": 14408, "node_name": "radius", "Dec": "the radius of the circle defining the extents of the color gradient"}{"idx": 14409, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 14410, "node_name": "colors", "Dec": "array of colors to use in the gradient . the first color is used at the focus point , the last color around the perimeter of the circle ."}{"idx": 14412, "node_name": "center", "Dec": "the center point , in user space , of the circle defining the gradient"}{"idx": 14413, "node_name": "radius", "Dec": "the radius of the circle defining the extents of the color gradient"}{"idx": 14414, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 14415, "node_name": "colors", "Dec": "array of colors to use in the gradient . the first color is used at the focus point , the last color around the perimeter of the circle ."}{"idx": 14417, "node_name": "cx", "Dec": "the x coordinate in user space of the center point of the circle defining the gradient . the last color of the gradient is mapped to the perimeter of this circle ."}{"idx": 14418, "node_name": "cy", "Dec": "the y coordinate in user space of the center point of the circle defining the gradient . the last color of the gradient is mapped to the perimeter of this circle ."}{"idx": 14419, "node_name": "radius", "Dec": "the radius of the circle defining the extents of the color gradient"}{"idx": 14420, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 14421, "node_name": "colors", "Dec": "array of colors to use in the gradient . the first color is used at the focus point , the last color around the perimeter of the circle ."}{"idx": 14422, "node_name": "cyclemethod", "Dec": "either no_cycle , reflect , or repeat"}{"idx": 14424, "node_name": "center", "Dec": "the center point , in user space , of the circle defining the gradient"}{"idx": 14425, "node_name": "radius", "Dec": "the radius of the circle defining the extents of the color gradient"}{"idx": 14426, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 14427, "node_name": "colors", "Dec": "array of colors to use in the gradient . the first color is used at the focus point , the last color around the perimeter of the circle ."}{"idx": 14428, "node_name": "cyclemethod", "Dec": "either no_cycle , reflect , or repeat"}{"idx": 14430, "node_name": "cx", "Dec": "the x coordinate in user space of the center point of the circle defining the gradient . the last color of the gradient is mapped to the perimeter of this circle ."}{"idx": 14431, "node_name": "cy", "Dec": "the y coordinate in user space of the center point of the circle defining the gradient . the last color of the gradient is mapped to the perimeter of this circle ."}{"idx": 14432, "node_name": "radius", "Dec": "the radius of the circle defining the extents of the color gradient"}{"idx": 14433, "node_name": "fx", "Dec": "the x coordinate of the point in user space to which the first color is mapped"}{"idx": 14434, "node_name": "fy", "Dec": "the y coordinate of the point in user space to which the first color is mapped"}{"idx": 14435, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 14436, "node_name": "colors", "Dec": "array of colors to use in the gradient . the first color is used at the focus point , the last color around the perimeter of the circle ."}{"idx": 14437, "node_name": "cyclemethod", "Dec": "either no_cycle , reflect , or repeat"}{"idx": 14439, "node_name": "center", "Dec": "the center point , in user space , of the circle defining the gradient . the last color of the gradient is mapped to the perimeter of this circle ."}{"idx": 14440, "node_name": "radius", "Dec": "the radius of the circle defining the extents of the color gradient"}{"idx": 14441, "node_name": "focus", "Dec": "the point in user space to which the first color is mapped"}{"idx": 14442, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 14443, "node_name": "colors", "Dec": "array of colors to use in the gradient . the first color is used at the focus point , the last color around the perimeter of the circle ."}{"idx": 14444, "node_name": "cyclemethod", "Dec": "either no_cycle , reflect , or repeat"}{"idx": 14446, "node_name": "center", "Dec": "the center point in user space of the circle defining the gradient . the last color of the gradient is mapped to the perimeter of this circle ."}{"idx": 14447, "node_name": "radius", "Dec": "the radius of the circle defining the extents of the color gradient"}{"idx": 14448, "node_name": "focus", "Dec": "the point in user space to which the first color is mapped"}{"idx": 14449, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 14450, "node_name": "colors", "Dec": "array of colors to use in the gradient . the first color is used at the focus point , the last color around the perimeter of the circle ."}{"idx": 14451, "node_name": "cyclemethod", "Dec": "either no_cycle , reflect , or repeat"}{"idx": 14452, "node_name": "colorspace", "Dec": "which color space to use for interpolation , either srgb or linear_rgb"}{"idx": 14453, "node_name": "gradienttransform", "Dec": "transform to apply to the gradient"}{"idx": 14455, "node_name": "gradientbounds", "Dec": "the bounding box , in user space , of the circle defining the outermost extent of the gradient"}{"idx": 14456, "node_name": "fractions", "Dec": "numbers ranging from 0.0 to 1.0 specifying the distribution of colors along the gradient"}{"idx": 14457, "node_name": "colors", "Dec": "array of colors to use in the gradient . the first color is used at the focus point , the last color around the perimeter of the circle ."}{"idx": 14458, "node_name": "cyclemethod", "Dec": "either no_cycle , reflect , or repeat"}{"idx": 14460, "node_name": "cm", "Dec": "the preferred colormodel which represents the most convenient format for the caller to receive the pixel data , or null if there is no preference ."}{"idx": 14461, "node_name": "devicebounds", "Dec": "the device space bounding box of the graphics primitive being rendered ."}{"idx": 14462, "node_name": "userbounds", "Dec": "the user space bounding box of the graphics primitive being rendered ."}{"idx": 14463, "node_name": "transform", "Dec": "the affinetransform from user space into device space ."}{"idx": 14464, "node_name": "hints", "Dec": "the set of hints that the context object can use to choose between rendering alternatives ."}{"idx": 14475, "node_name": "r", "Dec": "the rectangle from which to copy initial values to a newly constructed rectangle"}{"idx": 14477, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 14478, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 14479, "node_name": "width", "Dec": "the width of the rectangle"}{"idx": 14480, "node_name": "height", "Dec": "the height of the rectangle"}{"idx": 14482, "node_name": "width", "Dec": "the width of the rectangle"}{"idx": 14483, "node_name": "height", "Dec": "the height of the rectangle"}{"idx": 14485, "node_name": "p", "Dec": "a point that is the upper-left corner of the rectangle"}{"idx": 14486, "node_name": "d", "Dec": "a dimension , representing the width and height of the rectangle"}{"idx": 14488, "node_name": "p", "Dec": "a point that is the top left corner of the rectangle"}{"idx": 14490, "node_name": "d", "Dec": "a dimension , specifying width and height"}{"idx": 14498, "node_name": "r", "Dec": "the specified rectangle"}{"idx": 14500, "node_name": "x", "Dec": "the new x coordinate for the upper-left corner of this rectangle"}{"idx": 14501, "node_name": "y", "Dec": "the new y coordinate for the upper-left corner of this rectangle"}{"idx": 14502, "node_name": "width", "Dec": "the new width for this rectangle"}{"idx": 14503, "node_name": "height", "Dec": "the new height for this rectangle"}{"idx": 14505, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangle"}{"idx": 14506, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangle"}{"idx": 14507, "node_name": "width", "Dec": "the width of the specified rectangle"}{"idx": 14508, "node_name": "height", "Dec": "the new height of the specified rectangle"}{"idx": 14511, "node_name": "p", "Dec": "the point specifying the new location for this rectangle"}{"idx": 14513, "node_name": "x", "Dec": "the x coordinate of the new location"}{"idx": 14514, "node_name": "y", "Dec": "the y coordinate of the new location"}{"idx": 14516, "node_name": "dx", "Dec": "the distance to move this rectangle along the x axis"}{"idx": 14517, "node_name": "dy", "Dec": "the distance to move this rectangle along the y axis"}{"idx": 14520, "node_name": "d", "Dec": "the new size for the dimension object"}{"idx": 14522, "node_name": "width", "Dec": "the new width for this rectangle"}{"idx": 14523, "node_name": "height", "Dec": "the new height for this rectangle"}{"idx": 14525, "node_name": "p", "Dec": "the point to test"}{"idx": 14527, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 14528, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 14530, "node_name": "r", "Dec": "the specified rectangle"}{"idx": 14532, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 14533, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 14534, "node_name": "w", "Dec": "the width of the rectangle"}{"idx": 14535, "node_name": "h", "Dec": "the height of the rectangle"}{"idx": 14537, "node_name": "r", "Dec": "the specified rectangle"}{"idx": 14539, "node_name": "r", "Dec": "the specified rectangle"}{"idx": 14541, "node_name": "r", "Dec": "the specified rectangle"}{"idx": 14543, "node_name": "newx", "Dec": "the x coordinate of the new point"}{"idx": 14544, "node_name": "newy", "Dec": "the y coordinate of the new point"}{"idx": 14546, "node_name": "pt", "Dec": "the new point to add to this rectangle"}{"idx": 14548, "node_name": "r", "Dec": "the specified rectangle"}{"idx": 14550, "node_name": "h", "Dec": "the horizontal expansion"}{"idx": 14551, "node_name": "v", "Dec": "the vertical expansion"}{"idx": 14554, "node_name": "x", "Dec": "the specified x coordinate"}{"idx": 14555, "node_name": "y", "Dec": "the specified y coordinate"}{"idx": 14557, "node_name": "r", "Dec": "the rectangle2d to be intersected with this rectangle2d"}{"idx": 14559, "node_name": "r", "Dec": "the rectangle2d to be combined with this rectangle2d"}{"idx": 14561, "node_name": "obj", "Dec": "the object to compare with this rectangle"}{"idx": 14612, "node_name": "init", "Dec": "a map of key / value pairs to initialize the hints or null if the object should be empty"}{"idx": 14614, "node_name": "key", "Dec": "the key of the particular hint property"}{"idx": 14615, "node_name": "value", "Dec": "the value of the hint property specified with key"}{"idx": 14619, "node_name": "key", "Dec": "key whose presence in this renderinghints is to be tested ."}{"idx": 14621, "node_name": "value", "Dec": "value whose presence in this renderinghints is to be tested ."}{"idx": 14623, "node_name": "key", "Dec": "a rendering hint key"}{"idx": 14625, "node_name": "key", "Dec": "the rendering hint key ."}{"idx": 14626, "node_name": "value", "Dec": "the rendering hint value ."}{"idx": 14628, "node_name": "hints", "Dec": "the set of key / value pairs to be added to this renderinghints object"}{"idx": 14631, "node_name": "key", "Dec": "the rendering hints key that needs to be removed"}{"idx": 14633, "node_name": "m", "Dec": "the specified map"}{"idx": 14638, "node_name": "o", "Dec": "object to be compared for equality with this renderinghints ."}{"idx": 14644, "node_name": "privatekey", "Dec": "the specified key"}{"idx": 14646, "node_name": "val", "Dec": "the object to test for validity"}{"idx": 14650, "node_name": "o", "Dec": "the reference object with which to compare ."}{"idx": 14654, "node_name": "screen", "Dec": "a screen graphicsdevice indicating the coordinate system the robot will operate in ."}{"idx": 14656, "node_name": "x", "Dec": "x position"}{"idx": 14657, "node_name": "y", "Dec": "y position"}{"idx": 14659, "node_name": "buttons", "Dec": "the button mask ; a combination of one or more mouse button masks . it is allowed to use only a combination of valid values as a buttons parameter . a valid combination consists of inputevent.button1_down_mask , inputevent.button2_down_mask , inputevent.button3_down_mask and values returned by the inputevent.getmaskforbutton ( button ) method . the valid combination also depends on a toolkit.areextramousebuttonsenabled() value as follows : if support for extended mouse buttons is disabled by java then it is allowed to use only the following standard button masks : inputevent.button1_down_mask , inputevent.button2_down_mask , inputevent.button3_down_mask . if support for extended mouse buttons is enabled by java then it is allowed to use the standard button masks and masks for existing extended mouse buttons , if the mouse has more then three buttons . in that way , it is allowed to use the button masks corresponding to the buttons in the range from 1 to mouseinfo.getnumberofbuttons() . it is recommended to use the inputevent.getmaskforbutton ( button ) method to obtain the mask for any mouse button by its number . the following standard button masks are also accepted : inputevent.button1_mask inputevent.button2_mask inputevent.button3_mask however , it is recommended to use inputevent.button1_down_mask , inputevent.button2_down_mask , inputevent.button3_down_mask instead . either extended _down_mask or old _mask values should be used , but both those models should not be mixed ."}{"idx": 14661, "node_name": "buttons", "Dec": "the button mask ; a combination of one or more mouse button masks . it is allowed to use only a combination of valid values as a buttons parameter . a valid combination consists of inputevent.button1_down_mask , inputevent.button2_down_mask , inputevent.button3_down_mask and values returned by the inputevent.getmaskforbutton ( button ) method . the valid combination also depends on a toolkit.areextramousebuttonsenabled() value as follows : if the support for extended mouse buttons is disabled by java then it is allowed to use only the following standard button masks : inputevent.button1_down_mask , inputevent.button2_down_mask , inputevent.button3_down_mask . if the support for extended mouse buttons is enabled by java then it is allowed to use the standard button masks and masks for existing extended mouse buttons , if the mouse has more then three buttons . in that way , it is allowed to use the button masks corresponding to the buttons in the range from 1 to mouseinfo.getnumberofbuttons() . it is recommended to use the inputevent.getmaskforbutton ( button ) method to obtain the mask for any mouse button by its number . the following standard button masks are also accepted : inputevent.button1_mask inputevent.button2_mask inputevent.button3_mask however , it is recommended to use inputevent.button1_down_mask , inputevent.button2_down_mask , inputevent.button3_down_mask instead . either extended _down_mask or old _mask values should be used , but both those models should not be mixed ."}{"idx": 14663, "node_name": "wheelamt", "Dec": "number of \" notches \" to move the mouse wheel negative values indicate movement up / away from the user , positive values indicate movement down / towards the user ."}{"idx": 14665, "node_name": "keycode", "Dec": "key to press ( e.g. keyevent.vk_a )"}{"idx": 14667, "node_name": "keycode", "Dec": "key to release ( e.g. keyevent.vk_a )"}{"idx": 14669, "node_name": "x", "Dec": "x position of pixel"}{"idx": 14670, "node_name": "y", "Dec": "y position of pixel"}{"idx": 14672, "node_name": "screenrect", "Dec": "rect to capture in screen coordinates"}{"idx": 14674, "node_name": "screenrect", "Dec": "rect to capture in screen coordinates"}{"idx": 14677, "node_name": "ison", "Dec": "whether waitforidle is automatically invoked"}{"idx": 14680, "node_name": "ms", "Dec": "the delay duration in milliseconds"}{"idx": 14682, "node_name": "ms", "Dec": "time to sleep in milliseconds"}{"idx": 14692, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 14700, "node_name": "orientation", "Dec": "indicates the orientation of the scroll bar"}{"idx": 14702, "node_name": "orientation", "Dec": "indicates the orientation of the scroll bar ."}{"idx": 14703, "node_name": "value", "Dec": "the initial value of the scroll bar"}{"idx": 14704, "node_name": "visible", "Dec": "the visible amount of the scroll bar , typically represented by the size of the bubble"}{"idx": 14705, "node_name": "minimum", "Dec": "the minimum value of the scroll bar"}{"idx": 14706, "node_name": "maximum", "Dec": "the maximum value of the scroll bar"}{"idx": 14710, "node_name": "orientation", "Dec": "the orientation of this scroll bar , either scrollbar.horizontal or scrollbar.vertical"}{"idx": 14713, "node_name": "newvalue", "Dec": "the new value of the scroll bar"}{"idx": 14716, "node_name": "newminimum", "Dec": "the new minimum value for this scroll bar"}{"idx": 14719, "node_name": "newmaximum", "Dec": "the new maximum value for this scroll bar"}{"idx": 14722, "node_name": "newamount", "Dec": "the new visible amount"}{"idx": 14724, "node_name": "v", "Dec": "the amount by which to increment or decrement the scroll bar's value"}{"idx": 14727, "node_name": "v", "Dec": "the amount by which to increment or decrement the scroll bar's value"}{"idx": 14730, "node_name": "value", "Dec": "is the position in the current window"}{"idx": 14731, "node_name": "visible", "Dec": "is the visible amount of the scroll bar"}{"idx": 14732, "node_name": "minimum", "Dec": "is the minimum value of the scroll bar"}{"idx": 14733, "node_name": "maximum", "Dec": "is the maximum value of the scroll bar"}{"idx": 14736, "node_name": "b", "Dec": "new adjustment-in-progress status"}{"idx": 14738, "node_name": "l", "Dec": "the adjustment listener"}{"idx": 14740, "node_name": "l", "Dec": "the adjustment listener"}{"idx": 14743, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 14745, "node_name": "e", "Dec": "the event"}{"idx": 14747, "node_name": "e", "Dec": "the adjustment event"}{"idx": 14759, "node_name": "scrollbardisplaypolicy", "Dec": "policy for when scrollbars should be shown"}{"idx": 14761, "node_name": "comp", "Dec": "the component to be added"}{"idx": 14762, "node_name": "constraints", "Dec": "not applicable"}{"idx": 14763, "node_name": "index", "Dec": "position of child component ( must be <= 0 )"}{"idx": 14771, "node_name": "x", "Dec": "the x position to scroll to"}{"idx": 14772, "node_name": "y", "Dec": "the y position to scroll to"}{"idx": 14774, "node_name": "p", "Dec": "the point representing the position to scroll to"}{"idx": 14777, "node_name": "mgr", "Dec": "the specified layout manager"}{"idx": 14780, "node_name": "g", "Dec": "the specified graphics window"}{"idx": 14784, "node_name": "e", "Dec": "the mouse wheel event"}{"idx": 14787, "node_name": "handlewheel", "Dec": "true if scrolling should be done automatically for a mousewheelevent , false otherwise ."}{"idx": 14793, "node_name": "min", "Dec": "the minimum value"}{"idx": 14795, "node_name": "max", "Dec": "the maximum value"}{"idx": 14797, "node_name": "v", "Dec": "the length of the indicator"}{"idx": 14799, "node_name": "b", "Dec": "new adjustment-in-progress status"}{"idx": 14802, "node_name": "v", "Dec": "the new value of the scrollbar"}{"idx": 14804, "node_name": "l", "Dec": "the adjustment listener ."}{"idx": 14806, "node_name": "l", "Dec": "the adjustment listener ."}{"idx": 14817, "node_name": "x", "Dec": "the specified x coordinate to be tested"}{"idx": 14818, "node_name": "y", "Dec": "the specified y coordinate to be tested"}{"idx": 14820, "node_name": "p", "Dec": "the specified point2d to be tested"}{"idx": 14822, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 14823, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 14824, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 14825, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 14827, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 14829, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the specified rectangular area"}{"idx": 14830, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the specified rectangular area"}{"idx": 14831, "node_name": "w", "Dec": "the width of the specified rectangular area"}{"idx": 14832, "node_name": "h", "Dec": "the height of the specified rectangular area"}{"idx": 14834, "node_name": "r", "Dec": "the specified rectangle2d"}{"idx": 14836, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 14838, "node_name": "at", "Dec": "an optional affinetransform to be applied to the coordinates as they are returned in the iteration , or null if untransformed coordinates are desired"}{"idx": 14839, "node_name": "flatness", "Dec": "the maximum distance that the line segments used to approximate the curved segments are allowed to deviate from any point on the original curve"}{"idx": 14843, "node_name": "imageurl", "Dec": "the non-null url for the new splash screen image"}{"idx": 14853, "node_name": "p", "Dec": "a shape to be stroked"}{"idx": 14913, "node_name": "trayicon", "Dec": "the trayicon to be added"}{"idx": 14915, "node_name": "trayicon", "Dec": "the trayicon to be removed"}{"idx": 14919, "node_name": "propertyname", "Dec": "the specified property"}{"idx": 14920, "node_name": "listener", "Dec": "the property change listener to be added"}{"idx": 14922, "node_name": "propertyname", "Dec": "the specified property"}{"idx": 14923, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 14925, "node_name": "propertyname", "Dec": "the specified property"}{"idx": 14929, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 14932, "node_name": "feature", "Dec": "the specified taskbar.feature"}{"idx": 14936, "node_name": "enabled", "Dec": "disables this request if false"}{"idx": 14937, "node_name": "critical", "Dec": "if this is an important request"}{"idx": 14939, "node_name": "w", "Dec": "window"}{"idx": 14941, "node_name": "menu", "Dec": "the popupmenu to attach to this application"}{"idx": 14944, "node_name": "image", "Dec": "to change"}{"idx": 14947, "node_name": "badge", "Dec": "label to affix to the icon"}{"idx": 14949, "node_name": "w", "Dec": "window to update"}{"idx": 14950, "node_name": "badge", "Dec": "image to affix to the icon"}{"idx": 14952, "node_name": "value", "Dec": "from 0 to 100 , other to disable progress indication"}{"idx": 14954, "node_name": "w", "Dec": "window to update"}{"idx": 14955, "node_name": "value", "Dec": "from 0 to 100 , other to switch to taskbar.state.off state and disable progress indication"}{"idx": 14957, "node_name": "w", "Dec": "window"}{"idx": 14958, "node_name": "state", "Dec": "to change to"}{"idx": 14962, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 14973, "node_name": "text", "Dec": "the text to be displayed ; if text is null , the empty string \"\" will be displayed"}{"idx": 14975, "node_name": "rows", "Dec": "the number of rows"}{"idx": 14976, "node_name": "columns", "Dec": "the number of columns"}{"idx": 14978, "node_name": "text", "Dec": "the text to be displayed ; if text is null , the empty string \"\" will be displayed"}{"idx": 14979, "node_name": "rows", "Dec": "the number of rows"}{"idx": 14980, "node_name": "columns", "Dec": "the number of columns"}{"idx": 14982, "node_name": "text", "Dec": "the text to be displayed ; if text is null , the empty string \"\" will be displayed"}{"idx": 14983, "node_name": "rows", "Dec": "the number of rows ; if rows is less than 0 , rows is set to 0"}{"idx": 14984, "node_name": "columns", "Dec": "the number of columns ; if columns is less than 0 , columns is set to 0"}{"idx": 14985, "node_name": "scrollbars", "Dec": "a constant that determines what scrollbars are created to view the text area"}{"idx": 14988, "node_name": "str", "Dec": "the non-null text to insert"}{"idx": 14989, "node_name": "pos", "Dec": "the position at which to insert"}{"idx": 14991, "node_name": "str", "Dec": "the non-null text to append"}{"idx": 14993, "node_name": "str", "Dec": "the non-null text to use as the replacement"}{"idx": 14994, "node_name": "start", "Dec": "the start position"}{"idx": 14995, "node_name": "end", "Dec": "the end position"}{"idx": 14998, "node_name": "rows", "Dec": "the number of rows"}{"idx": 15001, "node_name": "columns", "Dec": "the number of columns"}{"idx": 15004, "node_name": "rows", "Dec": "the number of rows"}{"idx": 15005, "node_name": "columns", "Dec": "the number of columns"}{"idx": 15008, "node_name": "rows", "Dec": "the number of rows"}{"idx": 15009, "node_name": "columns", "Dec": "the number of columns"}{"idx": 15016, "node_name": "textevent", "Dec": "the event to be processed"}{"idx": 15021, "node_name": "p", "Dec": "the point in local coordinates"}{"idx": 15023, "node_name": "i", "Dec": "the index into the string > = 0"}{"idx": 15027, "node_name": "i", "Dec": "the zero-based index into the text"}{"idx": 15032, "node_name": "part", "Dec": "the accessibletext.character , accessibletext.word , or accessibletext.sentence to retrieve"}{"idx": 15033, "node_name": "index", "Dec": "an index within the text > = 0"}{"idx": 15035, "node_name": "part", "Dec": "the accessibletext.character , accessibletext.word , or accessibletext.sentence to retrieve"}{"idx": 15036, "node_name": "index", "Dec": "an index within the text > = 0"}{"idx": 15038, "node_name": "part", "Dec": "the accessibletext.character , accessibletext.word , or accessibletext.sentence to retrieve"}{"idx": 15039, "node_name": "index", "Dec": "an index within the text > = 0"}{"idx": 15043, "node_name": "enable", "Dec": "true to enable , false to disable"}{"idx": 15047, "node_name": "t", "Dec": "the new text ; if this parameter is null then the text is set to the empty string \"\""}{"idx": 15052, "node_name": "b", "Dec": "a flag indicating whether this text component is user editable ."}{"idx": 15055, "node_name": "c", "Dec": "the color to become this text component's color . if this parameter is null then this text component will inherit the background color of its parent ."}{"idx": 15058, "node_name": "selectionstart", "Dec": "the start position of the selected text"}{"idx": 15061, "node_name": "selectionend", "Dec": "the end position of the selected text"}{"idx": 15063, "node_name": "selectionstart", "Dec": "the zero-based index of the first character ( char value ) to be selected"}{"idx": 15064, "node_name": "selectionend", "Dec": "the zero-based end position of the text to be selected ; the character ( char value ) at selectionend is not selected"}{"idx": 15067, "node_name": "position", "Dec": "the position of the text insertion caret"}{"idx": 15070, "node_name": "l", "Dec": "the text event listener"}{"idx": 15072, "node_name": "l", "Dec": "the text listener"}{"idx": 15075, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 15077, "node_name": "e", "Dec": "the event"}{"idx": 15079, "node_name": "e", "Dec": "the text event"}{"idx": 15088, "node_name": "text", "Dec": "the text to be displayed . if text is null , the empty string \"\" will be displayed . if text contains eol and / or lf characters , then each will be replaced by space character ."}{"idx": 15090, "node_name": "columns", "Dec": "the number of columns . if columns is less than 0 , columns is set to 0 ."}{"idx": 15092, "node_name": "text", "Dec": "the text to be displayed . if text is null , the empty string \"\" will be displayed . if text contains eol and / or lf characters , then each will be replaced by space character ."}{"idx": 15093, "node_name": "columns", "Dec": "the number of columns . if columns is less than 0 , columns is set to 0 ."}{"idx": 15097, "node_name": "c", "Dec": "the echo character for this text field ."}{"idx": 15099, "node_name": "t", "Dec": "the new text . if t is null , the empty string \"\" will be displayed . if t contains eol and / or lf characters , then each will be replaced by space character ."}{"idx": 15103, "node_name": "columns", "Dec": "the number of columns ."}{"idx": 15105, "node_name": "columns", "Dec": "the number of columns in this text field ."}{"idx": 15108, "node_name": "columns", "Dec": "the number of columns in this text field ."}{"idx": 15111, "node_name": "l", "Dec": "the action listener ."}{"idx": 15113, "node_name": "l", "Dec": "the action listener ."}{"idx": 15116, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 15118, "node_name": "e", "Dec": "the event"}{"idx": 15120, "node_name": "e", "Dec": "the action event"}{"idx": 15125, "node_name": "txtr", "Dec": "the bufferedimage object with the texture used for painting"}{"idx": 15126, "node_name": "anchor", "Dec": "the rectangle2d in user space used to anchor and replicate the texture"}{"idx": 15130, "node_name": "cm", "Dec": "the preferred colormodel which represents the most convenient format for the caller to receive the pixel data , or null if there is no preference ."}{"idx": 15131, "node_name": "devicebounds", "Dec": "the device space bounding box of the graphics primitive being rendered ."}{"idx": 15132, "node_name": "userbounds", "Dec": "the user space bounding box of the graphics primitive being rendered ."}{"idx": 15133, "node_name": "xform", "Dec": "the affinetransform from user space into device space ."}{"idx": 15134, "node_name": "hints", "Dec": "the set of hints that the context object can use to choose between rendering alternatives ."}{"idx": 15141, "node_name": "systemcolors", "Dec": "an integer array ."}{"idx": 15143, "node_name": "dynamic", "Dec": "if true , containers should re-layout their components as the container is being resized . if false , the layout will be validated after resizing is completed ."}{"idx": 15149, "node_name": "gc", "Dec": "a graphicsconfiguration"}{"idx": 15154, "node_name": "filename", "Dec": "the name of a file containing pixel data in a recognized file format ."}{"idx": 15156, "node_name": "url", "Dec": "the url to use in fetching the pixel data ."}{"idx": 15158, "node_name": "filename", "Dec": "the name of a file containing pixel data in a recognized file format ."}{"idx": 15160, "node_name": "url", "Dec": "the url to use in fetching the pixel data ."}{"idx": 15162, "node_name": "image", "Dec": "the image for which to prepare a screen representation ."}{"idx": 15163, "node_name": "width", "Dec": "the width of the desired screen representation , or -1 ."}{"idx": 15164, "node_name": "height", "Dec": "the height of the desired screen representation , or -1 ."}{"idx": 15165, "node_name": "observer", "Dec": "the imageobserver object to be notified as the image is being prepared ."}{"idx": 15167, "node_name": "image", "Dec": "the image whose status is being checked ."}{"idx": 15168, "node_name": "width", "Dec": "the width of the scaled version whose status is being checked , or -1 ."}{"idx": 15169, "node_name": "height", "Dec": "the height of the scaled version whose status is being checked , or -1 ."}{"idx": 15170, "node_name": "observer", "Dec": "the imageobserver object to be notified as the image is being prepared ."}{"idx": 15172, "node_name": "producer", "Dec": "the image producer to be used ."}{"idx": 15174, "node_name": "imagedata", "Dec": "an array of bytes , representing image data in a supported image format ."}{"idx": 15176, "node_name": "imagedata", "Dec": "an array of bytes , representing image data in a supported image format ."}{"idx": 15177, "node_name": "imageoffset", "Dec": "the offset of the beginning of the data in the array ."}{"idx": 15178, "node_name": "imagelength", "Dec": "the length of the data in the array ."}{"idx": 15180, "node_name": "frame", "Dec": "the parent of the print dialog . may not be null ."}{"idx": 15181, "node_name": "jobtitle", "Dec": "the title of the printjob . a null title is equivalent to \"\" ."}{"idx": 15182, "node_name": "props", "Dec": "a properties object containing zero or more properties . properties are not standardized and are not consistent across implementations . because of this , printjobs which require job and page control should use the version of this function which takes jobattributes and pageattributes objects . this object may be updated to reflect the user's job choices on exit . may be null ."}{"idx": 15184, "node_name": "frame", "Dec": "the parent of the print dialog . may not be null ."}{"idx": 15185, "node_name": "jobtitle", "Dec": "the title of the printjob . a null title is equivalent to \"\" ."}{"idx": 15186, "node_name": "jobattributes", "Dec": "a set of job attributes which will control the printjob . the attributes will be updated to reflect the user's choices as outlined in the jobattributes documentation . may be null ."}{"idx": 15187, "node_name": "pageattributes", "Dec": "a set of page attributes which will control the printjob . the attributes will be applied to every page in the job . the attributes will be updated to reflect the user's choices as outlined in the pageattributes documentation . may be null ."}{"idx": 15193, "node_name": "keycode", "Dec": "the key code"}{"idx": 15195, "node_name": "keycode", "Dec": "the key code"}{"idx": 15196, "node_name": "on", "Dec": "the state of the key"}{"idx": 15198, "node_name": "c", "Dec": "the component to fetch the container for"}{"idx": 15200, "node_name": "cursor", "Dec": "the image to display when the cursor is activated"}{"idx": 15201, "node_name": "hotspot", "Dec": "the x and y of the large cursor's hot spot ; the hotspot values must be less than the dimension returned by getbestcursorsize"}{"idx": 15202, "node_name": "name", "Dec": "a localized description of the cursor , for java accessibility use"}{"idx": 15204, "node_name": "preferredwidth", "Dec": "the preferred cursor width the component would like to use ."}{"idx": 15205, "node_name": "preferredheight", "Dec": "the preferred cursor height the component would like to use ."}{"idx": 15208, "node_name": "state", "Dec": "one of named frame state constants ."}{"idx": 15210, "node_name": "key", "Dec": "the key"}{"idx": 15211, "node_name": "defaultvalue", "Dec": "the default value"}{"idx": 15215, "node_name": "abstractrecognizerclass", "Dec": "the abstract class of the required recognizer"}{"idx": 15216, "node_name": "ds", "Dec": "the dragsource"}{"idx": 15217, "node_name": "c", "Dec": "the component target for the draggesturerecognizer"}{"idx": 15218, "node_name": "srcactions", "Dec": "the actions permitted for the gesture"}{"idx": 15219, "node_name": "dgl", "Dec": "the draggesturelistener"}{"idx": 15221, "node_name": "propertyname", "Dec": "the property name"}{"idx": 15223, "node_name": "name", "Dec": "the property name"}{"idx": 15224, "node_name": "newvalue", "Dec": "the new property value"}{"idx": 15226, "node_name": "name", "Dec": "the name"}{"idx": 15229, "node_name": "name", "Dec": "the name of the property to listen for"}{"idx": 15230, "node_name": "pcl", "Dec": "the property change listener"}{"idx": 15232, "node_name": "name", "Dec": "the name of the property to remove"}{"idx": 15233, "node_name": "pcl", "Dec": "the property change listener"}{"idx": 15236, "node_name": "propertyname", "Dec": "the named property"}{"idx": 15239, "node_name": "modalitytype", "Dec": "modality type to be checked for support by this toolkit"}{"idx": 15241, "node_name": "modalexclusiontype", "Dec": "modal exclusion type to be checked for support by this toolkit"}{"idx": 15243, "node_name": "listener", "Dec": "the event listener ."}{"idx": 15244, "node_name": "eventmask", "Dec": "the bitmask of event types to receive"}{"idx": 15246, "node_name": "listener", "Dec": "the event listener ."}{"idx": 15249, "node_name": "eventmask", "Dec": "the bitmask of event types to listen for"}{"idx": 15251, "node_name": "highlight", "Dec": "input method highlight"}{"idx": 15260, "node_name": "image", "Dec": "the image to be used"}{"idx": 15262, "node_name": "image", "Dec": "the image to be used"}{"idx": 15263, "node_name": "tooltip", "Dec": "the string to be used as tooltip text ; if the value is null no tooltip is shown"}{"idx": 15265, "node_name": "image", "Dec": "the image to be used"}{"idx": 15266, "node_name": "tooltip", "Dec": "the string to be used as tooltip text ; if the value is null no tooltip is shown"}{"idx": 15267, "node_name": "popup", "Dec": "the menu to be used for the tray icon's popup menu ; if the value is null no popup menu is shown"}{"idx": 15269, "node_name": "image", "Dec": "the non-null image to be used"}{"idx": 15272, "node_name": "popup", "Dec": "a popupmenu or null to remove any popup menu"}{"idx": 15275, "node_name": "tooltip", "Dec": "the string for the tooltip ; if the value is null no tooltip is shown"}{"idx": 15278, "node_name": "autosize", "Dec": "true to auto-size the image , false otherwise"}{"idx": 15281, "node_name": "listener", "Dec": "the mouse listener"}{"idx": 15283, "node_name": "listener", "Dec": "the mouse listener"}{"idx": 15286, "node_name": "listener", "Dec": "the mouse listener"}{"idx": 15288, "node_name": "listener", "Dec": "the mouse listener"}{"idx": 15292, "node_name": "command", "Dec": "a string used to set the tray icon's action command ."}{"idx": 15294, "node_name": "listener", "Dec": "the action listener"}{"idx": 15296, "node_name": "listener", "Dec": "the action listener"}{"idx": 15299, "node_name": "caption", "Dec": "the caption displayed above the text , usually in bold ; may be null"}{"idx": 15300, "node_name": "text", "Dec": "the text displayed for the particular message ; may be null"}{"idx": 15301, "node_name": "messagetype", "Dec": "an enum indicating the message type"}{"idx": 15306, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 15313, "node_name": "owner", "Dec": "the frame to act as owner or null if this window has no owner"}{"idx": 15315, "node_name": "owner", "Dec": "the window to act as owner or null if this window has no owner"}{"idx": 15317, "node_name": "owner", "Dec": "the window to act as owner or null if this window has no owner"}{"idx": 15318, "node_name": "gc", "Dec": "the graphicsconfiguration of the target screen device ; if gc is null , the system default graphicsconfiguration is assumed"}{"idx": 15321, "node_name": "icons", "Dec": "the list of icon images to be displayed ."}{"idx": 15323, "node_name": "image", "Dec": "the icon image to be displayed ."}{"idx": 15327, "node_name": "minimumsize", "Dec": "the new minimum size of this window"}{"idx": 15329, "node_name": "d", "Dec": "the dimension specifying the new size of this component"}{"idx": 15331, "node_name": "width", "Dec": "the new width of this component in pixels"}{"idx": 15332, "node_name": "height", "Dec": "the new height of this component in pixels"}{"idx": 15334, "node_name": "x", "Dec": "the x-coordinate of the new location's top-left corner in the parent's coordinate space"}{"idx": 15335, "node_name": "y", "Dec": "the y-coordinate of the new location's top-left corner in the parent's coordinate space"}{"idx": 15337, "node_name": "p", "Dec": "the point defining the top-left corner of the new location , given in the coordinate space of this component's parent"}{"idx": 15339, "node_name": "b", "Dec": "if true , makes the window visible , otherwise hides the window . if the window and / or its owner are not yet displayable , both are made displayable . the window will be validated prior to being made visible . if the window is already visible , this will bring the window to the front . if false , hides this window , its subcomponents , and all of its owned children . the window and its subcomponents can be made visible again with a call to #setvisible ( true ) ."}{"idx": 15348, "node_name": "cursor", "Dec": "one of the constants defined by the cursor class . if this parameter is null then the cursor for this window will be set to the type cursor.default_cursor ."}{"idx": 15354, "node_name": "exclusiontype", "Dec": "the modal exclusion type for this window ; a null value is equivalent to no_exclude"}{"idx": 15357, "node_name": "l", "Dec": "the window listener"}{"idx": 15359, "node_name": "l", "Dec": "the window state listener"}{"idx": 15361, "node_name": "l", "Dec": "the window focus listener"}{"idx": 15363, "node_name": "l", "Dec": "the window listener"}{"idx": 15365, "node_name": "l", "Dec": "the window state listener"}{"idx": 15367, "node_name": "l", "Dec": "the window focus listener"}{"idx": 15372, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 15374, "node_name": "e", "Dec": "the event"}{"idx": 15376, "node_name": "e", "Dec": "the window event"}{"idx": 15378, "node_name": "e", "Dec": "the window focus event"}{"idx": 15380, "node_name": "e", "Dec": "the window state event"}{"idx": 15382, "node_name": "alwaysontop", "Dec": "true if the window should always be above other windows"}{"idx": 15390, "node_name": "id", "Dec": "one of keyboardfocusmanager.forward_traversal_keys , keyboardfocusmanager.backward_traversal_keys , keyboardfocusmanager.up_cycle_traversal_keys , or keyboardfocusmanager.down_cycle_traversal_keys"}{"idx": 15392, "node_name": "focuscycleroot", "Dec": "this value is ignored"}{"idx": 15398, "node_name": "focusablewindowstate", "Dec": "whether this window can be the focused window"}{"idx": 15400, "node_name": "autorequestfocus", "Dec": "whether this window should be focused on subsequently being shown or being moved to the front"}{"idx": 15403, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 15405, "node_name": "propertyname", "Dec": "one of the property names listed above"}{"idx": 15406, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 15410, "node_name": "type", "Dec": "the window type"}{"idx": 15414, "node_name": "c", "Dec": "the component in relation to which the window's location is determined"}{"idx": 15416, "node_name": "numbuffers", "Dec": "number of buffers to create"}{"idx": 15418, "node_name": "numbuffers", "Dec": "number of buffers to create , including the front buffer"}{"idx": 15419, "node_name": "caps", "Dec": "the required capabilities for creating the buffer strategy ; cannot be null"}{"idx": 15422, "node_name": "locationbyplatform", "Dec": "true if this window should appear at the default location , false if at the current location"}{"idx": 15425, "node_name": "x", "Dec": "the new x-coordinate of this component"}{"idx": 15426, "node_name": "y", "Dec": "the new y-coordinate of this component"}{"idx": 15427, "node_name": "width", "Dec": "the new width of this component"}{"idx": 15428, "node_name": "height", "Dec": "the new height of this component"}{"idx": 15430, "node_name": "r", "Dec": "the new bounding rectangle for this component"}{"idx": 15433, "node_name": "opacity", "Dec": "the opacity level to set to the window"}{"idx": 15436, "node_name": "shape", "Dec": "the shape to set to the window"}{"idx": 15439, "node_name": "bgcolor", "Dec": "the color to become this window's background color ."}{"idx": 15442, "node_name": "g", "Dec": "the specified graphics window"}{"idx": 15446, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 15451, "node_name": "beanname", "Dec": "the name of the javabean to instantiate as a child of this beancontext"}{"idx": 15453, "node_name": "name", "Dec": "the resource name"}{"idx": 15454, "node_name": "bcc", "Dec": "the specified child"}{"idx": 15456, "node_name": "name", "Dec": "the resource name"}{"idx": 15457, "node_name": "bcc", "Dec": "the specified child"}{"idx": 15459, "node_name": "bcml", "Dec": "the beancontextmembershiplistener to be added"}{"idx": 15461, "node_name": "bcml", "Dec": "the beancontextmembershiplistener to be removed"}{"idx": 15464, "node_name": "bc", "Dec": "the beancontext with which to associate this beancontextchild ."}{"idx": 15467, "node_name": "name", "Dec": "the name of the property to listen on"}{"idx": 15468, "node_name": "pcl", "Dec": "the propertychangelistener to add"}{"idx": 15470, "node_name": "name", "Dec": "the name of the property that was listened on"}{"idx": 15471, "node_name": "pcl", "Dec": "the propertychangelistener to remove"}{"idx": 15473, "node_name": "name", "Dec": "the name of the property to listen on"}{"idx": 15474, "node_name": "vcl", "Dec": "the vetoablechangelistener to add"}{"idx": 15476, "node_name": "name", "Dec": "the name of the property that was listened on ."}{"idx": 15477, "node_name": "vcl", "Dec": "the vetoablechangelistener to remove ."}{"idx": 15488, "node_name": "bcc", "Dec": "the underlying bean context child"}{"idx": 15490, "node_name": "bc", "Dec": "the new value to be assigned to the beancontext property"}{"idx": 15493, "node_name": "name", "Dec": "the name of the property to listen on"}{"idx": 15494, "node_name": "pcl", "Dec": "the propertychangelistener to be added"}{"idx": 15496, "node_name": "name", "Dec": "the name of the property that was listened on"}{"idx": 15497, "node_name": "pcl", "Dec": "the propertychangelistener to be removed"}{"idx": 15499, "node_name": "name", "Dec": "the name of the property to listen on"}{"idx": 15500, "node_name": "vcl", "Dec": "the vetoablechangelistener to be added"}{"idx": 15502, "node_name": "name", "Dec": "the name of the property that was listened on"}{"idx": 15503, "node_name": "vcl", "Dec": "the vetoablechangelistener to be removed"}{"idx": 15505, "node_name": "bcsre", "Dec": "the beancontextservicerevokedevent fired as a result of a service being revoked"}{"idx": 15507, "node_name": "bcsae", "Dec": "the beancontextserviceavailableevent fired as a result of a service becoming available"}{"idx": 15511, "node_name": "name", "Dec": "the programmatic name of the property that was changed"}{"idx": 15512, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 15513, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 15515, "node_name": "name", "Dec": "the programmatic name of the property that is about to change"}{"idx": 15516, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 15517, "node_name": "newvalue", "Dec": "- the new value of the property"}{"idx": 15519, "node_name": "newvalue", "Dec": "the new value that has been requested for the beancontext property"}{"idx": 15527, "node_name": "bc", "Dec": "the beancontext source"}{"idx": 15530, "node_name": "bc", "Dec": "the beancontext from which this event was propagated"}{"idx": 15536, "node_name": "bc", "Dec": "the beancontext source"}{"idx": 15537, "node_name": "changes", "Dec": "the children affected"}{"idx": 15539, "node_name": "bc", "Dec": "the beancontext source"}{"idx": 15540, "node_name": "changes", "Dec": "the children effected"}{"idx": 15543, "node_name": "child", "Dec": "the object to check for being affected"}{"idx": 15548, "node_name": "bcme", "Dec": "the beancontextmembershipevent describing the change that occurred ."}{"idx": 15550, "node_name": "bcme", "Dec": "the beancontextmembershipevent describing the change that occurred ."}{"idx": 15556, "node_name": "bcs", "Dec": "the context in which the service has become available"}{"idx": 15557, "node_name": "sc", "Dec": "a class reference to the newly available service"}{"idx": 15563, "node_name": "bcs", "Dec": "the beancontextservices associated with this particular request . this parameter enables the beancontextserviceprovider to distinguish service requests from multiple sources ."}{"idx": 15564, "node_name": "requestor", "Dec": "the object requesting the service"}{"idx": 15565, "node_name": "serviceclass", "Dec": "the service requested"}{"idx": 15566, "node_name": "serviceselector", "Dec": "the service dependent parameter for a particular service , or null if not applicable ."}{"idx": 15568, "node_name": "bcs", "Dec": "the beancontextservices associated with this particular release request"}{"idx": 15569, "node_name": "requestor", "Dec": "the object requesting the service to be released"}{"idx": 15570, "node_name": "service", "Dec": "the service that is to be released"}{"idx": 15572, "node_name": "bcs", "Dec": "the beancontextservices for this request"}{"idx": 15573, "node_name": "serviceclass", "Dec": "the specified service"}{"idx": 15579, "node_name": "bcs", "Dec": "the beancontextservices from which this service is being revoked"}{"idx": 15580, "node_name": "sc", "Dec": "the service that is being revoked"}{"idx": 15581, "node_name": "invalidate", "Dec": "true for immediate revocation"}{"idx": 15585, "node_name": "service", "Dec": "the service of interest ( should be non-null )"}{"idx": 15589, "node_name": "bcsre", "Dec": "the beancontextservicerevokedevent received by this listener ."}{"idx": 15592, "node_name": "serviceclass", "Dec": "the service to add"}{"idx": 15593, "node_name": "serviceprovider", "Dec": "the beancontextserviceprovider associated with the service"}{"idx": 15595, "node_name": "serviceclass", "Dec": "the service to revoke from this beancontextservices"}{"idx": 15596, "node_name": "serviceprovider", "Dec": "the beancontextserviceprovider associated with this particular service that is being revoked"}{"idx": 15597, "node_name": "revokecurrentservicesnow", "Dec": "a value of true indicates an exceptional circumstance where the beancontextserviceprovider or beancontextservices wishes to immediately terminate service to all currently outstanding references to the specified service ."}{"idx": 15599, "node_name": "serviceclass", "Dec": "the service in question"}{"idx": 15601, "node_name": "child", "Dec": "the beancontextchild associated with this request"}{"idx": 15602, "node_name": "requestor", "Dec": "the object requesting the service"}{"idx": 15603, "node_name": "serviceclass", "Dec": "class of the requested service"}{"idx": 15604, "node_name": "serviceselector", "Dec": "the service dependent parameter"}{"idx": 15605, "node_name": "bcsrl", "Dec": "the beancontextservicerevokedlistener to notify if the service should later become revoked"}{"idx": 15607, "node_name": "child", "Dec": "the beancontextchild"}{"idx": 15608, "node_name": "requestor", "Dec": "the requestor"}{"idx": 15609, "node_name": "service", "Dec": "the service"}{"idx": 15612, "node_name": "serviceclass", "Dec": "the specified service"}{"idx": 15614, "node_name": "bcsl", "Dec": "the beancontextserviceslistener to add"}{"idx": 15616, "node_name": "bcsl", "Dec": "the beancontextserviceslistener to remove from this context"}{"idx": 15619, "node_name": "bcsae", "Dec": "the beancontextserviceavailableevent"}{"idx": 15631, "node_name": "peer", "Dec": "the peer beancontext we are supplying an implementation for , if null the this object is its own peer"}{"idx": 15632, "node_name": "lcle", "Dec": "the current locale for this beancontext ."}{"idx": 15633, "node_name": "dtime", "Dec": "the initial state , true if in design mode , false if runtime ."}{"idx": 15634, "node_name": "visible", "Dec": "the initial visibility ."}{"idx": 15636, "node_name": "peer", "Dec": "the peer beancontext we are supplying an implementation for , if null the this object is its own peer"}{"idx": 15637, "node_name": "lcle", "Dec": "the current locale for this beancontext ."}{"idx": 15638, "node_name": "dtime", "Dec": "the initial state , true if in design mode , false if runtime ."}{"idx": 15640, "node_name": "peer", "Dec": "the peer beancontext we are supplying an implementation for , if null the this object is its own peer"}{"idx": 15641, "node_name": "lcle", "Dec": "the current locale for this beancontext ."}{"idx": 15643, "node_name": "peer", "Dec": "the peer beancontext we are supplying an implementation for , if null the this object is its own peer"}{"idx": 15648, "node_name": "targetchild", "Dec": "the child to create the child on behalf of"}{"idx": 15649, "node_name": "peer", "Dec": "the peer if the targetchild and peer are related by beancontextproxy"}{"idx": 15651, "node_name": "sc", "Dec": "the class"}{"idx": 15652, "node_name": "bcsp", "Dec": "the service provider"}{"idx": 15654, "node_name": "bcsl", "Dec": "the beancontextserviceslistener to add"}{"idx": 15656, "node_name": "bcsl", "Dec": "the beancontextserviceslistener to remove from this context"}{"idx": 15658, "node_name": "serviceclass", "Dec": "the service class"}{"idx": 15659, "node_name": "bcsp", "Dec": "the service provider"}{"idx": 15661, "node_name": "serviceclass", "Dec": "the service class"}{"idx": 15662, "node_name": "bcsp", "Dec": "the service provider"}{"idx": 15663, "node_name": "fireevent", "Dec": "whether or not an event should be fired"}{"idx": 15665, "node_name": "serviceclass", "Dec": "the service class"}{"idx": 15666, "node_name": "bcsp", "Dec": "the service provider"}{"idx": 15667, "node_name": "revokecurrentservicesnow", "Dec": "whether or not to revoke the service"}{"idx": 15669, "node_name": "serviceclass", "Dec": "the service in question"}{"idx": 15671, "node_name": "child", "Dec": "the beancontextchild associated with this request"}{"idx": 15672, "node_name": "requestor", "Dec": "the object requesting the service"}{"idx": 15673, "node_name": "serviceclass", "Dec": "class of the requested service"}{"idx": 15674, "node_name": "serviceselector", "Dec": "the service dependent parameter"}{"idx": 15675, "node_name": "bcsrl", "Dec": "the beancontextservicerevokedlistener to notify if the service should later become revoked"}{"idx": 15677, "node_name": "child", "Dec": "the beancontextchild"}{"idx": 15678, "node_name": "requestor", "Dec": "the requestor"}{"idx": 15679, "node_name": "service", "Dec": "the service"}{"idx": 15682, "node_name": "serviceclass", "Dec": "the specified service"}{"idx": 15684, "node_name": "bcssae", "Dec": "the beancontextserviceavailableevent fired as a result of a service becoming available"}{"idx": 15686, "node_name": "bcssre", "Dec": "the beancontextservicerevokedevent fired as a result of a service being revoked"}{"idx": 15688, "node_name": "child", "Dec": "the specified child"}{"idx": 15690, "node_name": "child", "Dec": "the child"}{"idx": 15691, "node_name": "bcsc", "Dec": "the bcschild"}{"idx": 15695, "node_name": "serviceclass", "Dec": "the service class"}{"idx": 15697, "node_name": "bcssae", "Dec": "the beancontextserviceavailableevent"}{"idx": 15699, "node_name": "bcsre", "Dec": "the beancontextservicerevokedevent"}{"idx": 15701, "node_name": "serviceclass", "Dec": "the service class"}{"idx": 15702, "node_name": "revokenow", "Dec": "whether or not the event should be revoked now"}{"idx": 15704, "node_name": "oos", "Dec": "the objectoutputstream to use during serialization"}{"idx": 15706, "node_name": "ois", "Dec": "the objectinputstream to use during deserialization"}{"idx": 15716, "node_name": "peer", "Dec": "the peer beancontext we are supplying an implementation for , or null if this object is its own peer"}{"idx": 15717, "node_name": "lcle", "Dec": "the current locale for this beancontext . if lcle is null , the default locale is assigned to the beancontext instance ."}{"idx": 15718, "node_name": "dtime", "Dec": "the initial state , true if in design mode , false if runtime ."}{"idx": 15719, "node_name": "visible", "Dec": "the initial visibility ."}{"idx": 15721, "node_name": "peer", "Dec": "the peer beancontext we are supplying an implementation for , or null if this object is its own peer"}{"idx": 15722, "node_name": "lcle", "Dec": "the current locale for this beancontext . if lcle is null , the default locale is assigned to the beancontext instance ."}{"idx": 15723, "node_name": "dtime", "Dec": "the initial state , true if in design mode , false if runtime ."}{"idx": 15725, "node_name": "peer", "Dec": "the peer beancontext we are supplying an implementation for , or null if this object is its own peer"}{"idx": 15726, "node_name": "lcle", "Dec": "the current locale for this beancontext . if lcle is null , the default locale is assigned to the beancontext instance ."}{"idx": 15728, "node_name": "peer", "Dec": "the peer beancontext we are supplying an implementation for , or null if this object is its own peer"}{"idx": 15732, "node_name": "beanname", "Dec": "the name of the bean to instantiate within this beancontext"}{"idx": 15736, "node_name": "o", "Dec": "the object in question"}{"idx": 15738, "node_name": "o", "Dec": "the object in question"}{"idx": 15742, "node_name": "arry", "Dec": "the array of object types that are of interest ."}{"idx": 15744, "node_name": "targetchild", "Dec": "the child to create the child on behalf of"}{"idx": 15745, "node_name": "peer", "Dec": "the peer if the tragetchild and the peer are related by an implementation of beancontextproxy"}{"idx": 15747, "node_name": "targetchild", "Dec": "the child objects to nest within this beancontext"}{"idx": 15749, "node_name": "targetchild", "Dec": "the child objects to remove"}{"idx": 15751, "node_name": "targetchild", "Dec": "the javabean , beancontext , or object to be removed"}{"idx": 15752, "node_name": "callchildsetbc", "Dec": "used to indicate that the child should be notified that it is no longer nested in this beancontext ."}{"idx": 15754, "node_name": "c", "Dec": "the specified collection"}{"idx": 15756, "node_name": "c", "Dec": "collection containing elements to be added to this collection"}{"idx": 15758, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 15760, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 15763, "node_name": "bcml", "Dec": "the beancontextmembershiplistener to add"}{"idx": 15765, "node_name": "bcml", "Dec": "the beancontextmembershiplistener to remove"}{"idx": 15767, "node_name": "name", "Dec": "the name of the resource requested ."}{"idx": 15768, "node_name": "bcc", "Dec": "the child object making the request ."}{"idx": 15770, "node_name": "name", "Dec": "the name of the resource requested ."}{"idx": 15771, "node_name": "bcc", "Dec": "the child object making the request ."}{"idx": 15773, "node_name": "dtime", "Dec": "the new designtime value"}{"idx": 15776, "node_name": "newlocale", "Dec": "the new locale . setLocale(java.util.Locale) call will have no effect if newlocale is null ."}{"idx": 15785, "node_name": "oos", "Dec": "the objectoutputstream to use during serialization"}{"idx": 15787, "node_name": "ois", "Dec": "the objectinputstream to use during deserialization"}{"idx": 15789, "node_name": "child", "Dec": "the newly deserialized child"}{"idx": 15790, "node_name": "bcsc", "Dec": "the newly deserialized bcschild"}{"idx": 15792, "node_name": "oos", "Dec": "the objectoutputstream to use during serialization"}{"idx": 15793, "node_name": "coll", "Dec": "the collection to serialize"}{"idx": 15795, "node_name": "ois", "Dec": "the objectinputstream to use"}{"idx": 15796, "node_name": "coll", "Dec": "the collection"}{"idx": 15798, "node_name": "oos", "Dec": "the objectoutputstream to use during serialization"}{"idx": 15800, "node_name": "ois", "Dec": "the objectinputstream to use"}{"idx": 15802, "node_name": "pce", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 15804, "node_name": "pce", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 15806, "node_name": "targetchild", "Dec": "the child to create the child on behalf of"}{"idx": 15808, "node_name": "targetchild", "Dec": "the child to create the child on behalf of"}{"idx": 15810, "node_name": "child", "Dec": "the child"}{"idx": 15811, "node_name": "bcsc", "Dec": "the bcschild"}{"idx": 15813, "node_name": "child", "Dec": "the child"}{"idx": 15814, "node_name": "bcsc", "Dec": "the bcschild"}{"idx": 15816, "node_name": "child", "Dec": "the specified child"}{"idx": 15818, "node_name": "child", "Dec": "the specified child"}{"idx": 15820, "node_name": "child", "Dec": "the specified child"}{"idx": 15822, "node_name": "child", "Dec": "the specified child"}{"idx": 15824, "node_name": "child", "Dec": "the specified child"}{"idx": 15826, "node_name": "child", "Dec": "the specified child"}{"idx": 15828, "node_name": "bcme", "Dec": "the event to fire"}{"idx": 15830, "node_name": "bcme", "Dec": "the event to fire"}{"idx": 15834, "node_name": "first", "Dec": "the first object"}{"idx": 15835, "node_name": "second", "Dec": "the second object"}{"idx": 15838, "node_name": "beanclass", "Dec": "the class object of the java class that implements the bean . for example sun.beans.ourbutton.class ."}{"idx": 15840, "node_name": "beanclass", "Dec": "the class object of the java class that implements the bean . for example sun.beans.ourbutton.class ."}{"idx": 15841, "node_name": "customizerclass", "Dec": "the class object of the java class that implements the bean's customizer . for example sun.beans.ourbuttoncustomizer.class ."}{"idx": 15857, "node_name": "iconkind", "Dec": "the kind of icon requested"}{"idx": 15862, "node_name": "cls", "Dec": "the class-loader from which we should create the bean . if this is null , then the system class-loader is used ."}{"idx": 15863, "node_name": "beanname", "Dec": "the name of the bean within the class-loader . for example \" sun.beanbox.foobah \""}{"idx": 15865, "node_name": "cls", "Dec": "the class-loader from which we should create the bean . if this is null , then the system class-loader is used ."}{"idx": 15866, "node_name": "beanname", "Dec": "the name of the bean within the class-loader . for example \" sun.beanbox.foobah \""}{"idx": 15867, "node_name": "beancontext", "Dec": "the beancontext in which to nest the new bean"}{"idx": 15869, "node_name": "bean", "Dec": "object from which we want to obtain a view ."}{"idx": 15870, "node_name": "targettype", "Dec": "the type of view we'd like to get ."}{"idx": 15872, "node_name": "bean", "Dec": "bean from which we want to obtain a view ."}{"idx": 15873, "node_name": "targettype", "Dec": "the type of view we'd like to get ."}{"idx": 15877, "node_name": "isdesigntime", "Dec": "true if we're in an application builder tool ."}{"idx": 15879, "node_name": "isguiavailable", "Dec": "true if gui interaction is available ."}{"idx": 15883, "node_name": "bean", "Dec": "the object to be customized ."}{"idx": 15885, "node_name": "listener", "Dec": "an object to be invoked when a propertychange event is fired ."}{"idx": 15887, "node_name": "listener", "Dec": "the propertychange listener to be removed ."}{"idx": 15891, "node_name": "constructorpropertynames", "Dec": "the property names for the arguments of <init>(java.lang.String[]) ."}{"idx": 15893, "node_name": "oldinstance", "Dec": "the instance to be copied ."}{"idx": 15894, "node_name": "newinstance", "Dec": "the instance that is to be modified ."}{"idx": 15896, "node_name": "oldinstance", "Dec": "the instance to be instantiated ."}{"idx": 15897, "node_name": "out", "Dec": "the code output stream ."}{"idx": 15899, "node_name": "type", "Dec": "the type of the instances"}{"idx": 15900, "node_name": "oldinstance", "Dec": "the instance to be copied ."}{"idx": 15901, "node_name": "newinstance", "Dec": "the instance that is to be modified ."}{"idx": 15902, "node_name": "out", "Dec": "the stream to which any initialization statements should be written ."}{"idx": 15906, "node_name": "designtime", "Dec": "the current \" value \" of the \" designtime \" property"}{"idx": 15911, "node_name": "o", "Dec": "the object to be written to the stream ."}{"idx": 15913, "node_name": "exceptionlistener", "Dec": "the exception handler for this stream ; if null the default exception listener will be used ."}{"idx": 15916, "node_name": "type", "Dec": "the class of the objects"}{"idx": 15918, "node_name": "type", "Dec": "the class of objects that the specified persistence delegate applies to"}{"idx": 15919, "node_name": "delegate", "Dec": "the persistence delegate for instances of the given type"}{"idx": 15921, "node_name": "oldinstance", "Dec": "the entry that should be removed ."}{"idx": 15923, "node_name": "oldinstance", "Dec": "the instance to be looked up ."}{"idx": 15925, "node_name": "oldstm", "Dec": "the expression to be written to the stream ."}{"idx": 15927, "node_name": "oldexp", "Dec": "the expression to be written to the stream ."}{"idx": 15930, "node_name": "target", "Dec": "the object that will perform the action"}{"idx": 15931, "node_name": "action", "Dec": "the name of a ( possibly qualified ) property or method on the target"}{"idx": 15932, "node_name": "eventpropertyname", "Dec": "the ( possibly qualified ) name of a readable property of the incoming event"}{"idx": 15933, "node_name": "listenermethodname", "Dec": "the name of the method in the listener interface that should trigger the action"}{"idx": 15939, "node_name": "proxy", "Dec": "the proxy object"}{"idx": 15940, "node_name": "method", "Dec": "invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) in the listener interface"}{"idx": 15941, "node_name": "arguments", "Dec": "an array of objects containing the values of the arguments passed in invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) invocation on the proxy instance , or null if interface method takes no arguments . arguments of primitive types are wrapped in instances of the appropriate primitive wrapper class , such as java.lang.integer or java.lang.boolean ."}{"idx": 15943, "node_name": "listenerinterface", "Dec": "the listener interface to create a proxy for"}{"idx": 15944, "node_name": "target", "Dec": "the object that will perform the action"}{"idx": 15945, "node_name": "action", "Dec": "the name of a ( possibly qualified ) property or method on the target"}{"idx": 15947, "node_name": "listenerinterface", "Dec": "the listener interface to create a proxy for"}{"idx": 15948, "node_name": "target", "Dec": "the object that will perform the action"}{"idx": 15949, "node_name": "action", "Dec": "the name of a ( possibly qualified ) property or method on the target"}{"idx": 15950, "node_name": "eventpropertyname", "Dec": "the ( possibly qualified ) name of a readable property of the incoming event"}{"idx": 15952, "node_name": "listenerinterface", "Dec": "the listener interface to create a proxy for"}{"idx": 15953, "node_name": "target", "Dec": "the object that will perform the action"}{"idx": 15954, "node_name": "action", "Dec": "the name of a ( possibly qualified ) property or method on the target"}{"idx": 15955, "node_name": "eventpropertyname", "Dec": "the ( possibly qualified ) name of a readable property of the incoming event"}{"idx": 15956, "node_name": "listenermethodname", "Dec": "the name of create(java.lang.Class,java.lang.Object,java.lang.String,java.lang.String,java.lang.String) in the listener interface that should trigger the action"}{"idx": 15959, "node_name": "sourceclass", "Dec": "the class firing the event ."}{"idx": 15960, "node_name": "eventsetname", "Dec": "the programmatic name of the event . e.g. \" fred \" . note that this should normally start with a lower-case character ."}{"idx": 15961, "node_name": "listenertype", "Dec": "the target interface that events will get delivered to ."}{"idx": 15962, "node_name": "listenermethodname", "Dec": "the method that will get called when the event gets delivered to its target listener interface ."}{"idx": 15964, "node_name": "sourceclass", "Dec": "the class firing the event ."}{"idx": 15965, "node_name": "eventsetname", "Dec": "the programmatic name of the event set . note that this should normally start with a lower-case character ."}{"idx": 15966, "node_name": "listenertype", "Dec": "the class of the target interface that events will get delivered to ."}{"idx": 15967, "node_name": "listenermethodnames", "Dec": "the names of the methods that will get called when the event gets delivered to its target listener interface ."}{"idx": 15968, "node_name": "addlistenermethodname", "Dec": "the name of the method on the event source that can be used to register an event listener object ."}{"idx": 15969, "node_name": "removelistenermethodname", "Dec": "the name of the method on the event source that can be used to de-register an event listener object ."}{"idx": 15971, "node_name": "sourceclass", "Dec": "the class firing the event ."}{"idx": 15972, "node_name": "eventsetname", "Dec": "the programmatic name of the event set . note that this should normally start with a lower-case character ."}{"idx": 15973, "node_name": "listenertype", "Dec": "the class of the target interface that events will get delivered to ."}{"idx": 15974, "node_name": "listenermethodnames", "Dec": "the names of the methods that will get called when the event gets delivered to its target listener interface ."}{"idx": 15975, "node_name": "addlistenermethodname", "Dec": "the name of the method on the event source that can be used to register an event listener object ."}{"idx": 15976, "node_name": "removelistenermethodname", "Dec": "the name of the method on the event source that can be used to de-register an event listener object ."}{"idx": 15977, "node_name": "getlistenermethodname", "Dec": "the method on the event source that can be used to access the array of event listener objects ."}{"idx": 15979, "node_name": "eventsetname", "Dec": "the programmatic name of the event set ."}{"idx": 15980, "node_name": "listenertype", "Dec": "the class for the listener interface ."}{"idx": 15981, "node_name": "listenermethods", "Dec": "an array of method objects describing each of the event handling methods in the target listener ."}{"idx": 15982, "node_name": "addlistenermethod", "Dec": "the method on the event source that can be used to register an event listener object ."}{"idx": 15983, "node_name": "removelistenermethod", "Dec": "the method on the event source that can be used to de-register an event listener object ."}{"idx": 15985, "node_name": "eventsetname", "Dec": "the programmatic name of the event set ."}{"idx": 15986, "node_name": "listenertype", "Dec": "the class for the listener interface ."}{"idx": 15987, "node_name": "listenermethods", "Dec": "an array of method objects describing each of the event handling methods in the target listener ."}{"idx": 15988, "node_name": "addlistenermethod", "Dec": "the method on the event source that can be used to register an event listener object ."}{"idx": 15989, "node_name": "removelistenermethod", "Dec": "the method on the event source that can be used to de-register an event listener object ."}{"idx": 15990, "node_name": "getlistenermethod", "Dec": "the method on the event source that can be used to access the array of event listener objects ."}{"idx": 15992, "node_name": "eventsetname", "Dec": "the programmatic name of the event set ."}{"idx": 15993, "node_name": "listenertype", "Dec": "the class for the listener interface ."}{"idx": 15994, "node_name": "listenermethoddescriptors", "Dec": "an array of methoddescriptor objects describing each of the event handling methods in the target listener ."}{"idx": 15995, "node_name": "addlistenermethod", "Dec": "the method on the event source that can be used to register an event listener object ."}{"idx": 15996, "node_name": "removelistenermethod", "Dec": "the method on the event source that can be used to de-register an event listener object ."}{"idx": 16004, "node_name": "unicast", "Dec": "true if the event set is unicast ."}{"idx": 16007, "node_name": "indefaulteventset", "Dec": "true if the event set is in the \" default \" set , false if not"}{"idx": 16011, "node_name": "e", "Dec": "the exception that was caught ."}{"idx": 16014, "node_name": "target", "Dec": "the target object of this expression"}{"idx": 16015, "node_name": "methodname", "Dec": "the name of the method to invoke on the specified target"}{"idx": 16016, "node_name": "arguments", "Dec": "the array of arguments to invoke the specified method"}{"idx": 16018, "node_name": "value", "Dec": "the value of this expression"}{"idx": 16019, "node_name": "target", "Dec": "the target object of this expression"}{"idx": 16020, "node_name": "methodname", "Dec": "the name of the method to invoke on the specified target"}{"idx": 16021, "node_name": "arguments", "Dec": "the array of arguments to invoke the specified method"}{"idx": 16025, "node_name": "value", "Dec": "the value of this expression ."}{"idx": 16031, "node_name": "name", "Dec": "the programmatic name of the property / method / event"}{"idx": 16034, "node_name": "displayname", "Dec": "the localized display name for the property / method / event ."}{"idx": 16037, "node_name": "expert", "Dec": "true if this feature is intended for use by experts only ."}{"idx": 16040, "node_name": "hidden", "Dec": "true if this feature should be hidden from human users ."}{"idx": 16043, "node_name": "preferred", "Dec": "true if this feature should be preferentially shown to human users ."}{"idx": 16046, "node_name": "text", "Dec": "a ( localized ) short description to be associated with this property / method / event ."}{"idx": 16048, "node_name": "attributename", "Dec": "the locale-independent name of the attribute"}{"idx": 16049, "node_name": "value", "Dec": "the value ."}{"idx": 16051, "node_name": "attributename", "Dec": "the locale-independent name of the attribute"}{"idx": 16056, "node_name": "source", "Dec": "the bean that fired the event ."}{"idx": 16057, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed ."}{"idx": 16058, "node_name": "oldvalue", "Dec": "the old value of the property ."}{"idx": 16059, "node_name": "newvalue", "Dec": "the new value of the property ."}{"idx": 16060, "node_name": "index", "Dec": "index of the property element that was changed ."}{"idx": 16064, "node_name": "propertyname", "Dec": "the programmatic name of the property ."}{"idx": 16065, "node_name": "beanclass", "Dec": "the class object for the target bean ."}{"idx": 16067, "node_name": "propertyname", "Dec": "the programmatic name of the property ."}{"idx": 16068, "node_name": "beanclass", "Dec": "the class object for the target bean ."}{"idx": 16069, "node_name": "readmethodname", "Dec": "the name of the method used for reading the property values as an array . may be null if the property is write-only or must be indexed ."}{"idx": 16070, "node_name": "writemethodname", "Dec": "the name of the method used for writing the property values as an array . may be null if the property is read-only or must be indexed ."}{"idx": 16071, "node_name": "indexedreadmethodname", "Dec": "the name of the method used for reading an indexed property value . may be null if the property is write-only ."}{"idx": 16072, "node_name": "indexedwritemethodname", "Dec": "the name of the method used for writing an indexed property value . may be null if the property is read-only ."}{"idx": 16074, "node_name": "propertyname", "Dec": "the programmatic name of the property ."}{"idx": 16075, "node_name": "readmethod", "Dec": "the method used for reading the property values as an array . may be null if the property is write-only or must be indexed ."}{"idx": 16076, "node_name": "writemethod", "Dec": "the method used for writing the property values as an array . may be null if the property is read-only or must be indexed ."}{"idx": 16077, "node_name": "indexedreadmethod", "Dec": "the method used for reading an indexed property value . may be null if the property is write-only ."}{"idx": 16078, "node_name": "indexedwritemethod", "Dec": "the method used for writing an indexed property value . may be null if the property is read-only ."}{"idx": 16081, "node_name": "readmethod", "Dec": "the new indexed read method ."}{"idx": 16084, "node_name": "writemethod", "Dec": "the new indexed write method ."}{"idx": 16087, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 16091, "node_name": "mess", "Dec": "descriptive message"}{"idx": 16097, "node_name": "beanclass", "Dec": "the bean class to be analyzed ."}{"idx": 16099, "node_name": "beanclass", "Dec": "the bean class to be analyzed ."}{"idx": 16100, "node_name": "flags", "Dec": "flags to control the introspection . if flags == use_all_beaninfo then we use all of the beaninfo classes we can discover . if flags == ignore_immediate_beaninfo then we ignore any beaninfo associated with the specified beanclass . if flags == ignore_all_beaninfo then we ignore all beaninfo associated with the specified beanclass or any of its parent classes ."}{"idx": 16102, "node_name": "beanclass", "Dec": "the bean class to be analyzed ."}{"idx": 16103, "node_name": "stopclass", "Dec": "the baseclass at which to stop the analysis . any methods / properties / events in the stopclass or in its baseclasses will be ignored in the analysis ."}{"idx": 16106, "node_name": "name", "Dec": "the string to be decapitalized ."}{"idx": 16109, "node_name": "path", "Dec": "array of package names ."}{"idx": 16112, "node_name": "clz", "Dec": "class object to be flushed ."}{"idx": 16116, "node_name": "method", "Dec": "the low-level method information ."}{"idx": 16118, "node_name": "method", "Dec": "the low-level method information ."}{"idx": 16119, "node_name": "parameterdescriptors", "Dec": "descriptive information for each of the method's parameters ."}{"idx": 16127, "node_name": "oldinstance", "Dec": "the instance that will be created by this expression ."}{"idx": 16128, "node_name": "out", "Dec": "the stream to which this expression will be written ."}{"idx": 16130, "node_name": "oldinstance", "Dec": "the instance to be copied ."}{"idx": 16131, "node_name": "newinstance", "Dec": "the instance that is to be modified ."}{"idx": 16133, "node_name": "oldinstance", "Dec": "the instance that will be created by this expression ."}{"idx": 16134, "node_name": "out", "Dec": "the stream to which this expression will be written ."}{"idx": 16136, "node_name": "type", "Dec": "the type of the instances"}{"idx": 16137, "node_name": "oldinstance", "Dec": "the instance to be copied ."}{"idx": 16138, "node_name": "newinstance", "Dec": "the instance that is to be modified ."}{"idx": 16139, "node_name": "out", "Dec": "the stream to which any initialization statements should be written ."}{"idx": 16142, "node_name": "source", "Dec": "the bean that fired the event"}{"idx": 16143, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 16144, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 16145, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 16150, "node_name": "propagationid", "Dec": "the propagationid object for the event ."}{"idx": 16155, "node_name": "evt", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 16158, "node_name": "propertyname", "Dec": "the name of the property to listen on"}{"idx": 16159, "node_name": "listener", "Dec": "the listener object"}{"idx": 16161, "node_name": "event", "Dec": "the property change event"}{"idx": 16165, "node_name": "sourcebean", "Dec": "the bean to be given as the source for any events ."}{"idx": 16167, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 16169, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 16172, "node_name": "propertyname", "Dec": "the name of the property to listen on ."}{"idx": 16173, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 16175, "node_name": "propertyname", "Dec": "the name of the property that was listened on ."}{"idx": 16176, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 16178, "node_name": "propertyname", "Dec": "the name of the property being listened to"}{"idx": 16180, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 16181, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 16182, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 16184, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 16185, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 16186, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 16188, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 16189, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 16190, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 16192, "node_name": "event", "Dec": "the propertychangeevent to be fired"}{"idx": 16194, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 16195, "node_name": "index", "Dec": "the index of the property element that was changed"}{"idx": 16196, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 16197, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 16199, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 16200, "node_name": "index", "Dec": "the index of the property element that was changed"}{"idx": 16201, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 16202, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 16204, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 16205, "node_name": "index", "Dec": "the index of the property element that was changed"}{"idx": 16206, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 16207, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 16209, "node_name": "propertyname", "Dec": "the property name ."}{"idx": 16212, "node_name": "propertyname", "Dec": "the programmatic name of the property ."}{"idx": 16213, "node_name": "beanclass", "Dec": "the class object for the target bean . for example sun.beans.ourbutton.class ."}{"idx": 16215, "node_name": "propertyname", "Dec": "the programmatic name of the property ."}{"idx": 16216, "node_name": "beanclass", "Dec": "the class object for the target bean . for example sun.beans.ourbutton.class ."}{"idx": 16217, "node_name": "readmethodname", "Dec": "the name of the method used for reading the property value . may be null if the property is write-only ."}{"idx": 16218, "node_name": "writemethodname", "Dec": "the name of the method used for writing the property value . may be null if the property is read-only ."}{"idx": 16220, "node_name": "propertyname", "Dec": "the programmatic name of the property ."}{"idx": 16221, "node_name": "readmethod", "Dec": "the method used for reading the property value . may be null if the property is write-only ."}{"idx": 16222, "node_name": "writemethod", "Dec": "the method used for writing the property value . may be null if the property is read-only ."}{"idx": 16226, "node_name": "readmethod", "Dec": "the new read method ."}{"idx": 16229, "node_name": "writemethod", "Dec": "the new write method ."}{"idx": 16232, "node_name": "bound", "Dec": "true if this is a bound property ."}{"idx": 16235, "node_name": "constrained", "Dec": "true if this is a constrained property ."}{"idx": 16237, "node_name": "propertyeditorclass", "Dec": "the class for the desired propertyeditor ."}{"idx": 16240, "node_name": "bean", "Dec": "the source object"}{"idx": 16242, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 16246, "node_name": "value", "Dec": "the new target object to be edited . note that this object should not be modified by the propertyeditor , rather the propertyeditor should create a new object to hold any modified value ."}{"idx": 16250, "node_name": "gfx", "Dec": "graphics object to paint into ."}{"idx": 16251, "node_name": "box", "Dec": "rectangle within graphics object into which we should paint ."}{"idx": 16255, "node_name": "text", "Dec": "the string to be parsed ."}{"idx": 16260, "node_name": "listener", "Dec": "the propertychangelistener to add"}{"idx": 16262, "node_name": "listener", "Dec": "the propertychangelistener to remove"}{"idx": 16266, "node_name": "targettype", "Dec": "the class object of the type to be edited"}{"idx": 16267, "node_name": "editorclass", "Dec": "the class object of the editor class"}{"idx": 16269, "node_name": "targettype", "Dec": "the class object for the type to be edited"}{"idx": 16272, "node_name": "path", "Dec": "array of package names ."}{"idx": 16276, "node_name": "source", "Dec": "the source used for event firing"}{"idx": 16279, "node_name": "source", "Dec": "source object to be used for events"}{"idx": 16281, "node_name": "value", "Dec": "the new target object to be edited . note that this object should not be modified by the propertyeditor , rather the propertyeditor should create a new object to hold any modified value ."}{"idx": 16285, "node_name": "gfx", "Dec": "graphics object to paint into ."}{"idx": 16286, "node_name": "box", "Dec": "rectangle within graphics object into which we should paint ."}{"idx": 16290, "node_name": "text", "Dec": "the string to be parsed ."}{"idx": 16295, "node_name": "listener", "Dec": "the propertychangelistener to add"}{"idx": 16297, "node_name": "listener", "Dec": "the propertychangelistener to remove"}{"idx": 16301, "node_name": "mess", "Dec": "descriptive message"}{"idx": 16302, "node_name": "evt", "Dec": "a propertychangeevent describing the vetoed change ."}{"idx": 16314, "node_name": "iconkind", "Dec": "the kind of icon requested"}{"idx": 16316, "node_name": "resourcename", "Dec": "a pathname relative to the directory holding the class file of the current class . for example , \" wombat.gif \" ."}{"idx": 16319, "node_name": "target", "Dec": "the target object of this statement"}{"idx": 16320, "node_name": "methodname", "Dec": "the name of the method to invoke on the specified target"}{"idx": 16321, "node_name": "arguments", "Dec": "the array of arguments to invoke the specified method"}{"idx": 16330, "node_name": "evt", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 16333, "node_name": "propertyname", "Dec": "the name of the property to listen on"}{"idx": 16334, "node_name": "listener", "Dec": "the listener object"}{"idx": 16336, "node_name": "event", "Dec": "the property change event"}{"idx": 16340, "node_name": "sourcebean", "Dec": "the bean to be given as the source for any events ."}{"idx": 16342, "node_name": "listener", "Dec": "the vetoablechangelistener to be added"}{"idx": 16344, "node_name": "listener", "Dec": "the vetoablechangelistener to be removed"}{"idx": 16347, "node_name": "propertyname", "Dec": "the name of the property to listen on ."}{"idx": 16348, "node_name": "listener", "Dec": "the vetoablechangelistener to be added"}{"idx": 16350, "node_name": "propertyname", "Dec": "the name of the property that was listened on ."}{"idx": 16351, "node_name": "listener", "Dec": "the vetoablechangelistener to be removed"}{"idx": 16353, "node_name": "propertyname", "Dec": "the name of the property being listened to"}{"idx": 16355, "node_name": "propertyname", "Dec": "the programmatic name of the property that is about to change"}{"idx": 16356, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 16357, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 16359, "node_name": "propertyname", "Dec": "the programmatic name of the property that is about to change"}{"idx": 16360, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 16361, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 16363, "node_name": "propertyname", "Dec": "the programmatic name of the property that is about to change"}{"idx": 16364, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 16365, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 16367, "node_name": "event", "Dec": "the propertychangeevent to be fired"}{"idx": 16369, "node_name": "propertyname", "Dec": "the property name ."}{"idx": 16377, "node_name": "in", "Dec": "the underlying stream ."}{"idx": 16379, "node_name": "in", "Dec": "the underlying stream ."}{"idx": 16380, "node_name": "owner", "Dec": "the owner of this stream ."}{"idx": 16382, "node_name": "in", "Dec": "the underlying stream ."}{"idx": 16383, "node_name": "owner", "Dec": "the owner of this stream ."}{"idx": 16384, "node_name": "exceptionlistener", "Dec": "the exception handler for the stream ; if null the default exception listener will be used ."}{"idx": 16386, "node_name": "in", "Dec": "the underlying stream . null may be passed without error , though the resulting xmldecoder will be useless"}{"idx": 16387, "node_name": "owner", "Dec": "the owner of this stream . null is a legal value"}{"idx": 16388, "node_name": "exceptionlistener", "Dec": "the exception handler for the stream , or null to use the default"}{"idx": 16389, "node_name": "cl", "Dec": "the class loader used for instantiating objects . null indicates that the default class loader should be used"}{"idx": 16391, "node_name": "is", "Dec": "the input source to parse"}{"idx": 16394, "node_name": "exceptionlistener", "Dec": "the exception handler for this stream ; if null the default exception listener will be used ."}{"idx": 16398, "node_name": "owner", "Dec": "the owner of this decoder ."}{"idx": 16401, "node_name": "owner", "Dec": "the owner of the default handler that can be used as a value of < java > element"}{"idx": 16402, "node_name": "el", "Dec": "the exception handler for the parser , or null to use the default exception handler"}{"idx": 16403, "node_name": "cl", "Dec": "the class loader used for instantiating objects , or null to use the default class loader"}{"idx": 16406, "node_name": "out", "Dec": "the stream to which the xml representation of the objects will be written"}{"idx": 16408, "node_name": "out", "Dec": "the stream to which the xml representation of the objects will be written"}{"idx": 16409, "node_name": "charset", "Dec": "the name of the requested charset ; may be either a canonical name or an alias"}{"idx": 16410, "node_name": "declaration", "Dec": "whether the xml declaration should be generated ; set this to false when embedding the contents in another xml document"}{"idx": 16411, "node_name": "indentation", "Dec": "the number of space characters to indent the entire xml document by"}{"idx": 16413, "node_name": "owner", "Dec": "the owner of this encoder ."}{"idx": 16416, "node_name": "o", "Dec": "the object to be written to the stream ."}{"idx": 16418, "node_name": "oldstm", "Dec": "the statement that will be written to the stream ."}{"idx": 16420, "node_name": "oldexp", "Dec": "the expression that will be written to the stream ."}{"idx": 16430, "node_name": "in", "Dec": "the underlying input stream ."}{"idx": 16432, "node_name": "in", "Dec": "the underlying input stream ."}{"idx": 16433, "node_name": "size", "Dec": "the buffer size ."}{"idx": 16436, "node_name": "b", "Dec": "destination buffer ."}{"idx": 16437, "node_name": "off", "Dec": "offset at which to start storing bytes ."}{"idx": 16438, "node_name": "len", "Dec": "maximum number of bytes to read ."}{"idx": 16440, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 16443, "node_name": "readlimit", "Dec": "the maximum limit of bytes that can be read before the mark position becomes invalid ."}{"idx": 16451, "node_name": "out", "Dec": "the underlying output stream ."}{"idx": 16453, "node_name": "out", "Dec": "the underlying output stream ."}{"idx": 16454, "node_name": "size", "Dec": "the buffer size ."}{"idx": 16456, "node_name": "b", "Dec": "the byte to be written ."}{"idx": 16458, "node_name": "b", "Dec": "the data ."}{"idx": 16459, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 16460, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 16464, "node_name": "in", "Dec": "a reader"}{"idx": 16465, "node_name": "sz", "Dec": "input-buffer size"}{"idx": 16467, "node_name": "in", "Dec": "a reader"}{"idx": 16470, "node_name": "cbuf", "Dec": "destination buffer"}{"idx": 16471, "node_name": "off", "Dec": "offset at which to start storing characters"}{"idx": 16472, "node_name": "len", "Dec": "maximum number of characters to read"}{"idx": 16475, "node_name": "n", "Dec": "the number of characters to skip"}{"idx": 16479, "node_name": "readaheadlimit", "Dec": "limit on the number of characters that may be read while still preserving the mark . an attempt to reset the stream after reading characters up to this limit or beyond may fail . a limit value larger than the size of the input buffer will cause a new buffer to be allocated whose size is no smaller than limit . therefore large values should be used with care ."}{"idx": 16484, "node_name": "out", "Dec": "a writer"}{"idx": 16486, "node_name": "out", "Dec": "a writer"}{"idx": 16487, "node_name": "sz", "Dec": "output-buffer size , a positive integer"}{"idx": 16489, "node_name": "c", "Dec": "int specifying a character to be written"}{"idx": 16491, "node_name": "cbuf", "Dec": "a character array"}{"idx": 16492, "node_name": "off", "Dec": "offset from which to start reading characters"}{"idx": 16493, "node_name": "len", "Dec": "number of characters to write"}{"idx": 16495, "node_name": "s", "Dec": "string to be written"}{"idx": 16496, "node_name": "off", "Dec": "offset from which to start reading characters"}{"idx": 16497, "node_name": "len", "Dec": "number of characters to be written"}{"idx": 16506, "node_name": "buf", "Dec": "the input buffer ."}{"idx": 16508, "node_name": "buf", "Dec": "the input buffer ."}{"idx": 16509, "node_name": "offset", "Dec": "the offset in the buffer of the first byte to read ."}{"idx": 16510, "node_name": "length", "Dec": "the maximum number of bytes to read from the buffer ."}{"idx": 16513, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16514, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 16515, "node_name": "len", "Dec": "the maximum number of bytes read ."}{"idx": 16517, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 16521, "node_name": "readaheadlimit", "Dec": "the maximum limit of bytes that can be read before the mark position becomes invalid ."}{"idx": 16529, "node_name": "size", "Dec": "the initial size ."}{"idx": 16531, "node_name": "b", "Dec": "the byte to be written ."}{"idx": 16533, "node_name": "b", "Dec": "the data ."}{"idx": 16534, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 16535, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 16537, "node_name": "b", "Dec": "the data ."}{"idx": 16539, "node_name": "out", "Dec": "the output stream to which to write the data ."}{"idx": 16545, "node_name": "charsetname", "Dec": "the name of a supported charset"}{"idx": 16547, "node_name": "charset", "Dec": "the charset to be used to decode the bytes"}{"idx": 16555, "node_name": "buf", "Dec": "input buffer ( not copied )"}{"idx": 16557, "node_name": "buf", "Dec": "input buffer ( not copied )"}{"idx": 16558, "node_name": "offset", "Dec": "offset of the first char to read"}{"idx": 16559, "node_name": "length", "Dec": "number of chars to read"}{"idx": 16562, "node_name": "b", "Dec": "destination buffer"}{"idx": 16563, "node_name": "off", "Dec": "offset at which to start storing characters"}{"idx": 16564, "node_name": "len", "Dec": "maximum number of characters to read"}{"idx": 16566, "node_name": "n", "Dec": "the number of characters to skip"}{"idx": 16570, "node_name": "readaheadlimit", "Dec": "limit on the number of characters that may be read while still preserving the mark . because the stream's input comes from a character array , there is no actual limit ; hence this argument is ignored ."}{"idx": 16578, "node_name": "initialsize", "Dec": "an int specifying the initial buffer size ."}{"idx": 16580, "node_name": "c", "Dec": "int specifying a character to be written"}{"idx": 16582, "node_name": "c", "Dec": "the data to be written"}{"idx": 16583, "node_name": "off", "Dec": "the start offset in the data"}{"idx": 16584, "node_name": "len", "Dec": "the number of chars that are written"}{"idx": 16586, "node_name": "str", "Dec": "string to be written from"}{"idx": 16587, "node_name": "off", "Dec": "offset from which to start reading characters"}{"idx": 16588, "node_name": "len", "Dec": "number of characters to be written"}{"idx": 16590, "node_name": "out", "Dec": "the output stream to write to"}{"idx": 16592, "node_name": "csq", "Dec": "the character sequence to append . if csq is null , then the four characters \" null \" are appended to this writer ."}{"idx": 16594, "node_name": "csq", "Dec": "the character sequence from which a subsequence will be appended . if csq is null , then characters will be appended as if csq contained the four characters \" null \" ."}{"idx": 16595, "node_name": "start", "Dec": "the index of the first character in the subsequence"}{"idx": 16596, "node_name": "end", "Dec": "the index of the character following the last character in the subsequence"}{"idx": 16598, "node_name": "c", "Dec": "the 16-bit character to append"}{"idx": 16608, "node_name": "s", "Dec": "the detailed message associated with the exception ."}{"idx": 16615, "node_name": "fmt", "Dec": "a format string as described in format string syntax"}{"idx": 16616, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 16618, "node_name": "format", "Dec": "a format string as described in format string syntax ."}{"idx": 16619, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 16621, "node_name": "fmt", "Dec": "a format string as described in format string syntax ."}{"idx": 16622, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification ."}{"idx": 16625, "node_name": "fmt", "Dec": "a format string as described in format string syntax for the prompt text ."}{"idx": 16626, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification ."}{"idx": 16631, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16633, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16634, "node_name": "off", "Dec": "an int specifying the offset in the data array b ."}{"idx": 16635, "node_name": "len", "Dec": "an int specifying the number of bytes to read ."}{"idx": 16637, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 16652, "node_name": "in", "Dec": "the specified input stream"}{"idx": 16654, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16656, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16657, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 16658, "node_name": "len", "Dec": "the maximum number of bytes read ."}{"idx": 16660, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16662, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16663, "node_name": "off", "Dec": "the start offset in the data array b ."}{"idx": 16664, "node_name": "len", "Dec": "the number of bytes to read ."}{"idx": 16666, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 16679, "node_name": "in", "Dec": "a data input stream ."}{"idx": 16682, "node_name": "b", "Dec": "the byte to be written ."}{"idx": 16684, "node_name": "b", "Dec": "the data ."}{"idx": 16686, "node_name": "b", "Dec": "the data ."}{"idx": 16687, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 16688, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 16690, "node_name": "v", "Dec": "the boolean to be written ."}{"idx": 16692, "node_name": "v", "Dec": "the byte value to be written ."}{"idx": 16694, "node_name": "v", "Dec": "the short value to be written ."}{"idx": 16696, "node_name": "v", "Dec": "the char value to be written ."}{"idx": 16698, "node_name": "v", "Dec": "the int value to be written ."}{"idx": 16700, "node_name": "v", "Dec": "the long value to be written ."}{"idx": 16702, "node_name": "v", "Dec": "the float value to be written ."}{"idx": 16704, "node_name": "v", "Dec": "the double value to be written ."}{"idx": 16706, "node_name": "s", "Dec": "the string of bytes to be written ."}{"idx": 16708, "node_name": "s", "Dec": "the string value to be written ."}{"idx": 16710, "node_name": "s", "Dec": "the string value to be written ."}{"idx": 16714, "node_name": "out", "Dec": "the underlying output stream , to be saved for later use ."}{"idx": 16716, "node_name": "b", "Dec": "the byte to be written ."}{"idx": 16718, "node_name": "b", "Dec": "the data ."}{"idx": 16719, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 16720, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 16723, "node_name": "v", "Dec": "a boolean value to be written ."}{"idx": 16725, "node_name": "v", "Dec": "a byte value to be written ."}{"idx": 16727, "node_name": "v", "Dec": "a short to be written ."}{"idx": 16729, "node_name": "v", "Dec": "a char value to be written ."}{"idx": 16731, "node_name": "v", "Dec": "an int to be written ."}{"idx": 16733, "node_name": "v", "Dec": "a long to be written ."}{"idx": 16735, "node_name": "v", "Dec": "a float value to be written ."}{"idx": 16737, "node_name": "v", "Dec": "a double value to be written ."}{"idx": 16739, "node_name": "s", "Dec": "a string of bytes to be written ."}{"idx": 16741, "node_name": "s", "Dec": "a string value to be written ."}{"idx": 16743, "node_name": "str", "Dec": "a string to be written ."}{"idx": 16748, "node_name": "s", "Dec": "the detail message ."}{"idx": 16751, "node_name": "out", "Dec": "the stream to write the object to"}{"idx": 16753, "node_name": "in", "Dec": "the stream to read data from in order to restore the object"}{"idx": 16760, "node_name": "pathname", "Dec": "a pathname string"}{"idx": 16762, "node_name": "parent", "Dec": "the parent pathname string"}{"idx": 16763, "node_name": "child", "Dec": "the child pathname string"}{"idx": 16765, "node_name": "parent", "Dec": "the parent abstract pathname"}{"idx": 16766, "node_name": "child", "Dec": "the child pathname string"}{"idx": 16768, "node_name": "uri", "Dec": "an absolute , hierarchical uri with a scheme equal to \" file \" , a non-empty path component , and undefined authority , query , and fragment components"}{"idx": 16792, "node_name": "filter", "Dec": "a filename filter"}{"idx": 16795, "node_name": "filter", "Dec": "a filename filter"}{"idx": 16797, "node_name": "filter", "Dec": "a file filter"}{"idx": 16801, "node_name": "dest", "Dec": "the new abstract pathname for the named file"}{"idx": 16803, "node_name": "time", "Dec": "the new last-modified time , measured in milliseconds since the epoch ( 00:00 : 00 gmt , january 1 , 1970 )"}{"idx": 16806, "node_name": "writable", "Dec": "if true , sets the access permission to allow write operations ; if false to disallow write operations"}{"idx": 16807, "node_name": "owneronly", "Dec": "if true , the write permission applies only to the owner's write permission ; otherwise , it applies to everybody . if the underlying file system can not distinguish the owner's write permission from that of others , then the permission will apply to everybody , regardless of this value ."}{"idx": 16809, "node_name": "writable", "Dec": "if true , sets the access permission to allow write operations ; if false to disallow write operations"}{"idx": 16811, "node_name": "readable", "Dec": "if true , sets the access permission to allow read operations ; if false to disallow read operations"}{"idx": 16812, "node_name": "owneronly", "Dec": "if true , the read permission applies only to the owner's read permission ; otherwise , it applies to everybody . if the underlying file system can not distinguish the owner's read permission from that of others , then the permission will apply to everybody , regardless of this value ."}{"idx": 16814, "node_name": "readable", "Dec": "if true , sets the access permission to allow read operations ; if false to disallow read operations"}{"idx": 16816, "node_name": "executable", "Dec": "if true , sets the access permission to allow execute operations ; if false to disallow execute operations"}{"idx": 16817, "node_name": "owneronly", "Dec": "if true , the execute permission applies only to the owner's execute permission ; otherwise , it applies to everybody . if the underlying file system can not distinguish the owner's execute permission from that of others , then the permission will apply to everybody , regardless of this value ."}{"idx": 16819, "node_name": "executable", "Dec": "if true , sets the access permission to allow execute operations ; if false to disallow execute operations"}{"idx": 16826, "node_name": "prefix", "Dec": "the prefix string to be used in generating the file's name ; must be at least three characters long"}{"idx": 16827, "node_name": "suffix", "Dec": "the suffix string to be used in generating the file's name ; may be null , in which case the suffix \" .tmp \" will be used"}{"idx": 16828, "node_name": "directory", "Dec": "the directory in which the file is to be created , or null if the default temporary-file directory is to be used"}{"idx": 16830, "node_name": "prefix", "Dec": "the prefix string to be used in generating the file's name ; must be at least three characters long"}{"idx": 16831, "node_name": "suffix", "Dec": "the suffix string to be used in generating the file's name ; may be null , in which case the suffix \" .tmp \" will be used"}{"idx": 16833, "node_name": "pathname", "Dec": "the abstract pathname to be compared to this abstract pathname"}{"idx": 16835, "node_name": "obj", "Dec": "the object to be compared with this abstract pathname"}{"idx": 16848, "node_name": "pathname", "Dec": "the abstract pathname to be tested"}{"idx": 16851, "node_name": "name", "Dec": "the system-dependent file name ."}{"idx": 16853, "node_name": "file", "Dec": "the file to be opened for reading ."}{"idx": 16855, "node_name": "fdobj", "Dec": "the file descriptor to be opened for reading ."}{"idx": 16858, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16860, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16861, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 16862, "node_name": "len", "Dec": "the maximum number of bytes read ."}{"idx": 16864, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 16871, "node_name": "dir", "Dec": "the directory in which the file was found ."}{"idx": 16872, "node_name": "name", "Dec": "the name of the file ."}{"idx": 16876, "node_name": "s", "Dec": "the detail message ."}{"idx": 16879, "node_name": "name", "Dec": "the system-dependent filename"}{"idx": 16881, "node_name": "name", "Dec": "the system-dependent file name"}{"idx": 16882, "node_name": "append", "Dec": "if true , then bytes will be written to the end of the file rather than the beginning"}{"idx": 16884, "node_name": "file", "Dec": "the file to be opened for writing ."}{"idx": 16886, "node_name": "file", "Dec": "the file to be opened for writing ."}{"idx": 16887, "node_name": "append", "Dec": "if true , then bytes will be written to the end of the file rather than the beginning"}{"idx": 16889, "node_name": "fdobj", "Dec": "the file descriptor to be opened for writing"}{"idx": 16891, "node_name": "b", "Dec": "the byte to be written ."}{"idx": 16893, "node_name": "b", "Dec": "the data ."}{"idx": 16895, "node_name": "b", "Dec": "the data ."}{"idx": 16896, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 16897, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 16903, "node_name": "path", "Dec": "the pathname of the file / directory ."}{"idx": 16904, "node_name": "actions", "Dec": "the action string ."}{"idx": 16906, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 16908, "node_name": "obj", "Dec": "the object we are testing for equality with this object ."}{"idx": 16914, "node_name": "filename", "Dec": "the name of the file to read"}{"idx": 16916, "node_name": "file", "Dec": "the file to read"}{"idx": 16918, "node_name": "fd", "Dec": "the filedescriptor to read"}{"idx": 16920, "node_name": "filename", "Dec": "the name of the file to read"}{"idx": 16921, "node_name": "charset", "Dec": "the charset"}{"idx": 16923, "node_name": "file", "Dec": "the file to read"}{"idx": 16924, "node_name": "charset", "Dec": "the charset"}{"idx": 16927, "node_name": "filename", "Dec": "string the system-dependent filename ."}{"idx": 16929, "node_name": "filename", "Dec": "string the system-dependent filename ."}{"idx": 16930, "node_name": "append", "Dec": "boolean if true , then data will be written to the end of the file rather than the beginning ."}{"idx": 16932, "node_name": "file", "Dec": "the file to write ."}{"idx": 16934, "node_name": "file", "Dec": "the file to write"}{"idx": 16935, "node_name": "append", "Dec": "if true , then bytes will be written to the end of the file rather than the beginning"}{"idx": 16937, "node_name": "fd", "Dec": "the filedescriptor to write ."}{"idx": 16939, "node_name": "filename", "Dec": "the name of the file to write"}{"idx": 16940, "node_name": "charset", "Dec": "the charset"}{"idx": 16942, "node_name": "filename", "Dec": "the name of the file to write"}{"idx": 16943, "node_name": "charset", "Dec": "the charset"}{"idx": 16944, "node_name": "append", "Dec": "a boolean . if true , the writer will write the data to the end of the file rather than the beginning ."}{"idx": 16946, "node_name": "file", "Dec": "the file to write"}{"idx": 16947, "node_name": "charset", "Dec": "the charset"}{"idx": 16949, "node_name": "file", "Dec": "the file to write"}{"idx": 16950, "node_name": "charset", "Dec": "the charset"}{"idx": 16951, "node_name": "append", "Dec": "a boolean . if true , the writer will write the data to the end of the file rather than the beginning ."}{"idx": 16955, "node_name": "in", "Dec": "the underlying input stream , or null if this instance is to be created without an underlying stream ."}{"idx": 16958, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16960, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 16961, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 16962, "node_name": "len", "Dec": "the maximum number of bytes read ."}{"idx": 16964, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 16968, "node_name": "readlimit", "Dec": "the maximum limit of bytes that can be read before the mark position becomes invalid ."}{"idx": 16974, "node_name": "out", "Dec": "the underlying output stream to be assigned to the field this.out for later use , or null if this instance is to be created without an underlying stream ."}{"idx": 16976, "node_name": "b", "Dec": "the byte ."}{"idx": 16978, "node_name": "b", "Dec": "the data to be written ."}{"idx": 16980, "node_name": "b", "Dec": "the data ."}{"idx": 16981, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 16982, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 16988, "node_name": "in", "Dec": "a reader object providing the underlying stream ."}{"idx": 16991, "node_name": "cbuf", "Dec": "destination buffer"}{"idx": 16992, "node_name": "off", "Dec": "offset at which to start storing characters"}{"idx": 16993, "node_name": "len", "Dec": "maximum number of characters to read"}{"idx": 16995, "node_name": "n", "Dec": "the number of characters to skip"}{"idx": 16999, "node_name": "readaheadlimit", "Dec": "limit on the number of characters that may be read while still preserving the mark . after reading this many characters , attempting to reset the stream may fail ."}{"idx": 17004, "node_name": "out", "Dec": "a writer object to provide the underlying stream ."}{"idx": 17006, "node_name": "c", "Dec": "int specifying a character to be written"}{"idx": 17008, "node_name": "cbuf", "Dec": "buffer of characters to be written"}{"idx": 17009, "node_name": "off", "Dec": "offset from which to start reading characters"}{"idx": 17010, "node_name": "len", "Dec": "number of characters to be written"}{"idx": 17012, "node_name": "str", "Dec": "string to be written"}{"idx": 17013, "node_name": "off", "Dec": "offset from which to start reading characters"}{"idx": 17014, "node_name": "len", "Dec": "number of characters to be written"}{"idx": 17023, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 17025, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 17026, "node_name": "off", "Dec": "the start offset in array b at which the data is written ."}{"idx": 17027, "node_name": "len", "Dec": "the maximum number of bytes to read ."}{"idx": 17030, "node_name": "len", "Dec": "the maximum number of bytes to read"}{"idx": 17032, "node_name": "b", "Dec": "the byte array into which the data is read"}{"idx": 17033, "node_name": "off", "Dec": "the start offset in b at which the data is written"}{"idx": 17034, "node_name": "len", "Dec": "the maximum number of bytes to read"}{"idx": 17036, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 17038, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 17042, "node_name": "readlimit", "Dec": "the maximum limit of bytes that can be read before the mark position becomes invalid ."}{"idx": 17046, "node_name": "out", "Dec": "the output stream , non-null"}{"idx": 17049, "node_name": "in", "Dec": "an inputstream"}{"idx": 17051, "node_name": "in", "Dec": "an inputstream"}{"idx": 17052, "node_name": "charsetname", "Dec": "the name of a supported charset"}{"idx": 17054, "node_name": "in", "Dec": "an inputstream"}{"idx": 17055, "node_name": "cs", "Dec": "a charset"}{"idx": 17057, "node_name": "in", "Dec": "an inputstream"}{"idx": 17058, "node_name": "dec", "Dec": "a charset decoder"}{"idx": 17062, "node_name": "cbuf", "Dec": "destination buffer"}{"idx": 17063, "node_name": "offset", "Dec": "offset at which to start storing characters"}{"idx": 17064, "node_name": "length", "Dec": "maximum number of characters to read"}{"idx": 17070, "node_name": "s", "Dec": "the detail message ."}{"idx": 17074, "node_name": "reason", "Dec": "string describing the reason for the exception ."}{"idx": 17076, "node_name": "cname", "Dec": "a string naming the invalid class ."}{"idx": 17077, "node_name": "reason", "Dec": "a string describing the reason for the exception ."}{"idx": 17081, "node_name": "reason", "Dec": "detailed message explaining the reason for the failure ."}{"idx": 17084, "node_name": "cause", "Dec": "the cause of this error , or null if the cause is not known"}{"idx": 17088, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method )"}{"idx": 17090, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method )"}{"idx": 17091, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 17093, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 17097, "node_name": "in", "Dec": "a reader object to provide the underlying stream"}{"idx": 17099, "node_name": "in", "Dec": "a reader object to provide the underlying stream"}{"idx": 17100, "node_name": "sz", "Dec": "an int specifying the size of the buffer"}{"idx": 17102, "node_name": "linenumber", "Dec": "an int specifying the line number"}{"idx": 17106, "node_name": "cbuf", "Dec": "destination buffer"}{"idx": 17107, "node_name": "off", "Dec": "offset at which to start storing characters"}{"idx": 17108, "node_name": "len", "Dec": "maximum number of characters to read"}{"idx": 17111, "node_name": "n", "Dec": "the number of characters to skip"}{"idx": 17113, "node_name": "readaheadlimit", "Dec": "limit on the number of characters that may be read while still preserving the mark . after reading this many characters , attempting to reset the stream may fail ."}{"idx": 17117, "node_name": "reason", "Dec": "a string describing the reason for the exception ."}{"idx": 17121, "node_name": "classname", "Dec": "class of the instance being serialized / deserialized ."}{"idx": 17127, "node_name": "b", "Dec": "the buffer into which the data is read"}{"idx": 17129, "node_name": "b", "Dec": "the buffer into which the data is read"}{"idx": 17130, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 17131, "node_name": "len", "Dec": "the maximum number of bytes read"}{"idx": 17133, "node_name": "n", "Dec": "the number of bytes to be skipped"}{"idx": 17139, "node_name": "filter", "Dec": "the serialization filter to set as the system-wide filter ; not null"}{"idx": 17141, "node_name": "pattern", "Dec": "the pattern string to parse ; not null"}{"idx": 17150, "node_name": "filterinfo", "Dec": "provides information about the current object being deserialized , if any , and the status of the objectinputstream"}{"idx": 17154, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 17159, "node_name": "name", "Dec": "the name of the field"}{"idx": 17161, "node_name": "name", "Dec": "the name of the field"}{"idx": 17162, "node_name": "val", "Dec": "the default value to use if name does not have a value"}{"idx": 17164, "node_name": "name", "Dec": "the name of the field"}{"idx": 17165, "node_name": "val", "Dec": "the default value to use if name does not have a value"}{"idx": 17167, "node_name": "name", "Dec": "the name of the field"}{"idx": 17168, "node_name": "val", "Dec": "the default value to use if name does not have a value"}{"idx": 17170, "node_name": "name", "Dec": "the name of the field"}{"idx": 17171, "node_name": "val", "Dec": "the default value to use if name does not have a value"}{"idx": 17173, "node_name": "name", "Dec": "the name of the field"}{"idx": 17174, "node_name": "val", "Dec": "the default value to use if name does not have a value"}{"idx": 17176, "node_name": "name", "Dec": "the name of the field"}{"idx": 17177, "node_name": "val", "Dec": "the default value to use if name does not have a value"}{"idx": 17179, "node_name": "name", "Dec": "the name of the field"}{"idx": 17180, "node_name": "val", "Dec": "the default value to use if name does not have a value"}{"idx": 17182, "node_name": "name", "Dec": "the name of the field"}{"idx": 17183, "node_name": "val", "Dec": "the default value to use if name does not have a value"}{"idx": 17185, "node_name": "name", "Dec": "the name of the field"}{"idx": 17186, "node_name": "val", "Dec": "the default value to use if name does not have a value"}{"idx": 17189, "node_name": "in", "Dec": "input stream to read from"}{"idx": 17197, "node_name": "obj", "Dec": "the object to receive the validation callback ."}{"idx": 17198, "node_name": "prio", "Dec": "controls the order of callbacks ; zero is a good default . use higher numbers to be called back earlier , lower numbers for later callbacks . within a priority , callbacks are processed in no particular order ."}{"idx": 17200, "node_name": "desc", "Dec": "an instance of class objectstreamclass"}{"idx": 17202, "node_name": "interfaces", "Dec": "the list of interface names that were deserialized in the proxy class descriptor"}{"idx": 17204, "node_name": "obj", "Dec": "object to be substituted"}{"idx": 17206, "node_name": "enable", "Dec": "true for enabling use of resolveobject for every object being deserialized"}{"idx": 17211, "node_name": "buf", "Dec": "the buffer into which the data is read"}{"idx": 17212, "node_name": "off", "Dec": "the start offset in the destination array buf"}{"idx": 17213, "node_name": "len", "Dec": "the maximum number of bytes read"}{"idx": 17227, "node_name": "buf", "Dec": "the buffer into which the data is read"}{"idx": 17229, "node_name": "buf", "Dec": "the buffer into which the data is read"}{"idx": 17230, "node_name": "off", "Dec": "the start offset into the data array buf"}{"idx": 17231, "node_name": "len", "Dec": "the maximum number of bytes to read"}{"idx": 17233, "node_name": "len", "Dec": "the number of bytes to be skipped"}{"idx": 17237, "node_name": "filter", "Dec": "the filter , may be null"}{"idx": 17242, "node_name": "obj", "Dec": "the object to be written"}{"idx": 17244, "node_name": "b", "Dec": "the byte"}{"idx": 17246, "node_name": "b", "Dec": "the data to be written"}{"idx": 17248, "node_name": "b", "Dec": "the data to be written"}{"idx": 17249, "node_name": "off", "Dec": "the start offset in the data"}{"idx": 17250, "node_name": "len", "Dec": "the number of bytes that are written"}{"idx": 17255, "node_name": "out", "Dec": "output stream to write to"}{"idx": 17258, "node_name": "version", "Dec": "use protocolversion from java.io.objectstreamconstants ."}{"idx": 17260, "node_name": "obj", "Dec": "the object to be written"}{"idx": 17262, "node_name": "obj", "Dec": "object to be written to the underlying stream"}{"idx": 17264, "node_name": "obj", "Dec": "object to write to stream"}{"idx": 17270, "node_name": "cl", "Dec": "the class to annotate custom data for"}{"idx": 17272, "node_name": "cl", "Dec": "the proxy class to annotate custom data for"}{"idx": 17274, "node_name": "obj", "Dec": "the object to be replaced"}{"idx": 17276, "node_name": "enable", "Dec": "true for enabling use of replaceobject for every object being serialized"}{"idx": 17279, "node_name": "desc", "Dec": "class descriptor to write to the stream"}{"idx": 17281, "node_name": "val", "Dec": "the byte to be written to the stream"}{"idx": 17283, "node_name": "buf", "Dec": "the data to be written"}{"idx": 17285, "node_name": "buf", "Dec": "the data to be written"}{"idx": 17286, "node_name": "off", "Dec": "the start offset in the data"}{"idx": 17287, "node_name": "len", "Dec": "the number of bytes that are written"}{"idx": 17292, "node_name": "val", "Dec": "the boolean to be written"}{"idx": 17294, "node_name": "val", "Dec": "the byte value to be written"}{"idx": 17296, "node_name": "val", "Dec": "the short value to be written"}{"idx": 17298, "node_name": "val", "Dec": "the char value to be written"}{"idx": 17300, "node_name": "val", "Dec": "the integer value to be written"}{"idx": 17302, "node_name": "val", "Dec": "the long value to be written"}{"idx": 17304, "node_name": "val", "Dec": "the float value to be written"}{"idx": 17306, "node_name": "val", "Dec": "the double value to be written"}{"idx": 17308, "node_name": "str", "Dec": "the string of bytes to be written"}{"idx": 17310, "node_name": "str", "Dec": "the string of chars to be written"}{"idx": 17312, "node_name": "str", "Dec": "the string to be written"}{"idx": 17316, "node_name": "name", "Dec": "the name of the serializable field"}{"idx": 17317, "node_name": "val", "Dec": "the value to assign to the field"}{"idx": 17319, "node_name": "name", "Dec": "the name of the serializable field"}{"idx": 17320, "node_name": "val", "Dec": "the value to assign to the field"}{"idx": 17322, "node_name": "name", "Dec": "the name of the serializable field"}{"idx": 17323, "node_name": "val", "Dec": "the value to assign to the field"}{"idx": 17325, "node_name": "name", "Dec": "the name of the serializable field"}{"idx": 17326, "node_name": "val", "Dec": "the value to assign to the field"}{"idx": 17328, "node_name": "name", "Dec": "the name of the serializable field"}{"idx": 17329, "node_name": "val", "Dec": "the value to assign to the field"}{"idx": 17331, "node_name": "name", "Dec": "the name of the serializable field"}{"idx": 17332, "node_name": "val", "Dec": "the value to assign to the field"}{"idx": 17334, "node_name": "name", "Dec": "the name of the serializable field"}{"idx": 17335, "node_name": "val", "Dec": "the value to assign to the field"}{"idx": 17337, "node_name": "name", "Dec": "the name of the serializable field"}{"idx": 17338, "node_name": "val", "Dec": "the value to assign to the field"}{"idx": 17340, "node_name": "name", "Dec": "the name of the serializable field"}{"idx": 17341, "node_name": "val", "Dec": "the value to assign to the field ( which may be null )"}{"idx": 17345, "node_name": "cl", "Dec": "class for which to get the descriptor"}{"idx": 17347, "node_name": "cl", "Dec": "class for which to get the descriptor"}{"idx": 17353, "node_name": "name", "Dec": "the name of the data field to look for"}{"idx": 17388, "node_name": "message", "Dec": "the detailed message for the exception"}{"idx": 17392, "node_name": "name", "Dec": "the name of the serializable field"}{"idx": 17393, "node_name": "type", "Dec": "the class object of the serializable field"}{"idx": 17395, "node_name": "name", "Dec": "field name"}{"idx": 17396, "node_name": "type", "Dec": "field type"}{"idx": 17397, "node_name": "unshared", "Dec": "if false , write / read field values in the same manner as writeobject / readobject ; if true , write / read in the same manner as writeunshared / readunshared"}{"idx": 17404, "node_name": "offset", "Dec": "the offset of the field"}{"idx": 17408, "node_name": "obj", "Dec": "the object to be compared ."}{"idx": 17417, "node_name": "b", "Dec": "the byte ."}{"idx": 17419, "node_name": "b", "Dec": "the data ."}{"idx": 17421, "node_name": "b", "Dec": "the data ."}{"idx": 17422, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 17423, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 17428, "node_name": "out", "Dec": "an outputstream"}{"idx": 17429, "node_name": "charsetname", "Dec": "the name of a supported charset"}{"idx": 17431, "node_name": "out", "Dec": "an outputstream"}{"idx": 17433, "node_name": "out", "Dec": "an outputstream"}{"idx": 17434, "node_name": "cs", "Dec": "a charset"}{"idx": 17436, "node_name": "out", "Dec": "an outputstream"}{"idx": 17437, "node_name": "enc", "Dec": "a charset encoder"}{"idx": 17440, "node_name": "c", "Dec": "int specifying a character to be written"}{"idx": 17442, "node_name": "cbuf", "Dec": "buffer of characters"}{"idx": 17443, "node_name": "off", "Dec": "offset from which to start writing characters"}{"idx": 17444, "node_name": "len", "Dec": "number of characters to write"}{"idx": 17446, "node_name": "str", "Dec": "a string"}{"idx": 17447, "node_name": "off", "Dec": "offset from which to start writing characters"}{"idx": 17448, "node_name": "len", "Dec": "number of characters to write"}{"idx": 17456, "node_name": "src", "Dec": "the stream to connect to ."}{"idx": 17458, "node_name": "src", "Dec": "the stream to connect to ."}{"idx": 17459, "node_name": "pipesize", "Dec": "the size of the pipe's buffer ."}{"idx": 17462, "node_name": "pipesize", "Dec": "the size of the pipe's buffer ."}{"idx": 17464, "node_name": "src", "Dec": "the piped output stream to connect to ."}{"idx": 17466, "node_name": "b", "Dec": "the byte being received"}{"idx": 17469, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 17470, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 17471, "node_name": "len", "Dec": "the maximum number of bytes read ."}{"idx": 17476, "node_name": "snk", "Dec": "the piped input stream to connect to ."}{"idx": 17479, "node_name": "snk", "Dec": "the piped input stream to connect to ."}{"idx": 17481, "node_name": "b", "Dec": "the byte to be written ."}{"idx": 17483, "node_name": "b", "Dec": "the data ."}{"idx": 17484, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 17485, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 17490, "node_name": "src", "Dec": "the stream to connect to ."}{"idx": 17492, "node_name": "src", "Dec": "the stream to connect to ."}{"idx": 17493, "node_name": "pipesize", "Dec": "the size of the pipe's buffer ."}{"idx": 17496, "node_name": "pipesize", "Dec": "the size of the pipe's buffer ."}{"idx": 17498, "node_name": "src", "Dec": "the piped writer to connect to ."}{"idx": 17501, "node_name": "cbuf", "Dec": "the buffer into which the data is read ."}{"idx": 17502, "node_name": "off", "Dec": "the start offset of the data ."}{"idx": 17503, "node_name": "len", "Dec": "the maximum number of characters read ."}{"idx": 17508, "node_name": "snk", "Dec": "the piped reader to connect to ."}{"idx": 17511, "node_name": "snk", "Dec": "the piped reader to connect to ."}{"idx": 17513, "node_name": "c", "Dec": "the char to be written ."}{"idx": 17515, "node_name": "cbuf", "Dec": "the data ."}{"idx": 17516, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 17517, "node_name": "len", "Dec": "the number of characters to write ."}{"idx": 17522, "node_name": "out", "Dec": "the output stream to which values and objects will be printed"}{"idx": 17524, "node_name": "out", "Dec": "the output stream to which values and objects will be printed"}{"idx": 17525, "node_name": "autoflush", "Dec": "a boolean ; if true , the output buffer will be flushed whenever a byte array is written , one of the println methods is invoked , or a newline character or byte ( ' \\n ') is written"}{"idx": 17527, "node_name": "out", "Dec": "the output stream to which values and objects will be printed"}{"idx": 17528, "node_name": "autoflush", "Dec": "a boolean ; if true , the output buffer will be flushed whenever a byte array is written , one of the println methods is invoked , or a newline character or byte ( ' \\n ') is written"}{"idx": 17529, "node_name": "encoding", "Dec": "the name of a supported character encoding"}{"idx": 17531, "node_name": "out", "Dec": "the output stream to which values and objects will be printed"}{"idx": 17532, "node_name": "autoflush", "Dec": "a boolean ; if true , the output buffer will be flushed whenever a byte array is written , one of the println methods is invoked , or a newline character or byte ( ' \\n ') is written"}{"idx": 17533, "node_name": "charset", "Dec": "a charset"}{"idx": 17535, "node_name": "filename", "Dec": "the name of the file to use as the destination of this print stream . if the file exists , then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17537, "node_name": "filename", "Dec": "the name of the file to use as the destination of this print stream . if the file exists , then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17538, "node_name": "csn", "Dec": "the name of a supported charset"}{"idx": 17540, "node_name": "filename", "Dec": "the name of the file to use as the destination of this print stream . if the file exists , then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17541, "node_name": "charset", "Dec": "a charset"}{"idx": 17543, "node_name": "file", "Dec": "the file to use as the destination of this print stream . if the file exists , then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17545, "node_name": "file", "Dec": "the file to use as the destination of this print stream . if the file exists , then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17546, "node_name": "csn", "Dec": "the name of a supported charset"}{"idx": 17548, "node_name": "file", "Dec": "the file to use as the destination of this print stream . if the file exists , then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17549, "node_name": "charset", "Dec": "a charset"}{"idx": 17556, "node_name": "b", "Dec": "the byte to be written"}{"idx": 17558, "node_name": "buf", "Dec": "a byte array"}{"idx": 17559, "node_name": "off", "Dec": "offset from which to start taking bytes"}{"idx": 17560, "node_name": "len", "Dec": "number of bytes to write"}{"idx": 17562, "node_name": "b", "Dec": "the boolean to be printed"}{"idx": 17564, "node_name": "c", "Dec": "the char to be printed"}{"idx": 17566, "node_name": "i", "Dec": "the int to be printed"}{"idx": 17568, "node_name": "l", "Dec": "the long to be printed"}{"idx": 17570, "node_name": "f", "Dec": "the float to be printed"}{"idx": 17572, "node_name": "d", "Dec": "the double to be printed"}{"idx": 17574, "node_name": "s", "Dec": "the array of chars to be printed"}{"idx": 17576, "node_name": "s", "Dec": "the string to be printed"}{"idx": 17578, "node_name": "obj", "Dec": "the object to be printed"}{"idx": 17581, "node_name": "x", "Dec": "the boolean to be printed"}{"idx": 17583, "node_name": "x", "Dec": "the char to be printed ."}{"idx": 17585, "node_name": "x", "Dec": "the int to be printed ."}{"idx": 17587, "node_name": "x", "Dec": "a the long to be printed ."}{"idx": 17589, "node_name": "x", "Dec": "the float to be printed ."}{"idx": 17591, "node_name": "x", "Dec": "the double to be printed ."}{"idx": 17593, "node_name": "x", "Dec": "an array of chars to print ."}{"idx": 17595, "node_name": "x", "Dec": "the string to be printed ."}{"idx": 17597, "node_name": "x", "Dec": "the object to be printed ."}{"idx": 17599, "node_name": "format", "Dec": "a format string as described in format string syntax"}{"idx": 17600, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 17602, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 17603, "node_name": "format", "Dec": "a format string as described in format string syntax"}{"idx": 17604, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 17606, "node_name": "format", "Dec": "a format string as described in format string syntax"}{"idx": 17607, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 17609, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 17610, "node_name": "format", "Dec": "a format string as described in format string syntax"}{"idx": 17611, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 17613, "node_name": "csq", "Dec": "the character sequence to append . if csq is null , then the four characters \" null \" are appended to this output stream ."}{"idx": 17615, "node_name": "csq", "Dec": "the character sequence from which a subsequence will be appended . if csq is null , then characters will be appended as if csq contained the four characters \" null \" ."}{"idx": 17616, "node_name": "start", "Dec": "the index of the first character in the subsequence"}{"idx": 17617, "node_name": "end", "Dec": "the index of the character following the last character in the subsequence"}{"idx": 17619, "node_name": "c", "Dec": "the 16-bit character to append"}{"idx": 17623, "node_name": "out", "Dec": "a character-output stream"}{"idx": 17625, "node_name": "out", "Dec": "a character-output stream"}{"idx": 17626, "node_name": "autoflush", "Dec": "a boolean ; if true , the println , printf , or format methods will flush the output buffer"}{"idx": 17628, "node_name": "out", "Dec": "an output stream"}{"idx": 17630, "node_name": "out", "Dec": "an output stream"}{"idx": 17631, "node_name": "autoflush", "Dec": "a boolean ; if true , the println , printf , or format methods will flush the output buffer"}{"idx": 17633, "node_name": "out", "Dec": "an output stream"}{"idx": 17634, "node_name": "autoflush", "Dec": "a boolean ; if true , the println , printf , or format methods will flush the output buffer"}{"idx": 17635, "node_name": "charset", "Dec": "a charset"}{"idx": 17637, "node_name": "filename", "Dec": "the name of the file to use as the destination of this writer . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17639, "node_name": "filename", "Dec": "the name of the file to use as the destination of this writer . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17640, "node_name": "csn", "Dec": "the name of a supported charset"}{"idx": 17642, "node_name": "filename", "Dec": "the name of the file to use as the destination of this writer . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17643, "node_name": "charset", "Dec": "a charset"}{"idx": 17645, "node_name": "file", "Dec": "the file to use as the destination of this writer . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17647, "node_name": "file", "Dec": "the file to use as the destination of this writer . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17648, "node_name": "csn", "Dec": "the name of a supported charset"}{"idx": 17650, "node_name": "file", "Dec": "the file to use as the destination of this writer . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 17651, "node_name": "charset", "Dec": "a charset"}{"idx": 17658, "node_name": "c", "Dec": "int specifying a character to be written ."}{"idx": 17660, "node_name": "buf", "Dec": "array of characters"}{"idx": 17661, "node_name": "off", "Dec": "offset from which to start writing characters"}{"idx": 17662, "node_name": "len", "Dec": "number of characters to write"}{"idx": 17664, "node_name": "buf", "Dec": "array of characters to be written"}{"idx": 17666, "node_name": "s", "Dec": "a string"}{"idx": 17667, "node_name": "off", "Dec": "offset from which to start writing characters"}{"idx": 17668, "node_name": "len", "Dec": "number of characters to write"}{"idx": 17670, "node_name": "s", "Dec": "string to be written"}{"idx": 17672, "node_name": "b", "Dec": "the boolean to be printed"}{"idx": 17674, "node_name": "c", "Dec": "the char to be printed"}{"idx": 17676, "node_name": "i", "Dec": "the int to be printed"}{"idx": 17678, "node_name": "l", "Dec": "the long to be printed"}{"idx": 17680, "node_name": "f", "Dec": "the float to be printed"}{"idx": 17682, "node_name": "d", "Dec": "the double to be printed"}{"idx": 17684, "node_name": "s", "Dec": "the array of chars to be printed"}{"idx": 17686, "node_name": "s", "Dec": "the string to be printed"}{"idx": 17688, "node_name": "obj", "Dec": "the object to be printed"}{"idx": 17691, "node_name": "x", "Dec": "the boolean value to be printed"}{"idx": 17693, "node_name": "x", "Dec": "the char value to be printed"}{"idx": 17695, "node_name": "x", "Dec": "the int value to be printed"}{"idx": 17697, "node_name": "x", "Dec": "the long value to be printed"}{"idx": 17699, "node_name": "x", "Dec": "the float value to be printed"}{"idx": 17701, "node_name": "x", "Dec": "the double value to be printed"}{"idx": 17703, "node_name": "x", "Dec": "the array of char values to be printed"}{"idx": 17705, "node_name": "x", "Dec": "the string value to be printed"}{"idx": 17707, "node_name": "x", "Dec": "the object to be printed ."}{"idx": 17709, "node_name": "format", "Dec": "a format string as described in format string syntax ."}{"idx": 17710, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 17712, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 17713, "node_name": "format", "Dec": "a format string as described in format string syntax ."}{"idx": 17714, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 17716, "node_name": "format", "Dec": "a format string as described in format string syntax ."}{"idx": 17717, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 17719, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 17720, "node_name": "format", "Dec": "a format string as described in format string syntax ."}{"idx": 17721, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 17723, "node_name": "csq", "Dec": "the character sequence to append . if csq is null , then the four characters \" null \" are appended to this writer ."}{"idx": 17725, "node_name": "csq", "Dec": "the character sequence from which a subsequence will be appended . if csq is null , then characters will be appended as if csq contained the four characters \" null \" ."}{"idx": 17726, "node_name": "start", "Dec": "the index of the first character in the subsequence"}{"idx": 17727, "node_name": "end", "Dec": "the index of the character following the last character in the subsequence"}{"idx": 17729, "node_name": "c", "Dec": "the 16-bit character to append"}{"idx": 17734, "node_name": "in", "Dec": "the input stream from which bytes will be read ."}{"idx": 17735, "node_name": "size", "Dec": "the size of the pushback buffer ."}{"idx": 17737, "node_name": "in", "Dec": "the input stream from which bytes will be read ."}{"idx": 17740, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 17741, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 17742, "node_name": "len", "Dec": "the maximum number of bytes read ."}{"idx": 17744, "node_name": "b", "Dec": "the int value whose low-order byte is to be pushed back ."}{"idx": 17746, "node_name": "b", "Dec": "the byte array to push back ."}{"idx": 17747, "node_name": "off", "Dec": "the start offset of the data ."}{"idx": 17748, "node_name": "len", "Dec": "the number of bytes to push back ."}{"idx": 17750, "node_name": "b", "Dec": "the byte array to push back"}{"idx": 17753, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 17756, "node_name": "readlimit", "Dec": "the maximum limit of bytes that can be read before the mark position becomes invalid ."}{"idx": 17761, "node_name": "in", "Dec": "the reader from which characters will be read"}{"idx": 17762, "node_name": "size", "Dec": "the size of the pushback buffer"}{"idx": 17764, "node_name": "in", "Dec": "the reader from which characters will be read"}{"idx": 17767, "node_name": "cbuf", "Dec": "destination buffer"}{"idx": 17768, "node_name": "off", "Dec": "offset at which to start writing characters"}{"idx": 17769, "node_name": "len", "Dec": "maximum number of characters to read"}{"idx": 17771, "node_name": "c", "Dec": "the int value representing a character to be pushed back"}{"idx": 17773, "node_name": "cbuf", "Dec": "character array"}{"idx": 17774, "node_name": "off", "Dec": "offset of first character to push back"}{"idx": 17775, "node_name": "len", "Dec": "number of characters to push back"}{"idx": 17777, "node_name": "cbuf", "Dec": "character array to push back"}{"idx": 17780, "node_name": "readaheadlimit", "Dec": "limit on the number of characters that may be read while still preserving the mark . after reading this many characters , attempting to reset the stream may fail ."}{"idx": 17785, "node_name": "n", "Dec": "the number of characters to skip"}{"idx": 17788, "node_name": "name", "Dec": "the system-dependent filename"}{"idx": 17789, "node_name": "mode", "Dec": "the access mode"}{"idx": 17791, "node_name": "file", "Dec": "the file object"}{"idx": 17792, "node_name": "mode", "Dec": "the access mode , as described above"}{"idx": 17797, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 17798, "node_name": "off", "Dec": "the start offset in array b at which the data is written ."}{"idx": 17799, "node_name": "len", "Dec": "the maximum number of bytes read ."}{"idx": 17801, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 17803, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 17805, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 17806, "node_name": "off", "Dec": "the start offset into the data array b ."}{"idx": 17807, "node_name": "len", "Dec": "the number of bytes to read ."}{"idx": 17809, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 17811, "node_name": "b", "Dec": "the byte to be written ."}{"idx": 17813, "node_name": "b", "Dec": "the data ."}{"idx": 17815, "node_name": "b", "Dec": "the data ."}{"idx": 17816, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 17817, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 17820, "node_name": "pos", "Dec": "the offset position , measured in bytes from the beginning of the file , at which to set the file pointer ."}{"idx": 17823, "node_name": "newlength", "Dec": "the desired length of the file"}{"idx": 17838, "node_name": "v", "Dec": "a boolean value to be written ."}{"idx": 17840, "node_name": "v", "Dec": "a byte value to be written ."}{"idx": 17842, "node_name": "v", "Dec": "a short to be written ."}{"idx": 17844, "node_name": "v", "Dec": "a char value to be written ."}{"idx": 17846, "node_name": "v", "Dec": "an int to be written ."}{"idx": 17848, "node_name": "v", "Dec": "a long to be written ."}{"idx": 17850, "node_name": "v", "Dec": "a float value to be written ."}{"idx": 17852, "node_name": "v", "Dec": "a double value to be written ."}{"idx": 17854, "node_name": "s", "Dec": "a string of bytes to be written ."}{"idx": 17856, "node_name": "s", "Dec": "a string value to be written ."}{"idx": 17858, "node_name": "str", "Dec": "a string to be written ."}{"idx": 17863, "node_name": "lock", "Dec": "the object to synchronize on ."}{"idx": 17866, "node_name": "target", "Dec": "the buffer to read characters into"}{"idx": 17869, "node_name": "cbuf", "Dec": "destination buffer"}{"idx": 17871, "node_name": "cbuf", "Dec": "destination buffer"}{"idx": 17872, "node_name": "off", "Dec": "offset at which to start storing characters"}{"idx": 17873, "node_name": "len", "Dec": "maximum number of characters to read"}{"idx": 17875, "node_name": "n", "Dec": "the number of characters to skip"}{"idx": 17879, "node_name": "readaheadlimit", "Dec": "limit on the number of characters that may be read while still preserving the mark . after reading this many characters , attempting to reset the stream may fail ."}{"idx": 17883, "node_name": "out", "Dec": "the writer , non-null"}{"idx": 17886, "node_name": "e", "Dec": "an enumeration of input streams ."}{"idx": 17888, "node_name": "s1", "Dec": "the first input stream to read ."}{"idx": 17889, "node_name": "s2", "Dec": "the second input stream to read ."}{"idx": 17893, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 17894, "node_name": "off", "Dec": "the start offset in array b at which the data is written ."}{"idx": 17895, "node_name": "len", "Dec": "the maximum number of bytes read ."}{"idx": 17900, "node_name": "name", "Dec": "the name of the serializablepermission ."}{"idx": 17902, "node_name": "name", "Dec": "the name of the serializablepermission ."}{"idx": 17903, "node_name": "actions", "Dec": "currently unused and must be set to null"}{"idx": 17906, "node_name": "reason", "Dec": "string describing the reason for the exception ."}{"idx": 17917, "node_name": "r", "Dec": "a reader object providing the input stream ."}{"idx": 17920, "node_name": "low", "Dec": "the low end of the range ."}{"idx": 17921, "node_name": "hi", "Dec": "the high end of the range ."}{"idx": 17923, "node_name": "low", "Dec": "the low end of the range ."}{"idx": 17924, "node_name": "hi", "Dec": "the high end of the range ."}{"idx": 17926, "node_name": "low", "Dec": "the low end of the range ."}{"idx": 17927, "node_name": "hi", "Dec": "the high end of the range ."}{"idx": 17929, "node_name": "ch", "Dec": "the character ."}{"idx": 17931, "node_name": "ch", "Dec": "the character ."}{"idx": 17933, "node_name": "ch", "Dec": "the character ."}{"idx": 17936, "node_name": "flag", "Dec": "true indicates that end-of-line characters are separate tokens ; false indicates that end-of-line characters are white space ."}{"idx": 17938, "node_name": "flag", "Dec": "true indicates to recognize and ignore c-style comments ."}{"idx": 17940, "node_name": "flag", "Dec": "true indicates to recognize and ignore c++-style comments ."}{"idx": 17942, "node_name": "fl", "Dec": "true indicates that all word tokens should be lowercased ."}{"idx": 17950, "node_name": "s", "Dec": "string providing the character stream ."}{"idx": 17953, "node_name": "cbuf", "Dec": "destination buffer"}{"idx": 17954, "node_name": "off", "Dec": "offset at which to start writing characters"}{"idx": 17955, "node_name": "len", "Dec": "maximum number of characters to read"}{"idx": 17957, "node_name": "ns", "Dec": "the number of characters to skip"}{"idx": 17961, "node_name": "readaheadlimit", "Dec": "limit on the number of characters that may be read while still preserving the mark . because the stream's input comes from a string , there is no actual limit , so this argument must not be negative , but is otherwise ignored ."}{"idx": 17967, "node_name": "initialsize", "Dec": "the number of char values that will fit into this buffer before it is automatically expanded"}{"idx": 17969, "node_name": "c", "Dec": "int specifying a character to be written"}{"idx": 17971, "node_name": "cbuf", "Dec": "array of characters"}{"idx": 17972, "node_name": "off", "Dec": "offset from which to start writing characters"}{"idx": 17973, "node_name": "len", "Dec": "number of characters to write"}{"idx": 17975, "node_name": "str", "Dec": "string to be written"}{"idx": 17977, "node_name": "str", "Dec": "string to be written"}{"idx": 17978, "node_name": "off", "Dec": "offset from which to start writing characters"}{"idx": 17979, "node_name": "len", "Dec": "number of characters to write"}{"idx": 17981, "node_name": "csq", "Dec": "the character sequence to append . if csq is null , then the four characters \" null \" are appended to this writer ."}{"idx": 17983, "node_name": "csq", "Dec": "the character sequence from which a subsequence will be appended . if csq is null , then characters will be appended as if csq contained the four characters \" null \" ."}{"idx": 17984, "node_name": "start", "Dec": "the index of the first character in the subsequence"}{"idx": 17985, "node_name": "end", "Dec": "the index of the character following the last character in the subsequence"}{"idx": 17987, "node_name": "c", "Dec": "the 16-bit character to append"}{"idx": 17994, "node_name": "desc", "Dec": "a string describing the exception ."}{"idx": 17997, "node_name": "message", "Dec": "the detail message , can be null"}{"idx": 17998, "node_name": "cause", "Dec": "the ioexception"}{"idx": 18000, "node_name": "cause", "Dec": "the ioexception"}{"idx": 18005, "node_name": "s", "Dec": "describes the reason for the exception ."}{"idx": 18009, "node_name": "s", "Dec": "the detail message ."}{"idx": 18013, "node_name": "s", "Dec": "string describing the exception ."}{"idx": 18014, "node_name": "ex", "Dec": "exception causing the abort ."}{"idx": 18021, "node_name": "lock", "Dec": "object to synchronize on"}{"idx": 18024, "node_name": "c", "Dec": "int specifying a character to be written"}{"idx": 18026, "node_name": "cbuf", "Dec": "array of characters to be written"}{"idx": 18028, "node_name": "cbuf", "Dec": "array of characters"}{"idx": 18029, "node_name": "off", "Dec": "offset from which to start writing characters"}{"idx": 18030, "node_name": "len", "Dec": "number of characters to write"}{"idx": 18032, "node_name": "str", "Dec": "string to be written"}{"idx": 18034, "node_name": "str", "Dec": "a string"}{"idx": 18035, "node_name": "off", "Dec": "offset from which to start writing characters"}{"idx": 18036, "node_name": "len", "Dec": "number of characters to write"}{"idx": 18038, "node_name": "csq", "Dec": "the character sequence to append . if csq is null , then the four characters \" null \" are appended to this writer ."}{"idx": 18040, "node_name": "csq", "Dec": "the character sequence from which a subsequence will be appended . if csq is null , then characters will be appended as if csq contained the four characters \" null \" ."}{"idx": 18041, "node_name": "start", "Dec": "the index of the first character in the subsequence"}{"idx": 18042, "node_name": "end", "Dec": "the index of the character following the last character in the subsequence"}{"idx": 18044, "node_name": "c", "Dec": "the 16-bit character to append"}{"idx": 18050, "node_name": "s", "Dec": "the detail message ."}{"idx": 18053, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 18059, "node_name": "message", "Dec": "the detail message ."}{"idx": 18061, "node_name": "message", "Dec": "the detail message"}{"idx": 18062, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 18064, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 18067, "node_name": "element", "Dec": "the method object for the annotation element , may be null"}{"idx": 18068, "node_name": "foundtype", "Dec": "the ( erroneous ) type of data found in the annotation . this string may , but is not required to , contain the value as well . the exact format of the string is unspecified , may be null ."}{"idx": 18075, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 18078, "node_name": "annotationtype", "Dec": "the class object for the annotation type"}{"idx": 18079, "node_name": "elementname", "Dec": "the name of the missing element"}{"idx": 18089, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 18093, "node_name": "csq", "Dec": "the character sequence to append . if csq is null , then the four characters \" null \" are appended to this appendable ."}{"idx": 18095, "node_name": "csq", "Dec": "the character sequence from which a subsequence will be appended . if csq is null , then characters will be appended as if csq contained the four characters \" null \" ."}{"idx": 18096, "node_name": "start", "Dec": "the index of the first character in the subsequence"}{"idx": 18097, "node_name": "end", "Dec": "the index of the character following the last character in the subsequence"}{"idx": 18099, "node_name": "c", "Dec": "the character to append"}{"idx": 18103, "node_name": "s", "Dec": "the detail message ."}{"idx": 18107, "node_name": "s", "Dec": "the detail message ."}{"idx": 18109, "node_name": "index", "Dec": "the illegal index ."}{"idx": 18113, "node_name": "s", "Dec": "the detail message ."}{"idx": 18117, "node_name": "detailmessage", "Dec": "value to be used in constructing detail message"}{"idx": 18119, "node_name": "detailmessage", "Dec": "value to be used in constructing detail message"}{"idx": 18121, "node_name": "detailmessage", "Dec": "value to be used in constructing detail message"}{"idx": 18123, "node_name": "detailmessage", "Dec": "value to be used in constructing detail message"}{"idx": 18125, "node_name": "detailmessage", "Dec": "value to be used in constructing detail message"}{"idx": 18127, "node_name": "detailmessage", "Dec": "value to be used in constructing detail message"}{"idx": 18129, "node_name": "detailmessage", "Dec": "value to be used in constructing detail message"}{"idx": 18131, "node_name": "message", "Dec": "the detail message , may be null"}{"idx": 18132, "node_name": "cause", "Dec": "the cause , may be null"}{"idx": 18140, "node_name": "s", "Dec": "the string containing the boolean representation to be parsed"}{"idx": 18143, "node_name": "b", "Dec": "a boolean value ."}{"idx": 18145, "node_name": "s", "Dec": "a string ."}{"idx": 18147, "node_name": "b", "Dec": "the boolean to be converted"}{"idx": 18151, "node_name": "value", "Dec": "the value to hash"}{"idx": 18153, "node_name": "obj", "Dec": "the object to compare with ."}{"idx": 18155, "node_name": "name", "Dec": "the system property name ."}{"idx": 18157, "node_name": "b", "Dec": "the boolean instance to be compared"}{"idx": 18159, "node_name": "x", "Dec": "the first boolean to compare"}{"idx": 18160, "node_name": "y", "Dec": "the second boolean to compare"}{"idx": 18162, "node_name": "a", "Dec": "the first operand"}{"idx": 18163, "node_name": "b", "Dec": "the second operand"}{"idx": 18165, "node_name": "a", "Dec": "the first operand"}{"idx": 18166, "node_name": "b", "Dec": "the second operand"}{"idx": 18168, "node_name": "a", "Dec": "the first operand"}{"idx": 18169, "node_name": "b", "Dec": "the second operand"}{"idx": 18173, "node_name": "s", "Dec": "the detail message ."}{"idx": 18175, "node_name": "s", "Dec": "the detail message ."}{"idx": 18176, "node_name": "cause", "Dec": "the cause , may be null ."}{"idx": 18178, "node_name": "cause", "Dec": "the cause , may be null ."}{"idx": 18186, "node_name": "b", "Dec": "the byte to be converted"}{"idx": 18188, "node_name": "b", "Dec": "a byte value ."}{"idx": 18190, "node_name": "s", "Dec": "the string containing the byte representation to be parsed"}{"idx": 18191, "node_name": "radix", "Dec": "the radix to be used while parsing s"}{"idx": 18193, "node_name": "s", "Dec": "a string containing the byte representation to be parsed"}{"idx": 18195, "node_name": "s", "Dec": "the string to be parsed"}{"idx": 18196, "node_name": "radix", "Dec": "the radix to be used in interpreting s"}{"idx": 18198, "node_name": "s", "Dec": "the string to be parsed"}{"idx": 18209, "node_name": "value", "Dec": "the value to hash"}{"idx": 18211, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 18213, "node_name": "anotherbyte", "Dec": "the byte to be compared ."}{"idx": 18215, "node_name": "x", "Dec": "the first byte to compare"}{"idx": 18216, "node_name": "y", "Dec": "the second byte to compare"}{"idx": 18218, "node_name": "x", "Dec": "the first byte to compare"}{"idx": 18219, "node_name": "y", "Dec": "the second byte to compare"}{"idx": 18221, "node_name": "x", "Dec": "the value to convert to an unsigned int"}{"idx": 18223, "node_name": "x", "Dec": "the value to convert to an unsigned long"}{"idx": 18296, "node_name": "c", "Dec": "a char value ."}{"idx": 18300, "node_name": "value", "Dec": "the char for which to return a hash code ."}{"idx": 18302, "node_name": "obj", "Dec": "the object to compare with ."}{"idx": 18305, "node_name": "c", "Dec": "the char to be converted"}{"idx": 18307, "node_name": "codepoint", "Dec": "the codepoint to be converted"}{"idx": 18309, "node_name": "codepoint", "Dec": "the unicode code point to be tested"}{"idx": 18311, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested"}{"idx": 18313, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested"}{"idx": 18315, "node_name": "ch", "Dec": "the char value to be tested ."}{"idx": 18317, "node_name": "ch", "Dec": "the char value to be tested ."}{"idx": 18319, "node_name": "ch", "Dec": "the char value to be tested ."}{"idx": 18321, "node_name": "high", "Dec": "the high-surrogate code value to be tested"}{"idx": 18322, "node_name": "low", "Dec": "the low-surrogate code value to be tested"}{"idx": 18324, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18326, "node_name": "high", "Dec": "the high-surrogate code unit"}{"idx": 18327, "node_name": "low", "Dec": "the low-surrogate code unit"}{"idx": 18329, "node_name": "seq", "Dec": "a sequence of char values ( unicode code units )"}{"idx": 18330, "node_name": "index", "Dec": "the index to the char values ( unicode code units ) in seq to be converted"}{"idx": 18332, "node_name": "a", "Dec": "the char array"}{"idx": 18333, "node_name": "index", "Dec": "the index to the char values ( unicode code units ) in the char array to be converted"}{"idx": 18335, "node_name": "a", "Dec": "the char array"}{"idx": 18336, "node_name": "index", "Dec": "the index to the char values ( unicode code units ) in the char array to be converted"}{"idx": 18337, "node_name": "limit", "Dec": "the index after the last array element that can be used in the char array"}{"idx": 18339, "node_name": "seq", "Dec": "the charsequence instance"}{"idx": 18340, "node_name": "index", "Dec": "the index following the code point that should be returned"}{"idx": 18342, "node_name": "a", "Dec": "the char array"}{"idx": 18343, "node_name": "index", "Dec": "the index following the code point that should be returned"}{"idx": 18345, "node_name": "a", "Dec": "the char array"}{"idx": 18346, "node_name": "index", "Dec": "the index following the code point that should be returned"}{"idx": 18347, "node_name": "start", "Dec": "the index of the first array element in the char array"}{"idx": 18349, "node_name": "codepoint", "Dec": "a supplementary character ( unicode code point )"}{"idx": 18351, "node_name": "codepoint", "Dec": "a supplementary character ( unicode code point )"}{"idx": 18353, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be converted ."}{"idx": 18354, "node_name": "dst", "Dec": "an array of char in which the codepoint's utf-16 value is stored ."}{"idx": 18355, "node_name": "dstindex", "Dec": "the start index into the dst array where the converted value is stored ."}{"idx": 18357, "node_name": "codepoint", "Dec": "a unicode code point"}{"idx": 18359, "node_name": "seq", "Dec": "the char sequence"}{"idx": 18360, "node_name": "beginindex", "Dec": "the index to the first char of the text range ."}{"idx": 18361, "node_name": "endindex", "Dec": "the index after the last char of the text range ."}{"idx": 18363, "node_name": "a", "Dec": "the char array"}{"idx": 18364, "node_name": "offset", "Dec": "the index of the first char in the given char array"}{"idx": 18365, "node_name": "count", "Dec": "the length of the subarray in chars"}{"idx": 18367, "node_name": "seq", "Dec": "the char sequence"}{"idx": 18368, "node_name": "index", "Dec": "the index to be offset"}{"idx": 18369, "node_name": "codepointoffset", "Dec": "the offset in code points"}{"idx": 18371, "node_name": "a", "Dec": "the char array"}{"idx": 18372, "node_name": "start", "Dec": "the index of the first char of the subarray"}{"idx": 18373, "node_name": "count", "Dec": "the length of the subarray in chars"}{"idx": 18374, "node_name": "index", "Dec": "the index to be offset"}{"idx": 18375, "node_name": "codepointoffset", "Dec": "the offset in code points"}{"idx": 18377, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18379, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18381, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18383, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18385, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18387, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18389, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18391, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18393, "node_name": "ch", "Dec": "the character to be tested"}{"idx": 18395, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18397, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18399, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18401, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18403, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18405, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18407, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18409, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18411, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18413, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18415, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18417, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18419, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18421, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18423, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18425, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18427, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18429, "node_name": "ch", "Dec": "the character to be converted ."}{"idx": 18431, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be converted ."}{"idx": 18433, "node_name": "ch", "Dec": "the character to be converted ."}{"idx": 18435, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be converted ."}{"idx": 18437, "node_name": "ch", "Dec": "the character to be converted ."}{"idx": 18439, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be converted ."}{"idx": 18441, "node_name": "ch", "Dec": "the character to be converted ."}{"idx": 18442, "node_name": "radix", "Dec": "the radix ."}{"idx": 18444, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be converted ."}{"idx": 18445, "node_name": "radix", "Dec": "the radix ."}{"idx": 18447, "node_name": "ch", "Dec": "the character to be converted ."}{"idx": 18449, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be converted ."}{"idx": 18451, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18453, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18455, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18457, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18459, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18461, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18463, "node_name": "ch", "Dec": "the character to be tested ."}{"idx": 18465, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18467, "node_name": "digit", "Dec": "the number to convert to a character ."}{"idx": 18468, "node_name": "radix", "Dec": "the radix ."}{"idx": 18470, "node_name": "ch", "Dec": "char for which the directionality property is requested ."}{"idx": 18472, "node_name": "codepoint", "Dec": "the character ( unicode code point ) for which the directionality property is requested ."}{"idx": 18474, "node_name": "ch", "Dec": "char for which the mirrored property is requested"}{"idx": 18476, "node_name": "codepoint", "Dec": "the character ( unicode code point ) to be tested ."}{"idx": 18478, "node_name": "anothercharacter", "Dec": "the character to be compared ."}{"idx": 18480, "node_name": "x", "Dec": "the first char to compare"}{"idx": 18481, "node_name": "y", "Dec": "the second char to compare"}{"idx": 18483, "node_name": "ch", "Dec": "the char of which to reverse the byte order ."}{"idx": 18485, "node_name": "codepoint", "Dec": "the character ( unicode code point )"}{"idx": 18487, "node_name": "name", "Dec": "the unicode character name"}{"idx": 18490, "node_name": "name", "Dec": "the name of this subset"}{"idx": 18492, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 18797, "node_name": "c", "Dec": "the character in question"}{"idx": 18799, "node_name": "codepoint", "Dec": "the character ( unicode code point ) in question ."}{"idx": 18801, "node_name": "blockname", "Dec": "a unicodeblock name ."}{"idx": 18805, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 18807, "node_name": "codepoint", "Dec": "the character ( unicode code point ) in question ."}{"idx": 18809, "node_name": "scriptname", "Dec": "a unicodescript name ."}{"idx": 18813, "node_name": "index", "Dec": "the index of the char value to be returned"}{"idx": 18815, "node_name": "start", "Dec": "the start index , inclusive"}{"idx": 18816, "node_name": "end", "Dec": "the end index , exclusive"}{"idx": 18821, "node_name": "cs1", "Dec": "the first charsequence"}{"idx": 18822, "node_name": "cs2", "Dec": "the second charsequence"}{"idx": 18827, "node_name": "classname", "Dec": "the fully qualified name of the desired class ."}{"idx": 18829, "node_name": "name", "Dec": "fully qualified name of the desired class"}{"idx": 18830, "node_name": "initialize", "Dec": "if true the class will be initialized . see section 12.4 of the java language specification ."}{"idx": 18831, "node_name": "loader", "Dec": "class loader from which the class must be loaded"}{"idx": 18833, "node_name": "module", "Dec": "a module"}{"idx": 18834, "node_name": "name", "Dec": "the binary name of the class"}{"idx": 18836, "node_name": "obj", "Dec": "the object to check"}{"idx": 18838, "node_name": "cls", "Dec": "the class object to be checked"}{"idx": 18872, "node_name": "name", "Dec": "the field name"}{"idx": 18874, "node_name": "name", "Dec": "the name of getMethod(java.lang.String,java.lang.Class...)"}{"idx": 18875, "node_name": "parametertypes", "Dec": "the list of parameters"}{"idx": 18877, "node_name": "parametertypes", "Dec": "the parameter array"}{"idx": 18883, "node_name": "name", "Dec": "the name of the field"}{"idx": 18885, "node_name": "name", "Dec": "the name of getDeclaredMethod(java.lang.String,java.lang.Class...)"}{"idx": 18886, "node_name": "parametertypes", "Dec": "the parameter array"}{"idx": 18888, "node_name": "parametertypes", "Dec": "the parameter array"}{"idx": 18890, "node_name": "name", "Dec": "name of the desired resource"}{"idx": 18892, "node_name": "name", "Dec": "name of the desired resource"}{"idx": 18898, "node_name": "obj", "Dec": "the object to be cast"}{"idx": 18900, "node_name": "clazz", "Dec": "the class of the type to cast this class object to"}{"idx": 18902, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 18904, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 18906, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 18909, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 18911, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 18917, "node_name": "c", "Dec": "the class to check"}{"idx": 18926, "node_name": "s", "Dec": "the detail message ."}{"idx": 18930, "node_name": "s", "Dec": "the detail message"}{"idx": 18934, "node_name": "s", "Dec": "the detail message ."}{"idx": 18937, "node_name": "name", "Dec": "class loader name ; or null if not named"}{"idx": 18938, "node_name": "parent", "Dec": "the parent class loader"}{"idx": 18940, "node_name": "parent", "Dec": "the parent class loader"}{"idx": 18944, "node_name": "name", "Dec": "the binary name of the class"}{"idx": 18946, "node_name": "name", "Dec": "the binary name of the class"}{"idx": 18947, "node_name": "resolve", "Dec": "if true then resolve the class"}{"idx": 18949, "node_name": "classname", "Dec": "the name of the to-be-loaded class"}{"idx": 18951, "node_name": "name", "Dec": "the binary name of the class"}{"idx": 18953, "node_name": "modulename", "Dec": "the module name ; or null to find the class in the unnamed module for this class loader"}{"idx": 18954, "node_name": "name", "Dec": "the binary name of the class"}{"idx": 18956, "node_name": "name", "Dec": "the expected binary name of the class , or null if not known"}{"idx": 18957, "node_name": "b", "Dec": "the bytes that make up the class data . the bytes in positions off through off+ len-1 should have the format of a valid class file as defined by the java\u2122 virtual machine specification ."}{"idx": 18958, "node_name": "off", "Dec": "the start offset in b of the class data"}{"idx": 18959, "node_name": "len", "Dec": "the length of the class data"}{"idx": 18961, "node_name": "name", "Dec": "the expected binary name of the class , or null if not known"}{"idx": 18962, "node_name": "b", "Dec": "the bytes that make up the class data . the bytes in positions off through off+ len-1 should have the format of a valid class file as defined by the java\u2122 virtual machine specification ."}{"idx": 18963, "node_name": "off", "Dec": "the start offset in b of the class data"}{"idx": 18964, "node_name": "len", "Dec": "the length of the class data"}{"idx": 18965, "node_name": "protectiondomain", "Dec": "the protectiondomain of the class"}{"idx": 18967, "node_name": "name", "Dec": "the expected binary name . of the class , or null if not known"}{"idx": 18968, "node_name": "b", "Dec": "the bytes that make up the class data . the bytes from positions b.position() through b.position() + b.limit() -1 should have the format of a valid class file as defined by the java\u2122 virtual machine specification ."}{"idx": 18969, "node_name": "protectiondomain", "Dec": "the protectiondomain of the class , or null ."}{"idx": 18971, "node_name": "c", "Dec": "the class to link"}{"idx": 18973, "node_name": "name", "Dec": "the binary name of the class"}{"idx": 18975, "node_name": "name", "Dec": "the binary name of the class"}{"idx": 18977, "node_name": "c", "Dec": "the class object"}{"idx": 18978, "node_name": "signers", "Dec": "the signers for the class"}{"idx": 18980, "node_name": "modulename", "Dec": "the module name ; or null to find a resource in the unnamed module for this class loader"}{"idx": 18981, "node_name": "name", "Dec": "the resource name"}{"idx": 18983, "node_name": "name", "Dec": "the resource name"}{"idx": 18985, "node_name": "name", "Dec": "the resource name"}{"idx": 18987, "node_name": "name", "Dec": "the resource name"}{"idx": 18989, "node_name": "name", "Dec": "the resource name"}{"idx": 18991, "node_name": "name", "Dec": "the resource name"}{"idx": 18995, "node_name": "name", "Dec": "the resource name"}{"idx": 18997, "node_name": "name", "Dec": "the resource name"}{"idx": 18999, "node_name": "name", "Dec": "the resource name"}{"idx": 19001, "node_name": "name", "Dec": "the resource name"}{"idx": 19007, "node_name": "name", "Dec": "the package name"}{"idx": 19008, "node_name": "spectitle", "Dec": "the specification title"}{"idx": 19009, "node_name": "specversion", "Dec": "the specification version"}{"idx": 19010, "node_name": "specvendor", "Dec": "the specification vendor"}{"idx": 19011, "node_name": "impltitle", "Dec": "the implementation title"}{"idx": 19012, "node_name": "implversion", "Dec": "the implementation version"}{"idx": 19013, "node_name": "implvendor", "Dec": "the implementation vendor"}{"idx": 19014, "node_name": "sealbase", "Dec": "if not null , then this package is sealed with respect to the given code source url object . otherwise , the package is not sealed ."}{"idx": 19016, "node_name": "name", "Dec": "the package name"}{"idx": 19020, "node_name": "libname", "Dec": "the library name"}{"idx": 19022, "node_name": "enabled", "Dec": "true if classes loaded by this class loader will henceforth have assertions enabled by default , false if they will have assertions disabled by default ."}{"idx": 19024, "node_name": "packagename", "Dec": "the name of the package whose package default assertion status is to be set . a null value indicates the unnamed package that is \" current \" ( see section 7.4.2 of the java\u2122 language specification . )"}{"idx": 19025, "node_name": "enabled", "Dec": "true if classes loaded by this classloader and belonging to the named package or any of its subpackages will have assertions enabled by default , false if they will have assertions disabled by default ."}{"idx": 19027, "node_name": "classname", "Dec": "the fully qualified class name of the top-level class whose assertion status is to be set ."}{"idx": 19028, "node_name": "enabled", "Dec": "true if the named class is to have assertions enabled when ( and if ) it is initialized , false if the class is to have assertions disabled ."}{"idx": 19033, "node_name": "s", "Dec": "the detail message ."}{"idx": 19035, "node_name": "s", "Dec": "the detail message"}{"idx": 19036, "node_name": "ex", "Dec": "the exception that was raised while loading the class"}{"idx": 19041, "node_name": "type", "Dec": "the type whose class value must be computed"}{"idx": 19043, "node_name": "type", "Dec": "the type whose class value must be computed or retrieved"}{"idx": 19045, "node_name": "type", "Dec": "the type whose class value must be removed"}{"idx": 19050, "node_name": "s", "Dec": "the detail message ."}{"idx": 19053, "node_name": "o", "Dec": "the object to be compared ."}{"idx": 19057, "node_name": "name", "Dec": "the fully qualified ( dot-separated ) binary class name"}{"idx": 19059, "node_name": "packagename", "Dec": "the package name ( dot-separated ); if the package name is the empty string , the class is considered to be in the unnamed package"}{"idx": 19060, "node_name": "classname", "Dec": "the unqualified ( simple ) class name"}{"idx": 19062, "node_name": "descriptor", "Dec": "a field descriptor string"}{"idx": 19065, "node_name": "rank", "Dec": "the rank of the array"}{"idx": 19067, "node_name": "nestedname", "Dec": "the unqualified name of the nested class"}{"idx": 19069, "node_name": "firstnestedname", "Dec": "the unqualified name of the first level of nested class"}{"idx": 19070, "node_name": "morenestednames", "Dec": "the unqualified name ( s ) of the remaining levels of nested class"}{"idx": 19079, "node_name": "o", "Dec": "the other object"}{"idx": 19084, "node_name": "lookup", "Dec": "resolveConstantDesc(java.lang.invoke.MethodHandles.Lookup)handles.lookup to provide name resolution and access control context"}{"idx": 19142, "node_name": "owner", "Dec": "the class declaring ofCallsiteBootstrap(java.lang.constant.ClassDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ClassDesc...)"}{"idx": 19143, "node_name": "name", "Dec": "the unqualified name of ofCallsiteBootstrap(java.lang.constant.ClassDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ClassDesc...)"}{"idx": 19144, "node_name": "returntype", "Dec": "the return type of ofCallsiteBootstrap(java.lang.constant.ClassDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ClassDesc...)"}{"idx": 19145, "node_name": "paramtypes", "Dec": "the types of the static bootstrap arguments , if any"}{"idx": 19147, "node_name": "owner", "Dec": "the class declaring ofConstantBootstrap(java.lang.constant.ClassDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ClassDesc...)"}{"idx": 19148, "node_name": "name", "Dec": "the unqualified name of ofConstantBootstrap(java.lang.constant.ClassDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ClassDesc...)"}{"idx": 19149, "node_name": "returntype", "Dec": "the return type of ofConstantBootstrap(java.lang.constant.ClassDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ClassDesc...)"}{"idx": 19150, "node_name": "paramtypes", "Dec": "the types of the static bootstrap arguments , if any"}{"idx": 19163, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 19165, "node_name": "refkind", "Dec": "refkind of desired member"}{"idx": 19167, "node_name": "refkind", "Dec": "refkind of desired member"}{"idx": 19168, "node_name": "isinterface", "Dec": "whether desired member is for interface methods"}{"idx": 19171, "node_name": "bootstrapmethod", "Dec": "a directmethodhandledesc describing the bootstrap method for the invokedynamic"}{"idx": 19172, "node_name": "invocationname", "Dec": "the unqualified name that would appear in the nameandtype operand of the invokedynamic"}{"idx": 19173, "node_name": "invocationtype", "Dec": "a methodtypedesc describing the invocation type that would appear in the nameandtype operand of the invokedynamic"}{"idx": 19174, "node_name": "bootstrapargs", "Dec": "constantdescs describing the static arguments to the bootstrap , that would appear in the bootstrapmethods attribute"}{"idx": 19176, "node_name": "bootstrapmethod", "Dec": "the bootstrap method for the invokedynamic"}{"idx": 19177, "node_name": "invocationname", "Dec": "the invocationname that would appear in the nameandtype operand of the invokedynamic"}{"idx": 19178, "node_name": "invocationtype", "Dec": "the invocation invocationtype that would appear in the nameandtype operand of the invokedynamic"}{"idx": 19180, "node_name": "bootstrapmethod", "Dec": "a directmethodhandledesc describing the bootstrap method for the invokedynamic"}{"idx": 19181, "node_name": "invocationtype", "Dec": "a methodtypedesc describing the invocation type that would appear in the nameandtype operand of the invokedynamic"}{"idx": 19183, "node_name": "bootstrapargs", "Dec": "constantdescs describing the static arguments to the bootstrap , that would appear in the bootstrapmethods attribute"}{"idx": 19185, "node_name": "invocationname", "Dec": "the unqualified name that would appear in the nameandtype operand of the invokedynamic"}{"idx": 19186, "node_name": "invocationtype", "Dec": "a methodtypedesc describing the invocation type that would appear in the nameandtype operand of the invokedynamic"}{"idx": 19192, "node_name": "lookup", "Dec": "resolveCallSiteDesc(java.lang.invoke.MethodHandles.Lookup)handles.lookup used to resolve class names"}{"idx": 19194, "node_name": "o", "Dec": "the dynamiccallsitedesc to compare to this dynamiccallsitedesc"}{"idx": 19198, "node_name": "bootstrapmethod", "Dec": "a directmethodhandledesc describing the bootstrap method for the constant"}{"idx": 19199, "node_name": "constantname", "Dec": "the unqualified name that would appear in the nameandtype operand of the ldc for this constant"}{"idx": 19200, "node_name": "constanttype", "Dec": "a classdesc describing the type that would appear in the nameandtype operand of the ldc for this constant"}{"idx": 19201, "node_name": "bootstrapargs", "Dec": "constantdescs describing the static arguments to the bootstrap , that would appear in the bootstrapmethods attribute"}{"idx": 19203, "node_name": "bootstrapmethod", "Dec": "a directmethodhandledesc describing the bootstrap method for the constant"}{"idx": 19204, "node_name": "constantname", "Dec": "the unqualified name that would appear in the nameandtype operand of the ldc for this constant"}{"idx": 19205, "node_name": "constanttype", "Dec": "a classdesc describing the type that would appear in the nameandtype operand of the ldc for this constant"}{"idx": 19206, "node_name": "bootstrapargs", "Dec": "constantdescs describing the static arguments to the bootstrap , that would appear in the bootstrapmethods attribute"}{"idx": 19208, "node_name": "bootstrapmethod", "Dec": "a directmethodhandledesc describing the bootstrap method for the constant"}{"idx": 19209, "node_name": "constantname", "Dec": "the unqualified name that would appear in the nameandtype operand of the ldc for this constant"}{"idx": 19210, "node_name": "constanttype", "Dec": "a classdesc describing the type that would appear in the nameandtype operand of the ldc for this constant"}{"idx": 19211, "node_name": "bootstrapargs", "Dec": "constantdescs describing the static arguments to the bootstrap , that would appear in the bootstrapmethods attribute"}{"idx": 19213, "node_name": "bootstrapmethod", "Dec": "a directmethodhandledesc describing the bootstrap method for the constant"}{"idx": 19214, "node_name": "bootstrapargs", "Dec": "constantdescs describing the static arguments to the bootstrap , that would appear in the bootstrapmethods attribute"}{"idx": 19216, "node_name": "bootstrapmethod", "Dec": "a directmethodhandledesc describing the bootstrap method for the constant"}{"idx": 19223, "node_name": "o", "Dec": "the dynamicconstantdesc to compare to this dynamicconstantdesc"}{"idx": 19227, "node_name": "kind", "Dec": "the kind of method handle to be described"}{"idx": 19228, "node_name": "owner", "Dec": "a classdesc describing the class containing of(java.lang.constant.DirectMethodHandleDesc.Kind,java.lang.constant.ClassDesc,java.lang.String,java.lang.String) , constructor , or field"}{"idx": 19229, "node_name": "name", "Dec": "the unqualified name of of(java.lang.constant.DirectMethodHandleDesc.Kind,java.lang.constant.ClassDesc,java.lang.String,java.lang.String) or field ( ignored if kind is constructor )"}{"idx": 19230, "node_name": "lookupdescriptor", "Dec": "a method descriptor string the lookup type , if the request is for a method invocation , or describing the invocation type , if the request is for a field or constructor"}{"idx": 19232, "node_name": "kind", "Dec": "the kind of method handle to be described ; must be one of special , virtual , static , interface_special , interface_virtual , interface_static , constructor"}{"idx": 19233, "node_name": "owner", "Dec": "a classdesc describing the class containing ofMethod(java.lang.constant.DirectMethodHandleDesc.Kind,java.lang.constant.ClassDesc,java.lang.String,java.lang.constant.MethodTypeDesc) or constructor"}{"idx": 19234, "node_name": "name", "Dec": "the unqualified name of ofMethod(java.lang.constant.DirectMethodHandleDesc.Kind,java.lang.constant.ClassDesc,java.lang.String,java.lang.constant.MethodTypeDesc) ( ignored if kind is constructor )"}{"idx": 19235, "node_name": "lookupmethodtype", "Dec": "a methodtypedesc describing the lookup type"}{"idx": 19237, "node_name": "kind", "Dec": "the kind of ofField(java.lang.constant.DirectMethodHandleDesc.Kind,java.lang.constant.ClassDesc,java.lang.String,java.lang.constant.ClassDesc) handle to be described ; must be one of getter , setter , static_getter , or static_setter"}{"idx": 19238, "node_name": "owner", "Dec": "a classdesc describing the class containing the field"}{"idx": 19239, "node_name": "fieldname", "Dec": "the unqualified name of the field"}{"idx": 19240, "node_name": "fieldtype", "Dec": "a classdesc describing the type of the field"}{"idx": 19242, "node_name": "owner", "Dec": "a classdesc describing the class containing the constructor"}{"idx": 19243, "node_name": "paramtypes", "Dec": "classdescs describing the parameter types of the constructor"}{"idx": 19245, "node_name": "type", "Dec": "a methodhandledesc describing the new method type"}{"idx": 19248, "node_name": "o", "Dec": "the other object"}{"idx": 19251, "node_name": "descriptor", "Dec": "a method descriptor string"}{"idx": 19253, "node_name": "returndesc", "Dec": "a classdesc describing the return type"}{"idx": 19254, "node_name": "paramdescs", "Dec": "classdescs describing the argument types"}{"idx": 19258, "node_name": "index", "Dec": "the index of the parameter to retrieve"}{"idx": 19262, "node_name": "returntype", "Dec": "a classdesc describing the new return type"}{"idx": 19264, "node_name": "index", "Dec": "the index of the parameter to change"}{"idx": 19265, "node_name": "paramtype", "Dec": "a classdesc describing the new parameter type"}{"idx": 19267, "node_name": "start", "Dec": "the index of the first parameter to remove"}{"idx": 19268, "node_name": "end", "Dec": "the index after the last parameter to remove"}{"idx": 19270, "node_name": "pos", "Dec": "the index at which to insert the first inserted parameter"}{"idx": 19271, "node_name": "paramtypes", "Dec": "classdescs describing the new parameter types to insert"}{"idx": 19275, "node_name": "o", "Dec": "the other object"}{"idx": 19290, "node_name": "d", "Dec": "the double to be converted ."}{"idx": 19292, "node_name": "d", "Dec": "the double to be converted ."}{"idx": 19295, "node_name": "d", "Dec": "a double value ."}{"idx": 19297, "node_name": "s", "Dec": "the string to be parsed ."}{"idx": 19299, "node_name": "v", "Dec": "the value to be tested ."}{"idx": 19301, "node_name": "v", "Dec": "the value to be tested ."}{"idx": 19303, "node_name": "d", "Dec": "the double value to be tested"}{"idx": 19315, "node_name": "value", "Dec": "the value to hash"}{"idx": 19317, "node_name": "obj", "Dec": "the object to compare with ."}{"idx": 19319, "node_name": "value", "Dec": "a double precision floating-point number ."}{"idx": 19321, "node_name": "value", "Dec": "a double precision floating-point number ."}{"idx": 19323, "node_name": "bits", "Dec": "any long integer ."}{"idx": 19325, "node_name": "anotherdouble", "Dec": "the double to be compared ."}{"idx": 19327, "node_name": "d1", "Dec": "the first double to compare"}{"idx": 19328, "node_name": "d2", "Dec": "the second double to compare"}{"idx": 19330, "node_name": "a", "Dec": "the first operand"}{"idx": 19331, "node_name": "b", "Dec": "the second operand"}{"idx": 19333, "node_name": "a", "Dec": "the first operand"}{"idx": 19334, "node_name": "b", "Dec": "the second operand"}{"idx": 19336, "node_name": "a", "Dec": "the first operand"}{"idx": 19337, "node_name": "b", "Dec": "the second operand"}{"idx": 19340, "node_name": "lookup", "Dec": "ignored"}{"idx": 19343, "node_name": "enumclass", "Dec": "a classdesc describing the enum class"}{"idx": 19344, "node_name": "constantname", "Dec": "the unqualified name of the enum constant"}{"idx": 19347, "node_name": "name", "Dec": "- the name of this enum constant , which is the identifier used to declare it ."}{"idx": 19348, "node_name": "ordinal", "Dec": "- the ordinal of this enumeration constant ( its position in the enum declaration , where the initial constant is assigned an ordinal of zero ) ."}{"idx": 19353, "node_name": "other", "Dec": "the object to be compared for equality with this object ."}{"idx": 19357, "node_name": "o", "Dec": "the object to be compared ."}{"idx": 19361, "node_name": "enumtype", "Dec": "the class object of the enum type from which to return a constant"}{"idx": 19362, "node_name": "name", "Dec": "the name of the constant to return"}{"idx": 19366, "node_name": "enumtype", "Dec": "the type of the missing enum constant"}{"idx": 19367, "node_name": "constantname", "Dec": "the name of the missing enum constant"}{"idx": 19373, "node_name": "message", "Dec": "the detail message . the detail message is saved for later retrieval by the throwable.getmessage() method ."}{"idx": 19375, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 19376, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19378, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19380, "node_name": "message", "Dec": "the detail message ."}{"idx": 19381, "node_name": "cause", "Dec": "the cause . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19382, "node_name": "enablesuppression", "Dec": "whether or not suppression is enabled or disabled"}{"idx": 19383, "node_name": "writablestacktrace", "Dec": "whether or not the stack trace should be writable"}{"idx": 19387, "node_name": "message", "Dec": "the detail message . the detail message is saved for later retrieval by the throwable.getmessage() method ."}{"idx": 19389, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 19390, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19392, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19394, "node_name": "message", "Dec": "the detail message ."}{"idx": 19395, "node_name": "cause", "Dec": "the cause . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19396, "node_name": "enablesuppression", "Dec": "whether or not suppression is enabled or disabled"}{"idx": 19397, "node_name": "writablestacktrace", "Dec": "whether or not the stack trace should be writable"}{"idx": 19401, "node_name": "thrown", "Dec": "the exception thrown"}{"idx": 19403, "node_name": "s", "Dec": "the detail message"}{"idx": 19418, "node_name": "f", "Dec": "the float to be converted ."}{"idx": 19420, "node_name": "f", "Dec": "the float to be converted ."}{"idx": 19423, "node_name": "f", "Dec": "a float value ."}{"idx": 19425, "node_name": "s", "Dec": "the string to be parsed ."}{"idx": 19427, "node_name": "v", "Dec": "the value to be tested ."}{"idx": 19429, "node_name": "v", "Dec": "the value to be tested ."}{"idx": 19431, "node_name": "f", "Dec": "the float value to be tested"}{"idx": 19443, "node_name": "value", "Dec": "the value to hash"}{"idx": 19445, "node_name": "obj", "Dec": "the object to be compared"}{"idx": 19447, "node_name": "value", "Dec": "a floating-point number ."}{"idx": 19449, "node_name": "value", "Dec": "a floating-point number ."}{"idx": 19451, "node_name": "bits", "Dec": "an integer ."}{"idx": 19453, "node_name": "anotherfloat", "Dec": "the float to be compared ."}{"idx": 19455, "node_name": "f1", "Dec": "the first float to compare ."}{"idx": 19456, "node_name": "f2", "Dec": "the second float to compare ."}{"idx": 19458, "node_name": "a", "Dec": "the first operand"}{"idx": 19459, "node_name": "b", "Dec": "the second operand"}{"idx": 19461, "node_name": "a", "Dec": "the first operand"}{"idx": 19462, "node_name": "b", "Dec": "the second operand"}{"idx": 19464, "node_name": "a", "Dec": "the first operand"}{"idx": 19465, "node_name": "b", "Dec": "the second operand"}{"idx": 19468, "node_name": "lookup", "Dec": "ignored"}{"idx": 19473, "node_name": "s", "Dec": "the detail message ."}{"idx": 19477, "node_name": "s", "Dec": "the detail message ."}{"idx": 19481, "node_name": "s", "Dec": "the detail message ."}{"idx": 19483, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 19484, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19486, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19490, "node_name": "s", "Dec": "the string that contains a detailed message ( can be null )"}{"idx": 19492, "node_name": "message", "Dec": "the detail message ( can be null )"}{"idx": 19493, "node_name": "cause", "Dec": "the cause ( can be null )"}{"idx": 19495, "node_name": "cause", "Dec": "the cause ( can be null )"}{"idx": 19499, "node_name": "s", "Dec": "the detail message ."}{"idx": 19503, "node_name": "s", "Dec": "the string that contains a detailed message"}{"idx": 19505, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 19506, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19508, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19512, "node_name": "s", "Dec": "the detail message ."}{"idx": 19516, "node_name": "s", "Dec": "the detail message ."}{"idx": 19520, "node_name": "s", "Dec": "the detail message"}{"idx": 19522, "node_name": "index", "Dec": "the illegal index ."}{"idx": 19526, "node_name": "parentvalue", "Dec": "the parent thread's value"}{"idx": 19530, "node_name": "s", "Dec": "the detail message ."}{"idx": 19534, "node_name": "s", "Dec": "the detail message ."}{"idx": 19537, "node_name": "theclass", "Dec": "the class that needs redefining"}{"idx": 19538, "node_name": "theclassfile", "Dec": "the new class file bytes"}{"idx": 19543, "node_name": "loader", "Dec": "the defining loader of the class to be transformed , may be null if the bootstrap loader"}{"idx": 19544, "node_name": "classname", "Dec": "the name of the class in the internal form of fully qualified class and interface names as defined in the java virtual machine specification . for example , \" java / util / list \" ."}{"idx": 19545, "node_name": "classbeingredefined", "Dec": "if this is triggered by a redefine or retransform , the class being redefined or retransformed ; if this is a class load , null"}{"idx": 19546, "node_name": "protectiondomain", "Dec": "the protection domain of the class being defined or redefined"}{"idx": 19547, "node_name": "classfilebuffer", "Dec": "the input byte buffer in class file format"}{"idx": 19549, "node_name": "module", "Dec": "the module of the class to be transformed"}{"idx": 19550, "node_name": "loader", "Dec": "the defining loader of the class to be transformed , may be null if the bootstrap loader"}{"idx": 19551, "node_name": "classname", "Dec": "the name of the class in the internal form of fully qualified class and interface names as defined in the java virtual machine specification . for example , \" java / util / list \" ."}{"idx": 19552, "node_name": "classbeingredefined", "Dec": "if this is triggered by a redefine or retransform , the class being redefined or retransformed ; if this is a class load , null"}{"idx": 19553, "node_name": "protectiondomain", "Dec": "the protection domain of the class being defined or redefined"}{"idx": 19554, "node_name": "classfilebuffer", "Dec": "the input byte buffer in class file format"}{"idx": 19558, "node_name": "s", "Dec": "the detail message ."}{"idx": 19561, "node_name": "transformer", "Dec": "the transformer to register"}{"idx": 19562, "node_name": "canretransform", "Dec": "can this transformer's transformations be retransformed"}{"idx": 19564, "node_name": "transformer", "Dec": "the transformer to register"}{"idx": 19566, "node_name": "transformer", "Dec": "the transformer to unregister"}{"idx": 19569, "node_name": "classes", "Dec": "array of classes to retransform ; a zero-length array is allowed , in this case , retransformClasses(java.lang.Class...) does nothing"}{"idx": 19572, "node_name": "definitions", "Dec": "array of classes to redefine with corresponding definitions ; a zero-length array is allowed , in this case , redefineClasses(java.lang.instrument.ClassDefinition...) does nothing"}{"idx": 19574, "node_name": "theclass", "Dec": "the class to check for being modifiable"}{"idx": 19577, "node_name": "loader", "Dec": "the loader whose initiated class list will be returned"}{"idx": 19579, "node_name": "objecttosize", "Dec": "the object to size"}{"idx": 19581, "node_name": "jarfile", "Dec": "the jar file to be searched when the bootstrap class loader unsuccessfully searches for a class ."}{"idx": 19583, "node_name": "jarfile", "Dec": "the jar file to be searched when the system class loader unsuccessfully searches for a class ."}{"idx": 19586, "node_name": "transformer", "Dec": "the classfiletransformer which wraps using this prefix ."}{"idx": 19587, "node_name": "prefix", "Dec": "the prefix to apply to wrapped native methods when retrying a failed native method resolution . if prefix is either null or the empty string , then failed native method resolutions are not retried for this transformer ."}{"idx": 19589, "node_name": "module", "Dec": "the module to redefine"}{"idx": 19590, "node_name": "extrareads", "Dec": "the possibly-empty set of additional modules to read"}{"idx": 19591, "node_name": "extraexports", "Dec": "the possibly-empty map of additional packages to export"}{"idx": 19592, "node_name": "extraopens", "Dec": "the possibly-empty map of additional packages to open"}{"idx": 19593, "node_name": "extrauses", "Dec": "the possibly-empty set of additional services to use"}{"idx": 19594, "node_name": "extraprovides", "Dec": "the possibly-empty map of additional services to provide"}{"idx": 19596, "node_name": "module", "Dec": "the module to test if it can be modified"}{"idx": 19600, "node_name": "s", "Dec": "the detail message ."}{"idx": 19604, "node_name": "msg", "Dec": "the detail message ."}{"idx": 19612, "node_name": "i", "Dec": "an integer to be converted to a string ."}{"idx": 19613, "node_name": "radix", "Dec": "the radix to use in the string representation ."}{"idx": 19615, "node_name": "i", "Dec": "an integer to be converted to an unsigned string ."}{"idx": 19616, "node_name": "radix", "Dec": "the radix to use in the string representation ."}{"idx": 19618, "node_name": "i", "Dec": "an integer to be converted to a string ."}{"idx": 19620, "node_name": "i", "Dec": "an integer to be converted to a string ."}{"idx": 19622, "node_name": "i", "Dec": "an integer to be converted to a string ."}{"idx": 19624, "node_name": "i", "Dec": "an integer to be converted ."}{"idx": 19626, "node_name": "i", "Dec": "an integer to be converted to an unsigned string ."}{"idx": 19628, "node_name": "s", "Dec": "the string containing the integer representation to be parsed"}{"idx": 19629, "node_name": "radix", "Dec": "the radix to be used while parsing s ."}{"idx": 19631, "node_name": "s", "Dec": "the charsequence containing the int representation to be parsed"}{"idx": 19632, "node_name": "beginindex", "Dec": "the beginning index , inclusive ."}{"idx": 19633, "node_name": "endindex", "Dec": "the ending index , exclusive ."}{"idx": 19634, "node_name": "radix", "Dec": "the radix to be used while parsing s ."}{"idx": 19636, "node_name": "s", "Dec": "a string containing the int representation to be parsed"}{"idx": 19638, "node_name": "s", "Dec": "the string containing the unsigned integer representation to be parsed"}{"idx": 19639, "node_name": "radix", "Dec": "the radix to be used while parsing s ."}{"idx": 19641, "node_name": "s", "Dec": "the charsequence containing the unsigned int representation to be parsed"}{"idx": 19642, "node_name": "beginindex", "Dec": "the beginning index , inclusive ."}{"idx": 19643, "node_name": "endindex", "Dec": "the ending index , exclusive ."}{"idx": 19644, "node_name": "radix", "Dec": "the radix to be used while parsing s ."}{"idx": 19646, "node_name": "s", "Dec": "a string containing the unsigned int representation to be parsed"}{"idx": 19648, "node_name": "s", "Dec": "the string to be parsed ."}{"idx": 19649, "node_name": "radix", "Dec": "the radix to be used in interpreting s"}{"idx": 19651, "node_name": "s", "Dec": "the string to be parsed ."}{"idx": 19653, "node_name": "i", "Dec": "an int value ."}{"idx": 19663, "node_name": "value", "Dec": "the value to hash"}{"idx": 19665, "node_name": "obj", "Dec": "the object to compare with ."}{"idx": 19667, "node_name": "nm", "Dec": "property name ."}{"idx": 19669, "node_name": "nm", "Dec": "property name ."}{"idx": 19670, "node_name": "val", "Dec": "default value ."}{"idx": 19672, "node_name": "nm", "Dec": "property name ."}{"idx": 19673, "node_name": "val", "Dec": "default value ."}{"idx": 19676, "node_name": "anotherinteger", "Dec": "the integer to be compared ."}{"idx": 19678, "node_name": "x", "Dec": "the first int to compare"}{"idx": 19679, "node_name": "y", "Dec": "the second int to compare"}{"idx": 19681, "node_name": "x", "Dec": "the first int to compare"}{"idx": 19682, "node_name": "y", "Dec": "the second int to compare"}{"idx": 19684, "node_name": "x", "Dec": "the value to convert to an unsigned long"}{"idx": 19686, "node_name": "dividend", "Dec": "the value to be divided"}{"idx": 19687, "node_name": "divisor", "Dec": "the value doing the dividing"}{"idx": 19689, "node_name": "dividend", "Dec": "the value to be divided"}{"idx": 19690, "node_name": "divisor", "Dec": "the value doing the dividing"}{"idx": 19692, "node_name": "i", "Dec": "the value whose highest one bit is to be computed"}{"idx": 19694, "node_name": "i", "Dec": "the value whose lowest one bit is to be computed"}{"idx": 19696, "node_name": "i", "Dec": "the value whose number of leading zeros is to be computed"}{"idx": 19698, "node_name": "i", "Dec": "the value whose number of trailing zeros is to be computed"}{"idx": 19700, "node_name": "i", "Dec": "the value whose bits are to be counted"}{"idx": 19702, "node_name": "i", "Dec": "the value whose bits are to be rotated left"}{"idx": 19703, "node_name": "distance", "Dec": "the number of bit positions to rotate left"}{"idx": 19705, "node_name": "i", "Dec": "the value whose bits are to be rotated right"}{"idx": 19706, "node_name": "distance", "Dec": "the number of bit positions to rotate right"}{"idx": 19708, "node_name": "i", "Dec": "the value to be reversed"}{"idx": 19710, "node_name": "i", "Dec": "the value whose signum is to be computed"}{"idx": 19712, "node_name": "i", "Dec": "the value whose bytes are to be reversed"}{"idx": 19714, "node_name": "a", "Dec": "the first operand"}{"idx": 19715, "node_name": "b", "Dec": "the second operand"}{"idx": 19717, "node_name": "a", "Dec": "the first operand"}{"idx": 19718, "node_name": "b", "Dec": "the second operand"}{"idx": 19720, "node_name": "a", "Dec": "the first operand"}{"idx": 19721, "node_name": "b", "Dec": "the second operand"}{"idx": 19724, "node_name": "lookup", "Dec": "ignored"}{"idx": 19728, "node_name": "message", "Dec": "the detail message ."}{"idx": 19730, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 19731, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19733, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 19737, "node_name": "s", "Dec": "the detail message ."}{"idx": 19742, "node_name": "newtarget", "Dec": "the new target"}{"idx": 19747, "node_name": "lookup", "Dec": "unused"}{"idx": 19748, "node_name": "name", "Dec": "unused"}{"idx": 19749, "node_name": "type", "Dec": "a reference type"}{"idx": 19751, "node_name": "lookup", "Dec": "unused"}{"idx": 19752, "node_name": "name", "Dec": "the descriptor ( jvms 4.3 ) of the desired primitive type"}{"idx": 19753, "node_name": "type", "Dec": "the required result type ( must be class.class )"}{"idx": 19755, "node_name": "lookup", "Dec": "the lookup context describing the class performing the operation ( normally stacked by the jvm )"}{"idx": 19756, "node_name": "name", "Dec": "the name of the constant to return , which must exactly match an enum constant in the specified type ."}{"idx": 19757, "node_name": "type", "Dec": "the class object describing the enum type for which a constant is to be returned"}{"idx": 19759, "node_name": "lookup", "Dec": "the lookup context describing the class performing the operation ( normally stacked by the jvm )"}{"idx": 19760, "node_name": "name", "Dec": "the name of the field"}{"idx": 19761, "node_name": "type", "Dec": "the type of the field"}{"idx": 19762, "node_name": "declaringclass", "Dec": "the class in which the field is declared"}{"idx": 19764, "node_name": "lookup", "Dec": "the lookup context describing the class performing the operation ( normally stacked by the jvm )"}{"idx": 19765, "node_name": "name", "Dec": "the name of the field"}{"idx": 19766, "node_name": "type", "Dec": "the type of the field"}{"idx": 19768, "node_name": "lookup", "Dec": "unused"}{"idx": 19769, "node_name": "name", "Dec": "unused"}{"idx": 19770, "node_name": "type", "Dec": "the desired type of the value to be returned , which must be compatible with the return type of invoke(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object...) handle"}{"idx": 19771, "node_name": "handle", "Dec": "invoke(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object...) handle to be invoked"}{"idx": 19772, "node_name": "args", "Dec": "the arguments to pass to invoke(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object...) handle , as if with methodhandle.invokewitharguments ( java.lang.object ... ) . each argument may be null ."}{"idx": 19774, "node_name": "lookup", "Dec": "the lookup context describing the class performing the operation ( normally stacked by the jvm )"}{"idx": 19775, "node_name": "name", "Dec": "the name of the field"}{"idx": 19776, "node_name": "type", "Dec": "the required result type ( must be class < varhandle > )"}{"idx": 19777, "node_name": "declaringclass", "Dec": "the class in which the field is declared"}{"idx": 19778, "node_name": "fieldtype", "Dec": "the type of the field"}{"idx": 19780, "node_name": "lookup", "Dec": "the lookup context describing the class performing the operation ( normally stacked by the jvm )"}{"idx": 19781, "node_name": "name", "Dec": "the name of the field"}{"idx": 19782, "node_name": "type", "Dec": "the required result type ( must be class < varhandle > )"}{"idx": 19783, "node_name": "declaringclass", "Dec": "the class in which the field is declared"}{"idx": 19784, "node_name": "fieldtype", "Dec": "the type of the field"}{"idx": 19786, "node_name": "lookup", "Dec": "the lookup context describing the class performing the operation ( normally stacked by the jvm )"}{"idx": 19787, "node_name": "name", "Dec": "unused"}{"idx": 19788, "node_name": "type", "Dec": "the required result type ( must be class < varhandle > )"}{"idx": 19789, "node_name": "arrayclass", "Dec": "the type of the array"}{"idx": 19792, "node_name": "target", "Dec": "the target to be permanently associated with this call site"}{"idx": 19794, "node_name": "targettype", "Dec": "the type of the method handle to be permanently associated with this call site"}{"idx": 19795, "node_name": "createtargethook", "Dec": "a method handle to invoke ( on the call site ) to produce the call site's target"}{"idx": 19798, "node_name": "ignore", "Dec": "a new target proposed for the call site , which is ignored"}{"idx": 19803, "node_name": "message", "Dec": "the detail message"}{"idx": 19805, "node_name": "message", "Dec": "the detail message"}{"idx": 19806, "node_name": "cause", "Dec": "the cause"}{"idx": 19808, "node_name": "cause", "Dec": "the cause"}{"idx": 19810, "node_name": "message", "Dec": "the detail message"}{"idx": 19811, "node_name": "cause", "Dec": "the cause"}{"idx": 19812, "node_name": "enablesuppression", "Dec": "whether or not suppressed exceptions are enabled"}{"idx": 19813, "node_name": "writablestacktrace", "Dec": "whether or not the stack trace is writable"}{"idx": 19819, "node_name": "caller", "Dec": "represents a lookup context with the accessibility privileges of the caller . specifically , the lookup context must have private access privileges . when used with invokedynamic , this is stacked automatically by the vm ."}{"idx": 19820, "node_name": "invokedname", "Dec": "the name of metafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType) to implement . when used with invokedynamic , this is provided by the nameandtype of the invokedynamic structure and is stacked automatically by the vm ."}{"idx": 19821, "node_name": "invokedtype", "Dec": "the expected signature of the callsite . the parameter types represent the types of capture variables ; the return type is the interface to implement . when used with invokedynamic , this is provided by the nameandtype of the invokedynamic structure and is stacked automatically by the vm . in the event that the implementation method is an instance method and this signature has any parameters , the first parameter in the invocation signature must correspond to the receiver ."}{"idx": 19822, "node_name": "sammethodtype", "Dec": "signature and return type of method to be implemented by the function object ."}{"idx": 19823, "node_name": "implmethod", "Dec": "a direct method handle describing the implementation method which should be called ( with suitable adaptation of argument types , return types , and with captured arguments prepended to the invocation arguments ) at invocation time ."}{"idx": 19824, "node_name": "instantiatedmethodtype", "Dec": "the signature and return type that should be enforced dynamically at invocation time . this may be the same as sammethodtype , or may be a specialization of it ."}{"idx": 19826, "node_name": "caller", "Dec": "represents a lookup context with the accessibility privileges of the caller . specifically , the lookup context must have private access privileges . when used with invokedynamic , this is stacked automatically by the vm ."}{"idx": 19827, "node_name": "invokedname", "Dec": "the name of altMetafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.Object...) to implement . when used with invokedynamic , this is provided by the nameandtype of the invokedynamic structure and is stacked automatically by the vm ."}{"idx": 19828, "node_name": "invokedtype", "Dec": "the expected signature of the callsite . the parameter types represent the types of capture variables ; the return type is the interface to implement . when used with invokedynamic , this is provided by the nameandtype of the invokedynamic structure and is stacked automatically by the vm . in the event that the implementation method is an instance method and this signature has any parameters , the first parameter in the invocation signature must correspond to the receiver ."}{"idx": 19829, "node_name": "args", "Dec": "an object [ ] array containing the required arguments sammethodtype , implmethod , instantiatedmethodtype , flags , and any optional arguments , as described altmetafactory ( methodhandles.lookup , string , methodtype , object ... ) above }"}{"idx": 19833, "node_name": "args", "Dec": "the signature-polymorphic parameter list , statically represented using varargs"}{"idx": 19835, "node_name": "args", "Dec": "the signature-polymorphic parameter list , statically represented using varargs"}{"idx": 19837, "node_name": "arguments", "Dec": "the arguments to pass to the target"}{"idx": 19839, "node_name": "arguments", "Dec": "the arguments to pass to the target"}{"idx": 19841, "node_name": "newtype", "Dec": "the expected type of the new method handle"}{"idx": 19843, "node_name": "arraytype", "Dec": "usually object [ ] , the type of the array argument from which to extract the spread arguments"}{"idx": 19844, "node_name": "arraylength", "Dec": "the number of arguments to spread from an incoming array argument"}{"idx": 19846, "node_name": "spreadargpos", "Dec": "the position ( zero-based index ) in the argument list at which spreading should start ."}{"idx": 19847, "node_name": "arraytype", "Dec": "usually object [ ] , the type of the array argument from which to extract the spread arguments"}{"idx": 19848, "node_name": "arraylength", "Dec": "the number of arguments to spread from an incoming array argument"}{"idx": 19850, "node_name": "makevarargs", "Dec": "true if the return method handle should have variable arity behavior"}{"idx": 19852, "node_name": "arraytype", "Dec": "often object [ ] , the type of the array argument which will collect the arguments"}{"idx": 19853, "node_name": "arraylength", "Dec": "the number of arguments to collect into a new array argument"}{"idx": 19855, "node_name": "collectargpos", "Dec": "the zero-based position in the parameter list at which to start collecting ."}{"idx": 19856, "node_name": "arraytype", "Dec": "often object [ ] , the type of the array argument which will collect the arguments"}{"idx": 19857, "node_name": "arraylength", "Dec": "the number of arguments to collect into a new array argument"}{"idx": 19859, "node_name": "arraytype", "Dec": "often object [ ] , the type of the array argument which will collect the arguments"}{"idx": 19863, "node_name": "x", "Dec": "the value to bind to the first argument of the target"}{"idx": 19881, "node_name": "expected", "Dec": "a class object representing the desired result type t"}{"idx": 19882, "node_name": "lookup", "Dec": "the lookup object that created reflectAs(java.lang.Class,java.lang.invoke.MethodHandles.Lookup)handleinfo , or one with equivalent access privileges"}{"idx": 19886, "node_name": "referencekind", "Dec": "an integer code for a kind of reference used to access a class member"}{"idx": 19888, "node_name": "kind", "Dec": "the reference kind part of the symbolic reference"}{"idx": 19889, "node_name": "defc", "Dec": "the declaring class part of the symbolic reference"}{"idx": 19890, "node_name": "name", "Dec": "the member name part of the symbolic reference"}{"idx": 19891, "node_name": "type", "Dec": "toString(int,java.lang.Class,java.lang.String,java.lang.invoke.MethodType) type part of the symbolic reference"}{"idx": 19894, "node_name": "intfc", "Dec": "a class object representing t"}{"idx": 19895, "node_name": "target", "Dec": "asInterfaceInstance(java.lang.Class,java.lang.invoke.MethodHandle) handle to invoke from the wrapper"}{"idx": 19897, "node_name": "x", "Dec": "any reference"}{"idx": 19899, "node_name": "x", "Dec": "any reference"}{"idx": 19901, "node_name": "x", "Dec": "any reference"}{"idx": 19906, "node_name": "targetclass", "Dec": "the target class"}{"idx": 19907, "node_name": "lookup", "Dec": "the caller lookup object"}{"idx": 19909, "node_name": "target", "Dec": "a direct method handle to crack into symbolic reference components"}{"idx": 19910, "node_name": "expected", "Dec": "a class object representing the desired result type t"}{"idx": 19912, "node_name": "arrayclass", "Dec": "an array type"}{"idx": 19914, "node_name": "arrayclass", "Dec": "an array type"}{"idx": 19916, "node_name": "arrayclass", "Dec": "an array type"}{"idx": 19918, "node_name": "arrayclass", "Dec": "the class of an array"}{"idx": 19920, "node_name": "arrayclass", "Dec": "the class of an array , of type t [ ]"}{"idx": 19922, "node_name": "viewarrayclass", "Dec": "the view array class , with a component type of type t"}{"idx": 19923, "node_name": "byteorder", "Dec": "the endianness of the view array elements , as stored in the underlying byte array"}{"idx": 19925, "node_name": "viewarrayclass", "Dec": "the view array class , with a component type of type t"}{"idx": 19926, "node_name": "byteorder", "Dec": "the endianness of the view array elements , as stored in the underlying bytebuffer ( note this overrides the endianness of a bytebuffer )"}{"idx": 19928, "node_name": "type", "Dec": "the desired target type"}{"idx": 19929, "node_name": "leadingargcount", "Dec": "number of fixed arguments , to be passed unchanged to the target"}{"idx": 19931, "node_name": "type", "Dec": "the desired target type"}{"idx": 19933, "node_name": "type", "Dec": "the desired target type"}{"idx": 19935, "node_name": "accessmode", "Dec": "the varhandle access mode"}{"idx": 19936, "node_name": "type", "Dec": "the desired target type"}{"idx": 19938, "node_name": "accessmode", "Dec": "the varhandle access mode"}{"idx": 19939, "node_name": "type", "Dec": "the desired target type"}{"idx": 19941, "node_name": "target", "Dec": "explicitCastArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType) handle to invoke after arguments are retyped"}{"idx": 19942, "node_name": "newtype", "Dec": "the expected type of the new method handle"}{"idx": 19944, "node_name": "target", "Dec": "permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int...) handle to invoke after arguments are reordered"}{"idx": 19945, "node_name": "newtype", "Dec": "the expected type of the new method handle"}{"idx": 19946, "node_name": "reorder", "Dec": "an index array which controls the reordering"}{"idx": 19948, "node_name": "type", "Dec": "the return type of the desired method handle"}{"idx": 19949, "node_name": "value", "Dec": "the value to return"}{"idx": 19951, "node_name": "type", "Dec": "the type of the sole parameter and return value of the desired method handle"}{"idx": 19953, "node_name": "type", "Dec": "the expected return type of the desired method handle"}{"idx": 19955, "node_name": "type", "Dec": "the type of the desired method handle"}{"idx": 19957, "node_name": "target", "Dec": "insertArguments(java.lang.invoke.MethodHandle,int,java.lang.Object...) handle to invoke after the argument is inserted"}{"idx": 19958, "node_name": "pos", "Dec": "where to insert the argument ( zero for the first )"}{"idx": 19959, "node_name": "values", "Dec": "the series of arguments to insert"}{"idx": 19961, "node_name": "target", "Dec": "dropArguments(java.lang.invoke.MethodHandle,int,java.util.List) handle to invoke after the arguments are dropped"}{"idx": 19962, "node_name": "valuetypes", "Dec": "the type ( s ) of the argument ( s ) to drop"}{"idx": 19963, "node_name": "pos", "Dec": "position of first argument to drop ( zero for the leftmost )"}{"idx": 19965, "node_name": "target", "Dec": "dropArguments(java.lang.invoke.MethodHandle,int,java.lang.Class...) handle to invoke after the arguments are dropped"}{"idx": 19966, "node_name": "valuetypes", "Dec": "the type ( s ) of the argument ( s ) to drop"}{"idx": 19967, "node_name": "pos", "Dec": "position of first argument to drop ( zero for the leftmost )"}{"idx": 19969, "node_name": "target", "Dec": "dropArgumentsToMatch(java.lang.invoke.MethodHandle,int,java.util.List,int) handle to adapt"}{"idx": 19970, "node_name": "skip", "Dec": "number of targets parameters to disregard ( they will be unchanged )"}{"idx": 19971, "node_name": "newtypes", "Dec": "the list of types to match target's parameter type list to"}{"idx": 19972, "node_name": "pos", "Dec": "place in newtypes where the non-skipped target parameters must occur"}{"idx": 19974, "node_name": "target", "Dec": "filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...) handle to invoke after arguments are filtered"}{"idx": 19975, "node_name": "pos", "Dec": "the position of the first argument to filter"}{"idx": 19976, "node_name": "filters", "Dec": "method handles to call initially on filtered arguments"}{"idx": 19978, "node_name": "target", "Dec": "collectArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle) handle to invoke after filtering the subsequence of arguments"}{"idx": 19979, "node_name": "pos", "Dec": "the position of the first adapter argument to pass to the filter , and / or the target argument which receives the result of the filter"}{"idx": 19980, "node_name": "filter", "Dec": "method handle to call on the subsequence of arguments"}{"idx": 19982, "node_name": "target", "Dec": "filterReturnValue(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle) handle to invoke before filtering the return value"}{"idx": 19983, "node_name": "filter", "Dec": "method handle to call on the return value"}{"idx": 19985, "node_name": "target", "Dec": "foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle) handle to invoke after arguments are combined"}{"idx": 19986, "node_name": "combiner", "Dec": "method handle to call initially on the incoming arguments"}{"idx": 19988, "node_name": "target", "Dec": "foldArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle) handle to invoke after arguments are combined"}{"idx": 19989, "node_name": "pos", "Dec": "the position at which to start folding and at which to insert the folding result ; if this is 0 , the effect is the same as for foldarguments ( methodhandle , methodhandle ) ."}{"idx": 19990, "node_name": "combiner", "Dec": "method handle to call initially on the incoming arguments"}{"idx": 19992, "node_name": "test", "Dec": "method handle used for test , must return boolean"}{"idx": 19993, "node_name": "target", "Dec": "method handle to call if test passes"}{"idx": 19994, "node_name": "fallback", "Dec": "method handle to call if test fails"}{"idx": 19996, "node_name": "target", "Dec": "method handle to call"}{"idx": 19997, "node_name": "extype", "Dec": "the type of exception which the handler will catch"}{"idx": 19998, "node_name": "handler", "Dec": "method handle to call if a matching exception is thrown"}{"idx": 20000, "node_name": "returntype", "Dec": "the return type of the desired method handle"}{"idx": 20001, "node_name": "extype", "Dec": "the parameter type of the desired method handle"}{"idx": 20003, "node_name": "clauses", "Dec": "an array of arrays ( 4-tuples ) of methodhandles adhering to the rules described above ."}{"idx": 20005, "node_name": "init", "Dec": "optional initializer , providing the initial value of the loop variable . may be null , implying a default initial value . see above for other constraints ."}{"idx": 20006, "node_name": "pred", "Dec": "condition for the loop , which may not be null . its result type must be boolean . see above for other constraints ."}{"idx": 20007, "node_name": "body", "Dec": "body of the loop , which may not be null . it controls the loop parameters and result type . see above for other constraints ."}{"idx": 20009, "node_name": "init", "Dec": "optional initializer , providing the initial value of the loop variable . may be null , implying a default initial value . see above for other constraints ."}{"idx": 20010, "node_name": "body", "Dec": "body of the loop , which may not be null . it controls the loop parameters and result type . see above for other constraints ."}{"idx": 20011, "node_name": "pred", "Dec": "condition for the loop , which may not be null . its result type must be boolean . see above for other constraints ."}{"idx": 20013, "node_name": "iterations", "Dec": "a non-null handle to return the number of iterations this loop should run . the handle's result type must be int . see above for other constraints ."}{"idx": 20014, "node_name": "init", "Dec": "optional initializer , providing the initial value of the loop variable . may be null , implying a default initial value . see above for other constraints ."}{"idx": 20015, "node_name": "body", "Dec": "body of the loop , which may not be null . it controls the loop parameters and result type in the standard case ( see above for details ) . it must accept its own return type ( if non-void ) plus an int parameter ( for the counter ) , and may accept any number of additional types . see above for other constraints ."}{"idx": 20017, "node_name": "start", "Dec": "a non-null handle to return the start value of the loop counter , which must be int . see above for other constraints ."}{"idx": 20018, "node_name": "end", "Dec": "a non-null handle to return the end value of the loop counter ( the loop will run to end-1 ) . the result type must be int . see above for other constraints ."}{"idx": 20019, "node_name": "init", "Dec": "optional initializer , providing the initial value of the loop variable . may be null , implying a default initial value . see above for other constraints ."}{"idx": 20020, "node_name": "body", "Dec": "body of the loop , which may not be null . it controls the loop parameters and result type in the standard case ( see above for details ) . it must accept its own return type ( if non-void ) plus an int parameter ( for the counter ) , and may accept any number of additional types . see above for other constraints ."}{"idx": 20022, "node_name": "iterator", "Dec": "an optional handle to return the iterator to start the loop . if non-null , the handle must return iterator or a subtype . see above for other constraints ."}{"idx": 20023, "node_name": "init", "Dec": "optional initializer , providing the initial value of the loop variable . may be null , implying a default initial value . see above for other constraints ."}{"idx": 20024, "node_name": "body", "Dec": "body of the loop , which may not be null . it controls the loop parameters and result type in the standard case ( see above for details ) . it must accept its own return type ( if non-void ) plus a t parameter ( for the iterated values ) , and may accept any number of additional types . see above for other constraints ."}{"idx": 20026, "node_name": "target", "Dec": "the handle whose execution is to be wrapped in a try block ."}{"idx": 20027, "node_name": "cleanup", "Dec": "the handle that is invoked in the finally block ."}{"idx": 20038, "node_name": "requestedlookupclass", "Dec": "the desired lookup class for the new lookup object"}{"idx": 20040, "node_name": "modetodrop", "Dec": "the lookup mode to drop"}{"idx": 20042, "node_name": "bytes", "Dec": "the class bytes"}{"idx": 20045, "node_name": "refc", "Dec": "the class from which findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) is accessed"}{"idx": 20046, "node_name": "name", "Dec": "the name of findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 20047, "node_name": "type", "Dec": "the type of findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 20049, "node_name": "refc", "Dec": "the class or interface from which findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) is accessed"}{"idx": 20050, "node_name": "name", "Dec": "the name of findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 20051, "node_name": "type", "Dec": "the type of findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) , with the receiver argument omitted"}{"idx": 20053, "node_name": "refc", "Dec": "the class or interface from which findConstructor(java.lang.Class,java.lang.invoke.MethodType) is accessed"}{"idx": 20054, "node_name": "type", "Dec": "the type of findConstructor(java.lang.Class,java.lang.invoke.MethodType) , with the receiver argument omitted , and a void return type"}{"idx": 20056, "node_name": "targetname", "Dec": "the fully qualified name of the class to be looked up ."}{"idx": 20058, "node_name": "targetclass", "Dec": "the class to be access-checked"}{"idx": 20060, "node_name": "refc", "Dec": "the class or interface from which findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,java.lang.Class) is accessed"}{"idx": 20061, "node_name": "name", "Dec": "the name of findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,java.lang.Class) ( which must not be \" < init > \")"}{"idx": 20062, "node_name": "type", "Dec": "the type of findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,java.lang.Class) , with the receiver argument omitted"}{"idx": 20063, "node_name": "specialcaller", "Dec": "the proposed calling class to perform the invokespecial"}{"idx": 20065, "node_name": "refc", "Dec": "the class or interface from which findGetter(java.lang.Class,java.lang.String,java.lang.Class) is accessed"}{"idx": 20066, "node_name": "name", "Dec": "the field's name"}{"idx": 20067, "node_name": "type", "Dec": "the field's type"}{"idx": 20069, "node_name": "refc", "Dec": "the class or interface from which findSetter(java.lang.Class,java.lang.String,java.lang.Class) is accessed"}{"idx": 20070, "node_name": "name", "Dec": "the field's name"}{"idx": 20071, "node_name": "type", "Dec": "the field's type"}{"idx": 20073, "node_name": "recv", "Dec": "the receiver class , of type r , that declares the non-static field"}{"idx": 20074, "node_name": "name", "Dec": "the field's name"}{"idx": 20075, "node_name": "type", "Dec": "the field's type , of type t"}{"idx": 20077, "node_name": "refc", "Dec": "the class or interface from which findStaticGetter(java.lang.Class,java.lang.String,java.lang.Class) is accessed"}{"idx": 20078, "node_name": "name", "Dec": "the field's name"}{"idx": 20079, "node_name": "type", "Dec": "the field's type"}{"idx": 20081, "node_name": "refc", "Dec": "the class or interface from which findStaticSetter(java.lang.Class,java.lang.String,java.lang.Class) is accessed"}{"idx": 20082, "node_name": "name", "Dec": "the field's name"}{"idx": 20083, "node_name": "type", "Dec": "the field's type"}{"idx": 20085, "node_name": "decl", "Dec": "the class that declares the static field"}{"idx": 20086, "node_name": "name", "Dec": "the field's name"}{"idx": 20087, "node_name": "type", "Dec": "the field's type , of type t"}{"idx": 20089, "node_name": "receiver", "Dec": "the object from which bind(java.lang.Object,java.lang.String,java.lang.invoke.MethodType) is accessed"}{"idx": 20090, "node_name": "name", "Dec": "the name of bind(java.lang.Object,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 20091, "node_name": "type", "Dec": "the type of bind(java.lang.Object,java.lang.String,java.lang.invoke.MethodType) , with the receiver argument omitted"}{"idx": 20093, "node_name": "m", "Dec": "the reflected method"}{"idx": 20095, "node_name": "m", "Dec": "the reflected method"}{"idx": 20096, "node_name": "specialcaller", "Dec": "the class nominally calling unreflectSpecial(java.lang.reflect.Method,java.lang.Class)"}{"idx": 20098, "node_name": "c", "Dec": "the reflected constructor"}{"idx": 20100, "node_name": "f", "Dec": "the reflected field"}{"idx": 20102, "node_name": "f", "Dec": "the reflected field"}{"idx": 20104, "node_name": "f", "Dec": "the reflected field , with a field of type t , and a declaring class of type r"}{"idx": 20106, "node_name": "target", "Dec": "a direct method handle to crack into symbolic reference components"}{"idx": 20110, "node_name": "rtype", "Dec": "the return type"}{"idx": 20111, "node_name": "ptypes", "Dec": "the parameter types"}{"idx": 20113, "node_name": "rtype", "Dec": "the return type"}{"idx": 20114, "node_name": "ptypes", "Dec": "the parameter types"}{"idx": 20116, "node_name": "rtype", "Dec": "the return type"}{"idx": 20117, "node_name": "ptype0", "Dec": "the first parameter type"}{"idx": 20118, "node_name": "ptypes", "Dec": "the remaining parameter types"}{"idx": 20120, "node_name": "rtype", "Dec": "the return type"}{"idx": 20122, "node_name": "rtype", "Dec": "the return type"}{"idx": 20123, "node_name": "ptype0", "Dec": "the parameter type"}{"idx": 20125, "node_name": "rtype", "Dec": "the return type"}{"idx": 20126, "node_name": "ptypes", "Dec": "methodType(java.lang.Class,java.lang.invoke.MethodType) type which supplies the parameter types"}{"idx": 20128, "node_name": "objectargcount", "Dec": "number of parameters ( excluding the final array parameter if any )"}{"idx": 20129, "node_name": "finalarray", "Dec": "whether there will be a trailing array parameter , of type object [ ]"}{"idx": 20131, "node_name": "objectargcount", "Dec": "number of parameters"}{"idx": 20133, "node_name": "num", "Dec": "the index ( zero-based ) of the parameter type to change"}{"idx": 20134, "node_name": "nptype", "Dec": "a new parameter type to replace the old one with"}{"idx": 20136, "node_name": "num", "Dec": "the position ( zero-based ) of the inserted parameter type ( s )"}{"idx": 20137, "node_name": "ptypestoinsert", "Dec": "zero or more new parameter types to insert into the parameter list"}{"idx": 20139, "node_name": "ptypestoinsert", "Dec": "zero or more new parameter types to insert after the end of the parameter list"}{"idx": 20141, "node_name": "num", "Dec": "the position ( zero-based ) of the inserted parameter type ( s )"}{"idx": 20142, "node_name": "ptypestoinsert", "Dec": "zero or more new parameter types to insert into the parameter list"}{"idx": 20144, "node_name": "ptypestoinsert", "Dec": "zero or more new parameter types to insert after the end of the parameter list"}{"idx": 20146, "node_name": "start", "Dec": "the index ( zero-based ) of the first parameter type to remove"}{"idx": 20147, "node_name": "end", "Dec": "the index ( greater than start ) of the first parameter type after not to remove"}{"idx": 20149, "node_name": "nrtype", "Dec": "a return parameter type to replace the old one with"}{"idx": 20157, "node_name": "num", "Dec": "the index ( zero-based ) of the desired parameter type"}{"idx": 20164, "node_name": "x", "Dec": "object to compare"}{"idx": 20168, "node_name": "descriptor", "Dec": "a bytecode-level type descriptor string \" ( t ... ) t \""}{"idx": 20169, "node_name": "loader", "Dec": "the class loader in which to look up the types"}{"idx": 20175, "node_name": "type", "Dec": "the method type that this call site will have"}{"idx": 20177, "node_name": "target", "Dec": "the method handle that will be the initial target of the call site"}{"idx": 20180, "node_name": "newtarget", "Dec": "the new target"}{"idx": 20182, "node_name": "sites", "Dec": "an array of call sites to be synchronized"}{"idx": 20185, "node_name": "capturingclass", "Dec": "the class in which the lambda expression appears"}{"idx": 20186, "node_name": "functionalinterfaceclass", "Dec": "name , in slash-delimited form , of static type of the returned lambda object"}{"idx": 20187, "node_name": "functionalinterfacemethodname", "Dec": "name of the functional interface method for the present at the lambda factory site"}{"idx": 20188, "node_name": "functionalinterfacemethodsignature", "Dec": "signature of the functional interface method present at the lambda factory site"}{"idx": 20189, "node_name": "implmethodkind", "Dec": "method handle kind for the implementation method"}{"idx": 20190, "node_name": "implclass", "Dec": "name , in slash-delimited form , for the class holding the implementation method"}{"idx": 20191, "node_name": "implmethodname", "Dec": "name of the implementation method"}{"idx": 20192, "node_name": "implmethodsignature", "Dec": "signature of the implementation method"}{"idx": 20193, "node_name": "instantiatedmethodtype", "Dec": "the signature of the primary functional interface method after type variables are substituted with their instantiation from the capture site"}{"idx": 20194, "node_name": "capturedargs", "Dec": "the dynamic arguments to the lambda factory site , which represent variables captured by the lambda"}{"idx": 20206, "node_name": "i", "Dec": "the argument to capture"}{"idx": 20209, "node_name": "msg", "Dec": "exception message"}{"idx": 20211, "node_name": "msg", "Dec": "exception message"}{"idx": 20212, "node_name": "cause", "Dec": "throwable cause"}{"idx": 20215, "node_name": "lookup", "Dec": "represents a lookup context with the accessibility privileges of the caller . specifically , the lookup context must have private access privileges . when used with invokedynamic , this is stacked automatically by the vm ."}{"idx": 20216, "node_name": "name", "Dec": "the name of makeConcat(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType) to implement . this name is arbitrary , and has no meaning for this linkage method . when used with invokedynamic , this is provided by the nameandtype of the invokedynamic structure and is stacked automatically by the vm ."}{"idx": 20217, "node_name": "concattype", "Dec": "the expected signature of the callsite . the parameter types represent the types of concatenation arguments ; the return type is always assignable from string . when used with invokedynamic , this is provided by the nameandtype of the invokedynamic structure and is stacked automatically by the vm ."}{"idx": 20219, "node_name": "lookup", "Dec": "represents a lookup context with the accessibility privileges of the caller . specifically , the lookup context must have private access privileges . when used with invokedynamic , this is stacked automatically by the vm ."}{"idx": 20220, "node_name": "name", "Dec": "the name of makeConcatWithConstants(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object...) to implement . this name is arbitrary , and has no meaning for this linkage method . when used with invokedynamic , this is provided by the nameandtype of the invokedynamic structure and is stacked automatically by the vm ."}{"idx": 20221, "node_name": "concattype", "Dec": "the expected signature of the callsite . the parameter types represent the types of dynamic concatenation arguments ; the return type is always assignable from string . when used with invokedynamic , this is provided by the nameandtype of the invokedynamic structure and is stacked automatically by the vm ."}{"idx": 20222, "node_name": "recipe", "Dec": "concatenation recipe , described above ."}{"idx": 20223, "node_name": "constants", "Dec": "a vararg parameter representing the constants passed to the linkage method ."}{"idx": 20228, "node_name": "target", "Dec": "guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle) handle selected by the switch point as long as it is valid"}{"idx": 20229, "node_name": "fallback", "Dec": "guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle) handle selected by the switch point after it is invalidated"}{"idx": 20231, "node_name": "switchpoints", "Dec": "an array of call sites to be synchronized"}{"idx": 20242, "node_name": "i", "Dec": "the index of the parameter"}{"idx": 20247, "node_name": "newreturn", "Dec": "a field descriptor for the new return type"}{"idx": 20249, "node_name": "index", "Dec": "the index of the parameter to change"}{"idx": 20250, "node_name": "paramtype", "Dec": "a field descriptor describing the new parameter type"}{"idx": 20252, "node_name": "start", "Dec": "the index of the first parameter to remove"}{"idx": 20253, "node_name": "end", "Dec": "the index after the last parameter to remove"}{"idx": 20255, "node_name": "pos", "Dec": "the index at which to insert the first inserted parameter"}{"idx": 20256, "node_name": "paramtypes", "Dec": "field descriptors describing the new parameter types to insert"}{"idx": 20260, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 20263, "node_name": "methodname", "Dec": "the signature-polymorphic method name"}{"idx": 20266, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ) , statically represented using varargs ."}{"idx": 20268, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t newvalue ) , statically represented using varargs ."}{"idx": 20270, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn ) , statically represented using varargs ."}{"idx": 20272, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t newvalue ) , statically represented using varargs ."}{"idx": 20274, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn ) , statically represented using varargs ."}{"idx": 20276, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t newvalue ) , statically represented using varargs ."}{"idx": 20278, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn ) , statically represented using varargs ."}{"idx": 20280, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t newvalue ) , statically represented using varargs ."}{"idx": 20282, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t expectedvalue , t newvalue ) , statically represented using varargs ."}{"idx": 20284, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t expectedvalue , t newvalue ) , statically represented using varargs ."}{"idx": 20286, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t expectedvalue , t newvalue ) , statically represented using varargs ."}{"idx": 20288, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t expectedvalue , t newvalue ) , statically represented using varargs ."}{"idx": 20290, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t expectedvalue , t newvalue ) , statically represented using varargs ."}{"idx": 20292, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t expectedvalue , t newvalue ) , statically represented using varargs ."}{"idx": 20294, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t expectedvalue , t newvalue ) , statically represented using varargs ."}{"idx": 20296, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t expectedvalue , t newvalue ) , statically represented using varargs ."}{"idx": 20298, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t newvalue ) , statically represented using varargs ."}{"idx": 20300, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t newvalue ) , statically represented using varargs ."}{"idx": 20302, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t newvalue ) , statically represented using varargs ."}{"idx": 20304, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t value ) , statically represented using varargs ."}{"idx": 20306, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t value ) , statically represented using varargs ."}{"idx": 20308, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t value ) , statically represented using varargs ."}{"idx": 20310, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t mask ) , statically represented using varargs ."}{"idx": 20312, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t mask ) , statically represented using varargs ."}{"idx": 20314, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t mask ) , statically represented using varargs ."}{"idx": 20316, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t mask ) , statically represented using varargs ."}{"idx": 20318, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t mask ) , statically represented using varargs ."}{"idx": 20320, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t mask ) , statically represented using varargs ."}{"idx": 20322, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t mask ) , statically represented using varargs ."}{"idx": 20324, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t mask ) , statically represented using varargs ."}{"idx": 20326, "node_name": "args", "Dec": "the signature-polymorphic parameter list of the form ( ct1 ct1 , ..., ctn ctn , t mask ) , statically represented using varargs ."}{"idx": 20331, "node_name": "accessmode", "Dec": "the access mode , corresponding to the signature-polymorphic method of the same name"}{"idx": 20333, "node_name": "accessmode", "Dec": "the access mode , corresponding to the signature-polymorphic method of the same name"}{"idx": 20335, "node_name": "accessmode", "Dec": "the access mode , corresponding to the signature-polymorphic method of the same name"}{"idx": 20344, "node_name": "name", "Dec": "the unqualifed name of the field"}{"idx": 20345, "node_name": "declaringclass", "Dec": "a classdesc describing the declaring class , for field var handles"}{"idx": 20346, "node_name": "fieldtype", "Dec": "a classdesc describing the type of the field"}{"idx": 20348, "node_name": "name", "Dec": "the unqualified name of the field"}{"idx": 20349, "node_name": "declaringclass", "Dec": "a classdesc describing the declaring class , for field var handles"}{"idx": 20350, "node_name": "fieldtype", "Dec": "a classdesc describing the type of the field"}{"idx": 20352, "node_name": "arrayclass", "Dec": "a classdesc describing the type of the array"}{"idx": 20355, "node_name": "lookup", "Dec": "resolveConstantDesc(java.lang.invoke.MethodHandles.Lookup)handles.lookup to provide name resolution and access control context"}{"idx": 20359, "node_name": "type", "Dec": "the method type that this call site will have"}{"idx": 20361, "node_name": "target", "Dec": "the method handle that will be the initial target of the call site"}{"idx": 20364, "node_name": "newtarget", "Dec": "the new target"}{"idx": 20368, "node_name": "s", "Dec": "the detail message ."}{"idx": 20372, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 20377, "node_name": "msg", "Dec": "the detail message ; can be null"}{"idx": 20379, "node_name": "cause", "Dec": "the cause ; can be null"}{"idx": 20381, "node_name": "msg", "Dec": "the detail message ; can be null"}{"idx": 20382, "node_name": "cause", "Dec": "the cause ; can be null"}{"idx": 20386, "node_name": "s", "Dec": "the detail message ."}{"idx": 20388, "node_name": "s", "Dec": "the detail message ."}{"idx": 20389, "node_name": "cause", "Dec": "the cause , may be null"}{"idx": 20397, "node_name": "i", "Dec": "a long to be converted to a string ."}{"idx": 20398, "node_name": "radix", "Dec": "the radix to use in the string representation ."}{"idx": 20400, "node_name": "i", "Dec": "an integer to be converted to an unsigned string ."}{"idx": 20401, "node_name": "radix", "Dec": "the radix to use in the string representation ."}{"idx": 20403, "node_name": "i", "Dec": "a long to be converted to a string ."}{"idx": 20405, "node_name": "i", "Dec": "a long to be converted to a string ."}{"idx": 20407, "node_name": "i", "Dec": "a long to be converted to a string ."}{"idx": 20409, "node_name": "i", "Dec": "a long to be converted ."}{"idx": 20411, "node_name": "i", "Dec": "an integer to be converted to an unsigned string ."}{"idx": 20413, "node_name": "s", "Dec": "the string containing the long representation to be parsed ."}{"idx": 20414, "node_name": "radix", "Dec": "the radix to be used while parsing s ."}{"idx": 20416, "node_name": "s", "Dec": "the charsequence containing the long representation to be parsed"}{"idx": 20417, "node_name": "beginindex", "Dec": "the beginning index , inclusive ."}{"idx": 20418, "node_name": "endindex", "Dec": "the ending index , exclusive ."}{"idx": 20419, "node_name": "radix", "Dec": "the radix to be used while parsing s ."}{"idx": 20421, "node_name": "s", "Dec": "a string containing the long representation to be parsed"}{"idx": 20423, "node_name": "s", "Dec": "the string containing the unsigned integer representation to be parsed"}{"idx": 20424, "node_name": "radix", "Dec": "the radix to be used while parsing s ."}{"idx": 20426, "node_name": "s", "Dec": "the charsequence containing the unsigned long representation to be parsed"}{"idx": 20427, "node_name": "beginindex", "Dec": "the beginning index , inclusive ."}{"idx": 20428, "node_name": "endindex", "Dec": "the ending index , exclusive ."}{"idx": 20429, "node_name": "radix", "Dec": "the radix to be used while parsing s ."}{"idx": 20431, "node_name": "s", "Dec": "a string containing the unsigned long representation to be parsed"}{"idx": 20433, "node_name": "s", "Dec": "the string to be parsed"}{"idx": 20434, "node_name": "radix", "Dec": "the radix to be used in interpreting s"}{"idx": 20436, "node_name": "s", "Dec": "the string to be parsed ."}{"idx": 20438, "node_name": "l", "Dec": "a long value ."}{"idx": 20449, "node_name": "value", "Dec": "the value to hash"}{"idx": 20451, "node_name": "obj", "Dec": "the object to compare with ."}{"idx": 20453, "node_name": "nm", "Dec": "property name ."}{"idx": 20455, "node_name": "nm", "Dec": "property name ."}{"idx": 20456, "node_name": "val", "Dec": "default value ."}{"idx": 20458, "node_name": "nm", "Dec": "property name ."}{"idx": 20459, "node_name": "val", "Dec": "default value ."}{"idx": 20461, "node_name": "anotherlong", "Dec": "the long to be compared ."}{"idx": 20463, "node_name": "x", "Dec": "the first long to compare"}{"idx": 20464, "node_name": "y", "Dec": "the second long to compare"}{"idx": 20466, "node_name": "x", "Dec": "the first long to compare"}{"idx": 20467, "node_name": "y", "Dec": "the second long to compare"}{"idx": 20469, "node_name": "dividend", "Dec": "the value to be divided"}{"idx": 20470, "node_name": "divisor", "Dec": "the value doing the dividing"}{"idx": 20472, "node_name": "dividend", "Dec": "the value to be divided"}{"idx": 20473, "node_name": "divisor", "Dec": "the value doing the dividing"}{"idx": 20475, "node_name": "i", "Dec": "the value whose highest one bit is to be computed"}{"idx": 20477, "node_name": "i", "Dec": "the value whose lowest one bit is to be computed"}{"idx": 20479, "node_name": "i", "Dec": "the value whose number of leading zeros is to be computed"}{"idx": 20481, "node_name": "i", "Dec": "the value whose number of trailing zeros is to be computed"}{"idx": 20483, "node_name": "i", "Dec": "the value whose bits are to be counted"}{"idx": 20485, "node_name": "i", "Dec": "the value whose bits are to be rotated left"}{"idx": 20486, "node_name": "distance", "Dec": "the number of bit positions to rotate left"}{"idx": 20488, "node_name": "i", "Dec": "the value whose bits are to be rotated right"}{"idx": 20489, "node_name": "distance", "Dec": "the number of bit positions to rotate right"}{"idx": 20491, "node_name": "i", "Dec": "the value to be reversed"}{"idx": 20493, "node_name": "i", "Dec": "the value whose signum is to be computed"}{"idx": 20495, "node_name": "i", "Dec": "the value whose bytes are to be reversed"}{"idx": 20497, "node_name": "a", "Dec": "the first operand"}{"idx": 20498, "node_name": "b", "Dec": "the second operand"}{"idx": 20500, "node_name": "a", "Dec": "the first operand"}{"idx": 20501, "node_name": "b", "Dec": "the second operand"}{"idx": 20503, "node_name": "a", "Dec": "the first operand"}{"idx": 20504, "node_name": "b", "Dec": "the second operand"}{"idx": 20507, "node_name": "lookup", "Dec": "ignored"}{"idx": 20519, "node_name": "value", "Dec": "true to enable the verbose output ; false to disable ."}{"idx": 20529, "node_name": "classname", "Dec": "the fully qualified name of the class of the lock object ."}{"idx": 20530, "node_name": "identityhashcode", "Dec": "the identity hash code of the lock object ."}{"idx": 20534, "node_name": "cd", "Dec": "compositedata representing a lockinfo"}{"idx": 20557, "node_name": "connection", "Dec": "the mbeanserverconnection to forward to ."}{"idx": 20558, "node_name": "mxbeanname", "Dec": "the name of a platform mxbean within connection to forward to . mxbeanname must be in the format of objectname ."}{"idx": 20559, "node_name": "mxbeaninterface", "Dec": "the mxbean interface to be implemented by the proxy ."}{"idx": 20561, "node_name": "mxbeaninterface", "Dec": "a management interface for a platform mxbean with one single instance in the java virtual machine if implemented ."}{"idx": 20563, "node_name": "mxbeaninterface", "Dec": "a management interface for a platform mxbean"}{"idx": 20565, "node_name": "connection", "Dec": "the mbeanserverconnection to forward to ."}{"idx": 20566, "node_name": "mxbeaninterface", "Dec": "a management interface for a platform mxbean with one single instance in the java virtual machine being monitored , if implemented ."}{"idx": 20568, "node_name": "connection", "Dec": "the mbeanserverconnection to forward to ."}{"idx": 20569, "node_name": "mxbeaninterface", "Dec": "a management interface for a platform mxbean"}{"idx": 20573, "node_name": "name", "Dec": "permission name . must be either \" monitor \" or \" control \" ."}{"idx": 20575, "node_name": "name", "Dec": "permission name . must be either \" monitor \" or \" control \" ."}{"idx": 20576, "node_name": "actions", "Dec": "must be either null or the empty string ."}{"idx": 20587, "node_name": "value", "Dec": "true to enable verbose output ; false to disable ."}{"idx": 20593, "node_name": "poolname", "Dec": "the name of the memory pool which triggers this notification ."}{"idx": 20594, "node_name": "usage", "Dec": "memory usage of the memory pool ."}{"idx": 20595, "node_name": "count", "Dec": "the threshold crossing count ."}{"idx": 20600, "node_name": "cd", "Dec": "compositedata representing a memorynotificationinfo"}{"idx": 20611, "node_name": "threshold", "Dec": "the new threshold value in bytes . must be non-negative ."}{"idx": 20617, "node_name": "threshold", "Dec": "the new collection usage threshold value in bytes . must be non-negative ."}{"idx": 20625, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 20629, "node_name": "init", "Dec": "the initial amount of memory in bytes that the java virtual machine allocates ; or -1 if undefined ."}{"idx": 20630, "node_name": "used", "Dec": "the amount of used memory in bytes ."}{"idx": 20631, "node_name": "committed", "Dec": "the amount of committed memory in bytes ."}{"idx": 20632, "node_name": "max", "Dec": "the maximum amount of memory in bytes that can be used ; or -1 if undefined ."}{"idx": 20639, "node_name": "cd", "Dec": "compositedata representing a memoryusage"}{"idx": 20642, "node_name": "classname", "Dec": "the fully qualified name of the class of the lock object ."}{"idx": 20643, "node_name": "identityhashcode", "Dec": "the identity hash code of the lock object ."}{"idx": 20644, "node_name": "stackdepth", "Dec": "the depth in the stack trace where the object monitor was locked ."}{"idx": 20645, "node_name": "stackframe", "Dec": "the stack frame that locked the object monitor ."}{"idx": 20649, "node_name": "cd", "Dec": "compositedata representing a monitorinfo"}{"idx": 20659, "node_name": "loggername", "Dec": "the name of the logger to be retrieved ."}{"idx": 20661, "node_name": "loggername", "Dec": "the name of the logger to be set . must be non-null ."}{"idx": 20662, "node_name": "levelname", "Dec": "the name of the level to set on the specified logger , or null if setting the level to inherit from its nearest ancestor ."}{"idx": 20664, "node_name": "loggername", "Dec": "the name of a logger ."}{"idx": 20704, "node_name": "cd", "Dec": "compositedata representing a threadinfo"}{"idx": 20714, "node_name": "id", "Dec": "the thread id of the thread . must be positive ."}{"idx": 20716, "node_name": "ids", "Dec": "an array of thread ids ."}{"idx": 20718, "node_name": "id", "Dec": "the thread id of the thread . must be positive ."}{"idx": 20719, "node_name": "maxdepth", "Dec": "the maximum number of entries in the stack trace to be dumped . integer.max_value could be used to request the entire stack to be dumped ."}{"idx": 20721, "node_name": "ids", "Dec": "an array of thread ids"}{"idx": 20722, "node_name": "maxdepth", "Dec": "the maximum number of entries in the stack trace to be dumped . integer.max_value could be used to request the entire stack to be dumped ."}{"idx": 20726, "node_name": "enable", "Dec": "true to enable ; false to disable ."}{"idx": 20730, "node_name": "id", "Dec": "the thread id of a thread"}{"idx": 20732, "node_name": "id", "Dec": "the thread id of a thread"}{"idx": 20737, "node_name": "enable", "Dec": "true to enable ; false to disable ."}{"idx": 20744, "node_name": "ids", "Dec": "an array of thread ids ."}{"idx": 20745, "node_name": "lockedmonitors", "Dec": "if true , retrieves all locked monitors ."}{"idx": 20746, "node_name": "lockedsynchronizers", "Dec": "if true , retrieves all locked ownable synchronizers ."}{"idx": 20748, "node_name": "ids", "Dec": "an array of thread ids ."}{"idx": 20749, "node_name": "lockedmonitors", "Dec": "if true , retrieves all locked monitors ."}{"idx": 20750, "node_name": "lockedsynchronizers", "Dec": "if true , retrieves all locked ownable synchronizers ."}{"idx": 20751, "node_name": "maxdepth", "Dec": "indicates the maximum number of stacktraceelement to be retrieved from the stack trace ."}{"idx": 20753, "node_name": "lockedmonitors", "Dec": "if true , dump all locked monitors ."}{"idx": 20754, "node_name": "lockedsynchronizers", "Dec": "if true , dump all locked ownable synchronizers ."}{"idx": 20756, "node_name": "lockedmonitors", "Dec": "if true , dump all locked monitors ."}{"idx": 20757, "node_name": "lockedsynchronizers", "Dec": "if true , dump all locked ownable synchronizers ."}{"idx": 20758, "node_name": "maxdepth", "Dec": "indicates the maximum number of stacktraceelement to be retrieved from the stack trace ."}{"idx": 20763, "node_name": "a", "Dec": "an angle , in radians ."}{"idx": 20765, "node_name": "a", "Dec": "an angle , in radians ."}{"idx": 20767, "node_name": "a", "Dec": "an angle , in radians ."}{"idx": 20769, "node_name": "a", "Dec": "the value whose arc sine is to be returned ."}{"idx": 20771, "node_name": "a", "Dec": "the value whose arc cosine is to be returned ."}{"idx": 20773, "node_name": "a", "Dec": "the value whose arc tangent is to be returned ."}{"idx": 20775, "node_name": "angdeg", "Dec": "an angle , in degrees"}{"idx": 20777, "node_name": "angrad", "Dec": "an angle , in radians"}{"idx": 20779, "node_name": "a", "Dec": "the exponent to raise e to ."}{"idx": 20781, "node_name": "a", "Dec": "a value"}{"idx": 20783, "node_name": "a", "Dec": "a value"}{"idx": 20785, "node_name": "a", "Dec": "a value ."}{"idx": 20787, "node_name": "a", "Dec": "a value ."}{"idx": 20789, "node_name": "f1", "Dec": "the dividend ."}{"idx": 20790, "node_name": "f2", "Dec": "the divisor ."}{"idx": 20792, "node_name": "a", "Dec": "a value ."}{"idx": 20794, "node_name": "a", "Dec": "a value ."}{"idx": 20796, "node_name": "a", "Dec": "a double value ."}{"idx": 20798, "node_name": "y", "Dec": "the ordinate coordinate"}{"idx": 20799, "node_name": "x", "Dec": "the abscissa coordinate"}{"idx": 20801, "node_name": "a", "Dec": "the base ."}{"idx": 20802, "node_name": "b", "Dec": "the exponent ."}{"idx": 20804, "node_name": "a", "Dec": "a floating-point value to be rounded to an integer ."}{"idx": 20806, "node_name": "a", "Dec": "a floating-point value to be rounded to a long ."}{"idx": 20809, "node_name": "x", "Dec": "the first value"}{"idx": 20810, "node_name": "y", "Dec": "the second value"}{"idx": 20812, "node_name": "x", "Dec": "the first value"}{"idx": 20813, "node_name": "y", "Dec": "the second value"}{"idx": 20815, "node_name": "x", "Dec": "the first value"}{"idx": 20816, "node_name": "y", "Dec": "the second value to subtract from the first"}{"idx": 20818, "node_name": "x", "Dec": "the first value"}{"idx": 20819, "node_name": "y", "Dec": "the second value to subtract from the first"}{"idx": 20821, "node_name": "x", "Dec": "the first value"}{"idx": 20822, "node_name": "y", "Dec": "the second value"}{"idx": 20824, "node_name": "x", "Dec": "the first value"}{"idx": 20825, "node_name": "y", "Dec": "the second value"}{"idx": 20827, "node_name": "x", "Dec": "the first value"}{"idx": 20828, "node_name": "y", "Dec": "the second value"}{"idx": 20830, "node_name": "a", "Dec": "the value to increment"}{"idx": 20832, "node_name": "a", "Dec": "the value to increment"}{"idx": 20834, "node_name": "a", "Dec": "the value to decrement"}{"idx": 20836, "node_name": "a", "Dec": "the value to decrement"}{"idx": 20838, "node_name": "a", "Dec": "the value to negate"}{"idx": 20840, "node_name": "a", "Dec": "the value to negate"}{"idx": 20842, "node_name": "value", "Dec": "the long value"}{"idx": 20844, "node_name": "x", "Dec": "the first value"}{"idx": 20845, "node_name": "y", "Dec": "the second value"}{"idx": 20847, "node_name": "x", "Dec": "the first value"}{"idx": 20848, "node_name": "y", "Dec": "the second value"}{"idx": 20850, "node_name": "x", "Dec": "the dividend"}{"idx": 20851, "node_name": "y", "Dec": "the divisor"}{"idx": 20853, "node_name": "x", "Dec": "the dividend"}{"idx": 20854, "node_name": "y", "Dec": "the divisor"}{"idx": 20856, "node_name": "x", "Dec": "the dividend"}{"idx": 20857, "node_name": "y", "Dec": "the divisor"}{"idx": 20859, "node_name": "x", "Dec": "the dividend"}{"idx": 20860, "node_name": "y", "Dec": "the divisor"}{"idx": 20862, "node_name": "x", "Dec": "the dividend"}{"idx": 20863, "node_name": "y", "Dec": "the divisor"}{"idx": 20865, "node_name": "x", "Dec": "the dividend"}{"idx": 20866, "node_name": "y", "Dec": "the divisor"}{"idx": 20868, "node_name": "a", "Dec": "the argument whose absolute value is to be determined"}{"idx": 20870, "node_name": "a", "Dec": "the argument whose absolute value is to be determined"}{"idx": 20872, "node_name": "a", "Dec": "the argument whose absolute value is to be determined"}{"idx": 20874, "node_name": "a", "Dec": "the argument whose absolute value is to be determined"}{"idx": 20876, "node_name": "a", "Dec": "an argument ."}{"idx": 20877, "node_name": "b", "Dec": "another argument ."}{"idx": 20879, "node_name": "a", "Dec": "an argument ."}{"idx": 20880, "node_name": "b", "Dec": "another argument ."}{"idx": 20882, "node_name": "a", "Dec": "an argument ."}{"idx": 20883, "node_name": "b", "Dec": "another argument ."}{"idx": 20885, "node_name": "a", "Dec": "an argument ."}{"idx": 20886, "node_name": "b", "Dec": "another argument ."}{"idx": 20888, "node_name": "a", "Dec": "an argument ."}{"idx": 20889, "node_name": "b", "Dec": "another argument ."}{"idx": 20891, "node_name": "a", "Dec": "an argument ."}{"idx": 20892, "node_name": "b", "Dec": "another argument ."}{"idx": 20894, "node_name": "a", "Dec": "an argument ."}{"idx": 20895, "node_name": "b", "Dec": "another argument ."}{"idx": 20897, "node_name": "a", "Dec": "an argument ."}{"idx": 20898, "node_name": "b", "Dec": "another argument ."}{"idx": 20900, "node_name": "a", "Dec": "a value"}{"idx": 20901, "node_name": "b", "Dec": "a value"}{"idx": 20902, "node_name": "c", "Dec": "a value"}{"idx": 20904, "node_name": "a", "Dec": "a value"}{"idx": 20905, "node_name": "b", "Dec": "a value"}{"idx": 20906, "node_name": "c", "Dec": "a value"}{"idx": 20908, "node_name": "d", "Dec": "the floating-point value whose ulp is to be returned"}{"idx": 20910, "node_name": "f", "Dec": "the floating-point value whose ulp is to be returned"}{"idx": 20912, "node_name": "d", "Dec": "the floating-point value whose signum is to be returned"}{"idx": 20914, "node_name": "f", "Dec": "the floating-point value whose signum is to be returned"}{"idx": 20916, "node_name": "x", "Dec": "the number whose hyperbolic sine is to be returned ."}{"idx": 20918, "node_name": "x", "Dec": "the number whose hyperbolic cosine is to be returned ."}{"idx": 20920, "node_name": "x", "Dec": "the number whose hyperbolic tangent is to be returned ."}{"idx": 20922, "node_name": "x", "Dec": "a value"}{"idx": 20923, "node_name": "y", "Dec": "a value"}{"idx": 20925, "node_name": "x", "Dec": "the exponent to raise e to in the computation of ex -1 ."}{"idx": 20927, "node_name": "x", "Dec": "a value"}{"idx": 20929, "node_name": "magnitude", "Dec": "the parameter providing the magnitude of the result"}{"idx": 20930, "node_name": "sign", "Dec": "the parameter providing the sign of the result"}{"idx": 20932, "node_name": "magnitude", "Dec": "the parameter providing the magnitude of the result"}{"idx": 20933, "node_name": "sign", "Dec": "the parameter providing the sign of the result"}{"idx": 20935, "node_name": "f", "Dec": "a float value"}{"idx": 20937, "node_name": "d", "Dec": "a double value"}{"idx": 20939, "node_name": "start", "Dec": "starting floating-point value"}{"idx": 20940, "node_name": "direction", "Dec": "value indicating which of start's neighbors or start should be returned"}{"idx": 20942, "node_name": "start", "Dec": "starting floating-point value"}{"idx": 20943, "node_name": "direction", "Dec": "value indicating which of start's neighbors or start should be returned"}{"idx": 20945, "node_name": "d", "Dec": "starting floating-point value"}{"idx": 20947, "node_name": "f", "Dec": "starting floating-point value"}{"idx": 20949, "node_name": "d", "Dec": "starting floating-point value"}{"idx": 20951, "node_name": "f", "Dec": "starting floating-point value"}{"idx": 20953, "node_name": "d", "Dec": "number to be scaled by a power of two ."}{"idx": 20954, "node_name": "scalefactor", "Dec": "power of 2 used to scale d"}{"idx": 20956, "node_name": "f", "Dec": "number to be scaled by a power of two ."}{"idx": 20957, "node_name": "scalefactor", "Dec": "power of 2 used to scale f"}{"idx": 20960, "node_name": "before", "Dec": "the before module finder to find modules"}{"idx": 20961, "node_name": "after", "Dec": "the after module finder to locate modules when not located by the before module finder or in parent configurations"}{"idx": 20962, "node_name": "roots", "Dec": "the possibly-empty collection of module names of the modules to resolve"}{"idx": 20964, "node_name": "before", "Dec": "the before module finder to find modules"}{"idx": 20965, "node_name": "after", "Dec": "the after module finder to locate modules when not located by the before module finder or in parent configurations"}{"idx": 20966, "node_name": "roots", "Dec": "the possibly-empty collection of module names of the modules to resolve"}{"idx": 20968, "node_name": "before", "Dec": "the before module finder to find modules"}{"idx": 20969, "node_name": "parents", "Dec": "the list parent configurations in search order"}{"idx": 20970, "node_name": "after", "Dec": "the after module finder to locate modules when not located by the before module finder or in parent configurations"}{"idx": 20971, "node_name": "roots", "Dec": "the possibly-empty collection of module names of the modules to resolve"}{"idx": 20973, "node_name": "before", "Dec": "the before module finder to find modules"}{"idx": 20974, "node_name": "parents", "Dec": "the list parent configurations in search order"}{"idx": 20975, "node_name": "after", "Dec": "the after module finder to locate modules when not located by the before module finder or in parent configurations"}{"idx": 20976, "node_name": "roots", "Dec": "the possibly-empty collection of module names of the modules to resolve"}{"idx": 20981, "node_name": "name", "Dec": "the module name of the resolved module to find"}{"idx": 20986, "node_name": "msg", "Dec": "the detail message ; can be null"}{"idx": 20988, "node_name": "cause", "Dec": "the cause ; can be null"}{"idx": 20990, "node_name": "msg", "Dec": "the detail message ; can be null"}{"idx": 20991, "node_name": "cause", "Dec": "the cause ; can be null"}{"idx": 20995, "node_name": "msg", "Dec": "the detail message ; can be null"}{"idx": 21003, "node_name": "other", "Dec": "the other module"}{"idx": 21005, "node_name": "other", "Dec": "the other module"}{"idx": 21007, "node_name": "pn", "Dec": "the package name"}{"idx": 21008, "node_name": "other", "Dec": "the other module"}{"idx": 21010, "node_name": "pn", "Dec": "the package name"}{"idx": 21011, "node_name": "other", "Dec": "the other module"}{"idx": 21013, "node_name": "pn", "Dec": "the package name"}{"idx": 21015, "node_name": "pn", "Dec": "the package name"}{"idx": 21017, "node_name": "pn", "Dec": "the package name"}{"idx": 21018, "node_name": "other", "Dec": "the module"}{"idx": 21020, "node_name": "pn", "Dec": "the package name"}{"idx": 21021, "node_name": "other", "Dec": "the module"}{"idx": 21023, "node_name": "service", "Dec": "the service type"}{"idx": 21025, "node_name": "service", "Dec": "the service type"}{"idx": 21028, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21032, "node_name": "name", "Dec": "the resource name"}{"idx": 21036, "node_name": "req", "Dec": "the dependence"}{"idx": 21038, "node_name": "ms", "Dec": "the set of modifiers"}{"idx": 21039, "node_name": "mn", "Dec": "the module name"}{"idx": 21040, "node_name": "compiledversion", "Dec": "the version of the module recorded at compile-time"}{"idx": 21042, "node_name": "ms", "Dec": "the set of modifiers"}{"idx": 21043, "node_name": "mn", "Dec": "the module name"}{"idx": 21045, "node_name": "mn", "Dec": "the module name"}{"idx": 21047, "node_name": "e", "Dec": "the export"}{"idx": 21049, "node_name": "ms", "Dec": "the set of modifiers"}{"idx": 21050, "node_name": "pn", "Dec": "the package name"}{"idx": 21051, "node_name": "targets", "Dec": "the set of target modules names"}{"idx": 21053, "node_name": "ms", "Dec": "the set of modifiers"}{"idx": 21054, "node_name": "pn", "Dec": "the package name"}{"idx": 21056, "node_name": "pn", "Dec": "the package name"}{"idx": 21057, "node_name": "targets", "Dec": "the set of target modules names"}{"idx": 21059, "node_name": "pn", "Dec": "the package name"}{"idx": 21061, "node_name": "obj", "Dec": "the opens object"}{"idx": 21063, "node_name": "ms", "Dec": "the set of modifiers"}{"idx": 21064, "node_name": "pn", "Dec": "the package name"}{"idx": 21065, "node_name": "targets", "Dec": "the set of target modules names"}{"idx": 21067, "node_name": "ms", "Dec": "the set of modifiers"}{"idx": 21068, "node_name": "pn", "Dec": "the package name"}{"idx": 21070, "node_name": "pn", "Dec": "the package name"}{"idx": 21071, "node_name": "targets", "Dec": "the set of target modules names"}{"idx": 21073, "node_name": "pn", "Dec": "the package name"}{"idx": 21075, "node_name": "service", "Dec": "the service type"}{"idx": 21077, "node_name": "p", "Dec": "the provides"}{"idx": 21079, "node_name": "service", "Dec": "the service type"}{"idx": 21080, "node_name": "providers", "Dec": "the list of provider or provider factory class names"}{"idx": 21082, "node_name": "pns", "Dec": "the ( possibly empty ) set of package names"}{"idx": 21084, "node_name": "v", "Dec": "the version"}{"idx": 21086, "node_name": "vs", "Dec": "the version string to parse"}{"idx": 21088, "node_name": "mc", "Dec": "the module main class"}{"idx": 21096, "node_name": "that", "Dec": "the module export to compare"}{"idx": 21099, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 21104, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 21121, "node_name": "that", "Dec": "the module descriptor to compare"}{"idx": 21123, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 21127, "node_name": "name", "Dec": "the module name"}{"idx": 21128, "node_name": "ms", "Dec": "the set of module modifiers"}{"idx": 21130, "node_name": "name", "Dec": "the module name"}{"idx": 21132, "node_name": "name", "Dec": "the module name"}{"idx": 21134, "node_name": "name", "Dec": "the module name"}{"idx": 21136, "node_name": "in", "Dec": "the input stream"}{"idx": 21137, "node_name": "packagefinder", "Dec": "a supplier that can produce the set of packages"}{"idx": 21139, "node_name": "in", "Dec": "the input stream"}{"idx": 21141, "node_name": "bb", "Dec": "the byte buffer"}{"idx": 21142, "node_name": "packagefinder", "Dec": "a supplier that can produce the set of packages"}{"idx": 21144, "node_name": "bb", "Dec": "the byte buffer"}{"idx": 21148, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 21155, "node_name": "that", "Dec": "the module opens to compare"}{"idx": 21158, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 21163, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 21168, "node_name": "that", "Dec": "the provides to compare"}{"idx": 21171, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 21179, "node_name": "that", "Dec": "the module dependence to compare"}{"idx": 21181, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 21187, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 21190, "node_name": "v", "Dec": "the string to parse"}{"idx": 21192, "node_name": "that", "Dec": "the module version to compare"}{"idx": 21194, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 21199, "node_name": "name", "Dec": "the name of the module to find"}{"idx": 21203, "node_name": "entries", "Dec": "a possibly-empty array of paths to directories of modules or paths to packaged or exploded modules"}{"idx": 21205, "node_name": "finders", "Dec": "the array of module finders"}{"idx": 21208, "node_name": "name", "Dec": "the name of the resource to open for reading"}{"idx": 21210, "node_name": "name", "Dec": "the name of the resource to open for reading"}{"idx": 21212, "node_name": "name", "Dec": "the name of the resource to read"}{"idx": 21214, "node_name": "bb", "Dec": "the byte buffer to release"}{"idx": 21219, "node_name": "descriptor", "Dec": "the module descriptor"}{"idx": 21220, "node_name": "location", "Dec": "the module location or null if not known"}{"idx": 21227, "node_name": "msg", "Dec": "the detail message ; can be null"}{"idx": 21229, "node_name": "cause", "Dec": "the cause ; can be null"}{"idx": 21231, "node_name": "msg", "Dec": "the detail message ; can be null"}{"idx": 21232, "node_name": "cause", "Dec": "the cause ; can be null"}{"idx": 21240, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 21245, "node_name": "source", "Dec": "the source module"}{"idx": 21246, "node_name": "target", "Dec": "the target module to read"}{"idx": 21248, "node_name": "source", "Dec": "the source module"}{"idx": 21249, "node_name": "pn", "Dec": "the package name"}{"idx": 21250, "node_name": "target", "Dec": "the target module"}{"idx": 21252, "node_name": "source", "Dec": "the source module"}{"idx": 21253, "node_name": "pn", "Dec": "the package name"}{"idx": 21254, "node_name": "target", "Dec": "the target module"}{"idx": 21257, "node_name": "cf", "Dec": "the configuration for the layer"}{"idx": 21258, "node_name": "parentloader", "Dec": "the parent class loader for the class loader created by defineModulesWithOneLoader(java.lang.module.Configuration,java.lang.ClassLoader) ; may be null for the bootstrap class loader"}{"idx": 21260, "node_name": "cf", "Dec": "the configuration for the layer"}{"idx": 21261, "node_name": "parentloader", "Dec": "the parent class loader for each of the class loaders created by defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader) ; may be null for the bootstrap class loader"}{"idx": 21263, "node_name": "cf", "Dec": "the configuration for the layer"}{"idx": 21264, "node_name": "clf", "Dec": "the function to map a module name to a class loader"}{"idx": 21266, "node_name": "cf", "Dec": "the configuration for the layer"}{"idx": 21267, "node_name": "parentlayers", "Dec": "the list of parent layers in search order"}{"idx": 21268, "node_name": "parentloader", "Dec": "the parent class loader for the class loader created by defineModulesWithOneLoader(java.lang.module.Configuration,java.util.List,java.lang.ClassLoader) ; may be null for the bootstrap class loader"}{"idx": 21270, "node_name": "cf", "Dec": "the configuration for the layer"}{"idx": 21271, "node_name": "parentlayers", "Dec": "the list of parent layers in search order"}{"idx": 21272, "node_name": "parentloader", "Dec": "the parent class loader for each of the class loaders created by defineModulesWithManyLoaders(java.lang.module.Configuration,java.util.List,java.lang.ClassLoader) ; may be null for the bootstrap class loader"}{"idx": 21274, "node_name": "cf", "Dec": "the configuration for the layer"}{"idx": 21275, "node_name": "parentlayers", "Dec": "the list of parent layers in search order"}{"idx": 21276, "node_name": "clf", "Dec": "the function to map a module name to a class loader"}{"idx": 21281, "node_name": "name", "Dec": "the name of the module to find"}{"idx": 21283, "node_name": "name", "Dec": "the name of the module to find"}{"idx": 21290, "node_name": "s", "Dec": "the detail message ."}{"idx": 21294, "node_name": "s", "Dec": "the detail message ."}{"idx": 21298, "node_name": "s", "Dec": "the detail message ."}{"idx": 21302, "node_name": "s", "Dec": "the detail message"}{"idx": 21306, "node_name": "s", "Dec": "the detail message ."}{"idx": 21310, "node_name": "s", "Dec": "the detail message ."}{"idx": 21314, "node_name": "s", "Dec": "the detail message ."}{"idx": 21326, "node_name": "s", "Dec": "the detail message ."}{"idx": 21332, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 21339, "node_name": "timeoutmillis", "Dec": "the maximum time to wait , in milliseconds"}{"idx": 21341, "node_name": "timeoutmillis", "Dec": "the maximum time to wait , in milliseconds"}{"idx": 21342, "node_name": "nanos", "Dec": "additional time , in nanoseconds , in the range 0-999999 inclusive"}{"idx": 21346, "node_name": "s", "Dec": "the detail message ."}{"idx": 21358, "node_name": "url", "Dec": "the code source url"}{"idx": 21360, "node_name": "desired", "Dec": "the version string of the desired version ."}{"idx": 21365, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21367, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21369, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21372, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21374, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21383, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 21384, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 21398, "node_name": "command", "Dec": "the list containing the program and its arguments"}{"idx": 21400, "node_name": "command", "Dec": "a string array containing the program and its arguments"}{"idx": 21402, "node_name": "command", "Dec": "the list containing the program and its arguments"}{"idx": 21404, "node_name": "command", "Dec": "a string array containing the program and its arguments"}{"idx": 21409, "node_name": "directory", "Dec": "the new working directory"}{"idx": 21411, "node_name": "source", "Dec": "the new standard input source"}{"idx": 21413, "node_name": "destination", "Dec": "the new standard output destination"}{"idx": 21415, "node_name": "destination", "Dec": "the new standard error destination"}{"idx": 21417, "node_name": "file", "Dec": "the new standard input source"}{"idx": 21419, "node_name": "file", "Dec": "the new standard output destination"}{"idx": 21421, "node_name": "file", "Dec": "the new standard error destination"}{"idx": 21428, "node_name": "redirecterrorstream", "Dec": "the new property value"}{"idx": 21431, "node_name": "builders", "Dec": "a list of processbuilders"}{"idx": 21439, "node_name": "file", "Dec": "the file for the redirect ."}{"idx": 21441, "node_name": "file", "Dec": "the file for the redirect ."}{"idx": 21443, "node_name": "file", "Dec": "the file for the redirect ."}{"idx": 21445, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 21450, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 21461, "node_name": "pid", "Dec": "a native process id"}{"idx": 21475, "node_name": "other", "Dec": "another object"}{"idx": 21477, "node_name": "other", "Dec": "the processhandle to be compared"}{"idx": 21480, "node_name": "cb", "Dec": "the buffer to read characters into"}{"idx": 21486, "node_name": "threadfactory", "Dec": "a threadfactory to return a new thread to process cleaning actions"}{"idx": 21488, "node_name": "obj", "Dec": "the object to monitor"}{"idx": 21489, "node_name": "action", "Dec": "a runnable to invoke when the object becomes phantom reachable"}{"idx": 21492, "node_name": "referent", "Dec": "the object the new phantom reference will refer to"}{"idx": 21493, "node_name": "q", "Dec": "the queue with which the reference is to be registered , or null if registration is not required"}{"idx": 21502, "node_name": "ref", "Dec": "the reference . if null , reachabilityFence(java.lang.Object) has no effect ."}{"idx": 21507, "node_name": "timeout", "Dec": "if positive , block for up to timeout milliseconds while waiting for a reference to be added to this queue . if zero , block indefinitely ."}{"idx": 21511, "node_name": "referent", "Dec": "object the new soft reference will refer to"}{"idx": 21513, "node_name": "referent", "Dec": "object the new soft reference will refer to"}{"idx": 21514, "node_name": "q", "Dec": "the queue with which the reference is to be registered , or null if registration is not required"}{"idx": 21518, "node_name": "referent", "Dec": "object the new weak reference will refer to"}{"idx": 21520, "node_name": "referent", "Dec": "object the new weak reference will refer to"}{"idx": 21521, "node_name": "q", "Dec": "the queue with which the reference is to be registered , or null if registration is not required"}{"idx": 21525, "node_name": "array", "Dec": "the array of accessibleobjects"}{"idx": 21526, "node_name": "flag", "Dec": "the new value for the accessible flag in each object"}{"idx": 21528, "node_name": "flag", "Dec": "the new value for the accessible flag"}{"idx": 21531, "node_name": "obj", "Dec": "an instance object of the declaring class of this reflected object if it is an instance method or field"}{"idx": 21533, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21535, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21537, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21540, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21542, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21549, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21551, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21554, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21556, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21558, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21575, "node_name": "componenttype", "Dec": "the class object representing the component type of the new array"}{"idx": 21576, "node_name": "length", "Dec": "the length of the new array"}{"idx": 21578, "node_name": "componenttype", "Dec": "the class object representing the component type of the new array"}{"idx": 21579, "node_name": "dimensions", "Dec": "an array of int representing the dimensions of the new array"}{"idx": 21581, "node_name": "array", "Dec": "the array"}{"idx": 21583, "node_name": "array", "Dec": "the array"}{"idx": 21584, "node_name": "index", "Dec": "the index"}{"idx": 21586, "node_name": "array", "Dec": "the array"}{"idx": 21587, "node_name": "index", "Dec": "the index"}{"idx": 21589, "node_name": "array", "Dec": "the array"}{"idx": 21590, "node_name": "index", "Dec": "the index"}{"idx": 21592, "node_name": "array", "Dec": "the array"}{"idx": 21593, "node_name": "index", "Dec": "the index"}{"idx": 21595, "node_name": "array", "Dec": "the array"}{"idx": 21596, "node_name": "index", "Dec": "the index"}{"idx": 21598, "node_name": "array", "Dec": "the array"}{"idx": 21599, "node_name": "index", "Dec": "the index"}{"idx": 21601, "node_name": "array", "Dec": "the array"}{"idx": 21602, "node_name": "index", "Dec": "the index"}{"idx": 21604, "node_name": "array", "Dec": "the array"}{"idx": 21605, "node_name": "index", "Dec": "the index"}{"idx": 21607, "node_name": "array", "Dec": "the array"}{"idx": 21608, "node_name": "index", "Dec": "the index"}{"idx": 21610, "node_name": "array", "Dec": "the array"}{"idx": 21611, "node_name": "index", "Dec": "the index into the array"}{"idx": 21612, "node_name": "value", "Dec": "the new value of the indexed component"}{"idx": 21614, "node_name": "array", "Dec": "the array"}{"idx": 21615, "node_name": "index", "Dec": "the index into the array"}{"idx": 21616, "node_name": "z", "Dec": "the new value of the indexed component"}{"idx": 21618, "node_name": "array", "Dec": "the array"}{"idx": 21619, "node_name": "index", "Dec": "the index into the array"}{"idx": 21620, "node_name": "b", "Dec": "the new value of the indexed component"}{"idx": 21622, "node_name": "array", "Dec": "the array"}{"idx": 21623, "node_name": "index", "Dec": "the index into the array"}{"idx": 21624, "node_name": "c", "Dec": "the new value of the indexed component"}{"idx": 21626, "node_name": "array", "Dec": "the array"}{"idx": 21627, "node_name": "index", "Dec": "the index into the array"}{"idx": 21628, "node_name": "s", "Dec": "the new value of the indexed component"}{"idx": 21630, "node_name": "array", "Dec": "the array"}{"idx": 21631, "node_name": "index", "Dec": "the index into the array"}{"idx": 21632, "node_name": "i", "Dec": "the new value of the indexed component"}{"idx": 21634, "node_name": "array", "Dec": "the array"}{"idx": 21635, "node_name": "index", "Dec": "the index into the array"}{"idx": 21636, "node_name": "l", "Dec": "the new value of the indexed component"}{"idx": 21638, "node_name": "array", "Dec": "the array"}{"idx": 21639, "node_name": "index", "Dec": "the index into the array"}{"idx": 21640, "node_name": "f", "Dec": "the new value of the indexed component"}{"idx": 21642, "node_name": "array", "Dec": "the array"}{"idx": 21643, "node_name": "index", "Dec": "the index into the array"}{"idx": 21644, "node_name": "d", "Dec": "the new value of the indexed component"}{"idx": 21647, "node_name": "flag", "Dec": "the new value for the accessible flag"}{"idx": 21655, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 21660, "node_name": "initargs", "Dec": "array of objects to be passed as arguments to the constructor call ; values of primitive types are wrapped in a wrapper object of the appropriate type ( e.g. a float in a float )"}{"idx": 21664, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21685, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21687, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21694, "node_name": "flag", "Dec": "the new value for the accessible flag"}{"idx": 21703, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 21708, "node_name": "obj", "Dec": "object from which the represented field's value is to be extracted"}{"idx": 21710, "node_name": "obj", "Dec": "the object to extract the boolean value from"}{"idx": 21712, "node_name": "obj", "Dec": "the object to extract the byte value from"}{"idx": 21714, "node_name": "obj", "Dec": "the object to extract the char value from"}{"idx": 21716, "node_name": "obj", "Dec": "the object to extract the short value from"}{"idx": 21718, "node_name": "obj", "Dec": "the object to extract the int value from"}{"idx": 21720, "node_name": "obj", "Dec": "the object to extract the long value from"}{"idx": 21722, "node_name": "obj", "Dec": "the object to extract the float value from"}{"idx": 21724, "node_name": "obj", "Dec": "the object to extract the double value from"}{"idx": 21726, "node_name": "obj", "Dec": "the object whose field should be modified"}{"idx": 21727, "node_name": "value", "Dec": "the new value for the field of obj being modified"}{"idx": 21729, "node_name": "obj", "Dec": "the object whose field should be modified"}{"idx": 21730, "node_name": "z", "Dec": "the new value for the field of obj being modified"}{"idx": 21732, "node_name": "obj", "Dec": "the object whose field should be modified"}{"idx": 21733, "node_name": "b", "Dec": "the new value for the field of obj being modified"}{"idx": 21735, "node_name": "obj", "Dec": "the object whose field should be modified"}{"idx": 21736, "node_name": "c", "Dec": "the new value for the field of obj being modified"}{"idx": 21738, "node_name": "obj", "Dec": "the object whose field should be modified"}{"idx": 21739, "node_name": "s", "Dec": "the new value for the field of obj being modified"}{"idx": 21741, "node_name": "obj", "Dec": "the object whose field should be modified"}{"idx": 21742, "node_name": "i", "Dec": "the new value for the field of obj being modified"}{"idx": 21744, "node_name": "obj", "Dec": "the object whose field should be modified"}{"idx": 21745, "node_name": "l", "Dec": "the new value for the field of obj being modified"}{"idx": 21747, "node_name": "obj", "Dec": "the object whose field should be modified"}{"idx": 21748, "node_name": "f", "Dec": "the new value for the field of obj being modified"}{"idx": 21750, "node_name": "obj", "Dec": "the object whose field should be modified"}{"idx": 21751, "node_name": "d", "Dec": "the new value for the field of obj being modified"}{"idx": 21753, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21755, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21764, "node_name": "message", "Dec": "the detail message , may be null"}{"idx": 21768, "node_name": "msg", "Dec": "the detail message"}{"idx": 21771, "node_name": "proxy", "Dec": "the proxy instance that invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) was invoked on"}{"idx": 21772, "node_name": "method", "Dec": "invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) instance corresponding to the interface method invoked on the proxy instance . the declaring class of invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) object will be the interface that invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) was declared in , which may be a superinterface of the proxy interface that the proxy class inherits invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) through ."}{"idx": 21773, "node_name": "args", "Dec": "an array of objects containing the values of the arguments passed in invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) invocation on the proxy instance , or null if interface method takes no arguments . arguments of primitive types are wrapped in instances of the appropriate primitive wrapper class , such as java.lang.integer or java.lang.boolean ."}{"idx": 21777, "node_name": "target", "Dec": "the target exception"}{"idx": 21779, "node_name": "target", "Dec": "the target exception"}{"idx": 21780, "node_name": "s", "Dec": "the detail message"}{"idx": 21786, "node_name": "message", "Dec": "the detail message ; may be null"}{"idx": 21790, "node_name": "reason", "Dec": "the reason for the exception ."}{"idx": 21800, "node_name": "flag", "Dec": "the new value for the accessible flag"}{"idx": 21810, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 21815, "node_name": "obj", "Dec": "the object the underlying method is invoked from"}{"idx": 21816, "node_name": "args", "Dec": "the arguments used for invoke(java.lang.Object,java.lang.Object...) call"}{"idx": 21823, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21842, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21844, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21846, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21848, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21850, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21852, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21854, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21856, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21858, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21860, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21862, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21864, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21866, "node_name": "mod", "Dec": "a set of modifiers"}{"idx": 21875, "node_name": "obj", "Dec": "the object to compare ."}{"idx": 21889, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21891, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21893, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21895, "node_name": "annotationclass", "Dec": "the class object corresponding to the annotation type"}{"idx": 21903, "node_name": "h", "Dec": "the invocation handler for this proxy instance"}{"idx": 21905, "node_name": "loader", "Dec": "the class loader to define the proxy class"}{"idx": 21906, "node_name": "interfaces", "Dec": "the list of interfaces for the proxy class to implement"}{"idx": 21907, "node_name": "h", "Dec": "the invocation handler to dispatch method invocations to"}{"idx": 21909, "node_name": "cl", "Dec": "the class to test"}{"idx": 21911, "node_name": "proxy", "Dec": "the proxy instance to return the invocation handler for"}{"idx": 21914, "node_name": "name", "Dec": "the name of the reflectpermission"}{"idx": 21916, "node_name": "name", "Dec": "the name of the reflectpermission"}{"idx": 21917, "node_name": "actions", "Dec": "should be null"}{"idx": 21927, "node_name": "undeclaredthrowable", "Dec": "the undeclared checked exception that was thrown"}{"idx": 21929, "node_name": "undeclaredthrowable", "Dec": "the undeclared checked exception that was thrown"}{"idx": 21930, "node_name": "s", "Dec": "the detail message"}{"idx": 21938, "node_name": "message", "Dec": "the detail message . the detail message is saved for later retrieval by the throwable.getmessage() method ."}{"idx": 21940, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 21941, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 21943, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 21949, "node_name": "status", "Dec": "termination status . by convention , a nonzero status code indicates abnormal termination ."}{"idx": 21951, "node_name": "hook", "Dec": "an initialized but unstarted thread object"}{"idx": 21953, "node_name": "hook", "Dec": "the hook to remove"}{"idx": 21955, "node_name": "status", "Dec": "termination status . by convention , a nonzero status code indicates abnormal termination . if the exit ( equivalently , system.exit ) method has already been invoked then this status code will override the status code passed to halt(int) ."}{"idx": 21957, "node_name": "command", "Dec": "a specified system command ."}{"idx": 21959, "node_name": "command", "Dec": "a specified system command ."}{"idx": 21960, "node_name": "envp", "Dec": "array of strings , each element of which has environment variable settings in the format name=value , or null if the subprocess should inherit the environment of the current process ."}{"idx": 21962, "node_name": "command", "Dec": "a specified system command ."}{"idx": 21963, "node_name": "envp", "Dec": "array of strings , each element of which has environment variable settings in the format name=value , or null if the subprocess should inherit the environment of the current process ."}{"idx": 21964, "node_name": "dir", "Dec": "the working directory of the subprocess , or null if the subprocess should inherit the working directory of the current process ."}{"idx": 21966, "node_name": "cmdarray", "Dec": "array containing the command to call and its arguments ."}{"idx": 21968, "node_name": "cmdarray", "Dec": "array containing the command to call and its arguments ."}{"idx": 21969, "node_name": "envp", "Dec": "array of strings , each element of which has environment variable settings in the format name=value , or null if the subprocess should inherit the environment of the current process ."}{"idx": 21971, "node_name": "cmdarray", "Dec": "array containing the command to call and its arguments ."}{"idx": 21972, "node_name": "envp", "Dec": "array of strings , each element of which has environment variable settings in the format name=value , or null if the subprocess should inherit the environment of the current process ."}{"idx": 21973, "node_name": "dir", "Dec": "the working directory of the subprocess , or null if the subprocess should inherit the working directory of the current process ."}{"idx": 21981, "node_name": "filename", "Dec": "the file to load ."}{"idx": 21983, "node_name": "libname", "Dec": "the name of the library ."}{"idx": 21987, "node_name": "s", "Dec": "a string to interpret as a version"}{"idx": 21997, "node_name": "obj", "Dec": "the object to be compared"}{"idx": 21999, "node_name": "obj", "Dec": "the object to be compared"}{"idx": 22002, "node_name": "obj", "Dec": "the object to which this version is to be compared"}{"idx": 22004, "node_name": "obj", "Dec": "the object to which this version is to be compared"}{"idx": 22009, "node_name": "message", "Dec": "the detail message . the detail message is saved for later retrieval by the throwable.getmessage() method ."}{"idx": 22011, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 22012, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 22014, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 22016, "node_name": "message", "Dec": "the detail message ."}{"idx": 22017, "node_name": "cause", "Dec": "the cause . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 22018, "node_name": "enablesuppression", "Dec": "whether or not suppression is enabled or disabled"}{"idx": 22019, "node_name": "writablestacktrace", "Dec": "whether or not the stack trace should be writable"}{"idx": 22022, "node_name": "name", "Dec": "the name of the runtimepermission ."}{"idx": 22024, "node_name": "name", "Dec": "the name of the runtimepermission ."}{"idx": 22025, "node_name": "actions", "Dec": "should be null ."}{"idx": 22030, "node_name": "s", "Dec": "the detail message ."}{"idx": 22032, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 22033, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 22035, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 22041, "node_name": "perm", "Dec": "the requested permission ."}{"idx": 22043, "node_name": "perm", "Dec": "the specified permission"}{"idx": 22044, "node_name": "context", "Dec": "a system-dependent security context ."}{"idx": 22047, "node_name": "t", "Dec": "the thread to be checked ."}{"idx": 22049, "node_name": "g", "Dec": "the thread group to be checked ."}{"idx": 22051, "node_name": "status", "Dec": "the exit status ."}{"idx": 22053, "node_name": "cmd", "Dec": "the specified system command ."}{"idx": 22055, "node_name": "lib", "Dec": "the name of the library ."}{"idx": 22057, "node_name": "fd", "Dec": "the system-dependent file descriptor ."}{"idx": 22059, "node_name": "file", "Dec": "the system-dependent file name ."}{"idx": 22061, "node_name": "file", "Dec": "the system-dependent filename ."}{"idx": 22062, "node_name": "context", "Dec": "a system-dependent security context ."}{"idx": 22064, "node_name": "fd", "Dec": "the system-dependent file descriptor ."}{"idx": 22066, "node_name": "file", "Dec": "the system-dependent filename ."}{"idx": 22068, "node_name": "file", "Dec": "the system-dependent filename ."}{"idx": 22070, "node_name": "host", "Dec": "the host name port to connect to ."}{"idx": 22071, "node_name": "port", "Dec": "the protocol port to connect to ."}{"idx": 22073, "node_name": "host", "Dec": "the host name port to connect to ."}{"idx": 22074, "node_name": "port", "Dec": "the protocol port to connect to ."}{"idx": 22075, "node_name": "context", "Dec": "a system-dependent security context ."}{"idx": 22077, "node_name": "port", "Dec": "the local port ."}{"idx": 22079, "node_name": "host", "Dec": "the host name of the socket connection ."}{"idx": 22080, "node_name": "port", "Dec": "the port number of the socket connection ."}{"idx": 22082, "node_name": "maddr", "Dec": "internet group address to be used ."}{"idx": 22085, "node_name": "key", "Dec": "a system property key ."}{"idx": 22088, "node_name": "pkg", "Dec": "the package name ."}{"idx": 22090, "node_name": "pkg", "Dec": "the package name ."}{"idx": 22093, "node_name": "target", "Dec": "the target name of the securitypermission ."}{"idx": 22102, "node_name": "s", "Dec": "the short to be converted"}{"idx": 22104, "node_name": "s", "Dec": "the string containing the short representation to be parsed"}{"idx": 22105, "node_name": "radix", "Dec": "the radix to be used while parsing s"}{"idx": 22107, "node_name": "s", "Dec": "a string containing the short representation to be parsed"}{"idx": 22109, "node_name": "s", "Dec": "the string to be parsed"}{"idx": 22110, "node_name": "radix", "Dec": "the radix to be used in interpreting s"}{"idx": 22112, "node_name": "s", "Dec": "the string to be parsed"}{"idx": 22114, "node_name": "s", "Dec": "a short value ."}{"idx": 22125, "node_name": "value", "Dec": "the value to hash"}{"idx": 22127, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 22129, "node_name": "anothershort", "Dec": "the short to be compared ."}{"idx": 22131, "node_name": "x", "Dec": "the first short to compare"}{"idx": 22132, "node_name": "y", "Dec": "the second short to compare"}{"idx": 22134, "node_name": "x", "Dec": "the first short to compare"}{"idx": 22135, "node_name": "y", "Dec": "the second short to compare"}{"idx": 22137, "node_name": "i", "Dec": "the value whose bytes are to be reversed"}{"idx": 22139, "node_name": "x", "Dec": "the value to convert to an unsigned int"}{"idx": 22141, "node_name": "x", "Dec": "the value to convert to an unsigned long"}{"idx": 22145, "node_name": "s", "Dec": "the detail message ."}{"idx": 22148, "node_name": "declaringclass", "Dec": "the fully qualified name of the class containing the execution point represented by the stack trace element"}{"idx": 22149, "node_name": "methodname", "Dec": "the name of the method containing the execution point represented by the stack trace element"}{"idx": 22150, "node_name": "filename", "Dec": "the name of the file containing the execution point represented by the stack trace element , or null if this information is unavailable"}{"idx": 22151, "node_name": "linenumber", "Dec": "the line number of the source line containing the execution point represented by this stack trace element , or a negative number if this information is unavailable . a value of -2 indicates that the method containing the execution point is a native method"}{"idx": 22153, "node_name": "classloadername", "Dec": "the class loader name if the class loader of the class containing the execution point represented by the stack trace is named ; otherwise null"}{"idx": 22154, "node_name": "modulename", "Dec": "the module name if the class containing the execution point represented by the stack trace is in a named module ; otherwise null"}{"idx": 22155, "node_name": "moduleversion", "Dec": "the module version if the class containing the execution point represented by the stack trace is in a named module that has a version ; otherwise null"}{"idx": 22156, "node_name": "declaringclass", "Dec": "the fully qualified name of the class containing the execution point represented by the stack trace element"}{"idx": 22157, "node_name": "methodname", "Dec": "the name of the method containing the execution point represented by the stack trace element"}{"idx": 22158, "node_name": "filename", "Dec": "the name of the file containing the execution point represented by the stack trace element , or null if this information is unavailable"}{"idx": 22159, "node_name": "linenumber", "Dec": "the line number of the source line containing the execution point represented by this stack trace element , or a negative number if this information is unavailable . a value of -2 indicates that the method containing the execution point is a native method"}{"idx": 22170, "node_name": "obj", "Dec": "the object to be compared with this stack trace element ."}{"idx": 22175, "node_name": "option", "Dec": "stack walking option"}{"idx": 22177, "node_name": "options", "Dec": "stack walking option"}{"idx": 22179, "node_name": "options", "Dec": "stack walking options"}{"idx": 22180, "node_name": "estimatedepth", "Dec": "estimate number of stack frames to be traversed ."}{"idx": 22182, "node_name": "function", "Dec": "a function that takes a stream of stack frames and returns a result ."}{"idx": 22184, "node_name": "action", "Dec": "an action to be performed on each stackframe of the stack of the current thread"}{"idx": 22189, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 22205, "node_name": "a", "Dec": "an angle , in radians ."}{"idx": 22207, "node_name": "a", "Dec": "an angle , in radians ."}{"idx": 22209, "node_name": "a", "Dec": "an angle , in radians ."}{"idx": 22211, "node_name": "a", "Dec": "the value whose arc sine is to be returned ."}{"idx": 22213, "node_name": "a", "Dec": "the value whose arc cosine is to be returned ."}{"idx": 22215, "node_name": "a", "Dec": "the value whose arc tangent is to be returned ."}{"idx": 22217, "node_name": "angdeg", "Dec": "an angle , in degrees"}{"idx": 22219, "node_name": "angrad", "Dec": "an angle , in radians"}{"idx": 22221, "node_name": "a", "Dec": "the exponent to raise e to ."}{"idx": 22223, "node_name": "a", "Dec": "a value"}{"idx": 22225, "node_name": "a", "Dec": "a value"}{"idx": 22227, "node_name": "a", "Dec": "a value ."}{"idx": 22229, "node_name": "a", "Dec": "a value ."}{"idx": 22231, "node_name": "f1", "Dec": "the dividend ."}{"idx": 22232, "node_name": "f2", "Dec": "the divisor ."}{"idx": 22234, "node_name": "a", "Dec": "a value ."}{"idx": 22236, "node_name": "a", "Dec": "a value ."}{"idx": 22238, "node_name": "a", "Dec": "a value ."}{"idx": 22240, "node_name": "y", "Dec": "the ordinate coordinate"}{"idx": 22241, "node_name": "x", "Dec": "the abscissa coordinate"}{"idx": 22243, "node_name": "a", "Dec": "base ."}{"idx": 22244, "node_name": "b", "Dec": "the exponent ."}{"idx": 22246, "node_name": "a", "Dec": "a floating-point value to be rounded to an integer ."}{"idx": 22248, "node_name": "a", "Dec": "a floating-point value to be rounded to a long ."}{"idx": 22251, "node_name": "x", "Dec": "the first value"}{"idx": 22252, "node_name": "y", "Dec": "the second value"}{"idx": 22254, "node_name": "x", "Dec": "the first value"}{"idx": 22255, "node_name": "y", "Dec": "the second value"}{"idx": 22257, "node_name": "x", "Dec": "the first value"}{"idx": 22258, "node_name": "y", "Dec": "the second value to subtract from the first"}{"idx": 22260, "node_name": "x", "Dec": "the first value"}{"idx": 22261, "node_name": "y", "Dec": "the second value to subtract from the first"}{"idx": 22263, "node_name": "x", "Dec": "the first value"}{"idx": 22264, "node_name": "y", "Dec": "the second value"}{"idx": 22266, "node_name": "x", "Dec": "the first value"}{"idx": 22267, "node_name": "y", "Dec": "the second value"}{"idx": 22269, "node_name": "x", "Dec": "the first value"}{"idx": 22270, "node_name": "y", "Dec": "the second value"}{"idx": 22272, "node_name": "value", "Dec": "the long value"}{"idx": 22274, "node_name": "x", "Dec": "the first value"}{"idx": 22275, "node_name": "y", "Dec": "the second value"}{"idx": 22277, "node_name": "x", "Dec": "the first value"}{"idx": 22278, "node_name": "y", "Dec": "the second value"}{"idx": 22280, "node_name": "x", "Dec": "the dividend"}{"idx": 22281, "node_name": "y", "Dec": "the divisor"}{"idx": 22283, "node_name": "x", "Dec": "the dividend"}{"idx": 22284, "node_name": "y", "Dec": "the divisor"}{"idx": 22286, "node_name": "x", "Dec": "the dividend"}{"idx": 22287, "node_name": "y", "Dec": "the divisor"}{"idx": 22289, "node_name": "x", "Dec": "the dividend"}{"idx": 22290, "node_name": "y", "Dec": "the divisor"}{"idx": 22292, "node_name": "x", "Dec": "the dividend"}{"idx": 22293, "node_name": "y", "Dec": "the divisor"}{"idx": 22295, "node_name": "x", "Dec": "the dividend"}{"idx": 22296, "node_name": "y", "Dec": "the divisor"}{"idx": 22298, "node_name": "a", "Dec": "the argument whose absolute value is to be determined ."}{"idx": 22300, "node_name": "a", "Dec": "the argument whose absolute value is to be determined ."}{"idx": 22302, "node_name": "a", "Dec": "the argument whose absolute value is to be determined"}{"idx": 22304, "node_name": "a", "Dec": "the argument whose absolute value is to be determined"}{"idx": 22306, "node_name": "a", "Dec": "an argument ."}{"idx": 22307, "node_name": "b", "Dec": "another argument ."}{"idx": 22309, "node_name": "a", "Dec": "an argument ."}{"idx": 22310, "node_name": "b", "Dec": "another argument ."}{"idx": 22312, "node_name": "a", "Dec": "an argument ."}{"idx": 22313, "node_name": "b", "Dec": "another argument ."}{"idx": 22315, "node_name": "a", "Dec": "an argument ."}{"idx": 22316, "node_name": "b", "Dec": "another argument ."}{"idx": 22318, "node_name": "a", "Dec": "an argument ."}{"idx": 22319, "node_name": "b", "Dec": "another argument ."}{"idx": 22321, "node_name": "a", "Dec": "an argument ."}{"idx": 22322, "node_name": "b", "Dec": "another argument ."}{"idx": 22324, "node_name": "a", "Dec": "an argument ."}{"idx": 22325, "node_name": "b", "Dec": "another argument ."}{"idx": 22327, "node_name": "a", "Dec": "an argument ."}{"idx": 22328, "node_name": "b", "Dec": "another argument ."}{"idx": 22330, "node_name": "a", "Dec": "a value"}{"idx": 22331, "node_name": "b", "Dec": "a value"}{"idx": 22332, "node_name": "c", "Dec": "a value"}{"idx": 22334, "node_name": "a", "Dec": "a value"}{"idx": 22335, "node_name": "b", "Dec": "a value"}{"idx": 22336, "node_name": "c", "Dec": "a value"}{"idx": 22338, "node_name": "d", "Dec": "the floating-point value whose ulp is to be returned"}{"idx": 22340, "node_name": "f", "Dec": "the floating-point value whose ulp is to be returned"}{"idx": 22342, "node_name": "d", "Dec": "the floating-point value whose signum is to be returned"}{"idx": 22344, "node_name": "f", "Dec": "the floating-point value whose signum is to be returned"}{"idx": 22346, "node_name": "x", "Dec": "the number whose hyperbolic sine is to be returned ."}{"idx": 22348, "node_name": "x", "Dec": "the number whose hyperbolic cosine is to be returned ."}{"idx": 22350, "node_name": "x", "Dec": "the number whose hyperbolic tangent is to be returned ."}{"idx": 22352, "node_name": "x", "Dec": "a value"}{"idx": 22353, "node_name": "y", "Dec": "a value"}{"idx": 22355, "node_name": "x", "Dec": "the exponent to raise e to in the computation of ex -1 ."}{"idx": 22357, "node_name": "x", "Dec": "a value"}{"idx": 22359, "node_name": "magnitude", "Dec": "the parameter providing the magnitude of the result"}{"idx": 22360, "node_name": "sign", "Dec": "the parameter providing the sign of the result"}{"idx": 22362, "node_name": "magnitude", "Dec": "the parameter providing the magnitude of the result"}{"idx": 22363, "node_name": "sign", "Dec": "the parameter providing the sign of the result"}{"idx": 22365, "node_name": "f", "Dec": "a float value"}{"idx": 22367, "node_name": "d", "Dec": "a double value"}{"idx": 22369, "node_name": "start", "Dec": "starting floating-point value"}{"idx": 22370, "node_name": "direction", "Dec": "value indicating which of start's neighbors or start should be returned"}{"idx": 22372, "node_name": "start", "Dec": "starting floating-point value"}{"idx": 22373, "node_name": "direction", "Dec": "value indicating which of start's neighbors or start should be returned"}{"idx": 22375, "node_name": "d", "Dec": "starting floating-point value"}{"idx": 22377, "node_name": "f", "Dec": "starting floating-point value"}{"idx": 22379, "node_name": "d", "Dec": "starting floating-point value"}{"idx": 22381, "node_name": "f", "Dec": "starting floating-point value"}{"idx": 22383, "node_name": "d", "Dec": "number to be scaled by a power of two ."}{"idx": 22384, "node_name": "scalefactor", "Dec": "power of 2 used to scale d"}{"idx": 22386, "node_name": "f", "Dec": "number to be scaled by a power of two ."}{"idx": 22387, "node_name": "scalefactor", "Dec": "power of 2 used to scale f"}{"idx": 22392, "node_name": "original", "Dec": "a string"}{"idx": 22394, "node_name": "value", "Dec": "the initial value of the string"}{"idx": 22396, "node_name": "value", "Dec": "array that is the source of characters"}{"idx": 22397, "node_name": "offset", "Dec": "the initial offset"}{"idx": 22398, "node_name": "count", "Dec": "the length"}{"idx": 22400, "node_name": "codepoints", "Dec": "array that is the source of unicode code points"}{"idx": 22401, "node_name": "offset", "Dec": "the initial offset"}{"idx": 22402, "node_name": "count", "Dec": "the length"}{"idx": 22404, "node_name": "bytes", "Dec": "the bytes to be decoded into characters"}{"idx": 22405, "node_name": "offset", "Dec": "the index of the first byte to decode"}{"idx": 22406, "node_name": "length", "Dec": "the number of bytes to decode"}{"idx": 22407, "node_name": "charsetname", "Dec": "the name of a supported charset"}{"idx": 22409, "node_name": "bytes", "Dec": "the bytes to be decoded into characters"}{"idx": 22410, "node_name": "offset", "Dec": "the index of the first byte to decode"}{"idx": 22411, "node_name": "length", "Dec": "the number of bytes to decode"}{"idx": 22412, "node_name": "charset", "Dec": "the charset to be used to decode the bytes"}{"idx": 22414, "node_name": "bytes", "Dec": "the bytes to be decoded into characters"}{"idx": 22415, "node_name": "charsetname", "Dec": "the name of a supported charset"}{"idx": 22417, "node_name": "bytes", "Dec": "the bytes to be decoded into characters"}{"idx": 22418, "node_name": "charset", "Dec": "the charset to be used to decode the bytes"}{"idx": 22420, "node_name": "bytes", "Dec": "the bytes to be decoded into characters"}{"idx": 22421, "node_name": "offset", "Dec": "the index of the first byte to decode"}{"idx": 22422, "node_name": "length", "Dec": "the number of bytes to decode"}{"idx": 22424, "node_name": "bytes", "Dec": "the bytes to be decoded into characters"}{"idx": 22426, "node_name": "buffer", "Dec": "a stringbuffer"}{"idx": 22428, "node_name": "builder", "Dec": "a stringbuilder"}{"idx": 22432, "node_name": "index", "Dec": "the index of the char value ."}{"idx": 22434, "node_name": "index", "Dec": "the index to the char values"}{"idx": 22436, "node_name": "index", "Dec": "the index following the code point that should be returned"}{"idx": 22438, "node_name": "beginindex", "Dec": "the index to the first char of the text range ."}{"idx": 22439, "node_name": "endindex", "Dec": "the index after the last char of the text range ."}{"idx": 22441, "node_name": "index", "Dec": "the index to be offset"}{"idx": 22442, "node_name": "codepointoffset", "Dec": "the offset in code points"}{"idx": 22444, "node_name": "srcbegin", "Dec": "index of the first character in the string to copy ."}{"idx": 22445, "node_name": "srcend", "Dec": "index after the last character in the string to copy ."}{"idx": 22446, "node_name": "dst", "Dec": "the destination array ."}{"idx": 22447, "node_name": "dstbegin", "Dec": "the start offset in the destination array ."}{"idx": 22449, "node_name": "charsetname", "Dec": "the name of a supported charset"}{"idx": 22451, "node_name": "charset", "Dec": "the charset to be used to encode the string"}{"idx": 22454, "node_name": "anobject", "Dec": "the object to compare this string against"}{"idx": 22456, "node_name": "sb", "Dec": "the stringbuffer to compare this string against"}{"idx": 22458, "node_name": "cs", "Dec": "the sequence to compare this string against"}{"idx": 22460, "node_name": "anotherstring", "Dec": "the string to compare this string against"}{"idx": 22462, "node_name": "anotherstring", "Dec": "the string to be compared ."}{"idx": 22464, "node_name": "str", "Dec": "the string to be compared ."}{"idx": 22466, "node_name": "toffset", "Dec": "the starting offset of the subregion in this string ."}{"idx": 22467, "node_name": "other", "Dec": "the string argument ."}{"idx": 22468, "node_name": "ooffset", "Dec": "the starting offset of the subregion in the string argument ."}{"idx": 22469, "node_name": "len", "Dec": "the number of characters to compare ."}{"idx": 22471, "node_name": "ignorecase", "Dec": "if true , ignore case when comparing characters ."}{"idx": 22472, "node_name": "toffset", "Dec": "the starting offset of the subregion in this string ."}{"idx": 22473, "node_name": "other", "Dec": "the string argument ."}{"idx": 22474, "node_name": "ooffset", "Dec": "the starting offset of the subregion in the string argument ."}{"idx": 22475, "node_name": "len", "Dec": "the number of characters to compare ."}{"idx": 22477, "node_name": "prefix", "Dec": "the prefix ."}{"idx": 22478, "node_name": "toffset", "Dec": "where to begin looking in this string ."}{"idx": 22480, "node_name": "prefix", "Dec": "the prefix ."}{"idx": 22482, "node_name": "suffix", "Dec": "the suffix ."}{"idx": 22485, "node_name": "ch", "Dec": "a character ( unicode code point ) ."}{"idx": 22487, "node_name": "ch", "Dec": "a character ( unicode code point ) ."}{"idx": 22488, "node_name": "fromindex", "Dec": "the index to start the search from ."}{"idx": 22490, "node_name": "ch", "Dec": "a character ( unicode code point ) ."}{"idx": 22492, "node_name": "ch", "Dec": "a character ( unicode code point ) ."}{"idx": 22493, "node_name": "fromindex", "Dec": "the index to start the search from . there is no restriction on the value of fromindex . if it is greater than or equal to the length of this string , it has the same effect as if it were equal to one less than the length of this string : this entire string may be searched . if it is negative , it has the same effect as if it were -1 : -1 is returned ."}{"idx": 22495, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22497, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22498, "node_name": "fromindex", "Dec": "the index from which to start the search ."}{"idx": 22500, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22502, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22503, "node_name": "fromindex", "Dec": "the index to start the search from ."}{"idx": 22505, "node_name": "beginindex", "Dec": "the beginning index , inclusive ."}{"idx": 22507, "node_name": "beginindex", "Dec": "the beginning index , inclusive ."}{"idx": 22508, "node_name": "endindex", "Dec": "the ending index , exclusive ."}{"idx": 22510, "node_name": "beginindex", "Dec": "the begin index , inclusive ."}{"idx": 22511, "node_name": "endindex", "Dec": "the end index , exclusive ."}{"idx": 22513, "node_name": "str", "Dec": "the string that is concatenated to the end of this string ."}{"idx": 22515, "node_name": "oldchar", "Dec": "the old character ."}{"idx": 22516, "node_name": "newchar", "Dec": "the new character ."}{"idx": 22518, "node_name": "regex", "Dec": "the regular expression to which this string is to be matched"}{"idx": 22520, "node_name": "s", "Dec": "the sequence to search for"}{"idx": 22522, "node_name": "regex", "Dec": "the regular expression to which this string is to be matched"}{"idx": 22523, "node_name": "replacement", "Dec": "the string to be substituted for the first match"}{"idx": 22525, "node_name": "regex", "Dec": "the regular expression to which this string is to be matched"}{"idx": 22526, "node_name": "replacement", "Dec": "the string to be substituted for each match"}{"idx": 22528, "node_name": "target", "Dec": "the sequence of char values to be replaced"}{"idx": 22529, "node_name": "replacement", "Dec": "the replacement sequence of char values"}{"idx": 22531, "node_name": "regex", "Dec": "the delimiting regular expression"}{"idx": 22532, "node_name": "limit", "Dec": "the result threshold , as described above"}{"idx": 22534, "node_name": "regex", "Dec": "the delimiting regular expression"}{"idx": 22536, "node_name": "delimiter", "Dec": "the delimiter that separates each element"}{"idx": 22537, "node_name": "elements", "Dec": "the elements to join together ."}{"idx": 22539, "node_name": "delimiter", "Dec": "a sequence of characters that is used to separate each of the elements in the resulting string"}{"idx": 22540, "node_name": "elements", "Dec": "an iterable that will have its elements joined together ."}{"idx": 22542, "node_name": "locale", "Dec": "use the case transformation rules for this locale"}{"idx": 22545, "node_name": "locale", "Dec": "use the case transformation rules for this locale"}{"idx": 22554, "node_name": "n", "Dec": "number of leading white space characters to add or remove"}{"idx": 22556, "node_name": "f", "Dec": "functional interface to a apply"}{"idx": 22562, "node_name": "format", "Dec": "a format string"}{"idx": 22563, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 22565, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 22566, "node_name": "format", "Dec": "a format string"}{"idx": 22567, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the number of arguments is variable and may be zero . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification . the behaviour on a null argument depends on the conversion ."}{"idx": 22569, "node_name": "obj", "Dec": "an object ."}{"idx": 22571, "node_name": "data", "Dec": "the character array ."}{"idx": 22573, "node_name": "data", "Dec": "the character array ."}{"idx": 22574, "node_name": "offset", "Dec": "initial offset of the subarray ."}{"idx": 22575, "node_name": "count", "Dec": "length of the subarray ."}{"idx": 22577, "node_name": "data", "Dec": "the character array ."}{"idx": 22578, "node_name": "offset", "Dec": "initial offset of the subarray ."}{"idx": 22579, "node_name": "count", "Dec": "length of the subarray ."}{"idx": 22581, "node_name": "data", "Dec": "the character array ."}{"idx": 22583, "node_name": "b", "Dec": "a boolean ."}{"idx": 22585, "node_name": "c", "Dec": "a char ."}{"idx": 22587, "node_name": "i", "Dec": "an int ."}{"idx": 22589, "node_name": "l", "Dec": "a long ."}{"idx": 22591, "node_name": "f", "Dec": "a float ."}{"idx": 22593, "node_name": "d", "Dec": "a double ."}{"idx": 22596, "node_name": "count", "Dec": "number of times to repeat"}{"idx": 22599, "node_name": "lookup", "Dec": "ignored"}{"idx": 22603, "node_name": "capacity", "Dec": "the initial capacity ."}{"idx": 22605, "node_name": "str", "Dec": "the initial contents of the buffer ."}{"idx": 22607, "node_name": "seq", "Dec": "the sequence to copy ."}{"idx": 22609, "node_name": "another", "Dec": "the stringbuffer to be compared with"}{"idx": 22612, "node_name": "minimumcapacity", "Dec": "the minimum desired capacity ."}{"idx": 22615, "node_name": "newlength", "Dec": "the new length"}{"idx": 22617, "node_name": "index", "Dec": "the index of the desired char value ."}{"idx": 22619, "node_name": "index", "Dec": "the index to the char values"}{"idx": 22621, "node_name": "index", "Dec": "the index following the code point that should be returned"}{"idx": 22623, "node_name": "beginindex", "Dec": "the index to the first char of the text range ."}{"idx": 22624, "node_name": "endindex", "Dec": "the index after the last char of the text range ."}{"idx": 22626, "node_name": "index", "Dec": "the index to be offset"}{"idx": 22627, "node_name": "codepointoffset", "Dec": "the offset in code points"}{"idx": 22629, "node_name": "srcbegin", "Dec": "start copying at this offset ."}{"idx": 22630, "node_name": "srcend", "Dec": "stop copying at this offset ."}{"idx": 22631, "node_name": "dst", "Dec": "the array to copy the data into ."}{"idx": 22632, "node_name": "dstbegin", "Dec": "offset into dst ."}{"idx": 22634, "node_name": "index", "Dec": "the index of the character to modify ."}{"idx": 22635, "node_name": "ch", "Dec": "the new character ."}{"idx": 22637, "node_name": "obj", "Dec": "an object ."}{"idx": 22639, "node_name": "str", "Dec": "a string ."}{"idx": 22641, "node_name": "sb", "Dec": "the stringbuffer to append ."}{"idx": 22643, "node_name": "s", "Dec": "the charsequence to append ."}{"idx": 22645, "node_name": "s", "Dec": "the sequence to append ."}{"idx": 22646, "node_name": "start", "Dec": "the starting index of the subsequence to be appended ."}{"idx": 22647, "node_name": "end", "Dec": "the end index of the subsequence to be appended ."}{"idx": 22649, "node_name": "str", "Dec": "the characters to be appended ."}{"idx": 22651, "node_name": "str", "Dec": "the characters to be appended ."}{"idx": 22652, "node_name": "offset", "Dec": "the index of the first char to append ."}{"idx": 22653, "node_name": "len", "Dec": "the number of chars to append ."}{"idx": 22655, "node_name": "b", "Dec": "a boolean ."}{"idx": 22657, "node_name": "c", "Dec": "a char ."}{"idx": 22659, "node_name": "i", "Dec": "an int ."}{"idx": 22661, "node_name": "codepoint", "Dec": "a unicode code point"}{"idx": 22663, "node_name": "lng", "Dec": "a long ."}{"idx": 22665, "node_name": "f", "Dec": "a float ."}{"idx": 22667, "node_name": "d", "Dec": "a double ."}{"idx": 22669, "node_name": "start", "Dec": "the beginning index , inclusive ."}{"idx": 22670, "node_name": "end", "Dec": "the ending index , exclusive ."}{"idx": 22672, "node_name": "index", "Dec": "index of char to remove"}{"idx": 22674, "node_name": "start", "Dec": "the beginning index , inclusive ."}{"idx": 22675, "node_name": "end", "Dec": "the ending index , exclusive ."}{"idx": 22676, "node_name": "str", "Dec": "string that will replace previous contents ."}{"idx": 22678, "node_name": "start", "Dec": "the beginning index , inclusive ."}{"idx": 22680, "node_name": "start", "Dec": "the start index , inclusive ."}{"idx": 22681, "node_name": "end", "Dec": "the end index , exclusive ."}{"idx": 22683, "node_name": "start", "Dec": "the beginning index , inclusive ."}{"idx": 22684, "node_name": "end", "Dec": "the ending index , exclusive ."}{"idx": 22686, "node_name": "index", "Dec": "position at which to insert subarray ."}{"idx": 22687, "node_name": "str", "Dec": "a char array ."}{"idx": 22688, "node_name": "offset", "Dec": "the index of the first char in subarray to be inserted ."}{"idx": 22689, "node_name": "len", "Dec": "the number of chars in the subarray to be inserted ."}{"idx": 22691, "node_name": "offset", "Dec": "the offset ."}{"idx": 22692, "node_name": "obj", "Dec": "an object ."}{"idx": 22694, "node_name": "offset", "Dec": "the offset ."}{"idx": 22695, "node_name": "str", "Dec": "a string ."}{"idx": 22697, "node_name": "offset", "Dec": "the offset ."}{"idx": 22698, "node_name": "str", "Dec": "a character array ."}{"idx": 22700, "node_name": "dstoffset", "Dec": "the offset ."}{"idx": 22701, "node_name": "s", "Dec": "the sequence to be inserted"}{"idx": 22703, "node_name": "dstoffset", "Dec": "the offset in this sequence ."}{"idx": 22704, "node_name": "s", "Dec": "the sequence to be inserted ."}{"idx": 22705, "node_name": "start", "Dec": "the starting index of the subsequence to be inserted ."}{"idx": 22706, "node_name": "end", "Dec": "the end index of the subsequence to be inserted ."}{"idx": 22708, "node_name": "offset", "Dec": "the offset ."}{"idx": 22709, "node_name": "b", "Dec": "a boolean ."}{"idx": 22711, "node_name": "offset", "Dec": "the offset ."}{"idx": 22712, "node_name": "c", "Dec": "a char ."}{"idx": 22714, "node_name": "offset", "Dec": "the offset ."}{"idx": 22715, "node_name": "i", "Dec": "an int ."}{"idx": 22717, "node_name": "offset", "Dec": "the offset ."}{"idx": 22718, "node_name": "l", "Dec": "a long ."}{"idx": 22720, "node_name": "offset", "Dec": "the offset ."}{"idx": 22721, "node_name": "f", "Dec": "a float ."}{"idx": 22723, "node_name": "offset", "Dec": "the offset ."}{"idx": 22724, "node_name": "d", "Dec": "a double ."}{"idx": 22726, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22728, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22729, "node_name": "fromindex", "Dec": "the index from which to start the search ."}{"idx": 22731, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22733, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22734, "node_name": "fromindex", "Dec": "the index to start the search from ."}{"idx": 22741, "node_name": "capacity", "Dec": "the initial capacity ."}{"idx": 22743, "node_name": "str", "Dec": "the initial contents of the buffer ."}{"idx": 22745, "node_name": "seq", "Dec": "the sequence to copy ."}{"idx": 22747, "node_name": "another", "Dec": "the stringbuilder to be compared with"}{"idx": 22749, "node_name": "obj", "Dec": "an object ."}{"idx": 22751, "node_name": "str", "Dec": "a string ."}{"idx": 22753, "node_name": "sb", "Dec": "the stringbuffer to append ."}{"idx": 22755, "node_name": "s", "Dec": "the character sequence to append . if csq is null , then the four characters \" null \" are appended to this appendable ."}{"idx": 22757, "node_name": "s", "Dec": "the sequence to append ."}{"idx": 22758, "node_name": "start", "Dec": "the starting index of the subsequence to be appended ."}{"idx": 22759, "node_name": "end", "Dec": "the end index of the subsequence to be appended ."}{"idx": 22761, "node_name": "str", "Dec": "the characters to be appended ."}{"idx": 22763, "node_name": "str", "Dec": "the characters to be appended ."}{"idx": 22764, "node_name": "offset", "Dec": "the index of the first char to append ."}{"idx": 22765, "node_name": "len", "Dec": "the number of chars to append ."}{"idx": 22767, "node_name": "b", "Dec": "a boolean ."}{"idx": 22769, "node_name": "c", "Dec": "a char ."}{"idx": 22771, "node_name": "i", "Dec": "an int ."}{"idx": 22773, "node_name": "lng", "Dec": "a long ."}{"idx": 22775, "node_name": "f", "Dec": "a float ."}{"idx": 22777, "node_name": "d", "Dec": "a double ."}{"idx": 22779, "node_name": "codepoint", "Dec": "a unicode code point"}{"idx": 22781, "node_name": "start", "Dec": "the beginning index , inclusive ."}{"idx": 22782, "node_name": "end", "Dec": "the ending index , exclusive ."}{"idx": 22784, "node_name": "index", "Dec": "index of char to remove"}{"idx": 22786, "node_name": "start", "Dec": "the beginning index , inclusive ."}{"idx": 22787, "node_name": "end", "Dec": "the ending index , exclusive ."}{"idx": 22788, "node_name": "str", "Dec": "string that will replace previous contents ."}{"idx": 22790, "node_name": "index", "Dec": "position at which to insert subarray ."}{"idx": 22791, "node_name": "str", "Dec": "a char array ."}{"idx": 22792, "node_name": "offset", "Dec": "the index of the first char in subarray to be inserted ."}{"idx": 22793, "node_name": "len", "Dec": "the number of chars in the subarray to be inserted ."}{"idx": 22795, "node_name": "offset", "Dec": "the offset ."}{"idx": 22796, "node_name": "obj", "Dec": "an object ."}{"idx": 22798, "node_name": "offset", "Dec": "the offset ."}{"idx": 22799, "node_name": "str", "Dec": "a string ."}{"idx": 22801, "node_name": "offset", "Dec": "the offset ."}{"idx": 22802, "node_name": "str", "Dec": "a character array ."}{"idx": 22804, "node_name": "dstoffset", "Dec": "the offset ."}{"idx": 22805, "node_name": "s", "Dec": "the sequence to be inserted"}{"idx": 22807, "node_name": "dstoffset", "Dec": "the offset in this sequence ."}{"idx": 22808, "node_name": "s", "Dec": "the sequence to be inserted ."}{"idx": 22809, "node_name": "start", "Dec": "the starting index of the subsequence to be inserted ."}{"idx": 22810, "node_name": "end", "Dec": "the end index of the subsequence to be inserted ."}{"idx": 22812, "node_name": "offset", "Dec": "the offset ."}{"idx": 22813, "node_name": "b", "Dec": "a boolean ."}{"idx": 22815, "node_name": "offset", "Dec": "the offset ."}{"idx": 22816, "node_name": "c", "Dec": "a char ."}{"idx": 22818, "node_name": "offset", "Dec": "the offset ."}{"idx": 22819, "node_name": "i", "Dec": "an int ."}{"idx": 22821, "node_name": "offset", "Dec": "the offset ."}{"idx": 22822, "node_name": "l", "Dec": "a long ."}{"idx": 22824, "node_name": "offset", "Dec": "the offset ."}{"idx": 22825, "node_name": "f", "Dec": "a float ."}{"idx": 22827, "node_name": "offset", "Dec": "the offset ."}{"idx": 22828, "node_name": "d", "Dec": "a double ."}{"idx": 22830, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22832, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22833, "node_name": "fromindex", "Dec": "the index from which to start the search ."}{"idx": 22835, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22837, "node_name": "str", "Dec": "the substring to search for ."}{"idx": 22838, "node_name": "fromindex", "Dec": "the index to start the search from ."}{"idx": 22843, "node_name": "minimumcapacity", "Dec": "the minimum desired capacity ."}{"idx": 22846, "node_name": "newlength", "Dec": "the new length"}{"idx": 22848, "node_name": "index", "Dec": "the index of the desired char value ."}{"idx": 22850, "node_name": "index", "Dec": "the index to the char values"}{"idx": 22852, "node_name": "index", "Dec": "the index following the code point that should be returned"}{"idx": 22854, "node_name": "beginindex", "Dec": "the index to the first char of the text range ."}{"idx": 22855, "node_name": "endindex", "Dec": "the index after the last char of the text range ."}{"idx": 22857, "node_name": "index", "Dec": "the index to be offset"}{"idx": 22858, "node_name": "codepointoffset", "Dec": "the offset in code points"}{"idx": 22860, "node_name": "srcbegin", "Dec": "start copying at this offset ."}{"idx": 22861, "node_name": "srcend", "Dec": "stop copying at this offset ."}{"idx": 22862, "node_name": "dst", "Dec": "the array to copy the data into ."}{"idx": 22863, "node_name": "dstbegin", "Dec": "offset into dst ."}{"idx": 22865, "node_name": "index", "Dec": "the index of the character to modify ."}{"idx": 22866, "node_name": "ch", "Dec": "the new character ."}{"idx": 22868, "node_name": "start", "Dec": "the beginning index , inclusive ."}{"idx": 22870, "node_name": "start", "Dec": "the start index , inclusive ."}{"idx": 22871, "node_name": "end", "Dec": "the end index , exclusive ."}{"idx": 22873, "node_name": "start", "Dec": "the beginning index , inclusive ."}{"idx": 22874, "node_name": "end", "Dec": "the ending index , exclusive ."}{"idx": 22880, "node_name": "s", "Dec": "the detail message ."}{"idx": 22882, "node_name": "index", "Dec": "the illegal index ."}{"idx": 22889, "node_name": "in", "Dec": "the new standard input stream ."}{"idx": 22891, "node_name": "out", "Dec": "the new standard output stream"}{"idx": 22893, "node_name": "err", "Dec": "the new standard error output stream ."}{"idx": 22897, "node_name": "sm", "Dec": "the security manager or null"}{"idx": 22902, "node_name": "src", "Dec": "the source array ."}{"idx": 22903, "node_name": "srcpos", "Dec": "starting position in the source array ."}{"idx": 22904, "node_name": "dest", "Dec": "the destination array ."}{"idx": 22905, "node_name": "destpos", "Dec": "starting position in the destination data ."}{"idx": 22906, "node_name": "length", "Dec": "the number of array elements to be copied ."}{"idx": 22908, "node_name": "x", "Dec": "object for which the hashcode is to be calculated"}{"idx": 22912, "node_name": "props", "Dec": "the new system properties ."}{"idx": 22914, "node_name": "key", "Dec": "the name of the system property ."}{"idx": 22916, "node_name": "key", "Dec": "the name of the system property ."}{"idx": 22917, "node_name": "def", "Dec": "a default value ."}{"idx": 22919, "node_name": "key", "Dec": "the name of the system property ."}{"idx": 22920, "node_name": "value", "Dec": "the value of the system property ."}{"idx": 22922, "node_name": "key", "Dec": "the name of the system property to be removed ."}{"idx": 22924, "node_name": "name", "Dec": "the name of the environment variable"}{"idx": 22927, "node_name": "name", "Dec": "the name of the logger ."}{"idx": 22929, "node_name": "name", "Dec": "the name of the logger ."}{"idx": 22930, "node_name": "bundle", "Dec": "a resource bundle ."}{"idx": 22932, "node_name": "status", "Dec": "exit status ."}{"idx": 22936, "node_name": "filename", "Dec": "the file to load ."}{"idx": 22938, "node_name": "libname", "Dec": "the name of the library ."}{"idx": 22940, "node_name": "libname", "Dec": "the name of the library ."}{"idx": 22944, "node_name": "level", "Dec": "the log message level ."}{"idx": 22946, "node_name": "level", "Dec": "the log message level ."}{"idx": 22947, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog , if this logger is a localized logger ); can be null ."}{"idx": 22949, "node_name": "level", "Dec": "the log message level ."}{"idx": 22950, "node_name": "msgsupplier", "Dec": "a supplier function that produces a message ."}{"idx": 22952, "node_name": "level", "Dec": "the log message level ."}{"idx": 22953, "node_name": "obj", "Dec": "the object to log ."}{"idx": 22955, "node_name": "level", "Dec": "the log message level ."}{"idx": 22956, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog , if this logger is a localized logger ); can be null ."}{"idx": 22957, "node_name": "thrown", "Dec": "a throwable associated with the log message ; can be null ."}{"idx": 22959, "node_name": "level", "Dec": "one of the log message level identifiers ."}{"idx": 22960, "node_name": "msgsupplier", "Dec": "a supplier function that produces a message ."}{"idx": 22961, "node_name": "thrown", "Dec": "a throwable associated with log message ; can be null ."}{"idx": 22963, "node_name": "level", "Dec": "one of the log message level identifiers ."}{"idx": 22964, "node_name": "format", "Dec": "the string message format in messageformat format , ( or a key in the message catalog , if this logger is a localized logger ); can be null ."}{"idx": 22965, "node_name": "params", "Dec": "an optional list of parameters to the message ( may be none ) ."}{"idx": 22967, "node_name": "level", "Dec": "the log message level ."}{"idx": 22968, "node_name": "bundle", "Dec": "a resource bundle to localize msg ; can be null ."}{"idx": 22969, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog , if bundle is not null ); can be null ."}{"idx": 22970, "node_name": "thrown", "Dec": "a throwable associated with the log message ; can be null ."}{"idx": 22972, "node_name": "level", "Dec": "the log message level ."}{"idx": 22973, "node_name": "bundle", "Dec": "a resource bundle to localize format ; can be null ."}{"idx": 22974, "node_name": "format", "Dec": "the string message format in messageformat format , ( or a key in the message catalog if bundle is not null ); can be null ."}{"idx": 22975, "node_name": "params", "Dec": "an optional list of parameters to the message ( may be none ) ."}{"idx": 22979, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 22985, "node_name": "name", "Dec": "the name of the logger ."}{"idx": 22986, "node_name": "module", "Dec": "the module for which the logger is being requested ."}{"idx": 22988, "node_name": "name", "Dec": "the name of the logger ."}{"idx": 22989, "node_name": "bundle", "Dec": "a resource bundle ; can be null ."}{"idx": 22990, "node_name": "module", "Dec": "the module for which the logger is being requested ."}{"idx": 22998, "node_name": "target", "Dec": "the object whose run method is invoked when this thread is started . if null , this classes run method does nothing ."}{"idx": 23000, "node_name": "group", "Dec": "the thread group . if null and there is a security manager , the group is determined by securitymanager.getthreadgroup() . if there is not a security manager or securitymanager.getthreadgroup() returns null , the group is set to the current thread's thread group ."}{"idx": 23001, "node_name": "target", "Dec": "the object whose run method is invoked when this thread is started . if null , this thread's run method is invoked ."}{"idx": 23003, "node_name": "name", "Dec": "the name of the new thread"}{"idx": 23005, "node_name": "group", "Dec": "the thread group . if null and there is a security manager , the group is determined by securitymanager.getthreadgroup() . if there is not a security manager or securitymanager.getthreadgroup() returns null , the group is set to the current thread's thread group ."}{"idx": 23006, "node_name": "name", "Dec": "the name of the new thread"}{"idx": 23008, "node_name": "target", "Dec": "the object whose run method is invoked when this thread is started . if null , this thread's run method is invoked ."}{"idx": 23009, "node_name": "name", "Dec": "the name of the new thread"}{"idx": 23011, "node_name": "group", "Dec": "the thread group . if null and there is a security manager , the group is determined by securitymanager.getthreadgroup() . if there is not a security manager or securitymanager.getthreadgroup() returns null , the group is set to the current thread's thread group ."}{"idx": 23012, "node_name": "target", "Dec": "the object whose run method is invoked when this thread is started . if null , this thread's run method is invoked ."}{"idx": 23013, "node_name": "name", "Dec": "the name of the new thread"}{"idx": 23015, "node_name": "group", "Dec": "the thread group . if null and there is a security manager , the group is determined by securitymanager.getthreadgroup() . if there is not a security manager or securitymanager.getthreadgroup() returns null , the group is set to the current thread's thread group ."}{"idx": 23016, "node_name": "target", "Dec": "the object whose run method is invoked when this thread is started . if null , this thread's run method is invoked ."}{"idx": 23017, "node_name": "name", "Dec": "the name of the new thread"}{"idx": 23018, "node_name": "stacksize", "Dec": "the desired stack size for the new thread , or zero to indicate that this parameter is to be ignored ."}{"idx": 23020, "node_name": "group", "Dec": "the thread group . if null and there is a security manager , the group is determined by securitymanager.getthreadgroup() . if there is not a security manager or securitymanager.getthreadgroup() returns null , the group is set to the current thread's thread group ."}{"idx": 23021, "node_name": "target", "Dec": "the object whose run method is invoked when this thread is started . if null , this thread's run method is invoked ."}{"idx": 23022, "node_name": "name", "Dec": "the name of the new thread"}{"idx": 23023, "node_name": "stacksize", "Dec": "the desired stack size for the new thread , or zero to indicate that this parameter is to be ignored"}{"idx": 23024, "node_name": "inheritthreadlocals", "Dec": "if true , inherit initial values for inheritable thread-locals from the constructing thread , otherwise no initial values are inherited"}{"idx": 23028, "node_name": "millis", "Dec": "the length of time to sleep in milliseconds"}{"idx": 23030, "node_name": "millis", "Dec": "the length of time to sleep in milliseconds"}{"idx": 23031, "node_name": "nanos", "Dec": "0-999999 additional nanoseconds to sleep"}{"idx": 23041, "node_name": "newpriority", "Dec": "priority to set this thread to"}{"idx": 23044, "node_name": "name", "Dec": "the new name for this thread ."}{"idx": 23049, "node_name": "tarray", "Dec": "an array into which to put the list of threads"}{"idx": 23051, "node_name": "millis", "Dec": "the time to wait in milliseconds"}{"idx": 23053, "node_name": "millis", "Dec": "the time to wait in milliseconds"}{"idx": 23054, "node_name": "nanos", "Dec": "0-999999 additional nanoseconds to wait"}{"idx": 23058, "node_name": "on", "Dec": "if true , marks this thread as a daemon thread"}{"idx": 23064, "node_name": "cl", "Dec": "the context classloader for this thread , or null indicating the system class loader ( or , failing that , the bootstrap class loader )"}{"idx": 23066, "node_name": "obj", "Dec": "the object on which to test lock ownership"}{"idx": 23072, "node_name": "eh", "Dec": "the object to use as the default uncaught exception handler . if null then there is no default handler ."}{"idx": 23076, "node_name": "eh", "Dec": "the object to use as this thread's uncaught exception handler . if null then this thread has no explicit handler ."}{"idx": 23080, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 23083, "node_name": "t", "Dec": "the thread"}{"idx": 23084, "node_name": "e", "Dec": "the exception"}{"idx": 23089, "node_name": "name", "Dec": "the name of the new thread group ."}{"idx": 23091, "node_name": "parent", "Dec": "the parent thread group ."}{"idx": 23092, "node_name": "name", "Dec": "the name of the new thread group ."}{"idx": 23099, "node_name": "daemon", "Dec": "if true , marks this thread group as a daemon thread group ; otherwise , marks this thread group as normal ."}{"idx": 23101, "node_name": "pri", "Dec": "the new priority of the thread group ."}{"idx": 23103, "node_name": "g", "Dec": "a thread group ."}{"idx": 23107, "node_name": "list", "Dec": "an array into which to put the list of threads"}{"idx": 23109, "node_name": "list", "Dec": "an array into which to put the list of threads"}{"idx": 23110, "node_name": "recurse", "Dec": "if true , recursively enumerate all subgroups of this thread group"}{"idx": 23113, "node_name": "list", "Dec": "an array into which to put the list of thread groups"}{"idx": 23115, "node_name": "list", "Dec": "an array into which to put the list of thread groups"}{"idx": 23116, "node_name": "recurse", "Dec": "if true , recursively enumerate all subgroups"}{"idx": 23121, "node_name": "t", "Dec": "the thread that is about to exit ."}{"idx": 23122, "node_name": "e", "Dec": "the uncaught exception ."}{"idx": 23128, "node_name": "supplier", "Dec": "the supplier to be used to determine the initial value"}{"idx": 23131, "node_name": "value", "Dec": "the value to be stored in the current thread's copy of this thread-local ."}{"idx": 23136, "node_name": "message", "Dec": "the detail message . the detail message is saved for later retrieval by the getmessage() method ."}{"idx": 23138, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the getmessage() method ) ."}{"idx": 23139, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 23141, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 23143, "node_name": "message", "Dec": "the detail message ."}{"idx": 23144, "node_name": "cause", "Dec": "the cause . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 23145, "node_name": "enablesuppression", "Dec": "whether or not suppression is enabled or disabled"}{"idx": 23146, "node_name": "writablestacktrace", "Dec": "whether or not the stack trace should be writable"}{"idx": 23151, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 23155, "node_name": "s", "Dec": "printstream to use for output"}{"idx": 23157, "node_name": "s", "Dec": "printwriter to use for output"}{"idx": 23161, "node_name": "stacktrace", "Dec": "the stack trace elements to be associated with this throwable . the specified array is copied by this call ; changes in the specified array after setStackTrace(java.lang.StackTraceElement[]) invocation returns will have no affect on this throwable's stack trace ."}{"idx": 23163, "node_name": "exception", "Dec": "the exception to be added to the list of suppressed exceptions"}{"idx": 23167, "node_name": "typename", "Dec": "the fully qualified name of the unavailable type"}{"idx": 23168, "node_name": "cause", "Dec": "the exception that was thrown when the system attempted to load the named type , or null if unavailable or inapplicable"}{"idx": 23173, "node_name": "s", "Dec": "the detail message ."}{"idx": 23177, "node_name": "s", "Dec": "the detail message ."}{"idx": 23181, "node_name": "s", "Dec": "the detail message ."}{"idx": 23185, "node_name": "message", "Dec": "the detail message"}{"idx": 23187, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 23188, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 23190, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 23194, "node_name": "s", "Dec": "the detail message ."}{"idx": 23198, "node_name": "message", "Dec": "the detail message ."}{"idx": 23200, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 23201, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 23203, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 23211, "node_name": "in", "Dec": "char array that is the source of characters ."}{"idx": 23212, "node_name": "offset", "Dec": "first character in the array to inspect ."}{"idx": 23213, "node_name": "len", "Dec": "number of characters to consider ."}{"idx": 23215, "node_name": "in", "Dec": "char array that is the source of characters ."}{"idx": 23216, "node_name": "offset", "Dec": "first character in the array to inspect ."}{"idx": 23217, "node_name": "len", "Dec": "number of characters to consider ."}{"idx": 23218, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23220, "node_name": "in", "Dec": "char array that is the source of characters ."}{"idx": 23222, "node_name": "in", "Dec": "char array that is the source of characters ."}{"idx": 23223, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23226, "node_name": "val", "Dec": "string representation of a bigdecimal ."}{"idx": 23227, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23229, "node_name": "val", "Dec": "double value to be converted to bigdecimal ."}{"idx": 23231, "node_name": "val", "Dec": "double value to be converted to bigdecimal ."}{"idx": 23232, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23234, "node_name": "val", "Dec": "biginteger value to be converted to bigdecimal ."}{"idx": 23236, "node_name": "val", "Dec": "biginteger value to be converted to bigdecimal ."}{"idx": 23237, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23239, "node_name": "unscaledval", "Dec": "unscaled value of the bigdecimal ."}{"idx": 23240, "node_name": "scale", "Dec": "scale of the bigdecimal ."}{"idx": 23242, "node_name": "unscaledval", "Dec": "unscaled value of the bigdecimal ."}{"idx": 23243, "node_name": "scale", "Dec": "scale of the bigdecimal ."}{"idx": 23244, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23246, "node_name": "val", "Dec": "int value to be converted to bigdecimal ."}{"idx": 23248, "node_name": "val", "Dec": "int value to be converted to bigdecimal ."}{"idx": 23249, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23251, "node_name": "val", "Dec": "long value to be converted to bigdecimal ."}{"idx": 23253, "node_name": "val", "Dec": "long value to be converted to bigdecimal ."}{"idx": 23254, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23256, "node_name": "unscaledval", "Dec": "unscaled value of the bigdecimal ."}{"idx": 23257, "node_name": "scale", "Dec": "scale of the bigdecimal ."}{"idx": 23259, "node_name": "val", "Dec": "value of the bigdecimal ."}{"idx": 23261, "node_name": "val", "Dec": "double to convert to a bigdecimal ."}{"idx": 23263, "node_name": "augend", "Dec": "value to be added to this bigdecimal ."}{"idx": 23265, "node_name": "augend", "Dec": "value to be added to this bigdecimal ."}{"idx": 23266, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23268, "node_name": "subtrahend", "Dec": "value to be subtracted from this bigdecimal ."}{"idx": 23270, "node_name": "subtrahend", "Dec": "value to be subtracted from this bigdecimal ."}{"idx": 23271, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23273, "node_name": "multiplicand", "Dec": "value to be multiplied by this bigdecimal ."}{"idx": 23275, "node_name": "multiplicand", "Dec": "value to be multiplied by this bigdecimal ."}{"idx": 23276, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23278, "node_name": "divisor", "Dec": "value by which this bigdecimal is to be divided ."}{"idx": 23279, "node_name": "scale", "Dec": "scale of the bigdecimal quotient to be returned ."}{"idx": 23280, "node_name": "roundingmode", "Dec": "rounding mode to apply ."}{"idx": 23282, "node_name": "divisor", "Dec": "value by which this bigdecimal is to be divided ."}{"idx": 23283, "node_name": "roundingmode", "Dec": "rounding mode to apply ."}{"idx": 23285, "node_name": "divisor", "Dec": "value by which this bigdecimal is to be divided ."}{"idx": 23287, "node_name": "divisor", "Dec": "value by which this bigdecimal is to be divided ."}{"idx": 23288, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23290, "node_name": "divisor", "Dec": "value by which this bigdecimal is to be divided ."}{"idx": 23292, "node_name": "divisor", "Dec": "value by which this bigdecimal is to be divided ."}{"idx": 23293, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23295, "node_name": "divisor", "Dec": "value by which this bigdecimal is to be divided ."}{"idx": 23297, "node_name": "divisor", "Dec": "value by which this bigdecimal is to be divided ."}{"idx": 23298, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23300, "node_name": "divisor", "Dec": "value by which this bigdecimal is to be divided , and the remainder computed ."}{"idx": 23302, "node_name": "divisor", "Dec": "value by which this bigdecimal is to be divided , and the remainder computed ."}{"idx": 23303, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23305, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23307, "node_name": "n", "Dec": "power to raise this bigdecimal to ."}{"idx": 23309, "node_name": "n", "Dec": "power to raise this bigdecimal to ."}{"idx": 23310, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23313, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23316, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23319, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23325, "node_name": "mc", "Dec": "the context to use ."}{"idx": 23327, "node_name": "newscale", "Dec": "scale of the bigdecimal value to be returned ."}{"idx": 23328, "node_name": "roundingmode", "Dec": "the rounding mode to apply ."}{"idx": 23330, "node_name": "newscale", "Dec": "scale of the bigdecimal value to be returned ."}{"idx": 23332, "node_name": "n", "Dec": "number of places to move the decimal point to the left ."}{"idx": 23334, "node_name": "n", "Dec": "number of places to move the decimal point to the right ."}{"idx": 23336, "node_name": "n", "Dec": "the exponent power of ten to scale by"}{"idx": 23339, "node_name": "val", "Dec": "bigdecimal to which this bigdecimal is to be compared ."}{"idx": 23341, "node_name": "x", "Dec": "object to which this bigdecimal is to be compared ."}{"idx": 23343, "node_name": "val", "Dec": "value with which the minimum is to be computed ."}{"idx": 23345, "node_name": "val", "Dec": "value with which the maximum is to be computed ."}{"idx": 23367, "node_name": "val", "Dec": "byte array containing a sub-array which is the big-endian two's -complement binary representation of a biginteger ."}{"idx": 23368, "node_name": "off", "Dec": "the start offset of the binary representation ."}{"idx": 23369, "node_name": "len", "Dec": "the number of bytes to use ."}{"idx": 23371, "node_name": "val", "Dec": "big-endian two's -complement binary representation of a biginteger ."}{"idx": 23373, "node_name": "signum", "Dec": "signum of the number ( -1 for negative , 0 for zero , 1 for positive ) ."}{"idx": 23374, "node_name": "magnitude", "Dec": "big-endian binary representation of the magnitude of the number ."}{"idx": 23375, "node_name": "off", "Dec": "the start offset of the binary representation ."}{"idx": 23376, "node_name": "len", "Dec": "the number of bytes to use ."}{"idx": 23378, "node_name": "signum", "Dec": "signum of the number ( -1 for negative , 0 for zero , 1 for positive ) ."}{"idx": 23379, "node_name": "magnitude", "Dec": "big-endian binary representation of the magnitude of the number ."}{"idx": 23381, "node_name": "val", "Dec": "string representation of biginteger ."}{"idx": 23382, "node_name": "radix", "Dec": "radix to be used in interpreting val ."}{"idx": 23384, "node_name": "val", "Dec": "decimal string representation of biginteger ."}{"idx": 23386, "node_name": "numbits", "Dec": "maximum bitlength of the new biginteger ."}{"idx": 23387, "node_name": "rnd", "Dec": "source of randomness to be used in computing the new biginteger ."}{"idx": 23389, "node_name": "bitlength", "Dec": "bitlength of the returned biginteger ."}{"idx": 23390, "node_name": "certainty", "Dec": "a measure of the uncertainty that the caller is willing to tolerate . the probability that the new biginteger represents a prime number will exceed ( 1"}{"idx": 23391, "node_name": "rnd", "Dec": "source of random bits used to select candidates to be tested for primality ."}{"idx": 23393, "node_name": "bitlength", "Dec": "bitlength of the returned biginteger ."}{"idx": 23394, "node_name": "rnd", "Dec": "source of random bits used to select candidates to be tested for primality ."}{"idx": 23397, "node_name": "val", "Dec": "value of the biginteger to return ."}{"idx": 23399, "node_name": "val", "Dec": "value to be added to this biginteger ."}{"idx": 23401, "node_name": "val", "Dec": "value to be subtracted from this biginteger ."}{"idx": 23403, "node_name": "val", "Dec": "value to be multiplied by this biginteger ."}{"idx": 23405, "node_name": "val", "Dec": "value by which this biginteger is to be divided ."}{"idx": 23407, "node_name": "val", "Dec": "value by which this biginteger is to be divided , and the remainder computed ."}{"idx": 23409, "node_name": "val", "Dec": "value by which this biginteger is to be divided , and the remainder computed ."}{"idx": 23411, "node_name": "exponent", "Dec": "exponent to which this biginteger is to be raised ."}{"idx": 23415, "node_name": "val", "Dec": "value with which the gcd is to be computed ."}{"idx": 23420, "node_name": "m", "Dec": "the modulus ."}{"idx": 23422, "node_name": "exponent", "Dec": "the exponent ."}{"idx": 23423, "node_name": "m", "Dec": "the modulus ."}{"idx": 23425, "node_name": "m", "Dec": "the modulus ."}{"idx": 23427, "node_name": "n", "Dec": "shift distance , in bits ."}{"idx": 23429, "node_name": "n", "Dec": "shift distance , in bits ."}{"idx": 23431, "node_name": "val", "Dec": "value to be and'ed with this biginteger ."}{"idx": 23433, "node_name": "val", "Dec": "value to be or'ed with this biginteger ."}{"idx": 23435, "node_name": "val", "Dec": "value to be xor'ed with this biginteger ."}{"idx": 23438, "node_name": "val", "Dec": "value to be complemented and and'ed with this biginteger ."}{"idx": 23440, "node_name": "n", "Dec": "index of bit to test ."}{"idx": 23442, "node_name": "n", "Dec": "index of bit to set ."}{"idx": 23444, "node_name": "n", "Dec": "index of bit to clear ."}{"idx": 23446, "node_name": "n", "Dec": "index of bit to flip ."}{"idx": 23451, "node_name": "certainty", "Dec": "a measure of the uncertainty that the caller is willing to tolerate : if the call returns true the probability that this biginteger is prime exceeds ( 1"}{"idx": 23453, "node_name": "val", "Dec": "biginteger to which this biginteger is to be compared ."}{"idx": 23455, "node_name": "x", "Dec": "object to which this biginteger is to be compared ."}{"idx": 23457, "node_name": "val", "Dec": "value with which the minimum is to be computed ."}{"idx": 23459, "node_name": "val", "Dec": "value with which the maximum is to be computed ."}{"idx": 23462, "node_name": "radix", "Dec": "radix of the string representation ."}{"idx": 23479, "node_name": "setprecision", "Dec": "the non-negative int precision setting ."}{"idx": 23481, "node_name": "setprecision", "Dec": "the non-negative int precision setting ."}{"idx": 23482, "node_name": "setroundingmode", "Dec": "the rounding mode to use ."}{"idx": 23484, "node_name": "val", "Dec": "the string to be parsed"}{"idx": 23488, "node_name": "x", "Dec": "object to which this mathcontext is to be compared ."}{"idx": 23494, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 23496, "node_name": "rm", "Dec": "legacy integer rounding mode to convert"}{"idx": 23500, "node_name": "a", "Dec": "the authenticator to be set . if a is null then any previously set authenticator is removed ."}{"idx": 23503, "node_name": "addr", "Dec": "the inetaddress of the site requesting authorization , or null if not known ."}{"idx": 23504, "node_name": "port", "Dec": "the port for the requested connection"}{"idx": 23505, "node_name": "protocol", "Dec": "the protocol that's requesting the connection ( getrequestingprotocol() )"}{"idx": 23506, "node_name": "prompt", "Dec": "a prompt string for the user"}{"idx": 23507, "node_name": "scheme", "Dec": "the authentication scheme"}{"idx": 23509, "node_name": "host", "Dec": "the hostname of the site requesting authentication ."}{"idx": 23510, "node_name": "addr", "Dec": "the inetaddress of the site requesting authentication , or null if not known ."}{"idx": 23511, "node_name": "port", "Dec": "the port for the requested connection ."}{"idx": 23512, "node_name": "protocol", "Dec": "the protocol that's requesting the connection ( getrequestingprotocol() )"}{"idx": 23513, "node_name": "prompt", "Dec": "a prompt string for the user which identifies the authentication realm ."}{"idx": 23514, "node_name": "scheme", "Dec": "the authentication scheme"}{"idx": 23516, "node_name": "host", "Dec": "the hostname of the site requesting authentication ."}{"idx": 23517, "node_name": "addr", "Dec": "the inetaddress of the site requesting authorization , or null if not known ."}{"idx": 23518, "node_name": "port", "Dec": "the port for the requested connection"}{"idx": 23519, "node_name": "protocol", "Dec": "the protocol that's requesting the connection ( getrequestingprotocol() )"}{"idx": 23520, "node_name": "prompt", "Dec": "a prompt string for the user"}{"idx": 23521, "node_name": "scheme", "Dec": "the authentication scheme"}{"idx": 23522, "node_name": "url", "Dec": "the requesting url that caused the authentication"}{"idx": 23523, "node_name": "reqtype", "Dec": "the type ( server or proxy ) of the entity requesting authentication ."}{"idx": 23525, "node_name": "authenticator", "Dec": "the authenticator , or null ."}{"idx": 23526, "node_name": "host", "Dec": "the hostname of the site requesting authentication ."}{"idx": 23527, "node_name": "addr", "Dec": "the inetaddress of the site requesting authorization , or null if not known ."}{"idx": 23528, "node_name": "port", "Dec": "the port for the requested connection"}{"idx": 23529, "node_name": "protocol", "Dec": "the protocol that's requesting the connection ( getrequestingprotocol() )"}{"idx": 23530, "node_name": "prompt", "Dec": "a prompt string for the user"}{"idx": 23531, "node_name": "scheme", "Dec": "the authentication scheme"}{"idx": 23532, "node_name": "url", "Dec": "the requesting url that caused the authentication"}{"idx": 23533, "node_name": "reqtype", "Dec": "the type ( server or proxy ) of the entity requesting authentication ."}{"idx": 23535, "node_name": "host", "Dec": "the hostname of the site requesting authentication ."}{"idx": 23536, "node_name": "addr", "Dec": "the inetaddress of the site requesting authorization , or null if not known ."}{"idx": 23537, "node_name": "port", "Dec": "the port for the requested connection"}{"idx": 23538, "node_name": "protocol", "Dec": "the protocol that's requesting the connection ( getrequestingprotocol() )"}{"idx": 23539, "node_name": "prompt", "Dec": "a prompt string for the user"}{"idx": 23540, "node_name": "scheme", "Dec": "the authentication scheme"}{"idx": 23541, "node_name": "url", "Dec": "the requesting url that caused the authentication"}{"idx": 23542, "node_name": "reqtype", "Dec": "the type ( server or proxy ) of the entity requesting authentication ."}{"idx": 23555, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 23558, "node_name": "msg", "Dec": "the detail message"}{"idx": 23570, "node_name": "msg", "Dec": "the detail message"}{"idx": 23575, "node_name": "urlc", "Dec": "a url connection ."}{"idx": 23577, "node_name": "urlc", "Dec": "a url connection ."}{"idx": 23578, "node_name": "classes", "Dec": "an array of types requested"}{"idx": 23581, "node_name": "mimetype", "Dec": "the mime type for which a content handler is desired ."}{"idx": 23586, "node_name": "chandler", "Dec": "the http cookie handler , or null to unset ."}{"idx": 23588, "node_name": "uri", "Dec": "a uri representing the intended use for the cookies"}{"idx": 23589, "node_name": "requestheaders", "Dec": "- a map from request header field names to lists of field values representing the current request headers"}{"idx": 23591, "node_name": "uri", "Dec": "a uri where the cookies come from"}{"idx": 23592, "node_name": "responseheaders", "Dec": "an immutable map from field names to lists of field values representing the response header fields returned"}{"idx": 23596, "node_name": "store", "Dec": "a cookiestore to be used by cookie manager . if null , cookie manager will use a default one , which is an in-memory cookiestore implementation ."}{"idx": 23597, "node_name": "cookiepolicy", "Dec": "a cookiepolicy instance to be used by cookie manager as policy callback . if null , accept_original_server will be used ."}{"idx": 23599, "node_name": "cookiepolicy", "Dec": "the cookie policy . can be null , which has no effects on current cookie policy ."}{"idx": 23606, "node_name": "uri", "Dec": "the uri to consult accept policy with"}{"idx": 23607, "node_name": "cookie", "Dec": "the httpcookie object in question"}{"idx": 23610, "node_name": "uri", "Dec": "the uri this cookie associated with . if null , this cookie will not be associated with an uri"}{"idx": 23611, "node_name": "cookie", "Dec": "the cookie to store"}{"idx": 23613, "node_name": "uri", "Dec": "the uri associated with the cookies to be returned"}{"idx": 23617, "node_name": "uri", "Dec": "the uri this cookie associated with . if null , the cookie to be removed is not associated with an uri when added ; if not null , the cookie to be removed is associated with the given uri when added ."}{"idx": 23618, "node_name": "cookie", "Dec": "the cookie to remove"}{"idx": 23622, "node_name": "buf", "Dec": "buffer for holding the incoming datagram ."}{"idx": 23623, "node_name": "offset", "Dec": "the offset for the buffer"}{"idx": 23624, "node_name": "length", "Dec": "the number of bytes to read ."}{"idx": 23626, "node_name": "buf", "Dec": "buffer for holding the incoming datagram ."}{"idx": 23627, "node_name": "length", "Dec": "the number of bytes to read ."}{"idx": 23629, "node_name": "buf", "Dec": "the packet data ."}{"idx": 23630, "node_name": "offset", "Dec": "the packet data offset ."}{"idx": 23631, "node_name": "length", "Dec": "the packet data length ."}{"idx": 23632, "node_name": "address", "Dec": "the destination address ."}{"idx": 23633, "node_name": "port", "Dec": "the destination port number ."}{"idx": 23635, "node_name": "buf", "Dec": "the packet data ."}{"idx": 23636, "node_name": "offset", "Dec": "the packet data offset ."}{"idx": 23637, "node_name": "length", "Dec": "the packet data length ."}{"idx": 23638, "node_name": "address", "Dec": "the destination socket address ."}{"idx": 23640, "node_name": "buf", "Dec": "the packet data ."}{"idx": 23641, "node_name": "length", "Dec": "the packet length ."}{"idx": 23642, "node_name": "address", "Dec": "the destination address ."}{"idx": 23643, "node_name": "port", "Dec": "the destination port number ."}{"idx": 23645, "node_name": "buf", "Dec": "the packet data ."}{"idx": 23646, "node_name": "length", "Dec": "the packet length ."}{"idx": 23647, "node_name": "address", "Dec": "the destination address ."}{"idx": 23654, "node_name": "buf", "Dec": "the buffer to set for this packet"}{"idx": 23655, "node_name": "offset", "Dec": "the offset into the data"}{"idx": 23656, "node_name": "length", "Dec": "the length of the data and / or the length of the buffer used to receive data"}{"idx": 23658, "node_name": "iaddr", "Dec": "the inetaddress"}{"idx": 23660, "node_name": "iport", "Dec": "the port number"}{"idx": 23662, "node_name": "address", "Dec": "the socketaddress"}{"idx": 23665, "node_name": "buf", "Dec": "the buffer to set for this packet ."}{"idx": 23667, "node_name": "length", "Dec": "the length to set for this packet ."}{"idx": 23671, "node_name": "impl", "Dec": "an instance of a datagramsocketimpl the subclass wishes to use on the datagramsocket ."}{"idx": 23673, "node_name": "bindaddr", "Dec": "local socket address to bind , or null for an unbound socket ."}{"idx": 23675, "node_name": "port", "Dec": "port to use ."}{"idx": 23677, "node_name": "port", "Dec": "local port to use"}{"idx": 23678, "node_name": "laddr", "Dec": "local address to bind"}{"idx": 23680, "node_name": "addr", "Dec": "the address and port to bind to ."}{"idx": 23682, "node_name": "address", "Dec": "the remote address for the socket"}{"idx": 23683, "node_name": "port", "Dec": "the remote port for the socket ."}{"idx": 23685, "node_name": "addr", "Dec": "the remote address ."}{"idx": 23694, "node_name": "p", "Dec": "the datagrampacket to be sent ."}{"idx": 23696, "node_name": "p", "Dec": "the datagrampacket into which to place the incoming data ."}{"idx": 23700, "node_name": "timeout", "Dec": "the specified timeout in milliseconds ."}{"idx": 23703, "node_name": "size", "Dec": "the size to which to set the send buffer size . this value must be greater than 0 ."}{"idx": 23706, "node_name": "size", "Dec": "the size to which to set the receive buffer size . this value must be greater than 0 ."}{"idx": 23709, "node_name": "on", "Dec": "whether to enable or disable the"}{"idx": 23712, "node_name": "on", "Dec": "whether or not to have broadcast turned on ."}{"idx": 23715, "node_name": "tc", "Dec": "an int value for the bitset ."}{"idx": 23721, "node_name": "fac", "Dec": "the desired factory ."}{"idx": 23723, "node_name": "name", "Dec": "the socket option"}{"idx": 23724, "node_name": "value", "Dec": "the value of the socket option . a value of null may be valid for some options ."}{"idx": 23726, "node_name": "name", "Dec": "the socket option"}{"idx": 23734, "node_name": "lport", "Dec": "the local port"}{"idx": 23735, "node_name": "laddr", "Dec": "the local address"}{"idx": 23737, "node_name": "p", "Dec": "the packet to be sent ."}{"idx": 23739, "node_name": "address", "Dec": "the remote inetaddress to connect to"}{"idx": 23740, "node_name": "port", "Dec": "the remote port number"}{"idx": 23743, "node_name": "i", "Dec": "an inetaddress object"}{"idx": 23745, "node_name": "p", "Dec": "the packet received ."}{"idx": 23747, "node_name": "p", "Dec": "the packet received ."}{"idx": 23749, "node_name": "ttl", "Dec": "an int specifying the time-to-live value"}{"idx": 23752, "node_name": "inetaddr", "Dec": "multicast address to join ."}{"idx": 23754, "node_name": "inetaddr", "Dec": "multicast address to leave ."}{"idx": 23756, "node_name": "mcastaddr", "Dec": "address to join ."}{"idx": 23757, "node_name": "netif", "Dec": "specifies the local interface to receive multicast datagram packets"}{"idx": 23759, "node_name": "mcastaddr", "Dec": "address to leave ."}{"idx": 23760, "node_name": "netif", "Dec": "specified the local interface to leave the group at"}{"idx": 23765, "node_name": "name", "Dec": "the socket option"}{"idx": 23766, "node_name": "value", "Dec": "the value of the socket option . a value of null may be valid for some options ."}{"idx": 23768, "node_name": "name", "Dec": "the socket option"}{"idx": 23774, "node_name": "filename", "Dec": "the specified file name"}{"idx": 23778, "node_name": "cookiehandler", "Dec": "the cookie handler"}{"idx": 23780, "node_name": "duration", "Dec": "the duration to allow the underlying connection to be established"}{"idx": 23782, "node_name": "sslcontext", "Dec": "the sslcontext"}{"idx": 23784, "node_name": "sslparameters", "Dec": "the sslparameters"}{"idx": 23786, "node_name": "executor", "Dec": "the executor"}{"idx": 23788, "node_name": "policy", "Dec": "the redirection policy"}{"idx": 23790, "node_name": "version", "Dec": "the requested http protocol version"}{"idx": 23792, "node_name": "priority", "Dec": "the priority weighting"}{"idx": 23794, "node_name": "proxyselector", "Dec": "the proxyselector"}{"idx": 23796, "node_name": "authenticator", "Dec": "the authenticator"}{"idx": 23812, "node_name": "request", "Dec": "the request"}{"idx": 23813, "node_name": "responsebodyhandler", "Dec": "the response body handler"}{"idx": 23815, "node_name": "request", "Dec": "the request"}{"idx": 23816, "node_name": "responsebodyhandler", "Dec": "the response body handler"}{"idx": 23818, "node_name": "request", "Dec": "the request"}{"idx": 23819, "node_name": "responsebodyhandler", "Dec": "the response body handler"}{"idx": 23820, "node_name": "pushpromisehandler", "Dec": "push promise handler , may be null"}{"idx": 23825, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 23829, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 23832, "node_name": "message", "Dec": "the detail message ; can be null"}{"idx": 23835, "node_name": "name", "Dec": "the header name"}{"idx": 23837, "node_name": "name", "Dec": "the header name"}{"idx": 23839, "node_name": "name", "Dec": "the header name"}{"idx": 23842, "node_name": "obj", "Dec": "the object to which this object is to be compared"}{"idx": 23846, "node_name": "headermap", "Dec": "the map containing the header names and values"}{"idx": 23847, "node_name": "filter", "Dec": "a filter that can be used to inspect each header-name-and-value pair in the given map to determine if it should , or should not , be added to the to the http headers"}{"idx": 23852, "node_name": "publisher", "Dec": "the publisher responsible for publishing the body"}{"idx": 23854, "node_name": "publisher", "Dec": "the publisher responsible for publishing the body"}{"idx": 23855, "node_name": "contentlength", "Dec": "a positive number representing the exact amount of bytes the publisher will publish"}{"idx": 23857, "node_name": "body", "Dec": "the string containing the body"}{"idx": 23859, "node_name": "s", "Dec": "the string containing the body"}{"idx": 23860, "node_name": "charset", "Dec": "the character set to convert the string to bytes"}{"idx": 23862, "node_name": "streamsupplier", "Dec": "a supplier of open inputstreams"}{"idx": 23864, "node_name": "buf", "Dec": "the byte array containing the body"}{"idx": 23866, "node_name": "buf", "Dec": "the byte array containing the body"}{"idx": 23867, "node_name": "offset", "Dec": "the offset of the first byte"}{"idx": 23868, "node_name": "length", "Dec": "the number of bytes to use"}{"idx": 23870, "node_name": "path", "Dec": "the path to the file containing the body"}{"idx": 23872, "node_name": "iter", "Dec": "an iterable of byte arrays"}{"idx": 23876, "node_name": "uri", "Dec": "the request uri"}{"idx": 23878, "node_name": "enable", "Dec": "true if expect continue to be sent"}{"idx": 23880, "node_name": "version", "Dec": "the http protocol version requested"}{"idx": 23882, "node_name": "name", "Dec": "the header name"}{"idx": 23883, "node_name": "value", "Dec": "the header value"}{"idx": 23885, "node_name": "headers", "Dec": "the list of name value pairs"}{"idx": 23887, "node_name": "duration", "Dec": "the timeout duration"}{"idx": 23889, "node_name": "name", "Dec": "the header name"}{"idx": 23890, "node_name": "value", "Dec": "the header value"}{"idx": 23893, "node_name": "bodypublisher", "Dec": "the body publisher"}{"idx": 23895, "node_name": "bodypublisher", "Dec": "the body publisher"}{"idx": 23898, "node_name": "method", "Dec": "method(java.lang.String,java.net.http.HttpRequest.BodyPublisher) to use"}{"idx": 23899, "node_name": "bodypublisher", "Dec": "the body publisher"}{"idx": 23905, "node_name": "uri", "Dec": "the request uri"}{"idx": 23915, "node_name": "obj", "Dec": "the object to which this object is to be compared"}{"idx": 23919, "node_name": "responseinfo", "Dec": "the response info"}{"idx": 23922, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 23924, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 23925, "node_name": "finisher", "Dec": "a function to be applied after the subscriber has completed"}{"idx": 23927, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 23929, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 23930, "node_name": "finisher", "Dec": "a function to be applied after the subscriber has completed"}{"idx": 23931, "node_name": "lineseparator", "Dec": "an optional line separator : can be null , in which case lines will be delimited in the manner of bufferedreader.readline() ."}{"idx": 23934, "node_name": "value", "Dec": "the value of u to return as the body , may be null"}{"idx": 23936, "node_name": "charset", "Dec": "the character set to convert the body with"}{"idx": 23938, "node_name": "file", "Dec": "the file to store the body in"}{"idx": 23939, "node_name": "openoptions", "Dec": "any options to use when opening / creating the file"}{"idx": 23941, "node_name": "file", "Dec": "the file to store the body in"}{"idx": 23943, "node_name": "directory", "Dec": "the directory to store the file in"}{"idx": 23944, "node_name": "openoptions", "Dec": "open options used when opening the file"}{"idx": 23948, "node_name": "consumer", "Dec": "a consumer to accept the response body"}{"idx": 23953, "node_name": "downstreamhandler", "Dec": "the downstream handler"}{"idx": 23954, "node_name": "buffersize", "Dec": "the buffer size parameter passed to bodysubscribers.buffering"}{"idx": 23959, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 23961, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 23962, "node_name": "finisher", "Dec": "a function to be applied after the subscriber has completed"}{"idx": 23964, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 23966, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 23967, "node_name": "finisher", "Dec": "a function to be applied after the subscriber has completed"}{"idx": 23968, "node_name": "charset", "Dec": "a charset to decode the bytes"}{"idx": 23969, "node_name": "lineseparator", "Dec": "an optional line separator : can be null , in which case lines will be delimited in the manner of bufferedreader.readline() ."}{"idx": 23971, "node_name": "charset", "Dec": "the character set to convert the string with"}{"idx": 23974, "node_name": "file", "Dec": "the file to store the body in"}{"idx": 23975, "node_name": "openoptions", "Dec": "the list of options to open the file with"}{"idx": 23977, "node_name": "file", "Dec": "the file to store the body in"}{"idx": 23979, "node_name": "consumer", "Dec": "a consumer of byte arrays"}{"idx": 23982, "node_name": "charset", "Dec": "the character set to use when converting bytes to characters"}{"idx": 23985, "node_name": "value", "Dec": "the value to return from httpresponse.body() , may be null"}{"idx": 23988, "node_name": "downstream", "Dec": "the downstream subscriber"}{"idx": 23989, "node_name": "buffersize", "Dec": "the buffer size"}{"idx": 23991, "node_name": "upstream", "Dec": "the body subscriber to be mapped"}{"idx": 23992, "node_name": "mapper", "Dec": "the mapping function"}{"idx": 24004, "node_name": "initiatingrequest", "Dec": "the initiating client-send request"}{"idx": 24005, "node_name": "pushpromiserequest", "Dec": "the synthetic push request"}{"idx": 24006, "node_name": "acceptor", "Dec": "the acceptor function that must be successfully invoked to accept the push promise"}{"idx": 24008, "node_name": "pushpromisehandler", "Dec": "t he body handler to use for push promises"}{"idx": 24009, "node_name": "pushpromisesmap", "Dec": "a map to accumulate push promises into"}{"idx": 24016, "node_name": "message", "Dec": "the detail message ; can be null"}{"idx": 24019, "node_name": "name", "Dec": "the header name"}{"idx": 24020, "node_name": "value", "Dec": "the header value"}{"idx": 24022, "node_name": "timeout", "Dec": "the timeout , non-negative , non-zero"}{"idx": 24024, "node_name": "mostpreferred", "Dec": "the most preferred subprotocol"}{"idx": 24025, "node_name": "lesserpreferred", "Dec": "the lesser preferred subprotocols"}{"idx": 24027, "node_name": "uri", "Dec": "the websocket uri"}{"idx": 24028, "node_name": "listener", "Dec": "the listener"}{"idx": 24032, "node_name": "data", "Dec": "the data"}{"idx": 24033, "node_name": "last", "Dec": "true if this invocation completes the message , false otherwise"}{"idx": 24035, "node_name": "data", "Dec": "the data"}{"idx": 24036, "node_name": "last", "Dec": "true if this invocation completes the message , false otherwise"}{"idx": 24038, "node_name": "message", "Dec": "the message"}{"idx": 24040, "node_name": "message", "Dec": "the message"}{"idx": 24042, "node_name": "statuscode", "Dec": "the status code"}{"idx": 24043, "node_name": "reason", "Dec": "the reason"}{"idx": 24045, "node_name": "n", "Dec": "the number of invocations"}{"idx": 24052, "node_name": "websocket", "Dec": "the websocket that has been connected"}{"idx": 24054, "node_name": "websocket", "Dec": "the websocket on which the data has been received"}{"idx": 24055, "node_name": "data", "Dec": "the data"}{"idx": 24056, "node_name": "last", "Dec": "whether this invocation completes the message"}{"idx": 24058, "node_name": "websocket", "Dec": "the websocket on which the data has been received"}{"idx": 24059, "node_name": "data", "Dec": "the data"}{"idx": 24060, "node_name": "last", "Dec": "whether this invocation completes the message"}{"idx": 24062, "node_name": "websocket", "Dec": "the websocket on which the message has been received"}{"idx": 24063, "node_name": "message", "Dec": "the message"}{"idx": 24065, "node_name": "websocket", "Dec": "the websocket on which the message has been received"}{"idx": 24066, "node_name": "message", "Dec": "the message"}{"idx": 24068, "node_name": "websocket", "Dec": "the websocket on which the message has been received"}{"idx": 24069, "node_name": "statuscode", "Dec": "the status code"}{"idx": 24070, "node_name": "reason", "Dec": "the reason"}{"idx": 24072, "node_name": "websocket", "Dec": "the websocket on which the error has occurred"}{"idx": 24073, "node_name": "error", "Dec": "the error"}{"idx": 24076, "node_name": "response", "Dec": "the httpresponse that resulted in the handshake failure"}{"idx": 24079, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 24082, "node_name": "name", "Dec": "a string specifying the name of the cookie"}{"idx": 24083, "node_name": "value", "Dec": "a string specifying the value of the cookie"}{"idx": 24085, "node_name": "header", "Dec": "a string specifying the set-cookie header . the header should start with \" set-cookie \" , or \" set-cookie2 \" token ; or it should have no leading token at all ."}{"idx": 24088, "node_name": "purpose", "Dec": "a string specifying the comment to display to the user"}{"idx": 24091, "node_name": "purpose", "Dec": "a string specifying the comment url to display to the user"}{"idx": 24094, "node_name": "discard", "Dec": "true indicates to discard cookie unconditionally"}{"idx": 24097, "node_name": "ports", "Dec": "a string specify the port list , which is comma separated series of digits"}{"idx": 24100, "node_name": "pattern", "Dec": "a string containing the domain name within which this cookie is visible ; form is according to rfc 2965"}{"idx": 24103, "node_name": "expiry", "Dec": "an integer specifying the maximum age of the cookie in seconds ; if zero , the cookie should be discarded immediately ; otherwise , the cookie's max age is unspecified ."}{"idx": 24106, "node_name": "uri", "Dec": "a string specifying a path"}{"idx": 24109, "node_name": "flag", "Dec": "if true , the cookie can only be sent over a secure protocol like https . if false , it can be sent over any protocol ."}{"idx": 24113, "node_name": "newvalue", "Dec": "a string specifying the new value"}{"idx": 24117, "node_name": "v", "Dec": "0 if the cookie should comply with the original netscape specification ; 1 if the cookie should comply with rfc 2965 / 2109"}{"idx": 24120, "node_name": "httponly", "Dec": "if true make the cookie http only , i.e. only visible as part of an http request ."}{"idx": 24122, "node_name": "domain", "Dec": "the domain name to check host name with"}{"idx": 24123, "node_name": "host", "Dec": "the host name in question"}{"idx": 24126, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 24131, "node_name": "detail", "Dec": "the detail message ."}{"idx": 24132, "node_name": "code", "Dec": "the http response code from server ."}{"idx": 24134, "node_name": "detail", "Dec": "the detail message ."}{"idx": 24135, "node_name": "code", "Dec": "the http response code from server ."}{"idx": 24136, "node_name": "location", "Dec": "the url to be redirected to"}{"idx": 24184, "node_name": "u", "Dec": "the url"}{"idx": 24186, "node_name": "auth", "Dec": "the authenticator that should be used by this httpurlconnection ."}{"idx": 24188, "node_name": "n", "Dec": "an index , where n > =0 ."}{"idx": 24190, "node_name": "contentlength", "Dec": "the number of bytes which will be written to the outputstream ."}{"idx": 24192, "node_name": "contentlength", "Dec": "the number of bytes which will be written to the outputstream ."}{"idx": 24194, "node_name": "chunklen", "Dec": "the number of bytes to write in each chunk . if chunklen is less than or equal to zero , a default value will be used ."}{"idx": 24196, "node_name": "n", "Dec": "an index , where n > =0 ."}{"idx": 24198, "node_name": "set", "Dec": "a boolean indicating whether or not to follow http redirects ."}{"idx": 24201, "node_name": "followredirects", "Dec": "a boolean indicating whether or not to follow http redirects ."}{"idx": 24204, "node_name": "method", "Dec": "the http method"}{"idx": 24216, "node_name": "input", "Dec": "the string to be processed"}{"idx": 24217, "node_name": "flag", "Dec": "process flag ; can be 0 or any logical or of possible flags"}{"idx": 24219, "node_name": "input", "Dec": "the string to be processed"}{"idx": 24221, "node_name": "input", "Dec": "the string to be processed"}{"idx": 24222, "node_name": "flag", "Dec": "process flag ; can be 0 or any logical or of possible flags"}{"idx": 24224, "node_name": "input", "Dec": "the string to be processed"}{"idx": 24240, "node_name": "obj", "Dec": "the object to compare against ."}{"idx": 24243, "node_name": "host", "Dec": "the specified host"}{"idx": 24244, "node_name": "addr", "Dec": "the raw ip address in network byte order"}{"idx": 24245, "node_name": "nif", "Dec": "an interface this address must be associated with ."}{"idx": 24247, "node_name": "host", "Dec": "the specified host"}{"idx": 24248, "node_name": "addr", "Dec": "the raw ip address in network byte order"}{"idx": 24249, "node_name": "scope_id", "Dec": "the numeric scope_id for the address ."}{"idx": 24266, "node_name": "obj", "Dec": "the object to compare against ."}{"idx": 24280, "node_name": "timeout", "Dec": "the time , in milliseconds , before the call aborts"}{"idx": 24282, "node_name": "netif", "Dec": "the networkinterface through which the test will be done , or null for any interface"}{"idx": 24283, "node_name": "ttl", "Dec": "the maximum numbers of hops to try or 0 for the default"}{"idx": 24284, "node_name": "timeout", "Dec": "the time , in milliseconds , before the call aborts"}{"idx": 24291, "node_name": "obj", "Dec": "the object to compare against ."}{"idx": 24294, "node_name": "host", "Dec": "the specified host"}{"idx": 24295, "node_name": "addr", "Dec": "the raw ip address in network byte order"}{"idx": 24297, "node_name": "host", "Dec": "the specified host , or null ."}{"idx": 24299, "node_name": "host", "Dec": "the name of the host , or null ."}{"idx": 24302, "node_name": "addr", "Dec": "the raw ip address in network byte order"}{"idx": 24306, "node_name": "port", "Dec": "the port number"}{"idx": 24308, "node_name": "addr", "Dec": "the ip address"}{"idx": 24309, "node_name": "port", "Dec": "the port number"}{"idx": 24311, "node_name": "hostname", "Dec": "the host name"}{"idx": 24312, "node_name": "port", "Dec": "the port number"}{"idx": 24314, "node_name": "host", "Dec": "the host name"}{"idx": 24315, "node_name": "port", "Dec": "the port number"}{"idx": 24323, "node_name": "obj", "Dec": "the object to compare against ."}{"idx": 24330, "node_name": "obj", "Dec": "the object to compare against ."}{"idx": 24336, "node_name": "url", "Dec": "the url"}{"idx": 24348, "node_name": "msg", "Dec": "the detail message ."}{"idx": 24352, "node_name": "port", "Dec": "port to use"}{"idx": 24354, "node_name": "bindaddr", "Dec": "socket address to bind to , or null for an unbound socket ."}{"idx": 24356, "node_name": "ttl", "Dec": "the time-to-live"}{"idx": 24359, "node_name": "mcastaddr", "Dec": "is the multicast address to join"}{"idx": 24361, "node_name": "mcastaddr", "Dec": "is the multicast address to leave"}{"idx": 24363, "node_name": "mcastaddr", "Dec": "is the multicast address to join"}{"idx": 24364, "node_name": "netif", "Dec": "specifies the local interface to receive multicast datagram packets , or null to defer to the interface set by setinterface ( inetaddress ) or setnetworkinterface ( networkinterface )"}{"idx": 24366, "node_name": "mcastaddr", "Dec": "is the multicast address to leave"}{"idx": 24367, "node_name": "netif", "Dec": "specifies the local interface or null to defer to the interface set by setinterface ( inetaddress ) or setnetworkinterface ( networkinterface )"}{"idx": 24369, "node_name": "inf", "Dec": "the inetaddress"}{"idx": 24372, "node_name": "netif", "Dec": "the interface"}{"idx": 24375, "node_name": "disable", "Dec": "true to disable the loopbackmode"}{"idx": 24379, "node_name": "name", "Dec": "the name of the netpermission ."}{"idx": 24381, "node_name": "name", "Dec": "the name of the netpermission ."}{"idx": 24382, "node_name": "actions", "Dec": "should be null ."}{"idx": 24394, "node_name": "name", "Dec": "the name of the network interface ."}{"idx": 24396, "node_name": "index", "Dec": "an integer , the index of the interface"}{"idx": 24398, "node_name": "addr", "Dec": "the inetaddress to search with ."}{"idx": 24409, "node_name": "obj", "Dec": "the object to compare against ."}{"idx": 24412, "node_name": "msg", "Dec": "the detail message"}{"idx": 24416, "node_name": "username", "Dec": "the user name"}{"idx": 24417, "node_name": "password", "Dec": "the user's password"}{"idx": 24422, "node_name": "msg", "Dec": "the detail message"}{"idx": 24426, "node_name": "message", "Dec": "the detail message ."}{"idx": 24433, "node_name": "type", "Dec": "the type of the proxy"}{"idx": 24434, "node_name": "sa", "Dec": "the socketaddress for that proxy"}{"idx": 24439, "node_name": "obj", "Dec": "the object to compare against ."}{"idx": 24444, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 24449, "node_name": "ps", "Dec": "the http proxy selector , or null to unset the proxy selector ."}{"idx": 24451, "node_name": "uri", "Dec": "the uri that a connection is required to"}{"idx": 24453, "node_name": "uri", "Dec": "the uri that the proxy at sa failed to serve ."}{"idx": 24454, "node_name": "sa", "Dec": "the socket address of the proxy / socks server"}{"idx": 24455, "node_name": "ioe", "Dec": "the i / o exception thrown when the connect failed ."}{"idx": 24457, "node_name": "proxyaddress", "Dec": "the address of the proxy"}{"idx": 24462, "node_name": "responsecache", "Dec": "the response cache , or null to unset the cache ."}{"idx": 24464, "node_name": "uri", "Dec": "a uri used to reference the requested network resource"}{"idx": 24465, "node_name": "rqstmethod", "Dec": "a string representing the request method"}{"idx": 24466, "node_name": "rqstheaders", "Dec": "- a map from request header field names to lists of field values representing the current request headers"}{"idx": 24468, "node_name": "uri", "Dec": "a uri used to reference the requested network resource"}{"idx": 24469, "node_name": "conn", "Dec": "- a urlconnection instance that is used to fetch the response to be cached"}{"idx": 24480, "node_name": "impl", "Dec": "an instance of a socketimpl to use on the serversocket ."}{"idx": 24483, "node_name": "port", "Dec": "the port number , or 0 to use a port number that is automatically allocated ."}{"idx": 24485, "node_name": "port", "Dec": "the port number , or 0 to use a port number that is automatically allocated ."}{"idx": 24486, "node_name": "backlog", "Dec": "requested maximum length of the queue of incoming connections ."}{"idx": 24488, "node_name": "port", "Dec": "the port number , or 0 to use a port number that is automatically allocated ."}{"idx": 24489, "node_name": "backlog", "Dec": "requested maximum length of the queue of incoming connections ."}{"idx": 24490, "node_name": "bindaddr", "Dec": "the local inetaddress the server will bind to"}{"idx": 24492, "node_name": "endpoint", "Dec": "the ip address and port number to bind to ."}{"idx": 24494, "node_name": "endpoint", "Dec": "the ip address and port number to bind to ."}{"idx": 24495, "node_name": "backlog", "Dec": "requested maximum length of the queue of incoming connections ."}{"idx": 24501, "node_name": "s", "Dec": "the socket"}{"idx": 24507, "node_name": "timeout", "Dec": "the specified timeout , in milliseconds"}{"idx": 24510, "node_name": "on", "Dec": "whether to enable or disable the socket option"}{"idx": 24514, "node_name": "fac", "Dec": "the desired factory ."}{"idx": 24516, "node_name": "size", "Dec": "the size to which to set the receive buffer size . this value must be greater than 0 ."}{"idx": 24519, "node_name": "connectiontime", "Dec": "an int expressing the relative importance of a short connection time"}{"idx": 24520, "node_name": "latency", "Dec": "an int expressing the relative importance of low latency"}{"idx": 24521, "node_name": "bandwidth", "Dec": "an int expressing the relative importance of high bandwidth"}{"idx": 24523, "node_name": "name", "Dec": "the socket option"}{"idx": 24524, "node_name": "value", "Dec": "the value of the socket option . a value of null may be valid for some options ."}{"idx": 24526, "node_name": "name", "Dec": "the socket option"}{"idx": 24531, "node_name": "proxy", "Dec": "a proxy object specifying what kind of proxying should be used ."}{"idx": 24533, "node_name": "impl", "Dec": "an instance of a socketimpl the subclass wishes to use on the socket ."}{"idx": 24535, "node_name": "host", "Dec": "the host name , or null for the loopback address ."}{"idx": 24536, "node_name": "port", "Dec": "the port number ."}{"idx": 24538, "node_name": "address", "Dec": "the ip address ."}{"idx": 24539, "node_name": "port", "Dec": "the port number ."}{"idx": 24541, "node_name": "host", "Dec": "the name of the remote host , or null for the loopback address ."}{"idx": 24542, "node_name": "port", "Dec": "the remote port"}{"idx": 24543, "node_name": "localaddr", "Dec": "the local address the socket is bound to , or null for the anylocal address ."}{"idx": 24544, "node_name": "localport", "Dec": "the local port the socket is bound to , or zero for a system selected free port ."}{"idx": 24546, "node_name": "address", "Dec": "the remote address"}{"idx": 24547, "node_name": "port", "Dec": "the remote port"}{"idx": 24548, "node_name": "localaddr", "Dec": "the local address the socket is bound to , or null for the anylocal address ."}{"idx": 24549, "node_name": "localport", "Dec": "the local port the socket is bound to or zero for a system selected free port ."}{"idx": 24551, "node_name": "endpoint", "Dec": "the socketaddress"}{"idx": 24553, "node_name": "endpoint", "Dec": "the socketaddress"}{"idx": 24554, "node_name": "timeout", "Dec": "the timeout value to be used in milliseconds ."}{"idx": 24556, "node_name": "bindpoint", "Dec": "the socketaddress to bind to"}{"idx": 24567, "node_name": "on", "Dec": "true to enable tcp_nodelay , false to disable ."}{"idx": 24570, "node_name": "on", "Dec": "whether or not to linger on ."}{"idx": 24571, "node_name": "linger", "Dec": "how long to linger for , if on is true ."}{"idx": 24574, "node_name": "data", "Dec": "the byte of data to send"}{"idx": 24576, "node_name": "on", "Dec": "true to enable so_oobinline , false to disable ."}{"idx": 24579, "node_name": "timeout", "Dec": "the specified timeout , in milliseconds ."}{"idx": 24582, "node_name": "size", "Dec": "the size to which to set the send buffer size . this value must be greater than 0 ."}{"idx": 24585, "node_name": "size", "Dec": "the size to which to set the receive buffer size . this value must be greater than 0 ."}{"idx": 24588, "node_name": "on", "Dec": "whether or not to have socket keep alive turned on ."}{"idx": 24591, "node_name": "tc", "Dec": "an int value for the bitset ."}{"idx": 24594, "node_name": "on", "Dec": "whether to enable or disable the socket option"}{"idx": 24606, "node_name": "fac", "Dec": "the desired factory ."}{"idx": 24608, "node_name": "connectiontime", "Dec": "an int expressing the relative importance of a short connection time"}{"idx": 24609, "node_name": "latency", "Dec": "an int expressing the relative importance of low latency"}{"idx": 24610, "node_name": "bandwidth", "Dec": "an int expressing the relative importance of high bandwidth"}{"idx": 24612, "node_name": "name", "Dec": "the socket option"}{"idx": 24613, "node_name": "value", "Dec": "the value of the socket option . a value of null may be valid for some options ."}{"idx": 24615, "node_name": "name", "Dec": "the socket option"}{"idx": 24621, "node_name": "msg", "Dec": "the detail message ."}{"idx": 24630, "node_name": "stream", "Dec": "if true , create a stream socket ; otherwise , create a datagram socket ."}{"idx": 24632, "node_name": "host", "Dec": "the name of the remote host ."}{"idx": 24633, "node_name": "port", "Dec": "the port number ."}{"idx": 24635, "node_name": "address", "Dec": "the ip address of the remote host ."}{"idx": 24636, "node_name": "port", "Dec": "the port number ."}{"idx": 24638, "node_name": "address", "Dec": "the socket address of the remote host ."}{"idx": 24639, "node_name": "timeout", "Dec": "the timeout value , in milliseconds , or zero for no timeout ."}{"idx": 24641, "node_name": "host", "Dec": "an ip address that belongs to a local interface ."}{"idx": 24642, "node_name": "port", "Dec": "the port number ."}{"idx": 24644, "node_name": "backlog", "Dec": "the maximum length of the queue ."}{"idx": 24646, "node_name": "s", "Dec": "the accepted connection ."}{"idx": 24658, "node_name": "data", "Dec": "the byte of data to send"}{"idx": 24662, "node_name": "connectiontime", "Dec": "an int expressing the relative importance of a short connection time"}{"idx": 24663, "node_name": "latency", "Dec": "an int expressing the relative importance of low latency"}{"idx": 24664, "node_name": "bandwidth", "Dec": "an int expressing the relative importance of high bandwidth"}{"idx": 24666, "node_name": "name", "Dec": "the socket option"}{"idx": 24667, "node_name": "value", "Dec": "the value of the socket option . a value of null may be valid for some options ."}{"idx": 24669, "node_name": "name", "Dec": "the socket option"}{"idx": 24693, "node_name": "optid", "Dec": "identifies the option"}{"idx": 24694, "node_name": "value", "Dec": "the parameter of the socket option"}{"idx": 24696, "node_name": "optid", "Dec": "an int identifying the option to fetch"}{"idx": 24699, "node_name": "host", "Dec": "the hostname or ip address of the computer , optionally including a colon followed by a port or port range ."}{"idx": 24700, "node_name": "action", "Dec": "the action string ."}{"idx": 24702, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 24704, "node_name": "obj", "Dec": "the object to test for equality with this object ."}{"idx": 24710, "node_name": "msg", "Dec": "the detail message"}{"idx": 24717, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 24733, "node_name": "message", "Dec": "the detail message ."}{"idx": 24738, "node_name": "msg", "Dec": "the detail message ."}{"idx": 24741, "node_name": "str", "Dec": "the string to be parsed into a uri"}{"idx": 24743, "node_name": "scheme", "Dec": "scheme name"}{"idx": 24744, "node_name": "userinfo", "Dec": "user name and authorization information"}{"idx": 24745, "node_name": "host", "Dec": "host name"}{"idx": 24746, "node_name": "port", "Dec": "port number"}{"idx": 24747, "node_name": "path", "Dec": "path"}{"idx": 24748, "node_name": "query", "Dec": "query"}{"idx": 24749, "node_name": "fragment", "Dec": "fragment"}{"idx": 24751, "node_name": "scheme", "Dec": "scheme name"}{"idx": 24752, "node_name": "authority", "Dec": "authority"}{"idx": 24753, "node_name": "path", "Dec": "path"}{"idx": 24754, "node_name": "query", "Dec": "query"}{"idx": 24755, "node_name": "fragment", "Dec": "fragment"}{"idx": 24757, "node_name": "scheme", "Dec": "scheme name"}{"idx": 24758, "node_name": "host", "Dec": "host name"}{"idx": 24759, "node_name": "path", "Dec": "path"}{"idx": 24760, "node_name": "fragment", "Dec": "fragment"}{"idx": 24762, "node_name": "scheme", "Dec": "scheme name"}{"idx": 24763, "node_name": "ssp", "Dec": "scheme-specific part"}{"idx": 24764, "node_name": "fragment", "Dec": "fragment"}{"idx": 24766, "node_name": "str", "Dec": "the string to be parsed into a uri"}{"idx": 24770, "node_name": "uri", "Dec": "the uri to be resolved against this uri"}{"idx": 24772, "node_name": "str", "Dec": "the string to be parsed into a uri"}{"idx": 24774, "node_name": "uri", "Dec": "the uri to be relativized against this uri"}{"idx": 24794, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 24797, "node_name": "that", "Dec": "the object to which this uri is to be compared"}{"idx": 24802, "node_name": "input", "Dec": "the input string"}{"idx": 24803, "node_name": "reason", "Dec": "a string explaining why the input could not be parsed"}{"idx": 24804, "node_name": "index", "Dec": "the index at which the parse error occurred , or -1 if the index is not known"}{"idx": 24806, "node_name": "input", "Dec": "the input string"}{"idx": 24807, "node_name": "reason", "Dec": "a string explaining why the input could not be parsed"}{"idx": 24814, "node_name": "protocol", "Dec": "the name of the protocol to use ."}{"idx": 24815, "node_name": "host", "Dec": "the name of the host ."}{"idx": 24816, "node_name": "port", "Dec": "the port number on the host ."}{"idx": 24817, "node_name": "file", "Dec": "the file on the host"}{"idx": 24819, "node_name": "protocol", "Dec": "the name of the protocol to use ."}{"idx": 24820, "node_name": "host", "Dec": "the name of the host ."}{"idx": 24821, "node_name": "file", "Dec": "the file on the host ."}{"idx": 24823, "node_name": "protocol", "Dec": "the name of the protocol to use ."}{"idx": 24824, "node_name": "host", "Dec": "the name of the host ."}{"idx": 24825, "node_name": "port", "Dec": "the port number on the host ."}{"idx": 24826, "node_name": "file", "Dec": "the file on the host"}{"idx": 24827, "node_name": "handler", "Dec": "the stream handler for the url ."}{"idx": 24829, "node_name": "spec", "Dec": "the string to parse as a url ."}{"idx": 24831, "node_name": "context", "Dec": "the context in which to parse the specification ."}{"idx": 24832, "node_name": "spec", "Dec": "the string to parse as a url ."}{"idx": 24834, "node_name": "context", "Dec": "the context in which to parse the specification ."}{"idx": 24835, "node_name": "spec", "Dec": "the string to parse as a url ."}{"idx": 24836, "node_name": "handler", "Dec": "the stream handler for the url ."}{"idx": 24848, "node_name": "obj", "Dec": "the url to compare against ."}{"idx": 24851, "node_name": "other", "Dec": "the url to compare against ."}{"idx": 24857, "node_name": "proxy", "Dec": "the proxy through which this connection will be made . if direct connection is desired , proxy.no_proxy should be specified ."}{"idx": 24861, "node_name": "classes", "Dec": "an array of java types"}{"idx": 24863, "node_name": "fac", "Dec": "the desired factory ."}{"idx": 24866, "node_name": "urls", "Dec": "the urls from which to load classes and resources"}{"idx": 24867, "node_name": "parent", "Dec": "the parent class loader for delegation"}{"idx": 24869, "node_name": "urls", "Dec": "the urls from which to load classes and resources"}{"idx": 24871, "node_name": "urls", "Dec": "the urls from which to load classes and resources"}{"idx": 24872, "node_name": "parent", "Dec": "the parent class loader for delegation"}{"idx": 24873, "node_name": "factory", "Dec": "the urlstreamhandlerfactory to use when creating urls"}{"idx": 24875, "node_name": "name", "Dec": "class loader name ; or null if not named"}{"idx": 24876, "node_name": "urls", "Dec": "the urls from which to load classes and resources"}{"idx": 24877, "node_name": "parent", "Dec": "the parent class loader for delegation"}{"idx": 24879, "node_name": "name", "Dec": "class loader name ; or null if not named"}{"idx": 24880, "node_name": "urls", "Dec": "the urls from which to load classes and resources"}{"idx": 24881, "node_name": "parent", "Dec": "the parent class loader for delegation"}{"idx": 24882, "node_name": "factory", "Dec": "the urlstreamhandlerfactory to use when creating urls"}{"idx": 24884, "node_name": "name", "Dec": "the resource name"}{"idx": 24887, "node_name": "url", "Dec": "the url to be added to the search path of urls"}{"idx": 24890, "node_name": "name", "Dec": "the name of the class"}{"idx": 24892, "node_name": "name", "Dec": "the package name"}{"idx": 24893, "node_name": "man", "Dec": "the manifest containing package version and sealing information"}{"idx": 24894, "node_name": "url", "Dec": "the code source url for the package , or null if none"}{"idx": 24896, "node_name": "name", "Dec": "the name of the resource"}{"idx": 24898, "node_name": "name", "Dec": "the resource name"}{"idx": 24900, "node_name": "codesource", "Dec": "the codesource"}{"idx": 24902, "node_name": "urls", "Dec": "the urls to search for classes and resources"}{"idx": 24903, "node_name": "parent", "Dec": "the parent class loader for delegation"}{"idx": 24905, "node_name": "urls", "Dec": "the urls to search for classes and resources"}{"idx": 24915, "node_name": "url", "Dec": "the specified url ."}{"idx": 24918, "node_name": "map", "Dec": "the filenamemap to be set"}{"idx": 24921, "node_name": "timeout", "Dec": "an int that specifies the connect timeout value in milliseconds"}{"idx": 24924, "node_name": "timeout", "Dec": "an int that specifies the timeout value to be used in milliseconds"}{"idx": 24935, "node_name": "name", "Dec": "the name of a header field ."}{"idx": 24938, "node_name": "name", "Dec": "the name of the header field ."}{"idx": 24939, "node_name": "default", "Dec": "the default value ."}{"idx": 24941, "node_name": "name", "Dec": "the name of the header field ."}{"idx": 24942, "node_name": "default", "Dec": "the default value ."}{"idx": 24944, "node_name": "name", "Dec": "the name of the header field ."}{"idx": 24945, "node_name": "default", "Dec": "a default value ."}{"idx": 24947, "node_name": "n", "Dec": "an index , where n > =0"}{"idx": 24949, "node_name": "n", "Dec": "an index , where n > =0"}{"idx": 24952, "node_name": "classes", "Dec": "the class array indicating the requested types"}{"idx": 24958, "node_name": "doinput", "Dec": "the new value ."}{"idx": 24961, "node_name": "dooutput", "Dec": "the new value ."}{"idx": 24964, "node_name": "allowuserinteraction", "Dec": "the new value ."}{"idx": 24967, "node_name": "defaultallowuserinteraction", "Dec": "the new value ."}{"idx": 24970, "node_name": "usecaches", "Dec": "a boolean indicating whether or not to allow caching"}{"idx": 24973, "node_name": "ifmodifiedsince", "Dec": "the new value ."}{"idx": 24977, "node_name": "defaultusecaches", "Dec": "the new value ."}{"idx": 24979, "node_name": "protocol", "Dec": "the protocol to set the default for"}{"idx": 24980, "node_name": "defaultval", "Dec": "whether caching is enabled by default for the given protocol"}{"idx": 24982, "node_name": "protocol", "Dec": "the protocol whose defaultusecaches setting is required"}{"idx": 24984, "node_name": "key", "Dec": "the keyword by which the request is known ( e.g. , \" accept \") ."}{"idx": 24985, "node_name": "value", "Dec": "the value associated with it ."}{"idx": 24987, "node_name": "key", "Dec": "the keyword by which the request is known ( e.g. , \" accept \") ."}{"idx": 24988, "node_name": "value", "Dec": "the value associated with it ."}{"idx": 24990, "node_name": "key", "Dec": "the keyword by which the request is known ( e.g. , \" accept \") ."}{"idx": 24993, "node_name": "fac", "Dec": "the desired factory ."}{"idx": 24995, "node_name": "fname", "Dec": "a filename ."}{"idx": 24997, "node_name": "is", "Dec": "an input stream that supports marks ."}{"idx": 25001, "node_name": "s", "Dec": "the string to decode"}{"idx": 25002, "node_name": "enc", "Dec": "the name of a supported character encoding ."}{"idx": 25004, "node_name": "s", "Dec": "the string to decode"}{"idx": 25005, "node_name": "charset", "Dec": "the given charset"}{"idx": 25008, "node_name": "s", "Dec": "string to be translated ."}{"idx": 25009, "node_name": "enc", "Dec": "the name of a supported character encoding ."}{"idx": 25011, "node_name": "s", "Dec": "string to be translated ."}{"idx": 25012, "node_name": "charset", "Dec": "the given charset"}{"idx": 25015, "node_name": "url", "Dec": "the url string"}{"idx": 25016, "node_name": "actions", "Dec": "the actions string"}{"idx": 25018, "node_name": "url", "Dec": "the url string"}{"idx": 25021, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 25023, "node_name": "p", "Dec": "the object we are testing for equality with this object ."}{"idx": 25028, "node_name": "u", "Dec": "the url that this connects to ."}{"idx": 25030, "node_name": "u", "Dec": "the url that this connects to ."}{"idx": 25031, "node_name": "p", "Dec": "the proxy through which the connection will be made . if direct connection is desired , proxy.no_proxy should be specified ."}{"idx": 25033, "node_name": "u", "Dec": "the url to receive the result of parsing the spec ."}{"idx": 25034, "node_name": "spec", "Dec": "the string representing the url that must be parsed ."}{"idx": 25035, "node_name": "start", "Dec": "the character index at which to begin parsing . this is just past the ' : ' ( if there is one ) that specifies the determination of the protocol name ."}{"idx": 25036, "node_name": "limit", "Dec": "the character position to stop parsing at . this is the end of the string or the position of the \" # \" character , if present . all information after the sharp sign indicates an anchor ."}{"idx": 25039, "node_name": "u1", "Dec": "a url object"}{"idx": 25040, "node_name": "u2", "Dec": "a url object"}{"idx": 25042, "node_name": "u", "Dec": "a url object"}{"idx": 25044, "node_name": "u1", "Dec": "a url object"}{"idx": 25045, "node_name": "u2", "Dec": "a url object"}{"idx": 25047, "node_name": "u", "Dec": "a url object"}{"idx": 25049, "node_name": "u1", "Dec": "the url of the first host to compare"}{"idx": 25050, "node_name": "u2", "Dec": "the url of the second host to compare"}{"idx": 25052, "node_name": "u", "Dec": "the url ."}{"idx": 25054, "node_name": "u", "Dec": "the url to modify ."}{"idx": 25055, "node_name": "protocol", "Dec": "the protocol name ."}{"idx": 25056, "node_name": "host", "Dec": "the remote host value for the url ."}{"idx": 25057, "node_name": "port", "Dec": "the port on the remote machine ."}{"idx": 25058, "node_name": "authority", "Dec": "the authority part for the url ."}{"idx": 25059, "node_name": "userinfo", "Dec": "the userinfo part of the url ."}{"idx": 25060, "node_name": "path", "Dec": "the path component of the url ."}{"idx": 25061, "node_name": "query", "Dec": "the query part for the url ."}{"idx": 25062, "node_name": "ref", "Dec": "the reference ."}{"idx": 25065, "node_name": "protocol", "Dec": "the protocol ( \" ftp \" , \" http \" , \" nntp \" , etc . ) ."}{"idx": 25070, "node_name": "newposition", "Dec": "the new position value ; must be non-negative and no larger than the current limit"}{"idx": 25073, "node_name": "newlimit", "Dec": "the new limit value ; must be non-negative and no larger than this buffer's capacity"}{"idx": 25088, "node_name": "index", "Dec": "the position in this buffer at which the content of the new buffer will start ; must be non-negative and no larger than limit()"}{"idx": 25089, "node_name": "length", "Dec": "the number of elements the new buffer will contain ; must be non-negative and no larger than limit()"}{"idx": 25097, "node_name": "capacity", "Dec": "the new buffer's capacity , in bytes"}{"idx": 25099, "node_name": "capacity", "Dec": "the new buffer's capacity , in bytes"}{"idx": 25101, "node_name": "array", "Dec": "the array that will back the new buffer"}{"idx": 25102, "node_name": "offset", "Dec": "the offset of the subarray to be used ; must be non-negative and no larger than array.length . the new buffer's position will be set to this value ."}{"idx": 25103, "node_name": "length", "Dec": "the length of the subarray to be used ; must be non-negative and no larger than array.length"}{"idx": 25105, "node_name": "array", "Dec": "the array that will back this buffer"}{"idx": 25108, "node_name": "index", "Dec": "the position in this buffer at which the content of the new buffer will start ; must be non-negative and no larger than limit()"}{"idx": 25109, "node_name": "length", "Dec": "the number of elements the new buffer will contain ; must be non-negative and no larger than limit()"}{"idx": 25114, "node_name": "b", "Dec": "the byte to be written"}{"idx": 25116, "node_name": "index", "Dec": "the index from which the byte will be read"}{"idx": 25118, "node_name": "index", "Dec": "the index at which the byte will be written"}{"idx": 25119, "node_name": "b", "Dec": "the byte value to be written"}{"idx": 25121, "node_name": "dst", "Dec": "the array into which bytes are to be written"}{"idx": 25122, "node_name": "offset", "Dec": "the offset within the array of the first byte to be written ; must be non-negative and no larger than dst.length"}{"idx": 25123, "node_name": "length", "Dec": "the maximum number of bytes to be written to the given array ; must be non-negative and no larger than dst.length"}{"idx": 25125, "node_name": "dst", "Dec": "the destination array"}{"idx": 25127, "node_name": "index", "Dec": "the index in this buffer from which the first byte will be read ; must be non-negative and less than limit()"}{"idx": 25128, "node_name": "dst", "Dec": "the destination array"}{"idx": 25129, "node_name": "offset", "Dec": "the offset within the array of the first byte to be written ; must be non-negative and less than dst.length"}{"idx": 25130, "node_name": "length", "Dec": "the number of bytes to be written to the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 25132, "node_name": "index", "Dec": "the index in this buffer from which the first byte will be read ; must be non-negative and less than limit()"}{"idx": 25133, "node_name": "dst", "Dec": "the destination array"}{"idx": 25135, "node_name": "src", "Dec": "the source buffer from which bytes are to be read ; must not be this buffer"}{"idx": 25137, "node_name": "src", "Dec": "the array from which bytes are to be read"}{"idx": 25138, "node_name": "offset", "Dec": "the offset within the array of the first byte to be read ; must be non-negative and no larger than src.length"}{"idx": 25139, "node_name": "length", "Dec": "the number of bytes to be read from the given array ; must be non-negative and no larger than src.length"}{"idx": 25141, "node_name": "src", "Dec": "the source array"}{"idx": 25143, "node_name": "index", "Dec": "the index in this buffer at which the first byte will be written ; must be non-negative and less than limit()"}{"idx": 25144, "node_name": "src", "Dec": "the array from which bytes are to be read"}{"idx": 25145, "node_name": "offset", "Dec": "the offset within the array of the first byte to be read ; must be non-negative and less than src.length"}{"idx": 25146, "node_name": "length", "Dec": "the number of bytes to be read from the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 25148, "node_name": "index", "Dec": "the index in this buffer at which the first byte will be written ; must be non-negative and less than limit()"}{"idx": 25149, "node_name": "src", "Dec": "the array from which bytes are to be read"}{"idx": 25154, "node_name": "newposition", "Dec": "the new position value ; must be non-negative and no larger than the current limit"}{"idx": 25156, "node_name": "newlimit", "Dec": "the new limit value ; must be non-negative and no larger than this buffer's capacity"}{"idx": 25167, "node_name": "ob", "Dec": "the object to which this buffer is to be compared"}{"idx": 25169, "node_name": "that", "Dec": "the object to be compared ."}{"idx": 25171, "node_name": "that", "Dec": "the byte buffer to be tested for a mismatch with this buffer"}{"idx": 25174, "node_name": "bo", "Dec": "the new byte order , either big_endian or little_endian"}{"idx": 25176, "node_name": "index", "Dec": "the index to query for alignment offset , must be non-negative , no upper bounds check is performed"}{"idx": 25177, "node_name": "unitsize", "Dec": "the unit size in bytes , must be a power of 2"}{"idx": 25179, "node_name": "unitsize", "Dec": "the unit size in bytes , must be a power of 2"}{"idx": 25182, "node_name": "value", "Dec": "the char value to be written"}{"idx": 25184, "node_name": "index", "Dec": "the index from which the bytes will be read"}{"idx": 25186, "node_name": "index", "Dec": "the index at which the bytes will be written"}{"idx": 25187, "node_name": "value", "Dec": "the char value to be written"}{"idx": 25191, "node_name": "value", "Dec": "the short value to be written"}{"idx": 25193, "node_name": "index", "Dec": "the index from which the bytes will be read"}{"idx": 25195, "node_name": "index", "Dec": "the index at which the bytes will be written"}{"idx": 25196, "node_name": "value", "Dec": "the short value to be written"}{"idx": 25200, "node_name": "value", "Dec": "the int value to be written"}{"idx": 25202, "node_name": "index", "Dec": "the index from which the bytes will be read"}{"idx": 25204, "node_name": "index", "Dec": "the index at which the bytes will be written"}{"idx": 25205, "node_name": "value", "Dec": "the int value to be written"}{"idx": 25209, "node_name": "value", "Dec": "the long value to be written"}{"idx": 25211, "node_name": "index", "Dec": "the index from which the bytes will be read"}{"idx": 25213, "node_name": "index", "Dec": "the index at which the bytes will be written"}{"idx": 25214, "node_name": "value", "Dec": "the long value to be written"}{"idx": 25218, "node_name": "value", "Dec": "the float value to be written"}{"idx": 25220, "node_name": "index", "Dec": "the index from which the bytes will be read"}{"idx": 25222, "node_name": "index", "Dec": "the index at which the bytes will be written"}{"idx": 25223, "node_name": "value", "Dec": "the float value to be written"}{"idx": 25227, "node_name": "value", "Dec": "the double value to be written"}{"idx": 25229, "node_name": "index", "Dec": "the index from which the bytes will be read"}{"idx": 25231, "node_name": "index", "Dec": "the index at which the bytes will be written"}{"idx": 25232, "node_name": "value", "Dec": "the double value to be written"}{"idx": 25247, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25248, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25249, "node_name": "handler", "Dec": "the completion handler"}{"idx": 25251, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25253, "node_name": "src", "Dec": "the buffer from which bytes are to be retrieved"}{"idx": 25254, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25255, "node_name": "handler", "Dec": "the completion handler object"}{"idx": 25257, "node_name": "src", "Dec": "the buffer from which bytes are to be retrieved"}{"idx": 25262, "node_name": "provider", "Dec": "the asynchronous channel provider for this group"}{"idx": 25265, "node_name": "nthreads", "Dec": "the number of threads in the pool"}{"idx": 25266, "node_name": "threadfactory", "Dec": "the factory to use when creating new threads"}{"idx": 25268, "node_name": "executor", "Dec": "the thread pool for the resulting group"}{"idx": 25269, "node_name": "initialsize", "Dec": "a value > =0 or a negative value for implementation specific default"}{"idx": 25271, "node_name": "executor", "Dec": "the thread pool for the resulting group"}{"idx": 25277, "node_name": "timeout", "Dec": "the maximum time to wait , or zero or less to not wait"}{"idx": 25278, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 25284, "node_name": "file", "Dec": "the path of the file to open or create"}{"idx": 25285, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 25286, "node_name": "executor", "Dec": "the thread pool or null to associate the channel with the default thread pool"}{"idx": 25287, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the file"}{"idx": 25289, "node_name": "file", "Dec": "the path of the file to open or create"}{"idx": 25290, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 25293, "node_name": "size", "Dec": "the new size , a non-negative byte count"}{"idx": 25295, "node_name": "metadata", "Dec": "if true then force(boolean) is required to force changes to both the file's content and metadata to be written to storage ; otherwise , it need only force content changes to be written"}{"idx": 25297, "node_name": "position", "Dec": "the position at which the locked region is to start ; must be non-negative"}{"idx": 25298, "node_name": "size", "Dec": "the size of the locked region ; must be non-negative , and the sum position + size must be non-negative"}{"idx": 25299, "node_name": "shared", "Dec": "true to request a shared lock , in which case this channel must be open for reading ( and possibly writing ); false to request an exclusive lock , in which case this channel must be open for writing ( and possibly reading )"}{"idx": 25300, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25301, "node_name": "handler", "Dec": "the handler for consuming the result"}{"idx": 25303, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25304, "node_name": "handler", "Dec": "the handler for consuming the result"}{"idx": 25306, "node_name": "position", "Dec": "the position at which the locked region is to start ; must be non-negative"}{"idx": 25307, "node_name": "size", "Dec": "the size of the locked region ; must be non-negative , and the sum position + size must be non-negative"}{"idx": 25308, "node_name": "shared", "Dec": "true to request a shared lock , in which case this channel must be open for reading ( and possibly writing ); false to request an exclusive lock , in which case this channel must be open for writing ( and possibly reading )"}{"idx": 25311, "node_name": "position", "Dec": "the position at which the locked region is to start ; must be non-negative"}{"idx": 25312, "node_name": "size", "Dec": "the size of the locked region ; must be non-negative , and the sum position + size must be non-negative"}{"idx": 25313, "node_name": "shared", "Dec": "true to request a shared lock , false to request an exclusive lock"}{"idx": 25316, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25317, "node_name": "position", "Dec": "the file position at which the transfer is to begin ; must be non-negative"}{"idx": 25318, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25319, "node_name": "handler", "Dec": "the handler for consuming the result"}{"idx": 25321, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25322, "node_name": "position", "Dec": "the file position at which the transfer is to begin ; must be non-negative"}{"idx": 25324, "node_name": "src", "Dec": "the buffer from which bytes are to be transferred"}{"idx": 25325, "node_name": "position", "Dec": "the file position at which the transfer is to begin ; must be non-negative"}{"idx": 25326, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25327, "node_name": "handler", "Dec": "the handler for consuming the result"}{"idx": 25329, "node_name": "src", "Dec": "the buffer from which bytes are to be transferred"}{"idx": 25330, "node_name": "position", "Dec": "the file position at which the transfer is to begin ; must be non-negative"}{"idx": 25333, "node_name": "provider", "Dec": "the provider that created this channel"}{"idx": 25336, "node_name": "group", "Dec": "the group to which the newly constructed channel should be bound , or null for the default group"}{"idx": 25339, "node_name": "local", "Dec": "the local address to bind the socket , or null to bind to an automatically assigned socket address"}{"idx": 25341, "node_name": "local", "Dec": "the local address to bind the socket , or null to bind to an automatically assigned socket address"}{"idx": 25342, "node_name": "backlog", "Dec": "the maximum number of pending connections"}{"idx": 25344, "node_name": "name", "Dec": "the socket option"}{"idx": 25345, "node_name": "value", "Dec": "the value of the socket option . a value of null may be a valid value for some socket options ."}{"idx": 25347, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25348, "node_name": "handler", "Dec": "the handler for consuming the result"}{"idx": 25353, "node_name": "provider", "Dec": "the provider that created this channel"}{"idx": 25356, "node_name": "group", "Dec": "the group to which the newly constructed channel should be bound , or null for the default group"}{"idx": 25359, "node_name": "local", "Dec": "the address to bind the socket , or null to bind the socket to an automatically assigned socket address"}{"idx": 25361, "node_name": "name", "Dec": "the socket option"}{"idx": 25362, "node_name": "value", "Dec": "the value of the socket option . a value of null may be a valid value for some socket options ."}{"idx": 25367, "node_name": "remote", "Dec": "the remote address to which this channel is to be connected"}{"idx": 25368, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25369, "node_name": "handler", "Dec": "the handler for consuming the result"}{"idx": 25371, "node_name": "remote", "Dec": "the remote address to which this channel is to be connected"}{"idx": 25373, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25374, "node_name": "timeout", "Dec": "the maximum time for the i / o operation to complete"}{"idx": 25375, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 25376, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25377, "node_name": "handler", "Dec": "the handler for consuming the result"}{"idx": 25379, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25380, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25381, "node_name": "handler", "Dec": "the completion handler"}{"idx": 25383, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25385, "node_name": "dsts", "Dec": "the buffers into which bytes are to be transferred"}{"idx": 25386, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer into which bytes are to be transferred ; must be non-negative and no larger than dsts.length"}{"idx": 25387, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; must be non-negative and no larger than dsts.length"}{"idx": 25388, "node_name": "timeout", "Dec": "the maximum time for the i / o operation to complete"}{"idx": 25389, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 25390, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25391, "node_name": "handler", "Dec": "the handler for consuming the result"}{"idx": 25393, "node_name": "src", "Dec": "the buffer from which bytes are to be retrieved"}{"idx": 25394, "node_name": "timeout", "Dec": "the maximum time for the i / o operation to complete"}{"idx": 25395, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 25396, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25397, "node_name": "handler", "Dec": "the handler for consuming the result"}{"idx": 25399, "node_name": "src", "Dec": "the buffer from which bytes are to be retrieved"}{"idx": 25400, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25401, "node_name": "handler", "Dec": "the completion handler object"}{"idx": 25403, "node_name": "src", "Dec": "the buffer from which bytes are to be retrieved"}{"idx": 25405, "node_name": "srcs", "Dec": "the buffers from which bytes are to be retrieved"}{"idx": 25406, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer from which bytes are to be retrieved ; must be non-negative and no larger than srcs.length"}{"idx": 25407, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; must be non-negative and no larger than srcs.length"}{"idx": 25408, "node_name": "timeout", "Dec": "the maximum time for the i / o operation to complete"}{"idx": 25409, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 25410, "node_name": "attachment", "Dec": "the object to attach to the i / o operation ; can be null"}{"idx": 25411, "node_name": "handler", "Dec": "the handler for consuming the result"}{"idx": 25421, "node_name": "ch", "Dec": "the channel from which bytes will be read"}{"idx": 25423, "node_name": "ch", "Dec": "the channel to which bytes will be written"}{"idx": 25425, "node_name": "ch", "Dec": "the channel from which bytes will be read"}{"idx": 25427, "node_name": "ch", "Dec": "the channel to which bytes will be written"}{"idx": 25429, "node_name": "in", "Dec": "the stream from which bytes are to be read"}{"idx": 25431, "node_name": "out", "Dec": "the stream to which bytes are to be written"}{"idx": 25433, "node_name": "ch", "Dec": "the channel from which bytes will be read"}{"idx": 25434, "node_name": "dec", "Dec": "the charset decoder to be used"}{"idx": 25435, "node_name": "minbuffercap", "Dec": "the minimum capacity of the internal byte buffer , or -1 if an implementation-dependent default capacity is to be used"}{"idx": 25437, "node_name": "ch", "Dec": "the channel from which bytes will be read"}{"idx": 25438, "node_name": "csname", "Dec": "the name of the charset to be used"}{"idx": 25440, "node_name": "ch", "Dec": "the channel from which bytes will be read"}{"idx": 25441, "node_name": "charset", "Dec": "the charset to be used"}{"idx": 25443, "node_name": "ch", "Dec": "the channel to which bytes will be written"}{"idx": 25444, "node_name": "enc", "Dec": "the charset encoder to be used"}{"idx": 25445, "node_name": "minbuffercap", "Dec": "the minimum capacity of the internal byte buffer , or -1 if an implementation-dependent default capacity is to be used"}{"idx": 25447, "node_name": "ch", "Dec": "the channel to which bytes will be written"}{"idx": 25448, "node_name": "csname", "Dec": "the name of the charset to be used"}{"idx": 25450, "node_name": "ch", "Dec": "the channel to which bytes will be written"}{"idx": 25451, "node_name": "charset", "Dec": "the charset to be used"}{"idx": 25460, "node_name": "result", "Dec": "the result of the i / o operation ."}{"idx": 25461, "node_name": "attachment", "Dec": "the object attached to the i / o operation when it was initiated ."}{"idx": 25463, "node_name": "exc", "Dec": "the exception to indicate why the i / o operation failed"}{"idx": 25464, "node_name": "attachment", "Dec": "the object attached to the i / o operation when it was initiated ."}{"idx": 25469, "node_name": "provider", "Dec": "the provider that created this channel"}{"idx": 25472, "node_name": "family", "Dec": "the protocol family"}{"idx": 25475, "node_name": "local", "Dec": "the address to bind the socket , or null to bind the socket to an automatically assigned socket address"}{"idx": 25477, "node_name": "name", "Dec": "the socket option"}{"idx": 25478, "node_name": "value", "Dec": "the value of the socket option . a value of null may be a valid value for some socket options ."}{"idx": 25482, "node_name": "remote", "Dec": "the remote address to which this channel is to be connected"}{"idx": 25486, "node_name": "dst", "Dec": "the buffer into which the datagram is to be transferred"}{"idx": 25488, "node_name": "src", "Dec": "the buffer containing the datagram to be sent"}{"idx": 25489, "node_name": "target", "Dec": "the address to which the datagram is to be sent"}{"idx": 25491, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25493, "node_name": "dsts", "Dec": "the buffers into which bytes are to be transferred"}{"idx": 25494, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer into which bytes are to be transferred ; must be non-negative and no larger than dsts.length"}{"idx": 25495, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; must be non-negative and no larger than dsts.length"}{"idx": 25497, "node_name": "dsts", "Dec": "the buffers into which bytes are to be transferred"}{"idx": 25499, "node_name": "src", "Dec": "the buffer from which bytes are to be retrieved"}{"idx": 25501, "node_name": "srcs", "Dec": "the buffers from which bytes are to be retrieved"}{"idx": 25502, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer from which bytes are to be retrieved ; must be non-negative and no larger than srcs.length"}{"idx": 25503, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; must be non-negative and no larger than srcs.length"}{"idx": 25505, "node_name": "srcs", "Dec": "the buffers from which bytes are to be retrieved"}{"idx": 25510, "node_name": "path", "Dec": "the path of the file to open or create"}{"idx": 25511, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 25512, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the file"}{"idx": 25514, "node_name": "path", "Dec": "the path of the file to open or create"}{"idx": 25515, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 25517, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25519, "node_name": "dsts", "Dec": "the buffers into which bytes are to be transferred"}{"idx": 25520, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer into which bytes are to be transferred ; must be non-negative and no larger than dsts.length"}{"idx": 25521, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; must be non-negative and no larger than dsts.length"}{"idx": 25523, "node_name": "dsts", "Dec": "the buffers into which bytes are to be transferred"}{"idx": 25525, "node_name": "src", "Dec": "the buffer from which bytes are to be retrieved"}{"idx": 25527, "node_name": "srcs", "Dec": "the buffers from which bytes are to be retrieved"}{"idx": 25528, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer from which bytes are to be retrieved ; must be non-negative and no larger than srcs.length"}{"idx": 25529, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; must be non-negative and no larger than srcs.length"}{"idx": 25531, "node_name": "srcs", "Dec": "the buffers from which bytes are to be retrieved"}{"idx": 25534, "node_name": "newposition", "Dec": "the new position , a non-negative integer counting the number of bytes from the beginning of the file"}{"idx": 25537, "node_name": "size", "Dec": "the new size , a non-negative byte count"}{"idx": 25539, "node_name": "metadata", "Dec": "if true then force(boolean) is required to force changes to both the file's content and metadata to be written to storage ; otherwise , it need only force content changes to be written"}{"idx": 25541, "node_name": "position", "Dec": "the position within the file at which the transfer is to begin ; must be non-negative"}{"idx": 25542, "node_name": "count", "Dec": "the maximum number of bytes to be transferred ; must be non-negative"}{"idx": 25543, "node_name": "target", "Dec": "the target channel"}{"idx": 25545, "node_name": "src", "Dec": "the source channel"}{"idx": 25546, "node_name": "position", "Dec": "the position within the file at which the transfer is to begin ; must be non-negative"}{"idx": 25547, "node_name": "count", "Dec": "the maximum number of bytes to be transferred ; must be non-negative"}{"idx": 25549, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25550, "node_name": "position", "Dec": "the file position at which the transfer is to begin ; must be non-negative"}{"idx": 25552, "node_name": "src", "Dec": "the buffer from which bytes are to be transferred"}{"idx": 25553, "node_name": "position", "Dec": "the file position at which the transfer is to begin ; must be non-negative"}{"idx": 25555, "node_name": "mode", "Dec": "one of the constants read_only , read_write , or private defined in the filechannel.mapmode class , according to whether the file is to be mapped read-only , read / write , or privately ( copy-on-write ) , respectively , or an implementation specific map mode"}{"idx": 25556, "node_name": "position", "Dec": "the position within the file at which the mapped region is to start ; must be non-negative"}{"idx": 25557, "node_name": "size", "Dec": "the size of the region to be mapped ; must be non-negative and no greater than integer.max_value"}{"idx": 25559, "node_name": "position", "Dec": "the position at which the locked region is to start ; must be non-negative"}{"idx": 25560, "node_name": "size", "Dec": "the size of the locked region ; must be non-negative , and the sum position + size must be non-negative"}{"idx": 25561, "node_name": "shared", "Dec": "true to request a shared lock , in which case this channel must be open for reading ( and possibly writing ); false to request an exclusive lock , in which case this channel must be open for writing ( and possibly reading )"}{"idx": 25564, "node_name": "position", "Dec": "the position at which the locked region is to start ; must be non-negative"}{"idx": 25565, "node_name": "size", "Dec": "the size of the locked region ; must be non-negative , and the sum position + size must be non-negative"}{"idx": 25566, "node_name": "shared", "Dec": "true to request a shared lock , false to request an exclusive lock"}{"idx": 25575, "node_name": "channel", "Dec": "the file channel upon whose file this lock is held"}{"idx": 25576, "node_name": "position", "Dec": "the position within the file at which the locked region starts ; must be non-negative"}{"idx": 25577, "node_name": "size", "Dec": "the size of the locked region ; must be non-negative , and the sum position + size must be non-negative"}{"idx": 25578, "node_name": "shared", "Dec": "true if this lock is shared , false if it is exclusive"}{"idx": 25580, "node_name": "channel", "Dec": "the channel upon whose file this lock is held"}{"idx": 25581, "node_name": "position", "Dec": "the position within the file at which the locked region starts ; must be non-negative"}{"idx": 25582, "node_name": "size", "Dec": "the size of the locked region ; must be non-negative , and the sum position + size must be non-negative"}{"idx": 25583, "node_name": "shared", "Dec": "true if this lock is shared , false if it is exclusive"}{"idx": 25590, "node_name": "position", "Dec": "the starting position of the lock range"}{"idx": 25591, "node_name": "size", "Dec": "the size of the lock range"}{"idx": 25600, "node_name": "srcs", "Dec": "the buffers from which bytes are to be retrieved"}{"idx": 25601, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer from which bytes are to be retrieved ; must be non-negative and no larger than srcs.length"}{"idx": 25602, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; must be non-negative and no larger than srcs.length"}{"idx": 25604, "node_name": "srcs", "Dec": "the buffers from which bytes are to be retrieved"}{"idx": 25620, "node_name": "source", "Dec": "the source address to block"}{"idx": 25622, "node_name": "source", "Dec": "the source address to unblock"}{"idx": 25630, "node_name": "group", "Dec": "the multicast address to join"}{"idx": 25631, "node_name": "interf", "Dec": "the network interface on which to join the group"}{"idx": 25633, "node_name": "group", "Dec": "the multicast address to join"}{"idx": 25634, "node_name": "interf", "Dec": "the network interface on which to join the group"}{"idx": 25635, "node_name": "source", "Dec": "the source address"}{"idx": 25638, "node_name": "local", "Dec": "the address to bind the socket , or null to bind the socket to an automatically assigned socket address"}{"idx": 25641, "node_name": "name", "Dec": "the socket option"}{"idx": 25642, "node_name": "value", "Dec": "the value of the socket option . a value of null may be a valid value for some socket options ."}{"idx": 25644, "node_name": "name", "Dec": "the socket option"}{"idx": 25665, "node_name": "provider", "Dec": "the selector provider"}{"idx": 25669, "node_name": "provider", "Dec": "the selector provider"}{"idx": 25673, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25678, "node_name": "dsts", "Dec": "the buffers into which bytes are to be transferred"}{"idx": 25679, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer into which bytes are to be transferred ; must be non-negative and no larger than dsts.length"}{"idx": 25680, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; must be non-negative and no larger than dsts.length"}{"idx": 25682, "node_name": "dsts", "Dec": "the buffers into which bytes are to be transferred"}{"idx": 25685, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25687, "node_name": "src", "Dec": "the buffer from which bytes are to be retrieved"}{"idx": 25690, "node_name": "newposition", "Dec": "the new position , a non-negative integer counting the number of bytes from the beginning of the entity"}{"idx": 25693, "node_name": "size", "Dec": "the new size , a non-negative byte count"}{"idx": 25700, "node_name": "sel", "Dec": "the selector"}{"idx": 25702, "node_name": "sel", "Dec": "the selector with which this channel is to be registered"}{"idx": 25703, "node_name": "ops", "Dec": "the interest set for the resulting key"}{"idx": 25704, "node_name": "att", "Dec": "the attachment for the resulting key ; may be null"}{"idx": 25706, "node_name": "sel", "Dec": "the selector with which this channel is to be registered"}{"idx": 25707, "node_name": "ops", "Dec": "the interest set for the resulting key"}{"idx": 25709, "node_name": "block", "Dec": "if true then this channel will be placed in blocking mode ; if false then it will be placed non-blocking mode"}{"idx": 25724, "node_name": "ops", "Dec": "the new interest set"}{"idx": 25726, "node_name": "ops", "Dec": "the interest set to apply"}{"idx": 25728, "node_name": "ops", "Dec": "the interest set to apply"}{"idx": 25735, "node_name": "ob", "Dec": "the object to be attached ; may be null"}{"idx": 25746, "node_name": "timeout", "Dec": "if positive , block for up to timeout milliseconds , more or less , while waiting for a channel to become ready ; if zero , block indefinitely ; must not be negative"}{"idx": 25749, "node_name": "action", "Dec": "the action to perform"}{"idx": 25750, "node_name": "timeout", "Dec": "if positive , block for up to timeout milliseconds , more or less , while waiting for a channel to become ready ; if zero , block indefinitely ; must not be negative"}{"idx": 25752, "node_name": "action", "Dec": "the action to perform"}{"idx": 25754, "node_name": "action", "Dec": "the action to perform"}{"idx": 25759, "node_name": "provider", "Dec": "the provider that created this channel"}{"idx": 25763, "node_name": "local", "Dec": "the local address to bind the socket , or null to bind to an automatically assigned socket address"}{"idx": 25765, "node_name": "local", "Dec": "the address to bind the socket , or null to bind to an automatically assigned socket address"}{"idx": 25766, "node_name": "backlog", "Dec": "the maximum number of pending connections"}{"idx": 25768, "node_name": "name", "Dec": "the socket option"}{"idx": 25769, "node_name": "value", "Dec": "the value of the socket option . a value of null may be a valid value for some socket options ."}{"idx": 25777, "node_name": "provider", "Dec": "the provider that created this channel"}{"idx": 25780, "node_name": "remote", "Dec": "the remote address to which the new channel is to be connected"}{"idx": 25783, "node_name": "local", "Dec": "the address to bind the socket , or null to bind the socket to an automatically assigned socket address"}{"idx": 25785, "node_name": "name", "Dec": "the socket option"}{"idx": 25786, "node_name": "value", "Dec": "the value of the socket option . a value of null may be a valid value for some socket options ."}{"idx": 25793, "node_name": "remote", "Dec": "the remote address to which this channel is to be connected"}{"idx": 25797, "node_name": "dst", "Dec": "the buffer into which bytes are to be transferred"}{"idx": 25799, "node_name": "dsts", "Dec": "the buffers into which bytes are to be transferred"}{"idx": 25800, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer into which bytes are to be transferred ; must be non-negative and no larger than dsts.length"}{"idx": 25801, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; must be non-negative and no larger than dsts.length"}{"idx": 25803, "node_name": "dsts", "Dec": "the buffers into which bytes are to be transferred"}{"idx": 25805, "node_name": "src", "Dec": "the buffer from which bytes are to be retrieved"}{"idx": 25807, "node_name": "srcs", "Dec": "the buffers from which bytes are to be retrieved"}{"idx": 25808, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer from which bytes are to be retrieved ; must be non-negative and no larger than srcs.length"}{"idx": 25809, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; must be non-negative and no larger than srcs.length"}{"idx": 25811, "node_name": "srcs", "Dec": "the buffers from which bytes are to be retrieved"}{"idx": 25819, "node_name": "completed", "Dec": "true if , and only if , the i / o operation completed successfully , that is , had some effect that would be visible to the operation's invoker"}{"idx": 25822, "node_name": "provider", "Dec": "the provider that created this channel"}{"idx": 25825, "node_name": "sel", "Dec": "the selector with which this channel is to be registered"}{"idx": 25826, "node_name": "ops", "Dec": "the interest set for the resulting key"}{"idx": 25827, "node_name": "att", "Dec": "the attachment for the resulting key ; may be null"}{"idx": 25831, "node_name": "block", "Dec": "if true then this channel will be placed in blocking mode ; if false then it will be placed non-blocking mode"}{"idx": 25833, "node_name": "block", "Dec": "if true then this channel will be placed in blocking mode ; if false then it will be placed non-blocking mode"}{"idx": 25839, "node_name": "provider", "Dec": "the provider that created this selector"}{"idx": 25845, "node_name": "ch", "Dec": "the channel to be registered"}{"idx": 25846, "node_name": "ops", "Dec": "the initial interest set , which must be valid"}{"idx": 25847, "node_name": "att", "Dec": "the initial attachment for the resulting key"}{"idx": 25849, "node_name": "key", "Dec": "the selection key to be removed"}{"idx": 25856, "node_name": "nthreads", "Dec": "the number of threads in the pool"}{"idx": 25857, "node_name": "threadfactory", "Dec": "the factory to use when creating new threads"}{"idx": 25859, "node_name": "executor", "Dec": "the thread pool"}{"idx": 25860, "node_name": "initialsize", "Dec": "a value > =0 or a negative value for implementation specific default"}{"idx": 25862, "node_name": "group", "Dec": "the group to which the channel is bound , or null to bind to the default group"}{"idx": 25864, "node_name": "group", "Dec": "the group to which the channel is bound , or null to bind to the default group"}{"idx": 25870, "node_name": "family", "Dec": "the protocol family"}{"idx": 25882, "node_name": "src", "Dec": "the buffer from which bytes are to be retrieved"}{"idx": 25887, "node_name": "capacity", "Dec": "the new buffer's capacity , in chars"}{"idx": 25889, "node_name": "array", "Dec": "the array that will back the new buffer"}{"idx": 25890, "node_name": "offset", "Dec": "the offset of the subarray to be used ; must be non-negative and no larger than array.length . the new buffer's position will be set to this value ."}{"idx": 25891, "node_name": "length", "Dec": "the length of the subarray to be used ; must be non-negative and no larger than array.length"}{"idx": 25893, "node_name": "array", "Dec": "the array that will back this buffer"}{"idx": 25895, "node_name": "target", "Dec": "the buffer to read characters into"}{"idx": 25897, "node_name": "csq", "Dec": "the character sequence from which the new character buffer is to be created"}{"idx": 25898, "node_name": "start", "Dec": "the index of the first character to be used ; must be non-negative and no larger than csq.length() . the new buffer's position will be set to this value ."}{"idx": 25899, "node_name": "end", "Dec": "the index of the character following the last character to be used ; must be no smaller than start and no larger than csq.length() . the new buffer's limit will be set to this value ."}{"idx": 25901, "node_name": "csq", "Dec": "the character sequence from which the new character buffer is to be created"}{"idx": 25904, "node_name": "index", "Dec": "the position in this buffer at which the content of the new buffer will start ; must be non-negative and no larger than limit()"}{"idx": 25905, "node_name": "length", "Dec": "the number of elements the new buffer will contain ; must be non-negative and no larger than limit()"}{"idx": 25910, "node_name": "c", "Dec": "the char to be written"}{"idx": 25912, "node_name": "index", "Dec": "the index from which the char will be read"}{"idx": 25914, "node_name": "index", "Dec": "the index at which the char will be written"}{"idx": 25915, "node_name": "c", "Dec": "the char value to be written"}{"idx": 25917, "node_name": "dst", "Dec": "the array into which chars are to be written"}{"idx": 25918, "node_name": "offset", "Dec": "the offset within the array of the first char to be written ; must be non-negative and no larger than dst.length"}{"idx": 25919, "node_name": "length", "Dec": "the maximum number of chars to be written to the given array ; must be non-negative and no larger than dst.length"}{"idx": 25921, "node_name": "dst", "Dec": "the destination array"}{"idx": 25923, "node_name": "index", "Dec": "the index in this buffer from which the first char will be read ; must be non-negative and less than limit()"}{"idx": 25924, "node_name": "dst", "Dec": "the destination array"}{"idx": 25925, "node_name": "offset", "Dec": "the offset within the array of the first char to be written ; must be non-negative and less than dst.length"}{"idx": 25926, "node_name": "length", "Dec": "the number of chars to be written to the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 25928, "node_name": "index", "Dec": "the index in this buffer from which the first char will be read ; must be non-negative and less than limit()"}{"idx": 25929, "node_name": "dst", "Dec": "the destination array"}{"idx": 25931, "node_name": "src", "Dec": "the source buffer from which chars are to be read ; must not be this buffer"}{"idx": 25933, "node_name": "src", "Dec": "the array from which chars are to be read"}{"idx": 25934, "node_name": "offset", "Dec": "the offset within the array of the first char to be read ; must be non-negative and no larger than src.length"}{"idx": 25935, "node_name": "length", "Dec": "the number of chars to be read from the given array ; must be non-negative and no larger than src.length"}{"idx": 25937, "node_name": "src", "Dec": "the source array"}{"idx": 25939, "node_name": "index", "Dec": "the index in this buffer at which the first char will be written ; must be non-negative and less than limit()"}{"idx": 25940, "node_name": "src", "Dec": "the array from which chars are to be read"}{"idx": 25941, "node_name": "offset", "Dec": "the offset within the array of the first char to be read ; must be non-negative and less than src.length"}{"idx": 25942, "node_name": "length", "Dec": "the number of chars to be read from the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 25944, "node_name": "index", "Dec": "the index in this buffer at which the first char will be written ; must be non-negative and less than limit()"}{"idx": 25945, "node_name": "src", "Dec": "the array from which chars are to be read"}{"idx": 25947, "node_name": "src", "Dec": "the string from which chars are to be read"}{"idx": 25948, "node_name": "start", "Dec": "the offset within the string of the first char to be read ; must be non-negative and no larger than string.length()"}{"idx": 25949, "node_name": "end", "Dec": "the offset within the string of the last char to be read , plus one ; must be non-negative and no larger than string.length()"}{"idx": 25951, "node_name": "src", "Dec": "the source string"}{"idx": 25956, "node_name": "newposition", "Dec": "the new position value ; must be non-negative and no larger than the current limit"}{"idx": 25958, "node_name": "newlimit", "Dec": "the new limit value ; must be non-negative and no larger than this buffer's capacity"}{"idx": 25968, "node_name": "ob", "Dec": "the object to which this buffer is to be compared"}{"idx": 25970, "node_name": "that", "Dec": "the object to be compared ."}{"idx": 25972, "node_name": "that", "Dec": "the byte buffer to be tested for a mismatch with this buffer"}{"idx": 25976, "node_name": "index", "Dec": "the index of the character to be read , relative to the position ; must be non-negative and smaller than remaining()"}{"idx": 25978, "node_name": "start", "Dec": "the index , relative to the current position , of the first character in the subsequence ; must be non-negative and no larger than remaining()"}{"idx": 25979, "node_name": "end", "Dec": "the index , relative to the current position , of the character following the last character in the subsequence ; must be no smaller than start and no larger than remaining()"}{"idx": 25981, "node_name": "csq", "Dec": "the character sequence to append . if csq is null , then the four characters \" null \" are appended to this character buffer ."}{"idx": 25983, "node_name": "csq", "Dec": "the character sequence from which a subsequence will be appended . if csq is null , then characters will be appended as if csq contained the four characters \" null \" ."}{"idx": 25984, "node_name": "start", "Dec": "the index of the first character in the subsequence"}{"idx": 25985, "node_name": "end", "Dec": "the index of the character following the last character in the subsequence"}{"idx": 25987, "node_name": "c", "Dec": "the 16-bit char to append"}{"idx": 25993, "node_name": "canonicalname", "Dec": "the canonical name of this charset"}{"idx": 25994, "node_name": "aliases", "Dec": "an array of this charset's aliases , or null if it has no aliases"}{"idx": 25996, "node_name": "charsetname", "Dec": "the name of the requested charset ; may be either a canonical name or an alias"}{"idx": 25998, "node_name": "charsetname", "Dec": "the name of the requested charset ; may be either a canonical name or an alias"}{"idx": 26006, "node_name": "locale", "Dec": "the locale for which the display name is to be retrieved"}{"idx": 26008, "node_name": "cs", "Dec": "the given charset"}{"idx": 26013, "node_name": "bb", "Dec": "the byte buffer to be decoded"}{"idx": 26015, "node_name": "cb", "Dec": "the char buffer to be encoded"}{"idx": 26017, "node_name": "str", "Dec": "the string to be encoded"}{"idx": 26019, "node_name": "that", "Dec": "the charset to which this charset is to be compared"}{"idx": 26022, "node_name": "ob", "Dec": "the reference object with which to compare ."}{"idx": 26026, "node_name": "cs", "Dec": "the charset that created this decoder"}{"idx": 26027, "node_name": "averagecharsperbyte", "Dec": "a positive float value indicating the expected number of characters that will be produced for each input byte"}{"idx": 26028, "node_name": "maxcharsperbyte", "Dec": "a positive float value indicating the maximum number of characters that will be produced for each input byte"}{"idx": 26032, "node_name": "newreplacement", "Dec": "the new replacement ; must not be null , must have non-zero length , and must not be longer than the value returned by the maxcharsperbyte method"}{"idx": 26034, "node_name": "newreplacement", "Dec": "the replacement value"}{"idx": 26037, "node_name": "newaction", "Dec": "the new action ; must not be null"}{"idx": 26039, "node_name": "newaction", "Dec": "the new action"}{"idx": 26042, "node_name": "newaction", "Dec": "the new action ; must not be null"}{"idx": 26044, "node_name": "newaction", "Dec": "the new action"}{"idx": 26048, "node_name": "in", "Dec": "the input byte buffer"}{"idx": 26049, "node_name": "out", "Dec": "the output character buffer"}{"idx": 26050, "node_name": "endofinput", "Dec": "true if , and only if , the invoker can provide no additional input bytes beyond those in the given buffer"}{"idx": 26052, "node_name": "out", "Dec": "the output character buffer"}{"idx": 26054, "node_name": "out", "Dec": "the output character buffer"}{"idx": 26058, "node_name": "in", "Dec": "the input byte buffer"}{"idx": 26059, "node_name": "out", "Dec": "the output character buffer"}{"idx": 26061, "node_name": "in", "Dec": "the input byte buffer"}{"idx": 26067, "node_name": "cs", "Dec": "the charset that created this encoder"}{"idx": 26068, "node_name": "averagebytesperchar", "Dec": "a positive float value indicating the expected number of bytes that will be produced for each input character"}{"idx": 26069, "node_name": "maxbytesperchar", "Dec": "a positive float value indicating the maximum number of bytes that will be produced for each input character"}{"idx": 26070, "node_name": "replacement", "Dec": "the initial replacement ; must not be null , must have non-zero length , must not be longer than maxbytesperchar , and must be legal"}{"idx": 26072, "node_name": "cs", "Dec": "the charset that created this encoder"}{"idx": 26073, "node_name": "averagebytesperchar", "Dec": "a positive float value indicating the expected number of bytes that will be produced for each input character"}{"idx": 26074, "node_name": "maxbytesperchar", "Dec": "a positive float value indicating the maximum number of bytes that will be produced for each input character"}{"idx": 26078, "node_name": "newreplacement", "Dec": "the new replacement ; must not be null , must have non-zero length , must not be longer than the value returned by the maxbytesperchar method , and must be legal"}{"idx": 26080, "node_name": "newreplacement", "Dec": "the replacement value"}{"idx": 26082, "node_name": "repl", "Dec": "the byte array to be tested"}{"idx": 26085, "node_name": "newaction", "Dec": "the new action ; must not be null"}{"idx": 26087, "node_name": "newaction", "Dec": "the new action"}{"idx": 26090, "node_name": "newaction", "Dec": "the new action ; must not be null"}{"idx": 26092, "node_name": "newaction", "Dec": "the new action"}{"idx": 26096, "node_name": "in", "Dec": "the input character buffer"}{"idx": 26097, "node_name": "out", "Dec": "the output byte buffer"}{"idx": 26098, "node_name": "endofinput", "Dec": "true if , and only if , the invoker can provide no additional input characters beyond those in the given buffer"}{"idx": 26100, "node_name": "out", "Dec": "the output byte buffer"}{"idx": 26102, "node_name": "out", "Dec": "the output byte buffer"}{"idx": 26106, "node_name": "in", "Dec": "the input character buffer"}{"idx": 26107, "node_name": "out", "Dec": "the output byte buffer"}{"idx": 26109, "node_name": "in", "Dec": "the input character buffer"}{"idx": 26111, "node_name": "c", "Dec": "the given character"}{"idx": 26113, "node_name": "cs", "Dec": "the given character sequence"}{"idx": 26116, "node_name": "cause", "Dec": "the unexpected exception that was thrown"}{"idx": 26128, "node_name": "length", "Dec": "the given length"}{"idx": 26130, "node_name": "length", "Dec": "the given length"}{"idx": 26139, "node_name": "charsetname", "Dec": "the illegal charset name"}{"idx": 26143, "node_name": "inputlength", "Dec": "the length of the input"}{"idx": 26150, "node_name": "charsetname", "Dec": "the name of the requested charset ; may be either a canonical name or an alias"}{"idx": 26160, "node_name": "inputlength", "Dec": "the length of the input"}{"idx": 26165, "node_name": "charsetname", "Dec": "the name of the unsupported charset"}{"idx": 26169, "node_name": "capacity", "Dec": "the new buffer's capacity , in doubles"}{"idx": 26171, "node_name": "array", "Dec": "the array that will back the new buffer"}{"idx": 26172, "node_name": "offset", "Dec": "the offset of the subarray to be used ; must be non-negative and no larger than array.length . the new buffer's position will be set to this value ."}{"idx": 26173, "node_name": "length", "Dec": "the length of the subarray to be used ; must be non-negative and no larger than array.length"}{"idx": 26175, "node_name": "array", "Dec": "the array that will back this buffer"}{"idx": 26178, "node_name": "index", "Dec": "the position in this buffer at which the content of the new buffer will start ; must be non-negative and no larger than limit()"}{"idx": 26179, "node_name": "length", "Dec": "the number of elements the new buffer will contain ; must be non-negative and no larger than limit()"}{"idx": 26184, "node_name": "d", "Dec": "the double to be written"}{"idx": 26186, "node_name": "index", "Dec": "the index from which the double will be read"}{"idx": 26188, "node_name": "index", "Dec": "the index at which the double will be written"}{"idx": 26189, "node_name": "d", "Dec": "the double value to be written"}{"idx": 26191, "node_name": "dst", "Dec": "the array into which doubles are to be written"}{"idx": 26192, "node_name": "offset", "Dec": "the offset within the array of the first double to be written ; must be non-negative and no larger than dst.length"}{"idx": 26193, "node_name": "length", "Dec": "the maximum number of doubles to be written to the given array ; must be non-negative and no larger than dst.length"}{"idx": 26195, "node_name": "dst", "Dec": "the destination array"}{"idx": 26197, "node_name": "index", "Dec": "the index in this buffer from which the first double will be read ; must be non-negative and less than limit()"}{"idx": 26198, "node_name": "dst", "Dec": "the destination array"}{"idx": 26199, "node_name": "offset", "Dec": "the offset within the array of the first double to be written ; must be non-negative and less than dst.length"}{"idx": 26200, "node_name": "length", "Dec": "the number of doubles to be written to the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 26202, "node_name": "index", "Dec": "the index in this buffer from which the first double will be read ; must be non-negative and less than limit()"}{"idx": 26203, "node_name": "dst", "Dec": "the destination array"}{"idx": 26205, "node_name": "src", "Dec": "the source buffer from which doubles are to be read ; must not be this buffer"}{"idx": 26207, "node_name": "src", "Dec": "the array from which doubles are to be read"}{"idx": 26208, "node_name": "offset", "Dec": "the offset within the array of the first double to be read ; must be non-negative and no larger than src.length"}{"idx": 26209, "node_name": "length", "Dec": "the number of doubles to be read from the given array ; must be non-negative and no larger than src.length"}{"idx": 26211, "node_name": "src", "Dec": "the source array"}{"idx": 26213, "node_name": "index", "Dec": "the index in this buffer at which the first double will be written ; must be non-negative and less than limit()"}{"idx": 26214, "node_name": "src", "Dec": "the array from which doubles are to be read"}{"idx": 26215, "node_name": "offset", "Dec": "the offset within the array of the first double to be read ; must be non-negative and less than src.length"}{"idx": 26216, "node_name": "length", "Dec": "the number of doubles to be read from the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 26218, "node_name": "index", "Dec": "the index in this buffer at which the first double will be written ; must be non-negative and less than limit()"}{"idx": 26219, "node_name": "src", "Dec": "the array from which doubles are to be read"}{"idx": 26224, "node_name": "newposition", "Dec": "the new position value ; must be non-negative and no larger than the current limit"}{"idx": 26226, "node_name": "newlimit", "Dec": "the new limit value ; must be non-negative and no larger than this buffer's capacity"}{"idx": 26237, "node_name": "ob", "Dec": "the object to which this buffer is to be compared"}{"idx": 26239, "node_name": "that", "Dec": "the object to be compared ."}{"idx": 26241, "node_name": "that", "Dec": "the byte buffer to be tested for a mismatch with this buffer"}{"idx": 26245, "node_name": "file", "Dec": "a string identifying the file or null if not known"}{"idx": 26247, "node_name": "file", "Dec": "a string identifying the file or null if not known"}{"idx": 26248, "node_name": "other", "Dec": "a string identifying the other file or null if not known"}{"idx": 26249, "node_name": "reason", "Dec": "a reason message with additional information or null"}{"idx": 26253, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 26256, "node_name": "source", "Dec": "a string identifying the source file or null if not known"}{"idx": 26257, "node_name": "target", "Dec": "a string identifying the target file or null if not known"}{"idx": 26258, "node_name": "reason", "Dec": "a reason message with additional information or null"}{"idx": 26262, "node_name": "type", "Dec": "the component type"}{"idx": 26264, "node_name": "who", "Dec": "the principal component"}{"idx": 26266, "node_name": "perms", "Dec": "the permissions component"}{"idx": 26268, "node_name": "perms", "Dec": "the permissions component"}{"idx": 26270, "node_name": "flags", "Dec": "the flags component"}{"idx": 26272, "node_name": "flags", "Dec": "the flags component"}{"idx": 26276, "node_name": "entry", "Dec": "an acl entry"}{"idx": 26282, "node_name": "ob", "Dec": "the object to which this object is to be compared"}{"idx": 26288, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 26295, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 26299, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 26304, "node_name": "acl", "Dec": "the new access control list"}{"idx": 26321, "node_name": "lastmodifiedtime", "Dec": "the new last modified time , or null to not change the value"}{"idx": 26322, "node_name": "lastaccesstime", "Dec": "the last access time , or null to not change the value"}{"idx": 26323, "node_name": "createtime", "Dec": "the file's create time , or null to not change the value"}{"idx": 26333, "node_name": "value", "Dec": "the new value of the attribute"}{"idx": 26335, "node_name": "value", "Dec": "the new value of the attribute"}{"idx": 26337, "node_name": "value", "Dec": "the new value of the attribute"}{"idx": 26339, "node_name": "value", "Dec": "the new value of the attribute"}{"idx": 26348, "node_name": "owner", "Dec": "the new file owner"}{"idx": 26352, "node_name": "value", "Dec": "the value since the epoch ( 1970-01-01t00 : 00:00 z ); can be negative"}{"idx": 26353, "node_name": "unit", "Dec": "the unit of granularity to interpret the value"}{"idx": 26355, "node_name": "value", "Dec": "the value , in milliseconds , since the epoch ( 1970-01-01t00 : 00:00 z ); can be negative"}{"idx": 26357, "node_name": "instant", "Dec": "the instant to convert"}{"idx": 26359, "node_name": "unit", "Dec": "the unit of granularity for the return value"}{"idx": 26363, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 26366, "node_name": "other", "Dec": "the other filetime to be compared"}{"idx": 26377, "node_name": "perms", "Dec": "the new set of permissions"}{"idx": 26379, "node_name": "group", "Dec": "the new file group-owner"}{"idx": 26383, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 26386, "node_name": "perms", "Dec": "the set of permissions"}{"idx": 26388, "node_name": "perms", "Dec": "string representing a set of permissions"}{"idx": 26390, "node_name": "perms", "Dec": "the set of permissions"}{"idx": 26395, "node_name": "name", "Dec": "the attribute name"}{"idx": 26397, "node_name": "name", "Dec": "the attribute name"}{"idx": 26398, "node_name": "dst", "Dec": "the destination buffer"}{"idx": 26400, "node_name": "name", "Dec": "the attribute name"}{"idx": 26401, "node_name": "src", "Dec": "the buffer containing the attribute value"}{"idx": 26403, "node_name": "name", "Dec": "the attribute name"}{"idx": 26408, "node_name": "name", "Dec": "the string representation of the user principal to lookup"}{"idx": 26410, "node_name": "group", "Dec": "the string representation of the group to lookup"}{"idx": 26413, "node_name": "name", "Dec": "the principal name ; may be null"}{"idx": 26424, "node_name": "cause", "Dec": "the ioexception that caused the directory iteration to fail"}{"idx": 26428, "node_name": "dir", "Dec": "a string identifying the directory or null if not known"}{"idx": 26431, "node_name": "entry", "Dec": "the directory entry to be tested"}{"idx": 26436, "node_name": "file", "Dec": "a string identifying the file or null if not known"}{"idx": 26438, "node_name": "file", "Dec": "a string identifying the file or null if not known"}{"idx": 26439, "node_name": "other", "Dec": "a string identifying the other file or null if not known"}{"idx": 26440, "node_name": "reason", "Dec": "a reason message with additional information or null"}{"idx": 26443, "node_name": "path", "Dec": "the path to the file to open"}{"idx": 26444, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26446, "node_name": "path", "Dec": "the path to the file to open or create"}{"idx": 26447, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26449, "node_name": "path", "Dec": "the path to the file to open or create"}{"idx": 26450, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26451, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the file"}{"idx": 26453, "node_name": "path", "Dec": "the path to the file to open or create"}{"idx": 26454, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26456, "node_name": "dir", "Dec": "the path to the directory"}{"idx": 26458, "node_name": "dir", "Dec": "the path to the directory"}{"idx": 26459, "node_name": "glob", "Dec": "the glob pattern"}{"idx": 26461, "node_name": "dir", "Dec": "the path to the directory"}{"idx": 26462, "node_name": "filter", "Dec": "the directory stream filter"}{"idx": 26464, "node_name": "path", "Dec": "the path to the file to create"}{"idx": 26465, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the file"}{"idx": 26467, "node_name": "dir", "Dec": "the directory to create"}{"idx": 26468, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the directory"}{"idx": 26470, "node_name": "dir", "Dec": "the directory to create"}{"idx": 26471, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the directory"}{"idx": 26473, "node_name": "dir", "Dec": "the path to directory in which to create the file"}{"idx": 26474, "node_name": "prefix", "Dec": "the prefix string to be used in generating the file's name ; may be null"}{"idx": 26475, "node_name": "suffix", "Dec": "the suffix string to be used in generating the file's name ; may be null , in which case \" .tmp \" is used"}{"idx": 26476, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the file"}{"idx": 26478, "node_name": "prefix", "Dec": "the prefix string to be used in generating the file's name ; may be null"}{"idx": 26479, "node_name": "suffix", "Dec": "the suffix string to be used in generating the file's name ; may be null , in which case \" .tmp \" is used"}{"idx": 26480, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the file"}{"idx": 26482, "node_name": "dir", "Dec": "the path to directory in which to create the directory"}{"idx": 26483, "node_name": "prefix", "Dec": "the prefix string to be used in generating the directory's name ; may be null"}{"idx": 26484, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the directory"}{"idx": 26486, "node_name": "prefix", "Dec": "the prefix string to be used in generating the directory's name ; may be null"}{"idx": 26487, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the directory"}{"idx": 26489, "node_name": "link", "Dec": "the path of the symbolic link to create"}{"idx": 26490, "node_name": "target", "Dec": "the target of the symbolic link"}{"idx": 26491, "node_name": "attrs", "Dec": "the array of attributes to set atomically when creating the symbolic link"}{"idx": 26493, "node_name": "link", "Dec": "the link ( directory entry ) to create"}{"idx": 26494, "node_name": "existing", "Dec": "a path to an existing file"}{"idx": 26496, "node_name": "path", "Dec": "the path to the file to delete"}{"idx": 26498, "node_name": "path", "Dec": "the path to the file to delete"}{"idx": 26500, "node_name": "source", "Dec": "the path to the file to copy"}{"idx": 26501, "node_name": "target", "Dec": "the path to the target file ( may be associated with a different provider to the source path )"}{"idx": 26502, "node_name": "options", "Dec": "options specifying how the copy should be done"}{"idx": 26504, "node_name": "source", "Dec": "the path to the file to move"}{"idx": 26505, "node_name": "target", "Dec": "the path to the target file ( may be associated with a different provider to the source path )"}{"idx": 26506, "node_name": "options", "Dec": "options specifying how the move should be done"}{"idx": 26508, "node_name": "link", "Dec": "the path to the symbolic link"}{"idx": 26510, "node_name": "path", "Dec": "the path to the file"}{"idx": 26512, "node_name": "path", "Dec": "one path to the file"}{"idx": 26513, "node_name": "path2", "Dec": "the other path"}{"idx": 26515, "node_name": "path", "Dec": "the path to the first file"}{"idx": 26516, "node_name": "path2", "Dec": "the path to the second file"}{"idx": 26518, "node_name": "path", "Dec": "the path to the file to test"}{"idx": 26520, "node_name": "path", "Dec": "the path to the file to probe"}{"idx": 26522, "node_name": "path", "Dec": "the path to the file"}{"idx": 26523, "node_name": "type", "Dec": "the class object corresponding to the file attribute view"}{"idx": 26524, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26526, "node_name": "path", "Dec": "the path to the file"}{"idx": 26527, "node_name": "type", "Dec": "the class of the file attributes required to read"}{"idx": 26528, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26530, "node_name": "path", "Dec": "the path to the file"}{"idx": 26531, "node_name": "attribute", "Dec": "the attribute to set"}{"idx": 26532, "node_name": "value", "Dec": "the attribute value"}{"idx": 26533, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26535, "node_name": "path", "Dec": "the path to the file"}{"idx": 26536, "node_name": "attribute", "Dec": "the attribute to read"}{"idx": 26537, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26539, "node_name": "path", "Dec": "the path to the file"}{"idx": 26540, "node_name": "attributes", "Dec": "the attributes to read"}{"idx": 26541, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26543, "node_name": "path", "Dec": "the path to the file"}{"idx": 26544, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26546, "node_name": "path", "Dec": "the path to the file"}{"idx": 26547, "node_name": "perms", "Dec": "the new set of permissions"}{"idx": 26549, "node_name": "path", "Dec": "the path to the file"}{"idx": 26550, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26552, "node_name": "path", "Dec": "the path to the file"}{"idx": 26553, "node_name": "owner", "Dec": "the new file owner"}{"idx": 26555, "node_name": "path", "Dec": "the path to the file"}{"idx": 26557, "node_name": "path", "Dec": "the path to the file to test"}{"idx": 26558, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26560, "node_name": "path", "Dec": "the path to the file"}{"idx": 26561, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26563, "node_name": "path", "Dec": "the path to the file"}{"idx": 26564, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26566, "node_name": "path", "Dec": "the path to the file"}{"idx": 26567, "node_name": "time", "Dec": "the new last modified time"}{"idx": 26569, "node_name": "path", "Dec": "the path to the file"}{"idx": 26571, "node_name": "path", "Dec": "the path to the file to test"}{"idx": 26572, "node_name": "options", "Dec": "options indicating how symbolic links are handled ."}{"idx": 26574, "node_name": "path", "Dec": "the path to the file to test"}{"idx": 26575, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26577, "node_name": "path", "Dec": "the path to the file to check"}{"idx": 26579, "node_name": "path", "Dec": "the path to the file to check"}{"idx": 26581, "node_name": "path", "Dec": "the path to the file to check"}{"idx": 26583, "node_name": "start", "Dec": "the starting file"}{"idx": 26584, "node_name": "options", "Dec": "options to configure the traversal"}{"idx": 26585, "node_name": "maxdepth", "Dec": "the maximum number of directory levels to visit"}{"idx": 26586, "node_name": "visitor", "Dec": "the file visitor to invoke for each file"}{"idx": 26588, "node_name": "start", "Dec": "the starting file"}{"idx": 26589, "node_name": "visitor", "Dec": "the file visitor to invoke for each file"}{"idx": 26591, "node_name": "path", "Dec": "the path to the file"}{"idx": 26592, "node_name": "cs", "Dec": "the charset to use for decoding"}{"idx": 26594, "node_name": "path", "Dec": "the path to the file"}{"idx": 26596, "node_name": "path", "Dec": "the path to the file"}{"idx": 26597, "node_name": "cs", "Dec": "the charset to use for encoding"}{"idx": 26598, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26600, "node_name": "path", "Dec": "the path to the file"}{"idx": 26601, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26603, "node_name": "in", "Dec": "the input stream to read from"}{"idx": 26604, "node_name": "target", "Dec": "the path to the file"}{"idx": 26605, "node_name": "options", "Dec": "options specifying how the copy should be done"}{"idx": 26607, "node_name": "source", "Dec": "the path to the file"}{"idx": 26608, "node_name": "out", "Dec": "the output stream to write to"}{"idx": 26610, "node_name": "path", "Dec": "the path to the file"}{"idx": 26612, "node_name": "path", "Dec": "the path to the file"}{"idx": 26614, "node_name": "path", "Dec": "the path to the file"}{"idx": 26615, "node_name": "cs", "Dec": "the charset to use for decoding"}{"idx": 26617, "node_name": "path", "Dec": "the path to the file"}{"idx": 26618, "node_name": "cs", "Dec": "the charset to use for decoding"}{"idx": 26620, "node_name": "path", "Dec": "the path to the file"}{"idx": 26622, "node_name": "path", "Dec": "the path to the file"}{"idx": 26623, "node_name": "bytes", "Dec": "the byte array with the bytes to write"}{"idx": 26624, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26626, "node_name": "path", "Dec": "the path to the file"}{"idx": 26627, "node_name": "lines", "Dec": "an object to iterate over the char sequences"}{"idx": 26628, "node_name": "cs", "Dec": "the charset to use for encoding"}{"idx": 26629, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26631, "node_name": "path", "Dec": "the path to the file"}{"idx": 26632, "node_name": "lines", "Dec": "an object to iterate over the char sequences"}{"idx": 26633, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26635, "node_name": "path", "Dec": "the path to the file"}{"idx": 26636, "node_name": "csq", "Dec": "the charsequence to be written"}{"idx": 26637, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26639, "node_name": "path", "Dec": "the path to the file"}{"idx": 26640, "node_name": "csq", "Dec": "the charsequence to be written"}{"idx": 26641, "node_name": "cs", "Dec": "the charset to use for encoding"}{"idx": 26642, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26644, "node_name": "dir", "Dec": "the path to the directory"}{"idx": 26646, "node_name": "start", "Dec": "the starting file"}{"idx": 26647, "node_name": "maxdepth", "Dec": "the maximum number of directory levels to visit"}{"idx": 26648, "node_name": "options", "Dec": "options to configure the traversal"}{"idx": 26650, "node_name": "start", "Dec": "the starting file"}{"idx": 26651, "node_name": "options", "Dec": "options to configure the traversal"}{"idx": 26653, "node_name": "start", "Dec": "the starting file"}{"idx": 26654, "node_name": "maxdepth", "Dec": "the maximum number of directory levels to search"}{"idx": 26655, "node_name": "matcher", "Dec": "the function used to decide whether a file should be included in the returned stream"}{"idx": 26656, "node_name": "options", "Dec": "options to configure the traversal"}{"idx": 26658, "node_name": "path", "Dec": "the path to the file"}{"idx": 26659, "node_name": "cs", "Dec": "the charset to use for decoding"}{"idx": 26661, "node_name": "path", "Dec": "the path to the file"}{"idx": 26672, "node_name": "type", "Dec": "the file attribute view type"}{"idx": 26674, "node_name": "name", "Dec": "the name of file attribute view"}{"idx": 26676, "node_name": "type", "Dec": "the class object corresponding to the attribute view"}{"idx": 26678, "node_name": "attribute", "Dec": "the attribute to read"}{"idx": 26690, "node_name": "first", "Dec": "the path string or initial part of the path string"}{"idx": 26691, "node_name": "more", "Dec": "additional strings to be joined to form the path string"}{"idx": 26693, "node_name": "syntaxandpattern", "Dec": "the syntax and pattern"}{"idx": 26699, "node_name": "msg", "Dec": "the detail message"}{"idx": 26702, "node_name": "file", "Dec": "a string identifying the file or null if not known ."}{"idx": 26704, "node_name": "file", "Dec": "a string identifying the file or null if not known ."}{"idx": 26705, "node_name": "other", "Dec": "a string identifying the other file or null if there isn't another file or if not known"}{"idx": 26706, "node_name": "reason", "Dec": "a reason message with additional information or null"}{"idx": 26713, "node_name": "file", "Dec": "a string identifying the file causing the cycle or null if not known"}{"idx": 26717, "node_name": "msg", "Dec": "the detail message"}{"idx": 26721, "node_name": "uri", "Dec": "the uri to locate the file system"}{"idx": 26723, "node_name": "uri", "Dec": "the uri identifying the file system"}{"idx": 26724, "node_name": "env", "Dec": "a map of provider specific properties to configure the file system ; may be empty"}{"idx": 26726, "node_name": "uri", "Dec": "the uri identifying the file system"}{"idx": 26727, "node_name": "env", "Dec": "a map of provider specific properties to configure the file system ; may be empty"}{"idx": 26728, "node_name": "loader", "Dec": "the class loader to locate the provider or null to only attempt to locate an installed provider"}{"idx": 26730, "node_name": "path", "Dec": "the path to the file"}{"idx": 26731, "node_name": "loader", "Dec": "the class loader to locate the provider or null to only attempt to locate an installed provider"}{"idx": 26733, "node_name": "path", "Dec": "the path to the file"}{"idx": 26734, "node_name": "env", "Dec": "a map of provider specific properties to configure the file system ; may be empty"}{"idx": 26736, "node_name": "path", "Dec": "the path to the file"}{"idx": 26738, "node_name": "path", "Dec": "the path to the file"}{"idx": 26739, "node_name": "env", "Dec": "a map of provider specific properties to configure the file system ; may be empty"}{"idx": 26740, "node_name": "loader", "Dec": "the class loader to locate the provider or null to only attempt to locate an installed provider"}{"idx": 26744, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 26747, "node_name": "dir", "Dec": "a reference to the directory"}{"idx": 26748, "node_name": "attrs", "Dec": "the directory's basic attributes"}{"idx": 26750, "node_name": "file", "Dec": "a reference to the file"}{"idx": 26751, "node_name": "attrs", "Dec": "the file's basic attributes"}{"idx": 26753, "node_name": "file", "Dec": "a reference to the file"}{"idx": 26754, "node_name": "exc", "Dec": "the i / o exception that prevented the file from being visited"}{"idx": 26756, "node_name": "dir", "Dec": "a reference to the directory"}{"idx": 26757, "node_name": "exc", "Dec": "null if the iteration of the directory completes without an error ; otherwise the i / o exception that caused the iteration of the directory to complete prematurely"}{"idx": 26761, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 26764, "node_name": "input", "Dec": "the input string"}{"idx": 26765, "node_name": "reason", "Dec": "a string explaining why the input was rejected"}{"idx": 26766, "node_name": "index", "Dec": "the index at which the error occurred , or -1 if the index is not known"}{"idx": 26768, "node_name": "input", "Dec": "the input string"}{"idx": 26769, "node_name": "reason", "Dec": "a string explaining why the input was rejected"}{"idx": 26777, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 26780, "node_name": "name", "Dec": "the name of the permission . it must be \" hard \" or \" symbolic \" ."}{"idx": 26782, "node_name": "name", "Dec": "the name of the permission ; must be \" hard \" or \" symbolic \" ."}{"idx": 26783, "node_name": "actions", "Dec": "the actions for the permission ; must be the empty string or null"}{"idx": 26786, "node_name": "file", "Dec": "a string identifying the file or null if not known ."}{"idx": 26788, "node_name": "file", "Dec": "a string identifying the file or null if not known ."}{"idx": 26789, "node_name": "other", "Dec": "a string identifying the other file or null if not known ."}{"idx": 26790, "node_name": "reason", "Dec": "a reason message with additional information or null"}{"idx": 26793, "node_name": "file", "Dec": "a string identifying the file or null if not known"}{"idx": 26796, "node_name": "file", "Dec": "a string identifying the file or null if not known"}{"idx": 26798, "node_name": "file", "Dec": "a string identifying the file or null if not known"}{"idx": 26799, "node_name": "other", "Dec": "a string identifying the other file or null if not known"}{"idx": 26800, "node_name": "reason", "Dec": "a reason message with additional information or null"}{"idx": 26804, "node_name": "first", "Dec": "the path string or initial part of the path string"}{"idx": 26805, "node_name": "more", "Dec": "additional strings to be joined to form the path string"}{"idx": 26807, "node_name": "uri", "Dec": "the uri to convert"}{"idx": 26815, "node_name": "index", "Dec": "the index of the element"}{"idx": 26817, "node_name": "beginindex", "Dec": "the index of the first element , inclusive"}{"idx": 26818, "node_name": "endindex", "Dec": "the index of the last element , exclusive"}{"idx": 26820, "node_name": "other", "Dec": "the given path"}{"idx": 26822, "node_name": "other", "Dec": "the given path string"}{"idx": 26824, "node_name": "other", "Dec": "the given path"}{"idx": 26826, "node_name": "other", "Dec": "the given path string"}{"idx": 26829, "node_name": "other", "Dec": "the path to resolve against this path"}{"idx": 26831, "node_name": "other", "Dec": "the path string to resolve against this path"}{"idx": 26833, "node_name": "other", "Dec": "the path to resolve against this path's parent"}{"idx": 26835, "node_name": "other", "Dec": "the path string to resolve against this path's parent"}{"idx": 26837, "node_name": "other", "Dec": "the path to relativize against this path"}{"idx": 26841, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26844, "node_name": "watcher", "Dec": "the watch service to which this object is to be registered"}{"idx": 26845, "node_name": "events", "Dec": "the events for which this object should be registered"}{"idx": 26846, "node_name": "modifiers", "Dec": "the modifiers , if any , that modify how the object is registered"}{"idx": 26848, "node_name": "watcher", "Dec": "the watch service to which this object is to be registered"}{"idx": 26849, "node_name": "events", "Dec": "the events for which this object should be registered"}{"idx": 26852, "node_name": "other", "Dec": "the path compared to this path ."}{"idx": 26854, "node_name": "other", "Dec": "the object to which this object is to be compared"}{"idx": 26859, "node_name": "path", "Dec": "the path to match"}{"idx": 26862, "node_name": "first", "Dec": "the path string or initial part of the path string"}{"idx": 26863, "node_name": "more", "Dec": "additional strings to be joined to form the path string"}{"idx": 26865, "node_name": "uri", "Dec": "the uri to convert"}{"idx": 26869, "node_name": "msg", "Dec": "the detail message"}{"idx": 26873, "node_name": "msg", "Dec": "the detail message"}{"idx": 26878, "node_name": "path", "Dec": "the path to the directory to open"}{"idx": 26879, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26881, "node_name": "path", "Dec": "the path of the file to open or create"}{"idx": 26882, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26883, "node_name": "attrs", "Dec": "an optional list of attributes to set atomically when creating the file"}{"idx": 26885, "node_name": "path", "Dec": "the path of the file to delete"}{"idx": 26887, "node_name": "path", "Dec": "the path of the directory to delete"}{"idx": 26889, "node_name": "srcpath", "Dec": "the name of the file to move"}{"idx": 26890, "node_name": "targetdir", "Dec": "the destination directory"}{"idx": 26891, "node_name": "targetpath", "Dec": "the name to give the file in the destination directory"}{"idx": 26893, "node_name": "type", "Dec": "the class object corresponding to the file attribute view"}{"idx": 26895, "node_name": "path", "Dec": "the path of the file"}{"idx": 26896, "node_name": "type", "Dec": "the class object corresponding to the file attribute view"}{"idx": 26897, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26901, "node_name": "dir", "Dec": "a reference to the directory"}{"idx": 26902, "node_name": "attrs", "Dec": "the directory's basic attributes"}{"idx": 26904, "node_name": "file", "Dec": "a reference to the file"}{"idx": 26905, "node_name": "attrs", "Dec": "the file's basic attributes"}{"idx": 26907, "node_name": "file", "Dec": "a reference to the file"}{"idx": 26908, "node_name": "exc", "Dec": "the i / o exception that prevented the file from being visited"}{"idx": 26910, "node_name": "dir", "Dec": "a reference to the directory"}{"idx": 26911, "node_name": "exc", "Dec": "null if the iteration of the directory completes without an error ; otherwise the i / o exception that caused the iteration of the directory to complete prematurely"}{"idx": 26917, "node_name": "uri", "Dec": "uri reference"}{"idx": 26918, "node_name": "env", "Dec": "a map of provider specific properties to configure the file system ; may be empty"}{"idx": 26920, "node_name": "uri", "Dec": "uri reference"}{"idx": 26922, "node_name": "uri", "Dec": "the uri to convert"}{"idx": 26924, "node_name": "path", "Dec": "the path to the file"}{"idx": 26925, "node_name": "env", "Dec": "a map of provider specific properties to configure the file system ; may be empty"}{"idx": 26927, "node_name": "path", "Dec": "the path to the file to open"}{"idx": 26928, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26930, "node_name": "path", "Dec": "the path to the file to open or create"}{"idx": 26931, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26933, "node_name": "path", "Dec": "the path of the file to open or create"}{"idx": 26934, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26935, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the file"}{"idx": 26937, "node_name": "path", "Dec": "the path of the file to open or create"}{"idx": 26938, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26939, "node_name": "executor", "Dec": "the thread pool or null to associate the channel with the default thread pool"}{"idx": 26940, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the file"}{"idx": 26942, "node_name": "path", "Dec": "the path to the file to open or create"}{"idx": 26943, "node_name": "options", "Dec": "options specifying how the file is opened"}{"idx": 26944, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the file"}{"idx": 26946, "node_name": "dir", "Dec": "the path to the directory"}{"idx": 26947, "node_name": "filter", "Dec": "the directory stream filter"}{"idx": 26949, "node_name": "dir", "Dec": "the directory to create"}{"idx": 26950, "node_name": "attrs", "Dec": "an optional list of file attributes to set atomically when creating the directory"}{"idx": 26952, "node_name": "link", "Dec": "the path of the symbolic link to create"}{"idx": 26953, "node_name": "target", "Dec": "the target of the symbolic link"}{"idx": 26954, "node_name": "attrs", "Dec": "the array of attributes to set atomically when creating the symbolic link"}{"idx": 26956, "node_name": "link", "Dec": "the link ( directory entry ) to create"}{"idx": 26957, "node_name": "existing", "Dec": "a path to an existing file"}{"idx": 26959, "node_name": "path", "Dec": "the path to the file to delete"}{"idx": 26961, "node_name": "path", "Dec": "the path to the file to delete"}{"idx": 26963, "node_name": "link", "Dec": "the path to the symbolic link"}{"idx": 26965, "node_name": "source", "Dec": "the path to the file to copy"}{"idx": 26966, "node_name": "target", "Dec": "the path to the target file"}{"idx": 26967, "node_name": "options", "Dec": "options specifying how the copy should be done"}{"idx": 26969, "node_name": "source", "Dec": "the path to the file to move"}{"idx": 26970, "node_name": "target", "Dec": "the path to the target file"}{"idx": 26971, "node_name": "options", "Dec": "options specifying how the move should be done"}{"idx": 26973, "node_name": "path", "Dec": "one path to the file"}{"idx": 26974, "node_name": "path2", "Dec": "the other path"}{"idx": 26976, "node_name": "path", "Dec": "the path to the file to test"}{"idx": 26978, "node_name": "path", "Dec": "the path to the file"}{"idx": 26980, "node_name": "path", "Dec": "the path to the file to check"}{"idx": 26981, "node_name": "modes", "Dec": "the access modes to check ; may have zero elements"}{"idx": 26983, "node_name": "path", "Dec": "the path to the file"}{"idx": 26984, "node_name": "type", "Dec": "the class object corresponding to the file attribute view"}{"idx": 26985, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26987, "node_name": "path", "Dec": "the path to the file"}{"idx": 26988, "node_name": "type", "Dec": "the class of the file attributes required to read"}{"idx": 26989, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26991, "node_name": "path", "Dec": "the path to the file"}{"idx": 26992, "node_name": "attributes", "Dec": "the attributes to read"}{"idx": 26993, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 26995, "node_name": "path", "Dec": "the path to the file"}{"idx": 26996, "node_name": "attribute", "Dec": "the attribute to set"}{"idx": 26997, "node_name": "value", "Dec": "the attribute value"}{"idx": 26998, "node_name": "options", "Dec": "options indicating how symbolic links are handled"}{"idx": 27002, "node_name": "path", "Dec": "the path to the file to probe"}{"idx": 27006, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 27010, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 27018, "node_name": "watcher", "Dec": "the watch service to which this object is to be registered"}{"idx": 27019, "node_name": "events", "Dec": "the events for which this object should be registered"}{"idx": 27020, "node_name": "modifiers", "Dec": "the modifiers , if any , that modify how the object is registered"}{"idx": 27022, "node_name": "watcher", "Dec": "the watch service to which this object is to be registered"}{"idx": 27023, "node_name": "events", "Dec": "the events for which this object should be registered"}{"idx": 27043, "node_name": "timeout", "Dec": "how to wait before giving up , in units of unit"}{"idx": 27044, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 27048, "node_name": "capacity", "Dec": "the new buffer's capacity , in floats"}{"idx": 27050, "node_name": "array", "Dec": "the array that will back the new buffer"}{"idx": 27051, "node_name": "offset", "Dec": "the offset of the subarray to be used ; must be non-negative and no larger than array.length . the new buffer's position will be set to this value ."}{"idx": 27052, "node_name": "length", "Dec": "the length of the subarray to be used ; must be non-negative and no larger than array.length"}{"idx": 27054, "node_name": "array", "Dec": "the array that will back this buffer"}{"idx": 27057, "node_name": "index", "Dec": "the position in this buffer at which the content of the new buffer will start ; must be non-negative and no larger than limit()"}{"idx": 27058, "node_name": "length", "Dec": "the number of elements the new buffer will contain ; must be non-negative and no larger than limit()"}{"idx": 27063, "node_name": "f", "Dec": "the float to be written"}{"idx": 27065, "node_name": "index", "Dec": "the index from which the float will be read"}{"idx": 27067, "node_name": "index", "Dec": "the index at which the float will be written"}{"idx": 27068, "node_name": "f", "Dec": "the float value to be written"}{"idx": 27070, "node_name": "dst", "Dec": "the array into which floats are to be written"}{"idx": 27071, "node_name": "offset", "Dec": "the offset within the array of the first float to be written ; must be non-negative and no larger than dst.length"}{"idx": 27072, "node_name": "length", "Dec": "the maximum number of floats to be written to the given array ; must be non-negative and no larger than dst.length"}{"idx": 27074, "node_name": "dst", "Dec": "the destination array"}{"idx": 27076, "node_name": "index", "Dec": "the index in this buffer from which the first float will be read ; must be non-negative and less than limit()"}{"idx": 27077, "node_name": "dst", "Dec": "the destination array"}{"idx": 27078, "node_name": "offset", "Dec": "the offset within the array of the first float to be written ; must be non-negative and less than dst.length"}{"idx": 27079, "node_name": "length", "Dec": "the number of floats to be written to the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 27081, "node_name": "index", "Dec": "the index in this buffer from which the first float will be read ; must be non-negative and less than limit()"}{"idx": 27082, "node_name": "dst", "Dec": "the destination array"}{"idx": 27084, "node_name": "src", "Dec": "the source buffer from which floats are to be read ; must not be this buffer"}{"idx": 27086, "node_name": "src", "Dec": "the array from which floats are to be read"}{"idx": 27087, "node_name": "offset", "Dec": "the offset within the array of the first float to be read ; must be non-negative and no larger than src.length"}{"idx": 27088, "node_name": "length", "Dec": "the number of floats to be read from the given array ; must be non-negative and no larger than src.length"}{"idx": 27090, "node_name": "src", "Dec": "the source array"}{"idx": 27092, "node_name": "index", "Dec": "the index in this buffer at which the first float will be written ; must be non-negative and less than limit()"}{"idx": 27093, "node_name": "src", "Dec": "the array from which floats are to be read"}{"idx": 27094, "node_name": "offset", "Dec": "the offset within the array of the first float to be read ; must be non-negative and less than src.length"}{"idx": 27095, "node_name": "length", "Dec": "the number of floats to be read from the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 27097, "node_name": "index", "Dec": "the index in this buffer at which the first float will be written ; must be non-negative and less than limit()"}{"idx": 27098, "node_name": "src", "Dec": "the array from which floats are to be read"}{"idx": 27103, "node_name": "newposition", "Dec": "the new position value ; must be non-negative and no larger than the current limit"}{"idx": 27105, "node_name": "newlimit", "Dec": "the new limit value ; must be non-negative and no larger than this buffer's capacity"}{"idx": 27116, "node_name": "ob", "Dec": "the object to which this buffer is to be compared"}{"idx": 27118, "node_name": "that", "Dec": "the object to be compared ."}{"idx": 27120, "node_name": "that", "Dec": "the byte buffer to be tested for a mismatch with this buffer"}{"idx": 27124, "node_name": "capacity", "Dec": "the new buffer's capacity , in ints"}{"idx": 27126, "node_name": "array", "Dec": "the array that will back the new buffer"}{"idx": 27127, "node_name": "offset", "Dec": "the offset of the subarray to be used ; must be non-negative and no larger than array.length . the new buffer's position will be set to this value ."}{"idx": 27128, "node_name": "length", "Dec": "the length of the subarray to be used ; must be non-negative and no larger than array.length"}{"idx": 27130, "node_name": "array", "Dec": "the array that will back this buffer"}{"idx": 27133, "node_name": "index", "Dec": "the position in this buffer at which the content of the new buffer will start ; must be non-negative and no larger than limit()"}{"idx": 27134, "node_name": "length", "Dec": "the number of elements the new buffer will contain ; must be non-negative and no larger than limit()"}{"idx": 27139, "node_name": "i", "Dec": "the int to be written"}{"idx": 27141, "node_name": "index", "Dec": "the index from which the int will be read"}{"idx": 27143, "node_name": "index", "Dec": "the index at which the int will be written"}{"idx": 27144, "node_name": "i", "Dec": "the int value to be written"}{"idx": 27146, "node_name": "dst", "Dec": "the array into which ints are to be written"}{"idx": 27147, "node_name": "offset", "Dec": "the offset within the array of the first int to be written ; must be non-negative and no larger than dst.length"}{"idx": 27148, "node_name": "length", "Dec": "the maximum number of ints to be written to the given array ; must be non-negative and no larger than dst.length"}{"idx": 27150, "node_name": "dst", "Dec": "the destination array"}{"idx": 27152, "node_name": "index", "Dec": "the index in this buffer from which the first int will be read ; must be non-negative and less than limit()"}{"idx": 27153, "node_name": "dst", "Dec": "the destination array"}{"idx": 27154, "node_name": "offset", "Dec": "the offset within the array of the first int to be written ; must be non-negative and less than dst.length"}{"idx": 27155, "node_name": "length", "Dec": "the number of ints to be written to the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 27157, "node_name": "index", "Dec": "the index in this buffer from which the first int will be read ; must be non-negative and less than limit()"}{"idx": 27158, "node_name": "dst", "Dec": "the destination array"}{"idx": 27160, "node_name": "src", "Dec": "the source buffer from which ints are to be read ; must not be this buffer"}{"idx": 27162, "node_name": "src", "Dec": "the array from which ints are to be read"}{"idx": 27163, "node_name": "offset", "Dec": "the offset within the array of the first int to be read ; must be non-negative and no larger than src.length"}{"idx": 27164, "node_name": "length", "Dec": "the number of ints to be read from the given array ; must be non-negative and no larger than src.length"}{"idx": 27166, "node_name": "src", "Dec": "the source array"}{"idx": 27168, "node_name": "index", "Dec": "the index in this buffer at which the first int will be written ; must be non-negative and less than limit()"}{"idx": 27169, "node_name": "src", "Dec": "the array from which ints are to be read"}{"idx": 27170, "node_name": "offset", "Dec": "the offset within the array of the first int to be read ; must be non-negative and less than src.length"}{"idx": 27171, "node_name": "length", "Dec": "the number of ints to be read from the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 27173, "node_name": "index", "Dec": "the index in this buffer at which the first int will be written ; must be non-negative and less than limit()"}{"idx": 27174, "node_name": "src", "Dec": "the array from which ints are to be read"}{"idx": 27179, "node_name": "newposition", "Dec": "the new position value ; must be non-negative and no larger than the current limit"}{"idx": 27181, "node_name": "newlimit", "Dec": "the new limit value ; must be non-negative and no larger than this buffer's capacity"}{"idx": 27192, "node_name": "ob", "Dec": "the object to which this buffer is to be compared"}{"idx": 27194, "node_name": "that", "Dec": "the object to be compared ."}{"idx": 27196, "node_name": "that", "Dec": "the byte buffer to be tested for a mismatch with this buffer"}{"idx": 27202, "node_name": "capacity", "Dec": "the new buffer's capacity , in longs"}{"idx": 27204, "node_name": "array", "Dec": "the array that will back the new buffer"}{"idx": 27205, "node_name": "offset", "Dec": "the offset of the subarray to be used ; must be non-negative and no larger than array.length . the new buffer's position will be set to this value ."}{"idx": 27206, "node_name": "length", "Dec": "the length of the subarray to be used ; must be non-negative and no larger than array.length"}{"idx": 27208, "node_name": "array", "Dec": "the array that will back this buffer"}{"idx": 27211, "node_name": "index", "Dec": "the position in this buffer at which the content of the new buffer will start ; must be non-negative and no larger than limit()"}{"idx": 27212, "node_name": "length", "Dec": "the number of elements the new buffer will contain ; must be non-negative and no larger than limit()"}{"idx": 27217, "node_name": "l", "Dec": "the long to be written"}{"idx": 27219, "node_name": "index", "Dec": "the index from which the long will be read"}{"idx": 27221, "node_name": "index", "Dec": "the index at which the long will be written"}{"idx": 27222, "node_name": "l", "Dec": "the long value to be written"}{"idx": 27224, "node_name": "dst", "Dec": "the array into which longs are to be written"}{"idx": 27225, "node_name": "offset", "Dec": "the offset within the array of the first long to be written ; must be non-negative and no larger than dst.length"}{"idx": 27226, "node_name": "length", "Dec": "the maximum number of longs to be written to the given array ; must be non-negative and no larger than dst.length"}{"idx": 27228, "node_name": "dst", "Dec": "the destination array"}{"idx": 27230, "node_name": "index", "Dec": "the index in this buffer from which the first long will be read ; must be non-negative and less than limit()"}{"idx": 27231, "node_name": "dst", "Dec": "the destination array"}{"idx": 27232, "node_name": "offset", "Dec": "the offset within the array of the first long to be written ; must be non-negative and less than dst.length"}{"idx": 27233, "node_name": "length", "Dec": "the number of longs to be written to the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 27235, "node_name": "index", "Dec": "the index in this buffer from which the first long will be read ; must be non-negative and less than limit()"}{"idx": 27236, "node_name": "dst", "Dec": "the destination array"}{"idx": 27238, "node_name": "src", "Dec": "the source buffer from which longs are to be read ; must not be this buffer"}{"idx": 27240, "node_name": "src", "Dec": "the array from which longs are to be read"}{"idx": 27241, "node_name": "offset", "Dec": "the offset within the array of the first long to be read ; must be non-negative and no larger than src.length"}{"idx": 27242, "node_name": "length", "Dec": "the number of longs to be read from the given array ; must be non-negative and no larger than src.length"}{"idx": 27244, "node_name": "src", "Dec": "the source array"}{"idx": 27246, "node_name": "index", "Dec": "the index in this buffer at which the first long will be written ; must be non-negative and less than limit()"}{"idx": 27247, "node_name": "src", "Dec": "the array from which longs are to be read"}{"idx": 27248, "node_name": "offset", "Dec": "the offset within the array of the first long to be read ; must be non-negative and less than src.length"}{"idx": 27249, "node_name": "length", "Dec": "the number of longs to be read from the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 27251, "node_name": "index", "Dec": "the index in this buffer at which the first long will be written ; must be non-negative and less than limit()"}{"idx": 27252, "node_name": "src", "Dec": "the array from which longs are to be read"}{"idx": 27257, "node_name": "newposition", "Dec": "the new position value ; must be non-negative and no larger than the current limit"}{"idx": 27259, "node_name": "newlimit", "Dec": "the new limit value ; must be non-negative and no larger than this buffer's capacity"}{"idx": 27270, "node_name": "ob", "Dec": "the object to which this buffer is to be compared"}{"idx": 27272, "node_name": "that", "Dec": "the object to be compared ."}{"idx": 27274, "node_name": "that", "Dec": "the byte buffer to be tested for a mismatch with this buffer"}{"idx": 27281, "node_name": "index", "Dec": "the index of the first byte in the buffer region that is to be written back to storage ; must be non-negative and less than limit()"}{"idx": 27282, "node_name": "length", "Dec": "the length of the region in bytes ; must be non-negative and no larger than limit()"}{"idx": 27284, "node_name": "newposition", "Dec": "the new position value ; must be non-negative and no larger than the current limit"}{"idx": 27286, "node_name": "newlimit", "Dec": "the new limit value ; must be non-negative and no larger than this buffer's capacity"}{"idx": 27296, "node_name": "capacity", "Dec": "the new buffer's capacity , in shorts"}{"idx": 27298, "node_name": "array", "Dec": "the array that will back the new buffer"}{"idx": 27299, "node_name": "offset", "Dec": "the offset of the subarray to be used ; must be non-negative and no larger than array.length . the new buffer's position will be set to this value ."}{"idx": 27300, "node_name": "length", "Dec": "the length of the subarray to be used ; must be non-negative and no larger than array.length"}{"idx": 27302, "node_name": "array", "Dec": "the array that will back this buffer"}{"idx": 27305, "node_name": "index", "Dec": "the position in this buffer at which the content of the new buffer will start ; must be non-negative and no larger than limit()"}{"idx": 27306, "node_name": "length", "Dec": "the number of elements the new buffer will contain ; must be non-negative and no larger than limit()"}{"idx": 27311, "node_name": "s", "Dec": "the short to be written"}{"idx": 27313, "node_name": "index", "Dec": "the index from which the short will be read"}{"idx": 27315, "node_name": "index", "Dec": "the index at which the short will be written"}{"idx": 27316, "node_name": "s", "Dec": "the short value to be written"}{"idx": 27318, "node_name": "dst", "Dec": "the array into which shorts are to be written"}{"idx": 27319, "node_name": "offset", "Dec": "the offset within the array of the first short to be written ; must be non-negative and no larger than dst.length"}{"idx": 27320, "node_name": "length", "Dec": "the maximum number of shorts to be written to the given array ; must be non-negative and no larger than dst.length"}{"idx": 27322, "node_name": "dst", "Dec": "the destination array"}{"idx": 27324, "node_name": "index", "Dec": "the index in this buffer from which the first short will be read ; must be non-negative and less than limit()"}{"idx": 27325, "node_name": "dst", "Dec": "the destination array"}{"idx": 27326, "node_name": "offset", "Dec": "the offset within the array of the first short to be written ; must be non-negative and less than dst.length"}{"idx": 27327, "node_name": "length", "Dec": "the number of shorts to be written to the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 27329, "node_name": "index", "Dec": "the index in this buffer from which the first short will be read ; must be non-negative and less than limit()"}{"idx": 27330, "node_name": "dst", "Dec": "the destination array"}{"idx": 27332, "node_name": "src", "Dec": "the source buffer from which shorts are to be read ; must not be this buffer"}{"idx": 27334, "node_name": "src", "Dec": "the array from which shorts are to be read"}{"idx": 27335, "node_name": "offset", "Dec": "the offset within the array of the first short to be read ; must be non-negative and no larger than src.length"}{"idx": 27336, "node_name": "length", "Dec": "the number of shorts to be read from the given array ; must be non-negative and no larger than src.length"}{"idx": 27338, "node_name": "src", "Dec": "the source array"}{"idx": 27340, "node_name": "index", "Dec": "the index in this buffer at which the first short will be written ; must be non-negative and less than limit()"}{"idx": 27341, "node_name": "src", "Dec": "the array from which shorts are to be read"}{"idx": 27342, "node_name": "offset", "Dec": "the offset within the array of the first short to be read ; must be non-negative and less than src.length"}{"idx": 27343, "node_name": "length", "Dec": "the number of shorts to be read from the given array ; must be non-negative and no larger than the smaller of limit()"}{"idx": 27345, "node_name": "index", "Dec": "the index in this buffer at which the first short will be written ; must be non-negative and less than limit()"}{"idx": 27346, "node_name": "src", "Dec": "the array from which shorts are to be read"}{"idx": 27351, "node_name": "newposition", "Dec": "the new position value ; must be non-negative and no larger than the current limit"}{"idx": 27353, "node_name": "newlimit", "Dec": "the new limit value ; must be non-negative and no larger than this buffer's capacity"}{"idx": 27364, "node_name": "ob", "Dec": "the object to which this buffer is to be compared"}{"idx": 27366, "node_name": "that", "Dec": "the object to be compared ."}{"idx": 27368, "node_name": "that", "Dec": "the byte buffer to be tested for a mismatch with this buffer"}{"idx": 27372, "node_name": "s", "Dec": "the detail message"}{"idx": 27374, "node_name": "s", "Dec": "the detail message"}{"idx": 27375, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27378, "node_name": "location", "Dec": "the location for classes for this object"}{"idx": 27379, "node_name": "data", "Dec": "the object's initialization data"}{"idx": 27380, "node_name": "port", "Dec": "the port on which the object is exported ( an anonymous port is used if port=0 )"}{"idx": 27381, "node_name": "restart", "Dec": "if true , the object is restarted ( reactivated ) when either the activator is restarted or the object's activation group is restarted after an unexpected crash ; if false , the object is only activated on demand . specifying restart to be true does not force an initial immediate activation of a newly registered object ; initial activation is lazy ."}{"idx": 27383, "node_name": "location", "Dec": "the location for classes for this object"}{"idx": 27384, "node_name": "data", "Dec": "the object's initialization data"}{"idx": 27385, "node_name": "restart", "Dec": "if true , the object is restarted ( reactivated ) when either the activator is restarted or the object's activation group is restarted after an unexpected crash ; if false , the object is only activated on demand . specifying restart to be true does not force an initial immediate activation of a newly registered object ; initial activation is lazy ."}{"idx": 27386, "node_name": "port", "Dec": "the port on which the object is exported ( an anonymous port is used if port=0 )"}{"idx": 27387, "node_name": "csf", "Dec": "the client-side socket factory for making calls to the remote object"}{"idx": 27388, "node_name": "ssf", "Dec": "the server-side socket factory for receiving remote calls"}{"idx": 27390, "node_name": "id", "Dec": "activation identifier for the object"}{"idx": 27391, "node_name": "port", "Dec": "the port number on which the object is exported"}{"idx": 27393, "node_name": "id", "Dec": "activation identifier for the object"}{"idx": 27394, "node_name": "port", "Dec": "the port number on which the object is exported"}{"idx": 27395, "node_name": "csf", "Dec": "the client-side socket factory for making calls to the remote object"}{"idx": 27396, "node_name": "ssf", "Dec": "the server-side socket factory for receiving remote calls"}{"idx": 27399, "node_name": "desc", "Dec": "the object's descriptor"}{"idx": 27401, "node_name": "id", "Dec": "the object's activation identifier"}{"idx": 27403, "node_name": "id", "Dec": "the object's activation identifier"}{"idx": 27405, "node_name": "obj", "Dec": "the object being exported"}{"idx": 27406, "node_name": "location", "Dec": "the object's code location"}{"idx": 27407, "node_name": "data", "Dec": "the object's bootstrapping data"}{"idx": 27408, "node_name": "restart", "Dec": "if true , the object is restarted ( reactivated ) when either the activator is restarted or the object's activation group is restarted after an unexpected crash ; if false , the object is only activated on demand . specifying restart to be true does not force an initial immediate activation of a newly registered object ; initial activation is lazy ."}{"idx": 27409, "node_name": "port", "Dec": "the port on which the object is exported ( an anonymous port is used if port=0 )"}{"idx": 27411, "node_name": "obj", "Dec": "the object being exported"}{"idx": 27412, "node_name": "location", "Dec": "the object's code location"}{"idx": 27413, "node_name": "data", "Dec": "the object's bootstrapping data"}{"idx": 27414, "node_name": "restart", "Dec": "if true , the object is restarted ( reactivated ) when either the activator is restarted or the object's activation group is restarted after an unexpected crash ; if false , the object is only activated on demand . specifying restart to be true does not force an initial immediate activation of a newly registered object ; initial activation is lazy ."}{"idx": 27415, "node_name": "port", "Dec": "the port on which the object is exported ( an anonymous port is used if port=0 )"}{"idx": 27416, "node_name": "csf", "Dec": "the client-side socket factory for making calls to the remote object"}{"idx": 27417, "node_name": "ssf", "Dec": "the server-side socket factory for receiving remote calls"}{"idx": 27419, "node_name": "obj", "Dec": "the remote object implementation"}{"idx": 27420, "node_name": "id", "Dec": "the object's activation identifier"}{"idx": 27421, "node_name": "port", "Dec": "the port on which the object is exported ( an anonymous port is used if port=0 )"}{"idx": 27423, "node_name": "obj", "Dec": "the remote object implementation"}{"idx": 27424, "node_name": "id", "Dec": "the object's activation identifier"}{"idx": 27425, "node_name": "port", "Dec": "the port on which the object is exported ( an anonymous port is used if port=0 )"}{"idx": 27426, "node_name": "csf", "Dec": "the client-side socket factory for making calls to the remote object"}{"idx": 27427, "node_name": "ssf", "Dec": "the server-side socket factory for receiving remote calls"}{"idx": 27429, "node_name": "obj", "Dec": "the remote object to be unexported"}{"idx": 27430, "node_name": "force", "Dec": "if true , unexports the object even if there are pending or in-progress calls ; if false , only unexports the object if there are no pending or in-progress calls"}{"idx": 27433, "node_name": "s", "Dec": "the detail message"}{"idx": 27435, "node_name": "s", "Dec": "the detail message"}{"idx": 27436, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27439, "node_name": "classname", "Dec": "the object's fully package qualified class name"}{"idx": 27440, "node_name": "location", "Dec": "the object's code location ( from where the class is loaded )"}{"idx": 27441, "node_name": "data", "Dec": "the object's initialization ( activation ) data contained in marshalled form ."}{"idx": 27443, "node_name": "classname", "Dec": "the object's fully package qualified class name"}{"idx": 27444, "node_name": "location", "Dec": "the object's code location ( from where the class is loaded )"}{"idx": 27445, "node_name": "data", "Dec": "the object's initialization ( activation ) data contained in marshalled form ."}{"idx": 27446, "node_name": "restart", "Dec": "if true , the object is restarted ( reactivated ) when either the activator is restarted or the object's activation group is restarted after an unexpected crash ; if false , the object is only activated on demand . specifying restart to be true does not force an initial immediate activation of a newly registered object ; initial activation is lazy ."}{"idx": 27448, "node_name": "groupid", "Dec": "the group's identifier ( obtained from registering activationsystem.registergroup method ) . the group indicates the vm in which the object should be activated ."}{"idx": 27449, "node_name": "classname", "Dec": "the object's fully package-qualified class name"}{"idx": 27450, "node_name": "location", "Dec": "the object's code location ( from where the class is loaded )"}{"idx": 27451, "node_name": "data", "Dec": "the object's initialization ( activation ) data contained in marshalled form ."}{"idx": 27453, "node_name": "groupid", "Dec": "the group's identifier ( obtained from registering activationsystem.registergroup method ) . the group indicates the vm in which the object should be activated ."}{"idx": 27454, "node_name": "classname", "Dec": "the object's fully package-qualified class name"}{"idx": 27455, "node_name": "location", "Dec": "the object's code location ( from where the class is loaded )"}{"idx": 27456, "node_name": "data", "Dec": "the object's initialization ( activation ) data contained in marshalled form ."}{"idx": 27457, "node_name": "restart", "Dec": "if true , the object is restarted ( reactivated ) when either the activator is restarted or the object's activation group is restarted after an unexpected crash ; if false , the object is only activated on demand . specifying restart to be true does not force an initial immediate activation of a newly registered object ; initial activation is lazy ."}{"idx": 27464, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 27470, "node_name": "s", "Dec": "the detail message"}{"idx": 27472, "node_name": "s", "Dec": "the detail message"}{"idx": 27473, "node_name": "cause", "Dec": "the cause"}{"idx": 27478, "node_name": "groupid", "Dec": "the group's identifier"}{"idx": 27480, "node_name": "id", "Dec": "the object's activation identifier"}{"idx": 27482, "node_name": "id", "Dec": "the object's identifier"}{"idx": 27483, "node_name": "obj", "Dec": "the remote object implementation"}{"idx": 27485, "node_name": "id", "Dec": "the activation group's identifier"}{"idx": 27486, "node_name": "desc", "Dec": "the activation group's descriptor"}{"idx": 27487, "node_name": "incarnation", "Dec": "the group's incarnation number ( zero on group's initial creation )"}{"idx": 27490, "node_name": "system", "Dec": "remote reference to the activationsystem"}{"idx": 27493, "node_name": "id", "Dec": "the object's identifier"}{"idx": 27494, "node_name": "mobj", "Dec": "a marshalled object containing the remote object's stub"}{"idx": 27498, "node_name": "cmdpath", "Dec": "the name of the java executable , including the full path , or null , meaning \" use rmid's default \" . the named program must be able to accept multiple -dpropname=value options ( as documented for the \" java \" tool )"}{"idx": 27499, "node_name": "argv", "Dec": "extra options which will be used in creating the activationgroup . null has the same effect as an empty list ."}{"idx": 27503, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 27507, "node_name": "overrides", "Dec": "the set of properties to set when the group is recreated ."}{"idx": 27508, "node_name": "cmd", "Dec": "the controlling options for executing the vm in another process ( or null ) ."}{"idx": 27510, "node_name": "classname", "Dec": "the group's package qualified class name or null . a null group class name indicates the system's default activationgroup implementation ."}{"idx": 27511, "node_name": "location", "Dec": "the location from where to load the group's class"}{"idx": 27512, "node_name": "data", "Dec": "the group's initialization data contained in marshalled form ( could contain properties , for example )"}{"idx": 27513, "node_name": "overrides", "Dec": "a properties map which will override those set by default in the subprocess environment ( will be translated into -d options ) , or null ."}{"idx": 27514, "node_name": "cmd", "Dec": "the controlling options for executing the vm in another process ( or null ) ."}{"idx": 27521, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 27525, "node_name": "system", "Dec": "the group's activation system"}{"idx": 27529, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 27532, "node_name": "ref", "Dec": "a remote ref"}{"idx": 27534, "node_name": "id", "Dec": "an activation identifier"}{"idx": 27535, "node_name": "desc", "Dec": "an activation descriptor"}{"idx": 27538, "node_name": "activator", "Dec": "reference to the activator responsible for activating the object"}{"idx": 27540, "node_name": "force", "Dec": "if true , forces the activator to contact the group when activating the object ( instead of returning a cached reference ); if false , returning a cached value is acceptable ."}{"idx": 27543, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 27546, "node_name": "id", "Dec": "the object's activation identifier"}{"idx": 27547, "node_name": "desc", "Dec": "the object's descriptor"}{"idx": 27550, "node_name": "id", "Dec": "the object's activation identifier"}{"idx": 27552, "node_name": "id", "Dec": "the active object's id"}{"idx": 27553, "node_name": "obj", "Dec": "the marshalled form of the object's stub"}{"idx": 27555, "node_name": "id", "Dec": "the group's id"}{"idx": 27556, "node_name": "incarnation", "Dec": "the group's incarnation number"}{"idx": 27560, "node_name": "desc", "Dec": "the object's activation descriptor"}{"idx": 27562, "node_name": "id", "Dec": "the object's activation id ( from previous registration )"}{"idx": 27564, "node_name": "desc", "Dec": "the group's descriptor"}{"idx": 27566, "node_name": "id", "Dec": "the activation group's identifier"}{"idx": 27567, "node_name": "group", "Dec": "the group's instantiator"}{"idx": 27568, "node_name": "incarnation", "Dec": "the group's incarnation number"}{"idx": 27570, "node_name": "id", "Dec": "the activation group's identifier"}{"idx": 27573, "node_name": "id", "Dec": "the activation identifier for the activatable object"}{"idx": 27574, "node_name": "desc", "Dec": "the activation descriptor for the activatable object"}{"idx": 27576, "node_name": "id", "Dec": "the activation group identifier for the activation group"}{"idx": 27577, "node_name": "desc", "Dec": "the activation group descriptor for the activation group"}{"idx": 27579, "node_name": "id", "Dec": "the activation identifier for the activatable object"}{"idx": 27581, "node_name": "id", "Dec": "the activation group identifier for the group"}{"idx": 27584, "node_name": "id", "Dec": "the activation identifier for the object being activated"}{"idx": 27585, "node_name": "force", "Dec": "if true , the activator contacts the group to obtain the remote object's reference ; if false , returning the cached value is allowed ."}{"idx": 27588, "node_name": "s", "Dec": "the detail message"}{"idx": 27591, "node_name": "s", "Dec": "the detail message"}{"idx": 27595, "node_name": "s", "Dec": "the detail message"}{"idx": 27598, "node_name": "s", "Dec": "the detail message"}{"idx": 27600, "node_name": "s", "Dec": "the detail message"}{"idx": 27601, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27604, "node_name": "s", "Dec": "the detail message"}{"idx": 27606, "node_name": "s", "Dec": "the detail message"}{"idx": 27607, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27610, "node_name": "ids", "Dec": "ids of objects to mark as referenced by calling client"}{"idx": 27611, "node_name": "sequencenum", "Dec": "sequence number"}{"idx": 27612, "node_name": "lease", "Dec": "requested lease"}{"idx": 27614, "node_name": "ids", "Dec": "ids of objects to mark as unreferenced by calling client"}{"idx": 27615, "node_name": "sequencenum", "Dec": "sequence number"}{"idx": 27616, "node_name": "vmid", "Dec": "client vmid"}{"idx": 27617, "node_name": "strong", "Dec": "make ' strong ' clean call"}{"idx": 27620, "node_name": "id", "Dec": "vmid associated with this lease"}{"idx": 27621, "node_name": "duration", "Dec": "lease duration"}{"idx": 27628, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 27632, "node_name": "s", "Dec": "the detail message"}{"idx": 27634, "node_name": "s", "Dec": "the detail message"}{"idx": 27635, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27638, "node_name": "obj", "Dec": "the object to be serialized ( must be serializable )"}{"idx": 27642, "node_name": "obj", "Dec": "the object to compare with this marshalledobject"}{"idx": 27645, "node_name": "name", "Dec": "a name in url format ( without the scheme component )"}{"idx": 27647, "node_name": "name", "Dec": "a name in url format ( without the scheme component )"}{"idx": 27648, "node_name": "obj", "Dec": "a reference for the remote object ( usually a stub )"}{"idx": 27650, "node_name": "name", "Dec": "a name in url format ( without the scheme component )"}{"idx": 27652, "node_name": "name", "Dec": "a name in url format ( without the scheme component )"}{"idx": 27653, "node_name": "obj", "Dec": "new remote object to associate with the name"}{"idx": 27655, "node_name": "name", "Dec": "a registry name in url format ( without the scheme component )"}{"idx": 27658, "node_name": "s", "Dec": "the detail message"}{"idx": 27662, "node_name": "s", "Dec": "the detail message"}{"idx": 27666, "node_name": "port", "Dec": "port on which the registry accepts requests"}{"idx": 27668, "node_name": "host", "Dec": "host for the remote registry"}{"idx": 27670, "node_name": "host", "Dec": "host for the remote registry"}{"idx": 27671, "node_name": "port", "Dec": "port on which the registry accepts requests"}{"idx": 27673, "node_name": "host", "Dec": "host for the remote registry"}{"idx": 27674, "node_name": "port", "Dec": "port on which the registry accepts requests"}{"idx": 27675, "node_name": "csf", "Dec": "client-side socket factory used to make connections to the registry . if csf is null , then the default client-side socket factory will be used in the registry stub ."}{"idx": 27677, "node_name": "port", "Dec": "the port on which the registry accepts requests"}{"idx": 27679, "node_name": "port", "Dec": "port on which the registry accepts requests"}{"idx": 27680, "node_name": "csf", "Dec": "client-side socket factory used to make connections to the registry"}{"idx": 27681, "node_name": "ssf", "Dec": "server-side serversocket factory used to accept connections to the registry"}{"idx": 27685, "node_name": "name", "Dec": "the name for the remote reference to look up"}{"idx": 27687, "node_name": "name", "Dec": "the name to associate with the remote reference"}{"idx": 27688, "node_name": "obj", "Dec": "a reference to a remote object ( usually a stub )"}{"idx": 27690, "node_name": "name", "Dec": "the name of the binding to remove"}{"idx": 27692, "node_name": "name", "Dec": "the name to associate with the remote reference"}{"idx": 27693, "node_name": "obj", "Dec": "a reference to a remote object ( usually a stub )"}{"idx": 27701, "node_name": "s", "Dec": "the detail message"}{"idx": 27703, "node_name": "s", "Dec": "the detail message"}{"idx": 27704, "node_name": "cause", "Dec": "the cause"}{"idx": 27711, "node_name": "s", "Dec": "the detail message"}{"idx": 27713, "node_name": "s", "Dec": "the detail message"}{"idx": 27714, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27723, "node_name": "objnum", "Dec": "object number for well-known object identifier"}{"idx": 27725, "node_name": "out", "Dec": "the objectoutput instance to write this objid to"}{"idx": 27727, "node_name": "in", "Dec": "the objectinput instance to read objid from"}{"idx": 27730, "node_name": "obj", "Dec": "the object to compare this objid to"}{"idx": 27738, "node_name": "newref", "Dec": "remote reference"}{"idx": 27741, "node_name": "obj", "Dec": "the remote object whose stub is needed"}{"idx": 27744, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 27748, "node_name": "ref", "Dec": "the remote ref"}{"idx": 27750, "node_name": "proxy", "Dec": "the proxy instance that invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) was invoked on"}{"idx": 27751, "node_name": "method", "Dec": "invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) instance corresponding to the interface method invoked on the proxy instance"}{"idx": 27752, "node_name": "args", "Dec": "an array of objects containing the values of the arguments passed in invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) invocation on the proxy instance , or null if invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) takes no arguments"}{"idx": 27756, "node_name": "obj", "Dec": "the object that contains the remoteref ( e.g. , the remotestub for the object ."}{"idx": 27757, "node_name": "method", "Dec": "invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long) to be invoked"}{"idx": 27758, "node_name": "params", "Dec": "the parameter list"}{"idx": 27759, "node_name": "opnum", "Dec": "a hash that may be used to represent invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object[],long)"}{"idx": 27761, "node_name": "out", "Dec": "the output stream to which the reference will be serialized"}{"idx": 27764, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 27769, "node_name": "ref", "Dec": "the remote reference"}{"idx": 27772, "node_name": "out", "Dec": "the output stream to which rmi calls should be logged"}{"idx": 27777, "node_name": "codebase", "Dec": "the url to load the class from , or null"}{"idx": 27778, "node_name": "name", "Dec": "the name of the class to load"}{"idx": 27780, "node_name": "codebase", "Dec": "the list of urls ( separated by spaces ) to load the class from , or null"}{"idx": 27781, "node_name": "name", "Dec": "the name of the class to load"}{"idx": 27783, "node_name": "codebase", "Dec": "the list of urls ( separated by spaces ) to load the class from , or null"}{"idx": 27784, "node_name": "name", "Dec": "the name of the class to load"}{"idx": 27785, "node_name": "defaultloader", "Dec": "additional contextual class loader to use , or null"}{"idx": 27787, "node_name": "codebase", "Dec": "the list of urls ( space-separated ) to load classes from , or null"}{"idx": 27788, "node_name": "interfaces", "Dec": "the names of the interfaces for the proxy class to implement"}{"idx": 27789, "node_name": "defaultloader", "Dec": "additional contextual class loader to use , or null"}{"idx": 27791, "node_name": "codebase", "Dec": "the list of urls ( space-separated ) from which the returned class loader will load classes from , or null"}{"idx": 27793, "node_name": "cl", "Dec": "the class to obtain the annotation for"}{"idx": 27798, "node_name": "codebase", "Dec": "the list of urls ( separated by spaces ) to load the class from , or null"}{"idx": 27799, "node_name": "name", "Dec": "the name of the class to load"}{"idx": 27800, "node_name": "defaultloader", "Dec": "additional contextual class loader to use , or null"}{"idx": 27802, "node_name": "codebase", "Dec": "the list of urls ( space-separated ) to load classes from , or null"}{"idx": 27803, "node_name": "interfaces", "Dec": "the names of the interfaces for the proxy class to implement"}{"idx": 27804, "node_name": "defaultloader", "Dec": "additional contextual class loader to use , or null"}{"idx": 27806, "node_name": "codebase", "Dec": "the list of urls ( space-separated ) from which the returned class loader will load classes from , or null"}{"idx": 27808, "node_name": "cl", "Dec": "the class to obtain the annotation for"}{"idx": 27811, "node_name": "host", "Dec": "the host name"}{"idx": 27812, "node_name": "port", "Dec": "the port number"}{"idx": 27815, "node_name": "ex", "Dec": "the exception that occurred during serversocket creation"}{"idx": 27818, "node_name": "port", "Dec": "the port number"}{"idx": 27822, "node_name": "host", "Dec": "the host name"}{"idx": 27823, "node_name": "port", "Dec": "the port number"}{"idx": 27825, "node_name": "port", "Dec": "the port number"}{"idx": 27827, "node_name": "fac", "Dec": "the socket factory"}{"idx": 27831, "node_name": "fh", "Dec": "the failure handler"}{"idx": 27836, "node_name": "s", "Dec": "the detail message ."}{"idx": 27838, "node_name": "s", "Dec": "the detail message ."}{"idx": 27839, "node_name": "cause", "Dec": "the cause"}{"idx": 27845, "node_name": "s", "Dec": "the detail message ."}{"idx": 27854, "node_name": "num", "Dec": "number for well-known uid"}{"idx": 27857, "node_name": "obj", "Dec": "the object to compare this uid to"}{"idx": 27860, "node_name": "out", "Dec": "the dataoutput instance to write this uid to"}{"idx": 27862, "node_name": "in", "Dec": "the datainput instance to read uid from"}{"idx": 27866, "node_name": "port", "Dec": "the port number on which the remote object receives calls ( if port is zero , an anonymous port is chosen )"}{"idx": 27868, "node_name": "port", "Dec": "the port number on which the remote object receives calls ( if port is zero , an anonymous port is chosen )"}{"idx": 27869, "node_name": "csf", "Dec": "the client-side socket factory for making calls to the remote object"}{"idx": 27870, "node_name": "ssf", "Dec": "the server-side socket factory for receiving remote calls"}{"idx": 27873, "node_name": "obj", "Dec": "the remote object to be exported"}{"idx": 27874, "node_name": "port", "Dec": "the port to export the object on"}{"idx": 27876, "node_name": "obj", "Dec": "the remote object to be exported"}{"idx": 27877, "node_name": "port", "Dec": "the port to export the object on"}{"idx": 27878, "node_name": "csf", "Dec": "the client-side socket factory for making calls to the remote object"}{"idx": 27879, "node_name": "ssf", "Dec": "the server-side socket factory for receiving remote calls"}{"idx": 27881, "node_name": "obj", "Dec": "the remote object to be exported"}{"idx": 27882, "node_name": "port", "Dec": "the port to export the object on"}{"idx": 27883, "node_name": "filter", "Dec": "an objectinputfilter applied when deserializing invocation arguments ; may be null"}{"idx": 27885, "node_name": "obj", "Dec": "the remote object to be exported"}{"idx": 27886, "node_name": "port", "Dec": "the port to export the object on"}{"idx": 27887, "node_name": "csf", "Dec": "the client-side socket factory for making calls to the remote object"}{"idx": 27888, "node_name": "ssf", "Dec": "the server-side socket factory for receiving remote calls"}{"idx": 27889, "node_name": "filter", "Dec": "an objectinputfilter applied when deserializing invocation arguments ; may be null"}{"idx": 27891, "node_name": "obj", "Dec": "the remote object to be unexported"}{"idx": 27892, "node_name": "force", "Dec": "if true , unexports the object even if there are pending or in-progress calls ; if false , only unexports the object if there are no pending or in-progress calls"}{"idx": 27897, "node_name": "s", "Dec": "the detail message"}{"idx": 27898, "node_name": "err", "Dec": "the nested error"}{"idx": 27901, "node_name": "s", "Dec": "the detail message"}{"idx": 27903, "node_name": "s", "Dec": "the detail message"}{"idx": 27904, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27908, "node_name": "s", "Dec": "the detail message"}{"idx": 27910, "node_name": "s", "Dec": "the detail message"}{"idx": 27911, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27914, "node_name": "s", "Dec": "the detail message"}{"idx": 27916, "node_name": "s", "Dec": "the detail message"}{"idx": 27917, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27920, "node_name": "s", "Dec": "the detail message"}{"idx": 27922, "node_name": "s", "Dec": "the detail message"}{"idx": 27923, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27926, "node_name": "s", "Dec": "the detail message"}{"idx": 27928, "node_name": "s", "Dec": "the detail message"}{"idx": 27929, "node_name": "ex", "Dec": "the nested exception"}{"idx": 27932, "node_name": "context", "Dec": "the protectiondomains associated with this context . the non-duplicate domains are copied from the array . subsequent changes to the array will not affect this accesscontrolcontext ."}{"idx": 27934, "node_name": "acc", "Dec": "the accesscontrolcontext associated with the provided domaincombiner ."}{"idx": 27935, "node_name": "combiner", "Dec": "the domaincombiner to be associated with the provided accesscontrolcontext ."}{"idx": 27938, "node_name": "perm", "Dec": "the requested permission ."}{"idx": 27940, "node_name": "obj", "Dec": "the object we are testing for equality with this object ."}{"idx": 27944, "node_name": "s", "Dec": "the detail message ."}{"idx": 27946, "node_name": "s", "Dec": "the detail message ."}{"idx": 27947, "node_name": "p", "Dec": "the permission that caused the exception ."}{"idx": 27951, "node_name": "action", "Dec": "the action to be performed ."}{"idx": 27953, "node_name": "action", "Dec": "the action to be performed ."}{"idx": 27955, "node_name": "action", "Dec": "the action to be performed ."}{"idx": 27956, "node_name": "context", "Dec": "an access control context representing the restriction to be applied to the caller's domain's privileges before performing the specified action . if the context is null , then no additional restriction is applied ."}{"idx": 27958, "node_name": "action", "Dec": "the action to be performed ."}{"idx": 27959, "node_name": "context", "Dec": "an access control context representing the restriction to be applied to the caller's domain's privileges before performing the specified action . if the context is null , then no additional restriction is applied ."}{"idx": 27960, "node_name": "perms", "Dec": "the permission arguments which limit the scope of the caller's privileges . the number of arguments is variable ."}{"idx": 27962, "node_name": "action", "Dec": "the action to be performed ."}{"idx": 27963, "node_name": "context", "Dec": "an access control context representing the restriction to be applied to the caller's domain's privileges before performing the specified action . if the context is null , then no additional restriction is applied ."}{"idx": 27964, "node_name": "perms", "Dec": "the permission arguments which limit the scope of the caller's privileges . the number of arguments is variable ."}{"idx": 27966, "node_name": "action", "Dec": "the action to be performed"}{"idx": 27968, "node_name": "action", "Dec": "the action to be performed ."}{"idx": 27970, "node_name": "action", "Dec": "the action to be performed"}{"idx": 27971, "node_name": "context", "Dec": "an access control context representing the restriction to be applied to the caller's domain's privileges before performing the specified action . if the context is null , then no additional restriction is applied ."}{"idx": 27973, "node_name": "action", "Dec": "the action to be performed ."}{"idx": 27974, "node_name": "context", "Dec": "an access control context representing the restriction to be applied to the caller's domain's privileges before performing the specified action . if the context is null , then no additional restriction is applied ."}{"idx": 27975, "node_name": "perms", "Dec": "the permission arguments which limit the scope of the caller's privileges . the number of arguments is variable ."}{"idx": 27977, "node_name": "action", "Dec": "the action to be performed ."}{"idx": 27978, "node_name": "context", "Dec": "an access control context representing the restriction to be applied to the caller's domain's privileges before performing the specified action . if the context is null , then no additional restriction is applied ."}{"idx": 27979, "node_name": "perms", "Dec": "the permission arguments which limit the scope of the caller's privileges . the number of arguments is variable ."}{"idx": 27982, "node_name": "perm", "Dec": "the requested permission ."}{"idx": 27993, "node_name": "primitives", "Dec": "a set of cryptographic primitives"}{"idx": 27994, "node_name": "algorithm", "Dec": "the algorithm name"}{"idx": 27995, "node_name": "parameters", "Dec": "the algorithm parameters , or null if no additional parameters"}{"idx": 27997, "node_name": "primitives", "Dec": "a set of cryptographic primitives"}{"idx": 27998, "node_name": "key", "Dec": "the key"}{"idx": 28000, "node_name": "primitives", "Dec": "a set of cryptographic primitives"}{"idx": 28001, "node_name": "algorithm", "Dec": "the algorithm name"}{"idx": 28002, "node_name": "key", "Dec": "the key"}{"idx": 28003, "node_name": "parameters", "Dec": "the algorithm parameters , or null if no additional parameters"}{"idx": 28006, "node_name": "paramgenspi", "Dec": "the delegate"}{"idx": 28007, "node_name": "provider", "Dec": "the provider"}{"idx": 28008, "node_name": "algorithm", "Dec": "the algorithm"}{"idx": 28011, "node_name": "algorithm", "Dec": "the name of the algorithm this parameter generator is associated with . see the algorithmparametergenerator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28013, "node_name": "algorithm", "Dec": "the name of the algorithm this parameter generator is associated with . see the algorithmparametergenerator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28014, "node_name": "provider", "Dec": "the string name of the provider ."}{"idx": 28016, "node_name": "algorithm", "Dec": "the string name of the algorithm this parameter generator is associated with . see the algorithmparametergenerator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28017, "node_name": "provider", "Dec": "the provider object ."}{"idx": 28020, "node_name": "size", "Dec": "the size ( number of bits ) ."}{"idx": 28022, "node_name": "size", "Dec": "the size ( number of bits ) ."}{"idx": 28023, "node_name": "random", "Dec": "the source of randomness ."}{"idx": 28025, "node_name": "genparamspec", "Dec": "the set of algorithm-specific parameter generation values ."}{"idx": 28027, "node_name": "genparamspec", "Dec": "the set of algorithm-specific parameter generation values ."}{"idx": 28028, "node_name": "random", "Dec": "the source of randomness ."}{"idx": 28033, "node_name": "size", "Dec": "the size ( number of bits ) ."}{"idx": 28034, "node_name": "random", "Dec": "the source of randomness ."}{"idx": 28036, "node_name": "genparamspec", "Dec": "the set of algorithm-specific parameter generation values ."}{"idx": 28037, "node_name": "random", "Dec": "the source of randomness ."}{"idx": 28041, "node_name": "paramspi", "Dec": "the delegate"}{"idx": 28042, "node_name": "provider", "Dec": "the provider"}{"idx": 28043, "node_name": "algorithm", "Dec": "the algorithm"}{"idx": 28046, "node_name": "algorithm", "Dec": "the name of the algorithm requested . see the algorithmparameters section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28048, "node_name": "algorithm", "Dec": "the name of the algorithm requested . see the algorithmparameters section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28049, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 28051, "node_name": "algorithm", "Dec": "the name of the algorithm requested . see the algorithmparameters section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28052, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 28055, "node_name": "paramspec", "Dec": "the parameter specification ."}{"idx": 28057, "node_name": "params", "Dec": "the encoded parameters ."}{"idx": 28059, "node_name": "params", "Dec": "the encoded parameters ."}{"idx": 28060, "node_name": "format", "Dec": "the name of the decoding scheme ."}{"idx": 28062, "node_name": "paramspec", "Dec": "the specification class in which the parameters should be returned ."}{"idx": 28065, "node_name": "format", "Dec": "the name of the encoding format ."}{"idx": 28070, "node_name": "paramspec", "Dec": "the parameter specification ."}{"idx": 28072, "node_name": "params", "Dec": "the encoded parameters ."}{"idx": 28074, "node_name": "params", "Dec": "the encoded parameters ."}{"idx": 28075, "node_name": "format", "Dec": "the name of the decoding format ."}{"idx": 28077, "node_name": "paramspec", "Dec": "the specification class in which the parameters should be returned ."}{"idx": 28080, "node_name": "format", "Dec": "the name of the encoding format ."}{"idx": 28085, "node_name": "name", "Dec": "ignored"}{"idx": 28086, "node_name": "actions", "Dec": "ignored ."}{"idx": 28088, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 28090, "node_name": "obj", "Dec": "the object we are testing for equality with this object ."}{"idx": 28096, "node_name": "name", "Dec": "the provider name ."}{"idx": 28097, "node_name": "versionstr", "Dec": "the provider version string ."}{"idx": 28098, "node_name": "info", "Dec": "a description of the provider and its services ."}{"idx": 28100, "node_name": "subject", "Dec": "the subject which may contain principals / credentials used for authentication , or may be populated with additional principals / credentials after successful authentication has completed . this parameter may be null ."}{"idx": 28101, "node_name": "handler", "Dec": "the callbackhandler used by this provider to obtain authentication information from the caller , which may be null"}{"idx": 28104, "node_name": "handler", "Dec": "a callbackhandler for obtaining authentication information , which may be null"}{"idx": 28107, "node_name": "name", "Dec": "the name of the basicpermission ."}{"idx": 28109, "node_name": "name", "Dec": "the name of the basicpermission ."}{"idx": 28110, "node_name": "actions", "Dec": "ignored ."}{"idx": 28112, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 28114, "node_name": "obj", "Dec": "the object we are testing for equality with this object ."}{"idx": 28120, "node_name": "type", "Dec": "the standard name of the certificate type ."}{"idx": 28121, "node_name": "data", "Dec": "the certificate data ."}{"idx": 28125, "node_name": "type", "Dec": "the standard name of the certificate type . see the certificatefactory section in the java security standard algorithm names specification for information about standard certificate types ."}{"idx": 28128, "node_name": "other", "Dec": "the object to test for equality with this certificate ."}{"idx": 28132, "node_name": "key", "Dec": "the publickey used to carry out the verification ."}{"idx": 28134, "node_name": "key", "Dec": "the publickey used to carry out the verification ."}{"idx": 28135, "node_name": "sigprovider", "Dec": "the name of the signature provider ."}{"idx": 28137, "node_name": "key", "Dec": "the publickey used to carry out the verification ."}{"idx": 28138, "node_name": "sigprovider", "Dec": "the signature provider ."}{"idx": 28145, "node_name": "message", "Dec": "the detail message ."}{"idx": 28147, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 28148, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28150, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28154, "node_name": "msg", "Dec": "the detail message ."}{"idx": 28156, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 28157, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28159, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28163, "node_name": "message", "Dec": "the detail message ."}{"idx": 28166, "node_name": "certfacspi", "Dec": "the provider implementation ."}{"idx": 28167, "node_name": "provider", "Dec": "the provider ."}{"idx": 28168, "node_name": "type", "Dec": "the certificate type ."}{"idx": 28170, "node_name": "type", "Dec": "the name of the requested certificate type . see the certificatefactory section in the java security standard algorithm names specification for information about standard certificate types ."}{"idx": 28172, "node_name": "type", "Dec": "the certificate type . see the certificatefactory section in the java security standard algorithm names specification for information about standard certificate types ."}{"idx": 28173, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 28175, "node_name": "type", "Dec": "the certificate type . see the certificatefactory section in the java security standard algorithm names specification for information about standard certificate types ."}{"idx": 28176, "node_name": "provider", "Dec": "the provider ."}{"idx": 28180, "node_name": "instream", "Dec": "an input stream with the certificate data ."}{"idx": 28183, "node_name": "instream", "Dec": "an inputstream containing the data"}{"idx": 28185, "node_name": "instream", "Dec": "an inputstream containing the data"}{"idx": 28186, "node_name": "encoding", "Dec": "the encoding used for the data"}{"idx": 28188, "node_name": "certificates", "Dec": "a list of certificates"}{"idx": 28190, "node_name": "instream", "Dec": "the input stream with the certificates ."}{"idx": 28192, "node_name": "instream", "Dec": "an input stream with the crl data ."}{"idx": 28194, "node_name": "instream", "Dec": "the input stream with the crls ."}{"idx": 28198, "node_name": "instream", "Dec": "an input stream with the certificate data ."}{"idx": 28200, "node_name": "instream", "Dec": "an inputstream containing the data"}{"idx": 28202, "node_name": "instream", "Dec": "an inputstream containing the data"}{"idx": 28203, "node_name": "encoding", "Dec": "the encoding used for the data"}{"idx": 28205, "node_name": "certificates", "Dec": "a list of certificates"}{"idx": 28208, "node_name": "instream", "Dec": "the input stream with the certificates ."}{"idx": 28210, "node_name": "instream", "Dec": "an input stream with the crl data ."}{"idx": 28212, "node_name": "instream", "Dec": "the input stream with the crls ."}{"idx": 28216, "node_name": "message", "Dec": "the detail message ."}{"idx": 28220, "node_name": "message", "Dec": "the detail message ."}{"idx": 28222, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 28223, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28225, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28228, "node_name": "revocationdate", "Dec": "the date on which the certificate was revoked . the date is copied to protect against subsequent modification ."}{"idx": 28229, "node_name": "reason", "Dec": "the revocation reason"}{"idx": 28230, "node_name": "extensions", "Dec": "a map of x.509 extensions . each key is an oid string that maps to the corresponding extension . the map is copied to prevent subsequent modification ."}{"idx": 28231, "node_name": "authority", "Dec": "the x500principal that represents the name of the authority that signed the certificate's revocation status information"}{"idx": 28239, "node_name": "type", "Dec": "the standard name of a certpath type"}{"idx": 28240, "node_name": "data", "Dec": "the encoded form of the certification path"}{"idx": 28244, "node_name": "type", "Dec": "the standard name of the type of certificates in this path"}{"idx": 28248, "node_name": "other", "Dec": "the object to test for equality with this certification path"}{"idx": 28253, "node_name": "encoding", "Dec": "the name of the encoding to use"}{"idx": 28258, "node_name": "builderspi", "Dec": "the provider implementation"}{"idx": 28259, "node_name": "provider", "Dec": "the provider"}{"idx": 28260, "node_name": "algorithm", "Dec": "the algorithm name"}{"idx": 28262, "node_name": "algorithm", "Dec": "the name of the requested certpathbuilder algorithm . see the certpathbuilder section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28264, "node_name": "algorithm", "Dec": "the name of the requested certpathbuilder algorithm . see the certpathbuilder section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28265, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 28267, "node_name": "algorithm", "Dec": "the name of the requested certpathbuilder algorithm . see the certpathbuilder section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28268, "node_name": "provider", "Dec": "the provider ."}{"idx": 28272, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 28278, "node_name": "msg", "Dec": "the detail message"}{"idx": 28280, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28282, "node_name": "msg", "Dec": "the detail message"}{"idx": 28283, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28290, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 28294, "node_name": "forward", "Dec": "the order that certificates are presented to the check method . if true , certificates are presented from target to trust anchor ( forward ); if false , from trust anchor to target ( reverse ) ."}{"idx": 28297, "node_name": "cert", "Dec": "the certificate to be checked"}{"idx": 28302, "node_name": "validatorspi", "Dec": "the provider implementation"}{"idx": 28303, "node_name": "provider", "Dec": "the provider"}{"idx": 28304, "node_name": "algorithm", "Dec": "the algorithm name"}{"idx": 28306, "node_name": "algorithm", "Dec": "the name of the requested certpathvalidator algorithm . see the certpathvalidator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28308, "node_name": "algorithm", "Dec": "the name of the requested certpathvalidator algorithm . see the certpathvalidator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28309, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 28311, "node_name": "algorithm", "Dec": "the name of the requested certpathvalidator algorithm . see the certpathvalidator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 28312, "node_name": "provider", "Dec": "the provider ."}{"idx": 28316, "node_name": "certpath", "Dec": "the certpath to be validated"}{"idx": 28317, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 28323, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 28327, "node_name": "msg", "Dec": "the detail message"}{"idx": 28329, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28331, "node_name": "msg", "Dec": "the detail message"}{"idx": 28332, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28334, "node_name": "msg", "Dec": "the detail message ( or null if none )"}{"idx": 28335, "node_name": "cause", "Dec": "the cause ( or null if none )"}{"idx": 28336, "node_name": "certpath", "Dec": "the certification path that was in the process of being validated when the error was encountered"}{"idx": 28337, "node_name": "index", "Dec": "the index of the certificate in the certification path that caused the error ( or -1 if not applicable ) . note that the list of certificates in a certpath is zero based ."}{"idx": 28339, "node_name": "msg", "Dec": "the detail message ( or null if none )"}{"idx": 28340, "node_name": "cause", "Dec": "the cause ( or null if none )"}{"idx": 28341, "node_name": "certpath", "Dec": "the certification path that was in the process of being validated when the error was encountered"}{"idx": 28342, "node_name": "index", "Dec": "the index of the certificate in the certification path that caused the error ( or -1 if not applicable ) . note that the list of certificates in a certpath is zero based ."}{"idx": 28343, "node_name": "reason", "Dec": "the reason the validation failed"}{"idx": 28353, "node_name": "certpath", "Dec": "the certpath to be validated"}{"idx": 28354, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 28358, "node_name": "cert", "Dec": "the certificate to be checked"}{"idx": 28362, "node_name": "storespi", "Dec": "the provider implementation"}{"idx": 28363, "node_name": "provider", "Dec": "the provider"}{"idx": 28364, "node_name": "type", "Dec": "the type"}{"idx": 28365, "node_name": "params", "Dec": "the initialization parameters ( may be null )"}{"idx": 28367, "node_name": "selector", "Dec": "a certselector used to select which certificates should be returned . specify null to return all certificates ( if supported ) ."}{"idx": 28369, "node_name": "selector", "Dec": "a crlselector used to select which crls should be returned . specify null to return all crls ( if supported ) ."}{"idx": 28371, "node_name": "type", "Dec": "the name of the requested certstore type . see the certstore section in the java security standard algorithm names specification for information about standard types ."}{"idx": 28372, "node_name": "params", "Dec": "the initialization parameters ( may be null ) ."}{"idx": 28374, "node_name": "type", "Dec": "the requested certstore type . see the certstore section in the java security standard algorithm names specification for information about standard types ."}{"idx": 28375, "node_name": "params", "Dec": "the initialization parameters ( may be null ) ."}{"idx": 28376, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 28378, "node_name": "type", "Dec": "the requested certstore type . see the certstore section in the java security standard algorithm names specification for information about standard types ."}{"idx": 28379, "node_name": "params", "Dec": "the initialization parameters ( may be null ) ."}{"idx": 28380, "node_name": "provider", "Dec": "the provider ."}{"idx": 28388, "node_name": "msg", "Dec": "the detail message"}{"idx": 28390, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28392, "node_name": "msg", "Dec": "the detail message"}{"idx": 28393, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28398, "node_name": "params", "Dec": "the initialization parameters ( may be null )"}{"idx": 28400, "node_name": "selector", "Dec": "a certselector used to select which certificates should be returned . specify null to return all certificates ( if supported ) ."}{"idx": 28402, "node_name": "selector", "Dec": "a crlselector used to select which crls should be returned . specify null to return all crls ( if supported ) ."}{"idx": 28405, "node_name": "collection", "Dec": "a collection of certificates and crls"}{"idx": 28412, "node_name": "type", "Dec": "the standard name of the crl type . see the java security standard algorithm names document for information about standard crl types ."}{"idx": 28416, "node_name": "cert", "Dec": "the certificate to check for ."}{"idx": 28420, "node_name": "message", "Dec": "the detail message ."}{"idx": 28422, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 28423, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28425, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28429, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 28432, "node_name": "crl", "Dec": "the crl to be checked"}{"idx": 28439, "node_name": "out", "Dec": "the output stream"}{"idx": 28442, "node_name": "servername", "Dec": "the dns name of the ldap server"}{"idx": 28443, "node_name": "port", "Dec": "the port number of the ldap server"}{"idx": 28445, "node_name": "servername", "Dec": "the dns name of the ldap server"}{"idx": 28453, "node_name": "trustanchors", "Dec": "a set of trustanchors"}{"idx": 28454, "node_name": "targetconstraints", "Dec": "a certselector specifying the constraints on the target certificate"}{"idx": 28456, "node_name": "keystore", "Dec": "a keystore from which the set of most-trusted cas will be populated"}{"idx": 28457, "node_name": "targetconstraints", "Dec": "a certselector specifying the constraints on the target certificate"}{"idx": 28459, "node_name": "maxpathlength", "Dec": "the maximum number of non-self-issued intermediate certificates that may exist in a certification path"}{"idx": 28464, "node_name": "certpath", "Dec": "the validated certpath"}{"idx": 28465, "node_name": "trustanchor", "Dec": "a trustanchor describing the ca that served as a trust anchor for the certification path"}{"idx": 28466, "node_name": "policytree", "Dec": "the immutable valid policy tree , or null if there are no valid policies"}{"idx": 28467, "node_name": "subjectpublickey", "Dec": "the public key of the subject"}{"idx": 28473, "node_name": "forward", "Dec": "the order that certificates are presented to the check method . if true , certificates are presented from target to most-trusted ca ( forward ); if false , from most-trusted ca to target ( reverse ) ."}{"idx": 28477, "node_name": "cert", "Dec": "the certificate to be checked"}{"idx": 28478, "node_name": "unresolvedcritexts", "Dec": "a collection of oid strings representing the current set of unresolved critical extensions"}{"idx": 28480, "node_name": "cert", "Dec": "the certificate to be checked"}{"idx": 28484, "node_name": "trustanchor", "Dec": "a trustanchor describing the ca that served as a trust anchor for the certification path"}{"idx": 28485, "node_name": "policytree", "Dec": "the immutable valid policy tree , or null if there are no valid policies"}{"idx": 28486, "node_name": "subjectpublickey", "Dec": "the public key of the subject"}{"idx": 28494, "node_name": "trustanchors", "Dec": "a set of trustanchors"}{"idx": 28496, "node_name": "keystore", "Dec": "a keystore from which the set of most-trusted cas will be populated"}{"idx": 28499, "node_name": "trustanchors", "Dec": "a set of trustanchors"}{"idx": 28502, "node_name": "initialpolicies", "Dec": "a set of initial policy oids in string format ( or null )"}{"idx": 28504, "node_name": "stores", "Dec": "a list of certstores ( or null )"}{"idx": 28506, "node_name": "store", "Dec": "the certstore to add . if null , the store is ignored ( not added to list ) ."}{"idx": 28509, "node_name": "val", "Dec": "the new value of the revocationenabled flag"}{"idx": 28512, "node_name": "val", "Dec": "true if explicit policy is to be required , false otherwise"}{"idx": 28515, "node_name": "val", "Dec": "true if policy mapping is to be inhibited , false otherwise"}{"idx": 28518, "node_name": "val", "Dec": "true if the any policy oid is to be inhibited , false otherwise"}{"idx": 28521, "node_name": "qualifiersrejected", "Dec": "the new value of the policyqualifiersrejected flag"}{"idx": 28525, "node_name": "date", "Dec": "the date , or null for the current time"}{"idx": 28527, "node_name": "checkers", "Dec": "a list of pkixcertpathcheckers . may be null , in which case no additional checkers will be used ."}{"idx": 28530, "node_name": "checker", "Dec": "a pkixcertpathchecker to add to the list of checks . if null , the checker is ignored ( not added to list ) ."}{"idx": 28533, "node_name": "sigprovider", "Dec": "the signature provider's name ( or null )"}{"idx": 28536, "node_name": "selector", "Dec": "a certselector specifying the constraints on the target certificate ( or null )"}{"idx": 28542, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 28546, "node_name": "uri", "Dec": "the responder uri"}{"idx": 28549, "node_name": "cert", "Dec": "the responder's certificate"}{"idx": 28552, "node_name": "extensions", "Dec": "a list of extensions . the list is copied to protect against subsequent modification ."}{"idx": 28555, "node_name": "responses", "Dec": "a map of ocsp responses . each key is an x509certificate that maps to the corresponding der-encoded ocsp response for that certificate . a deep copy of the map is performed to protect against subsequent modification ."}{"idx": 28558, "node_name": "options", "Dec": "a set of revocation options . the set is copied to protect against subsequent modification ."}{"idx": 28565, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 28576, "node_name": "encoded", "Dec": "a byte array containing the qualifier in der encoding"}{"idx": 28583, "node_name": "trustedcert", "Dec": "a trusted x509certificate"}{"idx": 28584, "node_name": "nameconstraints", "Dec": "a byte array containing the asn.1 der encoding of a nameconstraints extension to be used for checking name constraints . only the value of the extension is included , not the oid or criticality flag . specify null to omit the parameter ."}{"idx": 28586, "node_name": "caprincipal", "Dec": "the name of the most-trusted ca as x500principal"}{"idx": 28587, "node_name": "pubkey", "Dec": "the public key of the most-trusted ca"}{"idx": 28588, "node_name": "nameconstraints", "Dec": "a byte array containing the asn.1 der encoding of a nameconstraints extension to be used for checking name constraints . only the value of the extension is included , not the oid or criticality flag . specify null to omit the parameter ."}{"idx": 28590, "node_name": "caname", "Dec": "the x.500 distinguished name of the most-trusted ca in rfc 2253 string format"}{"idx": 28591, "node_name": "pubkey", "Dec": "the public key of the most-trusted ca"}{"idx": 28592, "node_name": "nameconstraints", "Dec": "a byte array containing the asn.1 der encoding of a nameconstraints extension to be used for checking name constraints . only the value of the extension is included , not the oid or criticality flag . specify null to omit the parameter ."}{"idx": 28601, "node_name": "uri", "Dec": "the uri which contains configuration information ."}{"idx": 28606, "node_name": "p", "Dec": "the object to test for equality with this parameters ."}{"idx": 28612, "node_name": "date", "Dec": "the date to check against to see if this certificate is valid at that date / time ."}{"idx": 28634, "node_name": "key", "Dec": "the publickey used to carry out the verification ."}{"idx": 28635, "node_name": "sigprovider", "Dec": "the signature provider ."}{"idx": 28639, "node_name": "cert", "Dec": "the x509certificate to match ( or null )"}{"idx": 28641, "node_name": "serial", "Dec": "the certificate serial number to match ( or null )"}{"idx": 28643, "node_name": "issuer", "Dec": "a distinguished name as x500principal ( or null )"}{"idx": 28645, "node_name": "issuerdn", "Dec": "a distinguished name in rfc 2253 format ( or null )"}{"idx": 28647, "node_name": "issuerdn", "Dec": "a byte array containing the distinguished name in asn.1 der encoded form ( or null )"}{"idx": 28649, "node_name": "subject", "Dec": "a distinguished name as x500principal ( or null )"}{"idx": 28651, "node_name": "subjectdn", "Dec": "a distinguished name in rfc 2253 format ( or null )"}{"idx": 28653, "node_name": "subjectdn", "Dec": "a byte array containing the distinguished name in asn.1 der format ( or null )"}{"idx": 28655, "node_name": "subjectkeyid", "Dec": "the subject key identifier ( or null )"}{"idx": 28657, "node_name": "authoritykeyid", "Dec": "the authority key identifier ( or null )"}{"idx": 28659, "node_name": "certvalid", "Dec": "the date to check ( or null )"}{"idx": 28661, "node_name": "privatekeyvalid", "Dec": "the date to check ( or null )"}{"idx": 28663, "node_name": "oid", "Dec": "the object identifier ( oid ) of the algorithm to check for ( or null ) . an oid is represented by a set of nonnegative integers separated by periods ."}{"idx": 28665, "node_name": "key", "Dec": "the subject public key to check for ( or null )"}{"idx": 28667, "node_name": "key", "Dec": "a byte array containing the subject public key in asn.1 der form ( or null )"}{"idx": 28669, "node_name": "keyusage", "Dec": "a boolean array in the same format as the boolean array returned by x509certificate.getkeyusage() . or null ."}{"idx": 28671, "node_name": "keypurposeset", "Dec": "a set of key purpose oids in string format ( or null ) . each oid is represented by a set of nonnegative integers separated by periods ."}{"idx": 28673, "node_name": "matchallnames", "Dec": "if true , the flag is enabled ; if false , the flag is disabled ."}{"idx": 28675, "node_name": "names", "Dec": "a collection of names ( or null )"}{"idx": 28677, "node_name": "type", "Dec": "the name type ( 0-8 , as specified in rfc 5280 , section 4.2.1.6 )"}{"idx": 28678, "node_name": "name", "Dec": "the name in string form ( not null )"}{"idx": 28680, "node_name": "type", "Dec": "the name type ( 0-8 , as listed above )"}{"idx": 28681, "node_name": "name", "Dec": "a byte array containing the name in asn.1 der encoded form"}{"idx": 28683, "node_name": "bytes", "Dec": "a byte array containing the asn.1 der encoding of a nameconstraints extension to be used for checking name constraints . only the value of the extension is included , not the oid or criticality flag . can be null , in which case no name constraints check will be performed ."}{"idx": 28685, "node_name": "minmaxpathlen", "Dec": "the value for the basic constraints constraint"}{"idx": 28687, "node_name": "certpolicyset", "Dec": "a set of certificate policy oids in string format ( or null ) . each oid is represented by a set of nonnegative integers separated by periods ."}{"idx": 28689, "node_name": "names", "Dec": "a collection with one entry per name ( or null )"}{"idx": 28691, "node_name": "type", "Dec": "the name type ( 0-8 , as specified in rfc 5280 , section 4.2.1.6 )"}{"idx": 28692, "node_name": "name", "Dec": "the name in string form"}{"idx": 28694, "node_name": "type", "Dec": "the name type ( 0-8 , as specified in rfc 5280 , section 4.2.1.6 )"}{"idx": 28695, "node_name": "name", "Dec": "a byte array containing the name in asn.1 der encoded form"}{"idx": 28720, "node_name": "cert", "Dec": "the certificate to be checked"}{"idx": 28725, "node_name": "other", "Dec": "the object to test for equality with this crl ."}{"idx": 28729, "node_name": "key", "Dec": "the publickey used to carry out the verification ."}{"idx": 28731, "node_name": "key", "Dec": "the publickey used to carry out the verification ."}{"idx": 28732, "node_name": "sigprovider", "Dec": "the name of the signature provider ."}{"idx": 28734, "node_name": "key", "Dec": "the publickey used to carry out the verification ."}{"idx": 28735, "node_name": "sigprovider", "Dec": "the signature provider ."}{"idx": 28742, "node_name": "serialnumber", "Dec": "the serial number of the certificate for which a crl entry is to be looked up"}{"idx": 28744, "node_name": "certificate", "Dec": "the certificate for which a crl entry is to be looked up"}{"idx": 28754, "node_name": "other", "Dec": "the object to test for equality with this crl entry ."}{"idx": 28766, "node_name": "issuers", "Dec": "a collection of x500principals ( or null )"}{"idx": 28768, "node_name": "names", "Dec": "a collection of names ( or null )"}{"idx": 28770, "node_name": "issuer", "Dec": "the issuer as x500principal"}{"idx": 28772, "node_name": "name", "Dec": "the name in rfc 2253 form"}{"idx": 28774, "node_name": "name", "Dec": "a byte array containing the name in asn.1 der encoded form"}{"idx": 28776, "node_name": "mincrl", "Dec": "the minimum crl number accepted ( or null )"}{"idx": 28778, "node_name": "maxcrl", "Dec": "the maximum crl number accepted ( or null )"}{"idx": 28780, "node_name": "dateandtime", "Dec": "the date to match against ( or null )"}{"idx": 28782, "node_name": "cert", "Dec": "the x509certificate being checked ( or null )"}{"idx": 28791, "node_name": "crl", "Dec": "the crl to be checked"}{"idx": 28798, "node_name": "oid", "Dec": "the object identifier value for the extension ."}{"idx": 28802, "node_name": "signercertpath", "Dec": "the signer's certificate path . it must not be null ."}{"idx": 28803, "node_name": "timestamp", "Dec": "a signature timestamp . if null then no timestamp was generated for the signature ."}{"idx": 28808, "node_name": "obj", "Dec": "the object to test for equality with this object ."}{"idx": 28812, "node_name": "url", "Dec": "the location ( url ) . it may be null ."}{"idx": 28813, "node_name": "certs", "Dec": "the certificate ( s ) . it may be null . the contents of the array are copied to protect against subsequent modification ."}{"idx": 28815, "node_name": "url", "Dec": "the location ( url ) . it may be null ."}{"idx": 28816, "node_name": "signers", "Dec": "the code signers . it may be null . the contents of the array are copied to protect against subsequent modification ."}{"idx": 28819, "node_name": "obj", "Dec": "the object to test for equality with this object ."}{"idx": 28824, "node_name": "codesource", "Dec": "codesource to compare against ."}{"idx": 28829, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 28833, "node_name": "msg", "Dec": "the detail message ."}{"idx": 28835, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 28836, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28838, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28842, "node_name": "stream", "Dec": "the input stream ."}{"idx": 28843, "node_name": "digest", "Dec": "the message digest to associate with this stream ."}{"idx": 28846, "node_name": "digest", "Dec": "the message digest to be associated with this stream ."}{"idx": 28849, "node_name": "b", "Dec": "the array into which the data is read ."}{"idx": 28850, "node_name": "off", "Dec": "the starting offset into b of where the data should be placed ."}{"idx": 28851, "node_name": "len", "Dec": "the maximum number of bytes to be read from the input stream into b , starting at offset off ."}{"idx": 28853, "node_name": "on", "Dec": "true to turn the digest function on , false to turn it off ."}{"idx": 28858, "node_name": "stream", "Dec": "the output stream ."}{"idx": 28859, "node_name": "digest", "Dec": "the message digest to associate with this stream ."}{"idx": 28862, "node_name": "digest", "Dec": "the message digest to be associated with this stream ."}{"idx": 28864, "node_name": "b", "Dec": "the byte to be used for updating and writing to the output stream ."}{"idx": 28866, "node_name": "b", "Dec": "the array containing the subarray to be used for updating and writing to the output stream ."}{"idx": 28867, "node_name": "off", "Dec": "the offset into b of the first byte to be updated and written ."}{"idx": 28868, "node_name": "len", "Dec": "the number of bytes of data to be updated and written from b , starting at offset off ."}{"idx": 28870, "node_name": "on", "Dec": "true to turn the digest function on , false to turn it off ."}{"idx": 28874, "node_name": "currentdomains", "Dec": "the protectiondomains associated with the current execution thread , up to the most recent privileged protectiondomain . the protectiondomains are listed in order of execution , with the most recently executing protectiondomain residing at the beginning of the array . this parameter may be null if the current execution thread has no associated protectiondomains ."}{"idx": 28875, "node_name": "assigneddomains", "Dec": "an array of inherited protectiondomains . protectiondomains may be inherited from a parent thread , or from a privileged accesscontrolcontext . this parameter may be null if there are no inherited protectiondomains ."}{"idx": 28878, "node_name": "configuration", "Dec": "identifier for the domain configuration data . the name of the target domain should be specified in the java.net.uri fragment component when it is necessary to distinguish between several domain configurations at the same location ."}{"idx": 28879, "node_name": "protectionparams", "Dec": "the map from keystore name to the parameter used to protect keystore data . a java.util.collections.empty_map should be used when protection parameters are not required or when they have been specified by properties in the domain configuration data . it is cloned to prevent subsequent modification ."}{"idx": 28886, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 28896, "node_name": "strength", "Dec": "security strength in bits , -1 for default strength if used in getinstance ."}{"idx": 28897, "node_name": "capability", "Dec": "capability"}{"idx": 28898, "node_name": "personalizationstring", "Dec": "personalization string as a byte array , can be null . the content of this byte array will be copied ."}{"idx": 28900, "node_name": "strength", "Dec": "requested security strength in bits . if set to -1 , the effective strength will be used ."}{"idx": 28901, "node_name": "predictionresistance", "Dec": "prediction resistance requested"}{"idx": 28902, "node_name": "additionalinput", "Dec": "additional input , can be null . the content of this byte array will be copied ."}{"idx": 28904, "node_name": "predictionresistance", "Dec": "prediction resistance requested"}{"idx": 28905, "node_name": "additionalinput", "Dec": "additional input , can be null . the content of this byte array will be copied ."}{"idx": 28916, "node_name": "msg", "Dec": "the detail message ."}{"idx": 28918, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 28919, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28921, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28924, "node_name": "object", "Dec": "the object being protected by the guard ."}{"idx": 28927, "node_name": "object", "Dec": "the object to be guarded ."}{"idx": 28928, "node_name": "guard", "Dec": "the guard object that guards access to the object ."}{"idx": 28936, "node_name": "params", "Dec": "the parameters to use to generate the keys ."}{"idx": 28937, "node_name": "random", "Dec": "the random bit source to use to generate key bits ; can be null ."}{"idx": 28939, "node_name": "modlen", "Dec": "the modulus length in bits . valid values are any multiple of 64 between 512 and 1024 , inclusive , 2048 , and 3072 ."}{"idx": 28940, "node_name": "random", "Dec": "the random bit source to use to generate key bits ; can be null ."}{"idx": 28941, "node_name": "genparams", "Dec": "whether or not to generate new parameters for the modulus length requested ."}{"idx": 28987, "node_name": "msg", "Dec": "the detail message ."}{"idx": 28989, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 28990, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28992, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 28996, "node_name": "msg", "Dec": "the detail message ."}{"idx": 28998, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 28999, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29001, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29005, "node_name": "msg", "Dec": "the detail message ."}{"idx": 29013, "node_name": "msg", "Dec": "the detail message ."}{"idx": 29015, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 29016, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29018, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29021, "node_name": "keyfacspi", "Dec": "the delegate"}{"idx": 29022, "node_name": "provider", "Dec": "the provider"}{"idx": 29023, "node_name": "algorithm", "Dec": "the name of the algorithm to associate with this keyfactory"}{"idx": 29025, "node_name": "algorithm", "Dec": "the name of the requested key algorithm . see the keyfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29027, "node_name": "algorithm", "Dec": "the name of the requested key algorithm . see the keyfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29028, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 29030, "node_name": "algorithm", "Dec": "the name of the requested key algorithm . see the keyfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29031, "node_name": "provider", "Dec": "the provider ."}{"idx": 29035, "node_name": "keyspec", "Dec": "the specification ( key material ) of the public key ."}{"idx": 29037, "node_name": "keyspec", "Dec": "the specification ( key material ) of the private key ."}{"idx": 29039, "node_name": "key", "Dec": "the key ."}{"idx": 29040, "node_name": "keyspec", "Dec": "the specification class in which the key material should be returned ."}{"idx": 29042, "node_name": "key", "Dec": "the key whose provider is unknown or untrusted ."}{"idx": 29046, "node_name": "keyspec", "Dec": "the specification ( key material ) of the public key ."}{"idx": 29048, "node_name": "keyspec", "Dec": "the specification ( key material ) of the private key ."}{"idx": 29050, "node_name": "key", "Dec": "the key ."}{"idx": 29051, "node_name": "keyspec", "Dec": "the specification class in which the key material should be returned ."}{"idx": 29053, "node_name": "key", "Dec": "the key whose provider is unknown or untrusted ."}{"idx": 29057, "node_name": "msg", "Dec": "the detail message ."}{"idx": 29059, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 29060, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29062, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29065, "node_name": "publickey", "Dec": "the public key ."}{"idx": 29066, "node_name": "privatekey", "Dec": "the private key ."}{"idx": 29071, "node_name": "algorithm", "Dec": "the standard string name of the algorithm . see the keypairgenerator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29074, "node_name": "algorithm", "Dec": "the standard string name of the algorithm . see the keypairgenerator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29076, "node_name": "algorithm", "Dec": "the standard string name of the algorithm . see the keypairgenerator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29077, "node_name": "provider", "Dec": "the string name of the provider ."}{"idx": 29079, "node_name": "algorithm", "Dec": "the standard string name of the algorithm . see the keypairgenerator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29080, "node_name": "provider", "Dec": "the provider ."}{"idx": 29083, "node_name": "keysize", "Dec": "the keysize . this is an algorithm-specific metric , such as modulus length , specified in number of bits ."}{"idx": 29085, "node_name": "keysize", "Dec": "the keysize . this is an algorithm-specific metric , such as modulus length , specified in number of bits ."}{"idx": 29086, "node_name": "random", "Dec": "the source of randomness ."}{"idx": 29088, "node_name": "params", "Dec": "the parameter set used to generate the keys ."}{"idx": 29090, "node_name": "params", "Dec": "the parameter set used to generate the keys ."}{"idx": 29091, "node_name": "random", "Dec": "the source of randomness ."}{"idx": 29097, "node_name": "keysize", "Dec": "the keysize . this is an algorithm-specific metric , such as modulus length , specified in number of bits ."}{"idx": 29098, "node_name": "random", "Dec": "the source of randomness for this generator ."}{"idx": 29100, "node_name": "params", "Dec": "the parameter set used to generate the keys ."}{"idx": 29101, "node_name": "random", "Dec": "the source of randomness for this generator ."}{"idx": 29105, "node_name": "type", "Dec": "either one of type.secret , type.public , or type.private"}{"idx": 29106, "node_name": "algorithm", "Dec": "the algorithm returned from key.getalgorithm()"}{"idx": 29107, "node_name": "format", "Dec": "the encoding format returned from key.getformat()"}{"idx": 29108, "node_name": "encoded", "Dec": "the encoded bytes returned from key.getencoded()"}{"idx": 29113, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 29118, "node_name": "alias", "Dec": "the alias of the keystore entry"}{"idx": 29120, "node_name": "keystore", "Dec": "the keystore to be encapsulated"}{"idx": 29121, "node_name": "protectionparameter", "Dec": "the protectionparameter used to protect the keystore entries"}{"idx": 29123, "node_name": "type", "Dec": "the type of keystore to be constructed"}{"idx": 29124, "node_name": "provider", "Dec": "the provider from which the keystore is to be instantiated ( or null )"}{"idx": 29125, "node_name": "file", "Dec": "the file that contains the keystore data"}{"idx": 29126, "node_name": "protection", "Dec": "the protectionparameter securing the keystore data"}{"idx": 29128, "node_name": "file", "Dec": "the file that contains the keystore data"}{"idx": 29129, "node_name": "protection", "Dec": "the protectionparameter securing the keystore data"}{"idx": 29131, "node_name": "type", "Dec": "the type of keystore to be constructed"}{"idx": 29132, "node_name": "provider", "Dec": "the provider from which the keystore is to be instantiated ( or null )"}{"idx": 29133, "node_name": "protection", "Dec": "the protectionparameter securing the keystore"}{"idx": 29136, "node_name": "handler", "Dec": "the callbackhandler"}{"idx": 29145, "node_name": "keystorespi", "Dec": "the provider implementation ."}{"idx": 29146, "node_name": "provider", "Dec": "the provider ."}{"idx": 29147, "node_name": "type", "Dec": "the keystore type ."}{"idx": 29149, "node_name": "type", "Dec": "the type of keystore . see the keystore section in the java security standard algorithm names specification for information about standard keystore types ."}{"idx": 29151, "node_name": "type", "Dec": "the type of keystore . see the keystore section in the java security standard algorithm names specification for information about standard keystore types ."}{"idx": 29152, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 29154, "node_name": "type", "Dec": "the type of keystore . see the keystore section in the java security standard algorithm names specification for information about standard keystore types ."}{"idx": 29155, "node_name": "provider", "Dec": "the provider ."}{"idx": 29160, "node_name": "alias", "Dec": "the alias name"}{"idx": 29161, "node_name": "password", "Dec": "the password for recovering the key"}{"idx": 29163, "node_name": "alias", "Dec": "the alias name"}{"idx": 29165, "node_name": "alias", "Dec": "the alias name"}{"idx": 29167, "node_name": "alias", "Dec": "the alias name"}{"idx": 29169, "node_name": "alias", "Dec": "the alias name"}{"idx": 29170, "node_name": "key", "Dec": "the key to be associated with the alias"}{"idx": 29171, "node_name": "password", "Dec": "the password to protect the key"}{"idx": 29172, "node_name": "chain", "Dec": "the certificate chain for the corresponding public key ( only required if the given key is of type java.security.privatekey ) ."}{"idx": 29174, "node_name": "alias", "Dec": "the alias name"}{"idx": 29175, "node_name": "key", "Dec": "the key ( in protected format ) to be associated with the alias"}{"idx": 29176, "node_name": "chain", "Dec": "the certificate chain for the corresponding public key ( only useful if the protected key is of type java.security.privatekey ) ."}{"idx": 29178, "node_name": "alias", "Dec": "the alias name"}{"idx": 29179, "node_name": "cert", "Dec": "the certificate"}{"idx": 29181, "node_name": "alias", "Dec": "the alias name"}{"idx": 29184, "node_name": "alias", "Dec": "the alias name"}{"idx": 29187, "node_name": "alias", "Dec": "the alias for the keystore entry to be checked"}{"idx": 29189, "node_name": "alias", "Dec": "the alias for the keystore entry to be checked"}{"idx": 29191, "node_name": "cert", "Dec": "the certificate to match with ."}{"idx": 29193, "node_name": "stream", "Dec": "the output stream to which this keystore is written ."}{"idx": 29194, "node_name": "password", "Dec": "the password to generate the keystore integrity check"}{"idx": 29196, "node_name": "param", "Dec": "the loadstoreparameter that specifies how to store the keystore , which may be null"}{"idx": 29198, "node_name": "stream", "Dec": "the input stream from which the keystore is loaded , or null"}{"idx": 29199, "node_name": "password", "Dec": "the password used to check the integrity of the keystore , the password used to unlock the keystore , or null"}{"idx": 29201, "node_name": "param", "Dec": "the loadstoreparameter that specifies how to load the keystore , which may be null"}{"idx": 29203, "node_name": "alias", "Dec": "get the keystore entry for this alias"}{"idx": 29204, "node_name": "protparam", "Dec": "the protectionparameter used to protect the entry , which may be null"}{"idx": 29206, "node_name": "alias", "Dec": "save the keystore entry under this alias"}{"idx": 29207, "node_name": "entry", "Dec": "the entry to save"}{"idx": 29208, "node_name": "protparam", "Dec": "the protectionparameter used to protect the entry , which may be null"}{"idx": 29210, "node_name": "alias", "Dec": "the alias name"}{"idx": 29211, "node_name": "entryclass", "Dec": "the entry class"}{"idx": 29213, "node_name": "file", "Dec": "the keystore file"}{"idx": 29214, "node_name": "password", "Dec": "the keystore password , which may be null"}{"idx": 29216, "node_name": "file", "Dec": "the keystore file"}{"idx": 29217, "node_name": "param", "Dec": "the loadstoreparameter that specifies how to load the keystore , which may be null"}{"idx": 29222, "node_name": "password", "Dec": "the password , which may be null"}{"idx": 29224, "node_name": "password", "Dec": "the password , which may be null"}{"idx": 29225, "node_name": "protectionalgorithm", "Dec": "the encryption algorithm name , for example , pbewithhmacsha256andaes_256 . see the cipher section in the java security standard algorithm names specification for information about standard encryption algorithm names ."}{"idx": 29226, "node_name": "protectionparameters", "Dec": "the encryption algorithm parameter specification , which may be null"}{"idx": 29234, "node_name": "privatekey", "Dec": "the privatekey"}{"idx": 29235, "node_name": "chain", "Dec": "an array of certificates representing the certificate chain . the chain must be ordered and contain a certificate at index 0 corresponding to the private key ."}{"idx": 29237, "node_name": "privatekey", "Dec": "the privatekey"}{"idx": 29238, "node_name": "chain", "Dec": "an array of certificates representing the certificate chain . the chain must be ordered and contain a certificate at index 0 corresponding to the private key ."}{"idx": 29239, "node_name": "attributes", "Dec": "the attributes"}{"idx": 29248, "node_name": "secretkey", "Dec": "the secretkey"}{"idx": 29250, "node_name": "secretkey", "Dec": "the secretkey"}{"idx": 29251, "node_name": "attributes", "Dec": "the attributes"}{"idx": 29257, "node_name": "trustedcert", "Dec": "the trusted certificate"}{"idx": 29259, "node_name": "trustedcert", "Dec": "the trusted certificate"}{"idx": 29260, "node_name": "attributes", "Dec": "the attributes"}{"idx": 29267, "node_name": "msg", "Dec": "the detail message ."}{"idx": 29269, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 29270, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29272, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29276, "node_name": "alias", "Dec": "the alias name"}{"idx": 29277, "node_name": "password", "Dec": "the password for recovering the key"}{"idx": 29279, "node_name": "alias", "Dec": "the alias name"}{"idx": 29281, "node_name": "alias", "Dec": "the alias name"}{"idx": 29283, "node_name": "alias", "Dec": "the alias name"}{"idx": 29285, "node_name": "alias", "Dec": "the alias name"}{"idx": 29286, "node_name": "key", "Dec": "the key to be associated with the alias"}{"idx": 29287, "node_name": "password", "Dec": "the password to protect the key"}{"idx": 29288, "node_name": "chain", "Dec": "the certificate chain for the corresponding public key ( only required if the given key is of type java.security.privatekey ) ."}{"idx": 29290, "node_name": "alias", "Dec": "the alias name"}{"idx": 29291, "node_name": "key", "Dec": "the key ( in protected format ) to be associated with the alias"}{"idx": 29292, "node_name": "chain", "Dec": "the certificate chain for the corresponding public key ( only useful if the protected key is of type java.security.privatekey ) ."}{"idx": 29294, "node_name": "alias", "Dec": "the alias name"}{"idx": 29295, "node_name": "cert", "Dec": "the certificate"}{"idx": 29297, "node_name": "alias", "Dec": "the alias name"}{"idx": 29300, "node_name": "alias", "Dec": "the alias name"}{"idx": 29303, "node_name": "alias", "Dec": "the alias for the keystore entry to be checked"}{"idx": 29305, "node_name": "alias", "Dec": "the alias for the keystore entry to be checked"}{"idx": 29307, "node_name": "cert", "Dec": "the certificate to match with ."}{"idx": 29309, "node_name": "stream", "Dec": "the output stream to which this keystore is written ."}{"idx": 29310, "node_name": "password", "Dec": "the password to generate the keystore integrity check"}{"idx": 29312, "node_name": "param", "Dec": "the keystore.loadstoreparmeter that specifies how to store the keystore , which may be null"}{"idx": 29314, "node_name": "stream", "Dec": "the input stream from which the keystore is loaded , or null"}{"idx": 29315, "node_name": "password", "Dec": "the password used to check the integrity of the keystore , the password used to unlock the keystore , or null"}{"idx": 29317, "node_name": "param", "Dec": "the keystore.loadstoreparameter that specifies how to load the keystore , which may be null"}{"idx": 29319, "node_name": "alias", "Dec": "get the keystore.entry for this alias"}{"idx": 29320, "node_name": "protparam", "Dec": "the protectionparameter used to protect the entry , which may be null"}{"idx": 29322, "node_name": "alias", "Dec": "save the keystore.entry under this alias"}{"idx": 29323, "node_name": "entry", "Dec": "the entry to save"}{"idx": 29324, "node_name": "protparam", "Dec": "the protectionparameter used to protect the entry , which may be null"}{"idx": 29326, "node_name": "alias", "Dec": "the alias name"}{"idx": 29327, "node_name": "entryclass", "Dec": "the entry class"}{"idx": 29329, "node_name": "stream", "Dec": "the keystore data to be probed"}{"idx": 29332, "node_name": "algorithm", "Dec": "the standard name of the digest algorithm . see the messagedigest section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29334, "node_name": "algorithm", "Dec": "the name of the algorithm requested . see the messagedigest section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29336, "node_name": "algorithm", "Dec": "the name of the algorithm requested . see the messagedigest section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29337, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 29339, "node_name": "algorithm", "Dec": "the name of the algorithm requested . see the messagedigest section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29340, "node_name": "provider", "Dec": "the provider ."}{"idx": 29343, "node_name": "input", "Dec": "the byte with which to update the digest ."}{"idx": 29345, "node_name": "input", "Dec": "the array of bytes ."}{"idx": 29346, "node_name": "offset", "Dec": "the offset to start from in the array of bytes ."}{"idx": 29347, "node_name": "len", "Dec": "the number of bytes to use , starting at offset ."}{"idx": 29349, "node_name": "input", "Dec": "the array of bytes ."}{"idx": 29351, "node_name": "input", "Dec": "the bytebuffer"}{"idx": 29354, "node_name": "buf", "Dec": "output buffer for the computed digest"}{"idx": 29355, "node_name": "offset", "Dec": "offset into the output buffer to begin storing the digest"}{"idx": 29356, "node_name": "len", "Dec": "number of bytes within buf allotted for the digest"}{"idx": 29358, "node_name": "input", "Dec": "the input to be updated before the digest is completed ."}{"idx": 29361, "node_name": "digesta", "Dec": "one of the digests to compare ."}{"idx": 29362, "node_name": "digestb", "Dec": "the other digest to compare ."}{"idx": 29371, "node_name": "input", "Dec": "the byte to use for the update ."}{"idx": 29373, "node_name": "input", "Dec": "the array of bytes to use for the update ."}{"idx": 29374, "node_name": "offset", "Dec": "the offset to start from in the array of bytes ."}{"idx": 29375, "node_name": "len", "Dec": "the number of bytes to use , starting at offset ."}{"idx": 29377, "node_name": "input", "Dec": "the bytebuffer"}{"idx": 29380, "node_name": "buf", "Dec": "the output buffer in which to store the digest"}{"idx": 29381, "node_name": "offset", "Dec": "offset to start from in the output buffer"}{"idx": 29382, "node_name": "len", "Dec": "number of bytes within buf allotted for the digest . both this default implementation and the sun provider do not return partial digests . the presence of this parameter is solely for consistency in our api's . if the value of this parameter is less than the actual digest length , engineDigest(byte[],int,int) will throw a digestexception . this parameter is ignored if its value is greater than or equal to the actual digest length ."}{"idx": 29388, "node_name": "msg", "Dec": "the detail message ."}{"idx": 29390, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 29391, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29393, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29397, "node_name": "msg", "Dec": "the detail message ."}{"idx": 29400, "node_name": "name", "Dec": "name of the permission object being created ."}{"idx": 29402, "node_name": "object", "Dec": "the object being guarded ( currently ignored ) ."}{"idx": 29404, "node_name": "permission", "Dec": "the permission to check against ."}{"idx": 29406, "node_name": "obj", "Dec": "the object we are testing for equality with this object ."}{"idx": 29415, "node_name": "permission", "Dec": "the permission object to add ."}{"idx": 29417, "node_name": "permission", "Dec": "the permission object to compare ."}{"idx": 29426, "node_name": "permission", "Dec": "the permission object to add ."}{"idx": 29428, "node_name": "permission", "Dec": "the permission object to check ."}{"idx": 29432, "node_name": "name", "Dec": "the attribute's identifier"}{"idx": 29433, "node_name": "value", "Dec": "the attribute's value"}{"idx": 29435, "node_name": "encoded", "Dec": "the attribute's asn.1 der encoding . it is cloned to prevent subsequent modificaion ."}{"idx": 29440, "node_name": "obj", "Dec": "the comparison object"}{"idx": 29448, "node_name": "p", "Dec": "the new system policy object ."}{"idx": 29450, "node_name": "type", "Dec": "the specified policy type . see the policy section in the java security standard algorithm names specification for a list of standard policy types ."}{"idx": 29451, "node_name": "params", "Dec": "parameters for the policy , which may be null ."}{"idx": 29453, "node_name": "type", "Dec": "the specified policy type . see the policy section in the java security standard algorithm names specification for a list of standard policy types ."}{"idx": 29454, "node_name": "params", "Dec": "parameters for the policy , which may be null ."}{"idx": 29455, "node_name": "provider", "Dec": "the provider ."}{"idx": 29457, "node_name": "type", "Dec": "the specified policy type . see the policy section in the java security standard algorithm names specification for a list of standard policy types ."}{"idx": 29458, "node_name": "params", "Dec": "parameters for the policy , which may be null ."}{"idx": 29459, "node_name": "provider", "Dec": "the provider ."}{"idx": 29464, "node_name": "codesource", "Dec": "the codesource to which the returned permissioncollection has been granted ."}{"idx": 29466, "node_name": "domain", "Dec": "the protectiondomain to which the returned permissioncollection has been granted ."}{"idx": 29468, "node_name": "domain", "Dec": "the protectiondomain to test"}{"idx": 29469, "node_name": "permission", "Dec": "the permission object to be tested for implication ."}{"idx": 29475, "node_name": "domain", "Dec": "the protectiondomain to check ."}{"idx": 29476, "node_name": "permission", "Dec": "check whether this permission is granted to the specified domain ."}{"idx": 29479, "node_name": "codesource", "Dec": "the codesource to which the returned permissioncollection has been granted ."}{"idx": 29481, "node_name": "domain", "Dec": "the protectiondomain to which the returned permissioncollection has been granted ."}{"idx": 29484, "node_name": "another", "Dec": "principal to compare with ."}{"idx": 29489, "node_name": "subject", "Dec": "the subject"}{"idx": 29495, "node_name": "exception", "Dec": "the exception thrown"}{"idx": 29501, "node_name": "codesource", "Dec": "the codesource associated with this domain"}{"idx": 29502, "node_name": "permissions", "Dec": "the permissions granted to this domain"}{"idx": 29504, "node_name": "codesource", "Dec": "the codesource associated with this domain"}{"idx": 29505, "node_name": "permissions", "Dec": "the permissions granted to this domain"}{"idx": 29506, "node_name": "classloader", "Dec": "the classloader associated with this domain"}{"idx": 29507, "node_name": "principals", "Dec": "the array of principals associated with this domain . the contents of the array are copied to protect against subsequent modification ."}{"idx": 29514, "node_name": "perm", "Dec": "the permission object to check ."}{"idx": 29518, "node_name": "name", "Dec": "the provider name ."}{"idx": 29519, "node_name": "versionstr", "Dec": "the provider version string ."}{"idx": 29520, "node_name": "info", "Dec": "a description of the provider and its services ."}{"idx": 29522, "node_name": "configarg", "Dec": "the configuration information for configuring this provider ."}{"idx": 29530, "node_name": "instream", "Dec": "the input stream ."}{"idx": 29532, "node_name": "t", "Dec": "mappings to be stored in this map"}{"idx": 29537, "node_name": "key", "Dec": "the hashtable key"}{"idx": 29538, "node_name": "value", "Dec": "the value"}{"idx": 29540, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 29541, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 29543, "node_name": "key", "Dec": "the key that needs to be removed"}{"idx": 29545, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 29546, "node_name": "value", "Dec": "value expected to be associated with the specified key"}{"idx": 29548, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 29549, "node_name": "oldvalue", "Dec": "value expected to be associated with the specified key"}{"idx": 29550, "node_name": "newvalue", "Dec": "value to be associated with the specified key"}{"idx": 29552, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 29553, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 29555, "node_name": "function", "Dec": "the function to apply to each entry"}{"idx": 29557, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 29558, "node_name": "remappingfunction", "Dec": "the remapping function to compute a value"}{"idx": 29560, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 29561, "node_name": "mappingfunction", "Dec": "the mapping function to compute a value"}{"idx": 29563, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 29564, "node_name": "remappingfunction", "Dec": "the remapping function to compute a value"}{"idx": 29566, "node_name": "key", "Dec": "key with which the resulting value is to be associated"}{"idx": 29567, "node_name": "value", "Dec": "the non-null value to be merged with the existing value associated with the key or , if no existing value or a null value is associated with the key , to be associated with the key"}{"idx": 29568, "node_name": "remappingfunction", "Dec": "the remapping function to recompute a value if present"}{"idx": 29570, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 29571, "node_name": "defaultvalue", "Dec": "the default mapping of the key"}{"idx": 29573, "node_name": "action", "Dec": "the action to be performed for each entry"}{"idx": 29575, "node_name": "type", "Dec": "the type of service requested ( for example , messagedigest )"}{"idx": 29576, "node_name": "algorithm", "Dec": "the case insensitive algorithm name ( or alternate alias ) of the service requested ( for example , sha-1 )"}{"idx": 29579, "node_name": "s", "Dec": "the service to add"}{"idx": 29581, "node_name": "s", "Dec": "the service to be removed"}{"idx": 29584, "node_name": "provider", "Dec": "the provider that offers this service"}{"idx": 29585, "node_name": "type", "Dec": "the type of this service"}{"idx": 29586, "node_name": "algorithm", "Dec": "the algorithm name"}{"idx": 29587, "node_name": "classname", "Dec": "the name of the class implementing this service"}{"idx": 29588, "node_name": "aliases", "Dec": "list of aliases or null if algorithm has no aliases"}{"idx": 29589, "node_name": "attributes", "Dec": "map of attributes or null if this implementation has no attributes"}{"idx": 29595, "node_name": "name", "Dec": "the name of the requested attribute"}{"idx": 29597, "node_name": "constructorparameter", "Dec": "the value to pass to the constructor , or null if this type of service does not use a constructorparameter ."}{"idx": 29599, "node_name": "parameter", "Dec": "the parameter to test"}{"idx": 29604, "node_name": "s", "Dec": "the detail message ."}{"idx": 29606, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 29607, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29609, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29613, "node_name": "parent", "Dec": "the parent classloader"}{"idx": 29616, "node_name": "name", "Dec": "class loader name ; or null if not named"}{"idx": 29617, "node_name": "parent", "Dec": "the parent class loader"}{"idx": 29619, "node_name": "name", "Dec": "the expected name of the class , or null if not known , using ' . ' and not ' / ' as the separator and without a trailing \" .class \" suffix ."}{"idx": 29620, "node_name": "b", "Dec": "the bytes that make up the class data . the bytes in positions off through off+ len-1 should have the format of a valid class file as defined by the java\u2122 virtual machine specification ."}{"idx": 29621, "node_name": "off", "Dec": "the start offset in b of the class data"}{"idx": 29622, "node_name": "len", "Dec": "the length of the class data"}{"idx": 29623, "node_name": "cs", "Dec": "the associated codesource , or null if none"}{"idx": 29625, "node_name": "name", "Dec": "the expected name of the class , or null if not known , using ' . ' and not ' / ' as the separator and without a trailing \" .class \" suffix ."}{"idx": 29626, "node_name": "b", "Dec": "the bytes that make up the class data . the bytes from positions b.position() through b.position() + b.limit() -1 should have the format of a valid class file as defined by the java\u2122 virtual machine specification ."}{"idx": 29627, "node_name": "cs", "Dec": "the associated codesource , or null if none"}{"idx": 29629, "node_name": "codesource", "Dec": "the codesource ."}{"idx": 29633, "node_name": "seed", "Dec": "the seed ."}{"idx": 29635, "node_name": "securerandomspi", "Dec": "the securerandom implementation ."}{"idx": 29636, "node_name": "provider", "Dec": "the provider ."}{"idx": 29638, "node_name": "algorithm", "Dec": "the name of the rng algorithm . see the securerandom section in the java security standard algorithm names specification for information about standard rng algorithm names ."}{"idx": 29640, "node_name": "algorithm", "Dec": "the name of the rng algorithm . see the securerandom section in the java security standard algorithm names specification for information about standard rng algorithm names ."}{"idx": 29641, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 29643, "node_name": "algorithm", "Dec": "the name of the rng algorithm . see the securerandom section in the java security standard algorithm names specification for information about standard rng algorithm names ."}{"idx": 29644, "node_name": "provider", "Dec": "the provider ."}{"idx": 29646, "node_name": "algorithm", "Dec": "the name of the rng algorithm . see the securerandom section in the java security standard algorithm names specification for information about standard rng algorithm names ."}{"idx": 29647, "node_name": "params", "Dec": "the securerandomparameters the newly created securerandom object must support ."}{"idx": 29649, "node_name": "algorithm", "Dec": "the name of the rng algorithm . see the securerandom section in the java security standard algorithm names specification for information about standard rng algorithm names ."}{"idx": 29650, "node_name": "params", "Dec": "the securerandomparameters the newly created securerandom object must support ."}{"idx": 29651, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 29653, "node_name": "algorithm", "Dec": "the name of the rng algorithm . see the securerandom section in the java security standard algorithm names specification for information about standard rng algorithm names ."}{"idx": 29654, "node_name": "params", "Dec": "the securerandomparameters the newly created securerandom object must support ."}{"idx": 29655, "node_name": "provider", "Dec": "the provider ."}{"idx": 29661, "node_name": "seed", "Dec": "the seed ."}{"idx": 29663, "node_name": "seed", "Dec": "the seed ."}{"idx": 29665, "node_name": "bytes", "Dec": "the array to be filled in with random bytes ."}{"idx": 29667, "node_name": "bytes", "Dec": "the array to be filled in with random bytes"}{"idx": 29668, "node_name": "params", "Dec": "additional parameters"}{"idx": 29670, "node_name": "numbits", "Dec": "number of pseudo-random bits to be generated , where 0 <= numbits <= 32 ."}{"idx": 29672, "node_name": "numbytes", "Dec": "the number of seed bytes to generate ."}{"idx": 29674, "node_name": "numbytes", "Dec": "the number of seed bytes to generate ."}{"idx": 29678, "node_name": "params", "Dec": "extra parameters"}{"idx": 29683, "node_name": "params", "Dec": "the securerandomparameters object . this argument can be null ."}{"idx": 29685, "node_name": "seed", "Dec": "the seed ."}{"idx": 29687, "node_name": "bytes", "Dec": "the array to be filled in with random bytes ."}{"idx": 29689, "node_name": "bytes", "Dec": "the array to be filled in with random bytes"}{"idx": 29690, "node_name": "params", "Dec": "additional parameters"}{"idx": 29692, "node_name": "numbytes", "Dec": "the number of seed bytes to generate ."}{"idx": 29694, "node_name": "params", "Dec": "extra parameters , can be null ."}{"idx": 29699, "node_name": "provider", "Dec": "the provider to be added ."}{"idx": 29700, "node_name": "position", "Dec": "the preference position that the caller would like for this provider ."}{"idx": 29702, "node_name": "provider", "Dec": "the provider to be added ."}{"idx": 29704, "node_name": "name", "Dec": "the name of the provider to remove ."}{"idx": 29707, "node_name": "name", "Dec": "the name of the provider to get ."}{"idx": 29709, "node_name": "filter", "Dec": "the criterion for selecting providers . the filter is case-insensitive ."}{"idx": 29711, "node_name": "filter", "Dec": "the criteria for selecting providers . the filter is case-insensitive ."}{"idx": 29713, "node_name": "key", "Dec": "the key of the property being retrieved ."}{"idx": 29715, "node_name": "key", "Dec": "the name of the property to be set ."}{"idx": 29716, "node_name": "datum", "Dec": "the value of the property to be set ."}{"idx": 29718, "node_name": "servicename", "Dec": "the name of the java cryptographic service ( e.g. , signature , messagedigest , cipher , mac , keystore ) . note : this parameter is case-insensitive ."}{"idx": 29721, "node_name": "name", "Dec": "the name of the securitypermission"}{"idx": 29723, "node_name": "name", "Dec": "the name of the securitypermission"}{"idx": 29724, "node_name": "actions", "Dec": "should be null ."}{"idx": 29731, "node_name": "algorithm", "Dec": "the standard string name of the algorithm . see the signature section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29733, "node_name": "algorithm", "Dec": "the standard name of the algorithm requested . see the signature section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29735, "node_name": "algorithm", "Dec": "the name of the algorithm requested . see the signature section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29736, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 29738, "node_name": "algorithm", "Dec": "the name of the algorithm requested . see the signature section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29739, "node_name": "provider", "Dec": "the provider ."}{"idx": 29742, "node_name": "publickey", "Dec": "the public key of the identity whose signature is going to be verified ."}{"idx": 29744, "node_name": "certificate", "Dec": "the certificate of the identity whose signature is going to be verified ."}{"idx": 29746, "node_name": "privatekey", "Dec": "the private key of the identity whose signature is going to be generated ."}{"idx": 29748, "node_name": "privatekey", "Dec": "the private key of the identity whose signature is going to be generated ."}{"idx": 29749, "node_name": "random", "Dec": "the source of randomness for this signature ."}{"idx": 29752, "node_name": "outbuf", "Dec": "buffer for the signature result ."}{"idx": 29753, "node_name": "offset", "Dec": "offset into outbuf where the signature is stored ."}{"idx": 29754, "node_name": "len", "Dec": "number of bytes within outbuf allotted for the signature ."}{"idx": 29756, "node_name": "signature", "Dec": "the signature bytes to be verified ."}{"idx": 29758, "node_name": "signature", "Dec": "the signature bytes to be verified ."}{"idx": 29759, "node_name": "offset", "Dec": "the offset to start from in the array of bytes ."}{"idx": 29760, "node_name": "length", "Dec": "the number of bytes to use , starting at offset ."}{"idx": 29762, "node_name": "b", "Dec": "the byte to use for the update ."}{"idx": 29764, "node_name": "data", "Dec": "the byte array to use for the update ."}{"idx": 29766, "node_name": "data", "Dec": "the array of bytes ."}{"idx": 29767, "node_name": "off", "Dec": "the offset to start from in the array of bytes ."}{"idx": 29768, "node_name": "len", "Dec": "the number of bytes to use , starting at offset ."}{"idx": 29770, "node_name": "data", "Dec": "the bytebuffer"}{"idx": 29774, "node_name": "params", "Dec": "the parameters"}{"idx": 29780, "node_name": "msg", "Dec": "the detail message ."}{"idx": 29782, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 29783, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29785, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29790, "node_name": "publickey", "Dec": "the public key of the identity whose signature is going to be verified ."}{"idx": 29792, "node_name": "privatekey", "Dec": "the private key of the identity whose signature will be generated ."}{"idx": 29794, "node_name": "privatekey", "Dec": "the private key of the identity whose signature will be generated ."}{"idx": 29795, "node_name": "random", "Dec": "the source of randomness"}{"idx": 29797, "node_name": "b", "Dec": "the byte to use for the update ."}{"idx": 29799, "node_name": "b", "Dec": "the array of bytes"}{"idx": 29800, "node_name": "off", "Dec": "the offset to start from in the array of bytes"}{"idx": 29801, "node_name": "len", "Dec": "the number of bytes to use , starting at offset"}{"idx": 29803, "node_name": "input", "Dec": "the bytebuffer"}{"idx": 29806, "node_name": "outbuf", "Dec": "buffer for the signature result ."}{"idx": 29807, "node_name": "offset", "Dec": "offset into outbuf where the signature is stored ."}{"idx": 29808, "node_name": "len", "Dec": "number of bytes within outbuf allotted for the signature . both this default implementation and the sun provider do not return partial digests . if the value of this parameter is less than the actual signature length , engineSign(byte[],int,int) will throw a signatureexception . this parameter is ignored if its value is greater than or equal to the actual signature length ."}{"idx": 29810, "node_name": "sigbytes", "Dec": "the signature bytes to be verified ."}{"idx": 29812, "node_name": "sigbytes", "Dec": "the signature bytes to be verified ."}{"idx": 29813, "node_name": "offset", "Dec": "the offset to start from in the array of bytes ."}{"idx": 29814, "node_name": "length", "Dec": "the number of bytes to use , starting at offset ."}{"idx": 29816, "node_name": "params", "Dec": "the parameters"}{"idx": 29821, "node_name": "object", "Dec": "the object to be signed ."}{"idx": 29822, "node_name": "signingkey", "Dec": "the private key for signing ."}{"idx": 29823, "node_name": "signingengine", "Dec": "the signature signing engine ."}{"idx": 29828, "node_name": "verificationkey", "Dec": "the public key for verification ."}{"idx": 29829, "node_name": "verificationengine", "Dec": "the signature verification engine ."}{"idx": 29834, "node_name": "primeplen", "Dec": "the desired length of the prime p in bits ."}{"idx": 29835, "node_name": "subprimeqlen", "Dec": "the desired length of the sub-prime q in bits ."}{"idx": 29837, "node_name": "primeplen", "Dec": "the desired length of the prime p in bits ."}{"idx": 29838, "node_name": "subprimeqlen", "Dec": "the desired length of the sub-prime q in bits ."}{"idx": 29839, "node_name": "seedlen", "Dec": "the desired length of the domain parameter seed in bits , shall be equal to or greater than subprimeqlen ."}{"idx": 29845, "node_name": "p", "Dec": "the prime ."}{"idx": 29846, "node_name": "q", "Dec": "the sub-prime ."}{"idx": 29847, "node_name": "g", "Dec": "the base ."}{"idx": 29853, "node_name": "x", "Dec": "the private key ."}{"idx": 29854, "node_name": "p", "Dec": "the prime ."}{"idx": 29855, "node_name": "q", "Dec": "the sub-prime ."}{"idx": 29856, "node_name": "g", "Dec": "the base ."}{"idx": 29863, "node_name": "y", "Dec": "the public key ."}{"idx": 29864, "node_name": "p", "Dec": "the prime ."}{"idx": 29865, "node_name": "q", "Dec": "the sub-prime ."}{"idx": 29866, "node_name": "g", "Dec": "the base ."}{"idx": 29875, "node_name": "m", "Dec": "with 2^m being the number of elements ."}{"idx": 29877, "node_name": "m", "Dec": "with 2^m being the number of elements ."}{"idx": 29878, "node_name": "rp", "Dec": "the biginteger whose i-th bit corresponds to the i-th coefficient of the reduction polynomial ."}{"idx": 29880, "node_name": "m", "Dec": "with 2^m being the number of elements ."}{"idx": 29881, "node_name": "ks", "Dec": "the order of the middle term ( s ) of the reduction polynomial . contents of this array are copied to protect against subsequent modification ."}{"idx": 29887, "node_name": "obj", "Dec": "the object to be compared ."}{"idx": 29891, "node_name": "p", "Dec": "the prime ."}{"idx": 29895, "node_name": "obj", "Dec": "the object to be compared ."}{"idx": 29899, "node_name": "stdname", "Dec": "the standard name of the to-be-generated ec domain parameters ."}{"idx": 29902, "node_name": "curve", "Dec": "the elliptic curve which this parameter defines ."}{"idx": 29903, "node_name": "g", "Dec": "the generator which is also known as the base point ."}{"idx": 29904, "node_name": "n", "Dec": "the order of the generator g ."}{"idx": 29905, "node_name": "h", "Dec": "the cofactor ."}{"idx": 29913, "node_name": "x", "Dec": "the affine x-coordinate ."}{"idx": 29914, "node_name": "y", "Dec": "the affine y-coordinate ."}{"idx": 29918, "node_name": "obj", "Dec": "the object to be compared ."}{"idx": 29922, "node_name": "s", "Dec": "the private value ."}{"idx": 29923, "node_name": "params", "Dec": "the associated elliptic curve domain parameters ."}{"idx": 29928, "node_name": "w", "Dec": "the public point ."}{"idx": 29929, "node_name": "params", "Dec": "the associated elliptic curve domain parameters ."}{"idx": 29934, "node_name": "field", "Dec": "the finite field that this elliptic curve is over ."}{"idx": 29935, "node_name": "a", "Dec": "the first coefficient of this elliptic curve ."}{"idx": 29936, "node_name": "b", "Dec": "the second coefficient of this elliptic curve ."}{"idx": 29938, "node_name": "field", "Dec": "the finite field that this elliptic curve is over ."}{"idx": 29939, "node_name": "a", "Dec": "the first coefficient of this elliptic curve ."}{"idx": 29940, "node_name": "b", "Dec": "the second coefficient of this elliptic curve ."}{"idx": 29941, "node_name": "seed", "Dec": "the bytes used during curve generation for later validation . contents of this array are copied to protect against subsequent modification ."}{"idx": 29947, "node_name": "obj", "Dec": "the object to be compared ."}{"idx": 29951, "node_name": "encodedkey", "Dec": "the encoded key . the contents of the array are copied to protect against subsequent modification ."}{"idx": 29953, "node_name": "encodedkey", "Dec": "the encoded key . the contents of the array are copied to protect against subsequent modification ."}{"idx": 29954, "node_name": "algorithm", "Dec": "the algorithm name of the encoded key see the keyfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 29961, "node_name": "msg", "Dec": "the detail message ."}{"idx": 29963, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 29964, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29966, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 29970, "node_name": "msg", "Dec": "the detail message ."}{"idx": 29981, "node_name": "mdname", "Dec": "the algorithm name for the message digest used in this mask generation function mgf1 ."}{"idx": 29987, "node_name": "stdname", "Dec": "the standard name of the algorithm parameters"}{"idx": 29991, "node_name": "encodedkey", "Dec": "the key , which is assumed to be encoded according to the pkcs #8 standard . the contents of the array are copied to protect against subsequent modification ."}{"idx": 29993, "node_name": "encodedkey", "Dec": "the key , which is assumed to be encoded according to the pkcs #8 standard . the contents of the array are copied to protect against subsequent modification ."}{"idx": 29994, "node_name": "algorithm", "Dec": "the algorithm name of the encoded private key see the keyfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 30001, "node_name": "mdname", "Dec": "the algorithm name of the hash function"}{"idx": 30002, "node_name": "mgfname", "Dec": "the algorithm name of the mask generation function"}{"idx": 30003, "node_name": "mgfspec", "Dec": "the parameters for the mask generation function . if null is specified , null will be returned by getmgfparameters() ."}{"idx": 30004, "node_name": "saltlen", "Dec": "the length of salt"}{"idx": 30005, "node_name": "trailerfield", "Dec": "the value of the trailer field"}{"idx": 30007, "node_name": "saltlen", "Dec": "the length of salt in bytes to be used in pkcs #1 pss encoding"}{"idx": 30017, "node_name": "keysize", "Dec": "the modulus size ( specified in number of bits )"}{"idx": 30018, "node_name": "publicexponent", "Dec": "the public exponent"}{"idx": 30020, "node_name": "keysize", "Dec": "the modulus size ( specified in number of bits )"}{"idx": 30021, "node_name": "publicexponent", "Dec": "the public exponent"}{"idx": 30022, "node_name": "keyparams", "Dec": "the key parameters , may be null"}{"idx": 30028, "node_name": "modulus", "Dec": "the modulus n"}{"idx": 30029, "node_name": "publicexponent", "Dec": "the public exponent e"}{"idx": 30030, "node_name": "privateexponent", "Dec": "the private exponent d"}{"idx": 30031, "node_name": "primep", "Dec": "the prime factor p of n"}{"idx": 30032, "node_name": "primeq", "Dec": "the prime factor q of q"}{"idx": 30033, "node_name": "primeexponentp", "Dec": "this is d mod ( p-1 )"}{"idx": 30034, "node_name": "primeexponentq", "Dec": "this is d mod ( q-1 )"}{"idx": 30035, "node_name": "crtcoefficient", "Dec": "the chinese remainder theorem coefficient q-1 mod p"}{"idx": 30036, "node_name": "otherprimeinfo", "Dec": "triplets of the rest of primes , null can be specified if there are only two prime factors ( p and q )"}{"idx": 30038, "node_name": "modulus", "Dec": "the modulus n"}{"idx": 30039, "node_name": "publicexponent", "Dec": "the public exponent e"}{"idx": 30040, "node_name": "privateexponent", "Dec": "the private exponent d"}{"idx": 30041, "node_name": "primep", "Dec": "the prime factor p of n"}{"idx": 30042, "node_name": "primeq", "Dec": "the prime factor q of n"}{"idx": 30043, "node_name": "primeexponentp", "Dec": "this is d mod ( p-1 )"}{"idx": 30044, "node_name": "primeexponentq", "Dec": "this is d mod ( q-1 )"}{"idx": 30045, "node_name": "crtcoefficient", "Dec": "the chinese remainder theorem coefficient q-1 mod p"}{"idx": 30046, "node_name": "otherprimeinfo", "Dec": "triplets of the rest of primes , null can be specified if there are only two prime factors ( p and q )"}{"idx": 30047, "node_name": "keyparams", "Dec": "the parameters associated with key"}{"idx": 30057, "node_name": "prime", "Dec": "the prime factor of n ."}{"idx": 30058, "node_name": "primeexponent", "Dec": "the exponent ."}{"idx": 30059, "node_name": "crtcoefficient", "Dec": "the chinese remainder theorem coefficient ."}{"idx": 30065, "node_name": "modulus", "Dec": "the modulus n"}{"idx": 30066, "node_name": "publicexponent", "Dec": "the public exponent e"}{"idx": 30067, "node_name": "privateexponent", "Dec": "the private exponent d"}{"idx": 30068, "node_name": "primep", "Dec": "the prime factor p of n"}{"idx": 30069, "node_name": "primeq", "Dec": "the prime factor q of n"}{"idx": 30070, "node_name": "primeexponentp", "Dec": "this is d mod ( p-1 )"}{"idx": 30071, "node_name": "primeexponentq", "Dec": "this is d mod ( q-1 )"}{"idx": 30072, "node_name": "crtcoefficient", "Dec": "the chinese remainder theorem coefficient q-1 mod p"}{"idx": 30074, "node_name": "modulus", "Dec": "the modulus n"}{"idx": 30075, "node_name": "publicexponent", "Dec": "the public exponent e"}{"idx": 30076, "node_name": "privateexponent", "Dec": "the private exponent d"}{"idx": 30077, "node_name": "primep", "Dec": "the prime factor p of n"}{"idx": 30078, "node_name": "primeq", "Dec": "the prime factor q of n"}{"idx": 30079, "node_name": "primeexponentp", "Dec": "this is d mod ( p-1 )"}{"idx": 30080, "node_name": "primeexponentq", "Dec": "this is d mod ( q-1 )"}{"idx": 30081, "node_name": "crtcoefficient", "Dec": "the chinese remainder theorem coefficient q-1 mod p"}{"idx": 30082, "node_name": "keyparams", "Dec": "the parameters associated with key"}{"idx": 30091, "node_name": "modulus", "Dec": "the modulus"}{"idx": 30092, "node_name": "privateexponent", "Dec": "the private exponent"}{"idx": 30094, "node_name": "modulus", "Dec": "the modulus"}{"idx": 30095, "node_name": "privateexponent", "Dec": "the private exponent"}{"idx": 30096, "node_name": "params", "Dec": "the parameters associated with this key , may be null"}{"idx": 30102, "node_name": "modulus", "Dec": "the modulus"}{"idx": 30103, "node_name": "publicexponent", "Dec": "the public exponent"}{"idx": 30105, "node_name": "modulus", "Dec": "the modulus"}{"idx": 30106, "node_name": "publicexponent", "Dec": "the public exponent"}{"idx": 30107, "node_name": "params", "Dec": "the parameters associated with this key , may be null"}{"idx": 30113, "node_name": "encodedkey", "Dec": "the key , which is assumed to be encoded according to the x.509 standard . the contents of the array are copied to protect against subsequent modification ."}{"idx": 30115, "node_name": "encodedkey", "Dec": "the key , which is assumed to be encoded according to the x.509 standard . the contents of the array are copied to protect against subsequent modification ."}{"idx": 30116, "node_name": "algorithm", "Dec": "the algorithm name of the encoded public key see the keyfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 30121, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 30122, "node_name": "scalar", "Dec": "the unpruned encoded scalar value . this array is copied to protect against subsequent modification ."}{"idx": 30127, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 30128, "node_name": "u", "Dec": "the u-coordinate of the point , represented using a biginteger which may hold any value"}{"idx": 30133, "node_name": "timestamp", "Dec": "is the timestamp's date and time . it must not be null ."}{"idx": 30134, "node_name": "signercertpath", "Dec": "is the tsa's certificate path . it must not be null ."}{"idx": 30139, "node_name": "obj", "Dec": "the object to test for equality with this timestamp ."}{"idx": 30144, "node_name": "msg", "Dec": "the detail message ."}{"idx": 30148, "node_name": "msg", "Dec": "the detail message ."}{"idx": 30151, "node_name": "type", "Dec": "the class name of the permission class that will be created when this unresolved permission is resolved ."}{"idx": 30152, "node_name": "name", "Dec": "the name of the permission ."}{"idx": 30153, "node_name": "actions", "Dec": "the actions of the permission ."}{"idx": 30154, "node_name": "certs", "Dec": "the certificates the permission's class was signed with . this is a list of certificate chains , where each chain is composed of a signer certificate and optionally its supporting certificate chain . each chain is ordered bottom-to-top ( i.e. , with the signer certificate first and the ( root ) certificate authority last ) . the signer certificates are copied from the array . subsequent changes to the array will not affect this unsolvedpermission ."}{"idx": 30156, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 30158, "node_name": "obj", "Dec": "the object we are testing for equality with this object ."}{"idx": 30169, "node_name": "uri", "Dec": "the uri pointing to the data ."}{"idx": 30176, "node_name": "map", "Dec": "a java.util.map object that contains mappings of sql type names to classes in the java programming language"}{"idx": 30178, "node_name": "index", "Dec": "the array index of the first element to retrieve ; the first element is at index 1"}{"idx": 30179, "node_name": "count", "Dec": "the number of successive sql array elements to retrieve"}{"idx": 30181, "node_name": "index", "Dec": "the array index of the first element to retrieve ; the first element is at index 1"}{"idx": 30182, "node_name": "count", "Dec": "the number of successive sql array elements to retrieve"}{"idx": 30183, "node_name": "map", "Dec": "a java.util.map object that contains sql type names and the classes in the java programming language to which they are mapped"}{"idx": 30186, "node_name": "map", "Dec": "contains the mapping of sql user-defined types to classes in the java programming language"}{"idx": 30188, "node_name": "index", "Dec": "the array index of the first element to retrieve ; the first element is at index 1"}{"idx": 30189, "node_name": "count", "Dec": "the number of successive sql array elements to retrieve"}{"idx": 30191, "node_name": "index", "Dec": "the array index of the first element to retrieve ; the first element is at index 1"}{"idx": 30192, "node_name": "count", "Dec": "the number of successive sql array elements to retrieve"}{"idx": 30193, "node_name": "map", "Dec": "the map object that contains the mapping of sql type names to classes in the java ( tm ) programming language"}{"idx": 30197, "node_name": "reason", "Dec": "a description of the error"}{"idx": 30198, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 30199, "node_name": "vendorcode", "Dec": "an exception code used by a particular database vendor"}{"idx": 30200, "node_name": "updatecounts", "Dec": "an array of int , with each element indicating the update count , statement.success_no_info or statement.execute_failed for each sql command in the batch for jdbc drivers that continue processing after a command failure ; an update count or statement.success_no_info for each sql command in the batch prior to the failure for jdbc drivers that stop processing after a command failure"}{"idx": 30202, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 30203, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 30204, "node_name": "updatecounts", "Dec": "an array of int , with each element indicating the update count , statement.success_no_info or statement.execute_failed for each sql command in the batch for jdbc drivers that continue processing after a command failure ; an update count or statement.success_no_info for each sql command in the batch prior to the failure for jdbc drivers that stop processing after a command failure"}{"idx": 30206, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 30207, "node_name": "updatecounts", "Dec": "an array of int , with each element indicating the update count , statement.success_no_info or statement.execute_failed for each sql command in the batch for jdbc drivers that continue processing after a command failure ; an update count or statement.success_no_info for each sql command in the batch prior to the failure for jdbc drivers that stop processing after a command failure"}{"idx": 30209, "node_name": "updatecounts", "Dec": "an array of int , with each element indicating the update count , statement.success_no_info or statement.execute_failed for each sql command in the batch for jdbc drivers that continue processing after a command failure ; an update count or statement.success_no_info for each sql command in the batch prior to the failure for jdbc drivers that stop processing after a command failure"}{"idx": 30212, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 30214, "node_name": "updatecounts", "Dec": "an array of int , with each element indicating the update count , statement.success_no_info or statement.execute_failed for each sql command in the batch for jdbc drivers that continue processing after a command failure ; an update count or statement.success_no_info for each sql command in the batch prior to the failure for jdbc drivers that stop processing after a command failure"}{"idx": 30215, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 30217, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 30218, "node_name": "updatecounts", "Dec": "an array of int , with each element indicating the update count , statement.success_no_info or statement.execute_failed for each sql command in the batch for jdbc drivers that continue processing after a command failure ; an update count or statement.success_no_info for each sql command in the batch prior to the failure for jdbc drivers that stop processing after a command failure"}{"idx": 30219, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 30221, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 30222, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 30223, "node_name": "updatecounts", "Dec": "an array of int , with each element indicating the update count , statement.success_no_info or statement.execute_failed for each sql command in the batch for jdbc drivers that continue processing after a command failure ; an update count or statement.success_no_info for each sql command in the batch prior to the failure for jdbc drivers that stop processing after a command failure note : there is no validation of updatecounts for overflow and because of this it is recommended that you use <init>(java.lang.String,java.lang.String,int[],java.lang.Throwable) batchupdateexception ( string reason , string sqlstate , int vendorcode , long [ ] updatecounts , throwable cause ) ."}{"idx": 30224, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 30226, "node_name": "reason", "Dec": "a description of the error"}{"idx": 30227, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 30228, "node_name": "vendorcode", "Dec": "an exception code used by a particular database vendor"}{"idx": 30229, "node_name": "updatecounts", "Dec": "an array of int , with each element indicating the update count , statement.success_no_info or statement.execute_failed for each sql command in the batch for jdbc drivers that continue processing after a command failure ; an update count or statement.success_no_info for each sql command in the batch prior to the failure for jdbc drivers that stop processing after a command failure note : there is no validation of updatecounts for overflow and because of this it is recommended that you use <init>(java.lang.String,java.lang.String,int,int[],java.lang.Throwable) batchupdateexception ( string reason , string sqlstate , int vendorcode , long [ ] updatecounts , throwable cause ) ."}{"idx": 30230, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 30232, "node_name": "reason", "Dec": "a description of the error"}{"idx": 30233, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 30234, "node_name": "vendorcode", "Dec": "an exception code used by a particular database vendor"}{"idx": 30235, "node_name": "updatecounts", "Dec": "an array of long , with each element indicating the update count , statement.success_no_info or statement.execute_failed for each sql command in the batch for jdbc drivers that continue processing after a command failure ; an update count or statement.success_no_info for each sql command in the batch prior to the failure for jdbc drivers that stop processing after a command failure"}{"idx": 30236, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 30242, "node_name": "pos", "Dec": "the ordinal position of the first byte in the blob value to be extracted ; the first byte is at position 1"}{"idx": 30243, "node_name": "length", "Dec": "the number of consecutive bytes to be copied ; the value for length must be 0 or greater"}{"idx": 30246, "node_name": "pattern", "Dec": "the byte array for which to search"}{"idx": 30247, "node_name": "start", "Dec": "the position at which to begin searching ; the first position is 1"}{"idx": 30249, "node_name": "pattern", "Dec": "the blob object designating the blob value for which to search"}{"idx": 30250, "node_name": "start", "Dec": "the position in the blob value at which to begin searching ; the first position is 1"}{"idx": 30252, "node_name": "pos", "Dec": "the position in the blob object at which to start writing ; the first position is 1"}{"idx": 30253, "node_name": "bytes", "Dec": "the array of bytes to be written to the blob value that this blob object represents"}{"idx": 30255, "node_name": "pos", "Dec": "the position in the blob object at which to start writing ; the first position is 1"}{"idx": 30256, "node_name": "bytes", "Dec": "the array of bytes to be written to this blob object"}{"idx": 30257, "node_name": "offset", "Dec": "the offset into the array bytes at which to start reading the bytes to be set"}{"idx": 30258, "node_name": "len", "Dec": "the number of bytes to be written to the blob value from the array of bytes bytes"}{"idx": 30260, "node_name": "pos", "Dec": "the position in the blob value at which to start writing ; the first position is 1"}{"idx": 30262, "node_name": "len", "Dec": "the length , in bytes , to which the blob value that this blob object represents should be truncated"}{"idx": 30265, "node_name": "pos", "Dec": "the offset to the first byte of the partial value to be retrieved . the first byte in the blob is at position 1 ."}{"idx": 30266, "node_name": "length", "Dec": "the length in bytes of the partial value to be retrieved"}{"idx": 30269, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30270, "node_name": "sqltype", "Dec": "the jdbc type code defined by java.sql.types . if the parameter is of jdbc type numeric or decimal , the version of registeroutparameter that accepts a scale value should be used ."}{"idx": 30272, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30273, "node_name": "sqltype", "Dec": "the sql type code defined by java.sql.types ."}{"idx": 30274, "node_name": "scale", "Dec": "the desired number of digits to the right of the decimal point . it must be greater than or equal to zero ."}{"idx": 30277, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30279, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30281, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30283, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30285, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30287, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30289, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30291, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30293, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30295, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30297, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30299, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30301, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30303, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30305, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30306, "node_name": "map", "Dec": "the mapping from sql type names to java classes"}{"idx": 30308, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30310, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30312, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30314, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30316, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30317, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the date"}{"idx": 30319, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30320, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the time"}{"idx": 30322, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30323, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the timestamp"}{"idx": 30325, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 ,..."}{"idx": 30326, "node_name": "sqltype", "Dec": "a value from types"}{"idx": 30327, "node_name": "typename", "Dec": "the fully-qualified name of an sql structured type"}{"idx": 30329, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30330, "node_name": "sqltype", "Dec": "the jdbc type code defined by java.sql.types . if the parameter is of jdbc type numeric or decimal , the version of registeroutparameter that accepts a scale value should be used ."}{"idx": 30332, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30333, "node_name": "sqltype", "Dec": "sql type code defined by java.sql.types ."}{"idx": 30334, "node_name": "scale", "Dec": "the desired number of digits to the right of the decimal point . it must be greater than or equal to zero ."}{"idx": 30336, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30337, "node_name": "sqltype", "Dec": "a value from types"}{"idx": 30338, "node_name": "typename", "Dec": "the fully-qualified name of an sql structured type"}{"idx": 30340, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 ,..."}{"idx": 30342, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30343, "node_name": "val", "Dec": "the parameter value"}{"idx": 30345, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30346, "node_name": "sqltype", "Dec": "the sql type code defined in java.sql.types"}{"idx": 30348, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30349, "node_name": "x", "Dec": "the parameter value"}{"idx": 30351, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30352, "node_name": "x", "Dec": "the parameter value"}{"idx": 30354, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30355, "node_name": "x", "Dec": "the parameter value"}{"idx": 30357, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30358, "node_name": "x", "Dec": "the parameter value"}{"idx": 30360, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30361, "node_name": "x", "Dec": "the parameter value"}{"idx": 30363, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30364, "node_name": "x", "Dec": "the parameter value"}{"idx": 30366, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30367, "node_name": "x", "Dec": "the parameter value"}{"idx": 30369, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30370, "node_name": "x", "Dec": "the parameter value"}{"idx": 30372, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30373, "node_name": "x", "Dec": "the parameter value"}{"idx": 30375, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30376, "node_name": "x", "Dec": "the parameter value"}{"idx": 30378, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30379, "node_name": "x", "Dec": "the parameter value"}{"idx": 30381, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30382, "node_name": "x", "Dec": "the parameter value"}{"idx": 30384, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30385, "node_name": "x", "Dec": "the parameter value"}{"idx": 30387, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30388, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 30389, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 30391, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30392, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 30393, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 30395, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30396, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 30397, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database . the scale argument may further qualify this type ."}{"idx": 30398, "node_name": "scale", "Dec": "for java.sql.types.decimal or java.sql.types.numeric types , this is the number of digits after the decimal point . for all other types , this value will be ignored ."}{"idx": 30400, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30401, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 30402, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database"}{"idx": 30404, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30405, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 30407, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30408, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data used as the designated parameter"}{"idx": 30409, "node_name": "length", "Dec": "the number of characters in the stream"}{"idx": 30411, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30412, "node_name": "x", "Dec": "the parameter value"}{"idx": 30413, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the date"}{"idx": 30415, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30416, "node_name": "x", "Dec": "the parameter value"}{"idx": 30417, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the time"}{"idx": 30419, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30420, "node_name": "x", "Dec": "the parameter value"}{"idx": 30421, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the timestamp"}{"idx": 30423, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30424, "node_name": "sqltype", "Dec": "a value from java.sql.types"}{"idx": 30425, "node_name": "typename", "Dec": "the fully-qualified name of an sql user-defined type ; ignored if the parameter is not a user-defined type or sql ref value"}{"idx": 30427, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30429, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30431, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30433, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30435, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30437, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30439, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30441, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30443, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30445, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30447, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30449, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30451, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30453, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30455, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30456, "node_name": "map", "Dec": "the mapping from sql type names to java classes"}{"idx": 30458, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30460, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30462, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30464, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30466, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30467, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the date"}{"idx": 30469, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30470, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the time"}{"idx": 30472, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30473, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the timestamp"}{"idx": 30475, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30477, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 ,..."}{"idx": 30479, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30481, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30482, "node_name": "x", "Dec": "the parameter value"}{"idx": 30484, "node_name": "parametername", "Dec": "the name of the parameter to be set"}{"idx": 30485, "node_name": "value", "Dec": "the parameter value"}{"idx": 30487, "node_name": "parametername", "Dec": "the name of the parameter to be set"}{"idx": 30488, "node_name": "value", "Dec": "the parameter value"}{"idx": 30489, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 30491, "node_name": "parametername", "Dec": "the name of the parameter to be set"}{"idx": 30492, "node_name": "value", "Dec": "the parameter value"}{"idx": 30494, "node_name": "parametername", "Dec": "the name of the parameter to be set"}{"idx": 30495, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 30496, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 30498, "node_name": "parametername", "Dec": "the name of the parameter to be set the second is 2 , ..."}{"idx": 30499, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 30500, "node_name": "length", "Dec": "the number of bytes in the parameter data ."}{"idx": 30502, "node_name": "parametername", "Dec": "the name of the parameter to be set"}{"idx": 30503, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 30504, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 30506, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30508, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30510, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30511, "node_name": "xmlobject", "Dec": "a sqlxml object that maps an sql xml value"}{"idx": 30513, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 30515, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30517, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 30519, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30521, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 30523, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30525, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 30527, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30529, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30530, "node_name": "x", "Dec": "a blob object that maps an sql blob value"}{"idx": 30532, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30533, "node_name": "x", "Dec": "a clob object that maps an sql clob value"}{"idx": 30535, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30536, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 30537, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 30539, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30540, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 30541, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 30543, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30544, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data used as the designated parameter"}{"idx": 30545, "node_name": "length", "Dec": "the number of characters in the stream"}{"idx": 30547, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30548, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 30550, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30551, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 30553, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30554, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data"}{"idx": 30556, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30557, "node_name": "value", "Dec": "the parameter value"}{"idx": 30559, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30560, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 30562, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30563, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 30565, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30566, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 30568, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30569, "node_name": "type", "Dec": "class representing the java data type to convert the designated parameter to ."}{"idx": 30571, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30572, "node_name": "type", "Dec": "class representing the java data type to convert the designated parameter to ."}{"idx": 30574, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30575, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 30576, "node_name": "targetsqltype", "Dec": "the sql type to be sent to the database . the scale argument may further qualify this type ."}{"idx": 30577, "node_name": "scaleorlength", "Dec": "for java.sql.jdbctype.decimal or java.sql.jdbctype.numeric types , this is the number of digits after the decimal point . for java object types inputstream and reader , this is the length of the data in the stream or reader . for all other types , this value will be ignored ."}{"idx": 30579, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30580, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 30581, "node_name": "targetsqltype", "Dec": "the sql type to be sent to the database"}{"idx": 30583, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30584, "node_name": "sqltype", "Dec": "the jdbc type code defined by sqltype to use to register the out parameter . if the parameter is of jdbc type jdbctype.numeric or jdbctype.decimal , the version of registeroutparameter that accepts a scale value should be used ."}{"idx": 30586, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , and so on"}{"idx": 30587, "node_name": "sqltype", "Dec": "the jdbc type code defined by sqltype to use to register the out parameter ."}{"idx": 30588, "node_name": "scale", "Dec": "the desired number of digits to the right of the decimal point . it must be greater than or equal to zero ."}{"idx": 30590, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 ,..."}{"idx": 30591, "node_name": "sqltype", "Dec": "the jdbc type code defined by sqltype to use to register the out parameter ."}{"idx": 30592, "node_name": "typename", "Dec": "the fully-qualified name of an sql structured type"}{"idx": 30594, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30595, "node_name": "sqltype", "Dec": "the jdbc type code defined by sqltype to use to register the out parameter . if the parameter is of jdbc type jdbctype.numeric or jdbctype.decimal , the version of registeroutparameter that accepts a scale value should be used ."}{"idx": 30597, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30598, "node_name": "sqltype", "Dec": "the jdbc type code defined by sqltype to use to register the out parameter ."}{"idx": 30599, "node_name": "scale", "Dec": "the desired number of digits to the right of the decimal point . it must be greater than or equal to zero ."}{"idx": 30601, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 30602, "node_name": "sqltype", "Dec": "the jdbc type code defined by sqltype to use to register the out parameter ."}{"idx": 30603, "node_name": "typename", "Dec": "the fully-qualified name of an sql structured type"}{"idx": 30607, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 30611, "node_name": "pos", "Dec": "the first character of the substring to be extracted . the first character is at position 1 ."}{"idx": 30612, "node_name": "length", "Dec": "the number of consecutive characters to be copied ; the value for length must be 0 or greater"}{"idx": 30616, "node_name": "searchstr", "Dec": "the substring for which to search"}{"idx": 30617, "node_name": "start", "Dec": "the position at which to begin searching ; the first position is 1"}{"idx": 30619, "node_name": "searchstr", "Dec": "the clob object for which to search"}{"idx": 30620, "node_name": "start", "Dec": "the position at which to begin searching ; the first position is 1"}{"idx": 30622, "node_name": "pos", "Dec": "the position at which to start writing to the clob value that this clob object represents ; the first position is 1 ."}{"idx": 30623, "node_name": "str", "Dec": "the string to be written to the clob value that this clob designates"}{"idx": 30625, "node_name": "pos", "Dec": "the position at which to start writing to this clob object ; the first position is 1"}{"idx": 30626, "node_name": "str", "Dec": "the string to be written to the clob value that this clob object represents"}{"idx": 30627, "node_name": "offset", "Dec": "the offset into str to start reading the characters to be written"}{"idx": 30628, "node_name": "len", "Dec": "the number of characters to be written"}{"idx": 30630, "node_name": "pos", "Dec": "the position at which to start writing to this clob object ; the first position is 1"}{"idx": 30632, "node_name": "pos", "Dec": "the position at which to start writing to the clob value ; the first position is 1"}{"idx": 30634, "node_name": "len", "Dec": "the length , in characters , to which the clob value should be truncated"}{"idx": 30637, "node_name": "pos", "Dec": "the offset to the first character of the partial value to be retrieved . the first character in the clob is at position 1 ."}{"idx": 30638, "node_name": "length", "Dec": "the length in characters of the partial value to be retrieved ."}{"idx": 30647, "node_name": "sql", "Dec": "an sql statement that may contain one or more ' ? ' in parameter placeholders"}{"idx": 30649, "node_name": "sql", "Dec": "an sql statement that may contain one or more ' ? ' parameter placeholders . typically this statement is specified using jdbc call escape syntax ."}{"idx": 30651, "node_name": "sql", "Dec": "an sql statement that may contain one or more ' ? ' parameter placeholders"}{"idx": 30653, "node_name": "autocommit", "Dec": "true to enable auto-commit mode ; false to disable it"}{"idx": 30661, "node_name": "readonly", "Dec": "true enables read-only mode ; false disables it"}{"idx": 30664, "node_name": "catalog", "Dec": "the name of a catalog ( subspace in this connection object's database ) in which to work"}{"idx": 30667, "node_name": "level", "Dec": "one of the following connection constants : connection.transaction_read_uncommitted , connection.transaction_read_committed , connection.transaction_repeatable_read , or connection.transaction_serializable . ( note that connection.transaction_none cannot be used because it specifies that transactions are not supported . )"}{"idx": 30672, "node_name": "resultsettype", "Dec": "a result set type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 30673, "node_name": "resultsetconcurrency", "Dec": "a concurrency type ; one of resultset.concur_read_only or resultset.concur_updatable"}{"idx": 30675, "node_name": "sql", "Dec": "a string object that is the sql statement to be sent to the database ; may contain one or more ' ? ' in parameters"}{"idx": 30676, "node_name": "resultsettype", "Dec": "a result set type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 30677, "node_name": "resultsetconcurrency", "Dec": "a concurrency type ; one of resultset.concur_read_only or resultset.concur_updatable"}{"idx": 30679, "node_name": "sql", "Dec": "a string object that is the sql statement to be sent to the database ; may contain on or more ' ? ' parameters"}{"idx": 30680, "node_name": "resultsettype", "Dec": "a result set type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 30681, "node_name": "resultsetconcurrency", "Dec": "a concurrency type ; one of resultset.concur_read_only or resultset.concur_updatable"}{"idx": 30684, "node_name": "map", "Dec": "the java.util.map object to install as the replacement for this connection object's default type map"}{"idx": 30686, "node_name": "holdability", "Dec": "a resultset holdability constant ; one of resultset.hold_cursors_over_commit or resultset.close_cursors_at_commit"}{"idx": 30690, "node_name": "name", "Dec": "a string containing the name of the savepoint"}{"idx": 30692, "node_name": "savepoint", "Dec": "the savepoint object to roll back to"}{"idx": 30694, "node_name": "savepoint", "Dec": "the savepoint object to be removed"}{"idx": 30696, "node_name": "resultsettype", "Dec": "one of the following resultset constants : resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 30697, "node_name": "resultsetconcurrency", "Dec": "one of the following resultset constants : resultset.concur_read_only or resultset.concur_updatable"}{"idx": 30698, "node_name": "resultsetholdability", "Dec": "one of the following resultset constants : resultset.hold_cursors_over_commit or resultset.close_cursors_at_commit"}{"idx": 30700, "node_name": "sql", "Dec": "a string object that is the sql statement to be sent to the database ; may contain one or more ' ? ' in parameters"}{"idx": 30701, "node_name": "resultsettype", "Dec": "one of the following resultset constants : resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 30702, "node_name": "resultsetconcurrency", "Dec": "one of the following resultset constants : resultset.concur_read_only or resultset.concur_updatable"}{"idx": 30703, "node_name": "resultsetholdability", "Dec": "one of the following resultset constants : resultset.hold_cursors_over_commit or resultset.close_cursors_at_commit"}{"idx": 30705, "node_name": "sql", "Dec": "a string object that is the sql statement to be sent to the database ; may contain on or more ' ? ' parameters"}{"idx": 30706, "node_name": "resultsettype", "Dec": "one of the following resultset constants : resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 30707, "node_name": "resultsetconcurrency", "Dec": "one of the following resultset constants : resultset.concur_read_only or resultset.concur_updatable"}{"idx": 30708, "node_name": "resultsetholdability", "Dec": "one of the following resultset constants : resultset.hold_cursors_over_commit or resultset.close_cursors_at_commit"}{"idx": 30710, "node_name": "sql", "Dec": "an sql statement that may contain one or more ' ? ' in parameter placeholders"}{"idx": 30711, "node_name": "autogeneratedkeys", "Dec": "a flag indicating whether auto-generated keys should be returned ; one of statement.return_generated_keys or statement.no_generated_keys"}{"idx": 30713, "node_name": "sql", "Dec": "an sql statement that may contain one or more ' ? ' in parameter placeholders"}{"idx": 30714, "node_name": "columnindexes", "Dec": "an array of column indexes indicating the columns that should be returned from the inserted row or rows"}{"idx": 30716, "node_name": "sql", "Dec": "an sql statement that may contain one or more ' ? ' in parameter placeholders"}{"idx": 30717, "node_name": "columnnames", "Dec": "an array of column names indicating the columns that should be returned from the inserted row or rows"}{"idx": 30723, "node_name": "timeout", "Dec": "- the time in seconds to wait for the database operation used to validate the connection to complete . if the timeout period expires before the operation completes , isValid(int) returns false . a value of 0 indicates a timeout is not applied to the database operation ."}{"idx": 30725, "node_name": "name", "Dec": "the name of the client info property to set"}{"idx": 30726, "node_name": "value", "Dec": "the value to set the client info property to . if the value is null , the current value of the specified property is cleared ."}{"idx": 30728, "node_name": "properties", "Dec": "the list of client info properties to set"}{"idx": 30730, "node_name": "name", "Dec": "the name of the client info property to retrieve"}{"idx": 30733, "node_name": "typename", "Dec": "the sql name of the type the elements of the array map to . the typename is a database-specific name which may be the name of a built-in type , a user-defined type or a standard sql type supported by this database . this is the value returned by array.getbasetypename"}{"idx": 30734, "node_name": "elements", "Dec": "the elements that populate the returned object"}{"idx": 30736, "node_name": "typename", "Dec": "the sql type name of the sql structured type that this struct object maps to . the typename is the name of a user-defined type that has been defined for this database . it is the value returned by struct.getsqltypename ."}{"idx": 30737, "node_name": "attributes", "Dec": "the attributes that populate the returned object"}{"idx": 30739, "node_name": "schema", "Dec": "the name of a schema in which to work"}{"idx": 30742, "node_name": "executor", "Dec": "the executor implementation which will be used by abort ."}{"idx": 30744, "node_name": "executor", "Dec": "the executor implementation which will be used by setnetworktimeout ."}{"idx": 30745, "node_name": "milliseconds", "Dec": "the time in milliseconds to wait for the database operation to complete . if the jdbc driver does not support milliseconds , the jdbc driver will round the value up to the nearest second . if the timeout period expires before the operation completes , a sqlexception will be thrown . a value of 0 indicates that there is not timeout for database operations ."}{"idx": 30750, "node_name": "shardingkey", "Dec": "the sharding key to be validated against this connection . the sharding key may be null"}{"idx": 30751, "node_name": "supershardingkey", "Dec": "the super sharding key to be validated against this connection . the super sharding key may be null ."}{"idx": 30752, "node_name": "timeout", "Dec": "time in seconds before which the validation process is expected to be completed , otherwise the validation process is aborted . a value of 0 indicates the validation process will not time out ."}{"idx": 30754, "node_name": "shardingkey", "Dec": "the sharding key to be validated against this connection . the sharding key may be null"}{"idx": 30755, "node_name": "timeout", "Dec": "time in seconds before which the validation process is expected to be completed , else the validation process is aborted . a value of 0 indicates the validation process will not time out ."}{"idx": 30757, "node_name": "shardingkey", "Dec": "the sharding key to set on this connection . the sharding key may be null"}{"idx": 30758, "node_name": "supershardingkey", "Dec": "the super sharding key to set on this connection . the super sharding key may be null"}{"idx": 30760, "node_name": "shardingkey", "Dec": "the sharding key to set on this connection . the sharding key may be null"}{"idx": 30763, "node_name": "username", "Dec": "the database user on whose behalf the connection is being made"}{"idx": 30765, "node_name": "password", "Dec": "the password to use for this connection . may be null"}{"idx": 30767, "node_name": "shardingkey", "Dec": "the shardingkey . may be null"}{"idx": 30769, "node_name": "supershardingkey", "Dec": "the supershardingkey . may be null"}{"idx": 30872, "node_name": "fromtype", "Dec": "the type to convert from ; one of the type codes from the class java.sql.types"}{"idx": 30873, "node_name": "totype", "Dec": "the type to convert to ; one of the type codes from the class java.sql.types"}{"idx": 30949, "node_name": "level", "Dec": "one of the transaction isolation levels defined in java.sql.connection"}{"idx": 30955, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 30956, "node_name": "schemapattern", "Dec": "a schema name pattern ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 30957, "node_name": "procedurenamepattern", "Dec": "a procedure name pattern ; must match the procedure name as it is stored in the database"}{"idx": 30959, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 30960, "node_name": "schemapattern", "Dec": "a schema name pattern ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 30961, "node_name": "procedurenamepattern", "Dec": "a procedure name pattern ; must match the procedure name as it is stored in the database"}{"idx": 30962, "node_name": "columnnamepattern", "Dec": "a column name pattern ; must match the column name as it is stored in the database"}{"idx": 30964, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 30965, "node_name": "schemapattern", "Dec": "a schema name pattern ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 30966, "node_name": "tablenamepattern", "Dec": "a table name pattern ; must match the table name as it is stored in the database"}{"idx": 30967, "node_name": "types", "Dec": "a list of table types , which must be from the list of table types returned from gettabletypes() , to include ; null returns all types"}{"idx": 30972, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 30973, "node_name": "schemapattern", "Dec": "a schema name pattern ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 30974, "node_name": "tablenamepattern", "Dec": "a table name pattern ; must match the table name as it is stored in the database"}{"idx": 30975, "node_name": "columnnamepattern", "Dec": "a column name pattern ; must match the column name as it is stored in the database"}{"idx": 30977, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 30978, "node_name": "schema", "Dec": "a schema name ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 30979, "node_name": "table", "Dec": "a table name ; must match the table name as it is stored in the database"}{"idx": 30980, "node_name": "columnnamepattern", "Dec": "a column name pattern ; must match the column name as it is stored in the database"}{"idx": 30982, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 30983, "node_name": "schemapattern", "Dec": "a schema name pattern ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 30984, "node_name": "tablenamepattern", "Dec": "a table name pattern ; must match the table name as it is stored in the database"}{"idx": 30986, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 30987, "node_name": "schema", "Dec": "a schema name ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 30988, "node_name": "table", "Dec": "a table name ; must match the table name as it is stored in the database"}{"idx": 30989, "node_name": "scope", "Dec": "the scope of interest ; use same values as scope"}{"idx": 30990, "node_name": "nullable", "Dec": "include columns that are nullable ."}{"idx": 30992, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 30993, "node_name": "schema", "Dec": "a schema name ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 30994, "node_name": "table", "Dec": "a table name ; must match the table name as it is stored in the database"}{"idx": 30996, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 30997, "node_name": "schema", "Dec": "a schema name ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 30998, "node_name": "table", "Dec": "a table name ; must match the table name as it is stored in the database"}{"idx": 31000, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 31001, "node_name": "schema", "Dec": "a schema name ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 31002, "node_name": "table", "Dec": "a table name ; must match the table name as it is stored in the database"}{"idx": 31004, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in this database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 31005, "node_name": "schema", "Dec": "a schema name ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 31006, "node_name": "table", "Dec": "a table name ; must match the table name as it is stored in this database"}{"idx": 31008, "node_name": "parentcatalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means drop catalog name from the selection criteria"}{"idx": 31009, "node_name": "parentschema", "Dec": "a schema name ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means drop schema name from the selection criteria"}{"idx": 31010, "node_name": "parenttable", "Dec": "the name of the table that exports the key ; must match the table name as it is stored in the database"}{"idx": 31011, "node_name": "foreigncatalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means drop catalog name from the selection criteria"}{"idx": 31012, "node_name": "foreignschema", "Dec": "a schema name ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means drop schema name from the selection criteria"}{"idx": 31013, "node_name": "foreigntable", "Dec": "the name of the table that imports the key ; must match the table name as it is stored in the database"}{"idx": 31016, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in this database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 31017, "node_name": "schema", "Dec": "a schema name ; must match the schema name as it is stored in this database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 31018, "node_name": "table", "Dec": "a table name ; must match the table name as it is stored in this database"}{"idx": 31019, "node_name": "unique", "Dec": "when true , return only indices for unique values ; when false , return indices regardless of whether unique or not"}{"idx": 31020, "node_name": "approximate", "Dec": "when true , result is allowed to reflect approximate or out of data values ; when false , results are requested to be accurate"}{"idx": 31022, "node_name": "type", "Dec": "defined in java.sql.resultset"}{"idx": 31024, "node_name": "type", "Dec": "defined in java.sql.resultset"}{"idx": 31025, "node_name": "concurrency", "Dec": "type defined in java.sql.resultset"}{"idx": 31027, "node_name": "type", "Dec": "the resultset type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 31029, "node_name": "type", "Dec": "the resultset type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 31031, "node_name": "type", "Dec": "the resultset type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 31033, "node_name": "type", "Dec": "the resultset type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 31035, "node_name": "type", "Dec": "the resultset type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 31037, "node_name": "type", "Dec": "the resultset type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 31039, "node_name": "type", "Dec": "the resultset type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 31041, "node_name": "type", "Dec": "the resultset type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 31043, "node_name": "type", "Dec": "the resultset type ; one of resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 31046, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 31047, "node_name": "schemapattern", "Dec": "a schema pattern name ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 31048, "node_name": "typenamepattern", "Dec": "a type name pattern ; must match the type name as it is stored in the database ; may be a fully qualified name"}{"idx": 31049, "node_name": "types", "Dec": "a list of user-defined types ( java_object , struct , or distinct ) to include ; null returns all types"}{"idx": 31056, "node_name": "catalog", "Dec": "a catalog name ; \"\" retrieves those without a catalog ; null means drop catalog name from the selection criteria"}{"idx": 31057, "node_name": "schemapattern", "Dec": "a schema name pattern ; \"\" retrieves those without a schema"}{"idx": 31058, "node_name": "typenamepattern", "Dec": "a udt name pattern ; may be a fully-qualified name"}{"idx": 31060, "node_name": "catalog", "Dec": "a catalog name ; \"\" retrieves those without a catalog ; null means drop catalog name from the selection criteria"}{"idx": 31061, "node_name": "schemapattern", "Dec": "a schema name pattern ; \"\" retrieves those without a schema"}{"idx": 31062, "node_name": "tablenamepattern", "Dec": "a table name pattern ; may be a fully-qualified name"}{"idx": 31064, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 31065, "node_name": "schemapattern", "Dec": "a schema name pattern ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 31066, "node_name": "typenamepattern", "Dec": "a type name pattern ; must match the type name as it is stored in the database"}{"idx": 31067, "node_name": "attributenamepattern", "Dec": "an attribute name pattern ; must match the attribute name as it is declared in the database"}{"idx": 31069, "node_name": "holdability", "Dec": "one of the following constants : resultset.hold_cursors_over_commit or resultset.close_cursors_at_commit"}{"idx": 31080, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means catalog name should not be used to narrow down the search ."}{"idx": 31081, "node_name": "schemapattern", "Dec": "a schema name ; must match the schema name as it is stored in the database ; null means schema name should not be used to narrow down the search ."}{"idx": 31086, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 31087, "node_name": "schemapattern", "Dec": "a schema name pattern ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 31088, "node_name": "functionnamepattern", "Dec": "a function name pattern ; must match the function name as it is stored in the database"}{"idx": 31090, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 31091, "node_name": "schemapattern", "Dec": "a schema name pattern ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 31092, "node_name": "functionnamepattern", "Dec": "a procedure name pattern ; must match the function name as it is stored in the database"}{"idx": 31093, "node_name": "columnnamepattern", "Dec": "a parameter name pattern ; must match the parameter or column name as it is stored in the database"}{"idx": 31095, "node_name": "catalog", "Dec": "a catalog name ; must match the catalog name as it is stored in the database ; \"\" retrieves those without a catalog ; null means that the catalog name should not be used to narrow the search"}{"idx": 31096, "node_name": "schemapattern", "Dec": "a schema name pattern ; must match the schema name as it is stored in the database ; \"\" retrieves those without a schema ; null means that the schema name should not be used to narrow the search"}{"idx": 31097, "node_name": "tablenamepattern", "Dec": "a table name pattern ; must match the table name as it is stored in the database"}{"idx": 31098, "node_name": "columnnamepattern", "Dec": "a column name pattern ; must match the column name as it is stored in the database"}{"idx": 31105, "node_name": "index", "Dec": "the index of the parameter or column value"}{"idx": 31106, "node_name": "parameter", "Dec": "true if a parameter value was truncated"}{"idx": 31107, "node_name": "read", "Dec": "true if a read was truncated"}{"idx": 31108, "node_name": "datasize", "Dec": "the original size of the data"}{"idx": 31109, "node_name": "transfersize", "Dec": "the size after truncation"}{"idx": 31111, "node_name": "index", "Dec": "the index of the parameter or column value"}{"idx": 31112, "node_name": "parameter", "Dec": "true if a parameter value was truncated"}{"idx": 31113, "node_name": "read", "Dec": "true if a read was truncated"}{"idx": 31114, "node_name": "datasize", "Dec": "the original size of the data"}{"idx": 31115, "node_name": "transfersize", "Dec": "the size after truncation"}{"idx": 31116, "node_name": "cause", "Dec": "the underlying reason for this datatruncation ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 31124, "node_name": "date", "Dec": "milliseconds since january 1 , 1970 , 00:00 : 00 gmt not to exceed the milliseconds representation for the year 8099 . a negative number indicates the number of milliseconds before january 1 , 1970 , 00:00 : 00 gmt ."}{"idx": 31126, "node_name": "date", "Dec": "milliseconds since january 1 , 1970 , 00:00 : 00 gmt not to exceed the milliseconds representation for the year 8099 . a negative number indicates the number of milliseconds before january 1 , 1970 , 00:00 : 00 gmt ."}{"idx": 31128, "node_name": "s", "Dec": "a string object representing a date in in the format \" yyyy- [ m ] m- [ d ] d \" . the leading zero for mm and dd may also be omitted ."}{"idx": 31131, "node_name": "date", "Dec": "a localdate to convert"}{"idx": 31136, "node_name": "url", "Dec": "the url of the database to which to connect"}{"idx": 31137, "node_name": "info", "Dec": "a list of arbitrary string tag / value pairs as connection arguments . normally at least a \" user \" and \" password \" property should be included ."}{"idx": 31139, "node_name": "url", "Dec": "the url of the database"}{"idx": 31141, "node_name": "url", "Dec": "the url of the database to which to connect"}{"idx": 31142, "node_name": "info", "Dec": "a proposed list of tag / value pairs that will be sent on connect open"}{"idx": 31152, "node_name": "out", "Dec": "the new logging / tracing printstream object ; null to disable logging and tracing"}{"idx": 31154, "node_name": "url", "Dec": "a database url of the form jdbc : subprotocol : subname"}{"idx": 31155, "node_name": "info", "Dec": "a list of arbitrary string tag / value pairs as connection arguments ; normally at least a \" user \" and \" password \" property should be included"}{"idx": 31157, "node_name": "url", "Dec": "a database url of the form jdbc : subprotocol : subname"}{"idx": 31158, "node_name": "user", "Dec": "the database user on whose behalf the connection is being made"}{"idx": 31159, "node_name": "password", "Dec": "the user's password"}{"idx": 31161, "node_name": "url", "Dec": "a database url of the form jdbc : subprotocol : subname"}{"idx": 31163, "node_name": "url", "Dec": "a database url of the form jdbc : subprotocol : subname"}{"idx": 31165, "node_name": "driver", "Dec": "the new jdbc driver that is to be registered with the drivermanager"}{"idx": 31167, "node_name": "driver", "Dec": "the new jdbc driver that is to be registered with the drivermanager"}{"idx": 31168, "node_name": "da", "Dec": "the driveraction implementation to be used when drivermanager #deregisterdriver is called"}{"idx": 31170, "node_name": "driver", "Dec": "the jdbc driver to remove"}{"idx": 31174, "node_name": "seconds", "Dec": "the login time limit in seconds ; zero means there is no limit"}{"idx": 31177, "node_name": "message", "Dec": "a log or tracing message"}{"idx": 31185, "node_name": "name", "Dec": "the name of the property"}{"idx": 31186, "node_name": "value", "Dec": "the current value , which may be null"}{"idx": 31190, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 31195, "node_name": "type", "Dec": "types value"}{"idx": 31207, "node_name": "param", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31209, "node_name": "param", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31211, "node_name": "param", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31213, "node_name": "param", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31215, "node_name": "param", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31217, "node_name": "param", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31219, "node_name": "param", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31221, "node_name": "param", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31226, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31227, "node_name": "sqltype", "Dec": "the sql type code defined in java.sql.types"}{"idx": 31229, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31230, "node_name": "x", "Dec": "the parameter value"}{"idx": 31232, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31233, "node_name": "x", "Dec": "the parameter value"}{"idx": 31235, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31236, "node_name": "x", "Dec": "the parameter value"}{"idx": 31238, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31239, "node_name": "x", "Dec": "the parameter value"}{"idx": 31241, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31242, "node_name": "x", "Dec": "the parameter value"}{"idx": 31244, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31245, "node_name": "x", "Dec": "the parameter value"}{"idx": 31247, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31248, "node_name": "x", "Dec": "the parameter value"}{"idx": 31250, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31251, "node_name": "x", "Dec": "the parameter value"}{"idx": 31253, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31254, "node_name": "x", "Dec": "the parameter value"}{"idx": 31256, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31257, "node_name": "x", "Dec": "the parameter value"}{"idx": 31259, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31260, "node_name": "x", "Dec": "the parameter value"}{"idx": 31262, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31263, "node_name": "x", "Dec": "the parameter value"}{"idx": 31265, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31266, "node_name": "x", "Dec": "the parameter value"}{"idx": 31268, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31269, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 31270, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 31272, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31273, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 31274, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 31277, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31278, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 31279, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database"}{"idx": 31281, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31282, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 31286, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31287, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data"}{"idx": 31288, "node_name": "length", "Dec": "the number of characters in the stream"}{"idx": 31290, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31291, "node_name": "x", "Dec": "an sql ref value"}{"idx": 31293, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31294, "node_name": "x", "Dec": "a blob object that maps an sql blob value"}{"idx": 31296, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31297, "node_name": "x", "Dec": "a clob object that maps an sql clob value"}{"idx": 31299, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31300, "node_name": "x", "Dec": "an array object that maps an sql array value"}{"idx": 31303, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31304, "node_name": "x", "Dec": "the parameter value"}{"idx": 31305, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the date"}{"idx": 31307, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31308, "node_name": "x", "Dec": "the parameter value"}{"idx": 31309, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the time"}{"idx": 31311, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31312, "node_name": "x", "Dec": "the parameter value"}{"idx": 31313, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the timestamp"}{"idx": 31315, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31316, "node_name": "sqltype", "Dec": "a value from java.sql.types"}{"idx": 31317, "node_name": "typename", "Dec": "the fully-qualified name of an sql user-defined type ; ignored if the parameter is not a user-defined type or ref"}{"idx": 31319, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31320, "node_name": "x", "Dec": "the java.net.url object to be set"}{"idx": 31323, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31324, "node_name": "x", "Dec": "the parameter value"}{"idx": 31326, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 31327, "node_name": "value", "Dec": "the parameter value"}{"idx": 31329, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 31330, "node_name": "value", "Dec": "the parameter value"}{"idx": 31331, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 31333, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 31334, "node_name": "value", "Dec": "the parameter value"}{"idx": 31336, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 31337, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31338, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 31340, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 31341, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31342, "node_name": "length", "Dec": "the number of bytes in the parameter data ."}{"idx": 31344, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 31345, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31346, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 31348, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 31349, "node_name": "xmlobject", "Dec": "a sqlxml object that maps an sql xml value"}{"idx": 31351, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31352, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 31353, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database . the scale argument may further qualify this type ."}{"idx": 31354, "node_name": "scaleorlength", "Dec": "for java.sql.types.decimal or java.sql.types.numeric types , this is the number of digits after the decimal point . for java object types inputstream and reader , this is the length of the data in the stream or reader . for all other types , this value will be ignored ."}{"idx": 31356, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31357, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 31358, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 31360, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31361, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 31362, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 31364, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31365, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data"}{"idx": 31366, "node_name": "length", "Dec": "the number of characters in the stream"}{"idx": 31368, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31369, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 31371, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31372, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 31374, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31375, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data"}{"idx": 31377, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 31378, "node_name": "value", "Dec": "the parameter value"}{"idx": 31380, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 31381, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31383, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 31384, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31386, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 31387, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31389, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31390, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 31391, "node_name": "targetsqltype", "Dec": "the sql type to be sent to the database . the scale argument may further qualify this type ."}{"idx": 31392, "node_name": "scaleorlength", "Dec": "for java.sql.jdbctype.decimal or java.sql.jdbctype.numeric types , this is the number of digits after the decimal point . for java object types inputstream and reader , this is the length of the data in the stream or reader . for all other types , this value will be ignored ."}{"idx": 31394, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 31395, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 31396, "node_name": "targetsqltype", "Dec": "the sql type to be sent to the database"}{"idx": 31401, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 31405, "node_name": "map", "Dec": "a java.util.map object that contains the mapping to use ( the fully-qualified name of the sql structured type being referenced and the class object for sqldata implementation to which the sql structured type will be mapped )"}{"idx": 31408, "node_name": "value", "Dec": "an object representing the sql structured type instance that this ref object will reference"}{"idx": 31424, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31426, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31428, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31430, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31432, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31434, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31436, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31438, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31440, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31442, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31444, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31446, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31448, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31450, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31452, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31454, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31456, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31458, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31460, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31462, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31464, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31466, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31468, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31470, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31472, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31474, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31476, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31478, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31484, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31486, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31488, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31490, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31492, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31494, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31496, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31507, "node_name": "row", "Dec": "the number of the row to which the cursor should move . a value of zero indicates that the cursor will be positioned before the first row ; a positive number indicates the row number counting from the beginning of the result set ; a negative number indicates the row number counting from the end of the result set"}{"idx": 31509, "node_name": "rows", "Dec": "an int specifying the number of rows to move from the current row ; a positive number moves the cursor forward ; a negative number moves the cursor backward"}{"idx": 31512, "node_name": "direction", "Dec": "an int specifying the suggested fetch direction ; one of resultset.fetch_forward , resultset.fetch_reverse , or resultset.fetch_unknown"}{"idx": 31515, "node_name": "rows", "Dec": "the number of rows to fetch"}{"idx": 31523, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31525, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31526, "node_name": "x", "Dec": "the new column value"}{"idx": 31528, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31529, "node_name": "x", "Dec": "the new column value"}{"idx": 31531, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31532, "node_name": "x", "Dec": "the new column value"}{"idx": 31534, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31535, "node_name": "x", "Dec": "the new column value"}{"idx": 31537, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31538, "node_name": "x", "Dec": "the new column value"}{"idx": 31540, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31541, "node_name": "x", "Dec": "the new column value"}{"idx": 31543, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31544, "node_name": "x", "Dec": "the new column value"}{"idx": 31546, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31547, "node_name": "x", "Dec": "the new column value"}{"idx": 31549, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31550, "node_name": "x", "Dec": "the new column value"}{"idx": 31552, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31553, "node_name": "x", "Dec": "the new column value"}{"idx": 31555, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31556, "node_name": "x", "Dec": "the new column value"}{"idx": 31558, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31559, "node_name": "x", "Dec": "the new column value"}{"idx": 31561, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31562, "node_name": "x", "Dec": "the new column value"}{"idx": 31564, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31565, "node_name": "x", "Dec": "the new column value"}{"idx": 31566, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31568, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31569, "node_name": "x", "Dec": "the new column value"}{"idx": 31570, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31572, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31573, "node_name": "x", "Dec": "the new column value"}{"idx": 31574, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31576, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31577, "node_name": "x", "Dec": "the new column value"}{"idx": 31578, "node_name": "scaleorlength", "Dec": "for an object of java.math.bigdecimal , this is the number of digits after the decimal point . for java object types inputstream and reader , this is the length of the data in the stream or reader . for all other types , this value will be ignored ."}{"idx": 31580, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31581, "node_name": "x", "Dec": "the new column value"}{"idx": 31583, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31585, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31586, "node_name": "x", "Dec": "the new column value"}{"idx": 31588, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31589, "node_name": "x", "Dec": "the new column value"}{"idx": 31591, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31592, "node_name": "x", "Dec": "the new column value"}{"idx": 31594, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31595, "node_name": "x", "Dec": "the new column value"}{"idx": 31597, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31598, "node_name": "x", "Dec": "the new column value"}{"idx": 31600, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31601, "node_name": "x", "Dec": "the new column value"}{"idx": 31603, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31604, "node_name": "x", "Dec": "the new column value"}{"idx": 31606, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31607, "node_name": "x", "Dec": "the new column value"}{"idx": 31609, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31610, "node_name": "x", "Dec": "the new column value"}{"idx": 31612, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31613, "node_name": "x", "Dec": "the new column value"}{"idx": 31615, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31616, "node_name": "x", "Dec": "the new column value"}{"idx": 31618, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31619, "node_name": "x", "Dec": "the new column value"}{"idx": 31621, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31622, "node_name": "x", "Dec": "the new column value"}{"idx": 31624, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31625, "node_name": "x", "Dec": "the new column value"}{"idx": 31626, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31628, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31629, "node_name": "x", "Dec": "the new column value"}{"idx": 31630, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31632, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31633, "node_name": "reader", "Dec": "the java.io.reader object containing the new column value"}{"idx": 31634, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31636, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31637, "node_name": "x", "Dec": "the new column value"}{"idx": 31638, "node_name": "scaleorlength", "Dec": "for an object of java.math.bigdecimal , this is the number of digits after the decimal point . for java object types inputstream and reader , this is the length of the data in the stream or reader . for all other types , this value will be ignored ."}{"idx": 31640, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31641, "node_name": "x", "Dec": "the new column value"}{"idx": 31651, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31652, "node_name": "map", "Dec": "a java.util.map object that contains the mapping from sql type names to classes in the java programming language"}{"idx": 31654, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31656, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31658, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31660, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31662, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31663, "node_name": "map", "Dec": "a java.util.map object that contains the mapping from sql type names to classes in the java programming language"}{"idx": 31665, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31667, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31669, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31671, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31673, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31674, "node_name": "cal", "Dec": "the java.util.calendar object to use in constructing the date"}{"idx": 31676, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31677, "node_name": "cal", "Dec": "the java.util.calendar object to use in constructing the date"}{"idx": 31679, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31680, "node_name": "cal", "Dec": "the java.util.calendar object to use in constructing the time"}{"idx": 31682, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31683, "node_name": "cal", "Dec": "the java.util.calendar object to use in constructing the time"}{"idx": 31685, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31686, "node_name": "cal", "Dec": "the java.util.calendar object to use in constructing the timestamp"}{"idx": 31688, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31689, "node_name": "cal", "Dec": "the java.util.calendar object to use in constructing the date"}{"idx": 31691, "node_name": "columnindex", "Dec": "the index of the column 1 is the first , 2 is the second ,..."}{"idx": 31693, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31695, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31696, "node_name": "x", "Dec": "the new column value"}{"idx": 31698, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31699, "node_name": "x", "Dec": "the new column value"}{"idx": 31701, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31702, "node_name": "x", "Dec": "the new column value"}{"idx": 31704, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31705, "node_name": "x", "Dec": "the new column value"}{"idx": 31707, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31708, "node_name": "x", "Dec": "the new column value"}{"idx": 31710, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31711, "node_name": "x", "Dec": "the new column value"}{"idx": 31713, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31714, "node_name": "x", "Dec": "the new column value"}{"idx": 31716, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31717, "node_name": "x", "Dec": "the new column value"}{"idx": 31719, "node_name": "columnindex", "Dec": "the first column is 1 , the second 2 , ..."}{"idx": 31721, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31723, "node_name": "columnindex", "Dec": "the first column is 1 , the second 2 , ..."}{"idx": 31724, "node_name": "x", "Dec": "the column value"}{"idx": 31726, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31727, "node_name": "x", "Dec": "the column value"}{"idx": 31731, "node_name": "columnindex", "Dec": "the first column is 1 , the second 2 , ..."}{"idx": 31732, "node_name": "nstring", "Dec": "the value for the column to be updated"}{"idx": 31734, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31735, "node_name": "nstring", "Dec": "the value for the column to be updated"}{"idx": 31737, "node_name": "columnindex", "Dec": "the first column is 1 , the second 2 , ..."}{"idx": 31738, "node_name": "nclob", "Dec": "the value for the column to be updated"}{"idx": 31740, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31741, "node_name": "nclob", "Dec": "the value for the column to be updated"}{"idx": 31743, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31745, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31747, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31749, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31751, "node_name": "columnindex", "Dec": "the first column is 1 , the second 2 , ..."}{"idx": 31752, "node_name": "xmlobject", "Dec": "the value for the column to be updated"}{"idx": 31754, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31755, "node_name": "xmlobject", "Dec": "the column value"}{"idx": 31757, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31759, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31761, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31763, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31765, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31766, "node_name": "x", "Dec": "the new column value"}{"idx": 31767, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31769, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31770, "node_name": "reader", "Dec": "the java.io.reader object containing the new column value"}{"idx": 31771, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31773, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31774, "node_name": "x", "Dec": "the new column value"}{"idx": 31775, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31777, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31778, "node_name": "x", "Dec": "the new column value"}{"idx": 31779, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31781, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31782, "node_name": "x", "Dec": "the new column value"}{"idx": 31783, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31785, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31786, "node_name": "x", "Dec": "the new column value"}{"idx": 31787, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31789, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31790, "node_name": "x", "Dec": "the new column value"}{"idx": 31791, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31793, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31794, "node_name": "reader", "Dec": "the java.io.reader object containing the new column value"}{"idx": 31795, "node_name": "length", "Dec": "the length of the stream"}{"idx": 31797, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31798, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31799, "node_name": "length", "Dec": "the number of bytes in the parameter data ."}{"idx": 31801, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31802, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31803, "node_name": "length", "Dec": "the number of bytes in the parameter data ."}{"idx": 31805, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31806, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31807, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 31809, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31810, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31811, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 31813, "node_name": "columnindex", "Dec": "the first column is 1 , the second 2 , ..."}{"idx": 31814, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31815, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 31817, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31818, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31819, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 31821, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31822, "node_name": "x", "Dec": "the new column value"}{"idx": 31824, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31825, "node_name": "reader", "Dec": "the java.io.reader object containing the new column value"}{"idx": 31827, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31828, "node_name": "x", "Dec": "the new column value"}{"idx": 31830, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31831, "node_name": "x", "Dec": "the new column value"}{"idx": 31833, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31834, "node_name": "x", "Dec": "the new column value"}{"idx": 31836, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31837, "node_name": "x", "Dec": "the new column value"}{"idx": 31839, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31840, "node_name": "x", "Dec": "the new column value"}{"idx": 31842, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31843, "node_name": "reader", "Dec": "the java.io.reader object containing the new column value"}{"idx": 31845, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31846, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31848, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31849, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31851, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31852, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31854, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31855, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31857, "node_name": "columnindex", "Dec": "the first column is 1 , the second 2 , ..."}{"idx": 31858, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31860, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31861, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 31863, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31864, "node_name": "type", "Dec": "class representing the java data type to convert the designated column to ."}{"idx": 31866, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31867, "node_name": "type", "Dec": "class representing the java data type to convert the designated column to ."}{"idx": 31869, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31870, "node_name": "x", "Dec": "the new column value"}{"idx": 31871, "node_name": "targetsqltype", "Dec": "the sql type to be sent to the database"}{"idx": 31872, "node_name": "scaleorlength", "Dec": "for an object of java.math.bigdecimal , this is the number of digits after the decimal point . for java object types inputstream and reader , this is the length of the data in the stream or reader . for all other types , this value will be ignored ."}{"idx": 31874, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31875, "node_name": "x", "Dec": "the new column value"}{"idx": 31876, "node_name": "targetsqltype", "Dec": "the sql type to be sent to the database"}{"idx": 31877, "node_name": "scaleorlength", "Dec": "for an object of java.math.bigdecimal , this is the number of digits after the decimal point . for java object types inputstream and reader , this is the length of the data in the stream or reader . for all other types , this value will be ignored ."}{"idx": 31879, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31880, "node_name": "x", "Dec": "the new column value"}{"idx": 31881, "node_name": "targetsqltype", "Dec": "the sql type to be sent to the database"}{"idx": 31883, "node_name": "columnlabel", "Dec": "the label for the column specified with the sql as clause . if the sql as clause was not specified , then the label is the name of the column"}{"idx": 31884, "node_name": "x", "Dec": "the new column value"}{"idx": 31885, "node_name": "targetsqltype", "Dec": "the sql type to be sent to the database"}{"idx": 31892, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31894, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31896, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31898, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31900, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31902, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31904, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31906, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31908, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31910, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31912, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31914, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31916, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31918, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31920, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31922, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31924, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31926, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31928, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31930, "node_name": "column", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 31933, "node_name": "obj", "Dec": "the object to compare this rowid object against ."}{"idx": 31940, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 31947, "node_name": "subkey", "Dec": "contains the object that needs to be part of shard sub key"}{"idx": 31948, "node_name": "subkeytype", "Dec": "sub-key data type of type java.sql.sqltype"}{"idx": 31953, "node_name": "failedproperties", "Dec": "a map containing the property values that could not be set . the keys in the map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in clientinfostatus"}{"idx": 31955, "node_name": "failedproperties", "Dec": "a map containing the property values that could not be set . the keys in the map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in clientinfostatus"}{"idx": 31956, "node_name": "cause", "Dec": "the ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 31958, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 31959, "node_name": "failedproperties", "Dec": "a map containing the property values that could not be set . the keys in the map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in clientinfostatus"}{"idx": 31961, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 31962, "node_name": "failedproperties", "Dec": "a map containing the property values that could not be set . the keys in the map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in clientinfostatus"}{"idx": 31963, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 31965, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 31966, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 31967, "node_name": "failedproperties", "Dec": "a map containing the property values that could not be set . the keys in the map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in clientinfostatus"}{"idx": 31969, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 31970, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 31971, "node_name": "failedproperties", "Dec": "a map containing the property values that could not be set . the keys in the map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in clientinfostatus"}{"idx": 31972, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 31974, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 31975, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 31976, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 31977, "node_name": "failedproperties", "Dec": "a map containing the property values that could not be set . the keys in the map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in clientinfostatus"}{"idx": 31979, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 31980, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 31981, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 31982, "node_name": "failedproperties", "Dec": "a map containing the property values that could not be set . the keys in the map contain the names of the client info properties that could not be set and the values contain one of the reason codes defined in clientinfostatus"}{"idx": 31983, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 31988, "node_name": "stream", "Dec": "the sqlinput object from which to read the data for the value that is being custom mapped"}{"idx": 31989, "node_name": "typename", "Dec": "the sql type name of the value on the data stream"}{"idx": 31991, "node_name": "stream", "Dec": "the sqloutput object to which to write the data for the value that was custom mapped"}{"idx": 31995, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 31997, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 31998, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32000, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32001, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32002, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32004, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32006, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32007, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32009, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32010, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32011, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32013, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32014, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32015, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32016, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32019, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32020, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32021, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32023, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32024, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32026, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32029, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32031, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32032, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32034, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32035, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32036, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32038, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32039, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32040, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32041, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32046, "node_name": "ex", "Dec": "the new exception that will be added to the end of the sqlexception chain"}{"idx": 32051, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32053, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32054, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32056, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32057, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32058, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32060, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32062, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32063, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32065, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32066, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32067, "node_name": "cause", "Dec": "the ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32069, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32070, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32071, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32072, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32102, "node_name": "type", "Dec": "class representing the java data type to convert the attribute to ."}{"idx": 32106, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32108, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32109, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32111, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32112, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32113, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32115, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32117, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32118, "node_name": "cause", "Dec": "the ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32120, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32121, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32122, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32124, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32125, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32126, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32127, "node_name": "cause", "Dec": "the ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32131, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32133, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32134, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32136, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32137, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32138, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32140, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32142, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32143, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32145, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32146, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32147, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32149, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32150, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32151, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32152, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32156, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32158, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32159, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32161, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32162, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32163, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32165, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32167, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32168, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32170, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32171, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32172, "node_name": "cause", "Dec": "the ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32174, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32175, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32176, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32177, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32181, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32183, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32184, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32186, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32187, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32188, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32190, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32192, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32193, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32195, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32196, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32197, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32199, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32200, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32201, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32202, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32205, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32207, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32209, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32211, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32213, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32215, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32217, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32219, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32221, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32223, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32225, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32227, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32229, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32231, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32233, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32235, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32237, "node_name": "x", "Dec": "the object representing data of an sql structured or distinct type"}{"idx": 32239, "node_name": "x", "Dec": "a ref object representing data of an sql ref value"}{"idx": 32241, "node_name": "x", "Dec": "a blob object representing data of an sql blob value"}{"idx": 32243, "node_name": "x", "Dec": "a clob object representing data of an sql clob value"}{"idx": 32245, "node_name": "x", "Dec": "a struct object representing data of an sql structured type"}{"idx": 32247, "node_name": "x", "Dec": "an array object representing data of an sql array type"}{"idx": 32249, "node_name": "x", "Dec": "a java.net.url object representing the data of sql datalink type"}{"idx": 32251, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 32253, "node_name": "x", "Dec": "a nclob object representing data of an sql nclob value"}{"idx": 32255, "node_name": "x", "Dec": "a rowid object representing data of an sql rowid value"}{"idx": 32257, "node_name": "x", "Dec": "a sqlxml object representing data of an sql xml value"}{"idx": 32259, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 32260, "node_name": "targetsqltype", "Dec": "the sql type to be sent to the database ."}{"idx": 32263, "node_name": "name", "Dec": "the name of this sqlpermission object , which must be either setlog , callabort , setsyncfactory , deregisterdriver , or setnetworktimeout"}{"idx": 32265, "node_name": "name", "Dec": "the name of this sqlpermission object , which must be either setlog , callabort , setsyncfactory , deregisterdriver , or setnetworktimeout"}{"idx": 32266, "node_name": "actions", "Dec": "should be null"}{"idx": 32270, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32272, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32273, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32275, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32276, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32277, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32279, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32281, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32282, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32284, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32285, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32286, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32288, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32289, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32290, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32291, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32295, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32297, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32298, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32300, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32301, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32302, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32304, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32306, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32307, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32309, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32310, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32311, "node_name": "cause", "Dec": "the ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32313, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32314, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32315, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32316, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32320, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32322, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32323, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32325, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32326, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32327, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32329, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32331, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32332, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32334, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32335, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32336, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32338, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32339, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32340, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32341, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32345, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32347, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32348, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32350, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32351, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32352, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32354, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32356, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32357, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32359, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32360, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32361, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32363, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32364, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32365, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32366, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32370, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32372, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32373, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32375, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32376, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32377, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32379, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32381, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32382, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32384, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32385, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32386, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32388, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32389, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32390, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32391, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32395, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32397, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32398, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32400, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32401, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32402, "node_name": "vendorcode", "Dec": "a database vendor specific exception code"}{"idx": 32404, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32406, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32407, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32409, "node_name": "reason", "Dec": "a description of the exception ."}{"idx": 32410, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32411, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32413, "node_name": "reason", "Dec": "a description of the exception"}{"idx": 32414, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the exception"}{"idx": 32415, "node_name": "vendorcode", "Dec": "a database vendor-specific exception code"}{"idx": 32416, "node_name": "cause", "Dec": "the underlying reason for this sqlexception ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32423, "node_name": "reason", "Dec": "a description of the warning"}{"idx": 32424, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the warning"}{"idx": 32425, "node_name": "vendorcode", "Dec": "a database vendor-specific warning code"}{"idx": 32427, "node_name": "reason", "Dec": "a description of the warning"}{"idx": 32428, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the warning"}{"idx": 32430, "node_name": "reason", "Dec": "a description of the warning"}{"idx": 32433, "node_name": "cause", "Dec": "the underlying reason for this sqlwarning ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32435, "node_name": "reason", "Dec": "a description of the warning"}{"idx": 32436, "node_name": "cause", "Dec": "the underlying reason for this sqlwarning ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32438, "node_name": "reason", "Dec": "a description of the warning"}{"idx": 32439, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the warning"}{"idx": 32440, "node_name": "cause", "Dec": "the underlying reason for this sqlwarning ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32442, "node_name": "reason", "Dec": "a description of the warning"}{"idx": 32443, "node_name": "sqlstate", "Dec": "an xopen or sql : 2003 code identifying the warning"}{"idx": 32444, "node_name": "vendorcode", "Dec": "a database vendor-specific warning code"}{"idx": 32445, "node_name": "cause", "Dec": "the underlying reason for this sqlwarning ( which is saved for later retrieval by the getcause() method ); may be null indicating the cause is non-existent or unknown ."}{"idx": 32448, "node_name": "w", "Dec": "the new end of the sqlexception chain"}{"idx": 32457, "node_name": "value", "Dec": "the xml value"}{"idx": 32459, "node_name": "sourceclass", "Dec": "the class of the source , or null . if the class is null , a vendor specific source implementation will be returned . the following classes are supported at a minimum : javax.xml.transform.dom.domsource"}{"idx": 32461, "node_name": "resultclass", "Dec": "the class of the result , or null . if resultclass is null , a vendor specific result implementation will be returned . the following classes are supported at a minimum : javax.xml.transform.dom.domresult"}{"idx": 32471, "node_name": "sql", "Dec": "an sql statement to be sent to the database , typically a static sql select statement"}{"idx": 32473, "node_name": "sql", "Dec": "an sql data manipulation language ( dml ) statement , such as insert , update or delete ; or an sql statement that returns nothing , such as a ddl statement ."}{"idx": 32477, "node_name": "max", "Dec": "the new column size limit in bytes ; zero means there is no limit"}{"idx": 32480, "node_name": "max", "Dec": "the new max rows limit ; zero means there is no limit"}{"idx": 32482, "node_name": "enable", "Dec": "true to enable escape processing ; false to disable it"}{"idx": 32485, "node_name": "seconds", "Dec": "the new query timeout limit in seconds ; zero means there is no limit"}{"idx": 32490, "node_name": "name", "Dec": "the new cursor name , which must be unique within a connection"}{"idx": 32492, "node_name": "sql", "Dec": "any sql statement"}{"idx": 32497, "node_name": "direction", "Dec": "the initial direction for processing rows"}{"idx": 32500, "node_name": "rows", "Dec": "the number of rows to fetch"}{"idx": 32505, "node_name": "sql", "Dec": "typically this is a sql insert or update statement"}{"idx": 32510, "node_name": "current", "Dec": "one of the following statement constants indicating what should happen to current resultset objects obtained using getMoreResults(int) getresultset : statement.close_current_result , statement.keep_current_result , or statement.close_all_results"}{"idx": 32513, "node_name": "sql", "Dec": "an sql data manipulation language ( dml ) statement , such as insert , update or delete ; or an sql statement that returns nothing , such as a ddl statement ."}{"idx": 32514, "node_name": "autogeneratedkeys", "Dec": "a flag indicating whether auto-generated keys should be made available for retrieval ; one of the following constants : statement.return_generated_keys statement.no_generated_keys"}{"idx": 32516, "node_name": "sql", "Dec": "an sql data manipulation language ( dml ) statement , such as insert , update or delete ; or an sql statement that returns nothing , such as a ddl statement ."}{"idx": 32517, "node_name": "columnindexes", "Dec": "an array of column indexes indicating the columns that should be returned from the inserted row"}{"idx": 32519, "node_name": "sql", "Dec": "an sql data manipulation language ( dml ) statement , such as insert , update or delete ; or an sql statement that returns nothing , such as a ddl statement ."}{"idx": 32520, "node_name": "columnnames", "Dec": "an array of the names of the columns that should be returned from the inserted row"}{"idx": 32522, "node_name": "sql", "Dec": "any sql statement"}{"idx": 32523, "node_name": "autogeneratedkeys", "Dec": "a constant indicating whether auto-generated keys should be made available for retrieval using execute(java.lang.String,int) getgeneratedkeys ; one of the following constants : statement.return_generated_keys or statement.no_generated_keys"}{"idx": 32525, "node_name": "sql", "Dec": "any sql statement"}{"idx": 32526, "node_name": "columnindexes", "Dec": "an array of the indexes of the columns in the inserted row that should be made available for retrieval by a call to execute(java.lang.String,int[]) getgeneratedkeys"}{"idx": 32528, "node_name": "sql", "Dec": "any sql statement"}{"idx": 32529, "node_name": "columnnames", "Dec": "an array of the names of the columns in the inserted row that should be made available for retrieval by a call to execute(java.lang.String,java.lang.String[]) getgeneratedkeys"}{"idx": 32533, "node_name": "poolable", "Dec": "requests that the statement be pooled if true and that the statement not be pooled if false"}{"idx": 32539, "node_name": "max", "Dec": "the new max rows limit ; zero means there is no limit"}{"idx": 32543, "node_name": "sql", "Dec": "an sql data manipulation language ( dml ) statement , such as insert , update or delete ; or an sql statement that returns nothing , such as a ddl statement ."}{"idx": 32545, "node_name": "sql", "Dec": "an sql data manipulation language ( dml ) statement , such as insert , update or delete ; or an sql statement that returns nothing , such as a ddl statement ."}{"idx": 32546, "node_name": "autogeneratedkeys", "Dec": "a flag indicating whether auto-generated keys should be made available for retrieval ; one of the following constants : statement.return_generated_keys statement.no_generated_keys"}{"idx": 32548, "node_name": "sql", "Dec": "an sql data manipulation language ( dml ) statement , such as insert , update or delete ; or an sql statement that returns nothing , such as a ddl statement ."}{"idx": 32549, "node_name": "columnindexes", "Dec": "an array of column indexes indicating the columns that should be returned from the inserted row"}{"idx": 32551, "node_name": "sql", "Dec": "an sql data manipulation language ( dml ) statement , such as insert , update or delete ; or an sql statement that returns nothing , such as a ddl statement ."}{"idx": 32552, "node_name": "columnnames", "Dec": "an array of the names of the columns that should be returned from the inserted row"}{"idx": 32554, "node_name": "val", "Dec": "a character string"}{"idx": 32556, "node_name": "identifier", "Dec": "a sql identifier"}{"idx": 32557, "node_name": "alwaysquote", "Dec": "indicates if a simple sql identifier should be returned as a quoted identifier"}{"idx": 32559, "node_name": "identifier", "Dec": "a sql identifier"}{"idx": 32561, "node_name": "val", "Dec": "a character string"}{"idx": 32566, "node_name": "map", "Dec": "a mapping of sql type names to java classes"}{"idx": 32569, "node_name": "time", "Dec": "milliseconds since january 1 , 1970 , 00:00 : 00 gmt ; a negative number is milliseconds before january 1 , 1970 , 00:00 : 00 gmt"}{"idx": 32571, "node_name": "time", "Dec": "milliseconds since january 1 , 1970 , 00:00 : 00 gmt ; a negative number is milliseconds before january 1 , 1970 , 00:00 : 00 gmt"}{"idx": 32573, "node_name": "s", "Dec": "time in format \" hh : mm : ss \""}{"idx": 32576, "node_name": "time", "Dec": "a localtime to convert"}{"idx": 32581, "node_name": "time", "Dec": "milliseconds since january 1 , 1970 , 00:00 : 00 gmt . a negative number is the number of milliseconds before january 1 , 1970 , 00:00 : 00 gmt ."}{"idx": 32583, "node_name": "time", "Dec": "the number of milliseconds ."}{"idx": 32586, "node_name": "s", "Dec": "timestamp in format yyyy- [ m ] m- [ d ] d hh : mm : ss [ .f ... ] . the fractional seconds may be omitted . the leading zero for mm and dd may also be omitted ."}{"idx": 32590, "node_name": "n", "Dec": "the new fractional seconds component"}{"idx": 32592, "node_name": "ts", "Dec": "the timestamp value to compare with"}{"idx": 32594, "node_name": "ts", "Dec": "the object value to compare with"}{"idx": 32596, "node_name": "ts", "Dec": "the timestamp value to compare with"}{"idx": 32598, "node_name": "ts", "Dec": "the timestamp value to compare with"}{"idx": 32600, "node_name": "ts", "Dec": "the timestamp object to be compared to this timestamp object"}{"idx": 32602, "node_name": "o", "Dec": "the date to be compared to this timestamp object"}{"idx": 32605, "node_name": "datetime", "Dec": "a localdatetime to convert"}{"idx": 32608, "node_name": "instant", "Dec": "the instant to convert"}{"idx": 32652, "node_name": "iface", "Dec": "a class defining an interface that the result must implement ."}{"idx": 32654, "node_name": "iface", "Dec": "a class defining an interface ."}{"idx": 32657, "node_name": "value", "Dec": "the value of the attribute"}{"idx": 32665, "node_name": "name", "Dec": "the name of attribute"}{"idx": 32667, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 32675, "node_name": "attribute", "Dec": "the desired attribute ."}{"idx": 32677, "node_name": "attributes", "Dec": "a set of the desired attributes ."}{"idx": 32680, "node_name": "attribute", "Dec": "the desired attribute"}{"idx": 32682, "node_name": "attributes", "Dec": "a set of the desired attributes"}{"idx": 32685, "node_name": "attribute", "Dec": "the desired attribute"}{"idx": 32689, "node_name": "text", "Dec": "the text for this attributed string ."}{"idx": 32691, "node_name": "text", "Dec": "the text for this attributed string ."}{"idx": 32692, "node_name": "attributes", "Dec": "the attributes that apply to the entire string ."}{"idx": 32694, "node_name": "text", "Dec": "the text for this attributed string ."}{"idx": 32696, "node_name": "text", "Dec": "the text for this attributed string ."}{"idx": 32697, "node_name": "beginindex", "Dec": "index of the first character of the range ."}{"idx": 32698, "node_name": "endindex", "Dec": "index of the character following the last character of the range ."}{"idx": 32700, "node_name": "text", "Dec": "the text for this attributed string ."}{"idx": 32701, "node_name": "beginindex", "Dec": "index of the first character of the range ."}{"idx": 32702, "node_name": "endindex", "Dec": "index of the character following the last character of the range ."}{"idx": 32703, "node_name": "attributes", "Dec": "specifies attributes to be extracted from the text . if null is specified , all available attributes will be used ."}{"idx": 32705, "node_name": "attribute", "Dec": "the attribute key"}{"idx": 32706, "node_name": "value", "Dec": "the value of the attribute ; may be null"}{"idx": 32708, "node_name": "attribute", "Dec": "the attribute key"}{"idx": 32709, "node_name": "value", "Dec": "the value of the attribute . may be null ."}{"idx": 32710, "node_name": "beginindex", "Dec": "index of the first character of the range ."}{"idx": 32711, "node_name": "endindex", "Dec": "index of the character following the last character of the range ."}{"idx": 32713, "node_name": "attributes", "Dec": "the attributes to be added to the string ."}{"idx": 32714, "node_name": "beginindex", "Dec": "index of the first character of the range ."}{"idx": 32715, "node_name": "endindex", "Dec": "index of the character following the last character of the range ."}{"idx": 32718, "node_name": "attributes", "Dec": "a list of attributes that the client is interested in"}{"idx": 32720, "node_name": "attributes", "Dec": "a list of attributes that the client is interested in"}{"idx": 32721, "node_name": "beginindex", "Dec": "the index of the first character"}{"idx": 32722, "node_name": "endindex", "Dec": "the index of the character following the last character"}{"idx": 32729, "node_name": "paragraph", "Dec": "a paragraph of text"}{"idx": 32730, "node_name": "flags", "Dec": "a collection of flags that control the algorithm . the algorithm understands the flags direction_left_to_right , direction_right_to_left , direction_default_left_to_right , and direction_default_right_to_left . other values are reserved ."}{"idx": 32732, "node_name": "paragraph", "Dec": "a paragraph of text with optional character and paragraph attribute information"}{"idx": 32734, "node_name": "text", "Dec": "an array containing the paragraph of text to process ."}{"idx": 32735, "node_name": "textstart", "Dec": "the index into the text array of the start of the paragraph ."}{"idx": 32736, "node_name": "embeddings", "Dec": "an array containing embedding values for each character in the paragraph . this can be null , in which case it is assumed that there is no external embedding information ."}{"idx": 32737, "node_name": "embstart", "Dec": "the index into the embedding array of the start of the paragraph ."}{"idx": 32738, "node_name": "paragraphlength", "Dec": "the length of the paragraph in the text and embeddings arrays ."}{"idx": 32739, "node_name": "flags", "Dec": "a collection of flags that control the algorithm . the algorithm understands the flags direction_left_to_right , direction_right_to_left , direction_default_left_to_right , and direction_default_right_to_left . other values are reserved ."}{"idx": 32741, "node_name": "linestart", "Dec": "the offset from the start of the paragraph to the start of the line ."}{"idx": 32742, "node_name": "linelimit", "Dec": "the offset from the start of the paragraph to the limit of the line ."}{"idx": 32750, "node_name": "offset", "Dec": "the index of the character for which to return the level"}{"idx": 32753, "node_name": "run", "Dec": "the index of the run , between 0 and getruncount()"}{"idx": 32755, "node_name": "run", "Dec": "the index of the run , between 0 and getruncount()"}{"idx": 32757, "node_name": "run", "Dec": "the index of the run , between 0 and getruncount()"}{"idx": 32759, "node_name": "text", "Dec": "the text containing the characters to test"}{"idx": 32760, "node_name": "start", "Dec": "the start of the range of characters to test"}{"idx": 32761, "node_name": "limit", "Dec": "the limit of the range of characters to test"}{"idx": 32763, "node_name": "levels", "Dec": "an array representing the bidi level of each object"}{"idx": 32764, "node_name": "levelstart", "Dec": "the start position in the levels array"}{"idx": 32765, "node_name": "objects", "Dec": "the array of objects to be reordered into visual order"}{"idx": 32766, "node_name": "objectstart", "Dec": "the start position in the objects array"}{"idx": 32767, "node_name": "count", "Dec": "the number of objects to reorder"}{"idx": 32776, "node_name": "n", "Dec": "which boundary to return . a value of 0 does nothing . negative values move to previous boundaries and positive values move to later boundaries ."}{"idx": 32780, "node_name": "offset", "Dec": "the character offset to begin scanning ."}{"idx": 32782, "node_name": "offset", "Dec": "the character offset to begin scanning ."}{"idx": 32784, "node_name": "offset", "Dec": "the character offset to check ."}{"idx": 32788, "node_name": "newtext", "Dec": "new text to scan ."}{"idx": 32790, "node_name": "newtext", "Dec": "new text to scan ."}{"idx": 32793, "node_name": "locale", "Dec": "the desired locale"}{"idx": 32796, "node_name": "locale", "Dec": "the desired locale"}{"idx": 32799, "node_name": "locale", "Dec": "the desired locale"}{"idx": 32802, "node_name": "locale", "Dec": "the desired locale"}{"idx": 32812, "node_name": "position", "Dec": "the position within the text . valid values range from getbeginindex() to getendindex() . an illegalargumentexception is thrown if an invalid value is supplied ."}{"idx": 32819, "node_name": "newpattern", "Dec": "the new pattern string"}{"idx": 32821, "node_name": "limits", "Dec": "limits in ascending order"}{"idx": 32822, "node_name": "formats", "Dec": "corresponding format strings"}{"idx": 32824, "node_name": "newpattern", "Dec": "see the class description ."}{"idx": 32827, "node_name": "limits", "Dec": "contains the top value that you want parsed with that format , and should be in ascending sorted order . when formatting x , the choice will be the i , where limit [ i ] \u2264 x < limit [ i+1 ] . if the limit array is not in ascending order , the results of formatting will be incorrect ."}{"idx": 32828, "node_name": "formats", "Dec": "are the formats you want to use for each limit . they can be either format objects or strings . when formatting with object y , if the object is a numberformat , then (( numberformat ) y ) .format ( x ) is called . otherwise y.tostring() is called ."}{"idx": 32832, "node_name": "number", "Dec": "the long number to format"}{"idx": 32833, "node_name": "toappendto", "Dec": "the stringbuffer to which the formatted text is to be appended"}{"idx": 32834, "node_name": "status", "Dec": "keeps track on the position of the field within the returned string . for example , for formatting a number 123456789 in locale.us locale , if the given fieldposition is numberformat.integer_field , the begin index and end index of fieldposition will be set to 0 and 11 , respectively for the output string 123,456,789 ."}{"idx": 32836, "node_name": "number", "Dec": "number to be formatted and substituted ."}{"idx": 32837, "node_name": "toappendto", "Dec": "where text is appended ."}{"idx": 32838, "node_name": "status", "Dec": "ignore no useful status is returned ."}{"idx": 32840, "node_name": "text", "Dec": "the source text ."}{"idx": 32841, "node_name": "status", "Dec": "an input-output parameter . on input , the status.index field indicates the first character of the source text that should be parsed . on exit , if no error occurred , status.index is set to the first unparsed character in the source text . on exit , if an error did occur , status.index is unchanged and status.errorindex is set to the first index of the character that caused the parse to fail ."}{"idx": 32843, "node_name": "d", "Dec": "the reference value"}{"idx": 32845, "node_name": "d", "Dec": "the reference value"}{"idx": 32849, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 32851, "node_name": "d", "Dec": "the reference value"}{"idx": 32852, "node_name": "positive", "Dec": "true if the least double is desired ; false otherwise"}{"idx": 32859, "node_name": "order", "Dec": "the collation element"}{"idx": 32861, "node_name": "order", "Dec": "the collation element"}{"idx": 32863, "node_name": "order", "Dec": "the collation element"}{"idx": 32865, "node_name": "newoffset", "Dec": "the new character offset into the original text ."}{"idx": 32868, "node_name": "order", "Dec": "a collation order returned by previous or next ."}{"idx": 32870, "node_name": "source", "Dec": "the new source text"}{"idx": 32872, "node_name": "source", "Dec": "the new source text ."}{"idx": 32875, "node_name": "source", "Dec": "the source string"}{"idx": 32877, "node_name": "target", "Dec": "target collationkey"}{"idx": 32891, "node_name": "desiredlocale", "Dec": "the desired locale ."}{"idx": 32893, "node_name": "source", "Dec": "the source string ."}{"idx": 32894, "node_name": "target", "Dec": "the target string ."}{"idx": 32896, "node_name": "o1", "Dec": "the first object to be compared ."}{"idx": 32897, "node_name": "o2", "Dec": "the second object to be compared ."}{"idx": 32899, "node_name": "source", "Dec": "the string to be transformed into a collation key ."}{"idx": 32901, "node_name": "source", "Dec": "the source string to be compared with ."}{"idx": 32902, "node_name": "target", "Dec": "the target string to be compared with ."}{"idx": 32905, "node_name": "newstrength", "Dec": "the new strength value ."}{"idx": 32908, "node_name": "decompositionmode", "Dec": "the new decomposition mode ."}{"idx": 32912, "node_name": "that", "Dec": "the collator to be compared with this ."}{"idx": 32916, "node_name": "decimalpattern", "Dec": "a decimal pattern for general number formatting"}{"idx": 32917, "node_name": "symbols", "Dec": "the set of symbols to be used"}{"idx": 32918, "node_name": "compactpatterns", "Dec": "an array of compact number patterns"}{"idx": 32920, "node_name": "number", "Dec": "the number to format"}{"idx": 32921, "node_name": "toappendto", "Dec": "the stringbuffer to which the formatted text is to be appended"}{"idx": 32922, "node_name": "fieldposition", "Dec": "keeps track on the position of the field within the returned string . for example , for formatting a number 123456789 in the us locale , if the given fieldposition is numberformat.integer_field , the begin index and end index of fieldposition will be set to 0 and 3 , respectively for the output string 123m . similarly , positions of the prefix and the suffix fields can be obtained using numberformat.field.prefix and numberformat.field.suffix respectively ."}{"idx": 32924, "node_name": "number", "Dec": "the double number to format"}{"idx": 32925, "node_name": "result", "Dec": "where the text is to be appended"}{"idx": 32926, "node_name": "fieldposition", "Dec": "keeps track on the position of the field within the returned string . for example , to format a number 1234567.89 in the us locale if the given fieldposition is numberformat.integer_field , the begin index and end index of fieldposition will be set to 0 and 1 , respectively for the output string 1m . similarly , positions of the prefix and the suffix fields can be obtained using numberformat.field.prefix and numberformat.field.suffix respectively ."}{"idx": 32928, "node_name": "number", "Dec": "the long number to format"}{"idx": 32929, "node_name": "result", "Dec": "where the text is to be appended"}{"idx": 32930, "node_name": "fieldposition", "Dec": "keeps track on the position of the field within the returned string . for example , to format a number 123456789 in the us locale , if the given fieldposition is numberformat.integer_field , the begin index and end index of fieldposition will be set to 0 and 3 , respectively for the output string 123m . similarly , positions of the prefix and the suffix fields can be obtained using numberformat.field.prefix and numberformat.field.suffix respectively ."}{"idx": 32932, "node_name": "obj", "Dec": "the object to format"}{"idx": 32934, "node_name": "text", "Dec": "the string to be parsed"}{"idx": 32935, "node_name": "pos", "Dec": "a parseposition object with index and error index information as described above"}{"idx": 32937, "node_name": "newvalue", "Dec": "the maximum number of integer digits to be shown"}{"idx": 32939, "node_name": "newvalue", "Dec": "the minimum number of integer digits to be shown"}{"idx": 32941, "node_name": "newvalue", "Dec": "the minimum number of fraction digits to be shown"}{"idx": 32943, "node_name": "newvalue", "Dec": "the maximum number of fraction digits to be shown"}{"idx": 32946, "node_name": "roundingmode", "Dec": "the roundingmode to be used"}{"idx": 32949, "node_name": "newvalue", "Dec": "the new grouping size"}{"idx": 32952, "node_name": "newvalue", "Dec": "true if grouping is used ; false otherwise"}{"idx": 32955, "node_name": "value", "Dec": "true if compact numbers should be parsed as integers only ; false otherwise"}{"idx": 32958, "node_name": "newvalue", "Dec": "true if the parse method returns bigdecimal ; false otherwise"}{"idx": 32960, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 32983, "node_name": "name", "Dec": "the name of the field"}{"idx": 32984, "node_name": "calendarfield", "Dec": "the calendar constant this field corresponds to ; any value , even one outside the range of legal calendar values may be used , but -1 should be used for values that don't correspond to legal calendar values"}{"idx": 32986, "node_name": "calendarfield", "Dec": "calendar field constant"}{"idx": 33017, "node_name": "obj", "Dec": "must be a date or a number representing a millisecond offset from the epoch ."}{"idx": 33018, "node_name": "toappendto", "Dec": "the string buffer for the returning date-time string ."}{"idx": 33019, "node_name": "fieldposition", "Dec": "keeps track on the position of the field within the returned string . for example , given a date-time text \" 1996.07.10 ad at 15:08 : 56 pdt \" , if the given fieldposition is year_field , the begin index and end index of fieldposition will be set to 0 and 4 , respectively . notice that if the same date-time field appears more than once in a pattern , the fieldposition will be set for the first occurrence of that date-time field . for instance , formatting a date to the date-time string \" 1 pm pdt ( pacific daylight time )\" using the pattern \" h a z ( zzzz )\" and the alignment field timezone_field , the begin index and end index of fieldposition will be set to 5 and 8 , respectively , for the first occurrence of the timezone pattern character ' z ' ."}{"idx": 33021, "node_name": "date", "Dec": "a date to be formatted into a date-time string ."}{"idx": 33022, "node_name": "toappendto", "Dec": "the string buffer for the returning date-time string ."}{"idx": 33023, "node_name": "fieldposition", "Dec": "keeps track on the position of the field within the returned string . for example , given a date-time text \" 1996.07.10 ad at 15:08 : 56 pdt \" , if the given fieldposition is year_field , the begin index and end index of fieldposition will be set to 0 and 4 , respectively . notice that if the same date-time field appears more than once in a pattern , the fieldposition will be set for the first occurrence of that date-time field . for instance , formatting a date to the date-time string \" 1 pm pdt ( pacific daylight time )\" using the pattern \" h a z ( zzzz )\" and the alignment field timezone_field , the begin index and end index of fieldposition will be set to 5 and 8 , respectively , for the first occurrence of the timezone pattern character ' z ' ."}{"idx": 33025, "node_name": "date", "Dec": "the time value to be formatted into a date-time string ."}{"idx": 33027, "node_name": "source", "Dec": "a string whose beginning should be parsed ."}{"idx": 33029, "node_name": "source", "Dec": "the date / time string to be parsed"}{"idx": 33030, "node_name": "pos", "Dec": "on input , the position at which to start parsing ; on output , the position at which parsing terminated , or the start position if the parse failed ."}{"idx": 33032, "node_name": "source", "Dec": "a string , part of which should be parsed ."}{"idx": 33033, "node_name": "pos", "Dec": "a parseposition object with index and error index information as described above ."}{"idx": 33036, "node_name": "style", "Dec": "the given formatting style . for example , short for \" h : mm a \" in the us locale ."}{"idx": 33038, "node_name": "style", "Dec": "the given formatting style . for example , short for \" h : mm a \" in the us locale ."}{"idx": 33039, "node_name": "alocale", "Dec": "the given locale ."}{"idx": 33042, "node_name": "style", "Dec": "the given formatting style . for example , short for \" m / d / yy \" in the us locale ."}{"idx": 33044, "node_name": "style", "Dec": "the given formatting style . for example , short for \" m / d / yy \" in the us locale ."}{"idx": 33045, "node_name": "alocale", "Dec": "the given locale ."}{"idx": 33048, "node_name": "datestyle", "Dec": "the given date formatting style . for example , short for \" m / d / yy \" in the us locale ."}{"idx": 33049, "node_name": "timestyle", "Dec": "the given time formatting style . for example , short for \" h : mm a \" in the us locale ."}{"idx": 33051, "node_name": "datestyle", "Dec": "the given date formatting style ."}{"idx": 33052, "node_name": "timestyle", "Dec": "the given time formatting style ."}{"idx": 33053, "node_name": "alocale", "Dec": "the given locale ."}{"idx": 33057, "node_name": "newcalendar", "Dec": "the new calendar to be used by the date format"}{"idx": 33060, "node_name": "newnumberformat", "Dec": "the given new numberformat ."}{"idx": 33063, "node_name": "zone", "Dec": "the given new time zone ."}{"idx": 33066, "node_name": "lenient", "Dec": "when true , parsing is lenient"}{"idx": 33070, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 33075, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33079, "node_name": "locale", "Dec": "the given locale ."}{"idx": 33082, "node_name": "neweras", "Dec": "the new era strings ."}{"idx": 33085, "node_name": "newmonths", "Dec": "the new month strings . the array should be indexed by calendar.january , calendar.february , etc ."}{"idx": 33088, "node_name": "newshortmonths", "Dec": "the new short month strings . the array should be indexed by calendar.january , calendar.february , etc ."}{"idx": 33091, "node_name": "newweekdays", "Dec": "the new weekday strings . the array should be indexed by calendar.sunday , calendar.monday , etc ."}{"idx": 33094, "node_name": "newshortweekdays", "Dec": "the new short weekday strings . the array should be indexed by calendar.sunday , calendar.monday , etc ."}{"idx": 33097, "node_name": "newampms", "Dec": "the new ampm strings ."}{"idx": 33100, "node_name": "newzonestrings", "Dec": "the new time zone strings ."}{"idx": 33103, "node_name": "newlocalpatternchars", "Dec": "the new localized date-time pattern characters ."}{"idx": 33107, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 33111, "node_name": "pattern", "Dec": "a non-localized pattern string ."}{"idx": 33113, "node_name": "pattern", "Dec": "a non-localized pattern string"}{"idx": 33114, "node_name": "symbols", "Dec": "the set of symbols to be used"}{"idx": 33116, "node_name": "number", "Dec": "the number to format"}{"idx": 33117, "node_name": "toappendto", "Dec": "the stringbuffer to which the formatted text is to be appended"}{"idx": 33118, "node_name": "pos", "Dec": "keeps track on the position of the field within the returned string . for example , for formatting a number 1234567.89 in locale.us locale , if the given fieldposition is numberformat.integer_field , the begin index and end index of fieldposition will be set to 0 and 9 , respectively for the output string 1,234,567 .89 ."}{"idx": 33120, "node_name": "number", "Dec": "the double to format"}{"idx": 33121, "node_name": "result", "Dec": "where the text is to be appended"}{"idx": 33122, "node_name": "fieldposition", "Dec": "keeps track on the position of the field within the returned string . for example , for formatting a number 1234567.89 in locale.us locale , if the given fieldposition is numberformat.integer_field , the begin index and end index of fieldposition will be set to 0 and 9 , respectively for the output string 1,234,567 .89 ."}{"idx": 33124, "node_name": "number", "Dec": "the long to format"}{"idx": 33125, "node_name": "result", "Dec": "where the text is to be appended"}{"idx": 33126, "node_name": "fieldposition", "Dec": "keeps track on the position of the field within the returned string . for example , for formatting a number 123456789 in locale.us locale , if the given fieldposition is numberformat.integer_field , the begin index and end index of fieldposition will be set to 0 and 11 , respectively for the output string 123,456,789 ."}{"idx": 33128, "node_name": "obj", "Dec": "the object to format"}{"idx": 33130, "node_name": "text", "Dec": "the string to be parsed"}{"idx": 33131, "node_name": "pos", "Dec": "a parseposition object with index and error index information as described above ."}{"idx": 33134, "node_name": "newsymbols", "Dec": "desired decimalformatsymbols"}{"idx": 33137, "node_name": "newvalue", "Dec": "the new positive prefix"}{"idx": 33140, "node_name": "newvalue", "Dec": "the new negative prefix"}{"idx": 33143, "node_name": "newvalue", "Dec": "the new positive suffix"}{"idx": 33146, "node_name": "newvalue", "Dec": "the new negative suffix"}{"idx": 33149, "node_name": "newvalue", "Dec": "the new multiplier"}{"idx": 33152, "node_name": "newvalue", "Dec": "the new grouping size"}{"idx": 33155, "node_name": "newvalue", "Dec": "true if the decimal separator is always shown ; false otherwise"}{"idx": 33158, "node_name": "newvalue", "Dec": "true if the parse method returns bigdecimal ; false otherwise"}{"idx": 33161, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 33166, "node_name": "pattern", "Dec": "a new pattern"}{"idx": 33168, "node_name": "pattern", "Dec": "a new pattern"}{"idx": 33170, "node_name": "newvalue", "Dec": "the maximum number of integer digits to be shown ; if less than zero , then zero is used . the concrete subclass may enforce an upper limit to this value appropriate to the numeric type being formatted ."}{"idx": 33172, "node_name": "newvalue", "Dec": "the minimum number of integer digits to be shown ; if less than zero , then zero is used . the concrete subclass may enforce an upper limit to this value appropriate to the numeric type being formatted ."}{"idx": 33174, "node_name": "newvalue", "Dec": "the maximum number of fraction digits to be shown ; if less than zero , then zero is used . the concrete subclass may enforce an upper limit to this value appropriate to the numeric type being formatted ."}{"idx": 33176, "node_name": "newvalue", "Dec": "the minimum number of fraction digits to be shown ; if less than zero , then zero is used . the concrete subclass may enforce an upper limit to this value appropriate to the numeric type being formatted ."}{"idx": 33183, "node_name": "currency", "Dec": "the new currency to be used by this decimal format"}{"idx": 33186, "node_name": "roundingmode", "Dec": "the roundingmode to be used"}{"idx": 33190, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33194, "node_name": "locale", "Dec": "the desired locale ."}{"idx": 33197, "node_name": "zerodigit", "Dec": "the character used for zero"}{"idx": 33200, "node_name": "groupingseparator", "Dec": "the grouping separator"}{"idx": 33203, "node_name": "decimalseparator", "Dec": "the character used for decimal sign"}{"idx": 33206, "node_name": "permill", "Dec": "the character used for per mille sign"}{"idx": 33209, "node_name": "percent", "Dec": "the character used for percent sign"}{"idx": 33212, "node_name": "digit", "Dec": "the character used for a digit in a pattern"}{"idx": 33215, "node_name": "patternseparator", "Dec": "the pattern separator"}{"idx": 33218, "node_name": "infinity", "Dec": "the string representing infinity"}{"idx": 33221, "node_name": "nan", "Dec": "the string representing \" not a number \""}{"idx": 33224, "node_name": "minussign", "Dec": "the character representing minus sign"}{"idx": 33227, "node_name": "currency", "Dec": "the currency symbol"}{"idx": 33230, "node_name": "currencycode", "Dec": "the currency code"}{"idx": 33233, "node_name": "currency", "Dec": "the new currency to be used"}{"idx": 33236, "node_name": "sep", "Dec": "the monetary decimal separator"}{"idx": 33239, "node_name": "exp", "Dec": "the exponent separator string"}{"idx": 33242, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 33246, "node_name": "field", "Dec": "the field identifier"}{"idx": 33248, "node_name": "attribute", "Dec": "format.field constant identifying a field"}{"idx": 33250, "node_name": "attribute", "Dec": "format.field constant identifying a field"}{"idx": 33251, "node_name": "fieldid", "Dec": "integer constant identifying a field"}{"idx": 33257, "node_name": "bi", "Dec": "the begin index"}{"idx": 33259, "node_name": "ei", "Dec": "the end index"}{"idx": 33261, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 33266, "node_name": "name", "Dec": "name of the attribute"}{"idx": 33270, "node_name": "obj", "Dec": "the object to format"}{"idx": 33272, "node_name": "obj", "Dec": "the object to format"}{"idx": 33273, "node_name": "toappendto", "Dec": "where the text is to be appended"}{"idx": 33274, "node_name": "pos", "Dec": "a fieldposition identifying a field in the formatted text"}{"idx": 33276, "node_name": "obj", "Dec": "the object to format"}{"idx": 33278, "node_name": "source", "Dec": "a string , part of which should be parsed ."}{"idx": 33279, "node_name": "pos", "Dec": "a parseposition object with index and error index information as described above ."}{"idx": 33281, "node_name": "source", "Dec": "a string whose beginning should be parsed ."}{"idx": 33286, "node_name": "name", "Dec": "name of the attribute"}{"idx": 33290, "node_name": "pattern", "Dec": "the pattern for this message format"}{"idx": 33292, "node_name": "pattern", "Dec": "the pattern for this message format"}{"idx": 33293, "node_name": "locale", "Dec": "the locale for this message format"}{"idx": 33295, "node_name": "locale", "Dec": "the locale to be used when creating or comparing subformats"}{"idx": 33298, "node_name": "pattern", "Dec": "the pattern for this message format"}{"idx": 33301, "node_name": "newformats", "Dec": "the new formats to use"}{"idx": 33303, "node_name": "newformats", "Dec": "the new formats to use"}{"idx": 33305, "node_name": "argumentindex", "Dec": "the argument index for which to use the new format"}{"idx": 33306, "node_name": "newformat", "Dec": "the new format to use"}{"idx": 33308, "node_name": "formatelementindex", "Dec": "the index of a format element within the pattern"}{"idx": 33309, "node_name": "newformat", "Dec": "the format to use for the specified format element"}{"idx": 33313, "node_name": "arguments", "Dec": "an array of objects to be formatted and substituted ."}{"idx": 33314, "node_name": "result", "Dec": "where text is appended ."}{"idx": 33315, "node_name": "pos", "Dec": "keeps track on the position of the first replaced argument in the output string ."}{"idx": 33317, "node_name": "pattern", "Dec": "the pattern string"}{"idx": 33318, "node_name": "arguments", "Dec": "object ( s ) to format"}{"idx": 33320, "node_name": "arguments", "Dec": "an array of objects to be formatted and substituted ."}{"idx": 33321, "node_name": "result", "Dec": "where text is appended ."}{"idx": 33322, "node_name": "pos", "Dec": "keeps track on the position of the first replaced argument in the output string ."}{"idx": 33324, "node_name": "arguments", "Dec": "an array of objects to be formatted and substituted ."}{"idx": 33326, "node_name": "source", "Dec": "the string to parse"}{"idx": 33327, "node_name": "pos", "Dec": "the parse position"}{"idx": 33329, "node_name": "source", "Dec": "a string whose beginning should be parsed ."}{"idx": 33331, "node_name": "source", "Dec": "a string , part of which should be parsed ."}{"idx": 33332, "node_name": "pos", "Dec": "a parseposition object with index and error index information as described above ."}{"idx": 33335, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 33340, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 33343, "node_name": "src", "Dec": "the sequence of char values to normalize ."}{"idx": 33344, "node_name": "form", "Dec": "the normalization form ; one of normalizer.form.nfc , normalizer.form.nfd , normalizer.form.nfkc , normalizer.form.nfkd"}{"idx": 33346, "node_name": "src", "Dec": "the sequence of char values to be checked ."}{"idx": 33347, "node_name": "form", "Dec": "the normalization form ; one of normalizer.form.nfc , normalizer.form.nfd , normalizer.form.nfkc , normalizer.form.nfkd"}{"idx": 33363, "node_name": "name", "Dec": "name of the attribute"}{"idx": 33370, "node_name": "number", "Dec": "the number to format"}{"idx": 33371, "node_name": "toappendto", "Dec": "the stringbuffer to which the formatted text is to be appended"}{"idx": 33372, "node_name": "pos", "Dec": "keeps track on the position of the field within the returned string . for example , for formatting a number 1234567.89 in locale.us locale , if the given fieldposition is integer_field , the begin index and end index of fieldposition will be set to 0 and 9 , respectively for the output string 1,234,567 .89 ."}{"idx": 33374, "node_name": "source", "Dec": "a string , part of which should be parsed ."}{"idx": 33375, "node_name": "pos", "Dec": "a parseposition object with index and error index information as described above ."}{"idx": 33377, "node_name": "number", "Dec": "the double number to format"}{"idx": 33379, "node_name": "number", "Dec": "the long number to format"}{"idx": 33381, "node_name": "number", "Dec": "the double number to format"}{"idx": 33382, "node_name": "toappendto", "Dec": "the stringbuffer to which the formatted text is to be appended"}{"idx": 33383, "node_name": "pos", "Dec": "keeps track on the position of the field within the returned string . for example , for formatting a number 1234567.89 in locale.us locale , if the given fieldposition is integer_field , the begin index and end index of fieldposition will be set to 0 and 9 , respectively for the output string 1,234,567 .89 ."}{"idx": 33385, "node_name": "number", "Dec": "the long number to format"}{"idx": 33386, "node_name": "toappendto", "Dec": "the stringbuffer to which the formatted text is to be appended"}{"idx": 33387, "node_name": "pos", "Dec": "keeps track on the position of the field within the returned string . for example , for formatting a number 123456789 in locale.us locale , if the given fieldposition is integer_field , the begin index and end index of fieldposition will be set to 0 and 11 , respectively for the output string 123,456,789 ."}{"idx": 33389, "node_name": "source", "Dec": "the string to parse"}{"idx": 33390, "node_name": "parseposition", "Dec": "the parse position"}{"idx": 33392, "node_name": "source", "Dec": "a string whose beginning should be parsed ."}{"idx": 33395, "node_name": "value", "Dec": "true if numbers should be parsed as integers only ; false otherwise"}{"idx": 33398, "node_name": "inlocale", "Dec": "the desired locale"}{"idx": 33401, "node_name": "inlocale", "Dec": "the desired locale"}{"idx": 33404, "node_name": "inlocale", "Dec": "the desired locale"}{"idx": 33407, "node_name": "inlocale", "Dec": "the desired locale"}{"idx": 33410, "node_name": "inlocale", "Dec": "the desired locale"}{"idx": 33413, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33414, "node_name": "formatstyle", "Dec": "the style for formatting a number"}{"idx": 33418, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 33422, "node_name": "newvalue", "Dec": "true if grouping is used ; false otherwise"}{"idx": 33425, "node_name": "newvalue", "Dec": "the maximum number of integer digits to be shown ; if less than zero , then zero is used . the concrete subclass may enforce an upper limit to this value appropriate to the numeric type being formatted ."}{"idx": 33428, "node_name": "newvalue", "Dec": "the minimum number of integer digits to be shown ; if less than zero , then zero is used . the concrete subclass may enforce an upper limit to this value appropriate to the numeric type being formatted ."}{"idx": 33431, "node_name": "newvalue", "Dec": "the maximum number of fraction digits to be shown ; if less than zero , then zero is used . the concrete subclass may enforce an upper limit to this value appropriate to the numeric type being formatted ."}{"idx": 33434, "node_name": "newvalue", "Dec": "the minimum number of fraction digits to be shown ; if less than zero , then zero is used . the concrete subclass may enforce an upper limit to this value appropriate to the numeric type being formatted ."}{"idx": 33437, "node_name": "currency", "Dec": "the new currency to be used by this number format"}{"idx": 33440, "node_name": "roundingmode", "Dec": "the roundingmode to be used"}{"idx": 33444, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 33447, "node_name": "s", "Dec": "the detail message"}{"idx": 33448, "node_name": "erroroffset", "Dec": "the position where the error is found while parsing ."}{"idx": 33452, "node_name": "index", "Dec": "initial index"}{"idx": 33455, "node_name": "index", "Dec": "the current parse position"}{"idx": 33457, "node_name": "ei", "Dec": "the index at which an error occurred"}{"idx": 33460, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 33465, "node_name": "rules", "Dec": "the collation rules to build the collation table from ."}{"idx": 33468, "node_name": "source", "Dec": "the string to be collated"}{"idx": 33470, "node_name": "source", "Dec": "the character iterator to be collated"}{"idx": 33472, "node_name": "source", "Dec": "the source string ."}{"idx": 33473, "node_name": "target", "Dec": "the target string ."}{"idx": 33475, "node_name": "source", "Dec": "the string to be transformed into a collation key ."}{"idx": 33478, "node_name": "obj", "Dec": "the table-based collation object to be compared with this ."}{"idx": 33483, "node_name": "pattern", "Dec": "the pattern describing the date and time format"}{"idx": 33485, "node_name": "pattern", "Dec": "the pattern describing the date and time format"}{"idx": 33486, "node_name": "locale", "Dec": "the locale whose date format symbols should be used"}{"idx": 33488, "node_name": "pattern", "Dec": "the pattern describing the date and time format"}{"idx": 33489, "node_name": "formatsymbols", "Dec": "the date format symbols to be used for formatting"}{"idx": 33491, "node_name": "startdate", "Dec": "during parsing , two digit years will be placed in the range startdate to startdate + 100 years ."}{"idx": 33494, "node_name": "date", "Dec": "the date-time value to be formatted into a date-time string ."}{"idx": 33495, "node_name": "toappendto", "Dec": "where the new date-time text is to be appended ."}{"idx": 33496, "node_name": "pos", "Dec": "keeps track on the position of the field within the returned string . for example , given a date-time text \" 1996.07.10 ad at 15:08 : 56 pdt \" , if the given fieldposition is dateformat.year_field , the begin index and end index of fieldposition will be set to 0 and 4 , respectively . notice that if the same date-time field appears more than once in a pattern , the fieldposition will be set for the first occurrence of that date-time field . for instance , formatting a date to the date-time string \" 1 pm pdt ( pacific daylight time )\" using the pattern \" h a z ( zzzz )\" and the alignment field dateformat.timezone_field , the begin index and end index of fieldposition will be set to 5 and 8 , respectively , for the first occurrence of the timezone pattern character ' z ' ."}{"idx": 33498, "node_name": "obj", "Dec": "the object to format"}{"idx": 33500, "node_name": "text", "Dec": "a string , part of which should be parsed ."}{"idx": 33501, "node_name": "pos", "Dec": "a parseposition object with index and error index information as described above ."}{"idx": 33505, "node_name": "pattern", "Dec": "the new date and time pattern for this date format"}{"idx": 33507, "node_name": "pattern", "Dec": "a string to be mapped to the new date and time format pattern for this format"}{"idx": 33510, "node_name": "newformatsymbols", "Dec": "the new date and time format symbols"}{"idx": 33514, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 33518, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33520, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33522, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33524, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33528, "node_name": "locale", "Dec": "the desired locale ."}{"idx": 33532, "node_name": "style", "Dec": "the given formatting style . either one of dateformat.short , dateformat.medium , dateformat.long , or dateformat.full ."}{"idx": 33533, "node_name": "locale", "Dec": "the desired locale ."}{"idx": 33535, "node_name": "style", "Dec": "the given formatting style . either one of dateformat.short , dateformat.medium , dateformat.long , or dateformat.full ."}{"idx": 33536, "node_name": "locale", "Dec": "the desired locale ."}{"idx": 33538, "node_name": "datestyle", "Dec": "the given date formatting style . either one of dateformat.short , dateformat.medium , dateformat.long , or dateformat.full ."}{"idx": 33539, "node_name": "timestyle", "Dec": "the given time formatting style . either one of dateformat.short , dateformat.medium , dateformat.long , or dateformat.full ."}{"idx": 33540, "node_name": "locale", "Dec": "the desired locale ."}{"idx": 33544, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33548, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33552, "node_name": "locale", "Dec": "the desired locale ."}{"idx": 33554, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33556, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33558, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33560, "node_name": "locale", "Dec": "the desired locale"}{"idx": 33561, "node_name": "formatstyle", "Dec": "the style for formatting a number"}{"idx": 33564, "node_name": "text", "Dec": "the string to be iterated over"}{"idx": 33566, "node_name": "text", "Dec": "the string to be iterated over"}{"idx": 33567, "node_name": "pos", "Dec": "initial iterator position"}{"idx": 33569, "node_name": "text", "Dec": "the string to be iterated over"}{"idx": 33570, "node_name": "begin", "Dec": "index of the first character"}{"idx": 33571, "node_name": "end", "Dec": "index of the character following the last character"}{"idx": 33572, "node_name": "pos", "Dec": "initial iterator position"}{"idx": 33574, "node_name": "text", "Dec": "the string to be iterated over"}{"idx": 33578, "node_name": "p", "Dec": "the position within the text . valid values range from getbeginindex() to getendindex() . an illegalargumentexception is thrown if an invalid value is supplied ."}{"idx": 33586, "node_name": "obj", "Dec": "the stringcharacteriterator object to be compared with ."}{"idx": 33592, "node_name": "fieldvalues", "Dec": "the map of fields to values , which can be updated , not null"}{"idx": 33593, "node_name": "resolverstyle", "Dec": "the requested type of resolve , not null"}{"idx": 33595, "node_name": "other", "Dec": "the other chronology to compare to , not null"}{"idx": 33597, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 33603, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 33610, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 33612, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 33614, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 33616, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 33617, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 33619, "node_name": "amount", "Dec": "the amount to add , not null"}{"idx": 33621, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to add , may be negative"}{"idx": 33622, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 33624, "node_name": "amount", "Dec": "the amount to subtract , not null"}{"idx": 33626, "node_name": "amounttosubtract", "Dec": "the amount of the specified unit to subtract , may be negative"}{"idx": 33627, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 33629, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 33631, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 33633, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to a chronolocaldate in the same chronology , not null"}{"idx": 33634, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 33636, "node_name": "enddateexclusive", "Dec": "the end date , exclusive , which may be in any chronology , not null"}{"idx": 33638, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 33640, "node_name": "localtime", "Dec": "the local time to use , not null"}{"idx": 33643, "node_name": "other", "Dec": "the other date to compare to , not null"}{"idx": 33645, "node_name": "other", "Dec": "the other date to compare to , not null"}{"idx": 33647, "node_name": "other", "Dec": "the other date to compare to , not null"}{"idx": 33649, "node_name": "other", "Dec": "the other date to compare to , not null"}{"idx": 33651, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 33657, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 33662, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 33664, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 33666, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 33668, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 33669, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 33671, "node_name": "amount", "Dec": "the amount to add , not null"}{"idx": 33673, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to add , may be negative"}{"idx": 33674, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 33676, "node_name": "amount", "Dec": "the amount to subtract , not null"}{"idx": 33678, "node_name": "amounttosubtract", "Dec": "the amount of the specified unit to subtract , may be negative"}{"idx": 33679, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 33681, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 33683, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 33685, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 33687, "node_name": "zone", "Dec": "the time-zone to use , not null"}{"idx": 33689, "node_name": "offset", "Dec": "the offset to use for the conversion , not null"}{"idx": 33691, "node_name": "offset", "Dec": "the offset to use for the conversion , not null"}{"idx": 33693, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 33695, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 33697, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 33699, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 33701, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 33706, "node_name": "temporal", "Dec": "the temporal to convert , not null"}{"idx": 33708, "node_name": "locale", "Dec": "the locale to use to obtain the calendar system , not null"}{"idx": 33710, "node_name": "id", "Dec": "the chronology id or calendar system type , not null"}{"idx": 33715, "node_name": "era", "Dec": "the era of the correct type for the chronology , not null"}{"idx": 33716, "node_name": "yearofera", "Dec": "the chronology year-of-era"}{"idx": 33717, "node_name": "month", "Dec": "the chronology month-of-year"}{"idx": 33718, "node_name": "dayofmonth", "Dec": "the chronology day-of-month"}{"idx": 33720, "node_name": "prolepticyear", "Dec": "the chronology proleptic-year"}{"idx": 33721, "node_name": "month", "Dec": "the chronology month-of-year"}{"idx": 33722, "node_name": "dayofmonth", "Dec": "the chronology day-of-month"}{"idx": 33724, "node_name": "era", "Dec": "the era of the correct type for the chronology , not null"}{"idx": 33725, "node_name": "yearofera", "Dec": "the chronology year-of-era"}{"idx": 33726, "node_name": "dayofyear", "Dec": "the chronology day-of-year"}{"idx": 33728, "node_name": "prolepticyear", "Dec": "the chronology proleptic-year"}{"idx": 33729, "node_name": "dayofyear", "Dec": "the chronology day-of-year"}{"idx": 33731, "node_name": "epochday", "Dec": "the epoch day"}{"idx": 33734, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 33736, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 33738, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 33740, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 33742, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 33744, "node_name": "instant", "Dec": "the instant to create the date-time from , not null"}{"idx": 33745, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 33747, "node_name": "prolepticyear", "Dec": "the proleptic-year to check , not validated for range"}{"idx": 33749, "node_name": "era", "Dec": "the era of the correct type for the chronology , not null"}{"idx": 33750, "node_name": "yearofera", "Dec": "the chronology year-of-era"}{"idx": 33752, "node_name": "eravalue", "Dec": "the era value"}{"idx": 33755, "node_name": "field", "Dec": "the field to get the range for , not null"}{"idx": 33757, "node_name": "style", "Dec": "the style of the text required , not null"}{"idx": 33758, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 33760, "node_name": "fieldvalues", "Dec": "the map of fields to values , which can be updated , not null"}{"idx": 33761, "node_name": "resolverstyle", "Dec": "the requested type of resolve , not null"}{"idx": 33763, "node_name": "years", "Dec": "the number of years , may be negative"}{"idx": 33764, "node_name": "months", "Dec": "the number of years , may be negative"}{"idx": 33765, "node_name": "days", "Dec": "the number of years , may be negative"}{"idx": 33767, "node_name": "prolepticyear", "Dec": "the chronology proleptic-year"}{"idx": 33768, "node_name": "month", "Dec": "the chronology month-of-year"}{"idx": 33769, "node_name": "dayofmonth", "Dec": "the chronology day-of-month"}{"idx": 33770, "node_name": "hour", "Dec": "the hour-of-day , from 0 to 23"}{"idx": 33771, "node_name": "minute", "Dec": "the minute-of-hour , from 0 to 59"}{"idx": 33772, "node_name": "second", "Dec": "the second-of-minute , from 0 to 59"}{"idx": 33773, "node_name": "zoneoffset", "Dec": "the zone offset , not null"}{"idx": 33775, "node_name": "era", "Dec": "the era of the correct type for the chronology , not null"}{"idx": 33776, "node_name": "yearofera", "Dec": "the chronology year-of-era"}{"idx": 33777, "node_name": "month", "Dec": "the chronology month-of-year"}{"idx": 33778, "node_name": "dayofmonth", "Dec": "the chronology day-of-month"}{"idx": 33779, "node_name": "hour", "Dec": "the hour-of-day , from 0 to 23"}{"idx": 33780, "node_name": "minute", "Dec": "the minute-of-hour , from 0 to 59"}{"idx": 33781, "node_name": "second", "Dec": "the second-of-minute , from 0 to 59"}{"idx": 33782, "node_name": "zoneoffset", "Dec": "the zone offset , not null"}{"idx": 33784, "node_name": "other", "Dec": "the other chronology to compare to , not null"}{"idx": 33786, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 33791, "node_name": "startdateinclusive", "Dec": "the start date , inclusive , specifying the chronology of the calculation , not null"}{"idx": 33792, "node_name": "enddateexclusive", "Dec": "the end date , exclusive , in any chronology , not null"}{"idx": 33794, "node_name": "unit", "Dec": "the temporalunit for which to return the value"}{"idx": 33800, "node_name": "amounttoadd", "Dec": "the period to add , not null"}{"idx": 33802, "node_name": "amounttosubtract", "Dec": "the period to subtract , not null"}{"idx": 33804, "node_name": "scalar", "Dec": "the scalar to multiply by , not null"}{"idx": 33808, "node_name": "temporal", "Dec": "the temporal object to adjust , not null"}{"idx": 33810, "node_name": "temporal", "Dec": "the temporal object to adjust , not null"}{"idx": 33812, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 33818, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 33828, "node_name": "zone", "Dec": "the time-zone to change to , not null"}{"idx": 33830, "node_name": "zone", "Dec": "the time-zone to change to , not null"}{"idx": 33832, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 33834, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 33836, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 33838, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 33839, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 33841, "node_name": "amount", "Dec": "the amount to add , not null"}{"idx": 33843, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to add , may be negative"}{"idx": 33844, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 33846, "node_name": "amount", "Dec": "the amount to subtract , not null"}{"idx": 33848, "node_name": "amounttosubtract", "Dec": "the amount of the specified unit to subtract , may be negative"}{"idx": 33849, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 33851, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 33853, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 33857, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 33859, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 33861, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 33863, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 33865, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 33871, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 33873, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 33875, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 33877, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 33879, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 33881, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 33883, "node_name": "style", "Dec": "the style of the text required , not null"}{"idx": 33884, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 33890, "node_name": "era", "Dec": "the hijrah era , not null"}{"idx": 33891, "node_name": "yearofera", "Dec": "the year-of-era"}{"idx": 33892, "node_name": "month", "Dec": "the month-of-year"}{"idx": 33893, "node_name": "dayofmonth", "Dec": "the day-of-month"}{"idx": 33895, "node_name": "prolepticyear", "Dec": "the proleptic-year"}{"idx": 33896, "node_name": "month", "Dec": "the month-of-year"}{"idx": 33897, "node_name": "dayofmonth", "Dec": "the day-of-month"}{"idx": 33899, "node_name": "era", "Dec": "the hijrah era , not null"}{"idx": 33900, "node_name": "yearofera", "Dec": "the year-of-era"}{"idx": 33901, "node_name": "dayofyear", "Dec": "the day-of-year"}{"idx": 33903, "node_name": "prolepticyear", "Dec": "the proleptic-year"}{"idx": 33904, "node_name": "dayofyear", "Dec": "the day-of-year"}{"idx": 33906, "node_name": "epochday", "Dec": "the epoch day"}{"idx": 33909, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 33911, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 33913, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 33915, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 33917, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 33919, "node_name": "instant", "Dec": "the instant to create the date-time from , not null"}{"idx": 33920, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 33922, "node_name": "eravalue", "Dec": "the era value"}{"idx": 33924, "node_name": "fieldvalues", "Dec": "the map of fields to values , which can be updated , not null"}{"idx": 33925, "node_name": "resolverstyle", "Dec": "the requested type of resolve , not null"}{"idx": 33929, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 33931, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 33933, "node_name": "prolepticyear", "Dec": "the hijrah proleptic-year"}{"idx": 33934, "node_name": "month", "Dec": "the hijrah month-of-year , from 1 to 12"}{"idx": 33935, "node_name": "dayofmonth", "Dec": "the hijrah day-of-month , from 1 to 30"}{"idx": 33937, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 33943, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 33944, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 33946, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 33948, "node_name": "chronology", "Dec": "the new hijrahchonology , non-null"}{"idx": 33950, "node_name": "amount", "Dec": "the amount to add , not null"}{"idx": 33952, "node_name": "amount", "Dec": "the amount to subtract , not null"}{"idx": 33955, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to add , may be negative"}{"idx": 33956, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 33958, "node_name": "amounttosubtract", "Dec": "the amount of the specified unit to subtract , may be negative"}{"idx": 33959, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 33961, "node_name": "localtime", "Dec": "the local time to use , not null"}{"idx": 33963, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 33966, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to a chronolocaldate in the same chronology , not null"}{"idx": 33967, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 33972, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 33974, "node_name": "hijrahera", "Dec": "the era to represent , only 1 supported"}{"idx": 33977, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 33979, "node_name": "style", "Dec": "the style of the text required , not null"}{"idx": 33980, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 33986, "node_name": "era", "Dec": "the iso era , not null"}{"idx": 33987, "node_name": "yearofera", "Dec": "the iso year-of-era"}{"idx": 33988, "node_name": "month", "Dec": "the iso month-of-year"}{"idx": 33989, "node_name": "dayofmonth", "Dec": "the iso day-of-month"}{"idx": 33991, "node_name": "prolepticyear", "Dec": "the iso proleptic-year"}{"idx": 33992, "node_name": "month", "Dec": "the iso month-of-year"}{"idx": 33993, "node_name": "dayofmonth", "Dec": "the iso day-of-month"}{"idx": 33995, "node_name": "era", "Dec": "the iso era , not null"}{"idx": 33996, "node_name": "yearofera", "Dec": "the iso year-of-era"}{"idx": 33997, "node_name": "dayofyear", "Dec": "the iso day-of-year"}{"idx": 33999, "node_name": "prolepticyear", "Dec": "the iso proleptic-year"}{"idx": 34000, "node_name": "dayofyear", "Dec": "the iso day-of-year"}{"idx": 34002, "node_name": "epochday", "Dec": "the epoch day"}{"idx": 34004, "node_name": "temporal", "Dec": "the date-time object to convert , not null"}{"idx": 34006, "node_name": "prolepticyear", "Dec": "the year , from min_year to max_year"}{"idx": 34007, "node_name": "month", "Dec": "the month-of-year , from 1 to 12"}{"idx": 34008, "node_name": "dayofmonth", "Dec": "the day-of-month , from 1 to 31"}{"idx": 34009, "node_name": "hour", "Dec": "the hour-of-day , from 0 to 23"}{"idx": 34010, "node_name": "minute", "Dec": "the minute-of-hour , from 0 to 59"}{"idx": 34011, "node_name": "second", "Dec": "the second-of-minute , from 0 to 59"}{"idx": 34012, "node_name": "zoneoffset", "Dec": "the zone offset , not null"}{"idx": 34014, "node_name": "temporal", "Dec": "the date-time object to convert , not null"}{"idx": 34016, "node_name": "temporal", "Dec": "the date-time object to convert , not null"}{"idx": 34018, "node_name": "instant", "Dec": "the instant to create the date-time from , not null"}{"idx": 34019, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 34022, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 34024, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 34026, "node_name": "prolepticyear", "Dec": "the iso proleptic year to check"}{"idx": 34028, "node_name": "eravalue", "Dec": "the era value"}{"idx": 34030, "node_name": "fieldvalues", "Dec": "the map of fields to values , which can be updated , not null"}{"idx": 34031, "node_name": "resolverstyle", "Dec": "the requested type of resolve , not null"}{"idx": 34033, "node_name": "years", "Dec": "the number of years , may be negative"}{"idx": 34034, "node_name": "months", "Dec": "the number of years , may be negative"}{"idx": 34035, "node_name": "days", "Dec": "the number of years , may be negative"}{"idx": 34039, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 34041, "node_name": "isoera", "Dec": "the bce / ce value to represent , from 0 ( bce ) to 1 ( ce )"}{"idx": 34048, "node_name": "era", "Dec": "the japanese era , not null"}{"idx": 34049, "node_name": "yearofera", "Dec": "the year-of-era"}{"idx": 34050, "node_name": "month", "Dec": "the month-of-year"}{"idx": 34051, "node_name": "dayofmonth", "Dec": "the day-of-month"}{"idx": 34053, "node_name": "prolepticyear", "Dec": "the proleptic-year"}{"idx": 34054, "node_name": "month", "Dec": "the month-of-year"}{"idx": 34055, "node_name": "dayofmonth", "Dec": "the day-of-month"}{"idx": 34057, "node_name": "era", "Dec": "the japanese era , not null"}{"idx": 34058, "node_name": "yearofera", "Dec": "the year-of-era"}{"idx": 34059, "node_name": "dayofyear", "Dec": "the day-of-year"}{"idx": 34061, "node_name": "prolepticyear", "Dec": "the proleptic-year"}{"idx": 34062, "node_name": "dayofyear", "Dec": "the day-of-year"}{"idx": 34064, "node_name": "epochday", "Dec": "the epoch day"}{"idx": 34067, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 34069, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 34071, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34073, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34075, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34077, "node_name": "instant", "Dec": "the instant to create the date-time from , not null"}{"idx": 34078, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 34080, "node_name": "prolepticyear", "Dec": "the proleptic-year to check , not validated for range"}{"idx": 34082, "node_name": "eravalue", "Dec": "the era value"}{"idx": 34084, "node_name": "fieldvalues", "Dec": "the map of fields to values , which can be updated , not null"}{"idx": 34085, "node_name": "resolverstyle", "Dec": "the requested type of resolve , not null"}{"idx": 34089, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 34091, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 34093, "node_name": "era", "Dec": "the japanese era , not null"}{"idx": 34094, "node_name": "yearofera", "Dec": "the japanese year-of-era"}{"idx": 34095, "node_name": "month", "Dec": "the japanese month-of-year , from 1 to 12"}{"idx": 34096, "node_name": "dayofmonth", "Dec": "the japanese day-of-month , from 1 to 31"}{"idx": 34098, "node_name": "prolepticyear", "Dec": "the japanese proleptic-year"}{"idx": 34099, "node_name": "month", "Dec": "the japanese month-of-year , from 1 to 12"}{"idx": 34100, "node_name": "dayofmonth", "Dec": "the japanese day-of-month , from 1 to 31"}{"idx": 34102, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34107, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 34109, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 34110, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 34112, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 34114, "node_name": "amount", "Dec": "the amount to add , not null"}{"idx": 34116, "node_name": "amount", "Dec": "the amount to subtract , not null"}{"idx": 34118, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to add , may be negative"}{"idx": 34119, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 34121, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to subtract , may be negative"}{"idx": 34122, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 34124, "node_name": "localtime", "Dec": "the local time to use , not null"}{"idx": 34126, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 34129, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to a chronolocaldate in the same chronology , not null"}{"idx": 34130, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 34139, "node_name": "japaneseera", "Dec": "the era to represent"}{"idx": 34141, "node_name": "japaneseera", "Dec": "the japaneseera name ; non-null"}{"idx": 34144, "node_name": "style", "Dec": "the style of the text required , not null"}{"idx": 34145, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 34148, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 34154, "node_name": "era", "Dec": "the minguo era , not null"}{"idx": 34155, "node_name": "yearofera", "Dec": "the year-of-era"}{"idx": 34156, "node_name": "month", "Dec": "the month-of-year"}{"idx": 34157, "node_name": "dayofmonth", "Dec": "the day-of-month"}{"idx": 34159, "node_name": "prolepticyear", "Dec": "the proleptic-year"}{"idx": 34160, "node_name": "month", "Dec": "the month-of-year"}{"idx": 34161, "node_name": "dayofmonth", "Dec": "the day-of-month"}{"idx": 34163, "node_name": "era", "Dec": "the minguo era , not null"}{"idx": 34164, "node_name": "yearofera", "Dec": "the year-of-era"}{"idx": 34165, "node_name": "dayofyear", "Dec": "the day-of-year"}{"idx": 34167, "node_name": "prolepticyear", "Dec": "the proleptic-year"}{"idx": 34168, "node_name": "dayofyear", "Dec": "the day-of-year"}{"idx": 34170, "node_name": "epochday", "Dec": "the epoch day"}{"idx": 34173, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 34175, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 34177, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34179, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34181, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34183, "node_name": "instant", "Dec": "the instant to create the date-time from , not null"}{"idx": 34184, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 34186, "node_name": "prolepticyear", "Dec": "the proleptic-year to check , not validated for range"}{"idx": 34188, "node_name": "eravalue", "Dec": "the era value"}{"idx": 34190, "node_name": "fieldvalues", "Dec": "the map of fields to values , which can be updated , not null"}{"idx": 34191, "node_name": "resolverstyle", "Dec": "the requested type of resolve , not null"}{"idx": 34195, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 34197, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 34199, "node_name": "prolepticyear", "Dec": "the minguo proleptic-year"}{"idx": 34200, "node_name": "month", "Dec": "the minguo month-of-year , from 1 to 12"}{"idx": 34201, "node_name": "dayofmonth", "Dec": "the minguo day-of-month , from 1 to 31"}{"idx": 34203, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34208, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 34209, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 34211, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 34213, "node_name": "amount", "Dec": "the amount to add , not null"}{"idx": 34215, "node_name": "amount", "Dec": "the amount to subtract , not null"}{"idx": 34217, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to add , may be negative"}{"idx": 34218, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 34220, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to subtract , may be negative"}{"idx": 34221, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 34223, "node_name": "localtime", "Dec": "the local time to use , not null"}{"idx": 34225, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 34228, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to a chronolocaldate in the same chronology , not null"}{"idx": 34229, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 34234, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 34236, "node_name": "minguoera", "Dec": "the before_roc / roc value to represent , from 0 ( before_roc ) to 1 ( roc )"}{"idx": 34239, "node_name": "style", "Dec": "the style of the text required , not null"}{"idx": 34240, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 34246, "node_name": "era", "Dec": "the thai buddhist era , not null"}{"idx": 34247, "node_name": "yearofera", "Dec": "the year-of-era"}{"idx": 34248, "node_name": "month", "Dec": "the month-of-year"}{"idx": 34249, "node_name": "dayofmonth", "Dec": "the day-of-month"}{"idx": 34251, "node_name": "prolepticyear", "Dec": "the proleptic-year"}{"idx": 34252, "node_name": "month", "Dec": "the month-of-year"}{"idx": 34253, "node_name": "dayofmonth", "Dec": "the day-of-month"}{"idx": 34255, "node_name": "era", "Dec": "the thai buddhist era , not null"}{"idx": 34256, "node_name": "yearofera", "Dec": "the year-of-era"}{"idx": 34257, "node_name": "dayofyear", "Dec": "the day-of-year"}{"idx": 34259, "node_name": "prolepticyear", "Dec": "the proleptic-year"}{"idx": 34260, "node_name": "dayofyear", "Dec": "the day-of-year"}{"idx": 34262, "node_name": "epochday", "Dec": "the epoch day"}{"idx": 34265, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 34267, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 34269, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34271, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34273, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34275, "node_name": "instant", "Dec": "the instant to create the date-time from , not null"}{"idx": 34276, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 34278, "node_name": "prolepticyear", "Dec": "the proleptic-year to check , not validated for range"}{"idx": 34280, "node_name": "eravalue", "Dec": "the era value"}{"idx": 34282, "node_name": "fieldvalues", "Dec": "the map of fields to values , which can be updated , not null"}{"idx": 34283, "node_name": "resolverstyle", "Dec": "the requested type of resolve , not null"}{"idx": 34287, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 34289, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 34291, "node_name": "prolepticyear", "Dec": "the thai buddhist proleptic-year"}{"idx": 34292, "node_name": "month", "Dec": "the thai buddhist month-of-year , from 1 to 12"}{"idx": 34293, "node_name": "dayofmonth", "Dec": "the thai buddhist day-of-month , from 1 to 31"}{"idx": 34295, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34300, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 34301, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 34303, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 34305, "node_name": "amount", "Dec": "the amount to add , not null"}{"idx": 34307, "node_name": "amount", "Dec": "the amount to subtract , not null"}{"idx": 34309, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to add , may be negative"}{"idx": 34310, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 34312, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to subtract , may be negative"}{"idx": 34313, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 34315, "node_name": "localtime", "Dec": "the local time to use , not null"}{"idx": 34317, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 34320, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to a chronolocaldate in the same chronology , not null"}{"idx": 34321, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 34326, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 34328, "node_name": "thaibuddhistera", "Dec": "the era to represent , from 0 to 1"}{"idx": 34331, "node_name": "style", "Dec": "the style of the text required , not null"}{"idx": 34332, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 34338, "node_name": "zone", "Dec": "the time-zone to use to convert the instant to date-time , not null"}{"idx": 34340, "node_name": "zone", "Dec": "the time-zone to use to convert the instant to date-time , not null"}{"idx": 34342, "node_name": "zone", "Dec": "the time-zone to use to convert the instant to date-time , not null"}{"idx": 34344, "node_name": "zone", "Dec": "the time-zone to use to convert the instant to date-time , not null"}{"idx": 34346, "node_name": "baseclock", "Dec": "the base clock to base the ticking clock on , not null"}{"idx": 34347, "node_name": "tickduration", "Dec": "the duration of each visible tick , not negative , not null"}{"idx": 34349, "node_name": "fixedinstant", "Dec": "the instant to use as the clock , not null"}{"idx": 34350, "node_name": "zone", "Dec": "the time-zone to use to convert the instant to date-time , not null"}{"idx": 34352, "node_name": "baseclock", "Dec": "the base clock to add the duration to , not null"}{"idx": 34353, "node_name": "offsetduration", "Dec": "the duration to add , not null"}{"idx": 34356, "node_name": "zone", "Dec": "the time-zone to change to , not null"}{"idx": 34360, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 34364, "node_name": "message", "Dec": "the message to use for this exception , may be null"}{"idx": 34366, "node_name": "message", "Dec": "the message to use for this exception , may be null"}{"idx": 34367, "node_name": "cause", "Dec": "the cause of the exception , may be null"}{"idx": 34371, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 34373, "node_name": "dayofweek", "Dec": "the day-of-week to represent , from 1 ( monday ) to 7 ( sunday )"}{"idx": 34375, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34378, "node_name": "style", "Dec": "the length of the text required , not null"}{"idx": 34379, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 34381, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 34383, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 34385, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 34387, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 34389, "node_name": "days", "Dec": "the days to add , positive or negative"}{"idx": 34391, "node_name": "days", "Dec": "the days to subtract , positive or negative"}{"idx": 34393, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 34395, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 34399, "node_name": "days", "Dec": "the number of days , positive or negative"}{"idx": 34401, "node_name": "hours", "Dec": "the number of hours , positive or negative"}{"idx": 34403, "node_name": "minutes", "Dec": "the number of minutes , positive or negative"}{"idx": 34405, "node_name": "seconds", "Dec": "the number of seconds , positive or negative"}{"idx": 34407, "node_name": "seconds", "Dec": "the number of seconds , positive or negative"}{"idx": 34408, "node_name": "nanoadjustment", "Dec": "the nanosecond adjustment to the number of seconds , positive or negative"}{"idx": 34410, "node_name": "millis", "Dec": "the number of milliseconds , positive or negative"}{"idx": 34412, "node_name": "nanos", "Dec": "the number of nanoseconds , positive or negative"}{"idx": 34414, "node_name": "amount", "Dec": "the amount of the duration , measured in terms of the unit , positive or negative"}{"idx": 34415, "node_name": "unit", "Dec": "the unit that the duration is measured in , must have an exact duration , not null"}{"idx": 34417, "node_name": "amount", "Dec": "the temporal amount to convert , not null"}{"idx": 34419, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 34421, "node_name": "startinclusive", "Dec": "the start instant , inclusive , not null"}{"idx": 34422, "node_name": "endexclusive", "Dec": "the end instant , exclusive , not null"}{"idx": 34424, "node_name": "unit", "Dec": "the temporalunit for which to return the value"}{"idx": 34431, "node_name": "seconds", "Dec": "the seconds to represent , may be negative"}{"idx": 34433, "node_name": "nanoofsecond", "Dec": "the nano-of-second to represent , from 0 to 999,999,999"}{"idx": 34435, "node_name": "duration", "Dec": "the duration to add , positive or negative , not null"}{"idx": 34437, "node_name": "amounttoadd", "Dec": "the amount to add , measured in terms of the unit , positive or negative"}{"idx": 34438, "node_name": "unit", "Dec": "the unit that the amount is measured in , must have an exact duration , not null"}{"idx": 34440, "node_name": "daystoadd", "Dec": "the days to add , positive or negative"}{"idx": 34442, "node_name": "hourstoadd", "Dec": "the hours to add , positive or negative"}{"idx": 34444, "node_name": "minutestoadd", "Dec": "the minutes to add , positive or negative"}{"idx": 34446, "node_name": "secondstoadd", "Dec": "the seconds to add , positive or negative"}{"idx": 34448, "node_name": "millistoadd", "Dec": "the milliseconds to add , positive or negative"}{"idx": 34450, "node_name": "nanostoadd", "Dec": "the nanoseconds to add , positive or negative"}{"idx": 34452, "node_name": "duration", "Dec": "the duration to subtract , positive or negative , not null"}{"idx": 34454, "node_name": "amounttosubtract", "Dec": "the amount to subtract , measured in terms of the unit , positive or negative"}{"idx": 34455, "node_name": "unit", "Dec": "the unit that the amount is measured in , must have an exact duration , not null"}{"idx": 34457, "node_name": "daystosubtract", "Dec": "the days to subtract , positive or negative"}{"idx": 34459, "node_name": "hourstosubtract", "Dec": "the hours to subtract , positive or negative"}{"idx": 34461, "node_name": "minutestosubtract", "Dec": "the minutes to subtract , positive or negative"}{"idx": 34463, "node_name": "secondstosubtract", "Dec": "the seconds to subtract , positive or negative"}{"idx": 34465, "node_name": "millistosubtract", "Dec": "the milliseconds to subtract , positive or negative"}{"idx": 34467, "node_name": "nanostosubtract", "Dec": "the nanoseconds to subtract , positive or negative"}{"idx": 34469, "node_name": "multiplicand", "Dec": "the value to multiply the duration by , positive or negative"}{"idx": 34471, "node_name": "divisor", "Dec": "the value to divide the duration by , positive or negative , not zero"}{"idx": 34473, "node_name": "divisor", "Dec": "the value to divide the duration by , positive or negative , not null"}{"idx": 34477, "node_name": "temporal", "Dec": "the temporal object to adjust , not null"}{"idx": 34479, "node_name": "temporal", "Dec": "the temporal object to adjust , not null"}{"idx": 34493, "node_name": "unit", "Dec": "the unit to truncate to , not null"}{"idx": 34495, "node_name": "otherduration", "Dec": "the other duration to compare to , not null"}{"idx": 34497, "node_name": "otherduration", "Dec": "the other duration , null returns false"}{"idx": 34517, "node_name": "pattern", "Dec": "the pattern to use , not null"}{"idx": 34519, "node_name": "pattern", "Dec": "the pattern to use , not null"}{"idx": 34520, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 34522, "node_name": "datestyle", "Dec": "the formatter style to obtain , not null"}{"idx": 34524, "node_name": "timestyle", "Dec": "the formatter style to obtain , not null"}{"idx": 34526, "node_name": "datetimestyle", "Dec": "the formatter style to obtain , not null"}{"idx": 34528, "node_name": "datestyle", "Dec": "the date formatter style to obtain , not null"}{"idx": 34529, "node_name": "timestyle", "Dec": "the time formatter style to obtain , not null"}{"idx": 34534, "node_name": "locale", "Dec": "the new locale , not null"}{"idx": 34536, "node_name": "locale", "Dec": "the locale , not null"}{"idx": 34539, "node_name": "decimalstyle", "Dec": "the new decimalstyle , not null"}{"idx": 34542, "node_name": "chrono", "Dec": "the new chronology , null if no override"}{"idx": 34545, "node_name": "zone", "Dec": "the new override zone , null if no override"}{"idx": 34548, "node_name": "resolverstyle", "Dec": "the new resolver style , not null"}{"idx": 34551, "node_name": "resolverfields", "Dec": "the new set of resolver fields , null if no fields"}{"idx": 34553, "node_name": "resolverfields", "Dec": "the new set of resolver fields , null if no fields"}{"idx": 34555, "node_name": "temporal", "Dec": "the temporal object to format , not null"}{"idx": 34557, "node_name": "temporal", "Dec": "the temporal object to format , not null"}{"idx": 34558, "node_name": "appendable", "Dec": "the appendable to format to , not null"}{"idx": 34560, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 34562, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 34563, "node_name": "position", "Dec": "the position to parse from , updated with length parsed and the index of any error , not null"}{"idx": 34565, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 34566, "node_name": "query", "Dec": "the query defining the type to parse to , not null"}{"idx": 34568, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 34569, "node_name": "queries", "Dec": "the queries defining the types to attempt to parse to , must implement temporalaccessor , not null"}{"idx": 34571, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 34572, "node_name": "position", "Dec": "the position to parse from , updated with length parsed and the index of any error , not null"}{"idx": 34575, "node_name": "parsequery", "Dec": "the query defining the type to parse to , not null"}{"idx": 34580, "node_name": "datestyle", "Dec": "the formatstyle for the date , null for time-only pattern"}{"idx": 34581, "node_name": "timestyle", "Dec": "the formatstyle for the time , null for date-only pattern"}{"idx": 34582, "node_name": "chrono", "Dec": "the chronology , non-null"}{"idx": 34583, "node_name": "locale", "Dec": "the locale , non-null"}{"idx": 34589, "node_name": "field", "Dec": "the field to default the value of , not null"}{"idx": 34590, "node_name": "value", "Dec": "the value to default the field to"}{"idx": 34592, "node_name": "field", "Dec": "the field to append , not null"}{"idx": 34594, "node_name": "field", "Dec": "the field to append , not null"}{"idx": 34595, "node_name": "width", "Dec": "the width of the printed field , from 1 to 19"}{"idx": 34597, "node_name": "field", "Dec": "the field to append , not null"}{"idx": 34598, "node_name": "minwidth", "Dec": "the minimum field width of the printed field , from 1 to 19"}{"idx": 34599, "node_name": "maxwidth", "Dec": "the maximum field width of the printed field , from 1 to 19"}{"idx": 34600, "node_name": "signstyle", "Dec": "the positive / negative output style , not null"}{"idx": 34602, "node_name": "field", "Dec": "the field to append , not null"}{"idx": 34603, "node_name": "width", "Dec": "the field width of the printed and parsed field , from 1 to 10"}{"idx": 34604, "node_name": "maxwidth", "Dec": "the maximum field width of the printed field , from 1 to 10"}{"idx": 34605, "node_name": "basevalue", "Dec": "the base value of the range of valid values"}{"idx": 34607, "node_name": "field", "Dec": "the field to append , not null"}{"idx": 34608, "node_name": "width", "Dec": "the field width of the printed and parsed field , from 1 to 10"}{"idx": 34609, "node_name": "maxwidth", "Dec": "the maximum field width of the printed field , from 1 to 10"}{"idx": 34610, "node_name": "basedate", "Dec": "the base date used to calculate the base value for the range of valid values in the parsed chronology , not null"}{"idx": 34612, "node_name": "field", "Dec": "the field to append , not null"}{"idx": 34613, "node_name": "minwidth", "Dec": "the minimum width of the field excluding the decimal point , from 0 to 9"}{"idx": 34614, "node_name": "maxwidth", "Dec": "the maximum width of the field excluding the decimal point , from 1 to 9"}{"idx": 34615, "node_name": "decimalpoint", "Dec": "whether to output the localized decimal point symbol"}{"idx": 34617, "node_name": "field", "Dec": "the field to append , not null"}{"idx": 34619, "node_name": "field", "Dec": "the field to append , not null"}{"idx": 34620, "node_name": "textstyle", "Dec": "the text style to use , not null"}{"idx": 34622, "node_name": "field", "Dec": "the field to append , not null"}{"idx": 34623, "node_name": "textlookup", "Dec": "the map from the value to the text"}{"idx": 34626, "node_name": "fractionaldigits", "Dec": "the number of fractional second digits to format with , from 0 to 9 , or -1 to use as many digits as necessary"}{"idx": 34629, "node_name": "pattern", "Dec": "the pattern to use , not null"}{"idx": 34630, "node_name": "nooffsettext", "Dec": "the text to use when the offset is zero , not null"}{"idx": 34632, "node_name": "style", "Dec": "the format style to use , not null"}{"idx": 34637, "node_name": "textstyle", "Dec": "the text style to use , not null"}{"idx": 34639, "node_name": "textstyle", "Dec": "the text style to use , not null"}{"idx": 34640, "node_name": "preferredzones", "Dec": "the set of preferred zone ids , not null"}{"idx": 34642, "node_name": "textstyle", "Dec": "the text style to use , not null"}{"idx": 34644, "node_name": "textstyle", "Dec": "the text style to use , not null"}{"idx": 34645, "node_name": "preferredzones", "Dec": "the set of preferred zone ids , not null"}{"idx": 34648, "node_name": "textstyle", "Dec": "the text style to use , not null"}{"idx": 34650, "node_name": "datestyle", "Dec": "the date style to use , null means no date required"}{"idx": 34651, "node_name": "timestyle", "Dec": "the time style to use , null means no time required"}{"idx": 34653, "node_name": "literal", "Dec": "the literal to append , not null"}{"idx": 34655, "node_name": "literal", "Dec": "the literal to append , not null"}{"idx": 34657, "node_name": "formatter", "Dec": "the formatter to add , not null"}{"idx": 34659, "node_name": "formatter", "Dec": "the formatter to add , not null"}{"idx": 34661, "node_name": "pattern", "Dec": "the pattern to add , not null"}{"idx": 34663, "node_name": "padwidth", "Dec": "the pad width , 1 or greater"}{"idx": 34665, "node_name": "padwidth", "Dec": "the pad width , 1 or greater"}{"idx": 34666, "node_name": "padchar", "Dec": "the pad character"}{"idx": 34671, "node_name": "locale", "Dec": "the locale to use for formatting , not null"}{"idx": 34674, "node_name": "message", "Dec": "the message to use for this exception , may be null"}{"idx": 34675, "node_name": "parseddata", "Dec": "the parsed text , should not be null"}{"idx": 34676, "node_name": "errorindex", "Dec": "the index in the parsed string that was invalid , should be a valid index"}{"idx": 34678, "node_name": "message", "Dec": "the message to use for this exception , may be null"}{"idx": 34679, "node_name": "parseddata", "Dec": "the parsed text , should not be null"}{"idx": 34680, "node_name": "errorindex", "Dec": "the index in the parsed string that was invalid , should be a valid index"}{"idx": 34681, "node_name": "cause", "Dec": "the cause exception , may be null"}{"idx": 34689, "node_name": "locale", "Dec": "the locale , not null"}{"idx": 34692, "node_name": "zerodigit", "Dec": "the character for zero"}{"idx": 34695, "node_name": "positivesign", "Dec": "the character for the positive sign"}{"idx": 34698, "node_name": "negativesign", "Dec": "the character for the negative sign"}{"idx": 34701, "node_name": "decimalseparator", "Dec": "the character for the decimal point"}{"idx": 34703, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 34709, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 34713, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 34717, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 34721, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 34731, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 34733, "node_name": "epochsecond", "Dec": "the number of seconds from 1970-01-01t00 : 00:00 z"}{"idx": 34735, "node_name": "epochsecond", "Dec": "the number of seconds from 1970-01-01t00 : 00:00 z"}{"idx": 34736, "node_name": "nanoadjustment", "Dec": "the nanosecond adjustment to the number of seconds , positive or negative"}{"idx": 34738, "node_name": "epochmilli", "Dec": "the number of milliseconds from 1970-01-01t00 : 00:00 z"}{"idx": 34740, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34742, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 34744, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 34746, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 34748, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 34750, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 34752, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 34756, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 34758, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 34759, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 34761, "node_name": "unit", "Dec": "the unit to truncate to , not null"}{"idx": 34763, "node_name": "amounttoadd", "Dec": "the amount to add , not null"}{"idx": 34765, "node_name": "amounttoadd", "Dec": "the amount of the unit to add to the result , may be negative"}{"idx": 34766, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 34768, "node_name": "secondstoadd", "Dec": "the seconds to add , positive or negative"}{"idx": 34770, "node_name": "millistoadd", "Dec": "the milliseconds to add , positive or negative"}{"idx": 34772, "node_name": "nanostoadd", "Dec": "the nanoseconds to add , positive or negative"}{"idx": 34774, "node_name": "amounttosubtract", "Dec": "the amount to subtract , not null"}{"idx": 34776, "node_name": "amounttosubtract", "Dec": "the amount of the unit to subtract from the result , may be negative"}{"idx": 34777, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 34779, "node_name": "secondstosubtract", "Dec": "the seconds to subtract , positive or negative"}{"idx": 34781, "node_name": "millistosubtract", "Dec": "the milliseconds to subtract , positive or negative"}{"idx": 34783, "node_name": "nanostosubtract", "Dec": "the nanoseconds to subtract , positive or negative"}{"idx": 34785, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 34787, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 34789, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to an instant , not null"}{"idx": 34790, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 34792, "node_name": "offset", "Dec": "the offset to combine with , not null"}{"idx": 34794, "node_name": "zone", "Dec": "the zone to combine with , not null"}{"idx": 34797, "node_name": "otherinstant", "Dec": "the other instant to compare to , not null"}{"idx": 34799, "node_name": "otherinstant", "Dec": "the other instant to compare to , not null"}{"idx": 34801, "node_name": "otherinstant", "Dec": "the other instant to compare to , not null"}{"idx": 34803, "node_name": "otherinstant", "Dec": "the other instant , null returns false"}{"idx": 34812, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 34814, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 34816, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 34817, "node_name": "month", "Dec": "the month-of-year to represent , not null"}{"idx": 34818, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 34820, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 34821, "node_name": "month", "Dec": "the month-of-year to represent , from 1 ( january ) to 12 ( december )"}{"idx": 34822, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 34824, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 34825, "node_name": "dayofyear", "Dec": "the day-of-year to represent , from 1 to 366"}{"idx": 34827, "node_name": "instant", "Dec": "the instant to create the date from , not null"}{"idx": 34828, "node_name": "zone", "Dec": "the time-zone , which may be an offset , not null"}{"idx": 34830, "node_name": "epochday", "Dec": "the epoch day to convert , based on the epoch 1970-01-01"}{"idx": 34832, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 34834, "node_name": "text", "Dec": "the text to parse such as \" 2007-12-03 \" , not null"}{"idx": 34836, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 34837, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 34839, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 34841, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 34843, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 34845, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 34847, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 34860, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 34862, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 34863, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 34865, "node_name": "year", "Dec": "the year to set in the result , from min_year to max_year"}{"idx": 34867, "node_name": "month", "Dec": "the month-of-year to set in the result , from 1 ( january ) to 12 ( december )"}{"idx": 34869, "node_name": "dayofmonth", "Dec": "the day-of-month to set in the result , from 1 to 28-31"}{"idx": 34871, "node_name": "dayofyear", "Dec": "the day-of-year to set in the result , from 1 to 365-366"}{"idx": 34873, "node_name": "amounttoadd", "Dec": "the amount to add , not null"}{"idx": 34875, "node_name": "amounttoadd", "Dec": "the amount of the unit to add to the result , may be negative"}{"idx": 34876, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 34878, "node_name": "yearstoadd", "Dec": "the years to add , may be negative"}{"idx": 34880, "node_name": "monthstoadd", "Dec": "the months to add , may be negative"}{"idx": 34882, "node_name": "weekstoadd", "Dec": "the weeks to add , may be negative"}{"idx": 34884, "node_name": "daystoadd", "Dec": "the days to add , may be negative"}{"idx": 34886, "node_name": "amounttosubtract", "Dec": "the amount to subtract , not null"}{"idx": 34888, "node_name": "amounttosubtract", "Dec": "the amount of the unit to subtract from the result , may be negative"}{"idx": 34889, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 34891, "node_name": "yearstosubtract", "Dec": "the years to subtract , may be negative"}{"idx": 34893, "node_name": "monthstosubtract", "Dec": "the months to subtract , may be negative"}{"idx": 34895, "node_name": "weekstosubtract", "Dec": "the weeks to subtract , may be negative"}{"idx": 34897, "node_name": "daystosubtract", "Dec": "the days to subtract , may be negative"}{"idx": 34899, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 34901, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 34903, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to a localdate , not null"}{"idx": 34904, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 34906, "node_name": "enddateexclusive", "Dec": "the end date , exclusive , which may be in any chronology , not null"}{"idx": 34908, "node_name": "endexclusive", "Dec": "the end date , exclusive , not null"}{"idx": 34910, "node_name": "endexclusive", "Dec": "the end date , exclusive , not null"}{"idx": 34911, "node_name": "step", "Dec": "the non-zero , non-negative period which represents the step ."}{"idx": 34913, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 34915, "node_name": "time", "Dec": "the time to combine with , not null"}{"idx": 34917, "node_name": "hour", "Dec": "the hour-of-day to use , from 0 to 23"}{"idx": 34918, "node_name": "minute", "Dec": "the minute-of-hour to use , from 0 to 59"}{"idx": 34920, "node_name": "hour", "Dec": "the hour-of-day to use , from 0 to 23"}{"idx": 34921, "node_name": "minute", "Dec": "the minute-of-hour to use , from 0 to 59"}{"idx": 34922, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 34924, "node_name": "hour", "Dec": "the hour-of-day to use , from 0 to 23"}{"idx": 34925, "node_name": "minute", "Dec": "the minute-of-hour to use , from 0 to 59"}{"idx": 34926, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 34927, "node_name": "nanoofsecond", "Dec": "the nano-of-second to represent , from 0 to 999,999,999"}{"idx": 34929, "node_name": "time", "Dec": "the time to combine with , not null"}{"idx": 34932, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 34934, "node_name": "time", "Dec": "the local time , not null"}{"idx": 34935, "node_name": "offset", "Dec": "the zone offset , not null"}{"idx": 34937, "node_name": "other", "Dec": "the other date to compare to , not null"}{"idx": 34939, "node_name": "other", "Dec": "the other date to compare to , not null"}{"idx": 34941, "node_name": "other", "Dec": "the other date to compare to , not null"}{"idx": 34943, "node_name": "other", "Dec": "the other date to compare to , not null"}{"idx": 34945, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 34953, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 34955, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 34957, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 34958, "node_name": "month", "Dec": "the month-of-year to represent , not null"}{"idx": 34959, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 34960, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 34961, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 34963, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 34964, "node_name": "month", "Dec": "the month-of-year to represent , not null"}{"idx": 34965, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 34966, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 34967, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 34968, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 34970, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 34971, "node_name": "month", "Dec": "the month-of-year to represent , not null"}{"idx": 34972, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 34973, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 34974, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 34975, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 34976, "node_name": "nanoofsecond", "Dec": "the nano-of-second to represent , from 0 to 999,999,999"}{"idx": 34978, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 34979, "node_name": "month", "Dec": "the month-of-year to represent , from 1 ( january ) to 12 ( december )"}{"idx": 34980, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 34981, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 34982, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 34984, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 34985, "node_name": "month", "Dec": "the month-of-year to represent , from 1 ( january ) to 12 ( december )"}{"idx": 34986, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 34987, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 34988, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 34989, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 34991, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 34992, "node_name": "month", "Dec": "the month-of-year to represent , from 1 ( january ) to 12 ( december )"}{"idx": 34993, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 34994, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 34995, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 34996, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 34997, "node_name": "nanoofsecond", "Dec": "the nano-of-second to represent , from 0 to 999,999,999"}{"idx": 34999, "node_name": "date", "Dec": "the local date , not null"}{"idx": 35000, "node_name": "time", "Dec": "the local time , not null"}{"idx": 35002, "node_name": "instant", "Dec": "the instant to create the date-time from , not null"}{"idx": 35003, "node_name": "zone", "Dec": "the time-zone , which may be an offset , not null"}{"idx": 35005, "node_name": "epochsecond", "Dec": "the number of seconds from the epoch of 1970-01-01t00 : 00:00 z"}{"idx": 35006, "node_name": "nanoofsecond", "Dec": "the nanosecond within the second , from 0 to 999,999,999"}{"idx": 35007, "node_name": "offset", "Dec": "the zone offset , not null"}{"idx": 35009, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 35011, "node_name": "text", "Dec": "the text to parse such as \" 2007-12-03t10 : 15:30 \" , not null"}{"idx": 35013, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 35014, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35016, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 35018, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 35020, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 35022, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35024, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35038, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 35040, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 35041, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 35043, "node_name": "year", "Dec": "the year to set in the result , from min_year to max_year"}{"idx": 35045, "node_name": "month", "Dec": "the month-of-year to set in the result , from 1 ( january ) to 12 ( december )"}{"idx": 35047, "node_name": "dayofmonth", "Dec": "the day-of-month to set in the result , from 1 to 28-31"}{"idx": 35049, "node_name": "dayofyear", "Dec": "the day-of-year to set in the result , from 1 to 365-366"}{"idx": 35051, "node_name": "hour", "Dec": "the hour-of-day to set in the result , from 0 to 23"}{"idx": 35053, "node_name": "minute", "Dec": "the minute-of-hour to set in the result , from 0 to 59"}{"idx": 35055, "node_name": "second", "Dec": "the second-of-minute to set in the result , from 0 to 59"}{"idx": 35057, "node_name": "nanoofsecond", "Dec": "the nano-of-second to set in the result , from 0 to 999,999,999"}{"idx": 35059, "node_name": "unit", "Dec": "the unit to truncate to , not null"}{"idx": 35061, "node_name": "amounttoadd", "Dec": "the amount to add , not null"}{"idx": 35063, "node_name": "amounttoadd", "Dec": "the amount of the unit to add to the result , may be negative"}{"idx": 35064, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 35066, "node_name": "years", "Dec": "the years to add , may be negative"}{"idx": 35068, "node_name": "months", "Dec": "the months to add , may be negative"}{"idx": 35070, "node_name": "weeks", "Dec": "the weeks to add , may be negative"}{"idx": 35072, "node_name": "days", "Dec": "the days to add , may be negative"}{"idx": 35074, "node_name": "hours", "Dec": "the hours to add , may be negative"}{"idx": 35076, "node_name": "minutes", "Dec": "the minutes to add , may be negative"}{"idx": 35078, "node_name": "seconds", "Dec": "the seconds to add , may be negative"}{"idx": 35080, "node_name": "nanos", "Dec": "the nanos to add , may be negative"}{"idx": 35082, "node_name": "amounttosubtract", "Dec": "the amount to subtract , not null"}{"idx": 35084, "node_name": "amounttosubtract", "Dec": "the amount of the unit to subtract from the result , may be negative"}{"idx": 35085, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 35087, "node_name": "years", "Dec": "the years to subtract , may be negative"}{"idx": 35089, "node_name": "months", "Dec": "the months to subtract , may be negative"}{"idx": 35091, "node_name": "weeks", "Dec": "the weeks to subtract , may be negative"}{"idx": 35093, "node_name": "days", "Dec": "the days to subtract , may be negative"}{"idx": 35095, "node_name": "hours", "Dec": "the hours to subtract , may be negative"}{"idx": 35097, "node_name": "minutes", "Dec": "the minutes to subtract , may be negative"}{"idx": 35099, "node_name": "seconds", "Dec": "the seconds to subtract , may be negative"}{"idx": 35101, "node_name": "nanos", "Dec": "the nanos to subtract , may be negative"}{"idx": 35103, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 35105, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 35107, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to a localdatetime , not null"}{"idx": 35108, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 35110, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35112, "node_name": "offset", "Dec": "the offset to combine with , not null"}{"idx": 35114, "node_name": "zone", "Dec": "the time-zone to use , not null"}{"idx": 35116, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 35118, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 35120, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 35122, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 35124, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 35134, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 35136, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 35138, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 35139, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 35141, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 35142, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 35143, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 35145, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 35146, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 35147, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 35148, "node_name": "nanoofsecond", "Dec": "the nano-of-second to represent , from 0 to 999,999,999"}{"idx": 35150, "node_name": "instant", "Dec": "the instant to create the time from , not null"}{"idx": 35151, "node_name": "zone", "Dec": "the time-zone , which may be an offset , not null"}{"idx": 35153, "node_name": "secondofday", "Dec": "the second-of-day , from 0 to 24 * 60 * 60"}{"idx": 35155, "node_name": "nanoofday", "Dec": "the nano of day , from 0 to 24 * 60 * 60 * 1,000,000,000"}{"idx": 35157, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 35159, "node_name": "text", "Dec": "the text to parse such as \" 10:15 : 30 \" , not null"}{"idx": 35161, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 35162, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35164, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 35166, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 35168, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 35170, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35172, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35178, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 35180, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 35181, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 35183, "node_name": "hour", "Dec": "the hour-of-day to set in the result , from 0 to 23"}{"idx": 35185, "node_name": "minute", "Dec": "the minute-of-hour to set in the result , from 0 to 59"}{"idx": 35187, "node_name": "second", "Dec": "the second-of-minute to set in the result , from 0 to 59"}{"idx": 35189, "node_name": "nanoofsecond", "Dec": "the nano-of-second to set in the result , from 0 to 999,999,999"}{"idx": 35191, "node_name": "unit", "Dec": "the unit to truncate to , not null"}{"idx": 35193, "node_name": "amounttoadd", "Dec": "the amount to add , not null"}{"idx": 35195, "node_name": "amounttoadd", "Dec": "the amount of the unit to add to the result , may be negative"}{"idx": 35196, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 35198, "node_name": "hourstoadd", "Dec": "the hours to add , may be negative"}{"idx": 35200, "node_name": "minutestoadd", "Dec": "the minutes to add , may be negative"}{"idx": 35202, "node_name": "secondstoadd", "Dec": "the seconds to add , may be negative"}{"idx": 35204, "node_name": "nanostoadd", "Dec": "the nanos to add , may be negative"}{"idx": 35206, "node_name": "amounttosubtract", "Dec": "the amount to subtract , not null"}{"idx": 35208, "node_name": "amounttosubtract", "Dec": "the amount of the unit to subtract from the result , may be negative"}{"idx": 35209, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 35211, "node_name": "hourstosubtract", "Dec": "the hours to subtract , may be negative"}{"idx": 35213, "node_name": "minutestosubtract", "Dec": "the minutes to subtract , may be negative"}{"idx": 35215, "node_name": "secondstosubtract", "Dec": "the seconds to subtract , may be negative"}{"idx": 35217, "node_name": "nanostosubtract", "Dec": "the nanos to subtract , may be negative"}{"idx": 35219, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 35221, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 35223, "node_name": "endexclusive", "Dec": "the end time , exclusive , which is converted to a localtime , not null"}{"idx": 35224, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 35226, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35228, "node_name": "date", "Dec": "the date to combine with , not null"}{"idx": 35230, "node_name": "offset", "Dec": "the offset to combine with , not null"}{"idx": 35234, "node_name": "date", "Dec": "the local date , not null"}{"idx": 35235, "node_name": "offset", "Dec": "the zone offset , not null"}{"idx": 35237, "node_name": "other", "Dec": "the other time to compare to , not null"}{"idx": 35239, "node_name": "other", "Dec": "the other time to compare to , not null"}{"idx": 35241, "node_name": "other", "Dec": "the other time to compare to , not null"}{"idx": 35243, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 35249, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 35251, "node_name": "month", "Dec": "the month-of-year to represent , from 1 ( january ) to 12 ( december )"}{"idx": 35253, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 35256, "node_name": "style", "Dec": "the length of the text required , not null"}{"idx": 35257, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 35259, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 35261, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 35263, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35265, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35267, "node_name": "months", "Dec": "the months to add , positive or negative"}{"idx": 35269, "node_name": "months", "Dec": "the months to subtract , positive or negative"}{"idx": 35271, "node_name": "leapyear", "Dec": "true if the length is required for a leap year"}{"idx": 35275, "node_name": "leapyear", "Dec": "true if the length is required for a leap year"}{"idx": 35278, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 35280, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 35284, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 35286, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 35288, "node_name": "month", "Dec": "the month-of-year to represent , not null"}{"idx": 35289, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 35291, "node_name": "month", "Dec": "the month-of-year to represent , from 1 ( january ) to 12 ( december )"}{"idx": 35292, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 35294, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 35296, "node_name": "text", "Dec": "the text to parse such as \" -- 12-03 \" , not null"}{"idx": 35298, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 35299, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35301, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 35303, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 35305, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35307, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35312, "node_name": "year", "Dec": "the year to validate"}{"idx": 35314, "node_name": "month", "Dec": "the month-of-year to set in the returned month-day , from 1 ( january ) to 12 ( december )"}{"idx": 35316, "node_name": "month", "Dec": "the month-of-year to set in the returned month-day , not null"}{"idx": 35318, "node_name": "dayofmonth", "Dec": "the day-of-month to set in the return month-day , from 1 to 31"}{"idx": 35320, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 35322, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 35324, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35326, "node_name": "year", "Dec": "the year to use , from min_year to max_year"}{"idx": 35328, "node_name": "other", "Dec": "the other month-day to compare to , not null"}{"idx": 35330, "node_name": "other", "Dec": "the other month-day to compare to , not null"}{"idx": 35332, "node_name": "other", "Dec": "the other month-day to compare to , not null"}{"idx": 35334, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 35343, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 35345, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 35347, "node_name": "date", "Dec": "the local date , not null"}{"idx": 35348, "node_name": "time", "Dec": "the local time , not null"}{"idx": 35349, "node_name": "offset", "Dec": "the zone offset , not null"}{"idx": 35351, "node_name": "datetime", "Dec": "the local date-time , not null"}{"idx": 35352, "node_name": "offset", "Dec": "the zone offset , not null"}{"idx": 35354, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 35355, "node_name": "month", "Dec": "the month-of-year to represent , from 1 ( january ) to 12 ( december )"}{"idx": 35356, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 35357, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 35358, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 35359, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 35360, "node_name": "nanoofsecond", "Dec": "the nano-of-second to represent , from 0 to 999,999,999"}{"idx": 35361, "node_name": "offset", "Dec": "the zone offset , not null"}{"idx": 35363, "node_name": "instant", "Dec": "the instant to create the date-time from , not null"}{"idx": 35364, "node_name": "zone", "Dec": "the time-zone , which may be an offset , not null"}{"idx": 35366, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 35368, "node_name": "text", "Dec": "the text to parse such as \" 2007-12-03t10 : 15:30 + 01:00 \" , not null"}{"idx": 35370, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 35371, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35373, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 35375, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 35377, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 35379, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35381, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35384, "node_name": "offset", "Dec": "the zone offset to change to , not null"}{"idx": 35386, "node_name": "offset", "Dec": "the zone offset to change to , not null"}{"idx": 35401, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 35403, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 35404, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 35406, "node_name": "year", "Dec": "the year to set in the result , from min_year to max_year"}{"idx": 35408, "node_name": "month", "Dec": "the month-of-year to set in the result , from 1 ( january ) to 12 ( december )"}{"idx": 35410, "node_name": "dayofmonth", "Dec": "the day-of-month to set in the result , from 1 to 28-31"}{"idx": 35412, "node_name": "dayofyear", "Dec": "the day-of-year to set in the result , from 1 to 365-366"}{"idx": 35414, "node_name": "hour", "Dec": "the hour-of-day to set in the result , from 0 to 23"}{"idx": 35416, "node_name": "minute", "Dec": "the minute-of-hour to set in the result , from 0 to 59"}{"idx": 35418, "node_name": "second", "Dec": "the second-of-minute to set in the result , from 0 to 59"}{"idx": 35420, "node_name": "nanoofsecond", "Dec": "the nano-of-second to set in the result , from 0 to 999,999,999"}{"idx": 35422, "node_name": "unit", "Dec": "the unit to truncate to , not null"}{"idx": 35424, "node_name": "amounttoadd", "Dec": "the amount to add , not null"}{"idx": 35426, "node_name": "amounttoadd", "Dec": "the amount of the unit to add to the result , may be negative"}{"idx": 35427, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 35429, "node_name": "years", "Dec": "the years to add , may be negative"}{"idx": 35431, "node_name": "months", "Dec": "the months to add , may be negative"}{"idx": 35433, "node_name": "weeks", "Dec": "the weeks to add , may be negative"}{"idx": 35435, "node_name": "days", "Dec": "the days to add , may be negative"}{"idx": 35437, "node_name": "hours", "Dec": "the hours to add , may be negative"}{"idx": 35439, "node_name": "minutes", "Dec": "the minutes to add , may be negative"}{"idx": 35441, "node_name": "seconds", "Dec": "the seconds to add , may be negative"}{"idx": 35443, "node_name": "nanos", "Dec": "the nanos to add , may be negative"}{"idx": 35445, "node_name": "amounttosubtract", "Dec": "the amount to subtract , not null"}{"idx": 35447, "node_name": "amounttosubtract", "Dec": "the amount of the unit to subtract from the result , may be negative"}{"idx": 35448, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 35450, "node_name": "years", "Dec": "the years to subtract , may be negative"}{"idx": 35452, "node_name": "months", "Dec": "the months to subtract , may be negative"}{"idx": 35454, "node_name": "weeks", "Dec": "the weeks to subtract , may be negative"}{"idx": 35456, "node_name": "days", "Dec": "the days to subtract , may be negative"}{"idx": 35458, "node_name": "hours", "Dec": "the hours to subtract , may be negative"}{"idx": 35460, "node_name": "minutes", "Dec": "the minutes to subtract , may be negative"}{"idx": 35462, "node_name": "seconds", "Dec": "the seconds to subtract , may be negative"}{"idx": 35464, "node_name": "nanos", "Dec": "the nanos to subtract , may be negative"}{"idx": 35466, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 35468, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 35470, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to an offsetdatetime , not null"}{"idx": 35471, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 35473, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35475, "node_name": "zone", "Dec": "the time-zone to use , not null"}{"idx": 35477, "node_name": "zone", "Dec": "the time-zone to use , not null"}{"idx": 35483, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 35485, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 35487, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 35489, "node_name": "other", "Dec": "the other date-time to compare to , not null"}{"idx": 35491, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 35499, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 35501, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 35503, "node_name": "time", "Dec": "the local time , not null"}{"idx": 35504, "node_name": "offset", "Dec": "the zone offset , not null"}{"idx": 35506, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 35507, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 35508, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 35509, "node_name": "nanoofsecond", "Dec": "the nano-of-second to represent , from 0 to 999,999,999"}{"idx": 35510, "node_name": "offset", "Dec": "the zone offset , not null"}{"idx": 35512, "node_name": "instant", "Dec": "the instant to create the time from , not null"}{"idx": 35513, "node_name": "zone", "Dec": "the time-zone , which may be an offset , not null"}{"idx": 35515, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 35517, "node_name": "text", "Dec": "the text to parse such as \" 10:15 : 30+ 01:00 \" , not null"}{"idx": 35519, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 35520, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35522, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 35524, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 35526, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 35528, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35530, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35533, "node_name": "offset", "Dec": "the zone offset to change to , not null"}{"idx": 35535, "node_name": "offset", "Dec": "the zone offset to change to , not null"}{"idx": 35542, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 35544, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 35545, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 35547, "node_name": "hour", "Dec": "the hour-of-day to set in the result , from 0 to 23"}{"idx": 35549, "node_name": "minute", "Dec": "the minute-of-hour to set in the result , from 0 to 59"}{"idx": 35551, "node_name": "second", "Dec": "the second-of-minute to set in the result , from 0 to 59"}{"idx": 35553, "node_name": "nanoofsecond", "Dec": "the nano-of-second to set in the result , from 0 to 999,999,999"}{"idx": 35555, "node_name": "unit", "Dec": "the unit to truncate to , not null"}{"idx": 35557, "node_name": "amounttoadd", "Dec": "the amount to add , not null"}{"idx": 35559, "node_name": "amounttoadd", "Dec": "the amount of the unit to add to the result , may be negative"}{"idx": 35560, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 35562, "node_name": "hours", "Dec": "the hours to add , may be negative"}{"idx": 35564, "node_name": "minutes", "Dec": "the minutes to add , may be negative"}{"idx": 35566, "node_name": "seconds", "Dec": "the seconds to add , may be negative"}{"idx": 35568, "node_name": "nanos", "Dec": "the nanos to add , may be negative"}{"idx": 35570, "node_name": "amounttosubtract", "Dec": "the amount to subtract , not null"}{"idx": 35572, "node_name": "amounttosubtract", "Dec": "the amount of the unit to subtract from the result , may be negative"}{"idx": 35573, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 35575, "node_name": "hours", "Dec": "the hours to subtract , may be negative"}{"idx": 35577, "node_name": "minutes", "Dec": "the minutes to subtract , may be negative"}{"idx": 35579, "node_name": "seconds", "Dec": "the seconds to subtract , may be negative"}{"idx": 35581, "node_name": "nanos", "Dec": "the nanos to subtract , may be negative"}{"idx": 35583, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 35585, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 35587, "node_name": "endexclusive", "Dec": "the end time , exclusive , which is converted to an offsettime , not null"}{"idx": 35588, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 35590, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35592, "node_name": "date", "Dec": "the date to combine with , not null"}{"idx": 35594, "node_name": "date", "Dec": "the localdate , not null"}{"idx": 35596, "node_name": "other", "Dec": "the other time to compare to , not null"}{"idx": 35598, "node_name": "other", "Dec": "the other time to compare to , not null"}{"idx": 35600, "node_name": "other", "Dec": "the other time to compare to , not null"}{"idx": 35602, "node_name": "other", "Dec": "the other time to compare to , not null"}{"idx": 35604, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 35610, "node_name": "years", "Dec": "the number of years , positive or negative"}{"idx": 35612, "node_name": "months", "Dec": "the number of months , positive or negative"}{"idx": 35614, "node_name": "weeks", "Dec": "the number of weeks , positive or negative"}{"idx": 35616, "node_name": "days", "Dec": "the number of days , positive or negative"}{"idx": 35618, "node_name": "years", "Dec": "the amount of years , may be negative"}{"idx": 35619, "node_name": "months", "Dec": "the amount of months , may be negative"}{"idx": 35620, "node_name": "days", "Dec": "the amount of days , may be negative"}{"idx": 35622, "node_name": "amount", "Dec": "the temporal amount to convert , not null"}{"idx": 35624, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 35626, "node_name": "startdateinclusive", "Dec": "the start date , inclusive , not null"}{"idx": 35627, "node_name": "enddateexclusive", "Dec": "the end date , exclusive , not null"}{"idx": 35629, "node_name": "unit", "Dec": "the temporalunit for which to return the value"}{"idx": 35638, "node_name": "years", "Dec": "the years to represent , may be negative"}{"idx": 35640, "node_name": "months", "Dec": "the months to represent , may be negative"}{"idx": 35642, "node_name": "days", "Dec": "the days to represent , may be negative"}{"idx": 35644, "node_name": "amounttoadd", "Dec": "the amount to add , not null"}{"idx": 35646, "node_name": "yearstoadd", "Dec": "the years to add , positive or negative"}{"idx": 35648, "node_name": "monthstoadd", "Dec": "the months to add , positive or negative"}{"idx": 35650, "node_name": "daystoadd", "Dec": "the days to add , positive or negative"}{"idx": 35652, "node_name": "amounttosubtract", "Dec": "the amount to subtract , not null"}{"idx": 35654, "node_name": "yearstosubtract", "Dec": "the years to subtract , positive or negative"}{"idx": 35656, "node_name": "monthstosubtract", "Dec": "the years to subtract , positive or negative"}{"idx": 35658, "node_name": "daystosubtract", "Dec": "the months to subtract , positive or negative"}{"idx": 35660, "node_name": "scalar", "Dec": "the scalar to multiply by , not null"}{"idx": 35665, "node_name": "temporal", "Dec": "the temporal object to adjust , not null"}{"idx": 35667, "node_name": "temporal", "Dec": "the temporal object to adjust , not null"}{"idx": 35669, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 35675, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 35680, "node_name": "value", "Dec": "the value to check"}{"idx": 35682, "node_name": "value", "Dec": "the value to check"}{"idx": 35686, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 35704, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 35706, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 35708, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 35709, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 35711, "node_name": "amount", "Dec": "the amount to add , not null"}{"idx": 35713, "node_name": "amounttoadd", "Dec": "the amount of the specified unit to add , may be negative"}{"idx": 35714, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 35716, "node_name": "amount", "Dec": "the amount to subtract , not null"}{"idx": 35718, "node_name": "amounttosubtract", "Dec": "the amount of the specified unit to subtract , may be negative"}{"idx": 35719, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 35721, "node_name": "endexclusive", "Dec": "the end temporal , exclusive , converted to be of the same type as this object , not null"}{"idx": 35722, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 35725, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 35727, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 35729, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35731, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35733, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 35736, "node_name": "temporal", "Dec": "the temporal object to adjust , not null"}{"idx": 35739, "node_name": "datebasedadjuster", "Dec": "the date-based adjuster , not null"}{"idx": 35747, "node_name": "dayofweek", "Dec": "the day-of-week , not null"}{"idx": 35749, "node_name": "dayofweek", "Dec": "the day-of-week , not null"}{"idx": 35751, "node_name": "ordinal", "Dec": "the week within the month , unbounded but typically from -5 to 5"}{"idx": 35752, "node_name": "dayofweek", "Dec": "the day-of-week , not null"}{"idx": 35754, "node_name": "dayofweek", "Dec": "the day-of-week to move the date to , not null"}{"idx": 35756, "node_name": "dayofweek", "Dec": "the day-of-week to check for or move the date to , not null"}{"idx": 35758, "node_name": "dayofweek", "Dec": "the day-of-week to move the date to , not null"}{"idx": 35760, "node_name": "dayofweek", "Dec": "the day-of-week to check for or move the date to , not null"}{"idx": 35763, "node_name": "unit", "Dec": "the temporalunit for which to return the value"}{"idx": 35766, "node_name": "temporal", "Dec": "the temporal object to add the amount to , not null"}{"idx": 35768, "node_name": "temporal", "Dec": "the temporal object to subtract the amount from , not null"}{"idx": 35771, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 35778, "node_name": "temporal", "Dec": "the temporal object to query , not null"}{"idx": 35780, "node_name": "temporal", "Dec": "the temporal object used to refine the result , not null"}{"idx": 35782, "node_name": "temporal", "Dec": "the temporal object to query , not null"}{"idx": 35784, "node_name": "temporal", "Dec": "the temporal object to adjust , not null"}{"idx": 35785, "node_name": "newvalue", "Dec": "the new value of the field"}{"idx": 35787, "node_name": "fieldvalues", "Dec": "the map of fields to values , which can be updated , not null"}{"idx": 35788, "node_name": "partialtemporal", "Dec": "the partially complete temporal to query for zone and chronology ; querying for other things is undefined and not recommended , not null"}{"idx": 35789, "node_name": "resolverstyle", "Dec": "the requested type of resolve , not null"}{"idx": 35801, "node_name": "temporal", "Dec": "the temporal object to query , not null"}{"idx": 35808, "node_name": "temporal", "Dec": "the temporal object to check , not null"}{"idx": 35810, "node_name": "temporal", "Dec": "the temporal object to adjust , not null"}{"idx": 35811, "node_name": "amount", "Dec": "the amount of this unit to add , positive or negative"}{"idx": 35813, "node_name": "temporal1inclusive", "Dec": "the base temporal object , not null"}{"idx": 35814, "node_name": "temporal2exclusive", "Dec": "the other temporal object , exclusive , not null"}{"idx": 35818, "node_name": "message", "Dec": "the message to use for this exception , may be null"}{"idx": 35820, "node_name": "message", "Dec": "the message to use for this exception , may be null"}{"idx": 35821, "node_name": "cause", "Dec": "the cause of the exception , may be null"}{"idx": 35824, "node_name": "min", "Dec": "the minimum value"}{"idx": 35825, "node_name": "max", "Dec": "the maximum value"}{"idx": 35827, "node_name": "min", "Dec": "the minimum value"}{"idx": 35828, "node_name": "maxsmallest", "Dec": "the smallest maximum value"}{"idx": 35829, "node_name": "maxlargest", "Dec": "the largest maximum value"}{"idx": 35831, "node_name": "minsmallest", "Dec": "the smallest minimum value"}{"idx": 35832, "node_name": "minlargest", "Dec": "the largest minimum value"}{"idx": 35833, "node_name": "maxsmallest", "Dec": "the smallest maximum value"}{"idx": 35834, "node_name": "maxlargest", "Dec": "the largest maximum value"}{"idx": 35842, "node_name": "value", "Dec": "the value to check"}{"idx": 35844, "node_name": "value", "Dec": "the value to check"}{"idx": 35846, "node_name": "value", "Dec": "the value to check"}{"idx": 35847, "node_name": "field", "Dec": "the field being checked , may be null"}{"idx": 35849, "node_name": "value", "Dec": "the value to check"}{"idx": 35850, "node_name": "field", "Dec": "the field being checked , may be null"}{"idx": 35852, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 35860, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 35862, "node_name": "firstdayofweek", "Dec": "the first day of the week , not null"}{"idx": 35863, "node_name": "minimaldaysinfirstweek", "Dec": "the minimal number of days in the first week , from 1 to 7"}{"idx": 35872, "node_name": "object", "Dec": "the other rules to compare to , null returns false"}{"idx": 35880, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 35882, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 35884, "node_name": "isoyear", "Dec": "the iso proleptic year to represent , from min_value to max_value"}{"idx": 35886, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 35888, "node_name": "text", "Dec": "the text to parse such as \" 2007 \" , not null"}{"idx": 35890, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 35891, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35893, "node_name": "year", "Dec": "the year to check"}{"idx": 35896, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 35898, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 35900, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 35902, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35904, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35907, "node_name": "monthday", "Dec": "the month-day to validate , null returns false"}{"idx": 35910, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 35912, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 35913, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 35915, "node_name": "amounttoadd", "Dec": "the amount to add , not null"}{"idx": 35917, "node_name": "amounttoadd", "Dec": "the amount of the unit to add to the result , may be negative"}{"idx": 35918, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 35920, "node_name": "yearstoadd", "Dec": "the years to add , may be negative"}{"idx": 35922, "node_name": "amounttosubtract", "Dec": "the amount to subtract , not null"}{"idx": 35924, "node_name": "amounttosubtract", "Dec": "the amount of the unit to subtract from the result , may be negative"}{"idx": 35925, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 35927, "node_name": "yearstosubtract", "Dec": "the years to subtract , may be negative"}{"idx": 35929, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 35931, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 35933, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to a year , not null"}{"idx": 35934, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 35936, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35938, "node_name": "dayofyear", "Dec": "the day-of-year to use , from 1 to 365-366"}{"idx": 35940, "node_name": "month", "Dec": "the month-of-year to use , not null"}{"idx": 35942, "node_name": "month", "Dec": "the month-of-year to use , from 1 ( january ) to 12 ( december )"}{"idx": 35944, "node_name": "monthday", "Dec": "the month-day to use , not null"}{"idx": 35946, "node_name": "other", "Dec": "the other year to compare to , not null"}{"idx": 35948, "node_name": "other", "Dec": "the other year to compare to , not null"}{"idx": 35950, "node_name": "other", "Dec": "the other year to compare to , not null"}{"idx": 35952, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 35958, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 35960, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 35962, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 35963, "node_name": "month", "Dec": "the month-of-year to represent , not null"}{"idx": 35965, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 35966, "node_name": "month", "Dec": "the month-of-year to represent , from 1 ( january ) to 12 ( december )"}{"idx": 35968, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 35970, "node_name": "text", "Dec": "the text to parse such as \" 2007-12 \" , not null"}{"idx": 35972, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 35973, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 35975, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 35977, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 35979, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 35981, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35983, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 35989, "node_name": "dayofmonth", "Dec": "the day-of-month to validate , from 1 to 31 , invalid value returns false"}{"idx": 35993, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 35995, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 35996, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 35998, "node_name": "year", "Dec": "the year to set in the returned year-month , from min_year to max_year"}{"idx": 36000, "node_name": "month", "Dec": "the month-of-year to set in the returned year-month , from 1 ( january ) to 12 ( december )"}{"idx": 36002, "node_name": "amounttoadd", "Dec": "the amount to add , not null"}{"idx": 36004, "node_name": "amounttoadd", "Dec": "the amount of the unit to add to the result , may be negative"}{"idx": 36005, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 36007, "node_name": "yearstoadd", "Dec": "the years to add , may be negative"}{"idx": 36009, "node_name": "monthstoadd", "Dec": "the months to add , may be negative"}{"idx": 36011, "node_name": "amounttosubtract", "Dec": "the amount to subtract , not null"}{"idx": 36013, "node_name": "amounttosubtract", "Dec": "the amount of the unit to subtract from the result , may be negative"}{"idx": 36014, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 36016, "node_name": "yearstosubtract", "Dec": "the years to subtract , may be negative"}{"idx": 36018, "node_name": "monthstosubtract", "Dec": "the months to subtract , may be negative"}{"idx": 36020, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 36022, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 36024, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to a yearmonth , not null"}{"idx": 36025, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 36027, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 36029, "node_name": "dayofmonth", "Dec": "the day-of-month to use , from 1 to 31"}{"idx": 36032, "node_name": "other", "Dec": "the other year-month to compare to , not null"}{"idx": 36034, "node_name": "other", "Dec": "the other year-month to compare to , not null"}{"idx": 36036, "node_name": "other", "Dec": "the other year-month to compare to , not null"}{"idx": 36038, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 36043, "node_name": "transition", "Dec": "the transition date-time at the transition , which never actually occurs , expressed local to the before offset , not null"}{"idx": 36044, "node_name": "offsetbefore", "Dec": "the offset before the transition , not null"}{"idx": 36045, "node_name": "offsetafter", "Dec": "the offset at and after the transition , not null"}{"idx": 36056, "node_name": "offset", "Dec": "the offset to check , null returns false"}{"idx": 36058, "node_name": "transition", "Dec": "the transition to compare to , not null"}{"idx": 36060, "node_name": "other", "Dec": "the other object to compare to , null returns false"}{"idx": 36065, "node_name": "month", "Dec": "the month of the month-day of the first day of the cutover week , not null"}{"idx": 36066, "node_name": "dayofmonthindicator", "Dec": "the day of the month-day of the cutover week , positive if the week is that day or later , negative if the week is that day or earlier , counting from the last day of the month , from -28 to 31 excluding 0"}{"idx": 36067, "node_name": "dayofweek", "Dec": "the required day-of-week , null if the month-day should not be changed"}{"idx": 36068, "node_name": "time", "Dec": "the cutover time in the ' before ' offset , not null"}{"idx": 36069, "node_name": "timeendofday", "Dec": "whether the time is midnight at the end of day"}{"idx": 36070, "node_name": "timedefnition", "Dec": "how to interpret the cutover"}{"idx": 36071, "node_name": "standardoffset", "Dec": "the standard offset in force at the cutover , not null"}{"idx": 36072, "node_name": "offsetbefore", "Dec": "the offset before the cutover , not null"}{"idx": 36073, "node_name": "offsetafter", "Dec": "the offset after the cutover , not null"}{"idx": 36084, "node_name": "year", "Dec": "the year to create a transition for , not null"}{"idx": 36086, "node_name": "otherrule", "Dec": "the other object to compare to , null returns false"}{"idx": 36092, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 36094, "node_name": "datetime", "Dec": "the local date-time , not null"}{"idx": 36095, "node_name": "standardoffset", "Dec": "the standard offset , not null"}{"idx": 36096, "node_name": "walloffset", "Dec": "the wall offset , not null"}{"idx": 36099, "node_name": "basestandardoffset", "Dec": "the standard offset to use before legal rules were set , not null"}{"idx": 36100, "node_name": "basewalloffset", "Dec": "the wall offset to use before legal rules were set , not null"}{"idx": 36101, "node_name": "standardoffsettransitionlist", "Dec": "the list of changes to the standard offset , not null"}{"idx": 36102, "node_name": "transitionlist", "Dec": "the list of transitions , not null"}{"idx": 36103, "node_name": "lastrules", "Dec": "the recurring last rules , size 16 or less , not null"}{"idx": 36105, "node_name": "offset", "Dec": "the offset this fixed zone rules is based on , not null"}{"idx": 36108, "node_name": "instant", "Dec": "the instant to find the offset for , not null , but null may be ignored if the rules have a single offset for all instants"}{"idx": 36110, "node_name": "localdatetime", "Dec": "the local date-time to query , not null , but null may be ignored if the rules have a single offset for all instants"}{"idx": 36112, "node_name": "localdatetime", "Dec": "the local date-time to query for valid offsets , not null , but null may be ignored if the rules have a single offset for all instants"}{"idx": 36114, "node_name": "localdatetime", "Dec": "the local date-time to query for offset transition , not null , but null may be ignored if the rules have a single offset for all instants"}{"idx": 36116, "node_name": "instant", "Dec": "the instant to find the offset information for , not null , but null may be ignored if the rules have a single offset for all instants"}{"idx": 36118, "node_name": "instant", "Dec": "the instant to find the daylight savings for , not null , but null may be ignored if the rules have a single offset for all instants"}{"idx": 36120, "node_name": "instant", "Dec": "the instant to find the offset information for , not null , but null may be ignored if the rules have a single offset for all instants"}{"idx": 36122, "node_name": "localdatetime", "Dec": "the date-time to check , not null , but null may be ignored if the rules have a single offset for all instants"}{"idx": 36123, "node_name": "offset", "Dec": "the offset to check , null returns false"}{"idx": 36125, "node_name": "instant", "Dec": "the instant to get the next transition after , not null , but null may be ignored if the rules have a single offset for all instants"}{"idx": 36127, "node_name": "instant", "Dec": "the instant to get the previous transition after , not null , but null may be ignored if the rules have a single offset for all instants"}{"idx": 36131, "node_name": "otherrules", "Dec": "the other rules , null returns false"}{"idx": 36136, "node_name": "message", "Dec": "the message to use for this exception , may be null"}{"idx": 36138, "node_name": "message", "Dec": "the message to use for this exception , may be null"}{"idx": 36139, "node_name": "cause", "Dec": "the cause of the exception , may be null"}{"idx": 36144, "node_name": "zoneid", "Dec": "the zone id as defined by zoneid , not null"}{"idx": 36145, "node_name": "forcaching", "Dec": "whether the rules are being queried for caching , true if the returned rules will be cached by zoneid , false if they will be returned to the user without being cached in zoneid"}{"idx": 36147, "node_name": "zoneid", "Dec": "the zone id as defined by zoneid , not null"}{"idx": 36149, "node_name": "provider", "Dec": "the provider to register , not null"}{"idx": 36153, "node_name": "zoneid", "Dec": "the zone id as defined by zoneid , not null"}{"idx": 36154, "node_name": "forcaching", "Dec": "whether the rules are being queried for caching , true if the returned rules will be cached by zoneid , false if they will be returned to the user without being cached in zoneid"}{"idx": 36156, "node_name": "zoneid", "Dec": "the zone id as defined by zoneid , not null"}{"idx": 36161, "node_name": "zone", "Dec": "the zone id to use , not null"}{"idx": 36163, "node_name": "clock", "Dec": "the clock to use , not null"}{"idx": 36165, "node_name": "date", "Dec": "the local date , not null"}{"idx": 36166, "node_name": "time", "Dec": "the local time , not null"}{"idx": 36167, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 36169, "node_name": "localdatetime", "Dec": "the local date-time , not null"}{"idx": 36170, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 36172, "node_name": "year", "Dec": "the year to represent , from min_year to max_year"}{"idx": 36173, "node_name": "month", "Dec": "the month-of-year to represent , from 1 ( january ) to 12 ( december )"}{"idx": 36174, "node_name": "dayofmonth", "Dec": "the day-of-month to represent , from 1 to 31"}{"idx": 36175, "node_name": "hour", "Dec": "the hour-of-day to represent , from 0 to 23"}{"idx": 36176, "node_name": "minute", "Dec": "the minute-of-hour to represent , from 0 to 59"}{"idx": 36177, "node_name": "second", "Dec": "the second-of-minute to represent , from 0 to 59"}{"idx": 36178, "node_name": "nanoofsecond", "Dec": "the nano-of-second to represent , from 0 to 999,999,999"}{"idx": 36179, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 36181, "node_name": "localdatetime", "Dec": "the local date-time , not null"}{"idx": 36182, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 36183, "node_name": "preferredoffset", "Dec": "the zone offset , null if no preference"}{"idx": 36185, "node_name": "instant", "Dec": "the instant to create the date-time from , not null"}{"idx": 36186, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 36188, "node_name": "localdatetime", "Dec": "the local date-time , not null"}{"idx": 36189, "node_name": "offset", "Dec": "the zone offset , not null"}{"idx": 36190, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 36192, "node_name": "localdatetime", "Dec": "the local date-time , not null"}{"idx": 36193, "node_name": "offset", "Dec": "the zone offset , not null"}{"idx": 36194, "node_name": "zone", "Dec": "the time-zone , not null"}{"idx": 36196, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 36198, "node_name": "text", "Dec": "the text to parse such as \" 2007-12-03t10 : 15:30 + 01:00 [ europe / paris ]\" , not null"}{"idx": 36200, "node_name": "text", "Dec": "the text to parse , not null"}{"idx": 36201, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 36203, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 36205, "node_name": "unit", "Dec": "the unit to check , null returns false"}{"idx": 36207, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 36209, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 36211, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 36217, "node_name": "zone", "Dec": "the time-zone to change to , not null"}{"idx": 36219, "node_name": "zone", "Dec": "the time-zone to change to , not null"}{"idx": 36235, "node_name": "adjuster", "Dec": "the adjuster to use , not null"}{"idx": 36237, "node_name": "field", "Dec": "the field to set in the result , not null"}{"idx": 36238, "node_name": "newvalue", "Dec": "the new value of the field in the result"}{"idx": 36240, "node_name": "year", "Dec": "the year to set in the result , from min_year to max_year"}{"idx": 36242, "node_name": "month", "Dec": "the month-of-year to set in the result , from 1 ( january ) to 12 ( december )"}{"idx": 36244, "node_name": "dayofmonth", "Dec": "the day-of-month to set in the result , from 1 to 28-31"}{"idx": 36246, "node_name": "dayofyear", "Dec": "the day-of-year to set in the result , from 1 to 365-366"}{"idx": 36248, "node_name": "hour", "Dec": "the hour-of-day to set in the result , from 0 to 23"}{"idx": 36250, "node_name": "minute", "Dec": "the minute-of-hour to set in the result , from 0 to 59"}{"idx": 36252, "node_name": "second", "Dec": "the second-of-minute to set in the result , from 0 to 59"}{"idx": 36254, "node_name": "nanoofsecond", "Dec": "the nano-of-second to set in the result , from 0 to 999,999,999"}{"idx": 36256, "node_name": "unit", "Dec": "the unit to truncate to , not null"}{"idx": 36258, "node_name": "amounttoadd", "Dec": "the amount to add , not null"}{"idx": 36260, "node_name": "amounttoadd", "Dec": "the amount of the unit to add to the result , may be negative"}{"idx": 36261, "node_name": "unit", "Dec": "the unit of the amount to add , not null"}{"idx": 36263, "node_name": "years", "Dec": "the years to add , may be negative"}{"idx": 36265, "node_name": "months", "Dec": "the months to add , may be negative"}{"idx": 36267, "node_name": "weeks", "Dec": "the weeks to add , may be negative"}{"idx": 36269, "node_name": "days", "Dec": "the days to add , may be negative"}{"idx": 36271, "node_name": "hours", "Dec": "the hours to add , may be negative"}{"idx": 36273, "node_name": "minutes", "Dec": "the minutes to add , may be negative"}{"idx": 36275, "node_name": "seconds", "Dec": "the seconds to add , may be negative"}{"idx": 36277, "node_name": "nanos", "Dec": "the nanos to add , may be negative"}{"idx": 36279, "node_name": "amounttosubtract", "Dec": "the amount to subtract , not null"}{"idx": 36281, "node_name": "amounttosubtract", "Dec": "the amount of the unit to subtract from the result , may be negative"}{"idx": 36282, "node_name": "unit", "Dec": "the unit of the amount to subtract , not null"}{"idx": 36284, "node_name": "years", "Dec": "the years to subtract , may be negative"}{"idx": 36286, "node_name": "months", "Dec": "the months to subtract , may be negative"}{"idx": 36288, "node_name": "weeks", "Dec": "the weeks to subtract , may be negative"}{"idx": 36290, "node_name": "days", "Dec": "the days to subtract , may be negative"}{"idx": 36292, "node_name": "hours", "Dec": "the hours to subtract , may be negative"}{"idx": 36294, "node_name": "minutes", "Dec": "the minutes to subtract , may be negative"}{"idx": 36296, "node_name": "seconds", "Dec": "the seconds to subtract , may be negative"}{"idx": 36298, "node_name": "nanos", "Dec": "the nanos to subtract , may be negative"}{"idx": 36300, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 36302, "node_name": "endexclusive", "Dec": "the end date , exclusive , which is converted to a zoneddatetime , not null"}{"idx": 36303, "node_name": "unit", "Dec": "the unit to measure the amount in , not null"}{"idx": 36305, "node_name": "formatter", "Dec": "the formatter to use , not null"}{"idx": 36308, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 36316, "node_name": "zoneid", "Dec": "the time-zone id , not null"}{"idx": 36317, "node_name": "aliasmap", "Dec": "a map of alias zone ids ( typically abbreviations ) to real zone ids , not null"}{"idx": 36319, "node_name": "zoneid", "Dec": "the time-zone id , not null"}{"idx": 36321, "node_name": "prefix", "Dec": "the time-zone id , not null"}{"idx": 36322, "node_name": "offset", "Dec": "the offset , not null"}{"idx": 36324, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 36327, "node_name": "style", "Dec": "the length of the text required , not null"}{"idx": 36328, "node_name": "locale", "Dec": "the locale to use , not null"}{"idx": 36332, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 36340, "node_name": "offsetid", "Dec": "the offset id , not null"}{"idx": 36342, "node_name": "hours", "Dec": "the time-zone offset in hours , from -18 to +18"}{"idx": 36344, "node_name": "hours", "Dec": "the time-zone offset in hours , from -18 to +18"}{"idx": 36345, "node_name": "minutes", "Dec": "the time-zone offset in minutes , from 0 to \u00b159 , sign matches hours"}{"idx": 36347, "node_name": "hours", "Dec": "the time-zone offset in hours , from -18 to +18"}{"idx": 36348, "node_name": "minutes", "Dec": "the time-zone offset in minutes , from 0 to \u00b159 , sign matches hours and seconds"}{"idx": 36349, "node_name": "seconds", "Dec": "the time-zone offset in seconds , from 0 to \u00b159 , sign matches hours and minutes"}{"idx": 36351, "node_name": "temporal", "Dec": "the temporal object to convert , not null"}{"idx": 36353, "node_name": "totalseconds", "Dec": "the total time-zone offset in seconds , from -64800 to +64800"}{"idx": 36358, "node_name": "field", "Dec": "the field to check , null returns false"}{"idx": 36360, "node_name": "field", "Dec": "the field to query the range for , not null"}{"idx": 36362, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 36364, "node_name": "field", "Dec": "the field to get , not null"}{"idx": 36366, "node_name": "query", "Dec": "the query to invoke , not null"}{"idx": 36368, "node_name": "temporal", "Dec": "the target object to be adjusted , not null"}{"idx": 36370, "node_name": "other", "Dec": "the other date to compare to , not null"}{"idx": 36372, "node_name": "obj", "Dec": "the object to check , null returns false"}{"idx": 36380, "node_name": "o", "Dec": "element whose presence in this collection is to be tested"}{"idx": 36383, "node_name": "a", "Dec": "the array into which the elements of this collection are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 36385, "node_name": "e", "Dec": "element whose presence in this collection is to be ensured"}{"idx": 36387, "node_name": "o", "Dec": "element to be removed from this collection , if present"}{"idx": 36389, "node_name": "c", "Dec": "collection to be checked for containment in this collection"}{"idx": 36391, "node_name": "c", "Dec": "collection containing elements to be added to this collection"}{"idx": 36393, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 36395, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 36402, "node_name": "e", "Dec": "element to be appended to this list"}{"idx": 36404, "node_name": "index", "Dec": "index of the element to return"}{"idx": 36406, "node_name": "index", "Dec": "index of the element to replace"}{"idx": 36407, "node_name": "element", "Dec": "element to be stored at the specified position"}{"idx": 36409, "node_name": "index", "Dec": "index at which the specified element is to be inserted"}{"idx": 36410, "node_name": "element", "Dec": "element to be inserted"}{"idx": 36412, "node_name": "index", "Dec": "the index of the element to be removed"}{"idx": 36414, "node_name": "o", "Dec": "element to search for"}{"idx": 36416, "node_name": "o", "Dec": "element to search for"}{"idx": 36419, "node_name": "index", "Dec": "index at which to insert the first element from the specified collection"}{"idx": 36420, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 36424, "node_name": "index", "Dec": "index of the first element to be returned from the list iterator ( by a call to next )"}{"idx": 36426, "node_name": "fromindex", "Dec": "low endpoint ( inclusive ) of the sublist"}{"idx": 36427, "node_name": "toindex", "Dec": "high endpoint ( exclusive ) of the sublist"}{"idx": 36429, "node_name": "o", "Dec": "the object to be compared for equality with this list"}{"idx": 36432, "node_name": "fromindex", "Dec": "index of first element to be removed"}{"idx": 36433, "node_name": "toindex", "Dec": "index after last element to be removed"}{"idx": 36439, "node_name": "value", "Dec": "value whose presence in this map is to be tested"}{"idx": 36441, "node_name": "key", "Dec": "key whose presence in this map is to be tested"}{"idx": 36443, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 36445, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 36446, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 36448, "node_name": "key", "Dec": "key whose mapping is to be removed from the map"}{"idx": 36450, "node_name": "m", "Dec": "mappings to be stored in this map"}{"idx": 36455, "node_name": "o", "Dec": "object to be compared for equality with this map"}{"idx": 36461, "node_name": "key", "Dec": "the key represented by this entry"}{"idx": 36462, "node_name": "value", "Dec": "the value represented by this entry"}{"idx": 36464, "node_name": "entry", "Dec": "the entry to copy"}{"idx": 36468, "node_name": "value", "Dec": "new value to be stored in this entry"}{"idx": 36470, "node_name": "o", "Dec": "object to be compared for equality with this map entry"}{"idx": 36475, "node_name": "key", "Dec": "the key represented by this entry"}{"idx": 36476, "node_name": "value", "Dec": "the value represented by this entry"}{"idx": 36478, "node_name": "entry", "Dec": "the entry to copy"}{"idx": 36482, "node_name": "value", "Dec": "new value to be stored in this entry"}{"idx": 36484, "node_name": "o", "Dec": "object to be compared for equality with this map entry"}{"idx": 36490, "node_name": "e", "Dec": "the element to add"}{"idx": 36495, "node_name": "c", "Dec": "collection containing elements to be added to this queue"}{"idx": 36499, "node_name": "index", "Dec": "index of the element to return"}{"idx": 36501, "node_name": "index", "Dec": "index of the element to replace"}{"idx": 36502, "node_name": "element", "Dec": "element to be stored at the specified position"}{"idx": 36504, "node_name": "index", "Dec": "index at which the specified element is to be inserted"}{"idx": 36505, "node_name": "element", "Dec": "element to be inserted"}{"idx": 36507, "node_name": "index", "Dec": "the index of the element to be removed"}{"idx": 36509, "node_name": "index", "Dec": "index at which to insert the first element from the specified collection"}{"idx": 36510, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 36513, "node_name": "index", "Dec": "index of first element to be returned from the list iterator ( by a call to the next method )"}{"idx": 36517, "node_name": "o", "Dec": "object to be compared for equality with this set"}{"idx": 36520, "node_name": "c", "Dec": "collection containing elements to be removed from this set"}{"idx": 36524, "node_name": "numelements", "Dec": "lower bound on initial capacity of the deque"}{"idx": 36526, "node_name": "c", "Dec": "the collection whose elements are to be placed into the deque"}{"idx": 36528, "node_name": "e", "Dec": "the element to add"}{"idx": 36530, "node_name": "e", "Dec": "the element to add"}{"idx": 36532, "node_name": "c", "Dec": "the elements to be inserted into this deque"}{"idx": 36534, "node_name": "e", "Dec": "the element to add"}{"idx": 36536, "node_name": "e", "Dec": "the element to add"}{"idx": 36542, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 36544, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 36546, "node_name": "e", "Dec": "the element to add"}{"idx": 36548, "node_name": "e", "Dec": "the element to add"}{"idx": 36554, "node_name": "e", "Dec": "the element to push"}{"idx": 36561, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 36563, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 36565, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 36567, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 36569, "node_name": "o", "Dec": "object to be checked for containment in this deque"}{"idx": 36571, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 36575, "node_name": "a", "Dec": "the array into which the elements of the deque are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose"}{"idx": 36579, "node_name": "initialcapacity", "Dec": "the initial capacity of the list"}{"idx": 36582, "node_name": "c", "Dec": "the collection whose elements are to be placed into this list"}{"idx": 36585, "node_name": "mincapacity", "Dec": "the desired minimum capacity"}{"idx": 36589, "node_name": "o", "Dec": "element whose presence in this list is to be tested"}{"idx": 36591, "node_name": "o", "Dec": "element to search for"}{"idx": 36593, "node_name": "o", "Dec": "element to search for"}{"idx": 36597, "node_name": "a", "Dec": "the array into which the elements of the list are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 36599, "node_name": "index", "Dec": "index of the element to return"}{"idx": 36601, "node_name": "index", "Dec": "index of the element to replace"}{"idx": 36602, "node_name": "element", "Dec": "element to be stored at the specified position"}{"idx": 36604, "node_name": "e", "Dec": "element to be appended to this list"}{"idx": 36606, "node_name": "index", "Dec": "index at which the specified element is to be inserted"}{"idx": 36607, "node_name": "element", "Dec": "element to be inserted"}{"idx": 36609, "node_name": "index", "Dec": "the index of the element to be removed"}{"idx": 36611, "node_name": "o", "Dec": "element to be removed from this list , if present"}{"idx": 36614, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 36616, "node_name": "index", "Dec": "index at which to insert the first element from the specified collection"}{"idx": 36617, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 36619, "node_name": "fromindex", "Dec": "index of first element to be removed"}{"idx": 36620, "node_name": "toindex", "Dec": "index after last element to be removed"}{"idx": 36622, "node_name": "c", "Dec": "collection containing elements to be removed from this list"}{"idx": 36624, "node_name": "c", "Dec": "collection containing elements to be retained in this list"}{"idx": 36626, "node_name": "index", "Dec": "index of the first element to be returned from the list iterator ( by a call to next )"}{"idx": 36630, "node_name": "fromindex", "Dec": "low endpoint ( inclusive ) of the sublist"}{"idx": 36631, "node_name": "toindex", "Dec": "high endpoint ( exclusive ) of the sublist"}{"idx": 36633, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 36636, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 36639, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36641, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36642, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36643, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36645, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36647, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36648, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36649, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36651, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36653, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36654, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36655, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36657, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36659, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36660, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36661, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36663, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36665, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36666, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36667, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36669, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36671, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36672, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36673, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36675, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36677, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36678, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36679, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36681, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36683, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36684, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36685, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36687, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36689, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36690, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36691, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36693, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36695, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36696, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36697, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36699, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36701, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36702, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36703, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36705, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36707, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36708, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36709, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36711, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36713, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36714, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36715, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36717, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36719, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36720, "node_name": "fromindex", "Dec": "the index of the first element , inclusive , to be sorted"}{"idx": 36721, "node_name": "toindex", "Dec": "the index of the last element , exclusive , to be sorted"}{"idx": 36723, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36725, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36726, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be sorted"}{"idx": 36727, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be sorted"}{"idx": 36729, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36730, "node_name": "cmp", "Dec": "the comparator to determine the order of the array . a null value indicates that the elements ' natural ordering should be used ."}{"idx": 36732, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36733, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be sorted"}{"idx": 36734, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be sorted"}{"idx": 36735, "node_name": "cmp", "Dec": "the comparator to determine the order of the array . a null value indicates that the elements ' natural ordering should be used ."}{"idx": 36737, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36739, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36740, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be sorted"}{"idx": 36741, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be sorted"}{"idx": 36743, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36744, "node_name": "c", "Dec": "the comparator to determine the order of the array . a null value indicates that the elements ' natural ordering should be used ."}{"idx": 36746, "node_name": "a", "Dec": "the array to be sorted"}{"idx": 36747, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be sorted"}{"idx": 36748, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be sorted"}{"idx": 36749, "node_name": "c", "Dec": "the comparator to determine the order of the array . a null value indicates that the elements ' natural ordering should be used ."}{"idx": 36751, "node_name": "array", "Dec": "the array , which is modified in-place by parallelPrefix(java.lang.Object[],java.util.function.BinaryOperator)"}{"idx": 36752, "node_name": "op", "Dec": "a side-effect-free , associative function to perform the cumulation"}{"idx": 36754, "node_name": "array", "Dec": "the array"}{"idx": 36755, "node_name": "fromindex", "Dec": "the index of the first element , inclusive"}{"idx": 36756, "node_name": "toindex", "Dec": "the index of the last element , exclusive"}{"idx": 36757, "node_name": "op", "Dec": "a side-effect-free , associative function to perform the cumulation"}{"idx": 36759, "node_name": "array", "Dec": "the array , which is modified in-place by parallelPrefix(long[],java.util.function.LongBinaryOperator)"}{"idx": 36760, "node_name": "op", "Dec": "a side-effect-free , associative function to perform the cumulation"}{"idx": 36762, "node_name": "array", "Dec": "the array"}{"idx": 36763, "node_name": "fromindex", "Dec": "the index of the first element , inclusive"}{"idx": 36764, "node_name": "toindex", "Dec": "the index of the last element , exclusive"}{"idx": 36765, "node_name": "op", "Dec": "a side-effect-free , associative function to perform the cumulation"}{"idx": 36767, "node_name": "array", "Dec": "the array , which is modified in-place by parallelPrefix(double[],java.util.function.DoubleBinaryOperator)"}{"idx": 36768, "node_name": "op", "Dec": "a side-effect-free function to perform the cumulation"}{"idx": 36770, "node_name": "array", "Dec": "the array"}{"idx": 36771, "node_name": "fromindex", "Dec": "the index of the first element , inclusive"}{"idx": 36772, "node_name": "toindex", "Dec": "the index of the last element , exclusive"}{"idx": 36773, "node_name": "op", "Dec": "a side-effect-free , associative function to perform the cumulation"}{"idx": 36775, "node_name": "array", "Dec": "the array , which is modified in-place by parallelPrefix(int[],java.util.function.IntBinaryOperator)"}{"idx": 36776, "node_name": "op", "Dec": "a side-effect-free , associative function to perform the cumulation"}{"idx": 36778, "node_name": "array", "Dec": "the array"}{"idx": 36779, "node_name": "fromindex", "Dec": "the index of the first element , inclusive"}{"idx": 36780, "node_name": "toindex", "Dec": "the index of the last element , exclusive"}{"idx": 36781, "node_name": "op", "Dec": "a side-effect-free , associative function to perform the cumulation"}{"idx": 36783, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36784, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36786, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36787, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be searched"}{"idx": 36788, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be searched"}{"idx": 36789, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36791, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36792, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36794, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36795, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be searched"}{"idx": 36796, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be searched"}{"idx": 36797, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36799, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36800, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36802, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36803, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be searched"}{"idx": 36804, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be searched"}{"idx": 36805, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36807, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36808, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36810, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36811, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be searched"}{"idx": 36812, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be searched"}{"idx": 36813, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36815, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36816, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36818, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36819, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be searched"}{"idx": 36820, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be searched"}{"idx": 36821, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36823, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36824, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36826, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36827, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be searched"}{"idx": 36828, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be searched"}{"idx": 36829, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36831, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36832, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36834, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36835, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be searched"}{"idx": 36836, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be searched"}{"idx": 36837, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36839, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36840, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36842, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36843, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be searched"}{"idx": 36844, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be searched"}{"idx": 36845, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36847, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36848, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36849, "node_name": "c", "Dec": "the comparator by which the array is ordered . a null value indicates that the elements ' natural ordering should be used ."}{"idx": 36851, "node_name": "a", "Dec": "the array to be searched"}{"idx": 36852, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be searched"}{"idx": 36853, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be searched"}{"idx": 36854, "node_name": "key", "Dec": "the value to be searched for"}{"idx": 36855, "node_name": "c", "Dec": "the comparator by which the array is ordered . a null value indicates that the elements ' natural ordering should be used ."}{"idx": 36857, "node_name": "a", "Dec": "one array to be tested for equality"}{"idx": 36858, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 36860, "node_name": "a", "Dec": "the first array to be tested for equality"}{"idx": 36861, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 36862, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 36863, "node_name": "b", "Dec": "the second array to be tested fro equality"}{"idx": 36864, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 36865, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 36867, "node_name": "a", "Dec": "one array to be tested for equality"}{"idx": 36868, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 36870, "node_name": "a", "Dec": "the first array to be tested for equality"}{"idx": 36871, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 36872, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 36873, "node_name": "b", "Dec": "the second array to be tested fro equality"}{"idx": 36874, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 36875, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 36877, "node_name": "a", "Dec": "one array to be tested for equality"}{"idx": 36878, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 36880, "node_name": "a", "Dec": "the first array to be tested for equality"}{"idx": 36881, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 36882, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 36883, "node_name": "b", "Dec": "the second array to be tested fro equality"}{"idx": 36884, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 36885, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 36887, "node_name": "a", "Dec": "one array to be tested for equality"}{"idx": 36888, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 36890, "node_name": "a", "Dec": "the first array to be tested for equality"}{"idx": 36891, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 36892, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 36893, "node_name": "b", "Dec": "the second array to be tested fro equality"}{"idx": 36894, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 36895, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 36897, "node_name": "a", "Dec": "one array to be tested for equality"}{"idx": 36898, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 36900, "node_name": "a", "Dec": "the first array to be tested for equality"}{"idx": 36901, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 36902, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 36903, "node_name": "b", "Dec": "the second array to be tested fro equality"}{"idx": 36904, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 36905, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 36907, "node_name": "a", "Dec": "one array to be tested for equality"}{"idx": 36908, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 36910, "node_name": "a", "Dec": "the first array to be tested for equality"}{"idx": 36911, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 36912, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 36913, "node_name": "b", "Dec": "the second array to be tested fro equality"}{"idx": 36914, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 36915, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 36917, "node_name": "a", "Dec": "one array to be tested for equality"}{"idx": 36918, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 36920, "node_name": "a", "Dec": "the first array to be tested for equality"}{"idx": 36921, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 36922, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 36923, "node_name": "b", "Dec": "the second array to be tested fro equality"}{"idx": 36924, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 36925, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 36927, "node_name": "a", "Dec": "one array to be tested for equality"}{"idx": 36928, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 36930, "node_name": "a", "Dec": "the first array to be tested for equality"}{"idx": 36931, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 36932, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 36933, "node_name": "b", "Dec": "the second array to be tested fro equality"}{"idx": 36934, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 36935, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 36937, "node_name": "a", "Dec": "one array to be tested for equality"}{"idx": 36938, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 36940, "node_name": "a", "Dec": "the first array to be tested for equality"}{"idx": 36941, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 36942, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 36943, "node_name": "b", "Dec": "the second array to be tested fro equality"}{"idx": 36944, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 36945, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 36947, "node_name": "a", "Dec": "one array to be tested for equality"}{"idx": 36948, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 36949, "node_name": "cmp", "Dec": "the comparator to compare array elements"}{"idx": 36951, "node_name": "a", "Dec": "the first array to be tested for equality"}{"idx": 36952, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 36953, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 36954, "node_name": "b", "Dec": "the second array to be tested fro equality"}{"idx": 36955, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 36956, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 36957, "node_name": "cmp", "Dec": "the comparator to compare array elements"}{"idx": 36959, "node_name": "a", "Dec": "the array to be filled"}{"idx": 36960, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 36962, "node_name": "a", "Dec": "the array to be filled"}{"idx": 36963, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be filled with the specified value"}{"idx": 36964, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be filled with the specified value"}{"idx": 36965, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 36967, "node_name": "a", "Dec": "the array to be filled"}{"idx": 36968, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 36970, "node_name": "a", "Dec": "the array to be filled"}{"idx": 36971, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be filled with the specified value"}{"idx": 36972, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be filled with the specified value"}{"idx": 36973, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 36975, "node_name": "a", "Dec": "the array to be filled"}{"idx": 36976, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 36978, "node_name": "a", "Dec": "the array to be filled"}{"idx": 36979, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be filled with the specified value"}{"idx": 36980, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be filled with the specified value"}{"idx": 36981, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 36983, "node_name": "a", "Dec": "the array to be filled"}{"idx": 36984, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 36986, "node_name": "a", "Dec": "the array to be filled"}{"idx": 36987, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be filled with the specified value"}{"idx": 36988, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be filled with the specified value"}{"idx": 36989, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 36991, "node_name": "a", "Dec": "the array to be filled"}{"idx": 36992, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 36994, "node_name": "a", "Dec": "the array to be filled"}{"idx": 36995, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be filled with the specified value"}{"idx": 36996, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be filled with the specified value"}{"idx": 36997, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 36999, "node_name": "a", "Dec": "the array to be filled"}{"idx": 37000, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 37002, "node_name": "a", "Dec": "the array to be filled"}{"idx": 37003, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be filled with the specified value"}{"idx": 37004, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be filled with the specified value"}{"idx": 37005, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 37007, "node_name": "a", "Dec": "the array to be filled"}{"idx": 37008, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 37010, "node_name": "a", "Dec": "the array to be filled"}{"idx": 37011, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be filled with the specified value"}{"idx": 37012, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be filled with the specified value"}{"idx": 37013, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 37015, "node_name": "a", "Dec": "the array to be filled"}{"idx": 37016, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 37018, "node_name": "a", "Dec": "the array to be filled"}{"idx": 37019, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be filled with the specified value"}{"idx": 37020, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be filled with the specified value"}{"idx": 37021, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 37023, "node_name": "a", "Dec": "the array to be filled"}{"idx": 37024, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 37026, "node_name": "a", "Dec": "the array to be filled"}{"idx": 37027, "node_name": "fromindex", "Dec": "the index of the first element ( inclusive ) to be filled with the specified value"}{"idx": 37028, "node_name": "toindex", "Dec": "the index of the last element ( exclusive ) to be filled with the specified value"}{"idx": 37029, "node_name": "val", "Dec": "the value to be stored in all elements of the array"}{"idx": 37031, "node_name": "original", "Dec": "the array to be copied"}{"idx": 37032, "node_name": "newlength", "Dec": "the length of the copy to be returned"}{"idx": 37034, "node_name": "original", "Dec": "the array to be copied"}{"idx": 37035, "node_name": "newlength", "Dec": "the length of the copy to be returned"}{"idx": 37036, "node_name": "newtype", "Dec": "the class of the copy to be returned"}{"idx": 37038, "node_name": "original", "Dec": "the array to be copied"}{"idx": 37039, "node_name": "newlength", "Dec": "the length of the copy to be returned"}{"idx": 37041, "node_name": "original", "Dec": "the array to be copied"}{"idx": 37042, "node_name": "newlength", "Dec": "the length of the copy to be returned"}{"idx": 37044, "node_name": "original", "Dec": "the array to be copied"}{"idx": 37045, "node_name": "newlength", "Dec": "the length of the copy to be returned"}{"idx": 37047, "node_name": "original", "Dec": "the array to be copied"}{"idx": 37048, "node_name": "newlength", "Dec": "the length of the copy to be returned"}{"idx": 37050, "node_name": "original", "Dec": "the array to be copied"}{"idx": 37051, "node_name": "newlength", "Dec": "the length of the copy to be returned"}{"idx": 37053, "node_name": "original", "Dec": "the array to be copied"}{"idx": 37054, "node_name": "newlength", "Dec": "the length of the copy to be returned"}{"idx": 37056, "node_name": "original", "Dec": "the array to be copied"}{"idx": 37057, "node_name": "newlength", "Dec": "the length of the copy to be returned"}{"idx": 37059, "node_name": "original", "Dec": "the array to be copied"}{"idx": 37060, "node_name": "newlength", "Dec": "the length of the copy to be returned"}{"idx": 37062, "node_name": "original", "Dec": "the array from which a range is to be copied"}{"idx": 37063, "node_name": "from", "Dec": "the initial index of the range to be copied , inclusive"}{"idx": 37064, "node_name": "to", "Dec": "the final index of the range to be copied , exclusive . ( this index may lie outside the array . )"}{"idx": 37066, "node_name": "original", "Dec": "the array from which a range is to be copied"}{"idx": 37067, "node_name": "from", "Dec": "the initial index of the range to be copied , inclusive"}{"idx": 37068, "node_name": "to", "Dec": "the final index of the range to be copied , exclusive . ( this index may lie outside the array . )"}{"idx": 37069, "node_name": "newtype", "Dec": "the class of the copy to be returned"}{"idx": 37071, "node_name": "original", "Dec": "the array from which a range is to be copied"}{"idx": 37072, "node_name": "from", "Dec": "the initial index of the range to be copied , inclusive"}{"idx": 37073, "node_name": "to", "Dec": "the final index of the range to be copied , exclusive . ( this index may lie outside the array . )"}{"idx": 37075, "node_name": "original", "Dec": "the array from which a range is to be copied"}{"idx": 37076, "node_name": "from", "Dec": "the initial index of the range to be copied , inclusive"}{"idx": 37077, "node_name": "to", "Dec": "the final index of the range to be copied , exclusive . ( this index may lie outside the array . )"}{"idx": 37079, "node_name": "original", "Dec": "the array from which a range is to be copied"}{"idx": 37080, "node_name": "from", "Dec": "the initial index of the range to be copied , inclusive"}{"idx": 37081, "node_name": "to", "Dec": "the final index of the range to be copied , exclusive . ( this index may lie outside the array . )"}{"idx": 37083, "node_name": "original", "Dec": "the array from which a range is to be copied"}{"idx": 37084, "node_name": "from", "Dec": "the initial index of the range to be copied , inclusive"}{"idx": 37085, "node_name": "to", "Dec": "the final index of the range to be copied , exclusive . ( this index may lie outside the array . )"}{"idx": 37087, "node_name": "original", "Dec": "the array from which a range is to be copied"}{"idx": 37088, "node_name": "from", "Dec": "the initial index of the range to be copied , inclusive"}{"idx": 37089, "node_name": "to", "Dec": "the final index of the range to be copied , exclusive . ( this index may lie outside the array . )"}{"idx": 37091, "node_name": "original", "Dec": "the array from which a range is to be copied"}{"idx": 37092, "node_name": "from", "Dec": "the initial index of the range to be copied , inclusive"}{"idx": 37093, "node_name": "to", "Dec": "the final index of the range to be copied , exclusive . ( this index may lie outside the array . )"}{"idx": 37095, "node_name": "original", "Dec": "the array from which a range is to be copied"}{"idx": 37096, "node_name": "from", "Dec": "the initial index of the range to be copied , inclusive"}{"idx": 37097, "node_name": "to", "Dec": "the final index of the range to be copied , exclusive . ( this index may lie outside the array . )"}{"idx": 37099, "node_name": "original", "Dec": "the array from which a range is to be copied"}{"idx": 37100, "node_name": "from", "Dec": "the initial index of the range to be copied , inclusive"}{"idx": 37101, "node_name": "to", "Dec": "the final index of the range to be copied , exclusive . ( this index may lie outside the array . )"}{"idx": 37103, "node_name": "a", "Dec": "the array by which the list will be backed"}{"idx": 37105, "node_name": "a", "Dec": "the array whose hash value to compute"}{"idx": 37107, "node_name": "a", "Dec": "the array whose hash value to compute"}{"idx": 37109, "node_name": "a", "Dec": "the array whose hash value to compute"}{"idx": 37111, "node_name": "a", "Dec": "the array whose hash value to compute"}{"idx": 37113, "node_name": "a", "Dec": "the array whose hash value to compute"}{"idx": 37115, "node_name": "a", "Dec": "the array whose hash value to compute"}{"idx": 37117, "node_name": "a", "Dec": "the array whose hash value to compute"}{"idx": 37119, "node_name": "a", "Dec": "the array whose hash value to compute"}{"idx": 37121, "node_name": "a", "Dec": "the array whose content-based hash code to compute"}{"idx": 37123, "node_name": "a", "Dec": "the array whose deep-content-based hash code to compute"}{"idx": 37125, "node_name": "a1", "Dec": "one array to be tested for equality"}{"idx": 37126, "node_name": "a2", "Dec": "the other array to be tested for equality"}{"idx": 37128, "node_name": "a", "Dec": "the array whose string representation to return"}{"idx": 37130, "node_name": "a", "Dec": "the array whose string representation to return"}{"idx": 37132, "node_name": "a", "Dec": "the array whose string representation to return"}{"idx": 37134, "node_name": "a", "Dec": "the array whose string representation to return"}{"idx": 37136, "node_name": "a", "Dec": "the array whose string representation to return"}{"idx": 37138, "node_name": "a", "Dec": "the array whose string representation to return"}{"idx": 37140, "node_name": "a", "Dec": "the array whose string representation to return"}{"idx": 37142, "node_name": "a", "Dec": "the array whose string representation to return"}{"idx": 37144, "node_name": "a", "Dec": "the array whose string representation to return"}{"idx": 37146, "node_name": "a", "Dec": "the array whose string representation to return"}{"idx": 37148, "node_name": "array", "Dec": "array to be initialized"}{"idx": 37149, "node_name": "generator", "Dec": "a function accepting an index and producing the desired value for that position"}{"idx": 37151, "node_name": "array", "Dec": "array to be initialized"}{"idx": 37152, "node_name": "generator", "Dec": "a function accepting an index and producing the desired value for that position"}{"idx": 37154, "node_name": "array", "Dec": "array to be initialized"}{"idx": 37155, "node_name": "generator", "Dec": "a function accepting an index and producing the desired value for that position"}{"idx": 37157, "node_name": "array", "Dec": "array to be initialized"}{"idx": 37158, "node_name": "generator", "Dec": "a function accepting an index and producing the desired value for that position"}{"idx": 37160, "node_name": "array", "Dec": "array to be initialized"}{"idx": 37161, "node_name": "generator", "Dec": "a function accepting an index and producing the desired value for that position"}{"idx": 37163, "node_name": "array", "Dec": "array to be initialized"}{"idx": 37164, "node_name": "generator", "Dec": "a function accepting an index and producing the desired value for that position"}{"idx": 37166, "node_name": "array", "Dec": "array to be initialized"}{"idx": 37167, "node_name": "generator", "Dec": "a function accepting an index and producing the desired value for that position"}{"idx": 37169, "node_name": "array", "Dec": "array to be initialized"}{"idx": 37170, "node_name": "generator", "Dec": "a function accepting an index and producing the desired value for that position"}{"idx": 37172, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37174, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37175, "node_name": "startinclusive", "Dec": "the first index to cover , inclusive"}{"idx": 37176, "node_name": "endexclusive", "Dec": "index immediately past the last index to cover"}{"idx": 37178, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37180, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37181, "node_name": "startinclusive", "Dec": "the first index to cover , inclusive"}{"idx": 37182, "node_name": "endexclusive", "Dec": "index immediately past the last index to cover"}{"idx": 37184, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37186, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37187, "node_name": "startinclusive", "Dec": "the first index to cover , inclusive"}{"idx": 37188, "node_name": "endexclusive", "Dec": "index immediately past the last index to cover"}{"idx": 37190, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37192, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37193, "node_name": "startinclusive", "Dec": "the first index to cover , inclusive"}{"idx": 37194, "node_name": "endexclusive", "Dec": "index immediately past the last index to cover"}{"idx": 37196, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37198, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37199, "node_name": "startinclusive", "Dec": "the first index to cover , inclusive"}{"idx": 37200, "node_name": "endexclusive", "Dec": "index immediately past the last index to cover"}{"idx": 37202, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37204, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37205, "node_name": "startinclusive", "Dec": "the first index to cover , inclusive"}{"idx": 37206, "node_name": "endexclusive", "Dec": "index immediately past the last index to cover"}{"idx": 37208, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37210, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37211, "node_name": "startinclusive", "Dec": "the first index to cover , inclusive"}{"idx": 37212, "node_name": "endexclusive", "Dec": "index immediately past the last index to cover"}{"idx": 37214, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37216, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 37217, "node_name": "startinclusive", "Dec": "the first index to cover , inclusive"}{"idx": 37218, "node_name": "endexclusive", "Dec": "index immediately past the last index to cover"}{"idx": 37220, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37221, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37223, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37224, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37225, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37226, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37227, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37228, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37230, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37231, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37233, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37234, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37235, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37236, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37237, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37238, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37240, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37241, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37243, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37244, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37245, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37246, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37247, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37248, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37250, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37251, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37253, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37254, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37255, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37256, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37257, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37258, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37260, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37261, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37263, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37264, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37265, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37266, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37267, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37268, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37270, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37271, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37273, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37274, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37275, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37276, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37277, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37278, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37280, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37281, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37283, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37284, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37285, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37286, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37287, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37288, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37290, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37291, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37293, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37294, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37295, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37296, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37297, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37298, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37300, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37301, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37303, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37304, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37305, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37306, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37307, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37308, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37310, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37311, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37313, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37314, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37315, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37316, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37317, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37318, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37320, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37321, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37323, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37324, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37325, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37326, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37327, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37328, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37330, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37331, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37333, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37334, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37335, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37336, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37337, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37338, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37340, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37341, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37343, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37344, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37345, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37346, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37347, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37348, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37350, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37351, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37352, "node_name": "cmp", "Dec": "the comparator to compare array elements"}{"idx": 37354, "node_name": "a", "Dec": "the first array to compare"}{"idx": 37355, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be compared"}{"idx": 37356, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be compared"}{"idx": 37357, "node_name": "b", "Dec": "the second array to compare"}{"idx": 37358, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be compared"}{"idx": 37359, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be compared"}{"idx": 37360, "node_name": "cmp", "Dec": "the comparator to compare array elements"}{"idx": 37362, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37363, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37365, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37366, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 37367, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 37368, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37369, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 37370, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 37372, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37373, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37375, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37376, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 37377, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 37378, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37379, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 37380, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 37382, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37383, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37385, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37386, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 37387, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 37388, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37389, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 37390, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 37392, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37393, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37395, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37396, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 37397, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 37398, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37399, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 37400, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 37402, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37403, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37405, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37406, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 37407, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 37408, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37409, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 37410, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 37412, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37413, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37415, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37416, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 37417, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 37418, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37419, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 37420, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 37422, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37423, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37425, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37426, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 37427, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 37428, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37429, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 37430, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 37432, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37433, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37435, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37436, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 37437, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 37438, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37439, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 37440, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 37442, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37443, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37445, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37446, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 37447, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 37448, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37449, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 37450, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 37452, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37453, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37454, "node_name": "cmp", "Dec": "the comparator to compare array elements"}{"idx": 37456, "node_name": "a", "Dec": "the first array to be tested for a mismatch"}{"idx": 37457, "node_name": "afromindex", "Dec": "the index ( inclusive ) of the first element in the first array to be tested"}{"idx": 37458, "node_name": "atoindex", "Dec": "the index ( exclusive ) of the last element in the first array to be tested"}{"idx": 37459, "node_name": "b", "Dec": "the second array to be tested for a mismatch"}{"idx": 37460, "node_name": "bfromindex", "Dec": "the index ( inclusive ) of the first element in the second array to be tested"}{"idx": 37461, "node_name": "btoindex", "Dec": "the index ( exclusive ) of the last element in the second array to be tested"}{"idx": 37462, "node_name": "cmp", "Dec": "the comparator to compare array elements"}{"idx": 37465, "node_name": "src", "Dec": "the byte array to decode"}{"idx": 37467, "node_name": "src", "Dec": "the string to decode"}{"idx": 37469, "node_name": "src", "Dec": "the byte array to decode"}{"idx": 37470, "node_name": "dst", "Dec": "the output byte array"}{"idx": 37472, "node_name": "buffer", "Dec": "the bytebuffer to decode"}{"idx": 37474, "node_name": "is", "Dec": "the input stream"}{"idx": 37477, "node_name": "src", "Dec": "the byte array to encode"}{"idx": 37479, "node_name": "src", "Dec": "the byte array to encode"}{"idx": 37480, "node_name": "dst", "Dec": "the output byte array"}{"idx": 37482, "node_name": "src", "Dec": "the byte array to encode"}{"idx": 37484, "node_name": "buffer", "Dec": "the source bytebuffer to encode"}{"idx": 37486, "node_name": "os", "Dec": "the output stream ."}{"idx": 37493, "node_name": "linelength", "Dec": "the length of each output line ( rounded down to nearest multiple of 4 ) . if the rounded down line length is not a positive value , the output will not be separated in lines"}{"idx": 37494, "node_name": "lineseparator", "Dec": "the line separator for each output line"}{"idx": 37501, "node_name": "nbits", "Dec": "the initial size of the bit set"}{"idx": 37503, "node_name": "longs", "Dec": "a long array containing a little-endian representation of a sequence of bits to be used as the initial bits of the new bit set"}{"idx": 37505, "node_name": "lb", "Dec": "a long buffer containing a little-endian representation of a sequence of bits between its position and limit , to be used as the initial bits of the new bit set"}{"idx": 37507, "node_name": "bytes", "Dec": "a byte array containing a little-endian representation of a sequence of bits to be used as the initial bits of the new bit set"}{"idx": 37509, "node_name": "bb", "Dec": "a byte buffer containing a little-endian representation of a sequence of bits between its position and limit , to be used as the initial bits of the new bit set"}{"idx": 37513, "node_name": "bitindex", "Dec": "the index of the bit to flip"}{"idx": 37515, "node_name": "fromindex", "Dec": "index of the first bit to flip"}{"idx": 37516, "node_name": "toindex", "Dec": "index after the last bit to flip"}{"idx": 37518, "node_name": "bitindex", "Dec": "a bit index"}{"idx": 37520, "node_name": "bitindex", "Dec": "a bit index"}{"idx": 37521, "node_name": "value", "Dec": "a boolean value to set"}{"idx": 37523, "node_name": "fromindex", "Dec": "index of the first bit to be set"}{"idx": 37524, "node_name": "toindex", "Dec": "index after the last bit to be set"}{"idx": 37526, "node_name": "fromindex", "Dec": "index of the first bit to be set"}{"idx": 37527, "node_name": "toindex", "Dec": "index after the last bit to be set"}{"idx": 37528, "node_name": "value", "Dec": "value to set the selected bits to"}{"idx": 37530, "node_name": "bitindex", "Dec": "the index of the bit to be cleared"}{"idx": 37532, "node_name": "fromindex", "Dec": "index of the first bit to be cleared"}{"idx": 37533, "node_name": "toindex", "Dec": "index after the last bit to be cleared"}{"idx": 37536, "node_name": "bitindex", "Dec": "the bit index"}{"idx": 37538, "node_name": "fromindex", "Dec": "index of the first bit to include"}{"idx": 37539, "node_name": "toindex", "Dec": "index after the last bit to include"}{"idx": 37541, "node_name": "fromindex", "Dec": "the index to start checking from ( inclusive )"}{"idx": 37543, "node_name": "fromindex", "Dec": "the index to start checking from ( inclusive )"}{"idx": 37545, "node_name": "fromindex", "Dec": "the index to start checking from ( inclusive )"}{"idx": 37547, "node_name": "fromindex", "Dec": "the index to start checking from ( inclusive )"}{"idx": 37551, "node_name": "set", "Dec": "bitset to intersect with"}{"idx": 37554, "node_name": "set", "Dec": "a bit set"}{"idx": 37556, "node_name": "set", "Dec": "a bit set"}{"idx": 37558, "node_name": "set", "Dec": "a bit set"}{"idx": 37560, "node_name": "set", "Dec": "the bitset with which to mask this bitset"}{"idx": 37564, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 37571, "node_name": "instant", "Dec": "a millisecond offset from the epoch"}{"idx": 37573, "node_name": "instant", "Dec": "a date representing a millisecond offset from the epoch"}{"idx": 37575, "node_name": "field", "Dec": "an index to the calendar fields"}{"idx": 37576, "node_name": "value", "Dec": "the field value"}{"idx": 37578, "node_name": "fieldvaluepairs", "Dec": "field-value pairs"}{"idx": 37580, "node_name": "year", "Dec": "the year value"}{"idx": 37581, "node_name": "month", "Dec": "the month value ( the month numbering is 0-based ) ."}{"idx": 37582, "node_name": "dayofmonth", "Dec": "the day_of_month value"}{"idx": 37584, "node_name": "hourofday", "Dec": "the hour_of_day value ( 24-hour clock )"}{"idx": 37585, "node_name": "minute", "Dec": "the minute value"}{"idx": 37586, "node_name": "second", "Dec": "the second value"}{"idx": 37588, "node_name": "hourofday", "Dec": "the hour_of_day value ( 24-hour clock )"}{"idx": 37589, "node_name": "minute", "Dec": "the minute value"}{"idx": 37590, "node_name": "second", "Dec": "the second value"}{"idx": 37591, "node_name": "millis", "Dec": "the millisecond value"}{"idx": 37593, "node_name": "weekyear", "Dec": "the week year"}{"idx": 37594, "node_name": "weekofyear", "Dec": "the week number based on weekyear"}{"idx": 37595, "node_name": "dayofweek", "Dec": "the day of week value : one of the constants for the day_of_week field : sunday , ..., saturday ."}{"idx": 37597, "node_name": "zone", "Dec": "the timezone"}{"idx": 37599, "node_name": "lenient", "Dec": "true for lenient mode ; false for non-lenient mode"}{"idx": 37601, "node_name": "type", "Dec": "the calendar type"}{"idx": 37603, "node_name": "locale", "Dec": "the locale"}{"idx": 37605, "node_name": "firstdayofweek", "Dec": "the first day of a week ; one of calendar.sunday to calendar.saturday"}{"idx": 37606, "node_name": "minimaldaysinfirstweek", "Dec": "the minimal number of days in the first week ( 1 .. 7 )"}{"idx": 37666, "node_name": "zone", "Dec": "the time zone to use"}{"idx": 37667, "node_name": "alocale", "Dec": "the locale for the week data"}{"idx": 37670, "node_name": "zone", "Dec": "the time zone to use"}{"idx": 37672, "node_name": "alocale", "Dec": "the locale for the week data"}{"idx": 37674, "node_name": "zone", "Dec": "the time zone to use"}{"idx": 37675, "node_name": "alocale", "Dec": "the locale for the week data"}{"idx": 37681, "node_name": "date", "Dec": "the given date ."}{"idx": 37684, "node_name": "millis", "Dec": "the new time in utc milliseconds from the epoch ."}{"idx": 37686, "node_name": "field", "Dec": "the given calendar field ."}{"idx": 37688, "node_name": "field", "Dec": "the given calendar field ."}{"idx": 37690, "node_name": "field", "Dec": "the given calendar field ."}{"idx": 37691, "node_name": "value", "Dec": "the value to be set for the given calendar field ."}{"idx": 37693, "node_name": "year", "Dec": "the value used to set the year calendar field ."}{"idx": 37694, "node_name": "month", "Dec": "the value used to set the month calendar field . month value is 0-based . e.g. , 0 for january ."}{"idx": 37695, "node_name": "date", "Dec": "the value used to set the day_of_month calendar field ."}{"idx": 37697, "node_name": "year", "Dec": "the value used to set the year calendar field ."}{"idx": 37698, "node_name": "month", "Dec": "the value used to set the month calendar field . month value is 0-based . e.g. , 0 for january ."}{"idx": 37699, "node_name": "date", "Dec": "the value used to set the day_of_month calendar field ."}{"idx": 37700, "node_name": "hourofday", "Dec": "the value used to set the hour_of_day calendar field ."}{"idx": 37701, "node_name": "minute", "Dec": "the value used to set the minute calendar field ."}{"idx": 37703, "node_name": "year", "Dec": "the value used to set the year calendar field ."}{"idx": 37704, "node_name": "month", "Dec": "the value used to set the month calendar field . month value is 0-based . e.g. , 0 for january ."}{"idx": 37705, "node_name": "date", "Dec": "the value used to set the day_of_month calendar field ."}{"idx": 37706, "node_name": "hourofday", "Dec": "the value used to set the hour_of_day calendar field ."}{"idx": 37707, "node_name": "minute", "Dec": "the value used to set the minute calendar field ."}{"idx": 37708, "node_name": "second", "Dec": "the value used to set the second calendar field ."}{"idx": 37711, "node_name": "field", "Dec": "the calendar field to be cleared ."}{"idx": 37713, "node_name": "field", "Dec": "the calendar field to test"}{"idx": 37715, "node_name": "field", "Dec": "the calendar field for which the string representation is returned"}{"idx": 37716, "node_name": "style", "Dec": "the style applied to the string representation ; one of short_format ( short ) , short_standalone , long_format ( long ) , long_standalone , narrow_format , or narrow_standalone ."}{"idx": 37717, "node_name": "locale", "Dec": "the locale for the string representation ( any calendar types specified by locale are ignored )"}{"idx": 37719, "node_name": "field", "Dec": "the calendar field for which the display names are returned"}{"idx": 37720, "node_name": "style", "Dec": "the style applied to the string representation ; one of short_format ( short ) , short_standalone , long_format ( long ) , long_standalone , narrow_format , or narrow_standalone"}{"idx": 37721, "node_name": "locale", "Dec": "the locale for the display names"}{"idx": 37726, "node_name": "obj", "Dec": "the object to compare with ."}{"idx": 37729, "node_name": "when", "Dec": "the object to be compared"}{"idx": 37731, "node_name": "when", "Dec": "the object to be compared"}{"idx": 37733, "node_name": "anothercalendar", "Dec": "the calendar to be compared ."}{"idx": 37735, "node_name": "field", "Dec": "the calendar field ."}{"idx": 37736, "node_name": "amount", "Dec": "the amount of date or time to be added to the field ."}{"idx": 37738, "node_name": "field", "Dec": "the time field ."}{"idx": 37739, "node_name": "up", "Dec": "indicates if the value of the specified time field is to be rolled up or rolled down . use true if rolling up , false otherwise ."}{"idx": 37741, "node_name": "field", "Dec": "the calendar field ."}{"idx": 37742, "node_name": "amount", "Dec": "the signed amount to add to the calendar field ."}{"idx": 37744, "node_name": "value", "Dec": "the given time zone ."}{"idx": 37747, "node_name": "lenient", "Dec": "true if the lenient mode is to be turned on ; false if it is to be turned off ."}{"idx": 37750, "node_name": "value", "Dec": "the given first day of the week ."}{"idx": 37753, "node_name": "value", "Dec": "the given minimal days required in the first week of the year ."}{"idx": 37758, "node_name": "weekyear", "Dec": "the week year"}{"idx": 37759, "node_name": "weekofyear", "Dec": "the week number based on weekyear"}{"idx": 37760, "node_name": "dayofweek", "Dec": "the day of week value : one of the constants for the day_of_week field : sunday , ..., saturday ."}{"idx": 37763, "node_name": "field", "Dec": "the calendar field ."}{"idx": 37765, "node_name": "field", "Dec": "the calendar field ."}{"idx": 37767, "node_name": "field", "Dec": "the calendar field ."}{"idx": 37769, "node_name": "field", "Dec": "the calendar field ."}{"idx": 37771, "node_name": "field", "Dec": "the calendar field"}{"idx": 37773, "node_name": "field", "Dec": "the calendar field"}{"idx": 37781, "node_name": "o", "Dec": "element whose presence in this collection is to be tested"}{"idx": 37785, "node_name": "a", "Dec": "the array into which the elements of this collection are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 37787, "node_name": "generator", "Dec": "a function which produces a new array of the desired type and the provided length"}{"idx": 37789, "node_name": "e", "Dec": "element whose presence in this collection is to be ensured"}{"idx": 37791, "node_name": "o", "Dec": "element to be removed from this collection , if present"}{"idx": 37793, "node_name": "c", "Dec": "collection to be checked for containment in this collection"}{"idx": 37795, "node_name": "c", "Dec": "collection containing elements to be added to this collection"}{"idx": 37797, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 37799, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 37801, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 37804, "node_name": "o", "Dec": "object to be compared for equality with this collection"}{"idx": 37814, "node_name": "list", "Dec": "the list to be sorted ."}{"idx": 37816, "node_name": "list", "Dec": "the list to be sorted ."}{"idx": 37817, "node_name": "c", "Dec": "the comparator to determine the order of the list . a null value indicates that the elements ' natural ordering should be used ."}{"idx": 37819, "node_name": "list", "Dec": "the list to be searched ."}{"idx": 37820, "node_name": "key", "Dec": "the key to be searched for ."}{"idx": 37822, "node_name": "list", "Dec": "the list to be searched ."}{"idx": 37823, "node_name": "key", "Dec": "the key to be searched for ."}{"idx": 37824, "node_name": "c", "Dec": "the comparator by which the list is ordered . a null value indicates that the elements ' natural ordering should be used ."}{"idx": 37826, "node_name": "list", "Dec": "the list whose elements are to be reversed ."}{"idx": 37828, "node_name": "list", "Dec": "the list to be shuffled ."}{"idx": 37830, "node_name": "list", "Dec": "the list to be shuffled ."}{"idx": 37831, "node_name": "rnd", "Dec": "the source of randomness to use to shuffle the list ."}{"idx": 37833, "node_name": "list", "Dec": "the list in which to swap elements ."}{"idx": 37834, "node_name": "i", "Dec": "the index of one element to be swapped ."}{"idx": 37835, "node_name": "j", "Dec": "the index of the other element to be swapped ."}{"idx": 37837, "node_name": "list", "Dec": "the list to be filled with the specified element ."}{"idx": 37838, "node_name": "obj", "Dec": "the element with which to fill the specified list ."}{"idx": 37840, "node_name": "dest", "Dec": "the destination list ."}{"idx": 37841, "node_name": "src", "Dec": "the source list ."}{"idx": 37843, "node_name": "coll", "Dec": "the collection whose minimum element is to be determined ."}{"idx": 37845, "node_name": "coll", "Dec": "the collection whose minimum element is to be determined ."}{"idx": 37846, "node_name": "comp", "Dec": "the comparator with which to determine the minimum element . a null value indicates that the elements ' natural ordering should be used ."}{"idx": 37848, "node_name": "coll", "Dec": "the collection whose maximum element is to be determined ."}{"idx": 37850, "node_name": "coll", "Dec": "the collection whose maximum element is to be determined ."}{"idx": 37851, "node_name": "comp", "Dec": "the comparator with which to determine the maximum element . a null value indicates that the elements ' natural ordering should be used ."}{"idx": 37853, "node_name": "list", "Dec": "the list to be rotated ."}{"idx": 37854, "node_name": "distance", "Dec": "the distance to rotate the list . there are no constraints on this value ; it may be zero , negative , or greater than list.size() ."}{"idx": 37856, "node_name": "list", "Dec": "the list in which replacement is to occur ."}{"idx": 37857, "node_name": "oldval", "Dec": "the old value to be replaced ."}{"idx": 37858, "node_name": "newval", "Dec": "the new value with which oldval is to be replaced ."}{"idx": 37860, "node_name": "source", "Dec": "the list in which to search for the first occurrence of target ."}{"idx": 37861, "node_name": "target", "Dec": "the list to search for as a sublist of source ."}{"idx": 37863, "node_name": "source", "Dec": "the list in which to search for the last occurrence of target ."}{"idx": 37864, "node_name": "target", "Dec": "the list to search for as a sublist of source ."}{"idx": 37866, "node_name": "c", "Dec": "the collection for which an unmodifiable view is to be returned ."}{"idx": 37868, "node_name": "s", "Dec": "the set for which an unmodifiable view is to be returned ."}{"idx": 37870, "node_name": "s", "Dec": "the sorted set for which an unmodifiable view is to be returned ."}{"idx": 37872, "node_name": "s", "Dec": "the navigable set for which an unmodifiable view is to be returned"}{"idx": 37874, "node_name": "list", "Dec": "the list for which an unmodifiable view is to be returned ."}{"idx": 37876, "node_name": "m", "Dec": "the map for which an unmodifiable view is to be returned ."}{"idx": 37878, "node_name": "m", "Dec": "the sorted map for which an unmodifiable view is to be returned ."}{"idx": 37880, "node_name": "m", "Dec": "the navigable map for which an unmodifiable view is to be returned"}{"idx": 37882, "node_name": "c", "Dec": "the collection to be \" wrapped \" in a synchronized collection ."}{"idx": 37884, "node_name": "s", "Dec": "the set to be \" wrapped \" in a synchronized set ."}{"idx": 37886, "node_name": "s", "Dec": "the sorted set to be \" wrapped \" in a synchronized sorted set ."}{"idx": 37888, "node_name": "s", "Dec": "the navigable set to be \" wrapped \" in a synchronized navigable set"}{"idx": 37890, "node_name": "list", "Dec": "the list to be \" wrapped \" in a synchronized list ."}{"idx": 37892, "node_name": "m", "Dec": "the map to be \" wrapped \" in a synchronized map ."}{"idx": 37894, "node_name": "m", "Dec": "the sorted map to be \" wrapped \" in a synchronized sorted map ."}{"idx": 37896, "node_name": "m", "Dec": "the navigable map to be \" wrapped \" in a synchronized navigable map"}{"idx": 37898, "node_name": "c", "Dec": "the collection for which a dynamically typesafe view is to be returned"}{"idx": 37899, "node_name": "type", "Dec": "the type of element that c is permitted to hold"}{"idx": 37901, "node_name": "queue", "Dec": "the queue for which a dynamically typesafe view is to be returned"}{"idx": 37902, "node_name": "type", "Dec": "the type of element that queue is permitted to hold"}{"idx": 37904, "node_name": "s", "Dec": "the set for which a dynamically typesafe view is to be returned"}{"idx": 37905, "node_name": "type", "Dec": "the type of element that s is permitted to hold"}{"idx": 37907, "node_name": "s", "Dec": "the sorted set for which a dynamically typesafe view is to be returned"}{"idx": 37908, "node_name": "type", "Dec": "the type of element that s is permitted to hold"}{"idx": 37910, "node_name": "s", "Dec": "the navigable set for which a dynamically typesafe view is to be returned"}{"idx": 37911, "node_name": "type", "Dec": "the type of element that s is permitted to hold"}{"idx": 37913, "node_name": "list", "Dec": "the list for which a dynamically typesafe view is to be returned"}{"idx": 37914, "node_name": "type", "Dec": "the type of element that list is permitted to hold"}{"idx": 37916, "node_name": "m", "Dec": "the map for which a dynamically typesafe view is to be returned"}{"idx": 37917, "node_name": "keytype", "Dec": "the type of key that m is permitted to hold"}{"idx": 37918, "node_name": "valuetype", "Dec": "the type of value that m is permitted to hold"}{"idx": 37920, "node_name": "m", "Dec": "the map for which a dynamically typesafe view is to be returned"}{"idx": 37921, "node_name": "keytype", "Dec": "the type of key that m is permitted to hold"}{"idx": 37922, "node_name": "valuetype", "Dec": "the type of value that m is permitted to hold"}{"idx": 37924, "node_name": "m", "Dec": "the map for which a dynamically typesafe view is to be returned"}{"idx": 37925, "node_name": "keytype", "Dec": "the type of key that m is permitted to hold"}{"idx": 37926, "node_name": "valuetype", "Dec": "the type of value that m is permitted to hold"}{"idx": 37938, "node_name": "o", "Dec": "the sole object to be stored in the returned set ."}{"idx": 37940, "node_name": "o", "Dec": "the sole object to be stored in the returned list ."}{"idx": 37942, "node_name": "key", "Dec": "the sole key to be stored in the returned map ."}{"idx": 37943, "node_name": "value", "Dec": "the value to which the returned map maps key ."}{"idx": 37945, "node_name": "n", "Dec": "the number of elements in the returned list ."}{"idx": 37946, "node_name": "o", "Dec": "the element to appear repeatedly in the returned list ."}{"idx": 37949, "node_name": "cmp", "Dec": "a comparator who's ordering is to be reversed by the returned comparator or null"}{"idx": 37951, "node_name": "c", "Dec": "the collection for which an enumeration is to be returned ."}{"idx": 37953, "node_name": "e", "Dec": "enumeration providing elements for the returned array list"}{"idx": 37955, "node_name": "c", "Dec": "the collection in which to determine the frequency of o"}{"idx": 37956, "node_name": "o", "Dec": "the object whose frequency is to be determined"}{"idx": 37958, "node_name": "c1", "Dec": "a collection"}{"idx": 37959, "node_name": "c2", "Dec": "a collection"}{"idx": 37961, "node_name": "c", "Dec": "the collection into which elements are to be inserted"}{"idx": 37962, "node_name": "elements", "Dec": "the elements to insert into c"}{"idx": 37964, "node_name": "map", "Dec": "the backing map"}{"idx": 37966, "node_name": "deque", "Dec": "the deque"}{"idx": 37969, "node_name": "o1", "Dec": "the first object to be compared ."}{"idx": 37970, "node_name": "o2", "Dec": "the second object to be compared ."}{"idx": 37972, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 37975, "node_name": "other", "Dec": "the other comparator to be used when this comparator compares two objects that are equal ."}{"idx": 37977, "node_name": "keyextractor", "Dec": "the function used to extract the sort key"}{"idx": 37978, "node_name": "keycomparator", "Dec": "the comparator used to compare the sort key"}{"idx": 37980, "node_name": "keyextractor", "Dec": "the function used to extract the comparable sort key"}{"idx": 37982, "node_name": "keyextractor", "Dec": "the function used to extract the integer sort key"}{"idx": 37984, "node_name": "keyextractor", "Dec": "the function used to extract the long sort key"}{"idx": 37986, "node_name": "keyextractor", "Dec": "the function used to extract the double sort key"}{"idx": 37990, "node_name": "comparator", "Dec": "a comparator for comparing non-null values"}{"idx": 37992, "node_name": "comparator", "Dec": "a comparator for comparing non-null values"}{"idx": 37994, "node_name": "keyextractor", "Dec": "the function used to extract the sort key"}{"idx": 37995, "node_name": "keycomparator", "Dec": "the comparator used to compare the sort key"}{"idx": 37997, "node_name": "keyextractor", "Dec": "the function used to extract the comparable sort key"}{"idx": 37999, "node_name": "keyextractor", "Dec": "the function used to extract the integer sort key"}{"idx": 38001, "node_name": "keyextractor", "Dec": "the function used to extract the long sort key"}{"idx": 38003, "node_name": "keyextractor", "Dec": "the function used to extract the double sort key"}{"idx": 38007, "node_name": "runnable", "Dec": "the runnable task being wrapped"}{"idx": 38008, "node_name": "value", "Dec": "the default value for the returned future"}{"idx": 38010, "node_name": "callable", "Dec": "the callable task being wrapped"}{"idx": 38012, "node_name": "task", "Dec": "the task to submit"}{"idx": 38014, "node_name": "task", "Dec": "the task to submit"}{"idx": 38015, "node_name": "result", "Dec": "the result to return"}{"idx": 38017, "node_name": "task", "Dec": "the task to submit"}{"idx": 38020, "node_name": "capacity", "Dec": "the capacity of this queue"}{"idx": 38022, "node_name": "capacity", "Dec": "the capacity of this queue"}{"idx": 38023, "node_name": "fair", "Dec": "if true then queue accesses for threads blocked on insertion or removal , are processed in fifo order ; if false the access order is unspecified ."}{"idx": 38025, "node_name": "capacity", "Dec": "the capacity of this queue"}{"idx": 38026, "node_name": "fair", "Dec": "if true then queue accesses for threads blocked on insertion or removal , are processed in fifo order ; if false the access order is unspecified ."}{"idx": 38027, "node_name": "c", "Dec": "the collection of elements to initially contain"}{"idx": 38029, "node_name": "e", "Dec": "the element to add"}{"idx": 38031, "node_name": "e", "Dec": "the element to add"}{"idx": 38033, "node_name": "e", "Dec": "the element to add"}{"idx": 38035, "node_name": "e", "Dec": "the element to add"}{"idx": 38036, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 38037, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 38041, "node_name": "o", "Dec": "element to be removed from this queue , if present"}{"idx": 38043, "node_name": "o", "Dec": "object to be checked for containment in this queue"}{"idx": 38046, "node_name": "a", "Dec": "the array into which the elements of the queue are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose"}{"idx": 38049, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 38051, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 38052, "node_name": "maxelements", "Dec": "the maximum number of elements to transfer"}{"idx": 38056, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 38058, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 38060, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 38062, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 38065, "node_name": "initialvalue", "Dec": "the initial value"}{"idx": 38069, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38070, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38072, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38073, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38075, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38077, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38079, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38083, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38086, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38089, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38091, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38092, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38094, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38095, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38097, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38098, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38100, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38101, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38103, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38104, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38106, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38107, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38110, "node_name": "initialvalue", "Dec": "the initial value"}{"idx": 38114, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38116, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38118, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38120, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38121, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38123, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38124, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38128, "node_name": "delta", "Dec": "the value to add"}{"idx": 38132, "node_name": "delta", "Dec": "the value to add"}{"idx": 38134, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38136, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38138, "node_name": "x", "Dec": "the update value"}{"idx": 38139, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38141, "node_name": "x", "Dec": "the update value"}{"idx": 38142, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38150, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38153, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38156, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38158, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38159, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38161, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38162, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38164, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38165, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38167, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38168, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38170, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38171, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38173, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38174, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38177, "node_name": "length", "Dec": "the length of the array"}{"idx": 38179, "node_name": "array", "Dec": "the array to copy elements from"}{"idx": 38182, "node_name": "i", "Dec": "the index"}{"idx": 38184, "node_name": "i", "Dec": "the index"}{"idx": 38185, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38187, "node_name": "i", "Dec": "the index"}{"idx": 38188, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38190, "node_name": "i", "Dec": "the index"}{"idx": 38191, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38193, "node_name": "i", "Dec": "the index"}{"idx": 38194, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38195, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38197, "node_name": "i", "Dec": "the index"}{"idx": 38198, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38199, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38201, "node_name": "i", "Dec": "the index"}{"idx": 38203, "node_name": "i", "Dec": "the index"}{"idx": 38205, "node_name": "i", "Dec": "the index"}{"idx": 38206, "node_name": "delta", "Dec": "the value to add"}{"idx": 38208, "node_name": "i", "Dec": "the index"}{"idx": 38210, "node_name": "i", "Dec": "the index"}{"idx": 38212, "node_name": "i", "Dec": "the index"}{"idx": 38213, "node_name": "delta", "Dec": "the value to add"}{"idx": 38215, "node_name": "i", "Dec": "the index"}{"idx": 38216, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38218, "node_name": "i", "Dec": "the index"}{"idx": 38219, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38221, "node_name": "i", "Dec": "the index"}{"idx": 38222, "node_name": "x", "Dec": "the update value"}{"idx": 38223, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38225, "node_name": "i", "Dec": "the index"}{"idx": 38226, "node_name": "x", "Dec": "the update value"}{"idx": 38227, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38230, "node_name": "i", "Dec": "the index"}{"idx": 38232, "node_name": "i", "Dec": "the index"}{"idx": 38233, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38235, "node_name": "i", "Dec": "the index"}{"idx": 38237, "node_name": "i", "Dec": "the index"}{"idx": 38238, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38240, "node_name": "i", "Dec": "the index"}{"idx": 38242, "node_name": "i", "Dec": "the index"}{"idx": 38243, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38245, "node_name": "i", "Dec": "the index"}{"idx": 38246, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38247, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38249, "node_name": "i", "Dec": "the index"}{"idx": 38250, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38251, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38253, "node_name": "i", "Dec": "the index"}{"idx": 38254, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38255, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38257, "node_name": "i", "Dec": "the index"}{"idx": 38258, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38259, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38261, "node_name": "i", "Dec": "the index"}{"idx": 38262, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38263, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38265, "node_name": "i", "Dec": "the index"}{"idx": 38266, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38267, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38271, "node_name": "tclass", "Dec": "the class of the objects holding the field"}{"idx": 38272, "node_name": "fieldname", "Dec": "the name of the field to be updated"}{"idx": 38274, "node_name": "obj", "Dec": "an object whose field to conditionally set"}{"idx": 38275, "node_name": "expect", "Dec": "the expected value"}{"idx": 38276, "node_name": "update", "Dec": "the new value"}{"idx": 38278, "node_name": "obj", "Dec": "an object whose field to conditionally set"}{"idx": 38279, "node_name": "expect", "Dec": "the expected value"}{"idx": 38280, "node_name": "update", "Dec": "the new value"}{"idx": 38282, "node_name": "obj", "Dec": "an object whose field to set"}{"idx": 38283, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38285, "node_name": "obj", "Dec": "an object whose field to set"}{"idx": 38286, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38288, "node_name": "obj", "Dec": "an object whose field to get"}{"idx": 38290, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38291, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38293, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38295, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38297, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38298, "node_name": "delta", "Dec": "the value to add"}{"idx": 38300, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38302, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38304, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38305, "node_name": "delta", "Dec": "the value to add"}{"idx": 38307, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38308, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38310, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38311, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38313, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38314, "node_name": "x", "Dec": "the update value"}{"idx": 38315, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38317, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38318, "node_name": "x", "Dec": "the update value"}{"idx": 38319, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38322, "node_name": "initialvalue", "Dec": "the initial value"}{"idx": 38326, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38328, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38330, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38332, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38333, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38335, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38336, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38340, "node_name": "delta", "Dec": "the value to add"}{"idx": 38344, "node_name": "delta", "Dec": "the value to add"}{"idx": 38346, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38348, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38350, "node_name": "x", "Dec": "the update value"}{"idx": 38351, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38353, "node_name": "x", "Dec": "the update value"}{"idx": 38354, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38362, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38365, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38368, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38370, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38371, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38373, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38374, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38376, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38377, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38379, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38380, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38382, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38383, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38385, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38386, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38389, "node_name": "length", "Dec": "the length of the array"}{"idx": 38391, "node_name": "array", "Dec": "the array to copy elements from"}{"idx": 38394, "node_name": "i", "Dec": "the index"}{"idx": 38396, "node_name": "i", "Dec": "the index"}{"idx": 38397, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38399, "node_name": "i", "Dec": "the index"}{"idx": 38400, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38402, "node_name": "i", "Dec": "the index"}{"idx": 38403, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38405, "node_name": "i", "Dec": "the index"}{"idx": 38406, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38407, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38409, "node_name": "i", "Dec": "the index"}{"idx": 38410, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38411, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38413, "node_name": "i", "Dec": "the index"}{"idx": 38415, "node_name": "i", "Dec": "the index"}{"idx": 38417, "node_name": "i", "Dec": "the index"}{"idx": 38418, "node_name": "delta", "Dec": "the value to add"}{"idx": 38420, "node_name": "i", "Dec": "the index"}{"idx": 38422, "node_name": "i", "Dec": "the index"}{"idx": 38424, "node_name": "i", "Dec": "the index"}{"idx": 38425, "node_name": "delta", "Dec": "the value to add"}{"idx": 38427, "node_name": "i", "Dec": "the index"}{"idx": 38428, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38430, "node_name": "i", "Dec": "the index"}{"idx": 38431, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38433, "node_name": "i", "Dec": "the index"}{"idx": 38434, "node_name": "x", "Dec": "the update value"}{"idx": 38435, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38437, "node_name": "i", "Dec": "the index"}{"idx": 38438, "node_name": "x", "Dec": "the update value"}{"idx": 38439, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38442, "node_name": "i", "Dec": "the index"}{"idx": 38444, "node_name": "i", "Dec": "the index"}{"idx": 38445, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38447, "node_name": "i", "Dec": "the index"}{"idx": 38449, "node_name": "i", "Dec": "the index"}{"idx": 38450, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38452, "node_name": "i", "Dec": "the index"}{"idx": 38454, "node_name": "i", "Dec": "the index"}{"idx": 38455, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38457, "node_name": "i", "Dec": "the index"}{"idx": 38458, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38459, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38461, "node_name": "i", "Dec": "the index"}{"idx": 38462, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38463, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38465, "node_name": "i", "Dec": "the index"}{"idx": 38466, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38467, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38469, "node_name": "i", "Dec": "the index"}{"idx": 38470, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38471, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38473, "node_name": "i", "Dec": "the index"}{"idx": 38474, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38475, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38477, "node_name": "i", "Dec": "the index"}{"idx": 38478, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38479, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38483, "node_name": "tclass", "Dec": "the class of the objects holding the field"}{"idx": 38484, "node_name": "fieldname", "Dec": "the name of the field to be updated"}{"idx": 38486, "node_name": "obj", "Dec": "an object whose field to conditionally set"}{"idx": 38487, "node_name": "expect", "Dec": "the expected value"}{"idx": 38488, "node_name": "update", "Dec": "the new value"}{"idx": 38490, "node_name": "obj", "Dec": "an object whose field to conditionally set"}{"idx": 38491, "node_name": "expect", "Dec": "the expected value"}{"idx": 38492, "node_name": "update", "Dec": "the new value"}{"idx": 38494, "node_name": "obj", "Dec": "an object whose field to set"}{"idx": 38495, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38497, "node_name": "obj", "Dec": "an object whose field to set"}{"idx": 38498, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38500, "node_name": "obj", "Dec": "an object whose field to get"}{"idx": 38502, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38503, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38505, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38507, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38509, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38510, "node_name": "delta", "Dec": "the value to add"}{"idx": 38512, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38514, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38516, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38517, "node_name": "delta", "Dec": "the value to add"}{"idx": 38519, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38520, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38522, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38523, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38525, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38526, "node_name": "x", "Dec": "the update value"}{"idx": 38527, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38529, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38530, "node_name": "x", "Dec": "the update value"}{"idx": 38531, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38534, "node_name": "initialref", "Dec": "the initial reference"}{"idx": 38535, "node_name": "initialmark", "Dec": "the initial mark"}{"idx": 38539, "node_name": "markholder", "Dec": "an array of size of at least one . on return , markholder [ 0 ] will hold the value of the mark ."}{"idx": 38541, "node_name": "expectedreference", "Dec": "the expected value of the reference"}{"idx": 38542, "node_name": "newreference", "Dec": "the new value for the reference"}{"idx": 38543, "node_name": "expectedmark", "Dec": "the expected value of the mark"}{"idx": 38544, "node_name": "newmark", "Dec": "the new value for the mark"}{"idx": 38546, "node_name": "expectedreference", "Dec": "the expected value of the reference"}{"idx": 38547, "node_name": "newreference", "Dec": "the new value for the reference"}{"idx": 38548, "node_name": "expectedmark", "Dec": "the expected value of the mark"}{"idx": 38549, "node_name": "newmark", "Dec": "the new value for the mark"}{"idx": 38551, "node_name": "newreference", "Dec": "the new value for the reference"}{"idx": 38552, "node_name": "newmark", "Dec": "the new value for the mark"}{"idx": 38554, "node_name": "expectedreference", "Dec": "the expected value of the reference"}{"idx": 38555, "node_name": "newmark", "Dec": "the new value for the mark"}{"idx": 38558, "node_name": "initialvalue", "Dec": "the initial value"}{"idx": 38562, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38564, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38566, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38567, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38569, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38570, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38572, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38574, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38576, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38578, "node_name": "x", "Dec": "the update value"}{"idx": 38579, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38581, "node_name": "x", "Dec": "the update value"}{"idx": 38582, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38586, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38589, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38592, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38594, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38595, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38597, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38598, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38600, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38601, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38603, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38604, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38606, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38607, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38609, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38610, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38613, "node_name": "length", "Dec": "the length of the array"}{"idx": 38615, "node_name": "array", "Dec": "the array to copy elements from"}{"idx": 38618, "node_name": "i", "Dec": "the index"}{"idx": 38620, "node_name": "i", "Dec": "the index"}{"idx": 38621, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38623, "node_name": "i", "Dec": "the index"}{"idx": 38624, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38626, "node_name": "i", "Dec": "the index"}{"idx": 38627, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38629, "node_name": "i", "Dec": "the index"}{"idx": 38630, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38631, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38633, "node_name": "i", "Dec": "the index"}{"idx": 38634, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38635, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38637, "node_name": "i", "Dec": "the index"}{"idx": 38638, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38640, "node_name": "i", "Dec": "the index"}{"idx": 38641, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38643, "node_name": "i", "Dec": "the index"}{"idx": 38644, "node_name": "x", "Dec": "the update value"}{"idx": 38645, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38647, "node_name": "i", "Dec": "the index"}{"idx": 38648, "node_name": "x", "Dec": "the update value"}{"idx": 38649, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38652, "node_name": "i", "Dec": "the index"}{"idx": 38654, "node_name": "i", "Dec": "the index"}{"idx": 38655, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38657, "node_name": "i", "Dec": "the index"}{"idx": 38659, "node_name": "i", "Dec": "the index"}{"idx": 38660, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38662, "node_name": "i", "Dec": "the index"}{"idx": 38664, "node_name": "i", "Dec": "the index"}{"idx": 38665, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38667, "node_name": "i", "Dec": "the index"}{"idx": 38668, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38669, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38671, "node_name": "i", "Dec": "the index"}{"idx": 38672, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38673, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38675, "node_name": "i", "Dec": "the index"}{"idx": 38676, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38677, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38679, "node_name": "i", "Dec": "the index"}{"idx": 38680, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38681, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38683, "node_name": "i", "Dec": "the index"}{"idx": 38684, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38685, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38687, "node_name": "i", "Dec": "the index"}{"idx": 38688, "node_name": "expectedvalue", "Dec": "the expected value"}{"idx": 38689, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38693, "node_name": "tclass", "Dec": "the class of the objects holding the field"}{"idx": 38694, "node_name": "vclass", "Dec": "the class of the field"}{"idx": 38695, "node_name": "fieldname", "Dec": "the name of the field to be updated"}{"idx": 38697, "node_name": "obj", "Dec": "an object whose field to conditionally set"}{"idx": 38698, "node_name": "expect", "Dec": "the expected value"}{"idx": 38699, "node_name": "update", "Dec": "the new value"}{"idx": 38701, "node_name": "obj", "Dec": "an object whose field to conditionally set"}{"idx": 38702, "node_name": "expect", "Dec": "the expected value"}{"idx": 38703, "node_name": "update", "Dec": "the new value"}{"idx": 38705, "node_name": "obj", "Dec": "an object whose field to set"}{"idx": 38706, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38708, "node_name": "obj", "Dec": "an object whose field to set"}{"idx": 38709, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38711, "node_name": "obj", "Dec": "an object whose field to get"}{"idx": 38713, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38714, "node_name": "newvalue", "Dec": "the new value"}{"idx": 38716, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38717, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38719, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38720, "node_name": "updatefunction", "Dec": "a side-effect-free function"}{"idx": 38722, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38723, "node_name": "x", "Dec": "the update value"}{"idx": 38724, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38726, "node_name": "obj", "Dec": "an object whose field to get and set"}{"idx": 38727, "node_name": "x", "Dec": "the update value"}{"idx": 38728, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38731, "node_name": "initialref", "Dec": "the initial reference"}{"idx": 38732, "node_name": "initialstamp", "Dec": "the initial stamp"}{"idx": 38736, "node_name": "stampholder", "Dec": "an array of size of at least one . on return , stampholder [ 0 ] will hold the value of the stamp ."}{"idx": 38738, "node_name": "expectedreference", "Dec": "the expected value of the reference"}{"idx": 38739, "node_name": "newreference", "Dec": "the new value for the reference"}{"idx": 38740, "node_name": "expectedstamp", "Dec": "the expected value of the stamp"}{"idx": 38741, "node_name": "newstamp", "Dec": "the new value for the stamp"}{"idx": 38743, "node_name": "expectedreference", "Dec": "the expected value of the reference"}{"idx": 38744, "node_name": "newreference", "Dec": "the new value for the reference"}{"idx": 38745, "node_name": "expectedstamp", "Dec": "the expected value of the stamp"}{"idx": 38746, "node_name": "newstamp", "Dec": "the new value for the stamp"}{"idx": 38748, "node_name": "newreference", "Dec": "the new value for the reference"}{"idx": 38749, "node_name": "newstamp", "Dec": "the new value for the stamp"}{"idx": 38751, "node_name": "expectedreference", "Dec": "the expected value of the reference"}{"idx": 38752, "node_name": "newstamp", "Dec": "the new value for the stamp"}{"idx": 38755, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38756, "node_name": "identity", "Dec": "identity ( initial value ) for the accumulator function"}{"idx": 38758, "node_name": "x", "Dec": "the value"}{"idx": 38770, "node_name": "x", "Dec": "the value to add"}{"idx": 38781, "node_name": "accumulatorfunction", "Dec": "a side-effect-free function of two arguments"}{"idx": 38782, "node_name": "identity", "Dec": "identity ( initial value ) for the accumulator function"}{"idx": 38784, "node_name": "x", "Dec": "the value"}{"idx": 38796, "node_name": "x", "Dec": "the value to add"}{"idx": 38809, "node_name": "e", "Dec": "the element to add"}{"idx": 38811, "node_name": "e", "Dec": "the element to add"}{"idx": 38813, "node_name": "e", "Dec": "the element to add"}{"idx": 38815, "node_name": "e", "Dec": "the element to add"}{"idx": 38817, "node_name": "e", "Dec": "the element to add"}{"idx": 38819, "node_name": "e", "Dec": "the element to add"}{"idx": 38821, "node_name": "e", "Dec": "the element to add"}{"idx": 38822, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 38823, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 38825, "node_name": "e", "Dec": "the element to add"}{"idx": 38826, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 38827, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 38831, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 38832, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 38834, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 38835, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 38837, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 38839, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 38841, "node_name": "e", "Dec": "the element to add"}{"idx": 38843, "node_name": "e", "Dec": "the element to add"}{"idx": 38845, "node_name": "e", "Dec": "the element to add"}{"idx": 38847, "node_name": "e", "Dec": "the element to add"}{"idx": 38848, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 38849, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 38854, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 38855, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 38859, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 38861, "node_name": "o", "Dec": "object to be checked for containment in this deque"}{"idx": 38865, "node_name": "e", "Dec": "the element to push"}{"idx": 38868, "node_name": "e", "Dec": "the element to add"}{"idx": 38870, "node_name": "e", "Dec": "the element to add"}{"idx": 38872, "node_name": "e", "Dec": "the element to add"}{"idx": 38874, "node_name": "e", "Dec": "the element to add"}{"idx": 38875, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 38876, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 38879, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 38880, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 38883, "node_name": "o", "Dec": "element to be removed from this queue , if present"}{"idx": 38885, "node_name": "o", "Dec": "object to be checked for containment in this queue"}{"idx": 38887, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 38889, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 38890, "node_name": "maxelements", "Dec": "the maximum number of elements to transfer"}{"idx": 38894, "node_name": "message", "Dec": "the detail message"}{"idx": 38900, "node_name": "message", "Dec": "the detail message"}{"idx": 38905, "node_name": "supplier", "Dec": "a function returning the value to be used to complete the returned completablefuture"}{"idx": 38907, "node_name": "supplier", "Dec": "a function returning the value to be used to complete the returned completablefuture"}{"idx": 38908, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 38910, "node_name": "runnable", "Dec": "the action to run before completing the returned completablefuture"}{"idx": 38912, "node_name": "runnable", "Dec": "the action to run before completing the returned completablefuture"}{"idx": 38913, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 38915, "node_name": "value", "Dec": "the value"}{"idx": 38919, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 38920, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 38923, "node_name": "valueifabsent", "Dec": "the value to return if not completed"}{"idx": 38925, "node_name": "value", "Dec": "the result value"}{"idx": 38927, "node_name": "ex", "Dec": "the exception"}{"idx": 38929, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38931, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38933, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38934, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 38936, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38938, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38940, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38941, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 38943, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38944, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38946, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38947, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38949, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38950, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38951, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 38953, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38954, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38956, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38957, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38959, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38960, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38961, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 38963, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38964, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38966, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38967, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38969, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38970, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38971, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 38973, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38974, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38976, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38977, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38979, "node_name": "other", "Dec": "the other completionstage"}{"idx": 38980, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 38981, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 38984, "node_name": "cfs", "Dec": "the completablefutures"}{"idx": 38986, "node_name": "cfs", "Dec": "the completablefutures"}{"idx": 38988, "node_name": "mayinterruptifrunning", "Dec": "this value has no effect in this implementation because interrupts are not used to control processing ."}{"idx": 38992, "node_name": "value", "Dec": "the completion value"}{"idx": 38994, "node_name": "ex", "Dec": "the exception"}{"idx": 39002, "node_name": "supplier", "Dec": "a function returning the value to be used to complete this completablefuture"}{"idx": 39003, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39005, "node_name": "supplier", "Dec": "a function returning the value to be used to complete this completablefuture"}{"idx": 39007, "node_name": "timeout", "Dec": "how long to wait before completing exceptionally with a timeoutexception , in units of unit"}{"idx": 39008, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 39010, "node_name": "value", "Dec": "the value to use upon timeout"}{"idx": 39011, "node_name": "timeout", "Dec": "how long to wait before completing normally with the given value , in units of unit"}{"idx": 39012, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 39014, "node_name": "delay", "Dec": "how long to delay , in units of unit"}{"idx": 39015, "node_name": "unit", "Dec": "a timeunit determining how to interpret the delay parameter"}{"idx": 39016, "node_name": "executor", "Dec": "the base executor"}{"idx": 39018, "node_name": "delay", "Dec": "how long to delay , in units of unit"}{"idx": 39019, "node_name": "unit", "Dec": "a timeunit determining how to interpret the delay parameter"}{"idx": 39021, "node_name": "value", "Dec": "the value"}{"idx": 39023, "node_name": "ex", "Dec": "the exception"}{"idx": 39025, "node_name": "ex", "Dec": "the exception"}{"idx": 39029, "node_name": "message", "Dec": "the detail message"}{"idx": 39031, "node_name": "message", "Dec": "the detail message"}{"idx": 39032, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method )"}{"idx": 39034, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method )"}{"idx": 39037, "node_name": "task", "Dec": "the task to submit"}{"idx": 39039, "node_name": "task", "Dec": "the task to submit"}{"idx": 39040, "node_name": "result", "Dec": "the result to return upon successful completion"}{"idx": 39044, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 39045, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 39048, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39050, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39052, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39053, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39055, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39057, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39059, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39060, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39062, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39064, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39066, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39067, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39069, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39070, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39072, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39073, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39075, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39076, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39077, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39079, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39080, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39082, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39083, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39085, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39086, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39087, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39089, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39090, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39092, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39093, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39095, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39096, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39097, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39099, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39100, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39102, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39103, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39105, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39106, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39107, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39109, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39110, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39112, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39113, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39115, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39116, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39117, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39119, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39120, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39122, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39123, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39125, "node_name": "other", "Dec": "the other completionstage"}{"idx": 39126, "node_name": "action", "Dec": "the action to perform before completing the returned completionstage"}{"idx": 39127, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39129, "node_name": "fn", "Dec": "the function to use to compute another completionstage"}{"idx": 39131, "node_name": "fn", "Dec": "the function to use to compute another completionstage"}{"idx": 39133, "node_name": "fn", "Dec": "the function to use to compute another completionstage"}{"idx": 39134, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39136, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39138, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39140, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage"}{"idx": 39141, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39143, "node_name": "action", "Dec": "the action to perform"}{"idx": 39145, "node_name": "action", "Dec": "the action to perform"}{"idx": 39147, "node_name": "action", "Dec": "the action to perform"}{"idx": 39148, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39150, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage if this completionstage completed exceptionally"}{"idx": 39152, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage if this completionstage completed exceptionally"}{"idx": 39154, "node_name": "fn", "Dec": "the function to use to compute the value of the returned completionstage if this completionstage completed exceptionally"}{"idx": 39155, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39157, "node_name": "fn", "Dec": "the function to use to compute the returned completionstage if this completionstage completed exceptionally"}{"idx": 39159, "node_name": "fn", "Dec": "the function to use to compute the returned completionstage if this completionstage completed exceptionally"}{"idx": 39161, "node_name": "fn", "Dec": "the function to use to compute the returned completionstage if this completionstage completed exceptionally"}{"idx": 39162, "node_name": "executor", "Dec": "the executor to use for asynchronous execution"}{"idx": 39167, "node_name": "initialcapacity", "Dec": "the implementation performs internal sizing to accommodate this many elements ."}{"idx": 39169, "node_name": "m", "Dec": "the map"}{"idx": 39171, "node_name": "initialcapacity", "Dec": "the initial capacity . the implementation performs internal sizing to accommodate this many elements , given the specified load factor ."}{"idx": 39172, "node_name": "loadfactor", "Dec": "the load factor ( table density ) for establishing the initial table size"}{"idx": 39174, "node_name": "initialcapacity", "Dec": "the initial capacity . the implementation performs internal sizing to accommodate this many elements , given the specified load factor ."}{"idx": 39175, "node_name": "loadfactor", "Dec": "the load factor ( table density ) for establishing the initial table size"}{"idx": 39176, "node_name": "concurrencylevel", "Dec": "the estimated number of concurrently updating threads . the implementation may use this value as a sizing hint ."}{"idx": 39178, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 39180, "node_name": "key", "Dec": "possible key"}{"idx": 39182, "node_name": "value", "Dec": "value whose presence in this map is to be tested"}{"idx": 39184, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39185, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 39187, "node_name": "m", "Dec": "mappings to be stored in this map"}{"idx": 39189, "node_name": "key", "Dec": "the key that needs to be removed"}{"idx": 39197, "node_name": "o", "Dec": "object to be compared for equality with this map"}{"idx": 39199, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39200, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 39202, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 39203, "node_name": "value", "Dec": "value expected to be associated with the specified key"}{"idx": 39205, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 39206, "node_name": "oldvalue", "Dec": "value expected to be associated with the specified key"}{"idx": 39207, "node_name": "newvalue", "Dec": "value to be associated with the specified key"}{"idx": 39209, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 39210, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 39212, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 39213, "node_name": "defaultvalue", "Dec": "the value to return if this map contains no mapping for the given key"}{"idx": 39215, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39216, "node_name": "mappingfunction", "Dec": "the function to compute a value"}{"idx": 39218, "node_name": "key", "Dec": "key with which a value may be associated"}{"idx": 39219, "node_name": "remappingfunction", "Dec": "the function to compute a value"}{"idx": 39221, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39222, "node_name": "remappingfunction", "Dec": "the function to compute a value"}{"idx": 39224, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39225, "node_name": "value", "Dec": "the value to use if absent"}{"idx": 39226, "node_name": "remappingfunction", "Dec": "the function to recompute a value if present"}{"idx": 39228, "node_name": "value", "Dec": "a value to search for"}{"idx": 39234, "node_name": "initialcapacity", "Dec": "the implementation performs internal sizing to accommodate this many elements ."}{"idx": 39236, "node_name": "mappedvalue", "Dec": "the mapped value to use for any additions"}{"idx": 39238, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39239, "node_name": "action", "Dec": "the action"}{"idx": 39241, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39242, "node_name": "transformer", "Dec": "a function returning the transformation for an element , or null if there is no transformation ( in which case the action is not applied )"}{"idx": 39243, "node_name": "action", "Dec": "the action"}{"idx": 39245, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39246, "node_name": "searchfunction", "Dec": "a function returning a non-null result on success , else null"}{"idx": 39248, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39249, "node_name": "transformer", "Dec": "a function returning the transformation for an element , or null if there is no transformation ( in which case it is not combined )"}{"idx": 39250, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39252, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39253, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39254, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39255, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39257, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39258, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39259, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39260, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39262, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39263, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39264, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39265, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39267, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39268, "node_name": "action", "Dec": "the action"}{"idx": 39270, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39271, "node_name": "transformer", "Dec": "a function returning the transformation for an element , or null if there is no transformation ( in which case the action is not applied )"}{"idx": 39272, "node_name": "action", "Dec": "the action"}{"idx": 39274, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39275, "node_name": "searchfunction", "Dec": "a function returning a non-null result on success , else null"}{"idx": 39277, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39278, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39280, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39281, "node_name": "transformer", "Dec": "a function returning the transformation for an element , or null if there is no transformation ( in which case it is not combined )"}{"idx": 39282, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39284, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39285, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39286, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39287, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39289, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39290, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39291, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39292, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39294, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39295, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39296, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39297, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39299, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39300, "node_name": "action", "Dec": "the action"}{"idx": 39302, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39303, "node_name": "transformer", "Dec": "a function returning the transformation for an element , or null if there is no transformation ( in which case the action is not applied )"}{"idx": 39304, "node_name": "action", "Dec": "the action"}{"idx": 39306, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39307, "node_name": "searchfunction", "Dec": "a function returning a non-null result on success , else null"}{"idx": 39309, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39310, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39312, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39313, "node_name": "transformer", "Dec": "a function returning the transformation for an element , or null if there is no transformation ( in which case it is not combined )"}{"idx": 39314, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39316, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39317, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39318, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39319, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39321, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39322, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39323, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39324, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39326, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39327, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39328, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39329, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39331, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39332, "node_name": "action", "Dec": "the action"}{"idx": 39334, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39335, "node_name": "transformer", "Dec": "a function returning the transformation for an element , or null if there is no transformation ( in which case the action is not applied )"}{"idx": 39336, "node_name": "action", "Dec": "the action"}{"idx": 39338, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39339, "node_name": "searchfunction", "Dec": "a function returning a non-null result on success , else null"}{"idx": 39341, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39342, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39344, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39345, "node_name": "transformer", "Dec": "a function returning the transformation for an element , or null if there is no transformation ( in which case it is not combined )"}{"idx": 39346, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39348, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39349, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39350, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39351, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39353, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39354, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39355, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39356, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39358, "node_name": "parallelismthreshold", "Dec": "the ( estimated ) number of elements needed for this operation to be executed in parallel"}{"idx": 39359, "node_name": "transformer", "Dec": "a function returning the transformation for an element"}{"idx": 39360, "node_name": "basis", "Dec": "the identity ( initial default value ) for the reduction"}{"idx": 39361, "node_name": "reducer", "Dec": "a commutative associative combining function"}{"idx": 39365, "node_name": "o", "Dec": "element whose presence in this collection is to be tested"}{"idx": 39367, "node_name": "o", "Dec": "the key to be removed from the backing map"}{"idx": 39370, "node_name": "e", "Dec": "key to be added"}{"idx": 39372, "node_name": "c", "Dec": "the elements to be inserted into this set"}{"idx": 39379, "node_name": "a", "Dec": "the array into which the elements of this collection are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 39382, "node_name": "c", "Dec": "collection to be checked for containment in this collection"}{"idx": 39384, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 39386, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 39390, "node_name": "c", "Dec": "the collection of elements to initially contain"}{"idx": 39392, "node_name": "e", "Dec": "the element to add"}{"idx": 39394, "node_name": "e", "Dec": "the element to add"}{"idx": 39396, "node_name": "e", "Dec": "the element to add"}{"idx": 39398, "node_name": "e", "Dec": "the element to add"}{"idx": 39404, "node_name": "e", "Dec": "the element to add"}{"idx": 39406, "node_name": "e", "Dec": "element whose presence in this collection is to be ensured"}{"idx": 39411, "node_name": "e", "Dec": "the element to push"}{"idx": 39413, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 39415, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 39417, "node_name": "o", "Dec": "element whose presence in this deque is to be tested"}{"idx": 39421, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 39423, "node_name": "c", "Dec": "the elements to be inserted into this deque"}{"idx": 39427, "node_name": "a", "Dec": "the array into which the elements of the deque are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose"}{"idx": 39432, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 39434, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 39436, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 39438, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 39442, "node_name": "c", "Dec": "the collection of elements to initially contain"}{"idx": 39444, "node_name": "e", "Dec": "the element to add"}{"idx": 39446, "node_name": "e", "Dec": "the element to add"}{"idx": 39450, "node_name": "o", "Dec": "object to be checked for containment in this queue"}{"idx": 39452, "node_name": "o", "Dec": "element to be removed from this queue , if present"}{"idx": 39454, "node_name": "c", "Dec": "the elements to be inserted into this queue"}{"idx": 39457, "node_name": "a", "Dec": "the array into which the elements of the queue are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose"}{"idx": 39461, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 39463, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 39465, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 39467, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 39470, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 39471, "node_name": "defaultvalue", "Dec": "the default mapping of the key"}{"idx": 39473, "node_name": "action", "Dec": "the action to be performed for each entry"}{"idx": 39475, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39476, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 39478, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 39479, "node_name": "value", "Dec": "value expected to be associated with the specified key"}{"idx": 39481, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 39482, "node_name": "oldvalue", "Dec": "value expected to be associated with the specified key"}{"idx": 39483, "node_name": "newvalue", "Dec": "value to be associated with the specified key"}{"idx": 39485, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 39486, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 39488, "node_name": "function", "Dec": "the function to apply to each entry"}{"idx": 39490, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39491, "node_name": "mappingfunction", "Dec": "the mapping function to compute a value"}{"idx": 39493, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39494, "node_name": "remappingfunction", "Dec": "the remapping function to compute a value"}{"idx": 39496, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39497, "node_name": "remappingfunction", "Dec": "the remapping function to compute a value"}{"idx": 39499, "node_name": "key", "Dec": "key with which the resulting value is to be associated"}{"idx": 39500, "node_name": "value", "Dec": "the non-null value to be merged with the existing value associated with the key or , if no existing value or a null value is associated with the key , to be associated with the key"}{"idx": 39501, "node_name": "remappingfunction", "Dec": "the remapping function to recompute a value if present"}{"idx": 39504, "node_name": "fromkey", "Dec": "low endpoint of the keys in the returned map"}{"idx": 39505, "node_name": "frominclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 39506, "node_name": "tokey", "Dec": "high endpoint of the keys in the returned map"}{"idx": 39507, "node_name": "toinclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 39509, "node_name": "tokey", "Dec": "high endpoint of the keys in the returned map"}{"idx": 39510, "node_name": "inclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 39512, "node_name": "fromkey", "Dec": "low endpoint of the keys in the returned map"}{"idx": 39513, "node_name": "inclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 39515, "node_name": "fromkey", "Dec": "low endpoint ( inclusive ) of the keys in the returned map"}{"idx": 39516, "node_name": "tokey", "Dec": "high endpoint ( exclusive ) of the keys in the returned map"}{"idx": 39518, "node_name": "tokey", "Dec": "high endpoint ( exclusive ) of the keys in the returned map"}{"idx": 39520, "node_name": "fromkey", "Dec": "low endpoint ( inclusive ) of the keys in the returned map"}{"idx": 39528, "node_name": "comparator", "Dec": "the comparator that will be used to order this map . if null , the natural ordering of the keys will be used ."}{"idx": 39530, "node_name": "m", "Dec": "the map whose mappings are to be placed in this map"}{"idx": 39532, "node_name": "m", "Dec": "the sorted map whose mappings are to be placed in this map , and whose comparator is to be used to sort this map"}{"idx": 39535, "node_name": "key", "Dec": "key whose presence in this map is to be tested"}{"idx": 39537, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 39539, "node_name": "key", "Dec": "the key"}{"idx": 39540, "node_name": "defaultvalue", "Dec": "the value to return if this map contains no mapping for the given key"}{"idx": 39542, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39543, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 39545, "node_name": "key", "Dec": "key for which mapping should be removed"}{"idx": 39547, "node_name": "value", "Dec": "value whose presence in this map is to be tested"}{"idx": 39550, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39551, "node_name": "mappingfunction", "Dec": "the function to compute a value"}{"idx": 39553, "node_name": "key", "Dec": "key with which a value may be associated"}{"idx": 39554, "node_name": "remappingfunction", "Dec": "the function to compute a value"}{"idx": 39556, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39557, "node_name": "remappingfunction", "Dec": "the function to compute a value"}{"idx": 39559, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39560, "node_name": "value", "Dec": "the value to use if absent"}{"idx": 39561, "node_name": "remappingfunction", "Dec": "the function to recompute a value if present"}{"idx": 39566, "node_name": "o", "Dec": "object to be compared for equality with this map"}{"idx": 39568, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 39569, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 39571, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 39572, "node_name": "value", "Dec": "value expected to be associated with the specified key"}{"idx": 39574, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 39575, "node_name": "oldvalue", "Dec": "value expected to be associated with the specified key"}{"idx": 39576, "node_name": "newvalue", "Dec": "value to be associated with the specified key"}{"idx": 39578, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 39579, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 39583, "node_name": "fromkey", "Dec": "low endpoint of the keys in the returned map"}{"idx": 39584, "node_name": "frominclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 39585, "node_name": "tokey", "Dec": "high endpoint of the keys in the returned map"}{"idx": 39586, "node_name": "toinclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 39588, "node_name": "tokey", "Dec": "high endpoint of the keys in the returned map"}{"idx": 39589, "node_name": "inclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 39591, "node_name": "fromkey", "Dec": "low endpoint of the keys in the returned map"}{"idx": 39592, "node_name": "inclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 39594, "node_name": "fromkey", "Dec": "low endpoint ( inclusive ) of the keys in the returned map"}{"idx": 39595, "node_name": "tokey", "Dec": "high endpoint ( exclusive ) of the keys in the returned map"}{"idx": 39597, "node_name": "tokey", "Dec": "high endpoint ( exclusive ) of the keys in the returned map"}{"idx": 39599, "node_name": "fromkey", "Dec": "low endpoint ( inclusive ) of the keys in the returned map"}{"idx": 39601, "node_name": "key", "Dec": "the key"}{"idx": 39603, "node_name": "key", "Dec": "the key"}{"idx": 39605, "node_name": "key", "Dec": "the key"}{"idx": 39607, "node_name": "key", "Dec": "the key"}{"idx": 39609, "node_name": "key", "Dec": "the key"}{"idx": 39611, "node_name": "key", "Dec": "the key"}{"idx": 39613, "node_name": "key", "Dec": "the key"}{"idx": 39615, "node_name": "key", "Dec": "the key"}{"idx": 39623, "node_name": "comparator", "Dec": "the comparator that will be used to order this set . if null , the natural ordering of the elements will be used ."}{"idx": 39625, "node_name": "c", "Dec": "the elements that will comprise the new set"}{"idx": 39627, "node_name": "s", "Dec": "sorted set whose elements will comprise the new set"}{"idx": 39632, "node_name": "o", "Dec": "object to be checked for containment in this set"}{"idx": 39634, "node_name": "e", "Dec": "element to be added to this set"}{"idx": 39636, "node_name": "o", "Dec": "object to be removed from this set , if present"}{"idx": 39641, "node_name": "o", "Dec": "the object to be compared for equality with this set"}{"idx": 39643, "node_name": "c", "Dec": "collection containing elements to be removed from this set"}{"idx": 39645, "node_name": "e", "Dec": "the value to match"}{"idx": 39647, "node_name": "e", "Dec": "the value to match"}{"idx": 39649, "node_name": "e", "Dec": "the value to match"}{"idx": 39651, "node_name": "e", "Dec": "the value to match"}{"idx": 39655, "node_name": "fromelement", "Dec": "low endpoint of the returned set"}{"idx": 39656, "node_name": "frominclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 39657, "node_name": "toelement", "Dec": "high endpoint of the returned set"}{"idx": 39658, "node_name": "toinclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 39660, "node_name": "toelement", "Dec": "high endpoint of the returned set"}{"idx": 39661, "node_name": "inclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 39663, "node_name": "fromelement", "Dec": "low endpoint of the returned set"}{"idx": 39664, "node_name": "inclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 39666, "node_name": "fromelement", "Dec": "low endpoint ( inclusive ) of the returned set"}{"idx": 39667, "node_name": "toelement", "Dec": "high endpoint ( exclusive ) of the returned set"}{"idx": 39669, "node_name": "toelement", "Dec": "high endpoint ( exclusive ) of the returned set"}{"idx": 39671, "node_name": "fromelement", "Dec": "low endpoint ( inclusive ) of the returned set"}{"idx": 39677, "node_name": "c", "Dec": "the collection of initially held elements"}{"idx": 39679, "node_name": "tocopyin", "Dec": "the array ( a copy of this array is used as the internal array )"}{"idx": 39683, "node_name": "o", "Dec": "element whose presence in this list is to be tested"}{"idx": 39685, "node_name": "e", "Dec": "element to search for"}{"idx": 39686, "node_name": "index", "Dec": "index to start searching from"}{"idx": 39688, "node_name": "e", "Dec": "element to search for"}{"idx": 39689, "node_name": "index", "Dec": "index to start searching backwards from"}{"idx": 39693, "node_name": "a", "Dec": "the array into which the elements of the list are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 39695, "node_name": "index", "Dec": "index of the element to return"}{"idx": 39697, "node_name": "index", "Dec": "index of the element to replace"}{"idx": 39698, "node_name": "element", "Dec": "element to be stored at the specified position"}{"idx": 39700, "node_name": "e", "Dec": "element to be appended to this list"}{"idx": 39702, "node_name": "index", "Dec": "index at which the specified element is to be inserted"}{"idx": 39703, "node_name": "element", "Dec": "element to be inserted"}{"idx": 39705, "node_name": "index", "Dec": "the index of the element to be removed"}{"idx": 39707, "node_name": "o", "Dec": "element to be removed from this list , if present"}{"idx": 39709, "node_name": "e", "Dec": "element to be added to this list , if absent"}{"idx": 39711, "node_name": "c", "Dec": "collection to be checked for containment in this list"}{"idx": 39713, "node_name": "c", "Dec": "collection containing elements to be removed from this list"}{"idx": 39715, "node_name": "c", "Dec": "collection containing elements to be retained in this list"}{"idx": 39717, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 39720, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 39722, "node_name": "index", "Dec": "index at which to insert the first element from the specified collection"}{"idx": 39723, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 39725, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 39727, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 39730, "node_name": "o", "Dec": "the object to be compared for equality with this list"}{"idx": 39735, "node_name": "index", "Dec": "index of the first element to be returned from the list iterator ( by a call to next )"}{"idx": 39738, "node_name": "fromindex", "Dec": "low endpoint ( inclusive ) of the sublist"}{"idx": 39739, "node_name": "toindex", "Dec": "high endpoint ( exclusive ) of the sublist"}{"idx": 39743, "node_name": "c", "Dec": "the collection of elements to initially contain"}{"idx": 39747, "node_name": "o", "Dec": "element whose presence in this set is to be tested"}{"idx": 39750, "node_name": "a", "Dec": "the array into which the elements of this set are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 39753, "node_name": "o", "Dec": "object to be removed from this set , if present"}{"idx": 39755, "node_name": "e", "Dec": "element to be added to this set"}{"idx": 39757, "node_name": "c", "Dec": "collection to be checked for containment in this set"}{"idx": 39759, "node_name": "c", "Dec": "collection containing elements to be added to this set"}{"idx": 39761, "node_name": "c", "Dec": "collection containing elements to be removed from this set"}{"idx": 39763, "node_name": "c", "Dec": "collection containing elements to be retained in this set"}{"idx": 39766, "node_name": "o", "Dec": "object to be compared for equality with this set"}{"idx": 39768, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 39770, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 39774, "node_name": "count", "Dec": "the number of times countdown() must be invoked before threads can pass through await()"}{"idx": 39777, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 39778, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 39784, "node_name": "completer", "Dec": "this task's completer , or null if none"}{"idx": 39785, "node_name": "initialpendingcount", "Dec": "the initial pending count"}{"idx": 39787, "node_name": "completer", "Dec": "this task's completer , or null if none"}{"idx": 39791, "node_name": "caller", "Dec": "the task invoking onCompletion(java.util.concurrent.CountedCompleter) ( which may be this task itself )"}{"idx": 39793, "node_name": "ex", "Dec": "the exception"}{"idx": 39794, "node_name": "caller", "Dec": "the task invoking onExceptionalCompletion(java.lang.Throwable,java.util.concurrent.CountedCompleter) ( which may be this task itself )"}{"idx": 39798, "node_name": "count", "Dec": "the count"}{"idx": 39800, "node_name": "delta", "Dec": "the value to add"}{"idx": 39802, "node_name": "expected", "Dec": "the expected value"}{"idx": 39803, "node_name": "count", "Dec": "the new value"}{"idx": 39809, "node_name": "rawresult", "Dec": "the raw result"}{"idx": 39814, "node_name": "maxtasks", "Dec": "the maximum number of tasks to process . if less than or equal to zero , then no tasks are processed ."}{"idx": 39818, "node_name": "t", "Dec": "the value"}{"idx": 39821, "node_name": "parties", "Dec": "the number of threads that must invoke await() before the barrier is tripped"}{"idx": 39822, "node_name": "barrieraction", "Dec": "the command to execute when the barrier is tripped , or null if there is no action"}{"idx": 39824, "node_name": "parties", "Dec": "the number of threads that must invoke await() before the barrier is tripped"}{"idx": 39828, "node_name": "timeout", "Dec": "the time to wait for the barrier"}{"idx": 39829, "node_name": "unit", "Dec": "the time unit of the timeout parameter"}{"idx": 39835, "node_name": "unit", "Dec": "the time unit"}{"idx": 39839, "node_name": "c", "Dec": "the collection of elements to initially contain"}{"idx": 39841, "node_name": "e", "Dec": "the element to add"}{"idx": 39843, "node_name": "e", "Dec": "the element to add"}{"idx": 39845, "node_name": "e", "Dec": "the element to add"}{"idx": 39847, "node_name": "e", "Dec": "the element to add"}{"idx": 39848, "node_name": "timeout", "Dec": "this parameter is ignored as offer(java.util.concurrent.Delayed,long,java.util.concurrent.TimeUnit) never blocks"}{"idx": 39849, "node_name": "unit", "Dec": "this parameter is ignored as offer(java.util.concurrent.Delayed,long,java.util.concurrent.TimeUnit) never blocks"}{"idx": 39853, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 39854, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 39857, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 39859, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 39860, "node_name": "maxelements", "Dec": "the maximum number of elements to transfer"}{"idx": 39865, "node_name": "a", "Dec": "the array into which the elements of the queue are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose"}{"idx": 39867, "node_name": "o", "Dec": "element to be removed from this collection , if present"}{"idx": 39872, "node_name": "x", "Dec": "the object to exchange"}{"idx": 39874, "node_name": "x", "Dec": "the object to exchange"}{"idx": 39875, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 39876, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 39880, "node_name": "message", "Dec": "the detail message"}{"idx": 39882, "node_name": "message", "Dec": "the detail message"}{"idx": 39883, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method )"}{"idx": 39885, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method )"}{"idx": 39888, "node_name": "command", "Dec": "the runnable task"}{"idx": 39891, "node_name": "executor", "Dec": "the executor to use"}{"idx": 39893, "node_name": "executor", "Dec": "the executor to use"}{"idx": 39894, "node_name": "completionqueue", "Dec": "the queue to use as the completion queue normally one dedicated for use by this service . this queue is treated as unbounded -- failed attempted queue.add operations for completed tasks cause them not to be retrievable ."}{"idx": 39896, "node_name": "task", "Dec": "the task to submit"}{"idx": 39898, "node_name": "task", "Dec": "the task to submit"}{"idx": 39899, "node_name": "result", "Dec": "the result to return upon successful completion"}{"idx": 39902, "node_name": "nthreads", "Dec": "the number of threads in the pool"}{"idx": 39904, "node_name": "parallelism", "Dec": "the targeted parallelism level"}{"idx": 39907, "node_name": "nthreads", "Dec": "the number of threads in the pool"}{"idx": 39908, "node_name": "threadfactory", "Dec": "the factory to use when creating new threads"}{"idx": 39911, "node_name": "threadfactory", "Dec": "the factory to use when creating new threads"}{"idx": 39914, "node_name": "threadfactory", "Dec": "the factory to use when creating new threads"}{"idx": 39917, "node_name": "threadfactory", "Dec": "the factory to use when creating new threads"}{"idx": 39919, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool , even if they are idle"}{"idx": 39921, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool , even if they are idle"}{"idx": 39922, "node_name": "threadfactory", "Dec": "the factory to use when the executor creates a new thread"}{"idx": 39924, "node_name": "executor", "Dec": "the underlying implementation"}{"idx": 39926, "node_name": "executor", "Dec": "the underlying implementation"}{"idx": 39930, "node_name": "task", "Dec": "the task to run"}{"idx": 39931, "node_name": "result", "Dec": "the result to return"}{"idx": 39933, "node_name": "task", "Dec": "the task to run"}{"idx": 39935, "node_name": "action", "Dec": "the privileged action to run"}{"idx": 39937, "node_name": "action", "Dec": "the privileged exception action to run"}{"idx": 39939, "node_name": "callable", "Dec": "the underlying task"}{"idx": 39941, "node_name": "callable", "Dec": "the underlying task"}{"idx": 39948, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 39949, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 39951, "node_name": "task", "Dec": "the task to submit"}{"idx": 39953, "node_name": "task", "Dec": "the task to submit"}{"idx": 39954, "node_name": "result", "Dec": "the result to return"}{"idx": 39956, "node_name": "task", "Dec": "the task to submit"}{"idx": 39958, "node_name": "tasks", "Dec": "the collection of tasks"}{"idx": 39960, "node_name": "tasks", "Dec": "the collection of tasks"}{"idx": 39961, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 39962, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 39964, "node_name": "tasks", "Dec": "the collection of tasks"}{"idx": 39966, "node_name": "tasks", "Dec": "the collection of tasks"}{"idx": 39967, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 39968, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 39974, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 39977, "node_name": "subscription", "Dec": "a new subscription"}{"idx": 39979, "node_name": "item", "Dec": "the item"}{"idx": 39981, "node_name": "throwable", "Dec": "the exception"}{"idx": 39985, "node_name": "n", "Dec": "the increment of demand ; a value of long.max_value may be considered as effectively unbounded"}{"idx": 39989, "node_name": "pool", "Dec": "the pool this thread works in"}{"idx": 39994, "node_name": "parallelism", "Dec": "the parallelism level"}{"idx": 39996, "node_name": "parallelism", "Dec": "the parallelism level . for default value , use runtime.availableprocessors() ."}{"idx": 39997, "node_name": "factory", "Dec": "the factory for creating new threads . for default value , use defaultforkjoinworkerthreadfactory ."}{"idx": 39998, "node_name": "handler", "Dec": "the handler for internal worker threads that terminate due to unrecoverable errors encountered while executing tasks . for default value , use null ."}{"idx": 39999, "node_name": "asyncmode", "Dec": "if true , establishes local first-in-first-out scheduling mode for forked tasks that are never joined . this mode may be more appropriate than default locally stack-based mode in applications in which worker threads only process event-style asynchronous tasks . for default value , use false ."}{"idx": 40001, "node_name": "parallelism", "Dec": "the parallelism level . for default value , use runtime.availableprocessors() ."}{"idx": 40002, "node_name": "factory", "Dec": "the factory for creating new threads . for default value , use defaultforkjoinworkerthreadfactory ."}{"idx": 40003, "node_name": "handler", "Dec": "the handler for internal worker threads that terminate due to unrecoverable errors encountered while executing tasks . for default value , use null ."}{"idx": 40004, "node_name": "asyncmode", "Dec": "if true , establishes local first-in-first-out scheduling mode for forked tasks that are never joined . this mode may be more appropriate than default locally stack-based mode in applications in which worker threads only process event-style asynchronous tasks . for default value , use false ."}{"idx": 40005, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool ( unless timed out after an elapsed keep-alive ) . normally ( and by default ) this is the same value as the parallelism level , but may be set to a larger value to reduce dynamic overhead if tasks regularly block . using a smaller value ( for example 0 ) has the same effect as the default ."}{"idx": 40006, "node_name": "maximumpoolsize", "Dec": "the maximum number of threads allowed . when the maximum is reached , attempts to replace blocked threads fail . ( however , because creation and termination of different threads may overlap , and may be managed by the given thread factory , this value may be transiently exceeded . ) to arrange the same value as is used by default for the common pool , use 256 plus the parallelism level . ( by default , the common pool allows a maximum of 256 spare threads . ) using a value ( for example integer.max_value ) larger than the implementation's total thread limit has the same effect as using this limit ( which is the default ) ."}{"idx": 40007, "node_name": "minimumrunnable", "Dec": "the minimum allowed number of core threads not blocked by a join or forkjoinpool.managedblocker . to ensure progress , when too few unblocked threads exist and unexecuted tasks may exist , new threads are constructed , up to the given maximumpoolsize . for the default value , use 1 , that ensures liveness . a larger value might improve throughput in the presence of blocked activities , but might not , due to increased overhead . a value of zero may be acceptable when submitted tasks cannot have dependencies requiring additional threads ."}{"idx": 40008, "node_name": "saturate", "Dec": "if non-null , a predicate invoked upon attempts to create more than the maximum total allowed threads . by default , when a thread is about to block on a join or forkjoinpool.managedblocker , but cannot be replaced because the maximumpoolsize would be exceeded , a rejectedexecutionexception is thrown . but if this predicate returns true , then no exception is thrown , so the pool continues to operate with fewer than the target number of runnable threads , which might not ensure progress ."}{"idx": 40009, "node_name": "keepalivetime", "Dec": "the elapsed time since last use before a thread is terminated ( and then later replaced if needed ) . for the default value , use 60 , timeunit.seconds ."}{"idx": 40010, "node_name": "unit", "Dec": "the time unit for the keepalivetime argument"}{"idx": 40013, "node_name": "task", "Dec": "the task"}{"idx": 40015, "node_name": "task", "Dec": "the task"}{"idx": 40017, "node_name": "task", "Dec": "the runnable task"}{"idx": 40019, "node_name": "task", "Dec": "the task to submit"}{"idx": 40021, "node_name": "task", "Dec": "the task to submit"}{"idx": 40023, "node_name": "task", "Dec": "the task to submit"}{"idx": 40024, "node_name": "result", "Dec": "the result to return"}{"idx": 40026, "node_name": "task", "Dec": "the task to submit"}{"idx": 40028, "node_name": "tasks", "Dec": "the collection of tasks"}{"idx": 40044, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40052, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 40053, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 40055, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 40056, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 40058, "node_name": "blocker", "Dec": "the blocker task"}{"idx": 40068, "node_name": "t1", "Dec": "the first task"}{"idx": 40069, "node_name": "t2", "Dec": "the second task"}{"idx": 40071, "node_name": "tasks", "Dec": "the tasks"}{"idx": 40073, "node_name": "tasks", "Dec": "the collection of tasks"}{"idx": 40075, "node_name": "mayinterruptifrunning", "Dec": "this value has no effect in the default implementation because interrupts are not used to control cancellation ."}{"idx": 40080, "node_name": "ex", "Dec": "the exception to throw . if this exception is not a runtimeexception or error , the actual exception thrown will be a runtimeexception with cause ex ."}{"idx": 40082, "node_name": "value", "Dec": "the result value for this task"}{"idx": 40086, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 40087, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 40099, "node_name": "value", "Dec": "the value"}{"idx": 40107, "node_name": "newvalue", "Dec": "the new tag value"}{"idx": 40109, "node_name": "expect", "Dec": "the expected tag value"}{"idx": 40110, "node_name": "update", "Dec": "the new tag value"}{"idx": 40112, "node_name": "runnable", "Dec": "the runnable action"}{"idx": 40114, "node_name": "runnable", "Dec": "the runnable action"}{"idx": 40115, "node_name": "result", "Dec": "the result upon completion"}{"idx": 40117, "node_name": "callable", "Dec": "the callable action"}{"idx": 40120, "node_name": "pool", "Dec": "the pool this thread works in"}{"idx": 40125, "node_name": "exception", "Dec": "the exception causing this thread to abort due to an unrecoverable error , or null if completed normally"}{"idx": 40129, "node_name": "mayinterruptifrunning", "Dec": "true if the thread executing this task should be interrupted ; otherwise , in-progress tasks are allowed to complete"}{"idx": 40134, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 40135, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 40138, "node_name": "callable", "Dec": "the callable task"}{"idx": 40140, "node_name": "runnable", "Dec": "the runnable task"}{"idx": 40141, "node_name": "result", "Dec": "the result to return on successful completion . if you don't need a particular result , consider using constructions of the form : future < ? > f = new futuretask < void > ( runnable , null )"}{"idx": 40144, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 40145, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 40148, "node_name": "v", "Dec": "the value"}{"idx": 40150, "node_name": "t", "Dec": "the cause of failure"}{"idx": 40156, "node_name": "capacity", "Dec": "the capacity of this deque"}{"idx": 40158, "node_name": "c", "Dec": "the collection of elements to initially contain"}{"idx": 40160, "node_name": "e", "Dec": "the element to add"}{"idx": 40162, "node_name": "e", "Dec": "the element to add"}{"idx": 40164, "node_name": "e", "Dec": "the element to add"}{"idx": 40166, "node_name": "e", "Dec": "the element to add"}{"idx": 40168, "node_name": "e", "Dec": "the element to add"}{"idx": 40170, "node_name": "e", "Dec": "the element to add"}{"idx": 40172, "node_name": "e", "Dec": "the element to add"}{"idx": 40173, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 40174, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 40176, "node_name": "e", "Dec": "the element to add"}{"idx": 40177, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 40178, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 40184, "node_name": "e", "Dec": "the element to add"}{"idx": 40186, "node_name": "e", "Dec": "the element to add"}{"idx": 40188, "node_name": "e", "Dec": "the element to add"}{"idx": 40190, "node_name": "e", "Dec": "the element to add"}{"idx": 40191, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 40192, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 40197, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40199, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40200, "node_name": "maxelements", "Dec": "the maximum number of elements to transfer"}{"idx": 40202, "node_name": "e", "Dec": "the element to push"}{"idx": 40205, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 40208, "node_name": "o", "Dec": "object to be checked for containment in this deque"}{"idx": 40210, "node_name": "c", "Dec": "the elements to be inserted into this deque"}{"idx": 40213, "node_name": "a", "Dec": "the array into which the elements of the deque are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose"}{"idx": 40219, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 40221, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 40223, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 40225, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 40229, "node_name": "capacity", "Dec": "the capacity of this queue"}{"idx": 40231, "node_name": "c", "Dec": "the collection of elements to initially contain"}{"idx": 40235, "node_name": "e", "Dec": "the element to add"}{"idx": 40237, "node_name": "e", "Dec": "the element to add"}{"idx": 40238, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 40239, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 40241, "node_name": "e", "Dec": "the element to add"}{"idx": 40243, "node_name": "o", "Dec": "element to be removed from this queue , if present"}{"idx": 40245, "node_name": "o", "Dec": "object to be checked for containment in this queue"}{"idx": 40248, "node_name": "a", "Dec": "the array into which the elements of the queue are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose"}{"idx": 40251, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40253, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40254, "node_name": "maxelements", "Dec": "the maximum number of elements to transfer"}{"idx": 40258, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 40260, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 40262, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 40264, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 40268, "node_name": "c", "Dec": "the collection of elements to initially contain"}{"idx": 40271, "node_name": "a", "Dec": "the array into which the elements of the queue are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose"}{"idx": 40274, "node_name": "e", "Dec": "the element to add"}{"idx": 40276, "node_name": "e", "Dec": "the element to add"}{"idx": 40277, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 40278, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 40280, "node_name": "e", "Dec": "the element to add"}{"idx": 40282, "node_name": "e", "Dec": "the element to add"}{"idx": 40284, "node_name": "e", "Dec": "the element to transfer"}{"idx": 40286, "node_name": "e", "Dec": "the element to transfer"}{"idx": 40288, "node_name": "e", "Dec": "the element to transfer"}{"idx": 40289, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 40290, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 40292, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40294, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40295, "node_name": "maxelements", "Dec": "the maximum number of elements to transfer"}{"idx": 40300, "node_name": "o", "Dec": "element to be removed from this queue , if present"}{"idx": 40302, "node_name": "o", "Dec": "object to be checked for containment in this queue"}{"idx": 40305, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 40307, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 40309, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 40311, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 40315, "node_name": "thread", "Dec": "the owner thread"}{"idx": 40324, "node_name": "nanostimeout", "Dec": "the maximum time to wait , in nanoseconds"}{"idx": 40326, "node_name": "deadline", "Dec": "the absolute time to wait until"}{"idx": 40328, "node_name": "time", "Dec": "the maximum time to wait"}{"idx": 40329, "node_name": "unit", "Dec": "the time unit of the time argument"}{"idx": 40337, "node_name": "newstate", "Dec": "the new state value"}{"idx": 40339, "node_name": "expect", "Dec": "the expected value"}{"idx": 40340, "node_name": "update", "Dec": "the new value"}{"idx": 40342, "node_name": "arg", "Dec": "the acquire argument . this value is always the one passed to an acquire method , or is the value saved on entry to a condition wait . the value is otherwise uninterpreted and can represent anything you like ."}{"idx": 40344, "node_name": "arg", "Dec": "the release argument . this value is always the one passed to a release method , or the current state value upon entry to a condition wait . the value is otherwise uninterpreted and can represent anything you like ."}{"idx": 40346, "node_name": "arg", "Dec": "the acquire argument . this value is always the one passed to an acquire method , or is the value saved on entry to a condition wait . the value is otherwise uninterpreted and can represent anything you like ."}{"idx": 40348, "node_name": "arg", "Dec": "the release argument . this value is always the one passed to a release method , or the current state value upon entry to a condition wait . the value is otherwise uninterpreted and can represent anything you like ."}{"idx": 40351, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquire ( long ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40353, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquire ( long ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40355, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquire ( long ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40356, "node_name": "nanostimeout", "Dec": "the maximum number of nanoseconds to wait"}{"idx": 40358, "node_name": "arg", "Dec": "the release argument . this value is conveyed to tryrelease ( long ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40360, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquireshared ( long ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40362, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquireshared ( long ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40364, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquireshared ( long ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40365, "node_name": "nanostimeout", "Dec": "the maximum number of nanoseconds to wait"}{"idx": 40367, "node_name": "arg", "Dec": "the release argument . this value is conveyed to tryreleaseshared ( long ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40372, "node_name": "thread", "Dec": "the thread"}{"idx": 40380, "node_name": "condition", "Dec": "the condition"}{"idx": 40382, "node_name": "condition", "Dec": "the condition"}{"idx": 40384, "node_name": "condition", "Dec": "the condition"}{"idx": 40386, "node_name": "condition", "Dec": "the condition"}{"idx": 40394, "node_name": "nanostimeout", "Dec": "the maximum time to wait , in nanoseconds"}{"idx": 40396, "node_name": "deadline", "Dec": "the absolute time to wait until"}{"idx": 40398, "node_name": "time", "Dec": "the maximum time to wait"}{"idx": 40399, "node_name": "unit", "Dec": "the time unit of the time argument"}{"idx": 40407, "node_name": "newstate", "Dec": "the new state value"}{"idx": 40409, "node_name": "expect", "Dec": "the expected value"}{"idx": 40410, "node_name": "update", "Dec": "the new value"}{"idx": 40412, "node_name": "arg", "Dec": "the acquire argument . this value is always the one passed to an acquire method , or is the value saved on entry to a condition wait . the value is otherwise uninterpreted and can represent anything you like ."}{"idx": 40414, "node_name": "arg", "Dec": "the release argument . this value is always the one passed to a release method , or the current state value upon entry to a condition wait . the value is otherwise uninterpreted and can represent anything you like ."}{"idx": 40416, "node_name": "arg", "Dec": "the acquire argument . this value is always the one passed to an acquire method , or is the value saved on entry to a condition wait . the value is otherwise uninterpreted and can represent anything you like ."}{"idx": 40418, "node_name": "arg", "Dec": "the release argument . this value is always the one passed to a release method , or the current state value upon entry to a condition wait . the value is otherwise uninterpreted and can represent anything you like ."}{"idx": 40421, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquire ( int ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40423, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquire ( int ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40425, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquire ( int ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40426, "node_name": "nanostimeout", "Dec": "the maximum number of nanoseconds to wait"}{"idx": 40428, "node_name": "arg", "Dec": "the release argument . this value is conveyed to tryrelease ( int ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40430, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquireshared ( int ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40432, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquireshared ( int ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40434, "node_name": "arg", "Dec": "the acquire argument . this value is conveyed to tryacquireshared ( int ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40435, "node_name": "nanostimeout", "Dec": "the maximum number of nanoseconds to wait"}{"idx": 40437, "node_name": "arg", "Dec": "the release argument . this value is conveyed to tryreleaseshared ( int ) but is otherwise uninterpreted and can represent anything you like ."}{"idx": 40442, "node_name": "thread", "Dec": "the thread"}{"idx": 40450, "node_name": "condition", "Dec": "the condition"}{"idx": 40452, "node_name": "condition", "Dec": "the condition"}{"idx": 40454, "node_name": "condition", "Dec": "the condition"}{"idx": 40456, "node_name": "condition", "Dec": "the condition"}{"idx": 40461, "node_name": "nanostimeout", "Dec": "the maximum time to wait , in nanoseconds"}{"idx": 40463, "node_name": "time", "Dec": "the maximum time to wait"}{"idx": 40464, "node_name": "unit", "Dec": "the time unit of the time argument"}{"idx": 40466, "node_name": "deadline", "Dec": "the absolute time to wait until"}{"idx": 40474, "node_name": "time", "Dec": "the maximum time to wait for the lock"}{"idx": 40475, "node_name": "unit", "Dec": "the time unit of the time argument"}{"idx": 40480, "node_name": "thread", "Dec": "the thread to unpark , or null , in which case this operation has no effect"}{"idx": 40482, "node_name": "blocker", "Dec": "the synchronization object responsible for this thread parking"}{"idx": 40484, "node_name": "blocker", "Dec": "the synchronization object responsible for this thread parking"}{"idx": 40485, "node_name": "nanos", "Dec": "the maximum number of nanoseconds to wait"}{"idx": 40487, "node_name": "blocker", "Dec": "the synchronization object responsible for this thread parking"}{"idx": 40488, "node_name": "deadline", "Dec": "the absolute time , in milliseconds from the epoch , to wait until"}{"idx": 40490, "node_name": "t", "Dec": "the thread"}{"idx": 40493, "node_name": "nanos", "Dec": "the maximum number of nanoseconds to wait"}{"idx": 40495, "node_name": "deadline", "Dec": "the absolute time , in milliseconds from the epoch , to wait until"}{"idx": 40502, "node_name": "fair", "Dec": "true if this lock should use a fair ordering policy"}{"idx": 40507, "node_name": "timeout", "Dec": "the time to wait for the lock"}{"idx": 40508, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 40518, "node_name": "thread", "Dec": "the thread"}{"idx": 40522, "node_name": "condition", "Dec": "the condition"}{"idx": 40524, "node_name": "condition", "Dec": "the condition"}{"idx": 40526, "node_name": "condition", "Dec": "the condition"}{"idx": 40531, "node_name": "fair", "Dec": "true if this lock should use a fair ordering policy"}{"idx": 40545, "node_name": "thread", "Dec": "the thread"}{"idx": 40549, "node_name": "condition", "Dec": "the condition"}{"idx": 40551, "node_name": "condition", "Dec": "the condition"}{"idx": 40553, "node_name": "condition", "Dec": "the condition"}{"idx": 40557, "node_name": "lock", "Dec": "the outer lock object"}{"idx": 40562, "node_name": "timeout", "Dec": "the time to wait for the read lock"}{"idx": 40563, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 40569, "node_name": "lock", "Dec": "the outer lock object"}{"idx": 40574, "node_name": "timeout", "Dec": "the time to wait for the write lock"}{"idx": 40575, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 40586, "node_name": "time", "Dec": "the maximum time to wait for the lock"}{"idx": 40587, "node_name": "unit", "Dec": "the time unit of the time argument"}{"idx": 40592, "node_name": "time", "Dec": "the maximum time to wait for the lock"}{"idx": 40593, "node_name": "unit", "Dec": "the time unit of the time argument"}{"idx": 40597, "node_name": "stamp", "Dec": "a stamp"}{"idx": 40599, "node_name": "stamp", "Dec": "a stamp returned by a write-lock operation"}{"idx": 40601, "node_name": "stamp", "Dec": "a stamp returned by a read-lock operation"}{"idx": 40603, "node_name": "stamp", "Dec": "a stamp returned by a lock operation"}{"idx": 40605, "node_name": "stamp", "Dec": "a stamp"}{"idx": 40607, "node_name": "stamp", "Dec": "a stamp"}{"idx": 40609, "node_name": "stamp", "Dec": "a stamp"}{"idx": 40615, "node_name": "stamp", "Dec": "a stamp returned by a previous stampedlock operation"}{"idx": 40617, "node_name": "stamp", "Dec": "a stamp returned by a previous stampedlock operation"}{"idx": 40619, "node_name": "stamp", "Dec": "a stamp returned by a previous stampedlock operation"}{"idx": 40621, "node_name": "stamp", "Dec": "a stamp returned by a previous stampedlock operation"}{"idx": 40630, "node_name": "parties", "Dec": "the number of parties required to advance to the next phase"}{"idx": 40632, "node_name": "parent", "Dec": "the parent phaser"}{"idx": 40634, "node_name": "parent", "Dec": "the parent phaser"}{"idx": 40635, "node_name": "parties", "Dec": "the number of parties required to advance to the next phase"}{"idx": 40638, "node_name": "parties", "Dec": "the number of additional parties required to advance to the next phase"}{"idx": 40643, "node_name": "phase", "Dec": "an arrival phase number , or negative value if terminated ; this argument is normally the value returned by a previous call to arrive or arriveandderegister ."}{"idx": 40645, "node_name": "phase", "Dec": "an arrival phase number , or negative value if terminated ; this argument is normally the value returned by a previous call to arrive or arriveandderegister ."}{"idx": 40647, "node_name": "phase", "Dec": "an arrival phase number , or negative value if terminated ; this argument is normally the value returned by a previous call to arrive or arriveandderegister ."}{"idx": 40648, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 40649, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 40659, "node_name": "phase", "Dec": "the current phase number on entry to onAdvance(int,int) , before this phaser is advanced"}{"idx": 40660, "node_name": "registeredparties", "Dec": "the current number of registered parties"}{"idx": 40665, "node_name": "initialcapacity", "Dec": "the initial capacity for this priority queue"}{"idx": 40667, "node_name": "initialcapacity", "Dec": "the initial capacity for this priority queue"}{"idx": 40668, "node_name": "comparator", "Dec": "the comparator that will be used to order this priority queue . if null , the natural ordering of the elements will be used ."}{"idx": 40670, "node_name": "c", "Dec": "the collection whose elements are to be placed into this priority queue"}{"idx": 40672, "node_name": "e", "Dec": "the element to add"}{"idx": 40674, "node_name": "e", "Dec": "the element to add"}{"idx": 40676, "node_name": "e", "Dec": "the element to add"}{"idx": 40678, "node_name": "e", "Dec": "the element to add"}{"idx": 40679, "node_name": "timeout", "Dec": "this parameter is ignored as offer(java.lang.Object,long,java.util.concurrent.TimeUnit) never blocks"}{"idx": 40680, "node_name": "unit", "Dec": "this parameter is ignored as offer(java.lang.Object,long,java.util.concurrent.TimeUnit) never blocks"}{"idx": 40684, "node_name": "o", "Dec": "element to be removed from this queue , if present"}{"idx": 40686, "node_name": "o", "Dec": "object to be checked for containment in this queue"}{"idx": 40688, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40690, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40691, "node_name": "maxelements", "Dec": "the maximum number of elements to transfer"}{"idx": 40695, "node_name": "a", "Dec": "the array into which the elements of the queue are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose"}{"idx": 40699, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 40701, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 40703, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 40705, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 40711, "node_name": "mustbenull", "Dec": "the value"}{"idx": 40720, "node_name": "message", "Dec": "the detail message"}{"idx": 40722, "node_name": "message", "Dec": "the detail message"}{"idx": 40723, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method )"}{"idx": 40725, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method )"}{"idx": 40728, "node_name": "r", "Dec": "the runnable task requested to be executed"}{"idx": 40729, "node_name": "executor", "Dec": "the executor attempting to execute this task"}{"idx": 40736, "node_name": "command", "Dec": "the task to execute"}{"idx": 40737, "node_name": "delay", "Dec": "the time from now to delay execution"}{"idx": 40738, "node_name": "unit", "Dec": "the time unit of the delay parameter"}{"idx": 40740, "node_name": "callable", "Dec": "the function to execute"}{"idx": 40741, "node_name": "delay", "Dec": "the time from now to delay execution"}{"idx": 40742, "node_name": "unit", "Dec": "the time unit of the delay parameter"}{"idx": 40744, "node_name": "command", "Dec": "the task to execute"}{"idx": 40745, "node_name": "initialdelay", "Dec": "the time to delay first execution"}{"idx": 40746, "node_name": "period", "Dec": "the period between successive executions"}{"idx": 40747, "node_name": "unit", "Dec": "the time unit of the initialdelay and period parameters"}{"idx": 40749, "node_name": "command", "Dec": "the task to execute"}{"idx": 40750, "node_name": "initialdelay", "Dec": "the time to delay first execution"}{"idx": 40751, "node_name": "delay", "Dec": "the delay between the termination of one execution and the commencement of the next"}{"idx": 40752, "node_name": "unit", "Dec": "the time unit of the initialdelay and delay parameters"}{"idx": 40756, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool , even if they are idle , unless allowcorethreadtimeout is set"}{"idx": 40758, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool , even if they are idle , unless allowcorethreadtimeout is set"}{"idx": 40759, "node_name": "threadfactory", "Dec": "the factory to use when the executor creates a new thread"}{"idx": 40761, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool , even if they are idle , unless allowcorethreadtimeout is set"}{"idx": 40762, "node_name": "handler", "Dec": "the handler to use when execution is blocked because the thread bounds and queue capacities are reached"}{"idx": 40764, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool , even if they are idle , unless allowcorethreadtimeout is set"}{"idx": 40765, "node_name": "threadfactory", "Dec": "the factory to use when the executor creates a new thread"}{"idx": 40766, "node_name": "handler", "Dec": "the handler to use when execution is blocked because the thread bounds and queue capacities are reached"}{"idx": 40768, "node_name": "runnable", "Dec": "the submitted runnable"}{"idx": 40769, "node_name": "task", "Dec": "the task created to execute the runnable"}{"idx": 40771, "node_name": "callable", "Dec": "the submitted callable"}{"idx": 40772, "node_name": "task", "Dec": "the task created to execute the callable"}{"idx": 40774, "node_name": "command", "Dec": "the task to execute"}{"idx": 40775, "node_name": "delay", "Dec": "the time from now to delay execution"}{"idx": 40776, "node_name": "unit", "Dec": "the time unit of the delay parameter"}{"idx": 40778, "node_name": "callable", "Dec": "the function to execute"}{"idx": 40779, "node_name": "delay", "Dec": "the time from now to delay execution"}{"idx": 40780, "node_name": "unit", "Dec": "the time unit of the delay parameter"}{"idx": 40782, "node_name": "command", "Dec": "the task to execute"}{"idx": 40783, "node_name": "initialdelay", "Dec": "the time to delay first execution"}{"idx": 40784, "node_name": "period", "Dec": "the period between successive executions"}{"idx": 40785, "node_name": "unit", "Dec": "the time unit of the initialdelay and period parameters"}{"idx": 40787, "node_name": "command", "Dec": "the task to execute"}{"idx": 40788, "node_name": "initialdelay", "Dec": "the time to delay first execution"}{"idx": 40789, "node_name": "delay", "Dec": "the delay between the termination of one execution and the commencement of the next"}{"idx": 40790, "node_name": "unit", "Dec": "the time unit of the initialdelay and delay parameters"}{"idx": 40792, "node_name": "command", "Dec": "the task to execute"}{"idx": 40794, "node_name": "task", "Dec": "the task to submit"}{"idx": 40796, "node_name": "task", "Dec": "the task to submit"}{"idx": 40797, "node_name": "result", "Dec": "the result to return"}{"idx": 40799, "node_name": "task", "Dec": "the task to submit"}{"idx": 40801, "node_name": "value", "Dec": "if true , continue after shutdown , else don't"}{"idx": 40804, "node_name": "value", "Dec": "if true , execute after shutdown , else don't"}{"idx": 40807, "node_name": "value", "Dec": "if true , remove on cancellation , else don't"}{"idx": 40814, "node_name": "permits", "Dec": "the initial number of permits available . this value may be negative , in which case releases must occur before any acquires will be granted ."}{"idx": 40816, "node_name": "permits", "Dec": "the initial number of permits available . this value may be negative , in which case releases must occur before any acquires will be granted ."}{"idx": 40817, "node_name": "fair", "Dec": "true if this semaphore will guarantee first-in first-out granting of permits under contention , else false"}{"idx": 40822, "node_name": "timeout", "Dec": "the maximum time to wait for a permit"}{"idx": 40823, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 40826, "node_name": "permits", "Dec": "the number of permits to acquire"}{"idx": 40828, "node_name": "permits", "Dec": "the number of permits to acquire"}{"idx": 40830, "node_name": "permits", "Dec": "the number of permits to acquire"}{"idx": 40832, "node_name": "permits", "Dec": "the number of permits to acquire"}{"idx": 40833, "node_name": "timeout", "Dec": "the maximum time to wait for the permits"}{"idx": 40834, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 40836, "node_name": "permits", "Dec": "the number of permits to release"}{"idx": 40840, "node_name": "reduction", "Dec": "the number of permits to remove"}{"idx": 40848, "node_name": "executor", "Dec": "the executor to use for async delivery , supporting creation of at least one independent thread"}{"idx": 40849, "node_name": "maxbuffercapacity", "Dec": "the maximum capacity for each subscriber's buffer ( the enforced capacity may be rounded up to the nearest power of two and / or bounded by the largest value supported by this implementation ; method getmaxbuffercapacity() returns the actual value )"}{"idx": 40850, "node_name": "handler", "Dec": "if non-null , procedure to invoke upon exception thrown in method onnext"}{"idx": 40852, "node_name": "executor", "Dec": "the executor to use for async delivery , supporting creation of at least one independent thread"}{"idx": 40853, "node_name": "maxbuffercapacity", "Dec": "the maximum capacity for each subscriber's buffer ( the enforced capacity may be rounded up to the nearest power of two and / or bounded by the largest value supported by this implementation ; method getmaxbuffercapacity() returns the actual value )"}{"idx": 40856, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 40858, "node_name": "item", "Dec": "the ( non-null ) item to publish"}{"idx": 40860, "node_name": "item", "Dec": "the ( non-null ) item to publish"}{"idx": 40861, "node_name": "ondrop", "Dec": "if non-null , the handler invoked upon a drop to a subscriber , with arguments of the subscriber and item ; if it returns true , an offer is re-attempted ( once )"}{"idx": 40863, "node_name": "item", "Dec": "the ( non-null ) item to publish"}{"idx": 40864, "node_name": "timeout", "Dec": "how long to wait for resources for any subscriber before giving up , in units of unit"}{"idx": 40865, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 40866, "node_name": "ondrop", "Dec": "if non-null , the handler invoked upon a drop to a subscriber , with arguments of the subscriber and item ; if it returns true , an offer is re-attempted ( once )"}{"idx": 40869, "node_name": "error", "Dec": "the onerror argument sent to subscribers"}{"idx": 40878, "node_name": "subscriber", "Dec": "the subscriber"}{"idx": 40882, "node_name": "consumer", "Dec": "the function applied to each onnext item"}{"idx": 40886, "node_name": "fair", "Dec": "if true , waiting threads contend in fifo order for access ; otherwise the order is unspecified ."}{"idx": 40888, "node_name": "e", "Dec": "the element to add"}{"idx": 40890, "node_name": "e", "Dec": "the element to add"}{"idx": 40891, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 40892, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 40894, "node_name": "e", "Dec": "the element to add"}{"idx": 40897, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 40898, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 40905, "node_name": "o", "Dec": "the element"}{"idx": 40907, "node_name": "o", "Dec": "the element to remove"}{"idx": 40909, "node_name": "c", "Dec": "the collection"}{"idx": 40911, "node_name": "c", "Dec": "the collection"}{"idx": 40913, "node_name": "c", "Dec": "the collection"}{"idx": 40919, "node_name": "a", "Dec": "the array"}{"idx": 40922, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40924, "node_name": "c", "Dec": "the collection to transfer elements into"}{"idx": 40925, "node_name": "maxelements", "Dec": "the maximum number of elements to transfer"}{"idx": 40928, "node_name": "r", "Dec": "a runnable to be executed by new thread instance"}{"idx": 40932, "node_name": "seed", "Dec": "the initial seed"}{"idx": 40934, "node_name": "bits", "Dec": "random bits"}{"idx": 40937, "node_name": "bound", "Dec": "the upper bound ( exclusive ) . must be positive ."}{"idx": 40939, "node_name": "origin", "Dec": "the least value returned"}{"idx": 40940, "node_name": "bound", "Dec": "the upper bound ( exclusive )"}{"idx": 40943, "node_name": "bound", "Dec": "the upper bound ( exclusive ) . must be positive ."}{"idx": 40945, "node_name": "origin", "Dec": "the least value returned"}{"idx": 40946, "node_name": "bound", "Dec": "the upper bound ( exclusive )"}{"idx": 40949, "node_name": "bound", "Dec": "the upper bound ( exclusive ) . must be positive ."}{"idx": 40951, "node_name": "origin", "Dec": "the least value returned"}{"idx": 40952, "node_name": "bound", "Dec": "the upper bound ( exclusive )"}{"idx": 40956, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 40959, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 40960, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 40961, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 40963, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 40964, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 40966, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 40969, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 40970, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 40971, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 40973, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 40974, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 40976, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 40979, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 40980, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 40981, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 40983, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 40984, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 40988, "node_name": "r", "Dec": "the runnable task requested to be executed"}{"idx": 40989, "node_name": "e", "Dec": "the executor attempting to execute this task"}{"idx": 40993, "node_name": "r", "Dec": "the runnable task requested to be executed"}{"idx": 40994, "node_name": "e", "Dec": "the executor attempting to execute this task"}{"idx": 40998, "node_name": "r", "Dec": "the runnable task requested to be executed"}{"idx": 40999, "node_name": "e", "Dec": "the executor attempting to execute this task"}{"idx": 41003, "node_name": "r", "Dec": "the runnable task requested to be executed"}{"idx": 41004, "node_name": "e", "Dec": "the executor attempting to execute this task"}{"idx": 41007, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool , even if they are idle , unless allowcorethreadtimeout is set"}{"idx": 41008, "node_name": "maximumpoolsize", "Dec": "the maximum number of threads to allow in the pool"}{"idx": 41009, "node_name": "keepalivetime", "Dec": "when the number of threads is greater than the core , this is the maximum time that excess idle threads will wait for new tasks before terminating ."}{"idx": 41010, "node_name": "unit", "Dec": "the time unit for the keepalivetime argument"}{"idx": 41011, "node_name": "workqueue", "Dec": "the queue to use for holding tasks before they are executed . this queue will hold only the runnable tasks submitted by the execute method ."}{"idx": 41013, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool , even if they are idle , unless allowcorethreadtimeout is set"}{"idx": 41014, "node_name": "maximumpoolsize", "Dec": "the maximum number of threads to allow in the pool"}{"idx": 41015, "node_name": "keepalivetime", "Dec": "when the number of threads is greater than the core , this is the maximum time that excess idle threads will wait for new tasks before terminating ."}{"idx": 41016, "node_name": "unit", "Dec": "the time unit for the keepalivetime argument"}{"idx": 41017, "node_name": "workqueue", "Dec": "the queue to use for holding tasks before they are executed . this queue will hold only the runnable tasks submitted by the execute method ."}{"idx": 41018, "node_name": "threadfactory", "Dec": "the factory to use when the executor creates a new thread"}{"idx": 41020, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool , even if they are idle , unless allowcorethreadtimeout is set"}{"idx": 41021, "node_name": "maximumpoolsize", "Dec": "the maximum number of threads to allow in the pool"}{"idx": 41022, "node_name": "keepalivetime", "Dec": "when the number of threads is greater than the core , this is the maximum time that excess idle threads will wait for new tasks before terminating ."}{"idx": 41023, "node_name": "unit", "Dec": "the time unit for the keepalivetime argument"}{"idx": 41024, "node_name": "workqueue", "Dec": "the queue to use for holding tasks before they are executed . this queue will hold only the runnable tasks submitted by the execute method ."}{"idx": 41025, "node_name": "handler", "Dec": "the handler to use when execution is blocked because the thread bounds and queue capacities are reached"}{"idx": 41027, "node_name": "corepoolsize", "Dec": "the number of threads to keep in the pool , even if they are idle , unless allowcorethreadtimeout is set"}{"idx": 41028, "node_name": "maximumpoolsize", "Dec": "the maximum number of threads to allow in the pool"}{"idx": 41029, "node_name": "keepalivetime", "Dec": "when the number of threads is greater than the core , this is the maximum time that excess idle threads will wait for new tasks before terminating ."}{"idx": 41030, "node_name": "unit", "Dec": "the time unit for the keepalivetime argument"}{"idx": 41031, "node_name": "workqueue", "Dec": "the queue to use for holding tasks before they are executed . this queue will hold only the runnable tasks submitted by the execute method ."}{"idx": 41032, "node_name": "threadfactory", "Dec": "the factory to use when the executor creates a new thread"}{"idx": 41033, "node_name": "handler", "Dec": "the handler to use when execution is blocked because the thread bounds and queue capacities are reached"}{"idx": 41035, "node_name": "command", "Dec": "the task to execute"}{"idx": 41040, "node_name": "threadfactory", "Dec": "the new thread factory"}{"idx": 41043, "node_name": "handler", "Dec": "the new handler"}{"idx": 41046, "node_name": "corepoolsize", "Dec": "the new core size"}{"idx": 41052, "node_name": "value", "Dec": "true if should time out , else false"}{"idx": 41054, "node_name": "maximumpoolsize", "Dec": "the new maximum"}{"idx": 41057, "node_name": "time", "Dec": "the time to wait . a time value of zero will cause excess threads to terminate immediately after executing tasks ."}{"idx": 41058, "node_name": "unit", "Dec": "the time unit of the time argument"}{"idx": 41060, "node_name": "unit", "Dec": "the desired time unit of the result"}{"idx": 41063, "node_name": "task", "Dec": "the task to remove"}{"idx": 41072, "node_name": "t", "Dec": "the thread that will run task r"}{"idx": 41073, "node_name": "r", "Dec": "the task that will be executed"}{"idx": 41075, "node_name": "r", "Dec": "the runnable that has completed"}{"idx": 41076, "node_name": "t", "Dec": "the exception that caused termination , or null if execution completed normally"}{"idx": 41081, "node_name": "message", "Dec": "the detail message"}{"idx": 41085, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 41087, "node_name": "sourceduration", "Dec": "the time duration in the given sourceunit"}{"idx": 41088, "node_name": "sourceunit", "Dec": "the unit of the sourceduration argument"}{"idx": 41090, "node_name": "duration", "Dec": "the time duration"}{"idx": 41092, "node_name": "duration", "Dec": "the duration"}{"idx": 41094, "node_name": "duration", "Dec": "the duration"}{"idx": 41096, "node_name": "duration", "Dec": "the duration"}{"idx": 41098, "node_name": "duration", "Dec": "the duration"}{"idx": 41100, "node_name": "duration", "Dec": "the duration"}{"idx": 41102, "node_name": "duration", "Dec": "the duration"}{"idx": 41104, "node_name": "duration", "Dec": "the duration"}{"idx": 41106, "node_name": "obj", "Dec": "the object to wait on"}{"idx": 41107, "node_name": "timeout", "Dec": "the maximum time to wait . if less than or equal to zero , do not wait at all ."}{"idx": 41109, "node_name": "thread", "Dec": "the thread to wait for"}{"idx": 41110, "node_name": "timeout", "Dec": "the maximum time to wait . if less than or equal to zero , do not wait at all ."}{"idx": 41112, "node_name": "timeout", "Dec": "the minimum time to sleep . if less than or equal to zero , do not sleep at all ."}{"idx": 41115, "node_name": "chronounit", "Dec": "the chronounit to convert"}{"idx": 41118, "node_name": "e", "Dec": "the element to transfer"}{"idx": 41120, "node_name": "e", "Dec": "the element to transfer"}{"idx": 41122, "node_name": "e", "Dec": "the element to transfer"}{"idx": 41123, "node_name": "timeout", "Dec": "how long to wait before giving up , in units of unit"}{"idx": 41124, "node_name": "unit", "Dec": "a timeunit determining how to interpret the timeout parameter"}{"idx": 41130, "node_name": "message", "Dec": "the detail message pertaining to this exception ."}{"idx": 41132, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 41134, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 41135, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 41138, "node_name": "currencycode", "Dec": "the iso 4217 code of the currency"}{"idx": 41140, "node_name": "locale", "Dec": "the locale for whose country a currency instance is needed"}{"idx": 41145, "node_name": "locale", "Dec": "the locale for which a display name for this currency is needed"}{"idx": 41151, "node_name": "locale", "Dec": "the locale for which a display name for this currency is needed"}{"idx": 41156, "node_name": "date", "Dec": "the milliseconds since january 1 , 1970 , 00:00 : 00 gmt ."}{"idx": 41160, "node_name": "time", "Dec": "the number of milliseconds ."}{"idx": 41162, "node_name": "when", "Dec": "a date ."}{"idx": 41164, "node_name": "when", "Dec": "a date ."}{"idx": 41166, "node_name": "obj", "Dec": "the object to compare with ."}{"idx": 41168, "node_name": "anotherdate", "Dec": "the date to be compared ."}{"idx": 41172, "node_name": "instant", "Dec": "the instant to convert"}{"idx": 41176, "node_name": "e", "Dec": "the element to add"}{"idx": 41178, "node_name": "e", "Dec": "the element to add"}{"idx": 41180, "node_name": "e", "Dec": "the element to add"}{"idx": 41182, "node_name": "e", "Dec": "the element to add"}{"idx": 41192, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 41194, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 41196, "node_name": "e", "Dec": "the element to add"}{"idx": 41198, "node_name": "e", "Dec": "the element to add"}{"idx": 41204, "node_name": "c", "Dec": "the elements to be inserted into this deque"}{"idx": 41206, "node_name": "e", "Dec": "the element to push"}{"idx": 41209, "node_name": "o", "Dec": "element to be removed from this deque , if present"}{"idx": 41211, "node_name": "o", "Dec": "element whose presence in this deque is to be tested"}{"idx": 41222, "node_name": "key", "Dec": "a key in this dictionary . null if the key is not mapped to any value in this dictionary ."}{"idx": 41224, "node_name": "key", "Dec": "the hashtable key ."}{"idx": 41225, "node_name": "value", "Dec": "the value ."}{"idx": 41227, "node_name": "key", "Dec": "the key that needs to be removed ."}{"idx": 41231, "node_name": "count", "Dec": "the count of values"}{"idx": 41232, "node_name": "min", "Dec": "the minimum value"}{"idx": 41233, "node_name": "max", "Dec": "the maximum value"}{"idx": 41234, "node_name": "sum", "Dec": "the sum of all values"}{"idx": 41236, "node_name": "value", "Dec": "the input value"}{"idx": 41238, "node_name": "other", "Dec": "another doublesummarystatistics"}{"idx": 41247, "node_name": "f", "Dec": "the set of format flags which contain a duplicate flag ."}{"idx": 41257, "node_name": "keytype", "Dec": "the class object of the key type for this enum map"}{"idx": 41259, "node_name": "m", "Dec": "the enum map from which to initialize this enum map"}{"idx": 41261, "node_name": "m", "Dec": "the map from which to initialize this enum map"}{"idx": 41264, "node_name": "value", "Dec": "the value whose presence in this map is to be tested"}{"idx": 41266, "node_name": "key", "Dec": "the key whose presence in this map is to be tested"}{"idx": 41268, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 41270, "node_name": "key", "Dec": "the key with which the specified value is to be associated"}{"idx": 41271, "node_name": "value", "Dec": "the value to be associated with the specified key"}{"idx": 41273, "node_name": "key", "Dec": "the key whose mapping is to be removed from the map"}{"idx": 41275, "node_name": "m", "Dec": "the mappings to be stored in this map"}{"idx": 41281, "node_name": "o", "Dec": "the object to be compared for equality with this map"}{"idx": 41286, "node_name": "elementtype", "Dec": "the class object of the element type for this enum set"}{"idx": 41288, "node_name": "elementtype", "Dec": "the class object of the element type for this enum set"}{"idx": 41290, "node_name": "s", "Dec": "the enum set from which to initialize this enum set"}{"idx": 41292, "node_name": "c", "Dec": "the collection from which to initialize this enum set"}{"idx": 41294, "node_name": "s", "Dec": "the enum set from whose complement to initialize this enum set"}{"idx": 41296, "node_name": "e", "Dec": "the element that this set is to contain initially"}{"idx": 41298, "node_name": "e1", "Dec": "an element that this set is to contain initially"}{"idx": 41299, "node_name": "e2", "Dec": "another element that this set is to contain initially"}{"idx": 41301, "node_name": "e1", "Dec": "an element that this set is to contain initially"}{"idx": 41302, "node_name": "e2", "Dec": "another element that this set is to contain initially"}{"idx": 41303, "node_name": "e3", "Dec": "another element that this set is to contain initially"}{"idx": 41305, "node_name": "e1", "Dec": "an element that this set is to contain initially"}{"idx": 41306, "node_name": "e2", "Dec": "another element that this set is to contain initially"}{"idx": 41307, "node_name": "e3", "Dec": "another element that this set is to contain initially"}{"idx": 41308, "node_name": "e4", "Dec": "another element that this set is to contain initially"}{"idx": 41310, "node_name": "e1", "Dec": "an element that this set is to contain initially"}{"idx": 41311, "node_name": "e2", "Dec": "another element that this set is to contain initially"}{"idx": 41312, "node_name": "e3", "Dec": "another element that this set is to contain initially"}{"idx": 41313, "node_name": "e4", "Dec": "another element that this set is to contain initially"}{"idx": 41314, "node_name": "e5", "Dec": "another element that this set is to contain initially"}{"idx": 41316, "node_name": "first", "Dec": "an element that the set is to contain initially"}{"idx": 41317, "node_name": "rest", "Dec": "the remaining elements the set is to contain initially"}{"idx": 41319, "node_name": "from", "Dec": "the first element in the range"}{"idx": 41320, "node_name": "to", "Dec": "the last element in the range"}{"idx": 41325, "node_name": "listener", "Dec": "the listener object"}{"idx": 41330, "node_name": "source", "Dec": "the object on which the event initially occurred"}{"idx": 41335, "node_name": "f", "Dec": "the flag"}{"idx": 41336, "node_name": "c", "Dec": "the conversion"}{"idx": 41341, "node_name": "formatter", "Dec": "the formatter . implementing classes may call formatter.out() or formatter.locale() to obtain the appendable or locale used by this formatter respectively ."}{"idx": 41342, "node_name": "flags", "Dec": "the flags modify the output format . the value is interpreted as a bitmask . any combination of the following flags may be set : formattableflags.left_justify , formattableflags.uppercase , and formattableflags.alternate . if no flags are set , the default formatting of the implementing class will apply ."}{"idx": 41343, "node_name": "width", "Dec": "the minimum number of characters to be written to the output . if the length of the converted value is less than the width then the output will be padded by ' ' until the total number of characters equals width . the padding is at the beginning by default . if the formattableflags.left_justify flag is set then the padding will be at the end . if width is -1 then there is no minimum ."}{"idx": 41344, "node_name": "precision", "Dec": "the maximum number of characters to be written to the output . the precision is applied before the width , thus the output will be truncated to precision characters even if the width is greater than the precision . if precision is -1 then there is no explicit limit on the number of characters ."}{"idx": 41352, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 41356, "node_name": "a", "Dec": "destination for the formatted output . if a is null then a stringbuilder will be created ."}{"idx": 41358, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 41360, "node_name": "a", "Dec": "destination for the formatted output . if a is null then a stringbuilder will be created ."}{"idx": 41361, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 41363, "node_name": "filename", "Dec": "the name of the file to use as the destination of this formatter . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 41365, "node_name": "filename", "Dec": "the name of the file to use as the destination of this formatter . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 41366, "node_name": "csn", "Dec": "the name of a supported charset"}{"idx": 41368, "node_name": "filename", "Dec": "the name of the file to use as the destination of this formatter . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 41369, "node_name": "csn", "Dec": "the name of a supported charset"}{"idx": 41370, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 41372, "node_name": "filename", "Dec": "the name of the file to use as the destination of this formatter . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 41373, "node_name": "charset", "Dec": "a charset"}{"idx": 41374, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 41376, "node_name": "file", "Dec": "the file to use as the destination of this formatter . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 41378, "node_name": "file", "Dec": "the file to use as the destination of this formatter . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 41379, "node_name": "csn", "Dec": "the name of a supported charset"}{"idx": 41381, "node_name": "file", "Dec": "the file to use as the destination of this formatter . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 41382, "node_name": "csn", "Dec": "the name of a supported charset"}{"idx": 41383, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 41385, "node_name": "file", "Dec": "the file to use as the destination of this formatter . if the file exists then it will be truncated to zero size ; otherwise , a new file will be created . the output will be written to the file and is buffered ."}{"idx": 41386, "node_name": "charset", "Dec": "a charset"}{"idx": 41387, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 41389, "node_name": "ps", "Dec": "the stream to use as the destination of this formatter ."}{"idx": 41391, "node_name": "os", "Dec": "the output stream to use as the destination of this formatter . the output will be buffered ."}{"idx": 41393, "node_name": "os", "Dec": "the output stream to use as the destination of this formatter . the output will be buffered ."}{"idx": 41394, "node_name": "csn", "Dec": "the name of a supported charset"}{"idx": 41396, "node_name": "os", "Dec": "the output stream to use as the destination of this formatter . the output will be buffered ."}{"idx": 41397, "node_name": "csn", "Dec": "the name of a supported charset"}{"idx": 41398, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 41400, "node_name": "os", "Dec": "the output stream to use as the destination of this formatter . the output will be buffered ."}{"idx": 41401, "node_name": "charset", "Dec": "a charset"}{"idx": 41402, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied ."}{"idx": 41410, "node_name": "format", "Dec": "a format string as described in format string syntax ."}{"idx": 41411, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification ."}{"idx": 41413, "node_name": "l", "Dec": "the locale to apply during formatting . if l is null then no localization is applied . this does not change this object's locale that was set during construction ."}{"idx": 41414, "node_name": "format", "Dec": "a format string as described in format string syntax"}{"idx": 41415, "node_name": "args", "Dec": "arguments referenced by the format specifiers in the format string . if there are more arguments than format specifiers , the extra arguments are ignored . the maximum number of arguments is limited by the maximum dimension of a java array as defined by the java\u2122 virtual machine specification ."}{"idx": 41420, "node_name": "t", "Dec": "the first input argument"}{"idx": 41421, "node_name": "u", "Dec": "the second input argument"}{"idx": 41423, "node_name": "after", "Dec": "the operation to perform after this operation"}{"idx": 41426, "node_name": "t", "Dec": "the first function argument"}{"idx": 41427, "node_name": "u", "Dec": "the second function argument"}{"idx": 41429, "node_name": "after", "Dec": "the function to apply after this function is applied"}{"idx": 41432, "node_name": "comparator", "Dec": "a comparator for comparing the two values"}{"idx": 41434, "node_name": "comparator", "Dec": "a comparator for comparing the two values"}{"idx": 41437, "node_name": "t", "Dec": "the first input argument"}{"idx": 41438, "node_name": "u", "Dec": "the second input argument"}{"idx": 41440, "node_name": "other", "Dec": "a predicate that will be logically-anded with this predicate"}{"idx": 41443, "node_name": "other", "Dec": "a predicate that will be logically-ored with this predicate"}{"idx": 41448, "node_name": "t", "Dec": "the input argument"}{"idx": 41450, "node_name": "after", "Dec": "the operation to perform after this operation"}{"idx": 41453, "node_name": "left", "Dec": "the first operand"}{"idx": 41454, "node_name": "right", "Dec": "the second operand"}{"idx": 41457, "node_name": "value", "Dec": "the input argument"}{"idx": 41459, "node_name": "after", "Dec": "the operation to perform after this operation"}{"idx": 41462, "node_name": "value", "Dec": "the function argument"}{"idx": 41465, "node_name": "value", "Dec": "the input argument"}{"idx": 41467, "node_name": "other", "Dec": "a predicate that will be logically-anded with this predicate"}{"idx": 41470, "node_name": "other", "Dec": "a predicate that will be logically-ored with this predicate"}{"idx": 41475, "node_name": "value", "Dec": "the function argument"}{"idx": 41478, "node_name": "value", "Dec": "the function argument"}{"idx": 41481, "node_name": "operand", "Dec": "the operand"}{"idx": 41483, "node_name": "before", "Dec": "the operator to apply before this operator is applied"}{"idx": 41485, "node_name": "after", "Dec": "the operator to apply after this operator is applied"}{"idx": 41489, "node_name": "t", "Dec": "the function argument"}{"idx": 41491, "node_name": "before", "Dec": "the function to apply before this function is applied"}{"idx": 41493, "node_name": "after", "Dec": "the function to apply after this function is applied"}{"idx": 41497, "node_name": "left", "Dec": "the first operand"}{"idx": 41498, "node_name": "right", "Dec": "the second operand"}{"idx": 41501, "node_name": "value", "Dec": "the input argument"}{"idx": 41503, "node_name": "after", "Dec": "the operation to perform after this operation"}{"idx": 41506, "node_name": "value", "Dec": "the function argument"}{"idx": 41509, "node_name": "value", "Dec": "the input argument"}{"idx": 41511, "node_name": "other", "Dec": "a predicate that will be logically-anded with this predicate"}{"idx": 41514, "node_name": "other", "Dec": "a predicate that will be logically-ored with this predicate"}{"idx": 41519, "node_name": "value", "Dec": "the function argument"}{"idx": 41522, "node_name": "value", "Dec": "the function argument"}{"idx": 41525, "node_name": "operand", "Dec": "the operand"}{"idx": 41527, "node_name": "before", "Dec": "the operator to apply before this operator is applied"}{"idx": 41529, "node_name": "after", "Dec": "the operator to apply after this operator is applied"}{"idx": 41533, "node_name": "left", "Dec": "the first operand"}{"idx": 41534, "node_name": "right", "Dec": "the second operand"}{"idx": 41537, "node_name": "value", "Dec": "the input argument"}{"idx": 41539, "node_name": "after", "Dec": "the operation to perform after this operation"}{"idx": 41542, "node_name": "value", "Dec": "the function argument"}{"idx": 41545, "node_name": "value", "Dec": "the input argument"}{"idx": 41547, "node_name": "other", "Dec": "a predicate that will be logically-anded with this predicate"}{"idx": 41550, "node_name": "other", "Dec": "a predicate that will be logically-ored with this predicate"}{"idx": 41555, "node_name": "value", "Dec": "the function argument"}{"idx": 41558, "node_name": "value", "Dec": "the function argument"}{"idx": 41561, "node_name": "operand", "Dec": "the operand"}{"idx": 41563, "node_name": "before", "Dec": "the operator to apply before this operator is applied"}{"idx": 41565, "node_name": "after", "Dec": "the operator to apply after this operator is applied"}{"idx": 41569, "node_name": "t", "Dec": "the first input argument"}{"idx": 41570, "node_name": "value", "Dec": "the second input argument"}{"idx": 41573, "node_name": "t", "Dec": "the first input argument"}{"idx": 41574, "node_name": "value", "Dec": "the second input argument"}{"idx": 41577, "node_name": "t", "Dec": "the first input argument"}{"idx": 41578, "node_name": "value", "Dec": "the second input argument"}{"idx": 41581, "node_name": "t", "Dec": "the input argument"}{"idx": 41583, "node_name": "other", "Dec": "a predicate that will be logically-anded with this predicate"}{"idx": 41586, "node_name": "other", "Dec": "a predicate that will be logically-ored with this predicate"}{"idx": 41588, "node_name": "targetref", "Dec": "the object reference with which to compare for equality , which may be null"}{"idx": 41590, "node_name": "target", "Dec": "predicate to negate"}{"idx": 41595, "node_name": "t", "Dec": "the first function argument"}{"idx": 41596, "node_name": "u", "Dec": "the second function argument"}{"idx": 41599, "node_name": "value", "Dec": "the function argument"}{"idx": 41602, "node_name": "t", "Dec": "the first function argument"}{"idx": 41603, "node_name": "u", "Dec": "the second function argument"}{"idx": 41606, "node_name": "value", "Dec": "the function argument"}{"idx": 41609, "node_name": "t", "Dec": "the first function argument"}{"idx": 41610, "node_name": "u", "Dec": "the second function argument"}{"idx": 41613, "node_name": "value", "Dec": "the function argument"}{"idx": 41621, "node_name": "zone", "Dec": "the given time zone ."}{"idx": 41623, "node_name": "alocale", "Dec": "the given locale ."}{"idx": 41625, "node_name": "zone", "Dec": "the given time zone ."}{"idx": 41626, "node_name": "alocale", "Dec": "the given locale ."}{"idx": 41628, "node_name": "year", "Dec": "the value used to set the year calendar field in the calendar ."}{"idx": 41629, "node_name": "month", "Dec": "the value used to set the month calendar field in the calendar . month value is 0-based . e.g. , 0 for january ."}{"idx": 41630, "node_name": "dayofmonth", "Dec": "the value used to set the day_of_month calendar field in the calendar ."}{"idx": 41632, "node_name": "year", "Dec": "the value used to set the year calendar field in the calendar ."}{"idx": 41633, "node_name": "month", "Dec": "the value used to set the month calendar field in the calendar . month value is 0-based . e.g. , 0 for january ."}{"idx": 41634, "node_name": "dayofmonth", "Dec": "the value used to set the day_of_month calendar field in the calendar ."}{"idx": 41635, "node_name": "hourofday", "Dec": "the value used to set the hour_of_day calendar field in the calendar ."}{"idx": 41636, "node_name": "minute", "Dec": "the value used to set the minute calendar field in the calendar ."}{"idx": 41638, "node_name": "year", "Dec": "the value used to set the year calendar field in the calendar ."}{"idx": 41639, "node_name": "month", "Dec": "the value used to set the month calendar field in the calendar . month value is 0-based . e.g. , 0 for january ."}{"idx": 41640, "node_name": "dayofmonth", "Dec": "the value used to set the day_of_month calendar field in the calendar ."}{"idx": 41641, "node_name": "hourofday", "Dec": "the value used to set the hour_of_day calendar field in the calendar ."}{"idx": 41642, "node_name": "minute", "Dec": "the value used to set the minute calendar field in the calendar ."}{"idx": 41643, "node_name": "second", "Dec": "the value used to set the second calendar field in the calendar ."}{"idx": 41645, "node_name": "date", "Dec": "the given gregorian cutover date ."}{"idx": 41648, "node_name": "year", "Dec": "the given year ."}{"idx": 41651, "node_name": "obj", "Dec": "the object to compare with ."}{"idx": 41654, "node_name": "field", "Dec": "the calendar field ."}{"idx": 41655, "node_name": "amount", "Dec": "the amount of date or time to be added to the field ."}{"idx": 41657, "node_name": "up", "Dec": "indicates if the value of the specified calendar field is to be rolled up or rolled down . use true if rolling up , false otherwise ."}{"idx": 41658, "node_name": "field", "Dec": "the time field ."}{"idx": 41660, "node_name": "field", "Dec": "the calendar field ."}{"idx": 41661, "node_name": "amount", "Dec": "the signed amount to add to field ."}{"idx": 41663, "node_name": "field", "Dec": "the calendar field ."}{"idx": 41665, "node_name": "field", "Dec": "the calendar field ."}{"idx": 41667, "node_name": "field", "Dec": "the calendar field ."}{"idx": 41669, "node_name": "field", "Dec": "the calendar field"}{"idx": 41671, "node_name": "field", "Dec": "the calendar field"}{"idx": 41673, "node_name": "field", "Dec": "the calendar field"}{"idx": 41677, "node_name": "weekyear", "Dec": "the week year"}{"idx": 41678, "node_name": "weekofyear", "Dec": "the week number based on weekyear"}{"idx": 41679, "node_name": "dayofweek", "Dec": "the day of week value : one of the constants for the day_of_week field : sunday , ..., saturday ."}{"idx": 41685, "node_name": "zdt", "Dec": "the zoned date-time object to convert"}{"idx": 41688, "node_name": "initialcapacity", "Dec": "the initial capacity"}{"idx": 41689, "node_name": "loadfactor", "Dec": "the load factor"}{"idx": 41691, "node_name": "initialcapacity", "Dec": "the initial capacity ."}{"idx": 41694, "node_name": "m", "Dec": "the map whose mappings are to be placed in this map"}{"idx": 41698, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 41700, "node_name": "key", "Dec": "the key whose presence in this map is to be tested"}{"idx": 41702, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 41703, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 41705, "node_name": "m", "Dec": "mappings to be stored in this map"}{"idx": 41707, "node_name": "key", "Dec": "key whose mapping is to be removed from the map"}{"idx": 41710, "node_name": "value", "Dec": "value whose presence in this map is to be tested"}{"idx": 41715, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 41716, "node_name": "mappingfunction", "Dec": "the mapping function to compute a value"}{"idx": 41718, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 41719, "node_name": "remappingfunction", "Dec": "the remapping function to compute a value"}{"idx": 41721, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 41722, "node_name": "remappingfunction", "Dec": "the remapping function to compute a value"}{"idx": 41724, "node_name": "key", "Dec": "key with which the resulting value is to be associated"}{"idx": 41725, "node_name": "value", "Dec": "the non-null value to be merged with the existing value associated with the key or , if no existing value or a null value is associated with the key , to be associated with the key"}{"idx": 41726, "node_name": "remappingfunction", "Dec": "the remapping function to recompute a value if present"}{"idx": 41731, "node_name": "c", "Dec": "the collection whose elements are to be placed into this set"}{"idx": 41733, "node_name": "initialcapacity", "Dec": "the initial capacity of the hash map"}{"idx": 41734, "node_name": "loadfactor", "Dec": "the load factor of the hash map"}{"idx": 41736, "node_name": "initialcapacity", "Dec": "the initial capacity of the hash table"}{"idx": 41741, "node_name": "o", "Dec": "element whose presence in this set is to be tested"}{"idx": 41743, "node_name": "e", "Dec": "element to be added to this set"}{"idx": 41745, "node_name": "o", "Dec": "object to be removed from this set , if present"}{"idx": 41751, "node_name": "initialcapacity", "Dec": "the initial capacity of the hashtable ."}{"idx": 41752, "node_name": "loadfactor", "Dec": "the load factor of the hashtable ."}{"idx": 41754, "node_name": "initialcapacity", "Dec": "the initial capacity of the hashtable ."}{"idx": 41757, "node_name": "t", "Dec": "the map whose mappings are to be placed in this map ."}{"idx": 41763, "node_name": "value", "Dec": "a value to search for"}{"idx": 41765, "node_name": "value", "Dec": "value whose presence in this hashtable is to be tested"}{"idx": 41767, "node_name": "key", "Dec": "possible key"}{"idx": 41769, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 41772, "node_name": "key", "Dec": "the hashtable key"}{"idx": 41773, "node_name": "value", "Dec": "the value"}{"idx": 41775, "node_name": "key", "Dec": "the key that needs to be removed"}{"idx": 41777, "node_name": "t", "Dec": "mappings to be stored in this map"}{"idx": 41785, "node_name": "o", "Dec": "object to be compared for equality with this hashtable"}{"idx": 41788, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 41789, "node_name": "mappingfunction", "Dec": "the mapping function to compute a value"}{"idx": 41791, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 41792, "node_name": "remappingfunction", "Dec": "the remapping function to compute a value"}{"idx": 41794, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 41795, "node_name": "remappingfunction", "Dec": "the remapping function to compute a value"}{"idx": 41797, "node_name": "key", "Dec": "key with which the resulting value is to be associated"}{"idx": 41798, "node_name": "value", "Dec": "the non-null value to be merged with the existing value associated with the key or , if no existing value or a null value is associated with the key , to be associated with the key"}{"idx": 41799, "node_name": "remappingfunction", "Dec": "the remapping function to recompute a value if present"}{"idx": 41803, "node_name": "expectedmaxsize", "Dec": "the expected maximum size of the map"}{"idx": 41805, "node_name": "m", "Dec": "the map whose mappings are to be placed into this map"}{"idx": 41809, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 41811, "node_name": "key", "Dec": "possible key"}{"idx": 41813, "node_name": "value", "Dec": "value whose presence in this map is to be tested"}{"idx": 41815, "node_name": "key", "Dec": "the key with which the specified value is to be associated"}{"idx": 41816, "node_name": "value", "Dec": "the value to be associated with the specified key"}{"idx": 41818, "node_name": "m", "Dec": "mappings to be stored in this map"}{"idx": 41820, "node_name": "key", "Dec": "key whose mapping is to be removed from the map"}{"idx": 41823, "node_name": "o", "Dec": "object to be compared for equality with this map"}{"idx": 41831, "node_name": "c", "Dec": "the illegal unicode code point"}{"idx": 41835, "node_name": "c", "Dec": "inapplicable conversion"}{"idx": 41836, "node_name": "arg", "Dec": "class of the mismatched argument"}{"idx": 41842, "node_name": "f", "Dec": "the set of format flags which contain an illegal combination"}{"idx": 41846, "node_name": "p", "Dec": "the precision"}{"idx": 41850, "node_name": "w", "Dec": "the width"}{"idx": 41855, "node_name": "message", "Dec": "the message"}{"idx": 41857, "node_name": "message", "Dec": "the message"}{"idx": 41858, "node_name": "errorindex", "Dec": "the index"}{"idx": 41863, "node_name": "s", "Dec": "the detail message ."}{"idx": 41867, "node_name": "count", "Dec": "the count of values"}{"idx": 41868, "node_name": "min", "Dec": "the minimum value"}{"idx": 41869, "node_name": "max", "Dec": "the maximum value"}{"idx": 41870, "node_name": "sum", "Dec": "the sum of all values"}{"idx": 41872, "node_name": "value", "Dec": "the input value"}{"idx": 41874, "node_name": "other", "Dec": "another intsummarystatistics"}{"idx": 41883, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) ."}{"idx": 41885, "node_name": "message", "Dec": "the detail message . the detail message is saved for later retrieval by the throwable.getmessage() method ."}{"idx": 41891, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 41896, "node_name": "size", "Dec": "the initial number of attributes"}{"idx": 41898, "node_name": "attr", "Dec": "the specified attributes"}{"idx": 41900, "node_name": "name", "Dec": "the attribute name"}{"idx": 41902, "node_name": "name", "Dec": "the attribute name as a string"}{"idx": 41904, "node_name": "name", "Dec": "the attributes.name object"}{"idx": 41906, "node_name": "name", "Dec": "the attribute name"}{"idx": 41907, "node_name": "value", "Dec": "the attribute value"}{"idx": 41909, "node_name": "name", "Dec": "the attribute name as a string"}{"idx": 41910, "node_name": "value", "Dec": "the attribute value"}{"idx": 41912, "node_name": "name", "Dec": "attribute name"}{"idx": 41914, "node_name": "value", "Dec": "the attribute value"}{"idx": 41916, "node_name": "name", "Dec": "the attribute name"}{"idx": 41918, "node_name": "attr", "Dec": "the attributes to be stored in this map"}{"idx": 41926, "node_name": "o", "Dec": "the object to be compared"}{"idx": 41946, "node_name": "name", "Dec": "the attribute string name"}{"idx": 41948, "node_name": "o", "Dec": "the object to compare"}{"idx": 41993, "node_name": "name", "Dec": "the jar file entry name"}{"idx": 41995, "node_name": "ze", "Dec": "the zipentry object to create the jarentry from"}{"idx": 41997, "node_name": "je", "Dec": "the jarentry to copy"}{"idx": 42005, "node_name": "s", "Dec": "the detail message"}{"idx": 42049, "node_name": "name", "Dec": "the name of the jar file to be opened for reading"}{"idx": 42051, "node_name": "name", "Dec": "the name of the jar file to be opened for reading"}{"idx": 42052, "node_name": "verify", "Dec": "whether or not to verify the jar file if it is signed ."}{"idx": 42054, "node_name": "file", "Dec": "the jar file to be opened for reading"}{"idx": 42056, "node_name": "file", "Dec": "the jar file to be opened for reading"}{"idx": 42057, "node_name": "verify", "Dec": "whether or not to verify the jar file if it is signed ."}{"idx": 42059, "node_name": "file", "Dec": "the jar file to be opened for reading"}{"idx": 42060, "node_name": "verify", "Dec": "whether or not to verify the jar file if it is signed ."}{"idx": 42061, "node_name": "mode", "Dec": "the mode in which the file is to be opened"}{"idx": 42063, "node_name": "file", "Dec": "the jar file to be opened for reading"}{"idx": 42064, "node_name": "verify", "Dec": "whether or not to verify the jar file if it is signed ."}{"idx": 42065, "node_name": "mode", "Dec": "the mode in which the file is to be opened"}{"idx": 42066, "node_name": "version", "Dec": "specifies the release version for a multi-release jar file"}{"idx": 42073, "node_name": "name", "Dec": "the jar file entry name"}{"idx": 42075, "node_name": "name", "Dec": "the jar file entry name"}{"idx": 42080, "node_name": "ze", "Dec": "the zip file entry"}{"idx": 42123, "node_name": "in", "Dec": "the actual input stream"}{"idx": 42125, "node_name": "in", "Dec": "the actual input stream"}{"idx": 42126, "node_name": "verify", "Dec": "whether or not to verify the jarinputstream if it is signed ."}{"idx": 42131, "node_name": "b", "Dec": "the buffer into which the data is read"}{"idx": 42132, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 42133, "node_name": "len", "Dec": "the maximum number of bytes to read"}{"idx": 42135, "node_name": "name", "Dec": "the name of the jar / zip file entry"}{"idx": 42178, "node_name": "out", "Dec": "the actual output stream"}{"idx": 42179, "node_name": "man", "Dec": "the optional manifest"}{"idx": 42181, "node_name": "out", "Dec": "the actual output stream"}{"idx": 42183, "node_name": "ze", "Dec": "the zip / jar entry to be written"}{"idx": 42187, "node_name": "is", "Dec": "the input stream containing manifest data"}{"idx": 42189, "node_name": "man", "Dec": "the manifest to copy"}{"idx": 42193, "node_name": "name", "Dec": "entry name"}{"idx": 42196, "node_name": "out", "Dec": "the output stream"}{"idx": 42198, "node_name": "is", "Dec": "the input stream"}{"idx": 42200, "node_name": "o", "Dec": "the object to be compared"}{"idx": 42208, "node_name": "initialcapacity", "Dec": "the initial capacity"}{"idx": 42209, "node_name": "loadfactor", "Dec": "the load factor"}{"idx": 42211, "node_name": "initialcapacity", "Dec": "the initial capacity"}{"idx": 42214, "node_name": "m", "Dec": "the map whose mappings are to be placed in this map"}{"idx": 42216, "node_name": "initialcapacity", "Dec": "the initial capacity"}{"idx": 42217, "node_name": "loadfactor", "Dec": "the load factor"}{"idx": 42218, "node_name": "accessorder", "Dec": "the ordering mode"}{"idx": 42220, "node_name": "value", "Dec": "value whose presence in this map is to be tested"}{"idx": 42222, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 42224, "node_name": "eldest", "Dec": "the least recently inserted entry in the map , or if this is an access-ordered map , the least recently accessed entry . this is the entry that will be removed it removeEldestEntry(java.util.Map.Entry) returns true . if the map was empty prior to the put or putall invocation resulting in this invocation , this will be the entry that was just inserted ; in other words , if the map contains a single entry , the eldest entry is also the newest ."}{"idx": 42230, "node_name": "initialcapacity", "Dec": "the initial capacity of the linked hash set"}{"idx": 42231, "node_name": "loadfactor", "Dec": "the load factor of the linked hash set"}{"idx": 42233, "node_name": "initialcapacity", "Dec": "the initial capacity of the linkedhashset"}{"idx": 42236, "node_name": "c", "Dec": "the collection whose elements are to be placed into this set"}{"idx": 42241, "node_name": "c", "Dec": "the collection whose elements are to be placed into this list"}{"idx": 42247, "node_name": "e", "Dec": "the element to add"}{"idx": 42249, "node_name": "e", "Dec": "the element to add"}{"idx": 42251, "node_name": "o", "Dec": "element whose presence in this list is to be tested"}{"idx": 42254, "node_name": "e", "Dec": "element to be appended to this list"}{"idx": 42256, "node_name": "o", "Dec": "element to be removed from this list , if present"}{"idx": 42258, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 42260, "node_name": "index", "Dec": "index at which to insert the first element from the specified collection"}{"idx": 42261, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 42264, "node_name": "index", "Dec": "index of the element to return"}{"idx": 42266, "node_name": "index", "Dec": "index of the element to replace"}{"idx": 42267, "node_name": "element", "Dec": "element to be stored at the specified position"}{"idx": 42269, "node_name": "index", "Dec": "index at which the specified element is to be inserted"}{"idx": 42270, "node_name": "element", "Dec": "element to be inserted"}{"idx": 42272, "node_name": "index", "Dec": "the index of the element to be removed"}{"idx": 42274, "node_name": "o", "Dec": "element to search for"}{"idx": 42276, "node_name": "o", "Dec": "element to search for"}{"idx": 42282, "node_name": "e", "Dec": "the element to add"}{"idx": 42284, "node_name": "e", "Dec": "the element to insert"}{"idx": 42286, "node_name": "e", "Dec": "the element to insert"}{"idx": 42292, "node_name": "e", "Dec": "the element to push"}{"idx": 42295, "node_name": "o", "Dec": "element to be removed from this list , if present"}{"idx": 42297, "node_name": "o", "Dec": "element to be removed from this list , if present"}{"idx": 42299, "node_name": "index", "Dec": "index of the first element to be returned from the list-iterator ( by a call to next )"}{"idx": 42304, "node_name": "a", "Dec": "the array into which the elements of the list are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 42310, "node_name": "o", "Dec": "element whose presence in this list is to be tested"}{"idx": 42314, "node_name": "a", "Dec": "the array into which the elements of this list are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 42316, "node_name": "e", "Dec": "element to be appended to this list"}{"idx": 42318, "node_name": "o", "Dec": "element to be removed from this list , if present"}{"idx": 42320, "node_name": "c", "Dec": "collection to be checked for containment in this list"}{"idx": 42322, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 42324, "node_name": "index", "Dec": "index at which to insert the first element from the specified collection"}{"idx": 42325, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 42327, "node_name": "c", "Dec": "collection containing elements to be removed from this list"}{"idx": 42329, "node_name": "c", "Dec": "collection containing elements to be retained in this list"}{"idx": 42331, "node_name": "operator", "Dec": "the operator to apply to each element"}{"idx": 42333, "node_name": "c", "Dec": "the comparator used to compare list elements . a null value indicates that the elements ' natural ordering should be used"}{"idx": 42336, "node_name": "o", "Dec": "the object to be compared for equality with this list"}{"idx": 42339, "node_name": "index", "Dec": "index of the element to return"}{"idx": 42341, "node_name": "index", "Dec": "index of the element to replace"}{"idx": 42342, "node_name": "element", "Dec": "element to be stored at the specified position"}{"idx": 42344, "node_name": "index", "Dec": "index at which the specified element is to be inserted"}{"idx": 42345, "node_name": "element", "Dec": "element to be inserted"}{"idx": 42347, "node_name": "index", "Dec": "the index of the element to be removed"}{"idx": 42349, "node_name": "o", "Dec": "element to search for"}{"idx": 42351, "node_name": "o", "Dec": "element to search for"}{"idx": 42354, "node_name": "index", "Dec": "index of the first element to be returned from the list iterator ( by a call to next )"}{"idx": 42356, "node_name": "fromindex", "Dec": "low endpoint ( inclusive ) of the sublist"}{"idx": 42357, "node_name": "toindex", "Dec": "high endpoint ( exclusive ) of the sublist"}{"idx": 42361, "node_name": "e1", "Dec": "the single element"}{"idx": 42363, "node_name": "e1", "Dec": "the first element"}{"idx": 42364, "node_name": "e2", "Dec": "the second element"}{"idx": 42366, "node_name": "e1", "Dec": "the first element"}{"idx": 42367, "node_name": "e2", "Dec": "the second element"}{"idx": 42368, "node_name": "e3", "Dec": "the third element"}{"idx": 42370, "node_name": "e1", "Dec": "the first element"}{"idx": 42371, "node_name": "e2", "Dec": "the second element"}{"idx": 42372, "node_name": "e3", "Dec": "the third element"}{"idx": 42373, "node_name": "e4", "Dec": "the fourth element"}{"idx": 42375, "node_name": "e1", "Dec": "the first element"}{"idx": 42376, "node_name": "e2", "Dec": "the second element"}{"idx": 42377, "node_name": "e3", "Dec": "the third element"}{"idx": 42378, "node_name": "e4", "Dec": "the fourth element"}{"idx": 42379, "node_name": "e5", "Dec": "the fifth element"}{"idx": 42381, "node_name": "e1", "Dec": "the first element"}{"idx": 42382, "node_name": "e2", "Dec": "the second element"}{"idx": 42383, "node_name": "e3", "Dec": "the third element"}{"idx": 42384, "node_name": "e4", "Dec": "the fourth element"}{"idx": 42385, "node_name": "e5", "Dec": "the fifth element"}{"idx": 42386, "node_name": "e6", "Dec": "the sixth element"}{"idx": 42388, "node_name": "e1", "Dec": "the first element"}{"idx": 42389, "node_name": "e2", "Dec": "the second element"}{"idx": 42390, "node_name": "e3", "Dec": "the third element"}{"idx": 42391, "node_name": "e4", "Dec": "the fourth element"}{"idx": 42392, "node_name": "e5", "Dec": "the fifth element"}{"idx": 42393, "node_name": "e6", "Dec": "the sixth element"}{"idx": 42394, "node_name": "e7", "Dec": "the seventh element"}{"idx": 42396, "node_name": "e1", "Dec": "the first element"}{"idx": 42397, "node_name": "e2", "Dec": "the second element"}{"idx": 42398, "node_name": "e3", "Dec": "the third element"}{"idx": 42399, "node_name": "e4", "Dec": "the fourth element"}{"idx": 42400, "node_name": "e5", "Dec": "the fifth element"}{"idx": 42401, "node_name": "e6", "Dec": "the sixth element"}{"idx": 42402, "node_name": "e7", "Dec": "the seventh element"}{"idx": 42403, "node_name": "e8", "Dec": "the eighth element"}{"idx": 42405, "node_name": "e1", "Dec": "the first element"}{"idx": 42406, "node_name": "e2", "Dec": "the second element"}{"idx": 42407, "node_name": "e3", "Dec": "the third element"}{"idx": 42408, "node_name": "e4", "Dec": "the fourth element"}{"idx": 42409, "node_name": "e5", "Dec": "the fifth element"}{"idx": 42410, "node_name": "e6", "Dec": "the sixth element"}{"idx": 42411, "node_name": "e7", "Dec": "the seventh element"}{"idx": 42412, "node_name": "e8", "Dec": "the eighth element"}{"idx": 42413, "node_name": "e9", "Dec": "the ninth element"}{"idx": 42415, "node_name": "e1", "Dec": "the first element"}{"idx": 42416, "node_name": "e2", "Dec": "the second element"}{"idx": 42417, "node_name": "e3", "Dec": "the third element"}{"idx": 42418, "node_name": "e4", "Dec": "the fourth element"}{"idx": 42419, "node_name": "e5", "Dec": "the fifth element"}{"idx": 42420, "node_name": "e6", "Dec": "the sixth element"}{"idx": 42421, "node_name": "e7", "Dec": "the seventh element"}{"idx": 42422, "node_name": "e8", "Dec": "the eighth element"}{"idx": 42423, "node_name": "e9", "Dec": "the ninth element"}{"idx": 42424, "node_name": "e10", "Dec": "the tenth element"}{"idx": 42426, "node_name": "elements", "Dec": "the elements to be contained in the list"}{"idx": 42428, "node_name": "coll", "Dec": "a collection from which elements are drawn , must be non-null"}{"idx": 42438, "node_name": "e", "Dec": "the element with which to replace the last element returned by next or previous"}{"idx": 42440, "node_name": "e", "Dec": "the element to insert"}{"idx": 42449, "node_name": "locale", "Dec": "the locale"}{"idx": 42451, "node_name": "languagetag", "Dec": "the language tag"}{"idx": 42453, "node_name": "language", "Dec": "the language"}{"idx": 42455, "node_name": "script", "Dec": "the script"}{"idx": 42457, "node_name": "region", "Dec": "the region"}{"idx": 42459, "node_name": "variant", "Dec": "the variant"}{"idx": 42461, "node_name": "key", "Dec": "the extension key"}{"idx": 42462, "node_name": "value", "Dec": "the extension value"}{"idx": 42464, "node_name": "key", "Dec": "the unicode locale key"}{"idx": 42465, "node_name": "type", "Dec": "the unicode locale type"}{"idx": 42467, "node_name": "attribute", "Dec": "the attribute"}{"idx": 42469, "node_name": "attribute", "Dec": "the attribute"}{"idx": 42476, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 42480, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 42484, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 42511, "node_name": "language", "Dec": "an iso 639 alpha-2 or alpha-3 language code , or a language subtag up to 8 characters in length . see the locale class description about valid language values ."}{"idx": 42512, "node_name": "country", "Dec": "an iso 3166 alpha-2 country code or a un m.49 numeric-3 area code . see the locale class description about valid country values ."}{"idx": 42513, "node_name": "variant", "Dec": "any arbitrary value used to indicate a variation of a locale . see the locale class description for the details ."}{"idx": 42515, "node_name": "language", "Dec": "an iso 639 alpha-2 or alpha-3 language code , or a language subtag up to 8 characters in length . see the locale class description about valid language values ."}{"idx": 42516, "node_name": "country", "Dec": "an iso 3166 alpha-2 country code or a un m.49 numeric-3 area code . see the locale class description about valid country values ."}{"idx": 42518, "node_name": "language", "Dec": "an iso 639 alpha-2 or alpha-3 language code , or a language subtag up to 8 characters in length . see the locale class description about valid language values ."}{"idx": 42521, "node_name": "category", "Dec": "the specified category to get the default locale"}{"idx": 42523, "node_name": "newlocale", "Dec": "the new default locale"}{"idx": 42525, "node_name": "category", "Dec": "the specified category to set the default locale"}{"idx": 42526, "node_name": "newlocale", "Dec": "the new default locale"}{"idx": 42530, "node_name": "type", "Dec": "locale.isocountrycode specified iso code type ."}{"idx": 42539, "node_name": "key", "Dec": "the extension key"}{"idx": 42543, "node_name": "key", "Dec": "the unicode locale key"}{"idx": 42548, "node_name": "languagetag", "Dec": "the language tag"}{"idx": 42553, "node_name": "inlocale", "Dec": "the locale for which to retrieve the display language ."}{"idx": 42556, "node_name": "inlocale", "Dec": "the locale for which to retrieve the display script ."}{"idx": 42559, "node_name": "inlocale", "Dec": "the locale for which to retrieve the display country ."}{"idx": 42562, "node_name": "inlocale", "Dec": "the locale for which to retrieve the display variant code ."}{"idx": 42565, "node_name": "inlocale", "Dec": "the locale for which to retrieve the display name ."}{"idx": 42569, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 42571, "node_name": "prioritylist", "Dec": "user's language priority list in which each language tag is sorted in descending order based on priority or weight"}{"idx": 42572, "node_name": "locales", "Dec": "locale instances used for matching"}{"idx": 42573, "node_name": "mode", "Dec": "filtering mode"}{"idx": 42575, "node_name": "prioritylist", "Dec": "user's language priority list in which each language tag is sorted in descending order based on priority or weight"}{"idx": 42576, "node_name": "locales", "Dec": "locale instances used for matching"}{"idx": 42578, "node_name": "prioritylist", "Dec": "user's language priority list in which each language tag is sorted in descending order based on priority or weight"}{"idx": 42579, "node_name": "tags", "Dec": "language tags"}{"idx": 42580, "node_name": "mode", "Dec": "filtering mode"}{"idx": 42582, "node_name": "prioritylist", "Dec": "user's language priority list in which each language tag is sorted in descending order based on priority or weight"}{"idx": 42583, "node_name": "tags", "Dec": "language tags"}{"idx": 42585, "node_name": "prioritylist", "Dec": "user's language priority list in which each language tag is sorted in descending order based on priority or weight"}{"idx": 42586, "node_name": "locales", "Dec": "locale instances used for matching"}{"idx": 42588, "node_name": "prioritylist", "Dec": "user's language priority list in which each language tag is sorted in descending order based on priority or weight"}{"idx": 42589, "node_name": "tags", "Dec": "language tangs used for matching"}{"idx": 42594, "node_name": "range", "Dec": "a language range"}{"idx": 42596, "node_name": "range", "Dec": "a language range"}{"idx": 42597, "node_name": "weight", "Dec": "a weight value between min_weight and max_weight"}{"idx": 42601, "node_name": "ranges", "Dec": "a list of comma-separated language ranges or a list of language ranges in the form of the \" accept-language \" header defined in rfc 2616"}{"idx": 42603, "node_name": "ranges", "Dec": "a list of comma-separated language ranges or a list of language ranges in the form of the \" accept-language \" header defined in rfc 2616"}{"idx": 42604, "node_name": "map", "Dec": "a map containing information to customize language ranges"}{"idx": 42606, "node_name": "prioritylist", "Dec": "user's language priority list"}{"idx": 42607, "node_name": "map", "Dec": "a map containing information to customize language ranges"}{"idx": 42610, "node_name": "obj", "Dec": "the object to compare with"}{"idx": 42615, "node_name": "record", "Dec": "description of the log event . a null record is silently ignored and is not published"}{"idx": 42626, "node_name": "msg", "Dec": "a descriptive string ( may be null )"}{"idx": 42627, "node_name": "ex", "Dec": "an exception ( may be null )"}{"idx": 42628, "node_name": "code", "Dec": "an error code defined in errormanager"}{"idx": 42632, "node_name": "pattern", "Dec": "the name of the output file"}{"idx": 42634, "node_name": "pattern", "Dec": "the name of the output file"}{"idx": 42635, "node_name": "append", "Dec": "specifies append mode"}{"idx": 42637, "node_name": "pattern", "Dec": "the pattern for naming the output file"}{"idx": 42638, "node_name": "limit", "Dec": "the maximum number of bytes to write to any one file"}{"idx": 42639, "node_name": "count", "Dec": "the number of files to use"}{"idx": 42641, "node_name": "pattern", "Dec": "the pattern for naming the output file"}{"idx": 42642, "node_name": "limit", "Dec": "the maximum number of bytes to write to any one file"}{"idx": 42643, "node_name": "count", "Dec": "the number of files to use"}{"idx": 42644, "node_name": "append", "Dec": "specifies append mode"}{"idx": 42646, "node_name": "pattern", "Dec": "the pattern for naming the output file"}{"idx": 42647, "node_name": "limit", "Dec": "the maximum number of bytes to write to any one file"}{"idx": 42648, "node_name": "count", "Dec": "the number of files to use"}{"idx": 42649, "node_name": "append", "Dec": "specifies append mode"}{"idx": 42651, "node_name": "record", "Dec": "description of the log event . a null record is silently ignored and is not published"}{"idx": 42655, "node_name": "record", "Dec": "a logrecord"}{"idx": 42659, "node_name": "record", "Dec": "the log record to be formatted ."}{"idx": 42661, "node_name": "h", "Dec": "the target handler ( can be null )"}{"idx": 42663, "node_name": "h", "Dec": "the target handler ( can be null )"}{"idx": 42665, "node_name": "record", "Dec": "the log record containing the raw message"}{"idx": 42669, "node_name": "record", "Dec": "description of the log event . a null record is silently ignored and is not published"}{"idx": 42673, "node_name": "newformatter", "Dec": "the formatter to use ( may not be null )"}{"idx": 42676, "node_name": "encoding", "Dec": "the name of a supported character encoding . may be null , to indicate the default platform encoding ."}{"idx": 42679, "node_name": "newfilter", "Dec": "a filter object ( may be null )"}{"idx": 42682, "node_name": "em", "Dec": "the new errormanager"}{"idx": 42685, "node_name": "msg", "Dec": "a descriptive string ( may be null )"}{"idx": 42686, "node_name": "ex", "Dec": "an exception ( may be null )"}{"idx": 42687, "node_name": "code", "Dec": "an error code defined in errormanager"}{"idx": 42689, "node_name": "newlevel", "Dec": "the new value for the log level"}{"idx": 42692, "node_name": "record", "Dec": "a logrecord ( may be null ) ."}{"idx": 42704, "node_name": "name", "Dec": "the name of the level , for example \" severe \" ."}{"idx": 42705, "node_name": "value", "Dec": "an integer value for the level ."}{"idx": 42707, "node_name": "name", "Dec": "the name of the level , for example \" severe \" ."}{"idx": 42708, "node_name": "value", "Dec": "an integer value for the level ."}{"idx": 42709, "node_name": "resourcebundlename", "Dec": "name of a resource bundle to use in localizing the given name . if the resourcebundlename is null or an empty string , it is ignored ."}{"idx": 42716, "node_name": "name", "Dec": "string to be parsed"}{"idx": 42718, "node_name": "ox", "Dec": "the reference object with which to compare ."}{"idx": 42723, "node_name": "name", "Dec": "a name for the logger . this should be a dot-separated name and should normally be based on the package name or class name of the subsystem , such as java.net or javax.swing . it may be null for anonymous loggers ."}{"idx": 42724, "node_name": "resourcebundlename", "Dec": "name of resourcebundle to be used for localizing messages for this logger . may be null if none of the messages require localization ."}{"idx": 42727, "node_name": "name", "Dec": "a name for the logger . this should be a dot-separated name and should normally be based on the package name or class name of the subsystem , such as java.net or javax.swing"}{"idx": 42729, "node_name": "name", "Dec": "a name for the logger . this should be a dot-separated name and should normally be based on the package name or class name of the subsystem , such as java.net or javax.swing"}{"idx": 42730, "node_name": "resourcebundlename", "Dec": "name of resourcebundle to be used for localizing messages for this logger . may be null if none of the messages require localization ."}{"idx": 42733, "node_name": "resourcebundlename", "Dec": "name of resourcebundle to be used for localizing messages for this logger . may be null if none of the messages require localization ."}{"idx": 42737, "node_name": "newfilter", "Dec": "a filter object ( may be null )"}{"idx": 42740, "node_name": "record", "Dec": "the logrecord to be published"}{"idx": 42742, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42743, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42745, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42746, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42748, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42749, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42750, "node_name": "param1", "Dec": "parameter to the message"}{"idx": 42752, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42753, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42754, "node_name": "params", "Dec": "array of parameters to the message"}{"idx": 42756, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42757, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42758, "node_name": "thrown", "Dec": "throwable associated with log message ."}{"idx": 42760, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42761, "node_name": "thrown", "Dec": "throwable associated with log message ."}{"idx": 42762, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42764, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42765, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42766, "node_name": "sourcemethod", "Dec": "name of method that issued the logging request"}{"idx": 42767, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42769, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42770, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42771, "node_name": "sourcemethod", "Dec": "name of method that issued the logging request"}{"idx": 42772, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42774, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42775, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42776, "node_name": "sourcemethod", "Dec": "name of method that issued the logging request"}{"idx": 42777, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42778, "node_name": "param1", "Dec": "parameter to the log message ."}{"idx": 42780, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42781, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42782, "node_name": "sourcemethod", "Dec": "name of method that issued the logging request"}{"idx": 42783, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42784, "node_name": "params", "Dec": "array of parameters to the message"}{"idx": 42786, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42787, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42788, "node_name": "sourcemethod", "Dec": "name of method that issued the logging request"}{"idx": 42789, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42790, "node_name": "thrown", "Dec": "throwable associated with log message ."}{"idx": 42792, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42793, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42794, "node_name": "sourcemethod", "Dec": "name of method that issued the logging request"}{"idx": 42795, "node_name": "thrown", "Dec": "throwable associated with log message ."}{"idx": 42796, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42798, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42799, "node_name": "sourceclass", "Dec": "name of the class that issued the logging request"}{"idx": 42800, "node_name": "sourcemethod", "Dec": "name of logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Object...) that issued the logging request"}{"idx": 42801, "node_name": "bundle", "Dec": "resource bundle to localize msg , can be null ."}{"idx": 42802, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42803, "node_name": "params", "Dec": "parameters to the message ( optional , may be none ) ."}{"idx": 42805, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42806, "node_name": "bundle", "Dec": "resource bundle to localize msg ; can be null ."}{"idx": 42807, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42808, "node_name": "params", "Dec": "parameters to the message ( optional , may be none ) ."}{"idx": 42810, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42811, "node_name": "sourceclass", "Dec": "name of the class that issued the logging request"}{"idx": 42812, "node_name": "sourcemethod", "Dec": "name of logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Throwable) that issued the logging request"}{"idx": 42813, "node_name": "bundle", "Dec": "resource bundle to localize msg , can be null"}{"idx": 42814, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42815, "node_name": "thrown", "Dec": "throwable associated with the log message ."}{"idx": 42817, "node_name": "level", "Dec": "one of the message level identifiers , e.g. , severe"}{"idx": 42818, "node_name": "bundle", "Dec": "resource bundle to localize msg ; can be null ."}{"idx": 42819, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42820, "node_name": "thrown", "Dec": "throwable associated with the log message ."}{"idx": 42822, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42823, "node_name": "sourcemethod", "Dec": "name of method that is being entered"}{"idx": 42825, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42826, "node_name": "sourcemethod", "Dec": "name of method that is being entered"}{"idx": 42827, "node_name": "param1", "Dec": "parameter to entering(java.lang.String,java.lang.String,java.lang.Object) being entered"}{"idx": 42829, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42830, "node_name": "sourcemethod", "Dec": "name of method that is being entered"}{"idx": 42831, "node_name": "params", "Dec": "array of parameters to entering(java.lang.String,java.lang.String,java.lang.Object[]) being entered"}{"idx": 42833, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42834, "node_name": "sourcemethod", "Dec": "name of exiting(java.lang.String,java.lang.String)"}{"idx": 42836, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42837, "node_name": "sourcemethod", "Dec": "name of exiting(java.lang.String,java.lang.String,java.lang.Object)"}{"idx": 42838, "node_name": "result", "Dec": "object that is being returned"}{"idx": 42840, "node_name": "sourceclass", "Dec": "name of class that issued the logging request"}{"idx": 42841, "node_name": "sourcemethod", "Dec": "name of throwing(java.lang.String,java.lang.String,java.lang.Throwable) ."}{"idx": 42842, "node_name": "thrown", "Dec": "the throwable that is being thrown ."}{"idx": 42844, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42846, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42848, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42850, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42852, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42854, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42856, "node_name": "msg", "Dec": "the string message ( or a key in the message catalog )"}{"idx": 42858, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42860, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42862, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42864, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42866, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42868, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42870, "node_name": "msgsupplier", "Dec": "a function , which when called , produces the desired log message"}{"idx": 42872, "node_name": "newlevel", "Dec": "the new value for the log level ( may be null )"}{"idx": 42875, "node_name": "level", "Dec": "a message logging level"}{"idx": 42878, "node_name": "handler", "Dec": "a logging handler"}{"idx": 42880, "node_name": "handler", "Dec": "a logging handler"}{"idx": 42883, "node_name": "useparenthandlers", "Dec": "true if output is to be sent to the logger's parent ."}{"idx": 42886, "node_name": "bundle", "Dec": "the resource bundle that this logger shall use ."}{"idx": 42889, "node_name": "parent", "Dec": "the new parent logger"}{"idx": 42893, "node_name": "name", "Dec": "permission name . must be \" control \" ."}{"idx": 42894, "node_name": "actions", "Dec": "must be either null or the empty string ."}{"idx": 42900, "node_name": "logger", "Dec": "the new logger ."}{"idx": 42902, "node_name": "name", "Dec": "name of the logger"}{"idx": 42907, "node_name": "ins", "Dec": "stream to read properties from"}{"idx": 42909, "node_name": "mapper", "Dec": "a functional interface that takes a configuration key k and returns a function f ( o , n ) whose returned value will be applied to the resulting configuration . the function f may return null to indicate that the property k will not be added to the resulting configuration . if mapper is null then ( k ) -> (( o , n ) -> n ) is assumed . for each k , the mapped function f will be invoked with the value associated with k in the old configuration ( i.e o ) and the value associated with k in the new configuration ( i.e. n ) . a null value for o or n indicates that no value was present for k in the corresponding configuration ."}{"idx": 42911, "node_name": "ins", "Dec": "a stream to read properties from"}{"idx": 42912, "node_name": "mapper", "Dec": "a functional interface that takes a configuration key k and returns a function f ( o , n ) whose returned value will be applied to the resulting configuration . the function f may return null to indicate that the property k will not be added to the resulting configuration . if mapper is null then ( k ) -> (( o , n ) -> n ) is assumed . for each k , the mapped function f will be invoked with the value associated with k in the old configuration ( i.e o ) and the value associated with k in the new configuration ( i.e. n ) . a null value for o or n indicates that no value was present for k in the corresponding configuration ."}{"idx": 42914, "node_name": "name", "Dec": "property name"}{"idx": 42917, "node_name": "listener", "Dec": "a configuration listener that will be invoked after the configuration changed ."}{"idx": 42919, "node_name": "listener", "Dec": "the configuration listener to remove ."}{"idx": 42922, "node_name": "level", "Dec": "a logging level value"}{"idx": 42923, "node_name": "msg", "Dec": "the raw non-localized logging message ( may be null )"}{"idx": 42926, "node_name": "name", "Dec": "the source logger name ( may be null )"}{"idx": 42929, "node_name": "bundle", "Dec": "localization bundle ( may be null )"}{"idx": 42932, "node_name": "name", "Dec": "localization bundle name ( may be null )"}{"idx": 42935, "node_name": "level", "Dec": "the logging message level"}{"idx": 42938, "node_name": "seq", "Dec": "the sequence number"}{"idx": 42941, "node_name": "sourceclassname", "Dec": "the source class name ( may be null )"}{"idx": 42944, "node_name": "sourcemethodname", "Dec": "the source method name ( may be null )"}{"idx": 42947, "node_name": "message", "Dec": "the raw message string ( may be null )"}{"idx": 42950, "node_name": "parameters", "Dec": "the log message parameters . ( may be null )"}{"idx": 42953, "node_name": "threadid", "Dec": "the thread id"}{"idx": 42957, "node_name": "instant", "Dec": "the instant that the event occurred ."}{"idx": 42960, "node_name": "thrown", "Dec": "a throwable ( may be null )"}{"idx": 42964, "node_name": "target", "Dec": "the handler to which to publish output ."}{"idx": 42965, "node_name": "size", "Dec": "the number of log records to buffer ( must be greater than zero )"}{"idx": 42966, "node_name": "pushlevel", "Dec": "message level to push on"}{"idx": 42968, "node_name": "record", "Dec": "description of the log event . a null record is silently ignored and is not published"}{"idx": 42973, "node_name": "newlevel", "Dec": "the new value of the pushlevel"}{"idx": 42976, "node_name": "record", "Dec": "a logrecord ( may be null ) ."}{"idx": 42980, "node_name": "record", "Dec": "the log record to be formatted ."}{"idx": 42984, "node_name": "host", "Dec": "target host ."}{"idx": 42985, "node_name": "port", "Dec": "target port ."}{"idx": 42988, "node_name": "record", "Dec": "description of the log event . a null record is silently ignored and is not published"}{"idx": 42992, "node_name": "out", "Dec": "the target output stream"}{"idx": 42993, "node_name": "formatter", "Dec": "formatter to be used to format output"}{"idx": 42995, "node_name": "out", "Dec": "new output stream . may not be null ."}{"idx": 42997, "node_name": "encoding", "Dec": "the name of a supported character encoding . may be null , to indicate the default platform encoding ."}{"idx": 42999, "node_name": "record", "Dec": "description of the log event . a null record is silently ignored and is not published"}{"idx": 43001, "node_name": "record", "Dec": "a logrecord ( may be null ) ."}{"idx": 43007, "node_name": "record", "Dec": "the log record to be formatted ."}{"idx": 43009, "node_name": "h", "Dec": "the target handler ( can be null )"}{"idx": 43011, "node_name": "h", "Dec": "the target handler ( can be null )"}{"idx": 43015, "node_name": "count", "Dec": "the count of values"}{"idx": 43016, "node_name": "min", "Dec": "the minimum value"}{"idx": 43017, "node_name": "max", "Dec": "the maximum value"}{"idx": 43018, "node_name": "sum", "Dec": "the sum of all values"}{"idx": 43020, "node_name": "value", "Dec": "the input value"}{"idx": 43022, "node_name": "value", "Dec": "the input value"}{"idx": 43024, "node_name": "other", "Dec": "another longsummarystatistics"}{"idx": 43035, "node_name": "value", "Dec": "new value to be stored in this entry"}{"idx": 43037, "node_name": "o", "Dec": "object to be compared for equality with this map entry"}{"idx": 43042, "node_name": "cmp", "Dec": "the key comparator"}{"idx": 43044, "node_name": "cmp", "Dec": "the value comparator"}{"idx": 43049, "node_name": "key", "Dec": "key whose presence in this map is to be tested"}{"idx": 43051, "node_name": "value", "Dec": "value whose presence in this map is to be tested"}{"idx": 43053, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 43055, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 43056, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 43058, "node_name": "key", "Dec": "key whose mapping is to be removed from the map"}{"idx": 43060, "node_name": "m", "Dec": "mappings to be stored in this map"}{"idx": 43066, "node_name": "o", "Dec": "object to be compared for equality with this map"}{"idx": 43069, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 43070, "node_name": "defaultvalue", "Dec": "the default mapping of the key"}{"idx": 43072, "node_name": "action", "Dec": "the action to be performed for each entry"}{"idx": 43074, "node_name": "function", "Dec": "the function to apply to each entry"}{"idx": 43076, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 43077, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 43079, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 43080, "node_name": "value", "Dec": "value expected to be associated with the specified key"}{"idx": 43082, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 43083, "node_name": "oldvalue", "Dec": "value expected to be associated with the specified key"}{"idx": 43084, "node_name": "newvalue", "Dec": "value to be associated with the specified key"}{"idx": 43086, "node_name": "key", "Dec": "key with which the specified value is associated"}{"idx": 43087, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 43089, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 43090, "node_name": "mappingfunction", "Dec": "the mapping function to compute a value"}{"idx": 43092, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 43093, "node_name": "remappingfunction", "Dec": "the remapping function to compute a value"}{"idx": 43095, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 43096, "node_name": "remappingfunction", "Dec": "the remapping function to compute a value"}{"idx": 43098, "node_name": "key", "Dec": "key with which the resulting value is to be associated"}{"idx": 43099, "node_name": "value", "Dec": "the non-null value to be merged with the existing value associated with the key or , if no existing value or a null value is associated with the key , to be associated with the key"}{"idx": 43100, "node_name": "remappingfunction", "Dec": "the remapping function to recompute a value if present"}{"idx": 43103, "node_name": "k1", "Dec": "the mapping's key"}{"idx": 43104, "node_name": "v1", "Dec": "the mapping's value"}{"idx": 43106, "node_name": "k1", "Dec": "the first mapping's key"}{"idx": 43107, "node_name": "v1", "Dec": "the first mapping's value"}{"idx": 43108, "node_name": "k2", "Dec": "the second mapping's key"}{"idx": 43109, "node_name": "v2", "Dec": "the second mapping's value"}{"idx": 43111, "node_name": "k1", "Dec": "the first mapping's key"}{"idx": 43112, "node_name": "v1", "Dec": "the first mapping's value"}{"idx": 43113, "node_name": "k2", "Dec": "the second mapping's key"}{"idx": 43114, "node_name": "v2", "Dec": "the second mapping's value"}{"idx": 43115, "node_name": "k3", "Dec": "the third mapping's key"}{"idx": 43116, "node_name": "v3", "Dec": "the third mapping's value"}{"idx": 43118, "node_name": "k1", "Dec": "the first mapping's key"}{"idx": 43119, "node_name": "v1", "Dec": "the first mapping's value"}{"idx": 43120, "node_name": "k2", "Dec": "the second mapping's key"}{"idx": 43121, "node_name": "v2", "Dec": "the second mapping's value"}{"idx": 43122, "node_name": "k3", "Dec": "the third mapping's key"}{"idx": 43123, "node_name": "v3", "Dec": "the third mapping's value"}{"idx": 43124, "node_name": "k4", "Dec": "the fourth mapping's key"}{"idx": 43125, "node_name": "v4", "Dec": "the fourth mapping's value"}{"idx": 43127, "node_name": "k1", "Dec": "the first mapping's key"}{"idx": 43128, "node_name": "v1", "Dec": "the first mapping's value"}{"idx": 43129, "node_name": "k2", "Dec": "the second mapping's key"}{"idx": 43130, "node_name": "v2", "Dec": "the second mapping's value"}{"idx": 43131, "node_name": "k3", "Dec": "the third mapping's key"}{"idx": 43132, "node_name": "v3", "Dec": "the third mapping's value"}{"idx": 43133, "node_name": "k4", "Dec": "the fourth mapping's key"}{"idx": 43134, "node_name": "v4", "Dec": "the fourth mapping's value"}{"idx": 43135, "node_name": "k5", "Dec": "the fifth mapping's key"}{"idx": 43136, "node_name": "v5", "Dec": "the fifth mapping's value"}{"idx": 43138, "node_name": "k1", "Dec": "the first mapping's key"}{"idx": 43139, "node_name": "v1", "Dec": "the first mapping's value"}{"idx": 43140, "node_name": "k2", "Dec": "the second mapping's key"}{"idx": 43141, "node_name": "v2", "Dec": "the second mapping's value"}{"idx": 43142, "node_name": "k3", "Dec": "the third mapping's key"}{"idx": 43143, "node_name": "v3", "Dec": "the third mapping's value"}{"idx": 43144, "node_name": "k4", "Dec": "the fourth mapping's key"}{"idx": 43145, "node_name": "v4", "Dec": "the fourth mapping's value"}{"idx": 43146, "node_name": "k5", "Dec": "the fifth mapping's key"}{"idx": 43147, "node_name": "v5", "Dec": "the fifth mapping's value"}{"idx": 43148, "node_name": "k6", "Dec": "the sixth mapping's key"}{"idx": 43149, "node_name": "v6", "Dec": "the sixth mapping's value"}{"idx": 43151, "node_name": "k1", "Dec": "the first mapping's key"}{"idx": 43152, "node_name": "v1", "Dec": "the first mapping's value"}{"idx": 43153, "node_name": "k2", "Dec": "the second mapping's key"}{"idx": 43154, "node_name": "v2", "Dec": "the second mapping's value"}{"idx": 43155, "node_name": "k3", "Dec": "the third mapping's key"}{"idx": 43156, "node_name": "v3", "Dec": "the third mapping's value"}{"idx": 43157, "node_name": "k4", "Dec": "the fourth mapping's key"}{"idx": 43158, "node_name": "v4", "Dec": "the fourth mapping's value"}{"idx": 43159, "node_name": "k5", "Dec": "the fifth mapping's key"}{"idx": 43160, "node_name": "v5", "Dec": "the fifth mapping's value"}{"idx": 43161, "node_name": "k6", "Dec": "the sixth mapping's key"}{"idx": 43162, "node_name": "v6", "Dec": "the sixth mapping's value"}{"idx": 43163, "node_name": "k7", "Dec": "the seventh mapping's key"}{"idx": 43164, "node_name": "v7", "Dec": "the seventh mapping's value"}{"idx": 43166, "node_name": "k1", "Dec": "the first mapping's key"}{"idx": 43167, "node_name": "v1", "Dec": "the first mapping's value"}{"idx": 43168, "node_name": "k2", "Dec": "the second mapping's key"}{"idx": 43169, "node_name": "v2", "Dec": "the second mapping's value"}{"idx": 43170, "node_name": "k3", "Dec": "the third mapping's key"}{"idx": 43171, "node_name": "v3", "Dec": "the third mapping's value"}{"idx": 43172, "node_name": "k4", "Dec": "the fourth mapping's key"}{"idx": 43173, "node_name": "v4", "Dec": "the fourth mapping's value"}{"idx": 43174, "node_name": "k5", "Dec": "the fifth mapping's key"}{"idx": 43175, "node_name": "v5", "Dec": "the fifth mapping's value"}{"idx": 43176, "node_name": "k6", "Dec": "the sixth mapping's key"}{"idx": 43177, "node_name": "v6", "Dec": "the sixth mapping's value"}{"idx": 43178, "node_name": "k7", "Dec": "the seventh mapping's key"}{"idx": 43179, "node_name": "v7", "Dec": "the seventh mapping's value"}{"idx": 43180, "node_name": "k8", "Dec": "the eighth mapping's key"}{"idx": 43181, "node_name": "v8", "Dec": "the eighth mapping's value"}{"idx": 43183, "node_name": "k1", "Dec": "the first mapping's key"}{"idx": 43184, "node_name": "v1", "Dec": "the first mapping's value"}{"idx": 43185, "node_name": "k2", "Dec": "the second mapping's key"}{"idx": 43186, "node_name": "v2", "Dec": "the second mapping's value"}{"idx": 43187, "node_name": "k3", "Dec": "the third mapping's key"}{"idx": 43188, "node_name": "v3", "Dec": "the third mapping's value"}{"idx": 43189, "node_name": "k4", "Dec": "the fourth mapping's key"}{"idx": 43190, "node_name": "v4", "Dec": "the fourth mapping's value"}{"idx": 43191, "node_name": "k5", "Dec": "the fifth mapping's key"}{"idx": 43192, "node_name": "v5", "Dec": "the fifth mapping's value"}{"idx": 43193, "node_name": "k6", "Dec": "the sixth mapping's key"}{"idx": 43194, "node_name": "v6", "Dec": "the sixth mapping's value"}{"idx": 43195, "node_name": "k7", "Dec": "the seventh mapping's key"}{"idx": 43196, "node_name": "v7", "Dec": "the seventh mapping's value"}{"idx": 43197, "node_name": "k8", "Dec": "the eighth mapping's key"}{"idx": 43198, "node_name": "v8", "Dec": "the eighth mapping's value"}{"idx": 43199, "node_name": "k9", "Dec": "the ninth mapping's key"}{"idx": 43200, "node_name": "v9", "Dec": "the ninth mapping's value"}{"idx": 43202, "node_name": "k1", "Dec": "the first mapping's key"}{"idx": 43203, "node_name": "v1", "Dec": "the first mapping's value"}{"idx": 43204, "node_name": "k2", "Dec": "the second mapping's key"}{"idx": 43205, "node_name": "v2", "Dec": "the second mapping's value"}{"idx": 43206, "node_name": "k3", "Dec": "the third mapping's key"}{"idx": 43207, "node_name": "v3", "Dec": "the third mapping's value"}{"idx": 43208, "node_name": "k4", "Dec": "the fourth mapping's key"}{"idx": 43209, "node_name": "v4", "Dec": "the fourth mapping's value"}{"idx": 43210, "node_name": "k5", "Dec": "the fifth mapping's key"}{"idx": 43211, "node_name": "v5", "Dec": "the fifth mapping's value"}{"idx": 43212, "node_name": "k6", "Dec": "the sixth mapping's key"}{"idx": 43213, "node_name": "v6", "Dec": "the sixth mapping's value"}{"idx": 43214, "node_name": "k7", "Dec": "the seventh mapping's key"}{"idx": 43215, "node_name": "v7", "Dec": "the seventh mapping's value"}{"idx": 43216, "node_name": "k8", "Dec": "the eighth mapping's key"}{"idx": 43217, "node_name": "v8", "Dec": "the eighth mapping's value"}{"idx": 43218, "node_name": "k9", "Dec": "the ninth mapping's key"}{"idx": 43219, "node_name": "v9", "Dec": "the ninth mapping's value"}{"idx": 43220, "node_name": "k10", "Dec": "the tenth mapping's key"}{"idx": 43221, "node_name": "v10", "Dec": "the tenth mapping's value"}{"idx": 43223, "node_name": "entries", "Dec": "map.entrys containing the keys and values from which the map is populated"}{"idx": 43225, "node_name": "k", "Dec": "the key"}{"idx": 43226, "node_name": "v", "Dec": "the value"}{"idx": 43228, "node_name": "map", "Dec": "a map from which entries are drawn , must be non-null"}{"idx": 43231, "node_name": "s", "Dec": "format specifier which does not have a corresponding argument"}{"idx": 43235, "node_name": "s", "Dec": "the format specifier which does not have a width"}{"idx": 43239, "node_name": "s", "Dec": "the detail message"}{"idx": 43240, "node_name": "classname", "Dec": "the name of the resource class"}{"idx": 43241, "node_name": "key", "Dec": "the key for the missing resource ."}{"idx": 43246, "node_name": "key", "Dec": "the key"}{"idx": 43248, "node_name": "key", "Dec": "the key"}{"idx": 43250, "node_name": "key", "Dec": "the key"}{"idx": 43252, "node_name": "key", "Dec": "the key"}{"idx": 43254, "node_name": "key", "Dec": "the key"}{"idx": 43256, "node_name": "key", "Dec": "the key"}{"idx": 43258, "node_name": "key", "Dec": "the key"}{"idx": 43260, "node_name": "key", "Dec": "the key"}{"idx": 43269, "node_name": "fromkey", "Dec": "low endpoint of the keys in the returned map"}{"idx": 43270, "node_name": "frominclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 43271, "node_name": "tokey", "Dec": "high endpoint of the keys in the returned map"}{"idx": 43272, "node_name": "toinclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 43274, "node_name": "tokey", "Dec": "high endpoint of the keys in the returned map"}{"idx": 43275, "node_name": "inclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 43277, "node_name": "fromkey", "Dec": "low endpoint of the keys in the returned map"}{"idx": 43278, "node_name": "inclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 43280, "node_name": "fromkey", "Dec": "low endpoint ( inclusive ) of the keys in the returned map"}{"idx": 43281, "node_name": "tokey", "Dec": "high endpoint ( exclusive ) of the keys in the returned map"}{"idx": 43283, "node_name": "tokey", "Dec": "high endpoint ( exclusive ) of the keys in the returned map"}{"idx": 43285, "node_name": "fromkey", "Dec": "low endpoint ( inclusive ) of the keys in the returned map"}{"idx": 43288, "node_name": "e", "Dec": "the value to match"}{"idx": 43290, "node_name": "e", "Dec": "the value to match"}{"idx": 43292, "node_name": "e", "Dec": "the value to match"}{"idx": 43294, "node_name": "e", "Dec": "the value to match"}{"idx": 43301, "node_name": "fromelement", "Dec": "low endpoint of the returned set"}{"idx": 43302, "node_name": "frominclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 43303, "node_name": "toelement", "Dec": "high endpoint of the returned set"}{"idx": 43304, "node_name": "toinclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 43306, "node_name": "toelement", "Dec": "high endpoint of the returned set"}{"idx": 43307, "node_name": "inclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 43309, "node_name": "fromelement", "Dec": "low endpoint of the returned set"}{"idx": 43310, "node_name": "inclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 43312, "node_name": "fromelement", "Dec": "low endpoint ( inclusive ) of the returned set"}{"idx": 43313, "node_name": "toelement", "Dec": "high endpoint ( exclusive ) of the returned set"}{"idx": 43315, "node_name": "toelement", "Dec": "high endpoint ( exclusive ) of the returned set"}{"idx": 43317, "node_name": "fromelement", "Dec": "low endpoint ( inclusive ) of the returned set"}{"idx": 43321, "node_name": "s", "Dec": "the detail message ."}{"idx": 43324, "node_name": "a", "Dec": "an object"}{"idx": 43325, "node_name": "b", "Dec": "an object to be compared with a for equality"}{"idx": 43327, "node_name": "a", "Dec": "an object"}{"idx": 43328, "node_name": "b", "Dec": "an object to be compared with a for deep equality"}{"idx": 43330, "node_name": "o", "Dec": "an object"}{"idx": 43332, "node_name": "values", "Dec": "the values to be hashed"}{"idx": 43334, "node_name": "o", "Dec": "an object"}{"idx": 43336, "node_name": "o", "Dec": "an object"}{"idx": 43337, "node_name": "nulldefault", "Dec": "string to return if the first argument is null"}{"idx": 43339, "node_name": "a", "Dec": "an object"}{"idx": 43340, "node_name": "b", "Dec": "an object to be compared with a"}{"idx": 43341, "node_name": "c", "Dec": "the comparator to compare the first two arguments"}{"idx": 43343, "node_name": "obj", "Dec": "the object reference to check for nullity"}{"idx": 43345, "node_name": "obj", "Dec": "the object reference to check for nullity"}{"idx": 43346, "node_name": "message", "Dec": "detail message to be used in the event that a nullpointerexception is thrown"}{"idx": 43348, "node_name": "obj", "Dec": "a reference to be checked against null"}{"idx": 43350, "node_name": "obj", "Dec": "a reference to be checked against null"}{"idx": 43352, "node_name": "obj", "Dec": "an object"}{"idx": 43353, "node_name": "defaultobj", "Dec": "a non-null object to return if the first argument is null"}{"idx": 43355, "node_name": "obj", "Dec": "an object"}{"idx": 43356, "node_name": "supplier", "Dec": "of a non-null object to return if the first argument is null"}{"idx": 43358, "node_name": "obj", "Dec": "the object reference to check for nullity"}{"idx": 43359, "node_name": "messagesupplier", "Dec": "supplier of the detail message to be used in the event that a nullpointerexception is thrown"}{"idx": 43361, "node_name": "index", "Dec": "the index"}{"idx": 43362, "node_name": "length", "Dec": "the upper-bound ( exclusive ) of the range"}{"idx": 43364, "node_name": "fromindex", "Dec": "the lower-bound ( inclusive ) of the sub-range"}{"idx": 43365, "node_name": "toindex", "Dec": "the upper-bound ( exclusive ) of the sub-range"}{"idx": 43366, "node_name": "length", "Dec": "the upper-bound ( exclusive ) the range"}{"idx": 43368, "node_name": "fromindex", "Dec": "the lower-bound ( inclusive ) of the sub-interval"}{"idx": 43369, "node_name": "size", "Dec": "the size of the sub-range"}{"idx": 43370, "node_name": "length", "Dec": "the upper-bound ( exclusive ) of the range"}{"idx": 43376, "node_name": "value", "Dec": "the value to describe , which must be non-null"}{"idx": 43378, "node_name": "value", "Dec": "the possibly-null value to describe"}{"idx": 43383, "node_name": "action", "Dec": "the action to be performed , if a value is present"}{"idx": 43385, "node_name": "action", "Dec": "the action to be performed , if a value is present"}{"idx": 43386, "node_name": "emptyaction", "Dec": "the empty-based action to be performed , if no value is present"}{"idx": 43388, "node_name": "predicate", "Dec": "the predicate to apply to a value , if present"}{"idx": 43390, "node_name": "mapper", "Dec": "the mapping function to apply to a value , if present"}{"idx": 43392, "node_name": "mapper", "Dec": "the mapping function to apply to a value , if present"}{"idx": 43394, "node_name": "supplier", "Dec": "the supplying function that produces an optional to be returned"}{"idx": 43397, "node_name": "other", "Dec": "the value to be returned , if no value is present . may be null ."}{"idx": 43399, "node_name": "supplier", "Dec": "the supplying function that produces a value to be returned"}{"idx": 43402, "node_name": "exceptionsupplier", "Dec": "the supplying function that produces an exception to be thrown"}{"idx": 43404, "node_name": "obj", "Dec": "an object to be tested for equality"}{"idx": 43410, "node_name": "value", "Dec": "the value to describe"}{"idx": 43415, "node_name": "action", "Dec": "the action to be performed , if a value is present"}{"idx": 43417, "node_name": "action", "Dec": "the action to be performed , if a value is present"}{"idx": 43418, "node_name": "emptyaction", "Dec": "the empty-based action to be performed , if no value is present"}{"idx": 43421, "node_name": "other", "Dec": "the value to be returned , if no value is present"}{"idx": 43423, "node_name": "supplier", "Dec": "the supplying function that produces a value to be returned"}{"idx": 43426, "node_name": "exceptionsupplier", "Dec": "the supplying function that produces an exception to be thrown"}{"idx": 43428, "node_name": "obj", "Dec": "an object to be tested for equality"}{"idx": 43434, "node_name": "value", "Dec": "the value to describe"}{"idx": 43439, "node_name": "action", "Dec": "the action to be performed , if a value is present"}{"idx": 43441, "node_name": "action", "Dec": "the action to be performed , if a value is present"}{"idx": 43442, "node_name": "emptyaction", "Dec": "the empty-based action to be performed , if no value is present"}{"idx": 43445, "node_name": "other", "Dec": "the value to be returned , if no value is present"}{"idx": 43447, "node_name": "supplier", "Dec": "the supplying function that produces a value to be returned"}{"idx": 43450, "node_name": "exceptionsupplier", "Dec": "the supplying function that produces an exception to be thrown"}{"idx": 43452, "node_name": "obj", "Dec": "an object to be tested for equality"}{"idx": 43458, "node_name": "value", "Dec": "the value to describe"}{"idx": 43463, "node_name": "action", "Dec": "the action to be performed , if a value is present"}{"idx": 43465, "node_name": "action", "Dec": "the action to be performed , if a value is present"}{"idx": 43466, "node_name": "emptyaction", "Dec": "the empty-based action to be performed , if no value is present"}{"idx": 43469, "node_name": "other", "Dec": "the value to be returned , if no value is present"}{"idx": 43471, "node_name": "supplier", "Dec": "the supplying function that produces a value to be returned"}{"idx": 43474, "node_name": "exceptionsupplier", "Dec": "the supplying function that produces an exception to be thrown"}{"idx": 43476, "node_name": "obj", "Dec": "an object to be tested for equality"}{"idx": 43483, "node_name": "parent", "Dec": "the parent of this preference node , or null if this is the root ."}{"idx": 43484, "node_name": "name", "Dec": "the name of this preference node , relative to its parent , or \"\" if this is the root ."}{"idx": 43486, "node_name": "key", "Dec": "key with which the specified value is to be associated ."}{"idx": 43487, "node_name": "value", "Dec": "value to be associated with the specified key ."}{"idx": 43489, "node_name": "key", "Dec": "key whose associated value is to be returned ."}{"idx": 43490, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key ."}{"idx": 43492, "node_name": "key", "Dec": "key whose mapping is to be removed from the preference node ."}{"idx": 43495, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43496, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43498, "node_name": "key", "Dec": "key whose associated value is to be returned as an int ."}{"idx": 43499, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as an int ."}{"idx": 43501, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43502, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43504, "node_name": "key", "Dec": "key whose associated value is to be returned as a long ."}{"idx": 43505, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as a long ."}{"idx": 43507, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43508, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43510, "node_name": "key", "Dec": "key whose associated value is to be returned as a boolean ."}{"idx": 43511, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as a boolean ."}{"idx": 43513, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43514, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43516, "node_name": "key", "Dec": "key whose associated value is to be returned as a float ."}{"idx": 43517, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as a float ."}{"idx": 43519, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43520, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43522, "node_name": "key", "Dec": "key whose associated value is to be returned as a double ."}{"idx": 43523, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as a double ."}{"idx": 43525, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43526, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43528, "node_name": "key", "Dec": "key whose associated value is to be returned as a byte array ."}{"idx": 43529, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as a byte array ."}{"idx": 43535, "node_name": "path", "Dec": "the path name of the preference node to return ."}{"idx": 43537, "node_name": "path", "Dec": "the path name of the node whose existence is to be checked ."}{"idx": 43543, "node_name": "key", "Dec": "the key"}{"idx": 43544, "node_name": "value", "Dec": "the value"}{"idx": 43546, "node_name": "key", "Dec": "the key"}{"idx": 43548, "node_name": "key", "Dec": "the key"}{"idx": 43553, "node_name": "nodename", "Dec": "name of the child to be searched for ."}{"idx": 43555, "node_name": "name", "Dec": "the name of the child node to return , relative to this preference node ."}{"idx": 43563, "node_name": "os", "Dec": "the output stream on which to emit the xml document ."}{"idx": 43565, "node_name": "os", "Dec": "the output stream on which to emit the xml document ."}{"idx": 43568, "node_name": "s", "Dec": "the detail message ."}{"idx": 43570, "node_name": "cause", "Dec": "the cause"}{"idx": 43573, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) ."}{"idx": 43575, "node_name": "message", "Dec": "the detail message . the detail message is saved for later retrieval by the throwable.getmessage() method ."}{"idx": 43577, "node_name": "message", "Dec": "the detail message . the detail message is saved for later retrieval by the throwable.getmessage() method ."}{"idx": 43578, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) ."}{"idx": 43581, "node_name": "parent", "Dec": "the parent of the node that was added or removed ."}{"idx": 43582, "node_name": "child", "Dec": "the node that was added or removed ."}{"idx": 43587, "node_name": "evt", "Dec": "a node change event object describing the parent and child node ."}{"idx": 43589, "node_name": "evt", "Dec": "a node change event object describing the parent and child node ."}{"idx": 43592, "node_name": "node", "Dec": "the preferences node that emitted the event ."}{"idx": 43593, "node_name": "key", "Dec": "the key of the preference that was changed ."}{"idx": 43594, "node_name": "newvalue", "Dec": "the new value of the preference , or null if the preference is being removed ."}{"idx": 43600, "node_name": "evt", "Dec": "a preferencechangeevent object describing the event source and the preference that has changed ."}{"idx": 43607, "node_name": "c", "Dec": "the class for whose package a user preference node is desired ."}{"idx": 43609, "node_name": "c", "Dec": "the class for whose package a system preference node is desired ."}{"idx": 43613, "node_name": "key", "Dec": "key with which the specified value is to be associated ."}{"idx": 43614, "node_name": "value", "Dec": "value to be associated with the specified key ."}{"idx": 43616, "node_name": "key", "Dec": "key whose associated value is to be returned ."}{"idx": 43617, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key ."}{"idx": 43619, "node_name": "key", "Dec": "key whose mapping is to be removed from the preference node ."}{"idx": 43622, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43623, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43625, "node_name": "key", "Dec": "key whose associated value is to be returned as an int ."}{"idx": 43626, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as an int , or the backing store is inaccessible ."}{"idx": 43628, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43629, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43631, "node_name": "key", "Dec": "key whose associated value is to be returned as a long ."}{"idx": 43632, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as a long , or the backing store is inaccessible ."}{"idx": 43634, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43635, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43637, "node_name": "key", "Dec": "key whose associated value is to be returned as a boolean ."}{"idx": 43638, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as a boolean , or the backing store is inaccessible ."}{"idx": 43640, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43641, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43643, "node_name": "key", "Dec": "key whose associated value is to be returned as a float ."}{"idx": 43644, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as a float , or the backing store is inaccessible ."}{"idx": 43646, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43647, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43649, "node_name": "key", "Dec": "key whose associated value is to be returned as a double ."}{"idx": 43650, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as a double , or the backing store is inaccessible ."}{"idx": 43652, "node_name": "key", "Dec": "key with which the string form of value is to be associated ."}{"idx": 43653, "node_name": "value", "Dec": "value whose string form is to be associated with key ."}{"idx": 43655, "node_name": "key", "Dec": "key whose associated value is to be returned as a byte array ."}{"idx": 43656, "node_name": "def", "Dec": "the value to be returned in the event that this preference node has no value associated with key or the associated value cannot be interpreted as a byte array , or the backing store is inaccessible ."}{"idx": 43661, "node_name": "pathname", "Dec": "the path name of the preference node to return ."}{"idx": 43663, "node_name": "pathname", "Dec": "the path name of the node whose existence is to be checked ."}{"idx": 43672, "node_name": "pcl", "Dec": "the preference change listener to add ."}{"idx": 43674, "node_name": "pcl", "Dec": "the preference change listener to remove ."}{"idx": 43676, "node_name": "ncl", "Dec": "the nodechangelistener to add ."}{"idx": 43678, "node_name": "ncl", "Dec": "the nodechangelistener to remove ."}{"idx": 43680, "node_name": "os", "Dec": "the output stream on which to emit the xml document ."}{"idx": 43682, "node_name": "os", "Dec": "the output stream on which to emit the xml document ."}{"idx": 43684, "node_name": "is", "Dec": "the input stream from which to read the xml document ."}{"idx": 43690, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 43694, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 43697, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 43701, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 43704, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 43708, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 43711, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 43715, "node_name": "initialcapacity", "Dec": "the initial capacity for this priority queue"}{"idx": 43717, "node_name": "comparator", "Dec": "the comparator that will be used to order this priority queue . if null , the natural ordering of the elements will be used ."}{"idx": 43719, "node_name": "initialcapacity", "Dec": "the initial capacity for this priority queue"}{"idx": 43720, "node_name": "comparator", "Dec": "the comparator that will be used to order this priority queue . if null , the natural ordering of the elements will be used ."}{"idx": 43722, "node_name": "c", "Dec": "the collection whose elements are to be placed into this priority queue"}{"idx": 43724, "node_name": "c", "Dec": "the priority queue whose elements are to be placed into this priority queue"}{"idx": 43726, "node_name": "c", "Dec": "the sorted set whose elements are to be placed into this priority queue"}{"idx": 43728, "node_name": "e", "Dec": "the element to add"}{"idx": 43730, "node_name": "e", "Dec": "the element to add"}{"idx": 43732, "node_name": "o", "Dec": "element to be removed from this queue , if present"}{"idx": 43734, "node_name": "o", "Dec": "object to be checked for containment in this queue"}{"idx": 43737, "node_name": "a", "Dec": "the array into which the elements of the queue are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 43743, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 43745, "node_name": "c", "Dec": "collection containing elements to be removed from this collection"}{"idx": 43747, "node_name": "c", "Dec": "collection containing elements to be retained in this collection"}{"idx": 43749, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 43754, "node_name": "initialcapacity", "Dec": "the properties will be sized to accommodate this many elements"}{"idx": 43756, "node_name": "defaults", "Dec": "the defaults ."}{"idx": 43758, "node_name": "key", "Dec": "the key to be placed into this property list ."}{"idx": 43759, "node_name": "value", "Dec": "the value corresponding to key ."}{"idx": 43761, "node_name": "reader", "Dec": "the input character stream ."}{"idx": 43763, "node_name": "instream", "Dec": "the input stream ."}{"idx": 43765, "node_name": "writer", "Dec": "an output character stream writer ."}{"idx": 43766, "node_name": "comments", "Dec": "a description of the property list ."}{"idx": 43768, "node_name": "out", "Dec": "an output stream ."}{"idx": 43769, "node_name": "comments", "Dec": "a description of the property list ."}{"idx": 43771, "node_name": "in", "Dec": "the input stream from which to read the xml document ."}{"idx": 43773, "node_name": "os", "Dec": "the output stream on which to emit the xml document ."}{"idx": 43774, "node_name": "comment", "Dec": "a description of the property list , or null if no comment is desired ."}{"idx": 43776, "node_name": "os", "Dec": "the output stream on which to emit the xml document ."}{"idx": 43777, "node_name": "comment", "Dec": "a description of the property list , or null if no comment is desired ."}{"idx": 43778, "node_name": "encoding", "Dec": "the name of a supported character encoding"}{"idx": 43780, "node_name": "os", "Dec": "the output stream on which to emit the xml document ."}{"idx": 43781, "node_name": "comment", "Dec": "a description of the property list , or null if no comment is desired ."}{"idx": 43782, "node_name": "charset", "Dec": "the charset"}{"idx": 43784, "node_name": "key", "Dec": "the property key ."}{"idx": 43786, "node_name": "key", "Dec": "the hashtable key ."}{"idx": 43787, "node_name": "defaultvalue", "Dec": "a default value ."}{"idx": 43791, "node_name": "out", "Dec": "an output stream ."}{"idx": 43793, "node_name": "out", "Dec": "an output stream ."}{"idx": 43796, "node_name": "name", "Dec": "the name of the propertypermission ."}{"idx": 43797, "node_name": "actions", "Dec": "the actions string ."}{"idx": 43799, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 43801, "node_name": "obj", "Dec": "the object we are testing for equality with this object ."}{"idx": 43807, "node_name": "stream", "Dec": "an inputstream that represents a property file to read from ."}{"idx": 43809, "node_name": "reader", "Dec": "a reader that represents a property file to read from ."}{"idx": 43814, "node_name": "e", "Dec": "the element to add"}{"idx": 43816, "node_name": "e", "Dec": "the element to add"}{"idx": 43824, "node_name": "seed", "Dec": "the initial seed"}{"idx": 43826, "node_name": "seed", "Dec": "the initial seed"}{"idx": 43828, "node_name": "bits", "Dec": "random bits"}{"idx": 43830, "node_name": "bytes", "Dec": "the byte array to fill with random bytes"}{"idx": 43833, "node_name": "bound", "Dec": "the upper bound ( exclusive ) . must be positive ."}{"idx": 43840, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 43843, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 43844, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 43845, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 43847, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 43848, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 43850, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 43853, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 43854, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 43855, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 43857, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 43858, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 43860, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 43863, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 43864, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 43865, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 43867, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 43868, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 43874, "node_name": "newpattern", "Dec": "the new pattern used by this matcher"}{"idx": 43877, "node_name": "input", "Dec": "the new input character sequence"}{"idx": 43880, "node_name": "group", "Dec": "the index of a capturing group in this matcher's pattern"}{"idx": 43882, "node_name": "name", "Dec": "the name of a named-capturing group in this matcher's pattern"}{"idx": 43885, "node_name": "group", "Dec": "the index of a capturing group in this matcher's pattern"}{"idx": 43887, "node_name": "name", "Dec": "the name of a named-capturing group in this matcher's pattern"}{"idx": 43890, "node_name": "group", "Dec": "the index of a capturing group in this matcher's pattern"}{"idx": 43892, "node_name": "name", "Dec": "the name of a named-capturing group in this matcher's pattern"}{"idx": 43897, "node_name": "start", "Dec": "the index to start searching for a match"}{"idx": 43900, "node_name": "s", "Dec": "the string to be literalized"}{"idx": 43902, "node_name": "sb", "Dec": "the target string buffer"}{"idx": 43903, "node_name": "replacement", "Dec": "the replacement string"}{"idx": 43905, "node_name": "sb", "Dec": "the target string builder"}{"idx": 43906, "node_name": "replacement", "Dec": "the replacement string"}{"idx": 43908, "node_name": "sb", "Dec": "the target string buffer"}{"idx": 43910, "node_name": "sb", "Dec": "the target string builder"}{"idx": 43912, "node_name": "replacement", "Dec": "the replacement string"}{"idx": 43914, "node_name": "replacer", "Dec": "the function to be applied to the match result of this matcher that returns a replacement string ."}{"idx": 43917, "node_name": "replacement", "Dec": "the replacement string"}{"idx": 43919, "node_name": "replacer", "Dec": "the function to be applied to the match result of this matcher that returns a replacement string ."}{"idx": 43921, "node_name": "start", "Dec": "the index to start searching at ( inclusive )"}{"idx": 43922, "node_name": "end", "Dec": "the index to end searching at ( exclusive )"}{"idx": 43927, "node_name": "b", "Dec": "a boolean indicating whether to use opaque or transparent regions"}{"idx": 43930, "node_name": "b", "Dec": "a boolean indicating whether or not to use anchoring bounds ."}{"idx": 43937, "node_name": "group", "Dec": "the index of a capturing group in this matcher's pattern"}{"idx": 43940, "node_name": "group", "Dec": "the index of a capturing group in this matcher's pattern"}{"idx": 43943, "node_name": "group", "Dec": "the index of a capturing group in this matcher's pattern"}{"idx": 43956, "node_name": "regex", "Dec": "the expression to be compiled"}{"idx": 43958, "node_name": "regex", "Dec": "the expression to be compiled"}{"idx": 43959, "node_name": "flags", "Dec": "match flags , a bit mask that may include case_insensitive , multiline , dotall , unicode_case , canon_eq , unix_lines , literal , unicode_character_class and comments"}{"idx": 43963, "node_name": "input", "Dec": "the character sequence to be matched"}{"idx": 43966, "node_name": "regex", "Dec": "the expression to be compiled"}{"idx": 43967, "node_name": "input", "Dec": "the character sequence to be matched"}{"idx": 43969, "node_name": "input", "Dec": "the character sequence to be split"}{"idx": 43970, "node_name": "limit", "Dec": "the result threshold , as described above"}{"idx": 43972, "node_name": "input", "Dec": "the character sequence to be split"}{"idx": 43974, "node_name": "s", "Dec": "the string to be literalized"}{"idx": 43978, "node_name": "input", "Dec": "the character sequence to be split"}{"idx": 43981, "node_name": "desc", "Dec": "a description of the error"}{"idx": 43982, "node_name": "regex", "Dec": "the erroneous pattern"}{"idx": 43983, "node_name": "index", "Dec": "the approximate index in the pattern of the error , or -1 if the index is not known"}{"idx": 43996, "node_name": "formats", "Dec": "the formats to be returned by the resourcebundle.control.getformats method"}{"idx": 43998, "node_name": "formats", "Dec": "the formats to be returned by the resourcebundle.control.getformats method"}{"idx": 44000, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44002, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44003, "node_name": "locale", "Dec": "the locale for which a resource bundle is desired"}{"idx": 44005, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name for which resourcebundle.getbundle has been unable to find any resource bundles ( except for the base bundle )"}{"idx": 44006, "node_name": "locale", "Dec": "the locale for which resourcebundle.getbundle has been unable to find any resource bundles ( except for the base bundle )"}{"idx": 44008, "node_name": "basename", "Dec": "the base bundle name of the resource bundle , a fully qualified class name"}{"idx": 44009, "node_name": "locale", "Dec": "the locale for which the resource bundle should be instantiated"}{"idx": 44010, "node_name": "format", "Dec": "the resource bundle format to be loaded"}{"idx": 44011, "node_name": "loader", "Dec": "the classloader to use to load the bundle"}{"idx": 44012, "node_name": "reload", "Dec": "the flag to indicate bundle reloading ; true if reloading an expired resource bundle , false otherwise"}{"idx": 44014, "node_name": "basename", "Dec": "the base name of the resource bundle for which the expiration value is specified ."}{"idx": 44015, "node_name": "locale", "Dec": "the locale of the resource bundle for which the expiration value is specified ."}{"idx": 44017, "node_name": "basename", "Dec": "the base bundle name of the resource bundle , a fully qualified class name"}{"idx": 44018, "node_name": "locale", "Dec": "the locale for which the resource bundle should be instantiated"}{"idx": 44019, "node_name": "format", "Dec": "the resource bundle format to be loaded"}{"idx": 44020, "node_name": "loader", "Dec": "the classloader to use to load the bundle"}{"idx": 44021, "node_name": "bundle", "Dec": "the resource bundle instance that has been expired in the cache"}{"idx": 44022, "node_name": "loadtime", "Dec": "the time when bundle was loaded and put in the cache"}{"idx": 44024, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44025, "node_name": "locale", "Dec": "the locale for which a resource bundle should be loaded"}{"idx": 44027, "node_name": "bundlename", "Dec": "the bundle name"}{"idx": 44028, "node_name": "suffix", "Dec": "the file type suffix"}{"idx": 44034, "node_name": "key", "Dec": "the key for the desired string"}{"idx": 44036, "node_name": "key", "Dec": "the key for the desired string array"}{"idx": 44038, "node_name": "key", "Dec": "the key for the desired object"}{"idx": 44041, "node_name": "parent", "Dec": "this bundle's parent bundle ."}{"idx": 44043, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44045, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44046, "node_name": "control", "Dec": "the control which gives information for the resource bundle loading process"}{"idx": 44048, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44049, "node_name": "locale", "Dec": "the locale for which a resource bundle is desired"}{"idx": 44051, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44052, "node_name": "module", "Dec": "the module for which the resource bundle is searched"}{"idx": 44054, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44055, "node_name": "targetlocale", "Dec": "the locale for which a resource bundle is desired"}{"idx": 44056, "node_name": "module", "Dec": "the module for which the resource bundle is searched"}{"idx": 44058, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44059, "node_name": "targetlocale", "Dec": "the locale for which a resource bundle is desired"}{"idx": 44060, "node_name": "control", "Dec": "the control which gives information for the resource bundle loading process"}{"idx": 44062, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44063, "node_name": "locale", "Dec": "the locale for which a resource bundle is desired"}{"idx": 44064, "node_name": "loader", "Dec": "the class loader from which to load the resource bundle"}{"idx": 44066, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44067, "node_name": "targetlocale", "Dec": "the locale for which a resource bundle is desired"}{"idx": 44068, "node_name": "loader", "Dec": "the class loader from which to load the resource bundle"}{"idx": 44069, "node_name": "control", "Dec": "the control which gives information for the resource bundle loading process"}{"idx": 44072, "node_name": "loader", "Dec": "the class loader"}{"idx": 44074, "node_name": "key", "Dec": "the key for the desired object"}{"idx": 44077, "node_name": "key", "Dec": "the resource key"}{"idx": 44082, "node_name": "source", "Dec": "a character source implementing the readable interface"}{"idx": 44084, "node_name": "source", "Dec": "an input stream to be scanned"}{"idx": 44086, "node_name": "source", "Dec": "an input stream to be scanned"}{"idx": 44087, "node_name": "charsetname", "Dec": "the encoding type used to convert bytes from the stream into characters to be scanned"}{"idx": 44089, "node_name": "source", "Dec": "an input stream to be scanned"}{"idx": 44090, "node_name": "charset", "Dec": "the charset used to convert bytes from the file into characters to be scanned"}{"idx": 44092, "node_name": "source", "Dec": "a file to be scanned"}{"idx": 44094, "node_name": "source", "Dec": "a file to be scanned"}{"idx": 44095, "node_name": "charsetname", "Dec": "the encoding type used to convert bytes from the file into characters to be scanned"}{"idx": 44097, "node_name": "source", "Dec": "a file to be scanned"}{"idx": 44098, "node_name": "charset", "Dec": "the charset used to convert bytes from the file into characters to be scanned"}{"idx": 44100, "node_name": "source", "Dec": "the path to the file to be scanned"}{"idx": 44102, "node_name": "source", "Dec": "the path to the file to be scanned"}{"idx": 44103, "node_name": "charsetname", "Dec": "the encoding type used to convert bytes from the file into characters to be scanned"}{"idx": 44105, "node_name": "source", "Dec": "the path to the file to be scanned"}{"idx": 44106, "node_name": "charset", "Dec": "the charset used to convert bytes from the file into characters to be scanned"}{"idx": 44108, "node_name": "source", "Dec": "a string to scan"}{"idx": 44110, "node_name": "source", "Dec": "a channel to scan"}{"idx": 44112, "node_name": "source", "Dec": "a channel to scan"}{"idx": 44113, "node_name": "charsetname", "Dec": "the encoding type used to convert bytes from the channel into characters to be scanned"}{"idx": 44115, "node_name": "source", "Dec": "a channel to scan"}{"idx": 44116, "node_name": "charset", "Dec": "the encoding type used to convert bytes from the channel into characters to be scanned"}{"idx": 44121, "node_name": "pattern", "Dec": "a delimiting pattern"}{"idx": 44123, "node_name": "pattern", "Dec": "a string specifying a delimiting pattern"}{"idx": 44126, "node_name": "locale", "Dec": "a string specifying the locale to use"}{"idx": 44129, "node_name": "radix", "Dec": "the radix to use when scanning numbers"}{"idx": 44136, "node_name": "pattern", "Dec": "a string specifying the pattern to scan"}{"idx": 44138, "node_name": "pattern", "Dec": "a string specifying the pattern to scan"}{"idx": 44140, "node_name": "pattern", "Dec": "the pattern to scan for"}{"idx": 44142, "node_name": "pattern", "Dec": "the pattern to scan for"}{"idx": 44146, "node_name": "pattern", "Dec": "a string specifying the pattern to search for"}{"idx": 44148, "node_name": "pattern", "Dec": "the pattern to scan for"}{"idx": 44150, "node_name": "pattern", "Dec": "a string specifying the pattern to search for"}{"idx": 44151, "node_name": "horizon", "Dec": "the search horizon"}{"idx": 44153, "node_name": "pattern", "Dec": "the pattern to scan for"}{"idx": 44154, "node_name": "horizon", "Dec": "the search horizon"}{"idx": 44156, "node_name": "pattern", "Dec": "a string specifying the pattern to skip over"}{"idx": 44158, "node_name": "pattern", "Dec": "a string specifying the pattern to skip over"}{"idx": 44163, "node_name": "radix", "Dec": "the radix used to interpret the token as a byte value"}{"idx": 44166, "node_name": "radix", "Dec": "the radix used to interpret the token as a byte value"}{"idx": 44169, "node_name": "radix", "Dec": "the radix used to interpret the token as a short value"}{"idx": 44172, "node_name": "radix", "Dec": "the radix used to interpret the token as a short value"}{"idx": 44175, "node_name": "radix", "Dec": "the radix used to interpret the token as an int value"}{"idx": 44178, "node_name": "radix", "Dec": "the radix used to interpret the token as an int value"}{"idx": 44181, "node_name": "radix", "Dec": "the radix used to interpret the token as a long value"}{"idx": 44184, "node_name": "radix", "Dec": "the radix used to interpret the token as an int value"}{"idx": 44191, "node_name": "radix", "Dec": "the radix used to interpret the token as an integer"}{"idx": 44194, "node_name": "radix", "Dec": "the radix used to interpret the token"}{"idx": 44200, "node_name": "pattern", "Dec": "the pattern to be matched"}{"idx": 44202, "node_name": "patstring", "Dec": "the pattern string"}{"idx": 44205, "node_name": "msg", "Dec": "the message , or null if there is no message"}{"idx": 44207, "node_name": "msg", "Dec": "the message , or null if there is no message"}{"idx": 44208, "node_name": "cause", "Dec": "the cause , or null if the cause is nonexistent or unknown"}{"idx": 44213, "node_name": "service", "Dec": "the interface or abstract class representing the service"}{"idx": 44214, "node_name": "loader", "Dec": "the class loader to be used to load provider-configuration files and provider classes , or null if the system class loader ( or , failing that , the bootstrap class loader ) is to be used"}{"idx": 44216, "node_name": "service", "Dec": "the interface or abstract class representing the service"}{"idx": 44218, "node_name": "service", "Dec": "the interface or abstract class representing the service"}{"idx": 44220, "node_name": "layer", "Dec": "the module layer"}{"idx": 44221, "node_name": "service", "Dec": "the interface or abstract class representing the service"}{"idx": 44232, "node_name": "o", "Dec": "element whose presence in this set is to be tested"}{"idx": 44236, "node_name": "a", "Dec": "the array into which the elements of this set are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 44238, "node_name": "e", "Dec": "element to be added to this set"}{"idx": 44240, "node_name": "o", "Dec": "object to be removed from this set , if present"}{"idx": 44242, "node_name": "c", "Dec": "collection to be checked for containment in this set"}{"idx": 44244, "node_name": "c", "Dec": "collection containing elements to be added to this set"}{"idx": 44246, "node_name": "c", "Dec": "collection containing elements to be retained in this set"}{"idx": 44248, "node_name": "c", "Dec": "collection containing elements to be removed from this set"}{"idx": 44251, "node_name": "o", "Dec": "object to be compared for equality with this set"}{"idx": 44256, "node_name": "e1", "Dec": "the single element"}{"idx": 44258, "node_name": "e1", "Dec": "the first element"}{"idx": 44259, "node_name": "e2", "Dec": "the second element"}{"idx": 44261, "node_name": "e1", "Dec": "the first element"}{"idx": 44262, "node_name": "e2", "Dec": "the second element"}{"idx": 44263, "node_name": "e3", "Dec": "the third element"}{"idx": 44265, "node_name": "e1", "Dec": "the first element"}{"idx": 44266, "node_name": "e2", "Dec": "the second element"}{"idx": 44267, "node_name": "e3", "Dec": "the third element"}{"idx": 44268, "node_name": "e4", "Dec": "the fourth element"}{"idx": 44270, "node_name": "e1", "Dec": "the first element"}{"idx": 44271, "node_name": "e2", "Dec": "the second element"}{"idx": 44272, "node_name": "e3", "Dec": "the third element"}{"idx": 44273, "node_name": "e4", "Dec": "the fourth element"}{"idx": 44274, "node_name": "e5", "Dec": "the fifth element"}{"idx": 44276, "node_name": "e1", "Dec": "the first element"}{"idx": 44277, "node_name": "e2", "Dec": "the second element"}{"idx": 44278, "node_name": "e3", "Dec": "the third element"}{"idx": 44279, "node_name": "e4", "Dec": "the fourth element"}{"idx": 44280, "node_name": "e5", "Dec": "the fifth element"}{"idx": 44281, "node_name": "e6", "Dec": "the sixth element"}{"idx": 44283, "node_name": "e1", "Dec": "the first element"}{"idx": 44284, "node_name": "e2", "Dec": "the second element"}{"idx": 44285, "node_name": "e3", "Dec": "the third element"}{"idx": 44286, "node_name": "e4", "Dec": "the fourth element"}{"idx": 44287, "node_name": "e5", "Dec": "the fifth element"}{"idx": 44288, "node_name": "e6", "Dec": "the sixth element"}{"idx": 44289, "node_name": "e7", "Dec": "the seventh element"}{"idx": 44291, "node_name": "e1", "Dec": "the first element"}{"idx": 44292, "node_name": "e2", "Dec": "the second element"}{"idx": 44293, "node_name": "e3", "Dec": "the third element"}{"idx": 44294, "node_name": "e4", "Dec": "the fourth element"}{"idx": 44295, "node_name": "e5", "Dec": "the fifth element"}{"idx": 44296, "node_name": "e6", "Dec": "the sixth element"}{"idx": 44297, "node_name": "e7", "Dec": "the seventh element"}{"idx": 44298, "node_name": "e8", "Dec": "the eighth element"}{"idx": 44300, "node_name": "e1", "Dec": "the first element"}{"idx": 44301, "node_name": "e2", "Dec": "the second element"}{"idx": 44302, "node_name": "e3", "Dec": "the third element"}{"idx": 44303, "node_name": "e4", "Dec": "the fourth element"}{"idx": 44304, "node_name": "e5", "Dec": "the fifth element"}{"idx": 44305, "node_name": "e6", "Dec": "the sixth element"}{"idx": 44306, "node_name": "e7", "Dec": "the seventh element"}{"idx": 44307, "node_name": "e8", "Dec": "the eighth element"}{"idx": 44308, "node_name": "e9", "Dec": "the ninth element"}{"idx": 44310, "node_name": "e1", "Dec": "the first element"}{"idx": 44311, "node_name": "e2", "Dec": "the second element"}{"idx": 44312, "node_name": "e3", "Dec": "the third element"}{"idx": 44313, "node_name": "e4", "Dec": "the fourth element"}{"idx": 44314, "node_name": "e5", "Dec": "the fifth element"}{"idx": 44315, "node_name": "e6", "Dec": "the sixth element"}{"idx": 44316, "node_name": "e7", "Dec": "the seventh element"}{"idx": 44317, "node_name": "e8", "Dec": "the eighth element"}{"idx": 44318, "node_name": "e9", "Dec": "the ninth element"}{"idx": 44319, "node_name": "e10", "Dec": "the tenth element"}{"idx": 44321, "node_name": "elements", "Dec": "the elements to be contained in the set"}{"idx": 44323, "node_name": "coll", "Dec": "a collection from which elements are drawn , must be non-null"}{"idx": 44329, "node_name": "rawoffset", "Dec": "the base time zone offset in milliseconds to gmt ."}{"idx": 44330, "node_name": "id", "Dec": "the time zone name that is given to this instance ."}{"idx": 44332, "node_name": "rawoffset", "Dec": "the given base time zone offset from gmt ."}{"idx": 44333, "node_name": "id", "Dec": "the time zone id which is given to this object ."}{"idx": 44334, "node_name": "startmonth", "Dec": "the daylight saving time starting month . month is a month field value ( 0-based . e.g. , 0 for january ) ."}{"idx": 44335, "node_name": "startday", "Dec": "the day of the month on which the daylight saving time starts . see the class description for the special cases of this parameter ."}{"idx": 44336, "node_name": "startdayofweek", "Dec": "the daylight saving time starting day-of-week . see the class description for the special cases of this parameter ."}{"idx": 44337, "node_name": "starttime", "Dec": "the daylight saving time starting time in local wall clock time ( in milliseconds within the day ) , which is local standard time in this case ."}{"idx": 44338, "node_name": "endmonth", "Dec": "the daylight saving time ending month . month is a month field value ( 0-based . e.g. , 9 for october ) ."}{"idx": 44339, "node_name": "endday", "Dec": "the day of the month on which the daylight saving time ends . see the class description for the special cases of this parameter ."}{"idx": 44340, "node_name": "enddayofweek", "Dec": "the daylight saving time ending day-of-week . see the class description for the special cases of this parameter ."}{"idx": 44341, "node_name": "endtime", "Dec": "the daylight saving ending time in local wall clock time , ( in milliseconds within the day ) which is local daylight time in this case ."}{"idx": 44343, "node_name": "rawoffset", "Dec": "the given base time zone offset from gmt ."}{"idx": 44344, "node_name": "id", "Dec": "the time zone id which is given to this object ."}{"idx": 44345, "node_name": "startmonth", "Dec": "the daylight saving time starting month . month is a month field value ( 0-based . e.g. , 0 for january ) ."}{"idx": 44346, "node_name": "startday", "Dec": "the day of the month on which the daylight saving time starts . see the class description for the special cases of this parameter ."}{"idx": 44347, "node_name": "startdayofweek", "Dec": "the daylight saving time starting day-of-week . see the class description for the special cases of this parameter ."}{"idx": 44348, "node_name": "starttime", "Dec": "the daylight saving time starting time in local wall clock time , which is local standard time in this case ."}{"idx": 44349, "node_name": "endmonth", "Dec": "the daylight saving time ending month . month is a month field value ( 0-based . e.g. , 9 for october ) ."}{"idx": 44350, "node_name": "endday", "Dec": "the day of the month on which the daylight saving time ends . see the class description for the special cases of this parameter ."}{"idx": 44351, "node_name": "enddayofweek", "Dec": "the daylight saving time ending day-of-week . see the class description for the special cases of this parameter ."}{"idx": 44352, "node_name": "endtime", "Dec": "the daylight saving ending time in local wall clock time , which is local daylight time in this case ."}{"idx": 44353, "node_name": "dstsavings", "Dec": "the amount of time in milliseconds saved during daylight saving time ."}{"idx": 44355, "node_name": "rawoffset", "Dec": "the given base time zone offset from gmt ."}{"idx": 44356, "node_name": "id", "Dec": "the time zone id which is given to this object ."}{"idx": 44357, "node_name": "startmonth", "Dec": "the daylight saving time starting month . month is a month field value ( 0-based . e.g. , 0 for january ) ."}{"idx": 44358, "node_name": "startday", "Dec": "the day of the month on which the daylight saving time starts . see the class description for the special cases of this parameter ."}{"idx": 44359, "node_name": "startdayofweek", "Dec": "the daylight saving time starting day-of-week . see the class description for the special cases of this parameter ."}{"idx": 44360, "node_name": "starttime", "Dec": "the daylight saving time starting time in the time mode specified by starttimemode ."}{"idx": 44361, "node_name": "starttimemode", "Dec": "the mode of the start time specified by starttime ."}{"idx": 44362, "node_name": "endmonth", "Dec": "the daylight saving time ending month . month is a month field value ( 0-based . e.g. , 9 for october ) ."}{"idx": 44363, "node_name": "endday", "Dec": "the day of the month on which the daylight saving time ends . see the class description for the special cases of this parameter ."}{"idx": 44364, "node_name": "enddayofweek", "Dec": "the daylight saving time ending day-of-week . see the class description for the special cases of this parameter ."}{"idx": 44365, "node_name": "endtime", "Dec": "the daylight saving ending time in time mode specified by endtimemode ."}{"idx": 44366, "node_name": "endtimemode", "Dec": "the mode of the end time specified by endtime"}{"idx": 44367, "node_name": "dstsavings", "Dec": "the amount of time in milliseconds saved during daylight saving time ."}{"idx": 44369, "node_name": "year", "Dec": "the daylight saving starting year ."}{"idx": 44371, "node_name": "startmonth", "Dec": "the daylight saving time starting month . month is a month field value ( 0-based . e.g. , 0 for january ) ."}{"idx": 44372, "node_name": "startday", "Dec": "the day of the month on which the daylight saving time starts . see the class description for the special cases of this parameter ."}{"idx": 44373, "node_name": "startdayofweek", "Dec": "the daylight saving time starting day-of-week . see the class description for the special cases of this parameter ."}{"idx": 44374, "node_name": "starttime", "Dec": "the daylight saving time starting time in local wall clock time , which is local standard time in this case ."}{"idx": 44376, "node_name": "startmonth", "Dec": "the daylight saving time starting month . month is a month field value ( 0-based . e.g. , 0 for january ) ."}{"idx": 44377, "node_name": "startday", "Dec": "the day of the month on which the daylight saving time starts ."}{"idx": 44378, "node_name": "starttime", "Dec": "the daylight saving time starting time in local wall clock time , which is local standard time in this case . see the class description for the special cases of this parameter ."}{"idx": 44380, "node_name": "startmonth", "Dec": "the daylight saving time starting month . month is a month field value ( 0-based . e.g. , 0 for january ) ."}{"idx": 44381, "node_name": "startday", "Dec": "the day of the month on which the daylight saving time starts ."}{"idx": 44382, "node_name": "startdayofweek", "Dec": "the daylight saving time starting day-of-week ."}{"idx": 44383, "node_name": "starttime", "Dec": "the daylight saving time starting time in local wall clock time , which is local standard time in this case ."}{"idx": 44384, "node_name": "after", "Dec": "if true , this rule selects the first dayofweek on or after dayofmonth . if false , this rule selects the last dayofweek on or before dayofmonth ."}{"idx": 44386, "node_name": "endmonth", "Dec": "the daylight saving time ending month . month is a month field value ( 0-based . e.g. , 9 for october ) ."}{"idx": 44387, "node_name": "endday", "Dec": "the day of the month on which the daylight saving time ends . see the class description for the special cases of this parameter ."}{"idx": 44388, "node_name": "enddayofweek", "Dec": "the daylight saving time ending day-of-week . see the class description for the special cases of this parameter ."}{"idx": 44389, "node_name": "endtime", "Dec": "the daylight saving ending time in local wall clock time , ( in milliseconds within the day ) which is local daylight time in this case ."}{"idx": 44391, "node_name": "endmonth", "Dec": "the daylight saving time ending month . month is a month field value ( 0-based . e.g. , 9 for october ) ."}{"idx": 44392, "node_name": "endday", "Dec": "the day of the month on which the daylight saving time ends ."}{"idx": 44393, "node_name": "endtime", "Dec": "the daylight saving ending time in local wall clock time , ( in milliseconds within the day ) which is local daylight time in this case ."}{"idx": 44395, "node_name": "endmonth", "Dec": "the daylight saving time ending month . month is a month field value ( 0-based . e.g. , 9 for october ) ."}{"idx": 44396, "node_name": "endday", "Dec": "the day of the month on which the daylight saving time ends ."}{"idx": 44397, "node_name": "enddayofweek", "Dec": "the daylight saving time ending day-of-week ."}{"idx": 44398, "node_name": "endtime", "Dec": "the daylight saving ending time in local wall clock time , ( in milliseconds within the day ) which is local daylight time in this case ."}{"idx": 44399, "node_name": "after", "Dec": "if true , this rule selects the first enddayofweek on or after endday . if false , this rule selects the last enddayofweek on or before endday of the month ."}{"idx": 44401, "node_name": "date", "Dec": "the time at which the time zone offset is found"}{"idx": 44403, "node_name": "era", "Dec": "the era of the given date ."}{"idx": 44404, "node_name": "year", "Dec": "the year in the given date ."}{"idx": 44405, "node_name": "month", "Dec": "the month in the given date . month is 0-based . e.g. , 0 for january ."}{"idx": 44406, "node_name": "day", "Dec": "the day-in-month of the given date ."}{"idx": 44407, "node_name": "dayofweek", "Dec": "the day-of-week of the given date ."}{"idx": 44408, "node_name": "millis", "Dec": "the milliseconds in day in standard local time ."}{"idx": 44411, "node_name": "offsetmillis", "Dec": "the given base time zone offset to gmt ."}{"idx": 44413, "node_name": "millissavedduringdst", "Dec": "the number of milliseconds the time is advanced with respect to standard time when the daylight saving time rules are in effect . a positive number , typically one hour ( 3600000 ) ."}{"idx": 44418, "node_name": "date", "Dec": "the given date ."}{"idx": 44422, "node_name": "obj", "Dec": "the simpletimezone object to be compared with ."}{"idx": 44424, "node_name": "other", "Dec": "the timezone object to be compared with"}{"idx": 44429, "node_name": "fromkey", "Dec": "low endpoint ( inclusive ) of the keys in the returned map"}{"idx": 44430, "node_name": "tokey", "Dec": "high endpoint ( exclusive ) of the keys in the returned map"}{"idx": 44432, "node_name": "tokey", "Dec": "high endpoint ( exclusive ) of the keys in the returned map"}{"idx": 44434, "node_name": "fromkey", "Dec": "low endpoint ( inclusive ) of the keys in the returned map"}{"idx": 44443, "node_name": "fromelement", "Dec": "low endpoint ( inclusive ) of the returned set"}{"idx": 44444, "node_name": "toelement", "Dec": "high endpoint ( exclusive ) of the returned set"}{"idx": 44446, "node_name": "toelement", "Dec": "high endpoint ( exclusive ) of the returned set"}{"idx": 44448, "node_name": "fromelement", "Dec": "low endpoint ( inclusive ) of the returned set"}{"idx": 44455, "node_name": "formats", "Dec": "the formats to be used for loading resource bundles"}{"idx": 44457, "node_name": "basename", "Dec": "the base name of the resource bundle , a fully qualified class name"}{"idx": 44458, "node_name": "locale", "Dec": "the locale for which a resource bundle should be loaded"}{"idx": 44460, "node_name": "basename", "Dec": "the base bundle name of the resource bundle , a fully qualified class name ."}{"idx": 44461, "node_name": "locale", "Dec": "the locale for which the resource bundle should be instantiated"}{"idx": 44465, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44467, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44471, "node_name": "calendartype", "Dec": "the calendar type . ( any calendar type given by locale is ignored . )"}{"idx": 44472, "node_name": "field", "Dec": "the calendar field index , such as calendar.day_of_week"}{"idx": 44473, "node_name": "value", "Dec": "the value of the calendar field , such as calendar.monday"}{"idx": 44474, "node_name": "style", "Dec": "the string representation style : one of calendar.short_format ( short ) , calendar.short_standalone , calendar.long_format ( long ) , calendar.long_standalone , calendar.narrow_format , or calendar.narrow_standalone"}{"idx": 44475, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44477, "node_name": "calendartype", "Dec": "the calendar type . ( any calendar type given by locale is ignored . )"}{"idx": 44478, "node_name": "field", "Dec": "the calendar field for which the display names are returned"}{"idx": 44479, "node_name": "style", "Dec": "the style applied to the display names ; one of calendar.all_styles , calendar.short_format ( short ) , calendar.short_standalone , calendar.long_format ( long ) , calendar.long_standalone , calendar.narrow_format , or calendar.narrow_standalone"}{"idx": 44480, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44484, "node_name": "currencycode", "Dec": "the iso 4217 currency code , which consists of three upper-case letters between ' a ' ( u+0041 ) and ' z ' ( u+005a )"}{"idx": 44485, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44487, "node_name": "currencycode", "Dec": "the iso 4217 currency code , which consists of three upper-case letters between ' a ' ( u+0041 ) and ' z ' ( u+005a )"}{"idx": 44488, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44492, "node_name": "languagecode", "Dec": "the language code string in the form of two to eight lower-case letters between ' a ' ( u+0061 ) and ' z ' ( u+007a )"}{"idx": 44493, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44495, "node_name": "scriptcode", "Dec": "the four letter script code string in the form of title-case letters ( the first letter is upper-case character between ' a ' ( u+0041 ) and ' z ' ( u+005a ) followed by three lower-case character between ' a ' ( u+0061 ) and ' z ' ( u+007a )) ."}{"idx": 44496, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44498, "node_name": "countrycode", "Dec": "the country ( region ) code string in the form of two upper-case letters between ' a ' ( u+0041 ) and ' z ' ( u+005a ) or the un m.49 area code in the form of three digit letters between ' 0 ' ( u+0030 ) and ' 9 ' ( u+0039 ) ."}{"idx": 44499, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44501, "node_name": "variant", "Dec": "the variant string"}{"idx": 44502, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44504, "node_name": "key", "Dec": "the unicode extension key , not null ."}{"idx": 44505, "node_name": "locale", "Dec": "the desired locale , not null ."}{"idx": 44507, "node_name": "type", "Dec": "the unicode extension type , not null ."}{"idx": 44508, "node_name": "key", "Dec": "the unicode extension key for this type , not null ."}{"idx": 44509, "node_name": "locale", "Dec": "the desired locale , not null ."}{"idx": 44514, "node_name": "locale", "Dec": "a locale to be tested"}{"idx": 44517, "node_name": "basename", "Dec": "the base name of the resource bundle"}{"idx": 44520, "node_name": "basename", "Dec": "the base bundle name of the resource bundle , a fully qualified class name"}{"idx": 44521, "node_name": "locale", "Dec": "the locale for which the resource bundle should be loaded"}{"idx": 44525, "node_name": "id", "Dec": "a time zone id string"}{"idx": 44526, "node_name": "daylight", "Dec": "if true , return the daylight saving name ."}{"idx": 44527, "node_name": "style", "Dec": "either timezone.long or timezone.short"}{"idx": 44528, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44530, "node_name": "id", "Dec": "a time zone id string"}{"idx": 44531, "node_name": "style", "Dec": "either timezone.long or timezone.short"}{"idx": 44532, "node_name": "locale", "Dec": "the desired locale"}{"idx": 44536, "node_name": "out", "Dec": "a stream to which \" expected \" output should be written"}{"idx": 44537, "node_name": "err", "Dec": "a stream to which any error messages should be written"}{"idx": 44538, "node_name": "args", "Dec": "the command-line arguments for the tool"}{"idx": 44540, "node_name": "out", "Dec": "a stream to which \" expected \" output should be written"}{"idx": 44541, "node_name": "err", "Dec": "a stream to which any error messages should be written"}{"idx": 44542, "node_name": "args", "Dec": "the command-line arguments for the tool"}{"idx": 44544, "node_name": "name", "Dec": "the name of the desired tool provider"}{"idx": 44555, "node_name": "action", "Dec": "the action"}{"idx": 44557, "node_name": "action", "Dec": "the action"}{"idx": 44563, "node_name": "characteristics", "Dec": "the characteristics to check for"}{"idx": 44567, "node_name": "action", "Dec": "the action"}{"idx": 44569, "node_name": "action", "Dec": "the action"}{"idx": 44572, "node_name": "action", "Dec": "the action"}{"idx": 44574, "node_name": "action", "Dec": "the action"}{"idx": 44577, "node_name": "action", "Dec": "the action"}{"idx": 44579, "node_name": "action", "Dec": "the action"}{"idx": 44582, "node_name": "action", "Dec": "the action"}{"idx": 44584, "node_name": "action", "Dec": "the action"}{"idx": 44587, "node_name": "est", "Dec": "the estimated size of this spliterator if known , otherwise long.max_value ."}{"idx": 44588, "node_name": "additionalcharacteristics", "Dec": "properties of this spliterator's source or elements . if sized is reported then this spliterator will additionally report subsized ."}{"idx": 44594, "node_name": "est", "Dec": "the estimated size of this spliterator if known , otherwise long.max_value ."}{"idx": 44595, "node_name": "additionalcharacteristics", "Dec": "properties of this spliterator's source or elements . if sized is reported then this spliterator will additionally report subsized ."}{"idx": 44601, "node_name": "est", "Dec": "the estimated size of this spliterator if known , otherwise long.max_value ."}{"idx": 44602, "node_name": "additionalcharacteristics", "Dec": "properties of this spliterator's source or elements . if sized is reported then this spliterator will additionally report subsized ."}{"idx": 44608, "node_name": "est", "Dec": "the estimated size of this spliterator if known , otherwise long.max_value ."}{"idx": 44609, "node_name": "additionalcharacteristics", "Dec": "properties of this spliterator's source or elements . if sized is reported then this spliterator will additionally report subsized ."}{"idx": 44619, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 44620, "node_name": "additionalcharacteristics", "Dec": "additional spliterator characteristics of this spliterator's source or elements beyond sized and subsized which are always reported"}{"idx": 44622, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 44623, "node_name": "fromindex", "Dec": "the least index ( inclusive ) to cover"}{"idx": 44624, "node_name": "toindex", "Dec": "one past the greatest index to cover"}{"idx": 44625, "node_name": "additionalcharacteristics", "Dec": "additional spliterator characteristics of this spliterator's source or elements beyond sized and subsized which are always reported"}{"idx": 44627, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 44628, "node_name": "additionalcharacteristics", "Dec": "additional spliterator characteristics of this spliterator's source or elements beyond sized and subsized which are always reported"}{"idx": 44630, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 44631, "node_name": "fromindex", "Dec": "the least index ( inclusive ) to cover"}{"idx": 44632, "node_name": "toindex", "Dec": "one past the greatest index to cover"}{"idx": 44633, "node_name": "additionalcharacteristics", "Dec": "additional spliterator characteristics of this spliterator's source or elements beyond sized and subsized which are always reported"}{"idx": 44635, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 44636, "node_name": "additionalcharacteristics", "Dec": "additional spliterator characteristics of this spliterator's source or elements beyond sized and subsized which are always reported"}{"idx": 44638, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 44639, "node_name": "fromindex", "Dec": "the least index ( inclusive ) to cover"}{"idx": 44640, "node_name": "toindex", "Dec": "one past the greatest index to cover"}{"idx": 44641, "node_name": "additionalcharacteristics", "Dec": "additional spliterator characteristics of this spliterator's source or elements beyond sized and subsized which are always reported"}{"idx": 44643, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 44644, "node_name": "additionalcharacteristics", "Dec": "additional spliterator characteristics of this spliterator's source or elements beyond sized and subsized which are always reported"}{"idx": 44646, "node_name": "array", "Dec": "the array , assumed to be unmodified during use"}{"idx": 44647, "node_name": "fromindex", "Dec": "the least index ( inclusive ) to cover"}{"idx": 44648, "node_name": "toindex", "Dec": "one past the greatest index to cover"}{"idx": 44649, "node_name": "additionalcharacteristics", "Dec": "additional spliterator characteristics of this spliterator's source or elements beyond sized and subsized which are always reported"}{"idx": 44651, "node_name": "c", "Dec": "the collection"}{"idx": 44652, "node_name": "characteristics", "Dec": "characteristics of this spliterator's source or elements . the characteristics sized and subsized are additionally reported unless concurrent is supplied ."}{"idx": 44654, "node_name": "iterator", "Dec": "the iterator for the source"}{"idx": 44655, "node_name": "size", "Dec": "the number of elements in the source , to be reported as initial estimatesize"}{"idx": 44656, "node_name": "characteristics", "Dec": "characteristics of this spliterator's source or elements . the characteristics sized and subsized are additionally reported unless concurrent is supplied ."}{"idx": 44658, "node_name": "iterator", "Dec": "the iterator for the source"}{"idx": 44659, "node_name": "characteristics", "Dec": "characteristics of this spliterator's source or elements ( sized and subsized , if supplied , are ignored and are not reported . )"}{"idx": 44661, "node_name": "iterator", "Dec": "the iterator for the source"}{"idx": 44662, "node_name": "size", "Dec": "the number of elements in the source , to be reported as initial estimatesize ."}{"idx": 44663, "node_name": "characteristics", "Dec": "characteristics of this spliterator's source or elements . the characteristics sized and subsized are additionally reported unless concurrent is supplied ."}{"idx": 44665, "node_name": "iterator", "Dec": "the iterator for the source"}{"idx": 44666, "node_name": "characteristics", "Dec": "characteristics of this spliterator's source or elements ( sized and subsized , if supplied , are ignored and are not reported . )"}{"idx": 44668, "node_name": "iterator", "Dec": "the iterator for the source"}{"idx": 44669, "node_name": "size", "Dec": "the number of elements in the source , to be reported as initial estimatesize ."}{"idx": 44670, "node_name": "characteristics", "Dec": "characteristics of this spliterator's source or elements . the characteristics sized and subsized are additionally reported unless concurrent is supplied ."}{"idx": 44672, "node_name": "iterator", "Dec": "the iterator for the source"}{"idx": 44673, "node_name": "characteristics", "Dec": "characteristics of this spliterator's source or elements ( sized and subsized , if supplied , are ignored and are not reported . )"}{"idx": 44675, "node_name": "iterator", "Dec": "the iterator for the source"}{"idx": 44676, "node_name": "size", "Dec": "the number of elements in the source , to be reported as initial estimatesize"}{"idx": 44677, "node_name": "characteristics", "Dec": "characteristics of this spliterator's source or elements . the characteristics sized and subsized are additionally reported unless concurrent is supplied ."}{"idx": 44679, "node_name": "iterator", "Dec": "the iterator for the source"}{"idx": 44680, "node_name": "characteristics", "Dec": "characteristics of this spliterator's source or elements ( sized and subsized , if supplied , are ignored and are not reported . )"}{"idx": 44682, "node_name": "spliterator", "Dec": "the spliterator"}{"idx": 44684, "node_name": "spliterator", "Dec": "the spliterator"}{"idx": 44686, "node_name": "spliterator", "Dec": "the spliterator"}{"idx": 44688, "node_name": "spliterator", "Dec": "the spliterator"}{"idx": 44691, "node_name": "seed", "Dec": "the initial seed"}{"idx": 44695, "node_name": "bytes", "Dec": "the byte array to fill with pseudorandom bytes"}{"idx": 44698, "node_name": "bound", "Dec": "the upper bound ( exclusive ) . must be positive ."}{"idx": 44700, "node_name": "origin", "Dec": "the least value returned"}{"idx": 44701, "node_name": "bound", "Dec": "the upper bound ( exclusive )"}{"idx": 44704, "node_name": "bound", "Dec": "the upper bound ( exclusive ) . must be positive ."}{"idx": 44706, "node_name": "origin", "Dec": "the least value returned"}{"idx": 44707, "node_name": "bound", "Dec": "the upper bound ( exclusive )"}{"idx": 44710, "node_name": "bound", "Dec": "the upper bound ( exclusive ) . must be positive ."}{"idx": 44712, "node_name": "origin", "Dec": "the least value returned"}{"idx": 44713, "node_name": "bound", "Dec": "the upper bound ( exclusive )"}{"idx": 44716, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 44719, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 44720, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 44721, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 44723, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 44724, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 44726, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 44729, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 44730, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 44731, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 44733, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 44734, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 44736, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 44739, "node_name": "streamsize", "Dec": "the number of values to generate"}{"idx": 44740, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 44741, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 44743, "node_name": "randomnumberorigin", "Dec": "the origin ( inclusive ) of each random value"}{"idx": 44744, "node_name": "randomnumberbound", "Dec": "the bound ( exclusive ) of each random value"}{"idx": 44748, "node_name": "item", "Dec": "the item to be pushed onto this stack ."}{"idx": 44753, "node_name": "o", "Dec": "the desired object ."}{"idx": 44762, "node_name": "closehandler", "Dec": "a task to execute when the stream is closed"}{"idx": 44767, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 44775, "node_name": "supplier", "Dec": "the supplier function for the new collector"}{"idx": 44776, "node_name": "accumulator", "Dec": "the accumulator function for the new collector"}{"idx": 44777, "node_name": "combiner", "Dec": "the combiner function for the new collector"}{"idx": 44778, "node_name": "characteristics", "Dec": "the collector characteristics for the new collector"}{"idx": 44780, "node_name": "supplier", "Dec": "the supplier function for the new collector"}{"idx": 44781, "node_name": "accumulator", "Dec": "the accumulator function for the new collector"}{"idx": 44782, "node_name": "combiner", "Dec": "the combiner function for the new collector"}{"idx": 44783, "node_name": "finisher", "Dec": "the finisher function for the new collector"}{"idx": 44784, "node_name": "characteristics", "Dec": "the collector characteristics for the new collector"}{"idx": 44787, "node_name": "collectionfactory", "Dec": "a supplier providing a new empty collection into which the results will be inserted"}{"idx": 44794, "node_name": "delimiter", "Dec": "the delimiter to be used between each element"}{"idx": 44796, "node_name": "delimiter", "Dec": "the delimiter to be used between each element"}{"idx": 44797, "node_name": "prefix", "Dec": "the sequence of characters to be used at the beginning of the joined result"}{"idx": 44798, "node_name": "suffix", "Dec": "the sequence of characters to be used at the end of the joined result"}{"idx": 44800, "node_name": "mapper", "Dec": "a function to be applied to the input elements"}{"idx": 44801, "node_name": "downstream", "Dec": "a collector which will accept mapped values"}{"idx": 44803, "node_name": "mapper", "Dec": "a function to be applied to the input elements , which returns a stream of results"}{"idx": 44804, "node_name": "downstream", "Dec": "a collector which will receive the elements of the stream returned by mapper"}{"idx": 44806, "node_name": "predicate", "Dec": "a predicate to be applied to the input elements"}{"idx": 44807, "node_name": "downstream", "Dec": "a collector which will accept values that match the predicate"}{"idx": 44809, "node_name": "downstream", "Dec": "a collector"}{"idx": 44810, "node_name": "finisher", "Dec": "a function to be applied to the final result of the downstream collector"}{"idx": 44813, "node_name": "comparator", "Dec": "a comparator for comparing elements"}{"idx": 44815, "node_name": "comparator", "Dec": "a comparator for comparing elements"}{"idx": 44817, "node_name": "mapper", "Dec": "a function extracting the property to be summed"}{"idx": 44819, "node_name": "mapper", "Dec": "a function extracting the property to be summed"}{"idx": 44821, "node_name": "mapper", "Dec": "a function extracting the property to be summed"}{"idx": 44823, "node_name": "mapper", "Dec": "a function extracting the property to be averaged"}{"idx": 44825, "node_name": "mapper", "Dec": "a function extracting the property to be averaged"}{"idx": 44827, "node_name": "mapper", "Dec": "a function extracting the property to be averaged"}{"idx": 44829, "node_name": "identity", "Dec": "the identity value for the reduction ( also , the value that is returned when there are no input elements )"}{"idx": 44830, "node_name": "op", "Dec": "a binaryoperator < t > used to reduce the input elements"}{"idx": 44832, "node_name": "op", "Dec": "a binaryoperator < t > used to reduce the input elements"}{"idx": 44834, "node_name": "identity", "Dec": "the identity value for the reduction ( also , the value that is returned when there are no input elements )"}{"idx": 44835, "node_name": "mapper", "Dec": "a mapping function to apply to each input value"}{"idx": 44836, "node_name": "op", "Dec": "a binaryoperator < u > used to reduce the mapped values"}{"idx": 44838, "node_name": "classifier", "Dec": "the classifier function mapping input elements to keys"}{"idx": 44840, "node_name": "classifier", "Dec": "a classifier function mapping input elements to keys"}{"idx": 44841, "node_name": "downstream", "Dec": "a collector implementing the downstream reduction"}{"idx": 44843, "node_name": "classifier", "Dec": "a classifier function mapping input elements to keys"}{"idx": 44844, "node_name": "downstream", "Dec": "a collector implementing the downstream reduction"}{"idx": 44845, "node_name": "mapfactory", "Dec": "a supplier providing a new empty map into which the results will be inserted"}{"idx": 44847, "node_name": "classifier", "Dec": "a classifier function mapping input elements to keys"}{"idx": 44849, "node_name": "classifier", "Dec": "a classifier function mapping input elements to keys"}{"idx": 44850, "node_name": "downstream", "Dec": "a collector implementing the downstream reduction"}{"idx": 44852, "node_name": "classifier", "Dec": "a classifier function mapping input elements to keys"}{"idx": 44853, "node_name": "downstream", "Dec": "a collector implementing the downstream reduction"}{"idx": 44854, "node_name": "mapfactory", "Dec": "a supplier providing a new empty concurrentmap into which the results will be inserted"}{"idx": 44856, "node_name": "predicate", "Dec": "a predicate used for classifying input elements"}{"idx": 44858, "node_name": "predicate", "Dec": "a predicate used for classifying input elements"}{"idx": 44859, "node_name": "downstream", "Dec": "a collector implementing the downstream reduction"}{"idx": 44861, "node_name": "keymapper", "Dec": "a mapping function to produce keys"}{"idx": 44862, "node_name": "valuemapper", "Dec": "a mapping function to produce values"}{"idx": 44864, "node_name": "keymapper", "Dec": "a mapping function to produce keys , must be non-null"}{"idx": 44865, "node_name": "valuemapper", "Dec": "a mapping function to produce values , must be non-null"}{"idx": 44867, "node_name": "keymapper", "Dec": "a mapping function to produce keys"}{"idx": 44868, "node_name": "valuemapper", "Dec": "a mapping function to produce values"}{"idx": 44869, "node_name": "mergefunction", "Dec": "a merge function , used to resolve collisions between values associated with the same key , as supplied to map.merge ( object , object , bifunction )"}{"idx": 44871, "node_name": "keymapper", "Dec": "a mapping function to produce keys , must be non-null"}{"idx": 44872, "node_name": "valuemapper", "Dec": "a mapping function to produce values , must be non-null"}{"idx": 44873, "node_name": "mergefunction", "Dec": "a merge function , used to resolve collisions between values associated with the same key , as supplied to map.merge ( object , object , bifunction ) , must be non-null"}{"idx": 44875, "node_name": "keymapper", "Dec": "a mapping function to produce keys"}{"idx": 44876, "node_name": "valuemapper", "Dec": "a mapping function to produce values"}{"idx": 44877, "node_name": "mergefunction", "Dec": "a merge function , used to resolve collisions between values associated with the same key , as supplied to map.merge ( object , object , bifunction )"}{"idx": 44878, "node_name": "mapfactory", "Dec": "a supplier providing a new empty map into which the results will be inserted"}{"idx": 44880, "node_name": "keymapper", "Dec": "the mapping function to produce keys"}{"idx": 44881, "node_name": "valuemapper", "Dec": "the mapping function to produce values"}{"idx": 44883, "node_name": "keymapper", "Dec": "a mapping function to produce keys"}{"idx": 44884, "node_name": "valuemapper", "Dec": "a mapping function to produce values"}{"idx": 44885, "node_name": "mergefunction", "Dec": "a merge function , used to resolve collisions between values associated with the same key , as supplied to map.merge ( object , object , bifunction )"}{"idx": 44887, "node_name": "keymapper", "Dec": "a mapping function to produce keys"}{"idx": 44888, "node_name": "valuemapper", "Dec": "a mapping function to produce values"}{"idx": 44889, "node_name": "mergefunction", "Dec": "a merge function , used to resolve collisions between values associated with the same key , as supplied to map.merge ( object , object , bifunction )"}{"idx": 44890, "node_name": "mapfactory", "Dec": "a supplier providing a new empty concurrentmap into which the results will be inserted"}{"idx": 44892, "node_name": "mapper", "Dec": "a mapping function to apply to each element"}{"idx": 44894, "node_name": "mapper", "Dec": "the mapping function to apply to each element"}{"idx": 44896, "node_name": "mapper", "Dec": "a mapping function to apply to each element"}{"idx": 44898, "node_name": "downstream1", "Dec": "the first downstream collector"}{"idx": 44899, "node_name": "downstream2", "Dec": "the second downstream collector"}{"idx": 44900, "node_name": "merger", "Dec": "the function which merges two results into the single one"}{"idx": 44903, "node_name": "t", "Dec": "the input argument"}{"idx": 44905, "node_name": "t", "Dec": "the element to add"}{"idx": 44909, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to each element to determine if it should be included"}{"idx": 44911, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 44913, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 44915, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 44917, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 44919, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element which produces a doublestream of new values"}{"idx": 44923, "node_name": "action", "Dec": "a non-interfering action to perform on the elements as they are consumed from the stream"}{"idx": 44925, "node_name": "maxsize", "Dec": "the number of elements the stream should be limited to"}{"idx": 44927, "node_name": "n", "Dec": "the number of leading elements to skip"}{"idx": 44929, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements to determine the longest prefix of elements ."}{"idx": 44931, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements to determine the longest prefix of elements ."}{"idx": 44933, "node_name": "action", "Dec": "a non-interfering action to perform on the elements"}{"idx": 44935, "node_name": "action", "Dec": "a non-interfering action to perform on the elements"}{"idx": 44938, "node_name": "identity", "Dec": "the identity value for the accumulating function"}{"idx": 44939, "node_name": "op", "Dec": "an associative , non-interfering , stateless function for combining two values"}{"idx": 44941, "node_name": "op", "Dec": "an associative , non-interfering , stateless function for combining two values"}{"idx": 44943, "node_name": "supplier", "Dec": "a function that creates a new mutable result container . for a parallel execution , this function may be called multiple times and must return a fresh value each time ."}{"idx": 44944, "node_name": "accumulator", "Dec": "an associative , non-interfering , stateless function that must fold an element into a result container ."}{"idx": 44945, "node_name": "combiner", "Dec": "an associative , non-interfering , stateless function that accepts two partial result containers and merges them , which must be compatible with the accumulator function . the combiner function must fold the elements from the second result container into the first result container ."}{"idx": 44953, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 44955, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 44957, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 44964, "node_name": "t", "Dec": "the single element"}{"idx": 44966, "node_name": "values", "Dec": "the elements of the new stream"}{"idx": 44968, "node_name": "seed", "Dec": "the initial element"}{"idx": 44969, "node_name": "f", "Dec": "a function to be applied to the previous element to produce a new element"}{"idx": 44971, "node_name": "seed", "Dec": "the initial element"}{"idx": 44972, "node_name": "hasnext", "Dec": "a predicate to apply to elements to determine when the stream must terminate ."}{"idx": 44973, "node_name": "next", "Dec": "a function to be applied to the previous element to produce a new element"}{"idx": 44975, "node_name": "s", "Dec": "the doublesupplier for generated elements"}{"idx": 44977, "node_name": "a", "Dec": "the first stream"}{"idx": 44978, "node_name": "b", "Dec": "the second stream"}{"idx": 44981, "node_name": "t", "Dec": "the input argument"}{"idx": 44983, "node_name": "t", "Dec": "the element to add"}{"idx": 44987, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to each element to determine if it should be included"}{"idx": 44989, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 44991, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 44993, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 44995, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 44997, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element which produces an intstream of new values"}{"idx": 45001, "node_name": "action", "Dec": "a non-interfering action to perform on the elements as they are consumed from the stream"}{"idx": 45003, "node_name": "maxsize", "Dec": "the number of elements the stream should be limited to"}{"idx": 45005, "node_name": "n", "Dec": "the number of leading elements to skip"}{"idx": 45007, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements to determine the longest prefix of elements ."}{"idx": 45009, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements to determine the longest prefix of elements ."}{"idx": 45011, "node_name": "action", "Dec": "a non-interfering action to perform on the elements"}{"idx": 45013, "node_name": "action", "Dec": "a non-interfering action to perform on the elements"}{"idx": 45016, "node_name": "identity", "Dec": "the identity value for the accumulating function"}{"idx": 45017, "node_name": "op", "Dec": "an associative , non-interfering , stateless function for combining two values"}{"idx": 45019, "node_name": "op", "Dec": "an associative , non-interfering , stateless function for combining two values"}{"idx": 45021, "node_name": "supplier", "Dec": "a function that creates a new mutable result container . for a parallel execution , this function may be called multiple times and must return a fresh value each time ."}{"idx": 45022, "node_name": "accumulator", "Dec": "an associative , non-interfering , stateless function that must fold an element into a result container ."}{"idx": 45023, "node_name": "combiner", "Dec": "an associative , non-interfering , stateless function that accepts two partial result containers and merges them , which must be compatible with the accumulator function . the combiner function must fold the elements from the second result container into the first result container ."}{"idx": 45031, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 45033, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 45035, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 45044, "node_name": "t", "Dec": "the single element"}{"idx": 45046, "node_name": "values", "Dec": "the elements of the new stream"}{"idx": 45048, "node_name": "seed", "Dec": "the initial element"}{"idx": 45049, "node_name": "f", "Dec": "a function to be applied to the previous element to produce a new element"}{"idx": 45051, "node_name": "seed", "Dec": "the initial element"}{"idx": 45052, "node_name": "hasnext", "Dec": "a predicate to apply to elements to determine when the stream must terminate ."}{"idx": 45053, "node_name": "next", "Dec": "a function to be applied to the previous element to produce a new element"}{"idx": 45055, "node_name": "s", "Dec": "the intsupplier for generated elements"}{"idx": 45057, "node_name": "startinclusive", "Dec": "the ( inclusive ) initial value"}{"idx": 45058, "node_name": "endexclusive", "Dec": "the exclusive upper bound"}{"idx": 45060, "node_name": "startinclusive", "Dec": "the ( inclusive ) initial value"}{"idx": 45061, "node_name": "endinclusive", "Dec": "the inclusive upper bound"}{"idx": 45063, "node_name": "a", "Dec": "the first stream"}{"idx": 45064, "node_name": "b", "Dec": "the second stream"}{"idx": 45067, "node_name": "t", "Dec": "the input argument"}{"idx": 45069, "node_name": "t", "Dec": "the element to add"}{"idx": 45073, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to each element to determine if it should be included"}{"idx": 45075, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 45077, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 45079, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 45081, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 45083, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element which produces a longstream of new values"}{"idx": 45087, "node_name": "action", "Dec": "a non-interfering action to perform on the elements as they are consumed from the stream"}{"idx": 45089, "node_name": "maxsize", "Dec": "the number of elements the stream should be limited to"}{"idx": 45091, "node_name": "n", "Dec": "the number of leading elements to skip"}{"idx": 45093, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements to determine the longest prefix of elements ."}{"idx": 45095, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements to determine the longest prefix of elements ."}{"idx": 45097, "node_name": "action", "Dec": "a non-interfering action to perform on the elements"}{"idx": 45099, "node_name": "action", "Dec": "a non-interfering action to perform on the elements"}{"idx": 45102, "node_name": "identity", "Dec": "the identity value for the accumulating function"}{"idx": 45103, "node_name": "op", "Dec": "an associative , non-interfering , stateless function for combining two values"}{"idx": 45105, "node_name": "op", "Dec": "an associative , non-interfering , stateless function for combining two values"}{"idx": 45107, "node_name": "supplier", "Dec": "a function that creates a new mutable result container . for a parallel execution , this function may be called multiple times and must return a fresh value each time ."}{"idx": 45108, "node_name": "accumulator", "Dec": "an associative , non-interfering , stateless function that must fold an element into a result container ."}{"idx": 45109, "node_name": "combiner", "Dec": "an associative , non-interfering , stateless function that accepts two partial result containers and merges them , which must be compatible with the accumulator function . the combiner function must fold the elements from the second result container into the first result container ."}{"idx": 45117, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 45119, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 45121, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 45129, "node_name": "t", "Dec": "the single element"}{"idx": 45131, "node_name": "values", "Dec": "the elements of the new stream"}{"idx": 45133, "node_name": "seed", "Dec": "the initial element"}{"idx": 45134, "node_name": "f", "Dec": "a function to be applied to the previous element to produce a new element"}{"idx": 45136, "node_name": "seed", "Dec": "the initial element"}{"idx": 45137, "node_name": "hasnext", "Dec": "a predicate to apply to elements to determine when the stream must terminate ."}{"idx": 45138, "node_name": "next", "Dec": "a function to be applied to the previous element to produce a new element"}{"idx": 45140, "node_name": "s", "Dec": "the longsupplier for generated elements"}{"idx": 45142, "node_name": "startinclusive", "Dec": "the ( inclusive ) initial value"}{"idx": 45143, "node_name": "endexclusive", "Dec": "the exclusive upper bound"}{"idx": 45145, "node_name": "startinclusive", "Dec": "the ( inclusive ) initial value"}{"idx": 45146, "node_name": "endinclusive", "Dec": "the inclusive upper bound"}{"idx": 45148, "node_name": "a", "Dec": "the first stream"}{"idx": 45149, "node_name": "b", "Dec": "the second stream"}{"idx": 45152, "node_name": "t", "Dec": "the input argument"}{"idx": 45154, "node_name": "t", "Dec": "the element to add"}{"idx": 45158, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to each element to determine if it should be included"}{"idx": 45160, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 45162, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 45164, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 45166, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element"}{"idx": 45168, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element which produces a stream of new values"}{"idx": 45170, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element which produces a stream of new values"}{"idx": 45172, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element which produces a stream of new values"}{"idx": 45174, "node_name": "mapper", "Dec": "a non-interfering , stateless function to apply to each element which produces a stream of new values"}{"idx": 45178, "node_name": "comparator", "Dec": "a non-interfering , stateless comparator to be used to compare stream elements"}{"idx": 45180, "node_name": "action", "Dec": "a non-interfering action to perform on the elements as they are consumed from the stream"}{"idx": 45182, "node_name": "maxsize", "Dec": "the number of elements the stream should be limited to"}{"idx": 45184, "node_name": "n", "Dec": "the number of leading elements to skip"}{"idx": 45186, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements to determine the longest prefix of elements ."}{"idx": 45188, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements to determine the longest prefix of elements ."}{"idx": 45190, "node_name": "action", "Dec": "a non-interfering action to perform on the elements"}{"idx": 45192, "node_name": "action", "Dec": "a non-interfering action to perform on the elements"}{"idx": 45195, "node_name": "generator", "Dec": "a function which produces a new array of the desired type and the provided length"}{"idx": 45197, "node_name": "identity", "Dec": "the identity value for the accumulating function"}{"idx": 45198, "node_name": "accumulator", "Dec": "an associative , non-interfering , stateless function for combining two values"}{"idx": 45200, "node_name": "accumulator", "Dec": "an associative , non-interfering , stateless function for combining two values"}{"idx": 45202, "node_name": "identity", "Dec": "the identity value for the combiner function"}{"idx": 45203, "node_name": "accumulator", "Dec": "an associative , non-interfering , stateless function for incorporating an additional element into a result"}{"idx": 45204, "node_name": "combiner", "Dec": "an associative , non-interfering , stateless function for combining two values , which must be compatible with the accumulator function"}{"idx": 45206, "node_name": "supplier", "Dec": "a function that creates a new mutable result container . for a parallel execution , this function may be called multiple times and must return a fresh value each time ."}{"idx": 45207, "node_name": "accumulator", "Dec": "an associative , non-interfering , stateless function that must fold an element into a result container ."}{"idx": 45208, "node_name": "combiner", "Dec": "an associative , non-interfering , stateless function that accepts two partial result containers and merges them , which must be compatible with the accumulator function . the combiner function must fold the elements from the second result container into the first result container ."}{"idx": 45210, "node_name": "collector", "Dec": "the collector describing the reduction"}{"idx": 45212, "node_name": "comparator", "Dec": "a non-interfering , stateless comparator to compare elements of this stream"}{"idx": 45214, "node_name": "comparator", "Dec": "a non-interfering , stateless comparator to compare elements of this stream"}{"idx": 45217, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 45219, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 45221, "node_name": "predicate", "Dec": "a non-interfering , stateless predicate to apply to elements of this stream"}{"idx": 45227, "node_name": "t", "Dec": "the single element"}{"idx": 45229, "node_name": "t", "Dec": "the single element"}{"idx": 45231, "node_name": "values", "Dec": "the elements of the new stream"}{"idx": 45233, "node_name": "seed", "Dec": "the initial element"}{"idx": 45234, "node_name": "f", "Dec": "a function to be applied to the previous element to produce a new element"}{"idx": 45236, "node_name": "seed", "Dec": "the initial element"}{"idx": 45237, "node_name": "hasnext", "Dec": "a predicate to apply to elements to determine when the stream must terminate ."}{"idx": 45238, "node_name": "next", "Dec": "a function to be applied to the previous element to produce a new element"}{"idx": 45240, "node_name": "s", "Dec": "the supplier of generated elements"}{"idx": 45242, "node_name": "a", "Dec": "the first stream"}{"idx": 45243, "node_name": "b", "Dec": "the second stream"}{"idx": 45246, "node_name": "spliterator", "Dec": "a spliterator describing the stream elements"}{"idx": 45247, "node_name": "parallel", "Dec": "if true then the returned stream is a parallel stream ; if false the returned stream is a sequential stream ."}{"idx": 45249, "node_name": "supplier", "Dec": "a supplier of a spliterator"}{"idx": 45250, "node_name": "characteristics", "Dec": "spliterator characteristics of the supplied spliterator . the characteristics must be equal to supplier.get() .characteristics() , otherwise undefined behavior may occur when terminal operation commences ."}{"idx": 45251, "node_name": "parallel", "Dec": "if true then the returned stream is a parallel stream ; if false the returned stream is a sequential stream ."}{"idx": 45253, "node_name": "spliterator", "Dec": "a spliterator.ofint describing the stream elements"}{"idx": 45254, "node_name": "parallel", "Dec": "if true then the returned stream is a parallel stream ; if false the returned stream is a sequential stream ."}{"idx": 45256, "node_name": "supplier", "Dec": "a supplier of a spliterator.ofint"}{"idx": 45257, "node_name": "characteristics", "Dec": "spliterator characteristics of the supplied spliterator.ofint . the characteristics must be equal to supplier.get() .characteristics() , otherwise undefined behavior may occur when terminal operation commences ."}{"idx": 45258, "node_name": "parallel", "Dec": "if true then the returned stream is a parallel stream ; if false the returned stream is a sequential stream ."}{"idx": 45260, "node_name": "spliterator", "Dec": "a spliterator.oflong describing the stream elements"}{"idx": 45261, "node_name": "parallel", "Dec": "if true then the returned stream is a parallel stream ; if false the returned stream is a sequential stream ."}{"idx": 45263, "node_name": "supplier", "Dec": "a supplier of a spliterator.oflong"}{"idx": 45264, "node_name": "characteristics", "Dec": "spliterator characteristics of the supplied spliterator.oflong . the characteristics must be equal to supplier.get() .characteristics() , otherwise undefined behavior may occur when terminal operation commences ."}{"idx": 45265, "node_name": "parallel", "Dec": "if true then the returned stream is a parallel stream ; if false the returned stream is a sequential stream ."}{"idx": 45267, "node_name": "spliterator", "Dec": "a spliterator.ofdouble describing the stream elements"}{"idx": 45268, "node_name": "parallel", "Dec": "if true then the returned stream is a parallel stream ; if false the returned stream is a sequential stream ."}{"idx": 45270, "node_name": "supplier", "Dec": "a supplier of a spliterator.ofdouble"}{"idx": 45271, "node_name": "characteristics", "Dec": "spliterator characteristics of the supplied spliterator.ofdouble . the characteristics must be equal to supplier.get() .characteristics() , otherwise undefined behavior may occur when terminal operation commences ."}{"idx": 45272, "node_name": "parallel", "Dec": "if true then the returned stream is a parallel stream ; if false the returned stream is a sequential stream ."}{"idx": 45275, "node_name": "delimiter", "Dec": "the sequence of characters to be used between each element added to the stringjoiner value"}{"idx": 45277, "node_name": "delimiter", "Dec": "the sequence of characters to be used between each element added to the stringjoiner"}{"idx": 45278, "node_name": "prefix", "Dec": "the sequence of characters to be used at the beginning"}{"idx": 45279, "node_name": "suffix", "Dec": "the sequence of characters to be used at the end"}{"idx": 45281, "node_name": "emptyvalue", "Dec": "the characters to return as the value of an empty stringjoiner"}{"idx": 45284, "node_name": "newelement", "Dec": "the element to add"}{"idx": 45286, "node_name": "other", "Dec": "the stringjoiner whose contents should be merged into this one"}{"idx": 45290, "node_name": "str", "Dec": "a string to be parsed ."}{"idx": 45291, "node_name": "delim", "Dec": "the delimiters ."}{"idx": 45292, "node_name": "returndelims", "Dec": "flag indicating whether to return the delimiters as tokens ."}{"idx": 45294, "node_name": "str", "Dec": "a string to be parsed ."}{"idx": 45295, "node_name": "delim", "Dec": "the delimiters ."}{"idx": 45297, "node_name": "str", "Dec": "a string to be parsed ."}{"idx": 45301, "node_name": "delim", "Dec": "the new delimiters ."}{"idx": 45308, "node_name": "isdaemon", "Dec": "true if the associated thread should run as a daemon ."}{"idx": 45310, "node_name": "name", "Dec": "the name of the associated thread"}{"idx": 45312, "node_name": "name", "Dec": "the name of the associated thread"}{"idx": 45313, "node_name": "isdaemon", "Dec": "true if the associated thread should run as a daemon"}{"idx": 45315, "node_name": "task", "Dec": "task to be scheduled ."}{"idx": 45316, "node_name": "delay", "Dec": "delay in milliseconds before task is to be executed ."}{"idx": 45318, "node_name": "task", "Dec": "task to be scheduled ."}{"idx": 45319, "node_name": "time", "Dec": "time at which task is to be executed ."}{"idx": 45321, "node_name": "task", "Dec": "task to be scheduled ."}{"idx": 45322, "node_name": "delay", "Dec": "delay in milliseconds before task is to be executed ."}{"idx": 45323, "node_name": "period", "Dec": "time in milliseconds between successive task executions ."}{"idx": 45325, "node_name": "task", "Dec": "task to be scheduled ."}{"idx": 45326, "node_name": "firsttime", "Dec": "first time at which task is to be executed ."}{"idx": 45327, "node_name": "period", "Dec": "time in milliseconds between successive task executions ."}{"idx": 45329, "node_name": "task", "Dec": "task to be scheduled ."}{"idx": 45330, "node_name": "delay", "Dec": "delay in milliseconds before task is to be executed ."}{"idx": 45331, "node_name": "period", "Dec": "time in milliseconds between successive task executions ."}{"idx": 45333, "node_name": "task", "Dec": "task to be scheduled ."}{"idx": 45334, "node_name": "firsttime", "Dec": "first time at which task is to be executed ."}{"idx": 45335, "node_name": "period", "Dec": "time in milliseconds between successive task executions ."}{"idx": 45348, "node_name": "era", "Dec": "the era of the given date ."}{"idx": 45349, "node_name": "year", "Dec": "the year in the given date ."}{"idx": 45350, "node_name": "month", "Dec": "the month in the given date . month is 0-based . e.g. , 0 for january ."}{"idx": 45351, "node_name": "day", "Dec": "the day-in-month of the given date ."}{"idx": 45352, "node_name": "dayofweek", "Dec": "the day-of-week of the given date ."}{"idx": 45353, "node_name": "milliseconds", "Dec": "the milliseconds in day in standard local time ."}{"idx": 45355, "node_name": "date", "Dec": "the date represented in milliseconds since january 1 , 1970 00:00 : 00 gmt"}{"idx": 45357, "node_name": "offsetmillis", "Dec": "the given base time zone offset to gmt ."}{"idx": 45361, "node_name": "id", "Dec": "the new time zone id ."}{"idx": 45364, "node_name": "locale", "Dec": "the locale in which to supply the display name ."}{"idx": 45366, "node_name": "daylight", "Dec": "true specifying a daylight saving time name , or false specifying a standard time name"}{"idx": 45367, "node_name": "style", "Dec": "either long or short"}{"idx": 45369, "node_name": "daylight", "Dec": "true specifying a daylight saving time name , or false specifying a standard time name"}{"idx": 45370, "node_name": "style", "Dec": "either long or short"}{"idx": 45371, "node_name": "locale", "Dec": "the locale in which to supply the display name ."}{"idx": 45376, "node_name": "date", "Dec": "the given date ."}{"idx": 45378, "node_name": "id", "Dec": "the id for a timezone , either an abbreviation such as \" pst \" , a full name such as \" america / los_angeles \" , or a custom id such as \" gmt-8 : 00 \" . note that the support of abbreviations is for jdk 1.1.x compatibility only and full names should be used ."}{"idx": 45380, "node_name": "zoneid", "Dec": "a zoneid from which the time zone id is obtained"}{"idx": 45383, "node_name": "rawoffset", "Dec": "the given time zone gmt offset in milliseconds ."}{"idx": 45387, "node_name": "zone", "Dec": "the new default timezone , or null"}{"idx": 45389, "node_name": "other", "Dec": "the timezone object to be compared with"}{"idx": 45394, "node_name": "s", "Dec": "the detail message"}{"idx": 45398, "node_name": "comparator", "Dec": "the comparator that will be used to order this map . if null , the natural ordering of the keys will be used ."}{"idx": 45400, "node_name": "m", "Dec": "the map whose mappings are to be placed in this map"}{"idx": 45402, "node_name": "m", "Dec": "the sorted map whose mappings are to be placed in this map , and whose comparator is to be used to sort this map"}{"idx": 45405, "node_name": "key", "Dec": "key whose presence in this map is to be tested"}{"idx": 45407, "node_name": "value", "Dec": "value whose presence in this map is to be tested"}{"idx": 45409, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 45413, "node_name": "map", "Dec": "mappings to be stored in this map"}{"idx": 45415, "node_name": "key", "Dec": "key with which the specified value is to be associated"}{"idx": 45416, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 45418, "node_name": "key", "Dec": "key for which mapping should be removed"}{"idx": 45426, "node_name": "key", "Dec": "the key"}{"idx": 45428, "node_name": "key", "Dec": "the key"}{"idx": 45430, "node_name": "key", "Dec": "the key"}{"idx": 45432, "node_name": "key", "Dec": "the key"}{"idx": 45434, "node_name": "key", "Dec": "the key"}{"idx": 45436, "node_name": "key", "Dec": "the key"}{"idx": 45438, "node_name": "key", "Dec": "the key"}{"idx": 45440, "node_name": "key", "Dec": "the key"}{"idx": 45448, "node_name": "fromkey", "Dec": "low endpoint of the keys in the returned map"}{"idx": 45449, "node_name": "frominclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 45450, "node_name": "tokey", "Dec": "high endpoint of the keys in the returned map"}{"idx": 45451, "node_name": "toinclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 45453, "node_name": "tokey", "Dec": "high endpoint of the keys in the returned map"}{"idx": 45454, "node_name": "inclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 45456, "node_name": "fromkey", "Dec": "low endpoint of the keys in the returned map"}{"idx": 45457, "node_name": "inclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 45459, "node_name": "fromkey", "Dec": "low endpoint ( inclusive ) of the keys in the returned map"}{"idx": 45460, "node_name": "tokey", "Dec": "high endpoint ( exclusive ) of the keys in the returned map"}{"idx": 45462, "node_name": "tokey", "Dec": "high endpoint ( exclusive ) of the keys in the returned map"}{"idx": 45464, "node_name": "fromkey", "Dec": "low endpoint ( inclusive ) of the keys in the returned map"}{"idx": 45468, "node_name": "comparator", "Dec": "the comparator that will be used to order this set . if null , the natural ordering of the elements will be used ."}{"idx": 45470, "node_name": "c", "Dec": "collection whose elements will comprise the new set"}{"idx": 45472, "node_name": "s", "Dec": "sorted set whose elements will comprise the new set"}{"idx": 45479, "node_name": "o", "Dec": "object to be checked for containment in this set"}{"idx": 45481, "node_name": "e", "Dec": "element to be added to this set"}{"idx": 45483, "node_name": "o", "Dec": "object to be removed from this set , if present"}{"idx": 45486, "node_name": "c", "Dec": "collection containing elements to be added to this set"}{"idx": 45488, "node_name": "fromelement", "Dec": "low endpoint of the returned set"}{"idx": 45489, "node_name": "frominclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 45490, "node_name": "toelement", "Dec": "high endpoint of the returned set"}{"idx": 45491, "node_name": "toinclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 45493, "node_name": "toelement", "Dec": "high endpoint of the returned set"}{"idx": 45494, "node_name": "inclusive", "Dec": "true if the high endpoint is to be included in the returned view"}{"idx": 45496, "node_name": "fromelement", "Dec": "low endpoint of the returned set"}{"idx": 45497, "node_name": "inclusive", "Dec": "true if the low endpoint is to be included in the returned view"}{"idx": 45499, "node_name": "fromelement", "Dec": "low endpoint ( inclusive ) of the returned set"}{"idx": 45500, "node_name": "toelement", "Dec": "high endpoint ( exclusive ) of the returned set"}{"idx": 45502, "node_name": "toelement", "Dec": "high endpoint ( exclusive ) of the returned set"}{"idx": 45504, "node_name": "fromelement", "Dec": "low endpoint ( inclusive ) of the returned set"}{"idx": 45508, "node_name": "e", "Dec": "the value to match"}{"idx": 45510, "node_name": "e", "Dec": "the value to match"}{"idx": 45512, "node_name": "e", "Dec": "the value to match"}{"idx": 45514, "node_name": "e", "Dec": "the value to match"}{"idx": 45521, "node_name": "s", "Dec": "unknown conversion"}{"idx": 45525, "node_name": "f", "Dec": "the set of format flags which contain an unknown flag"}{"idx": 45529, "node_name": "mostsigbits", "Dec": "the most significant bits of the uuid"}{"idx": 45530, "node_name": "leastsigbits", "Dec": "the least significant bits of the uuid"}{"idx": 45533, "node_name": "name", "Dec": "a byte array to be used to construct a uuid"}{"idx": 45535, "node_name": "name", "Dec": "a string that specifies a uuid"}{"idx": 45546, "node_name": "obj", "Dec": "the object to be compared"}{"idx": 45548, "node_name": "val", "Dec": "uuid to which this uuid is to be compared"}{"idx": 45554, "node_name": "initialcapacity", "Dec": "the initial capacity of the vector"}{"idx": 45555, "node_name": "capacityincrement", "Dec": "the amount by which the capacity is increased when the vector overflows"}{"idx": 45557, "node_name": "initialcapacity", "Dec": "the initial capacity of the vector"}{"idx": 45560, "node_name": "c", "Dec": "the collection whose elements are to be placed into this vector"}{"idx": 45562, "node_name": "anarray", "Dec": "the array into which the components get copied"}{"idx": 45565, "node_name": "mincapacity", "Dec": "the desired minimum capacity"}{"idx": 45567, "node_name": "newsize", "Dec": "the new size of this vector"}{"idx": 45573, "node_name": "o", "Dec": "element whose presence in this vector is to be tested"}{"idx": 45575, "node_name": "o", "Dec": "element to search for"}{"idx": 45577, "node_name": "o", "Dec": "element to search for"}{"idx": 45578, "node_name": "index", "Dec": "index to start searching from"}{"idx": 45580, "node_name": "o", "Dec": "element to search for"}{"idx": 45582, "node_name": "o", "Dec": "element to search for"}{"idx": 45583, "node_name": "index", "Dec": "index to start searching backwards from"}{"idx": 45585, "node_name": "index", "Dec": "an index into this vector"}{"idx": 45589, "node_name": "obj", "Dec": "what the component is to be set to"}{"idx": 45590, "node_name": "index", "Dec": "the specified index"}{"idx": 45592, "node_name": "index", "Dec": "the index of the object to remove"}{"idx": 45594, "node_name": "obj", "Dec": "the component to insert"}{"idx": 45595, "node_name": "index", "Dec": "where to insert the new component"}{"idx": 45597, "node_name": "obj", "Dec": "the component to be added"}{"idx": 45599, "node_name": "obj", "Dec": "the component to be removed"}{"idx": 45604, "node_name": "a", "Dec": "the array into which the elements of the vector are to be stored , if it is big enough ; otherwise , a new array of the same runtime type is allocated for this purpose ."}{"idx": 45606, "node_name": "index", "Dec": "index of the element to return"}{"idx": 45608, "node_name": "index", "Dec": "index of the element to replace"}{"idx": 45609, "node_name": "element", "Dec": "element to be stored at the specified position"}{"idx": 45611, "node_name": "e", "Dec": "element to be appended to this vector"}{"idx": 45613, "node_name": "o", "Dec": "element to be removed from this vector , if present"}{"idx": 45615, "node_name": "index", "Dec": "index at which the specified element is to be inserted"}{"idx": 45616, "node_name": "element", "Dec": "element to be inserted"}{"idx": 45618, "node_name": "index", "Dec": "the index of the element to be removed"}{"idx": 45621, "node_name": "c", "Dec": "a collection whose elements will be tested for containment in this vector"}{"idx": 45623, "node_name": "c", "Dec": "elements to be inserted into this vector"}{"idx": 45625, "node_name": "c", "Dec": "a collection of elements to be removed from the vector"}{"idx": 45627, "node_name": "c", "Dec": "a collection of elements to be retained in this vector ( all other elements are removed )"}{"idx": 45629, "node_name": "filter", "Dec": "a predicate which returns true for elements to be removed"}{"idx": 45631, "node_name": "index", "Dec": "index at which to insert the first element from the specified collection"}{"idx": 45632, "node_name": "c", "Dec": "elements to be inserted into this vector"}{"idx": 45634, "node_name": "o", "Dec": "the object to be compared for equality with this vector"}{"idx": 45638, "node_name": "fromindex", "Dec": "low endpoint ( inclusive ) of the sublist"}{"idx": 45639, "node_name": "toindex", "Dec": "high endpoint ( exclusive ) of the sublist"}{"idx": 45641, "node_name": "fromindex", "Dec": "index of first element to be removed"}{"idx": 45642, "node_name": "toindex", "Dec": "index after last element to be removed"}{"idx": 45644, "node_name": "index", "Dec": "index of the first element to be returned from the list iterator ( by a call to next )"}{"idx": 45648, "node_name": "action", "Dec": "the action to be performed for each element"}{"idx": 45650, "node_name": "operator", "Dec": "the operator to apply to each element"}{"idx": 45654, "node_name": "initialcapacity", "Dec": "the initial capacity of the weakhashmap"}{"idx": 45655, "node_name": "loadfactor", "Dec": "the load factor of the weakhashmap"}{"idx": 45657, "node_name": "initialcapacity", "Dec": "the initial capacity of the weakhashmap"}{"idx": 45660, "node_name": "m", "Dec": "the map whose mappings are to be placed in this map"}{"idx": 45664, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 45666, "node_name": "key", "Dec": "the key whose presence in this map is to be tested"}{"idx": 45668, "node_name": "key", "Dec": "key with which the specified value is to be associated ."}{"idx": 45669, "node_name": "value", "Dec": "value to be associated with the specified key ."}{"idx": 45671, "node_name": "m", "Dec": "mappings to be stored in this map ."}{"idx": 45673, "node_name": "key", "Dec": "key whose mapping is to be removed from the map"}{"idx": 45676, "node_name": "value", "Dec": "value whose presence in this map is to be tested"}{"idx": 45683, "node_name": "b", "Dec": "the byte to update the checksum with"}{"idx": 45685, "node_name": "b", "Dec": "the byte array to update the checksum with"}{"idx": 45686, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45687, "node_name": "len", "Dec": "the number of bytes to use for the update"}{"idx": 45689, "node_name": "buffer", "Dec": "the bytebuffer to update the checksum with"}{"idx": 45694, "node_name": "in", "Dec": "the input stream"}{"idx": 45695, "node_name": "cksum", "Dec": "the checksum"}{"idx": 45698, "node_name": "buf", "Dec": "the buffer into which the data is read"}{"idx": 45699, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 45700, "node_name": "len", "Dec": "the maximum number of bytes read"}{"idx": 45702, "node_name": "n", "Dec": "the number of bytes to skip"}{"idx": 45706, "node_name": "out", "Dec": "the output stream"}{"idx": 45707, "node_name": "cksum", "Dec": "the checksum"}{"idx": 45709, "node_name": "b", "Dec": "the byte to be written"}{"idx": 45711, "node_name": "b", "Dec": "the data to be written"}{"idx": 45712, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45713, "node_name": "len", "Dec": "the number of bytes to be written"}{"idx": 45717, "node_name": "b", "Dec": "the byte to update the checksum with"}{"idx": 45719, "node_name": "b", "Dec": "the array of bytes to update the checksum with"}{"idx": 45721, "node_name": "b", "Dec": "the byte array to update the checksum with"}{"idx": 45722, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45723, "node_name": "len", "Dec": "the number of bytes to use for the update"}{"idx": 45725, "node_name": "buffer", "Dec": "the bytebuffer to update the checksum with"}{"idx": 45731, "node_name": "b", "Dec": "the byte to update the checksum with"}{"idx": 45733, "node_name": "b", "Dec": "the byte array to update the checksum with"}{"idx": 45734, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45735, "node_name": "len", "Dec": "the number of bytes to use for the update"}{"idx": 45737, "node_name": "buffer", "Dec": "the bytebuffer to update the checksum with"}{"idx": 45743, "node_name": "b", "Dec": "the byte to update the checksum with"}{"idx": 45745, "node_name": "b", "Dec": "the byte array to update the checksum with"}{"idx": 45746, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45747, "node_name": "len", "Dec": "the number of bytes to use for the update"}{"idx": 45749, "node_name": "buffer", "Dec": "the bytebuffer to update the checksum with"}{"idx": 45755, "node_name": "s", "Dec": "the string containing a detail message"}{"idx": 45769, "node_name": "level", "Dec": "the compression level ( 0-9 )"}{"idx": 45770, "node_name": "nowrap", "Dec": "if true then use gzip compatible compression"}{"idx": 45772, "node_name": "level", "Dec": "the compression level ( 0-9 )"}{"idx": 45775, "node_name": "input", "Dec": "the input data bytes"}{"idx": 45776, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45777, "node_name": "len", "Dec": "the length of the data"}{"idx": 45779, "node_name": "input", "Dec": "the input data bytes"}{"idx": 45781, "node_name": "input", "Dec": "the input data bytes"}{"idx": 45783, "node_name": "dictionary", "Dec": "the dictionary data bytes"}{"idx": 45784, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45785, "node_name": "len", "Dec": "the length of the data"}{"idx": 45787, "node_name": "dictionary", "Dec": "the dictionary data bytes"}{"idx": 45789, "node_name": "dictionary", "Dec": "the dictionary data bytes"}{"idx": 45791, "node_name": "strategy", "Dec": "the new compression strategy"}{"idx": 45793, "node_name": "level", "Dec": "the new compression level ( 0-9 )"}{"idx": 45798, "node_name": "output", "Dec": "the buffer for the compressed data"}{"idx": 45799, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45800, "node_name": "len", "Dec": "the maximum number of bytes of compressed data"}{"idx": 45802, "node_name": "output", "Dec": "the buffer for the compressed data"}{"idx": 45804, "node_name": "output", "Dec": "the buffer for the compressed data"}{"idx": 45806, "node_name": "output", "Dec": "the buffer for the compressed data"}{"idx": 45807, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45808, "node_name": "len", "Dec": "the maximum number of bytes of compressed data"}{"idx": 45809, "node_name": "flush", "Dec": "the compression flush mode"}{"idx": 45811, "node_name": "output", "Dec": "the buffer for the compressed data"}{"idx": 45812, "node_name": "flush", "Dec": "the compression flush mode"}{"idx": 45824, "node_name": "in", "Dec": "input stream to read the uncompressed data to"}{"idx": 45826, "node_name": "in", "Dec": "input stream to read the uncompressed data to"}{"idx": 45827, "node_name": "defl", "Dec": "compressor ( \" deflater \") for this stream"}{"idx": 45829, "node_name": "in", "Dec": "input stream to read the uncompressed data to"}{"idx": 45830, "node_name": "defl", "Dec": "compressor ( \" deflater \") for this stream"}{"idx": 45831, "node_name": "buflen", "Dec": "compression buffer size"}{"idx": 45835, "node_name": "b", "Dec": "buffer into which the data is read"}{"idx": 45836, "node_name": "off", "Dec": "starting offset of the data within b"}{"idx": 45837, "node_name": "len", "Dec": "maximum number of compressed bytes to read into b"}{"idx": 45839, "node_name": "n", "Dec": "number of bytes to be skipped"}{"idx": 45843, "node_name": "limit", "Dec": "maximum bytes that can be read before invalidating the position marker"}{"idx": 45849, "node_name": "out", "Dec": "the output stream"}{"idx": 45850, "node_name": "def", "Dec": "the compressor ( \" deflater \")"}{"idx": 45851, "node_name": "size", "Dec": "the output buffer size"}{"idx": 45852, "node_name": "syncflush", "Dec": "if true the flush() method of this instance flushes the compressor with flush mode deflater.sync_flush before flushing the output stream , otherwise only flushes the output stream"}{"idx": 45854, "node_name": "out", "Dec": "the output stream"}{"idx": 45855, "node_name": "def", "Dec": "the compressor ( \" deflater \")"}{"idx": 45856, "node_name": "size", "Dec": "the output buffer size"}{"idx": 45858, "node_name": "out", "Dec": "the output stream"}{"idx": 45859, "node_name": "def", "Dec": "the compressor ( \" deflater \")"}{"idx": 45860, "node_name": "syncflush", "Dec": "if true the flush() method of this instance flushes the compressor with flush mode deflater.sync_flush before flushing the output stream , otherwise only flushes the output stream"}{"idx": 45862, "node_name": "out", "Dec": "the output stream"}{"idx": 45863, "node_name": "def", "Dec": "the compressor ( \" deflater \")"}{"idx": 45865, "node_name": "out", "Dec": "the output stream"}{"idx": 45866, "node_name": "syncflush", "Dec": "if true the flush() method of this instance flushes the compressor with flush mode deflater.sync_flush before flushing the output stream , otherwise only flushes the output stream"}{"idx": 45868, "node_name": "out", "Dec": "the output stream"}{"idx": 45870, "node_name": "b", "Dec": "the byte to be written"}{"idx": 45872, "node_name": "b", "Dec": "the data to be written"}{"idx": 45873, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45874, "node_name": "len", "Dec": "the length of the data"}{"idx": 45884, "node_name": "in", "Dec": "the input stream"}{"idx": 45885, "node_name": "size", "Dec": "the input buffer size"}{"idx": 45887, "node_name": "in", "Dec": "the input stream"}{"idx": 45889, "node_name": "buf", "Dec": "the buffer into which the data is read"}{"idx": 45890, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 45891, "node_name": "len", "Dec": "the maximum number of bytes read"}{"idx": 45896, "node_name": "out", "Dec": "the output stream"}{"idx": 45897, "node_name": "size", "Dec": "the output buffer size"}{"idx": 45899, "node_name": "out", "Dec": "the output stream"}{"idx": 45900, "node_name": "size", "Dec": "the output buffer size"}{"idx": 45901, "node_name": "syncflush", "Dec": "if true invocation of the inherited flush() method of this instance flushes the compressor with flush mode deflater.sync_flush before flushing the output stream , otherwise only flushes the output stream"}{"idx": 45903, "node_name": "out", "Dec": "the output stream"}{"idx": 45905, "node_name": "out", "Dec": "the output stream"}{"idx": 45906, "node_name": "syncflush", "Dec": "if true invocation of the inherited flush() method of this instance flushes the compressor with flush mode deflater.sync_flush before flushing the output stream , otherwise only flushes the output stream"}{"idx": 45908, "node_name": "buf", "Dec": "the data to be written"}{"idx": 45909, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45910, "node_name": "len", "Dec": "the length of the data"}{"idx": 45914, "node_name": "nowrap", "Dec": "if true then support gzip compatible compression"}{"idx": 45917, "node_name": "input", "Dec": "the input data bytes"}{"idx": 45918, "node_name": "off", "Dec": "the start offset of the input data"}{"idx": 45919, "node_name": "len", "Dec": "the length of the input data"}{"idx": 45921, "node_name": "input", "Dec": "the input data bytes"}{"idx": 45923, "node_name": "input", "Dec": "the input data bytes"}{"idx": 45925, "node_name": "dictionary", "Dec": "the dictionary data bytes"}{"idx": 45926, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45927, "node_name": "len", "Dec": "the length of the data"}{"idx": 45929, "node_name": "dictionary", "Dec": "the dictionary data bytes"}{"idx": 45931, "node_name": "dictionary", "Dec": "the dictionary data bytes"}{"idx": 45937, "node_name": "output", "Dec": "the buffer for the uncompressed data"}{"idx": 45938, "node_name": "off", "Dec": "the start offset of the data"}{"idx": 45939, "node_name": "len", "Dec": "the maximum number of uncompressed bytes"}{"idx": 45941, "node_name": "output", "Dec": "the buffer for the uncompressed data"}{"idx": 45943, "node_name": "output", "Dec": "the buffer for the uncompressed data"}{"idx": 45956, "node_name": "in", "Dec": "the input stream"}{"idx": 45957, "node_name": "inf", "Dec": "the decompressor ( \" inflater \")"}{"idx": 45958, "node_name": "size", "Dec": "the input buffer size"}{"idx": 45960, "node_name": "in", "Dec": "the input stream"}{"idx": 45961, "node_name": "inf", "Dec": "the decompressor ( \" inflater \")"}{"idx": 45963, "node_name": "in", "Dec": "the input stream"}{"idx": 45966, "node_name": "b", "Dec": "the buffer into which the data is read"}{"idx": 45967, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 45968, "node_name": "len", "Dec": "the maximum number of bytes read"}{"idx": 45971, "node_name": "n", "Dec": "the number of bytes to skip"}{"idx": 45976, "node_name": "readlimit", "Dec": "the maximum limit of bytes that can be read before the mark position becomes invalid ."}{"idx": 45982, "node_name": "out", "Dec": "output stream to write the uncompressed data to"}{"idx": 45984, "node_name": "out", "Dec": "output stream to write the uncompressed data to"}{"idx": 45985, "node_name": "infl", "Dec": "decompressor ( \" inflater \") for this stream"}{"idx": 45987, "node_name": "out", "Dec": "output stream to write the uncompressed data to"}{"idx": 45988, "node_name": "infl", "Dec": "decompressor ( \" inflater \") for this stream"}{"idx": 45989, "node_name": "buflen", "Dec": "decompression buffer size"}{"idx": 45994, "node_name": "b", "Dec": "a single byte of compressed data to decompress and write to the output stream"}{"idx": 45996, "node_name": "b", "Dec": "buffer containing compressed data to decompress and write to the output stream"}{"idx": 45997, "node_name": "off", "Dec": "starting offset of the compressed data within b"}{"idx": 45998, "node_name": "len", "Dec": "number of bytes to decompress from b"}{"idx": 46043, "node_name": "name", "Dec": "the entry name"}{"idx": 46045, "node_name": "e", "Dec": "a zip entry object"}{"idx": 46048, "node_name": "time", "Dec": "the last modification time of the entry in milliseconds since the epoch"}{"idx": 46051, "node_name": "time", "Dec": "the last modification time of the entry in local date-time"}{"idx": 46054, "node_name": "time", "Dec": "the last modification time of the entry"}{"idx": 46057, "node_name": "time", "Dec": "the last access time of the entry"}{"idx": 46060, "node_name": "time", "Dec": "the creation time of the entry"}{"idx": 46063, "node_name": "size", "Dec": "the uncompressed size in bytes"}{"idx": 46067, "node_name": "csize", "Dec": "the compressed size to set"}{"idx": 46069, "node_name": "crc", "Dec": "the crc-32 value"}{"idx": 46072, "node_name": "method", "Dec": "the compression method , either stored or deflated"}{"idx": 46075, "node_name": "extra", "Dec": "the extra field data bytes"}{"idx": 46078, "node_name": "comment", "Dec": "the comment string"}{"idx": 46086, "node_name": "s", "Dec": "the string containing a detail message"}{"idx": 46090, "node_name": "s", "Dec": "the detail message ."}{"idx": 46135, "node_name": "name", "Dec": "the name of the zip file"}{"idx": 46137, "node_name": "file", "Dec": "the zip file to be opened for reading"}{"idx": 46138, "node_name": "mode", "Dec": "the mode in which the file is to be opened"}{"idx": 46140, "node_name": "file", "Dec": "the zip file to be opened for reading"}{"idx": 46142, "node_name": "file", "Dec": "the zip file to be opened for reading"}{"idx": 46143, "node_name": "mode", "Dec": "the mode in which the file is to be opened"}{"idx": 46144, "node_name": "charset", "Dec": "the charset to be used to decode the zip entry name and comment that are not encoded by using utf-8 encoding ( indicated by entry's general purpose flag ) ."}{"idx": 46146, "node_name": "name", "Dec": "the name of the zip file"}{"idx": 46147, "node_name": "charset", "Dec": "the charset to be used to decode the zip entry name and comment that are not encoded by using utf-8 encoding ( indicated by entry's general purpose flag ) ."}{"idx": 46149, "node_name": "file", "Dec": "the zip file to be opened for reading"}{"idx": 46150, "node_name": "charset", "Dec": "the charset to be used to decode the zip entry name and comment ( ignored if the language encoding bit of the zip entry's general purpose bit flag is set ) ."}{"idx": 46153, "node_name": "name", "Dec": "the name of the entry"}{"idx": 46155, "node_name": "entry", "Dec": "the zip file entry"}{"idx": 46203, "node_name": "in", "Dec": "the actual input stream"}{"idx": 46205, "node_name": "in", "Dec": "the actual input stream"}{"idx": 46206, "node_name": "charset", "Dec": "the charset to be used to decode the zip entry name ( ignored if the language encoding bit of the zip entry's general purpose bit flag is set ) ."}{"idx": 46211, "node_name": "b", "Dec": "the buffer into which the data is read"}{"idx": 46212, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 46213, "node_name": "len", "Dec": "the maximum number of bytes read"}{"idx": 46215, "node_name": "n", "Dec": "the number of bytes to skip"}{"idx": 46218, "node_name": "name", "Dec": "the zip file entry name"}{"idx": 46263, "node_name": "out", "Dec": "the actual output stream"}{"idx": 46265, "node_name": "out", "Dec": "the actual output stream"}{"idx": 46266, "node_name": "charset", "Dec": "the charset to be used to encode the entry names and comments"}{"idx": 46268, "node_name": "comment", "Dec": "the comment string"}{"idx": 46270, "node_name": "method", "Dec": "the default compression method"}{"idx": 46272, "node_name": "level", "Dec": "the compression level ( 0-9 )"}{"idx": 46274, "node_name": "e", "Dec": "the zip entry to be written"}{"idx": 46277, "node_name": "b", "Dec": "the data to be written"}{"idx": 46278, "node_name": "off", "Dec": "the start offset in the data"}{"idx": 46279, "node_name": "len", "Dec": "the number of bytes that are written"}{"idx": 46296, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 46298, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 46304, "node_name": "start", "Dec": "the beginning index of the span of text"}{"idx": 46305, "node_name": "end", "Dec": "the ending index of the span of text"}{"idx": 46306, "node_name": "attr", "Dec": "the attributeset shared by this text span"}{"idx": 46311, "node_name": "name", "Dec": "the name of the resource bundle to use for lookup"}{"idx": 46312, "node_name": "locale", "Dec": "the locale for which to obtain a localized string"}{"idx": 46314, "node_name": "locale", "Dec": "the locale for which to obtain a localized string"}{"idx": 46320, "node_name": "c", "Dec": "the new color for the background"}{"idx": 46323, "node_name": "c", "Dec": "the new color for the foreground"}{"idx": 46326, "node_name": "cursor", "Dec": "the new cursor for the object"}{"idx": 46329, "node_name": "f", "Dec": "the new font for the object"}{"idx": 46331, "node_name": "f", "Dec": "the font for which font metrics is to be obtained"}{"idx": 46334, "node_name": "b", "Dec": "if true , enables this object ; otherwise , disables it"}{"idx": 46337, "node_name": "b", "Dec": "if true , shows this object ; otherwise , hides it"}{"idx": 46340, "node_name": "p", "Dec": "the point relative to the coordinate system of the object"}{"idx": 46344, "node_name": "p", "Dec": "the new position for the top-left corner"}{"idx": 46347, "node_name": "r", "Dec": "rectangle indicating this component's bounds"}{"idx": 46350, "node_name": "d", "Dec": "the dimension specifying the new size of the object"}{"idx": 46352, "node_name": "p", "Dec": "the point relative to the coordinate system of this object"}{"idx": 46356, "node_name": "l", "Dec": "the focus listener"}{"idx": 46358, "node_name": "l", "Dec": "the focus listener"}{"idx": 46388, "node_name": "s", "Dec": "the new localized name of the object"}{"idx": 46391, "node_name": "s", "Dec": "the new localized description of the object"}{"idx": 46396, "node_name": "a", "Dec": "- accessible to be set as the parent"}{"idx": 46400, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 46403, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 46405, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 46416, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 46417, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 46418, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 46421, "node_name": "s", "Dec": "the string to set the text contents"}{"idx": 46423, "node_name": "index", "Dec": "the index in the text where the string will be inserted"}{"idx": 46424, "node_name": "s", "Dec": "the string to insert in the text"}{"idx": 46426, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 46427, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 46429, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 46430, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 46432, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 46433, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 46435, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 46437, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 46438, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 46439, "node_name": "s", "Dec": "the string to replace the text between two indices"}{"idx": 46441, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 46442, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 46444, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 46445, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 46446, "node_name": "as", "Dec": "the attribute set"}{"idx": 46453, "node_name": "index", "Dec": "the zero-based index in the table . the index is the table cell offset from row == 0 and column == 0 ."}{"idx": 46455, "node_name": "index", "Dec": "the zero-based index in the table . the index is the table cell offset from row == 0 and column == 0 ."}{"idx": 46457, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 46458, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 46463, "node_name": "startindex", "Dec": "the start index in the text"}{"idx": 46464, "node_name": "endindex", "Dec": "the end index in the text"}{"idx": 46466, "node_name": "part", "Dec": "the character , word , sentence , line or attribute_run to retrieve"}{"idx": 46467, "node_name": "index", "Dec": "an index within the text"}{"idx": 46469, "node_name": "part", "Dec": "the character , word , sentence , line or attribute_run to retrieve"}{"idx": 46470, "node_name": "index", "Dec": "an index within the text"}{"idx": 46472, "node_name": "part", "Dec": "the character , word , sentence , line or attribute_run to retrieve"}{"idx": 46473, "node_name": "index", "Dec": "an index within the text"}{"idx": 46475, "node_name": "startindex", "Dec": "the start index in the text"}{"idx": 46476, "node_name": "endindex", "Dec": "the end index in the text"}{"idx": 46482, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 46484, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 46486, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 46488, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 46494, "node_name": "linkindex", "Dec": "within the links of this hypertext"}{"idx": 46496, "node_name": "charindex", "Dec": "index within the text"}{"idx": 46500, "node_name": "description", "Dec": "the description of the icon"}{"idx": 46506, "node_name": "i", "Dec": "zero-based index of the key bindings"}{"idx": 46533, "node_name": "key", "Dec": "the locale independent name of the relation"}{"idx": 46535, "node_name": "key", "Dec": "the locale independent name of the relation"}{"idx": 46536, "node_name": "target", "Dec": "the target object for this relation"}{"idx": 46538, "node_name": "key", "Dec": "the locale independent name of the relation"}{"idx": 46539, "node_name": "target", "Dec": "the target object ( s ) for this relation"}{"idx": 46543, "node_name": "target", "Dec": "the target object for this relation"}{"idx": 46545, "node_name": "target", "Dec": "an array containing the target objects for this relation"}{"idx": 46550, "node_name": "relations", "Dec": "an array of accessiblerelation describing the relation set"}{"idx": 46552, "node_name": "relation", "Dec": "the relation to add to the relation set"}{"idx": 46554, "node_name": "relations", "Dec": "accessiblerelation array describing the relation set"}{"idx": 46556, "node_name": "relation", "Dec": "the relation to remove from the relation set"}{"idx": 46560, "node_name": "key", "Dec": "the accessiblerelation key"}{"idx": 46562, "node_name": "key", "Dec": "the accessiblerelation key"}{"idx": 46631, "node_name": "key", "Dec": "the locale independent name of the role"}{"idx": 46635, "node_name": "i", "Dec": "the zero-based index of selected children"}{"idx": 46637, "node_name": "i", "Dec": "the zero-based index of the child in this accessible object"}{"idx": 46639, "node_name": "i", "Dec": "the zero-based index of the child"}{"idx": 46641, "node_name": "i", "Dec": "the zero-based index of the child"}{"idx": 46675, "node_name": "key", "Dec": "the locale independent name of the state"}{"idx": 46680, "node_name": "states", "Dec": "an array of accessiblestate describing the state set"}{"idx": 46682, "node_name": "state", "Dec": "the state to add to the state set"}{"idx": 46684, "node_name": "states", "Dec": "accessiblestate array describing the state set"}{"idx": 46686, "node_name": "state", "Dec": "the state to remove from the state set"}{"idx": 46689, "node_name": "state", "Dec": "the state"}{"idx": 46695, "node_name": "flavor", "Dec": "the dataflavor"}{"idx": 46699, "node_name": "a", "Dec": "the caption for the table"}{"idx": 46702, "node_name": "a", "Dec": "the summary description of the table"}{"idx": 46706, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 46707, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 46709, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 46710, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 46712, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 46713, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 46716, "node_name": "table", "Dec": "an accessibletable representing the row headers"}{"idx": 46719, "node_name": "table", "Dec": "an accessibletable representing the column headers"}{"idx": 46721, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 46723, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 46724, "node_name": "a", "Dec": "the description of the row"}{"idx": 46726, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 46728, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 46729, "node_name": "a", "Dec": "the text description of the column"}{"idx": 46731, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 46732, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 46734, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 46736, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 46753, "node_name": "p", "Dec": "the point in local coordinates"}{"idx": 46755, "node_name": "i", "Dec": "the index into the string"}{"idx": 46759, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 46760, "node_name": "index", "Dec": "an index within the text"}{"idx": 46762, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 46763, "node_name": "index", "Dec": "an index within the text"}{"idx": 46765, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 46766, "node_name": "index", "Dec": "an index within the text"}{"idx": 46768, "node_name": "i", "Dec": "the zero-based index into the text"}{"idx": 46777, "node_name": "start", "Dec": "the beginning index of the span of text"}{"idx": 46778, "node_name": "end", "Dec": "the ending index of the span of text"}{"idx": 46779, "node_name": "txt", "Dec": "the string shared by this text span"}{"idx": 46783, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 46793, "node_name": "processingenv", "Dec": "environment to access facilities the tool framework provides to the processor"}{"idx": 46795, "node_name": "element", "Dec": "the element being annotated"}{"idx": 46796, "node_name": "annotation", "Dec": "the ( perhaps partial ) annotation being applied to the element"}{"idx": 46797, "node_name": "member", "Dec": "the annotation member to return possible completions for"}{"idx": 46798, "node_name": "usertext", "Dec": "source code text to be completed"}{"idx": 46805, "node_name": "value", "Dec": "the text of the completion"}{"idx": 46806, "node_name": "message", "Dec": "a message about the completion"}{"idx": 46808, "node_name": "value", "Dec": "the text of the completion"}{"idx": 46811, "node_name": "name", "Dec": "canonical ( fully qualified ) name of the principal type being declared in this file or a package name followed by \" .package -info \" for a package information file"}{"idx": 46812, "node_name": "originatingelements", "Dec": "type or package or module elements causally associated with the creation of this file , may be elided or null"}{"idx": 46814, "node_name": "name", "Dec": "binary name of the type being written or a package name followed by \" .package -info \" for a package information file"}{"idx": 46815, "node_name": "originatingelements", "Dec": "type or package or module elements causally associated with the creation of this file , may be elided or null"}{"idx": 46817, "node_name": "location", "Dec": "location of the new file"}{"idx": 46818, "node_name": "moduleandpkg", "Dec": "module and / or package relative to which the file should be named , or the empty string if none"}{"idx": 46819, "node_name": "relativename", "Dec": "final pathname components of the file"}{"idx": 46820, "node_name": "originatingelements", "Dec": "type or package or module elements causally associated with the creation of this file , may be elided or null"}{"idx": 46822, "node_name": "location", "Dec": "location of the file"}{"idx": 46823, "node_name": "moduleandpkg", "Dec": "module and / or package relative to which the file should be searched for , or the empty string if none"}{"idx": 46824, "node_name": "relativename", "Dec": "final pathname components of the file"}{"idx": 46827, "node_name": "s", "Dec": "the detail message , which should include the name of the file attempting to be opened ; may be null"}{"idx": 46831, "node_name": "kind", "Dec": "the kind of message"}{"idx": 46832, "node_name": "msg", "Dec": "the message , or an empty string if none"}{"idx": 46834, "node_name": "kind", "Dec": "the kind of message"}{"idx": 46835, "node_name": "msg", "Dec": "the message , or an empty string if none"}{"idx": 46836, "node_name": "e", "Dec": "the element to use as a position hint"}{"idx": 46838, "node_name": "kind", "Dec": "the kind of message"}{"idx": 46839, "node_name": "msg", "Dec": "the message , or an empty string if none"}{"idx": 46840, "node_name": "e", "Dec": "the annotated element"}{"idx": 46841, "node_name": "a", "Dec": "the annotation to use as a position hint"}{"idx": 46843, "node_name": "kind", "Dec": "the kind of message"}{"idx": 46844, "node_name": "msg", "Dec": "the message , or an empty string if none"}{"idx": 46845, "node_name": "e", "Dec": "the annotated element"}{"idx": 46846, "node_name": "a", "Dec": "the annotation containing the annotation value"}{"idx": 46847, "node_name": "v", "Dec": "the annotation value to use as a position hint"}{"idx": 46862, "node_name": "processingenv", "Dec": "environment for facilities the tool framework provides to the processor"}{"idx": 46864, "node_name": "annotations", "Dec": "the annotation types requested to be processed"}{"idx": 46865, "node_name": "roundenv", "Dec": "environment for information about the current and prior round"}{"idx": 46867, "node_name": "element", "Dec": "the element being annotated"}{"idx": 46868, "node_name": "annotation", "Dec": "the ( perhaps partial ) annotation being applied to the element"}{"idx": 46869, "node_name": "member", "Dec": "the annotation member to return possible completions for"}{"idx": 46870, "node_name": "usertext", "Dec": "source code text to be completed"}{"idx": 46876, "node_name": "a", "Dec": "annotation type being requested"}{"idx": 46878, "node_name": "annotations", "Dec": "annotation types being requested"}{"idx": 46880, "node_name": "a", "Dec": "annotation type being requested"}{"idx": 46882, "node_name": "annotations", "Dec": "annotation types being requested"}{"idx": 46889, "node_name": "msg", "Dec": "the detail message ."}{"idx": 46893, "node_name": "msg", "Dec": "the detail message ."}{"idx": 46903, "node_name": "cipherspi", "Dec": "the delegate"}{"idx": 46904, "node_name": "provider", "Dec": "the provider"}{"idx": 46905, "node_name": "transformation", "Dec": "the transformation"}{"idx": 46907, "node_name": "transformation", "Dec": "the name of the transformation , e.g. , aes / cbc / pkcs5padding . see the cipher section in the java security standard algorithm names specification for information about standard transformation names ."}{"idx": 46909, "node_name": "transformation", "Dec": "the name of the transformation , e.g. , aes / cbc / pkcs5padding . see the cipher section in the java security standard algorithm names specification for information about standard transformation names ."}{"idx": 46910, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 46912, "node_name": "transformation", "Dec": "the name of the transformation , e.g. , aes / cbc / pkcs5padding . see the cipher section in the java security standard algorithm names specification for information about standard transformation names ."}{"idx": 46913, "node_name": "provider", "Dec": "the provider ."}{"idx": 46918, "node_name": "inputlen", "Dec": "the input length ( in bytes )"}{"idx": 46923, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 46924, "node_name": "key", "Dec": "the key"}{"idx": 46926, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 46927, "node_name": "key", "Dec": "the encryption key"}{"idx": 46928, "node_name": "random", "Dec": "the source of randomness"}{"idx": 46930, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 46931, "node_name": "key", "Dec": "the encryption key"}{"idx": 46932, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 46934, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 46935, "node_name": "key", "Dec": "the encryption key"}{"idx": 46936, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 46937, "node_name": "random", "Dec": "the source of randomness"}{"idx": 46939, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 46940, "node_name": "key", "Dec": "the encryption key"}{"idx": 46941, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 46943, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 46944, "node_name": "key", "Dec": "the encryption key"}{"idx": 46945, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 46946, "node_name": "random", "Dec": "the source of randomness"}{"idx": 46948, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 46949, "node_name": "certificate", "Dec": "the certificate"}{"idx": 46951, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 46952, "node_name": "certificate", "Dec": "the certificate"}{"idx": 46953, "node_name": "random", "Dec": "the source of randomness"}{"idx": 46955, "node_name": "input", "Dec": "the input buffer"}{"idx": 46957, "node_name": "input", "Dec": "the input buffer"}{"idx": 46958, "node_name": "inputoffset", "Dec": "the offset in input where the input starts"}{"idx": 46959, "node_name": "inputlen", "Dec": "the input length"}{"idx": 46961, "node_name": "input", "Dec": "the input buffer"}{"idx": 46962, "node_name": "inputoffset", "Dec": "the offset in input where the input starts"}{"idx": 46963, "node_name": "inputlen", "Dec": "the input length"}{"idx": 46964, "node_name": "output", "Dec": "the buffer for the result"}{"idx": 46966, "node_name": "input", "Dec": "the input buffer"}{"idx": 46967, "node_name": "inputoffset", "Dec": "the offset in input where the input starts"}{"idx": 46968, "node_name": "inputlen", "Dec": "the input length"}{"idx": 46969, "node_name": "output", "Dec": "the buffer for the result"}{"idx": 46970, "node_name": "outputoffset", "Dec": "the offset in output where the result is stored"}{"idx": 46972, "node_name": "input", "Dec": "the input bytebuffer"}{"idx": 46973, "node_name": "output", "Dec": "the output bytebyffer"}{"idx": 46976, "node_name": "output", "Dec": "the buffer for the result"}{"idx": 46977, "node_name": "outputoffset", "Dec": "the offset in output where the result is stored"}{"idx": 46979, "node_name": "input", "Dec": "the input buffer"}{"idx": 46981, "node_name": "input", "Dec": "the input buffer"}{"idx": 46982, "node_name": "inputoffset", "Dec": "the offset in input where the input starts"}{"idx": 46983, "node_name": "inputlen", "Dec": "the input length"}{"idx": 46985, "node_name": "input", "Dec": "the input buffer"}{"idx": 46986, "node_name": "inputoffset", "Dec": "the offset in input where the input starts"}{"idx": 46987, "node_name": "inputlen", "Dec": "the input length"}{"idx": 46988, "node_name": "output", "Dec": "the buffer for the result"}{"idx": 46990, "node_name": "input", "Dec": "the input buffer"}{"idx": 46991, "node_name": "inputoffset", "Dec": "the offset in input where the input starts"}{"idx": 46992, "node_name": "inputlen", "Dec": "the input length"}{"idx": 46993, "node_name": "output", "Dec": "the buffer for the result"}{"idx": 46994, "node_name": "outputoffset", "Dec": "the offset in output where the result is stored"}{"idx": 46996, "node_name": "input", "Dec": "the input bytebuffer"}{"idx": 46997, "node_name": "output", "Dec": "the output bytebuffer"}{"idx": 46999, "node_name": "key", "Dec": "the key to be wrapped ."}{"idx": 47001, "node_name": "wrappedkey", "Dec": "the key to be unwrapped ."}{"idx": 47002, "node_name": "wrappedkeyalgorithm", "Dec": "the algorithm associated with the wrapped key ."}{"idx": 47003, "node_name": "wrappedkeytype", "Dec": "the type of the wrapped key . this must be one of secret_key , private_key , or public_key ."}{"idx": 47005, "node_name": "transformation", "Dec": "the cipher transformation ."}{"idx": 47007, "node_name": "transformation", "Dec": "the cipher transformation ."}{"idx": 47009, "node_name": "src", "Dec": "the buffer containing the additional authentication data"}{"idx": 47011, "node_name": "src", "Dec": "the buffer containing the aad"}{"idx": 47012, "node_name": "offset", "Dec": "the offset in src where the aad input starts"}{"idx": 47013, "node_name": "len", "Dec": "the number of aad bytes"}{"idx": 47015, "node_name": "src", "Dec": "the buffer containing the aad"}{"idx": 47019, "node_name": "is", "Dec": "the to-be-processed input stream"}{"idx": 47020, "node_name": "c", "Dec": "an initialized cipher object"}{"idx": 47022, "node_name": "is", "Dec": "the to-be-processed input stream"}{"idx": 47025, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 47027, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 47028, "node_name": "off", "Dec": "the start offset in the destination array buf"}{"idx": 47029, "node_name": "len", "Dec": "the maximum number of bytes read ."}{"idx": 47031, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 47037, "node_name": "os", "Dec": "the outputstream object"}{"idx": 47038, "node_name": "c", "Dec": "an initialized cipher object"}{"idx": 47040, "node_name": "os", "Dec": "the outputstream object"}{"idx": 47042, "node_name": "b", "Dec": "the byte ."}{"idx": 47044, "node_name": "b", "Dec": "the data ."}{"idx": 47046, "node_name": "b", "Dec": "the data ."}{"idx": 47047, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 47048, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 47054, "node_name": "mode", "Dec": "the cipher mode"}{"idx": 47056, "node_name": "padding", "Dec": "the padding mechanism"}{"idx": 47059, "node_name": "inputlen", "Dec": "the input length ( in bytes )"}{"idx": 47063, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 47064, "node_name": "key", "Dec": "the encryption key"}{"idx": 47065, "node_name": "random", "Dec": "the source of randomness"}{"idx": 47067, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 47068, "node_name": "key", "Dec": "the encryption key"}{"idx": 47069, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 47070, "node_name": "random", "Dec": "the source of randomness"}{"idx": 47072, "node_name": "opmode", "Dec": "the operation mode of this cipher ( this is one of the following : encrypt_mode , decrypt_mode , wrap_mode or unwrap_mode )"}{"idx": 47073, "node_name": "key", "Dec": "the encryption key"}{"idx": 47074, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 47075, "node_name": "random", "Dec": "the source of randomness"}{"idx": 47077, "node_name": "input", "Dec": "the input buffer"}{"idx": 47078, "node_name": "inputoffset", "Dec": "the offset in input where the input starts"}{"idx": 47079, "node_name": "inputlen", "Dec": "the input length"}{"idx": 47081, "node_name": "input", "Dec": "the input buffer"}{"idx": 47082, "node_name": "inputoffset", "Dec": "the offset in input where the input starts"}{"idx": 47083, "node_name": "inputlen", "Dec": "the input length"}{"idx": 47084, "node_name": "output", "Dec": "the buffer for the result"}{"idx": 47085, "node_name": "outputoffset", "Dec": "the offset in output where the result is stored"}{"idx": 47087, "node_name": "input", "Dec": "the input bytebuffer"}{"idx": 47088, "node_name": "output", "Dec": "the output bytebyffer"}{"idx": 47090, "node_name": "input", "Dec": "the input buffer"}{"idx": 47091, "node_name": "inputoffset", "Dec": "the offset in input where the input starts"}{"idx": 47092, "node_name": "inputlen", "Dec": "the input length"}{"idx": 47094, "node_name": "input", "Dec": "the input buffer"}{"idx": 47095, "node_name": "inputoffset", "Dec": "the offset in input where the input starts"}{"idx": 47096, "node_name": "inputlen", "Dec": "the input length"}{"idx": 47097, "node_name": "output", "Dec": "the buffer for the result"}{"idx": 47098, "node_name": "outputoffset", "Dec": "the offset in output where the result is stored"}{"idx": 47100, "node_name": "input", "Dec": "the input bytebuffer"}{"idx": 47101, "node_name": "output", "Dec": "the output bytebyffer"}{"idx": 47103, "node_name": "key", "Dec": "the key to be wrapped ."}{"idx": 47105, "node_name": "wrappedkey", "Dec": "the key to be unwrapped ."}{"idx": 47106, "node_name": "wrappedkeyalgorithm", "Dec": "the algorithm associated with the wrapped key ."}{"idx": 47107, "node_name": "wrappedkeytype", "Dec": "the type of the wrapped key . this is one of secret_key , private_key , or public_key ."}{"idx": 47109, "node_name": "key", "Dec": "the key object ."}{"idx": 47111, "node_name": "src", "Dec": "the buffer containing the aad"}{"idx": 47112, "node_name": "offset", "Dec": "the offset in src where the aad input starts"}{"idx": 47113, "node_name": "len", "Dec": "the number of aad bytes"}{"idx": 47115, "node_name": "src", "Dec": "the buffer containing the aad"}{"idx": 47118, "node_name": "encoded", "Dec": "the asn.1 encoding of this object . the contents of the array are copied to protect against subsequent modification ."}{"idx": 47120, "node_name": "algname", "Dec": "encryption algorithm name . see the java security standard algorithm names document for information about standard cipher algorithm names ."}{"idx": 47121, "node_name": "encrypteddata", "Dec": "encrypted data . the contents of encrypeddata are copied to protect against subsequent modification when constructing this object ."}{"idx": 47123, "node_name": "algparams", "Dec": "the algorithm parameters for the encryption algorithm . algparams.getencoded() should return the asn.1 encoded bytes of the parameters field of the algorithmidentifer component of the encryptedprivatekeyinfo type ."}{"idx": 47124, "node_name": "encrypteddata", "Dec": "encrypted data . the contents of encrypeddata are copied to protect against subsequent modification when constructing this object ."}{"idx": 47129, "node_name": "cipher", "Dec": "the initialized cipher object which will be used for decrypting the encrypted data ."}{"idx": 47131, "node_name": "decryptkey", "Dec": "key used for decrypting the encrypted data ."}{"idx": 47133, "node_name": "decryptkey", "Dec": "key used for decrypting the encrypted data ."}{"idx": 47134, "node_name": "providername", "Dec": "the name of provider whose cipher implementation will be used ."}{"idx": 47136, "node_name": "decryptkey", "Dec": "key used for decrypting the encrypted data ."}{"idx": 47137, "node_name": "provider", "Dec": "the name of provider whose cipher implementation will be used ."}{"idx": 47141, "node_name": "exmechspi", "Dec": "the delegate"}{"idx": 47142, "node_name": "provider", "Dec": "the provider"}{"idx": 47143, "node_name": "mechanism", "Dec": "the exemption mechanism"}{"idx": 47146, "node_name": "algorithm", "Dec": "the standard name of the requested exemption mechanism . see the exemptionmechanism section in the java security standard algorithm names specification for information about standard exemption mechanism names ."}{"idx": 47148, "node_name": "algorithm", "Dec": "the standard name of the requested exemption mechanism . see the exemptionmechanism section in the java security standard algorithm names specification for information about standard exemption mechanism names ."}{"idx": 47149, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 47151, "node_name": "algorithm", "Dec": "the standard name of the requested exemption mechanism . see the exemptionmechanism section in the java security standard algorithm names specification for information about standard exemption mechanism names ."}{"idx": 47152, "node_name": "provider", "Dec": "the provider ."}{"idx": 47155, "node_name": "key", "Dec": "the key the crypto is going to use ."}{"idx": 47157, "node_name": "inputlen", "Dec": "the input length ( in bytes )"}{"idx": 47159, "node_name": "key", "Dec": "the key for this exemption mechanism"}{"idx": 47161, "node_name": "key", "Dec": "the key for this exemption mechanism"}{"idx": 47162, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 47164, "node_name": "key", "Dec": "the key for this exemption mechanism"}{"idx": 47165, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 47168, "node_name": "output", "Dec": "the buffer for the result"}{"idx": 47170, "node_name": "output", "Dec": "the buffer for the result"}{"idx": 47171, "node_name": "outputoffset", "Dec": "the offset in output where the result is stored"}{"idx": 47175, "node_name": "msg", "Dec": "the detailed message ."}{"idx": 47179, "node_name": "inputlen", "Dec": "the input length ( in bytes )"}{"idx": 47181, "node_name": "key", "Dec": "the key for this exemption mechanism"}{"idx": 47183, "node_name": "key", "Dec": "the key for this exemption mechanism"}{"idx": 47184, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 47186, "node_name": "key", "Dec": "the key for this exemption mechanism"}{"idx": 47187, "node_name": "params", "Dec": "the algorithm parameters"}{"idx": 47190, "node_name": "output", "Dec": "the buffer for the result"}{"idx": 47191, "node_name": "outputoffset", "Dec": "the offset in output where the result is stored"}{"idx": 47195, "node_name": "msg", "Dec": "the detail message ."}{"idx": 47208, "node_name": "keyagreespi", "Dec": "the delegate"}{"idx": 47209, "node_name": "provider", "Dec": "the provider"}{"idx": 47210, "node_name": "algorithm", "Dec": "the algorithm"}{"idx": 47213, "node_name": "algorithm", "Dec": "the standard name of the requested key agreement algorithm . see the keyagreement section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47215, "node_name": "algorithm", "Dec": "the standard name of the requested key agreement algorithm . see the keyagreement section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47216, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 47218, "node_name": "algorithm", "Dec": "the standard name of the requested key agreement algorithm . see the keyagreement section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47219, "node_name": "provider", "Dec": "the provider ."}{"idx": 47222, "node_name": "key", "Dec": "the party's private information . for example , in the case of the diffie-hellman key agreement , this would be the party's own diffie-hellman private key ."}{"idx": 47224, "node_name": "key", "Dec": "the party's private information . for example , in the case of the diffie-hellman key agreement , this would be the party's own diffie-hellman private key ."}{"idx": 47225, "node_name": "random", "Dec": "the source of randomness"}{"idx": 47227, "node_name": "key", "Dec": "the party's private information . for example , in the case of the diffie-hellman key agreement , this would be the party's own diffie-hellman private key ."}{"idx": 47228, "node_name": "params", "Dec": "the key agreement parameters"}{"idx": 47230, "node_name": "key", "Dec": "the party's private information . for example , in the case of the diffie-hellman key agreement , this would be the party's own diffie-hellman private key ."}{"idx": 47231, "node_name": "params", "Dec": "the key agreement parameters"}{"idx": 47232, "node_name": "random", "Dec": "the source of randomness"}{"idx": 47234, "node_name": "key", "Dec": "the key for this phase . for example , in the case of diffie-hellman between 2 parties , this would be the other party's diffie-hellman public key ."}{"idx": 47235, "node_name": "lastphase", "Dec": "flag which indicates whether or not this is the last phase of this key agreement ."}{"idx": 47238, "node_name": "sharedsecret", "Dec": "the buffer for the shared secret"}{"idx": 47239, "node_name": "offset", "Dec": "the offset in sharedsecret where the shared secret will be stored"}{"idx": 47241, "node_name": "algorithm", "Dec": "the requested secret-key algorithm"}{"idx": 47245, "node_name": "key", "Dec": "the party's private information . for example , in the case of the diffie-hellman key agreement , this would be the party's own diffie-hellman private key ."}{"idx": 47246, "node_name": "random", "Dec": "the source of randomness"}{"idx": 47248, "node_name": "key", "Dec": "the party's private information . for example , in the case of the diffie-hellman key agreement , this would be the party's own diffie-hellman private key ."}{"idx": 47249, "node_name": "params", "Dec": "the key agreement parameters"}{"idx": 47250, "node_name": "random", "Dec": "the source of randomness"}{"idx": 47252, "node_name": "key", "Dec": "the key for this phase . for example , in the case of diffie-hellman between 2 parties , this would be the other party's diffie-hellman public key ."}{"idx": 47253, "node_name": "lastphase", "Dec": "flag which indicates whether or not this is the last phase of this key agreement ."}{"idx": 47256, "node_name": "sharedsecret", "Dec": "the buffer for the shared secret"}{"idx": 47257, "node_name": "offset", "Dec": "the offset in sharedsecret where the shared secret will be stored"}{"idx": 47259, "node_name": "algorithm", "Dec": "the requested secret key algorithm"}{"idx": 47262, "node_name": "keygenspi", "Dec": "the delegate"}{"idx": 47263, "node_name": "provider", "Dec": "the provider"}{"idx": 47264, "node_name": "algorithm", "Dec": "the algorithm"}{"idx": 47267, "node_name": "algorithm", "Dec": "the standard name of the requested key algorithm . see the keygenerator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47269, "node_name": "algorithm", "Dec": "the standard name of the requested key algorithm . see the keygenerator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47270, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 47272, "node_name": "algorithm", "Dec": "the standard name of the requested key algorithm . see the keygenerator section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47273, "node_name": "provider", "Dec": "the provider ."}{"idx": 47276, "node_name": "random", "Dec": "the source of randomness for this generator"}{"idx": 47278, "node_name": "params", "Dec": "the key generation parameters"}{"idx": 47280, "node_name": "params", "Dec": "the key generation parameters"}{"idx": 47281, "node_name": "random", "Dec": "the source of randomness for this key generator"}{"idx": 47283, "node_name": "keysize", "Dec": "the keysize . this is an algorithm-specific metric , specified in number of bits ."}{"idx": 47285, "node_name": "keysize", "Dec": "the keysize . this is an algorithm-specific metric , specified in number of bits ."}{"idx": 47286, "node_name": "random", "Dec": "the source of randomness for this key generator"}{"idx": 47291, "node_name": "random", "Dec": "the source of randomness for this generator"}{"idx": 47293, "node_name": "params", "Dec": "the key generation parameters"}{"idx": 47294, "node_name": "random", "Dec": "the source of randomness for this key generator"}{"idx": 47296, "node_name": "keysize", "Dec": "the keysize . this is an algorithm-specific metric , specified in number of bits ."}{"idx": 47297, "node_name": "random", "Dec": "the source of randomness for this key generator"}{"idx": 47301, "node_name": "macspi", "Dec": "the delegate"}{"idx": 47302, "node_name": "provider", "Dec": "the provider"}{"idx": 47303, "node_name": "algorithm", "Dec": "the algorithm"}{"idx": 47306, "node_name": "algorithm", "Dec": "the standard name of the requested mac algorithm . see the mac section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47308, "node_name": "algorithm", "Dec": "the standard name of the requested mac algorithm . see the mac section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47309, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 47311, "node_name": "algorithm", "Dec": "the standard name of the requested mac algorithm . see the mac section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47312, "node_name": "provider", "Dec": "the provider ."}{"idx": 47316, "node_name": "key", "Dec": "the key ."}{"idx": 47318, "node_name": "key", "Dec": "the key ."}{"idx": 47319, "node_name": "params", "Dec": "the algorithm parameters ."}{"idx": 47321, "node_name": "input", "Dec": "the input byte to be processed ."}{"idx": 47323, "node_name": "input", "Dec": "the array of bytes to be processed ."}{"idx": 47325, "node_name": "input", "Dec": "the input buffer ."}{"idx": 47326, "node_name": "offset", "Dec": "the offset in input where the input starts ."}{"idx": 47327, "node_name": "len", "Dec": "the number of bytes to process ."}{"idx": 47329, "node_name": "input", "Dec": "the bytebuffer"}{"idx": 47332, "node_name": "output", "Dec": "the buffer where the mac result is stored"}{"idx": 47333, "node_name": "outoffset", "Dec": "the offset in output where the mac is stored"}{"idx": 47335, "node_name": "input", "Dec": "data in bytes"}{"idx": 47342, "node_name": "key", "Dec": "the ( secret ) key ."}{"idx": 47343, "node_name": "params", "Dec": "the algorithm parameters ."}{"idx": 47345, "node_name": "input", "Dec": "the input byte to be processed ."}{"idx": 47347, "node_name": "input", "Dec": "the input buffer ."}{"idx": 47348, "node_name": "offset", "Dec": "the offset in input where the input starts ."}{"idx": 47349, "node_name": "len", "Dec": "the number of bytes to process ."}{"idx": 47351, "node_name": "input", "Dec": "the bytebuffer"}{"idx": 47358, "node_name": "msg", "Dec": "the detail message ."}{"idx": 47364, "node_name": "object", "Dec": "the object to be sealed ; can be null ."}{"idx": 47365, "node_name": "c", "Dec": "the cipher used to seal the object ."}{"idx": 47367, "node_name": "so", "Dec": "a sealedobject object"}{"idx": 47370, "node_name": "key", "Dec": "the key used to unseal the object ."}{"idx": 47372, "node_name": "c", "Dec": "the cipher used to unseal the object"}{"idx": 47374, "node_name": "key", "Dec": "the key used to unseal the object ."}{"idx": 47375, "node_name": "provider", "Dec": "the name of the provider of the algorithm to unseal the object ."}{"idx": 47379, "node_name": "keyfacspi", "Dec": "the delegate"}{"idx": 47380, "node_name": "provider", "Dec": "the provider"}{"idx": 47381, "node_name": "algorithm", "Dec": "the secret-key algorithm"}{"idx": 47383, "node_name": "algorithm", "Dec": "the standard name of the requested secret-key algorithm . see the secretkeyfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47385, "node_name": "algorithm", "Dec": "the standard name of the requested secret-key algorithm . see the secretkeyfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47386, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 47388, "node_name": "algorithm", "Dec": "the standard name of the requested secret-key algorithm . see the secretkeyfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 47389, "node_name": "provider", "Dec": "the provider ."}{"idx": 47393, "node_name": "keyspec", "Dec": "the specification ( key material ) of the secret key"}{"idx": 47395, "node_name": "key", "Dec": "the key"}{"idx": 47396, "node_name": "keyspec", "Dec": "the requested format in which the key material shall be returned"}{"idx": 47398, "node_name": "key", "Dec": "the key whose provider is unknown or untrusted"}{"idx": 47402, "node_name": "keyspec", "Dec": "the specification ( key material ) of the secret key"}{"idx": 47404, "node_name": "key", "Dec": "the key"}{"idx": 47405, "node_name": "keyspec", "Dec": "the requested format in which the key material shall be returned"}{"idx": 47407, "node_name": "key", "Dec": "the key whose provider is unknown or untrusted"}{"idx": 47411, "node_name": "msg", "Dec": "the detail message ."}{"idx": 47414, "node_name": "nonce", "Dec": "a 12-byte nonce value"}{"idx": 47415, "node_name": "counter", "Dec": "the initial counter value"}{"idx": 47421, "node_name": "key", "Dec": "the buffer with the des-ede key material . the first 24 bytes of the buffer are copied to protect against subsequent modification ."}{"idx": 47423, "node_name": "key", "Dec": "the buffer with the des-ede key material . the first 24 bytes of the buffer beginning at offset inclusive are copied to protect against subsequent modification ."}{"idx": 47424, "node_name": "offset", "Dec": "the offset in key , where the des-ede key material starts ."}{"idx": 47427, "node_name": "key", "Dec": "a byte array which holds the key value"}{"idx": 47428, "node_name": "offset", "Dec": "the offset into the byte array"}{"idx": 47432, "node_name": "key", "Dec": "the buffer with the des key material . the first 8 bytes of the buffer are copied to protect against subsequent modification ."}{"idx": 47434, "node_name": "key", "Dec": "the buffer with the des key material . the first 8 bytes of the buffer beginning at offset inclusive are copied to protect against subsequent modification ."}{"idx": 47435, "node_name": "offset", "Dec": "the offset in key , where the des key material starts ."}{"idx": 47438, "node_name": "key", "Dec": "the buffer with the des key material ."}{"idx": 47439, "node_name": "offset", "Dec": "the offset in key , where the des key material starts ."}{"idx": 47441, "node_name": "key", "Dec": "the buffer with the des key material ."}{"idx": 47442, "node_name": "offset", "Dec": "the offset in key , where the des key material starts ."}{"idx": 47445, "node_name": "primesize", "Dec": "the size ( in bits ) of the prime modulus ."}{"idx": 47446, "node_name": "exponentsize", "Dec": "the size ( in bits ) of the random exponent ."}{"idx": 47451, "node_name": "p", "Dec": "the prime modulus"}{"idx": 47452, "node_name": "g", "Dec": "the base generator"}{"idx": 47454, "node_name": "p", "Dec": "the prime modulus"}{"idx": 47455, "node_name": "g", "Dec": "the base generator"}{"idx": 47456, "node_name": "l", "Dec": "the size in bits of the random exponent ( private value )"}{"idx": 47462, "node_name": "x", "Dec": "private value x"}{"idx": 47463, "node_name": "p", "Dec": "prime modulus p"}{"idx": 47464, "node_name": "g", "Dec": "base generator g"}{"idx": 47470, "node_name": "y", "Dec": "public value y"}{"idx": 47471, "node_name": "p", "Dec": "prime modulus p"}{"idx": 47472, "node_name": "g", "Dec": "base generator g"}{"idx": 47478, "node_name": "tlen", "Dec": "the authentication tag length ( in bits )"}{"idx": 47479, "node_name": "src", "Dec": "the iv source buffer . the contents of the buffer are copied to protect against subsequent modification ."}{"idx": 47481, "node_name": "tlen", "Dec": "the authentication tag length ( in bits )"}{"idx": 47482, "node_name": "src", "Dec": "the iv source buffer . the contents of the buffer are copied to protect against subsequent modification ."}{"idx": 47483, "node_name": "offset", "Dec": "the offset in src where the iv starts"}{"idx": 47484, "node_name": "len", "Dec": "the number of iv bytes"}{"idx": 47489, "node_name": "iv", "Dec": "the buffer with the iv . the contents of the buffer are copied to protect against subsequent modification ."}{"idx": 47491, "node_name": "iv", "Dec": "the buffer with the iv . the first len bytes of the buffer beginning at offset inclusive are copied to protect against subsequent modification ."}{"idx": 47492, "node_name": "offset", "Dec": "the offset in iv where the iv starts ."}{"idx": 47493, "node_name": "len", "Dec": "the number of iv bytes ."}{"idx": 47498, "node_name": "mdname", "Dec": "the algorithm name for the message digest ."}{"idx": 47499, "node_name": "mgfname", "Dec": "the algorithm name for the mask generation function ."}{"idx": 47500, "node_name": "mgfspec", "Dec": "the parameters for the mask generation function . if null is specified , null will be returned by getmgfparameters() ."}{"idx": 47501, "node_name": "psrc", "Dec": "the source of the encoding input p ."}{"idx": 47508, "node_name": "password", "Dec": "the password ."}{"idx": 47510, "node_name": "password", "Dec": "the password ."}{"idx": 47511, "node_name": "salt", "Dec": "the salt ."}{"idx": 47512, "node_name": "iterationcount", "Dec": "the iteration count ."}{"idx": 47513, "node_name": "keylength", "Dec": "the to-be-derived key length ."}{"idx": 47515, "node_name": "password", "Dec": "the password ."}{"idx": 47516, "node_name": "salt", "Dec": "the salt ."}{"idx": 47517, "node_name": "iterationcount", "Dec": "the iteration count ."}{"idx": 47525, "node_name": "salt", "Dec": "the salt . the contents of salt are copied to protect against subsequent modification ."}{"idx": 47526, "node_name": "iterationcount", "Dec": "the iteration count ."}{"idx": 47528, "node_name": "salt", "Dec": "the salt . the contents of salt are copied to protect against subsequent modification ."}{"idx": 47529, "node_name": "iterationcount", "Dec": "the iteration count ."}{"idx": 47530, "node_name": "paramspec", "Dec": "the cipher algorithm parameter specification , which may be null ."}{"idx": 47536, "node_name": "psrcname", "Dec": "the algorithm for the source of the encoding input p ."}{"idx": 47541, "node_name": "p", "Dec": "the value of the encoding input . the contents of the array are copied to protect against subsequent modification ."}{"idx": 47545, "node_name": "effectivekeybits", "Dec": "the effective key size in bits ."}{"idx": 47547, "node_name": "effectivekeybits", "Dec": "the effective key size in bits ."}{"idx": 47548, "node_name": "iv", "Dec": "the buffer with the 8-b yte iv . the first 8 bytes of the buffer are copied to protect against subsequent modification ."}{"idx": 47550, "node_name": "effectivekeybits", "Dec": "the effective key size in bits ."}{"idx": 47551, "node_name": "iv", "Dec": "the buffer with the iv . the first 8 bytes of the buffer beginning at offset inclusive are copied to protect against subsequent modification ."}{"idx": 47552, "node_name": "offset", "Dec": "the offset in iv where the 8-b yte iv starts ."}{"idx": 47556, "node_name": "obj", "Dec": "the object to test for equality with this object ."}{"idx": 47560, "node_name": "version", "Dec": "the version ."}{"idx": 47561, "node_name": "rounds", "Dec": "the number of rounds ."}{"idx": 47562, "node_name": "wordsize", "Dec": "the word size in bits ."}{"idx": 47564, "node_name": "version", "Dec": "the version ."}{"idx": 47565, "node_name": "rounds", "Dec": "the number of rounds ."}{"idx": 47566, "node_name": "wordsize", "Dec": "the word size in bits ."}{"idx": 47567, "node_name": "iv", "Dec": "the buffer with the iv . the first 2* ( wordsize / 8 ) bytes of the buffer are copied to protect against subsequent modification ."}{"idx": 47569, "node_name": "version", "Dec": "the version ."}{"idx": 47570, "node_name": "rounds", "Dec": "the number of rounds ."}{"idx": 47571, "node_name": "wordsize", "Dec": "the word size in bits ."}{"idx": 47572, "node_name": "iv", "Dec": "the buffer with the iv . the first 2* ( wordsize / 8 ) bytes of the buffer beginning at offset inclusive are copied to protect against subsequent modification ."}{"idx": 47573, "node_name": "offset", "Dec": "the offset in iv where the iv starts ."}{"idx": 47579, "node_name": "obj", "Dec": "the object to test for equality with this object ."}{"idx": 47583, "node_name": "key", "Dec": "the key material of the secret key . the contents of the array are copied to protect against subsequent modification ."}{"idx": 47584, "node_name": "algorithm", "Dec": "the name of the secret-key algorithm to be associated with the given key material . see the java security standard algorithm names document for information about standard algorithm names ."}{"idx": 47586, "node_name": "key", "Dec": "the key material of the secret key . the first len bytes of the array beginning at offset inclusive are copied to protect against subsequent modification ."}{"idx": 47587, "node_name": "offset", "Dec": "the offset in key where the key material starts ."}{"idx": 47588, "node_name": "len", "Dec": "the length of the key material ."}{"idx": 47589, "node_name": "algorithm", "Dec": "the name of the secret-key algorithm to be associated with the given key material . see the java security standard algorithm names document for information about standard algorithm names ."}{"idx": 47595, "node_name": "obj", "Dec": "the object to test for equality with this object ."}{"idx": 47598, "node_name": "source", "Dec": "the imagereader object calling sequenceStarted(javax.imageio.ImageReader,int) ."}{"idx": 47599, "node_name": "minindex", "Dec": "the index of the first image to be read ."}{"idx": 47601, "node_name": "source", "Dec": "the imagereader object calling sequenceComplete(javax.imageio.ImageReader) ."}{"idx": 47603, "node_name": "source", "Dec": "the imagereader object calling imageStarted(javax.imageio.ImageReader,int) ."}{"idx": 47604, "node_name": "imageindex", "Dec": "the index of the image being read within its containing input file or stream ."}{"idx": 47606, "node_name": "source", "Dec": "the imagereader object calling imageProgress(javax.imageio.ImageReader,float) ."}{"idx": 47607, "node_name": "percentagedone", "Dec": "the approximate percentage of decoding that has been completed ."}{"idx": 47609, "node_name": "source", "Dec": "the imagereader object calling imageComplete(javax.imageio.ImageReader) ."}{"idx": 47611, "node_name": "source", "Dec": "the imagereader object calling thumbnailStarted(javax.imageio.ImageReader,int,int) ."}{"idx": 47612, "node_name": "imageindex", "Dec": "the index of the image being read within its containing input file or stream ."}{"idx": 47613, "node_name": "thumbnailindex", "Dec": "the index of the thumbnail being read ."}{"idx": 47615, "node_name": "source", "Dec": "the imagereader object calling thumbnailProgress(javax.imageio.ImageReader,float) ."}{"idx": 47616, "node_name": "percentagedone", "Dec": "the approximate percentage of decoding that has been completed ."}{"idx": 47618, "node_name": "source", "Dec": "the imagereader object calling thumbnailComplete(javax.imageio.ImageReader) ."}{"idx": 47620, "node_name": "source", "Dec": "the imagereader object calling readAborted(javax.imageio.ImageReader) ."}{"idx": 47623, "node_name": "source", "Dec": "the imagereader object calling passStarted(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int,int[]) ."}{"idx": 47624, "node_name": "theimage", "Dec": "the bufferedimage being updated ."}{"idx": 47625, "node_name": "pass", "Dec": "the number of the pass that is about to begin , starting with 0 ."}{"idx": 47626, "node_name": "minpass", "Dec": "the index of the first pass that will be decoded ."}{"idx": 47627, "node_name": "maxpass", "Dec": "the index of the last pass that will be decoded ."}{"idx": 47628, "node_name": "minx", "Dec": "the x coordinate of the leftmost updated column of pixels ."}{"idx": 47629, "node_name": "miny", "Dec": "the y coordinate of the uppermost updated row of pixels ."}{"idx": 47630, "node_name": "periodx", "Dec": "the horizontal spacing between updated pixels ; a value of 1 means no gaps ."}{"idx": 47631, "node_name": "periody", "Dec": "the vertical spacing between updated pixels ; a value of 1 means no gaps ."}{"idx": 47632, "node_name": "bands", "Dec": "an array of ints indicating the set bands that may be updated ."}{"idx": 47634, "node_name": "source", "Dec": "the imagereader object calling imageUpdate(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int[]) ."}{"idx": 47635, "node_name": "theimage", "Dec": "the bufferedimage being updated ."}{"idx": 47636, "node_name": "minx", "Dec": "the x coordinate of the leftmost updated column of pixels ."}{"idx": 47637, "node_name": "miny", "Dec": "the y coordinate of the uppermost updated row of pixels ."}{"idx": 47638, "node_name": "width", "Dec": "the number of updated pixels horizontally ."}{"idx": 47639, "node_name": "height", "Dec": "the number of updated pixels vertically ."}{"idx": 47640, "node_name": "periodx", "Dec": "the horizontal spacing between updated pixels ; a value of 1 means no gaps ."}{"idx": 47641, "node_name": "periody", "Dec": "the vertical spacing between updated pixels ; a value of 1 means no gaps ."}{"idx": 47642, "node_name": "bands", "Dec": "an array of ints indicating which bands are being updated ."}{"idx": 47644, "node_name": "source", "Dec": "the imagereader object calling passComplete(javax.imageio.ImageReader,java.awt.image.BufferedImage) ."}{"idx": 47645, "node_name": "theimage", "Dec": "the bufferedimage being updated ."}{"idx": 47647, "node_name": "source", "Dec": "the imagereader object calling thumbnailPassStarted(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int,int[]) ."}{"idx": 47648, "node_name": "thethumbnail", "Dec": "the bufferedimage thumbnail being updated ."}{"idx": 47649, "node_name": "pass", "Dec": "the number of the pass that is about to begin , starting with 0 ."}{"idx": 47650, "node_name": "minpass", "Dec": "the index of the first pass that will be decoded ."}{"idx": 47651, "node_name": "maxpass", "Dec": "the index of the last pass that will be decoded ."}{"idx": 47652, "node_name": "minx", "Dec": "the x coordinate of the leftmost updated column of pixels ."}{"idx": 47653, "node_name": "miny", "Dec": "the y coordinate of the uppermost updated row of pixels ."}{"idx": 47654, "node_name": "periodx", "Dec": "the horizontal spacing between updated pixels ; a value of 1 means no gaps ."}{"idx": 47655, "node_name": "periody", "Dec": "the vertical spacing between updated pixels ; a value of 1 means no gaps ."}{"idx": 47656, "node_name": "bands", "Dec": "an array of ints indicating the set bands that may be updated ."}{"idx": 47658, "node_name": "source", "Dec": "the imagereader object calling thumbnailUpdate(javax.imageio.ImageReader,java.awt.image.BufferedImage,int,int,int,int,int,int,int[]) ."}{"idx": 47659, "node_name": "thethumbnail", "Dec": "the bufferedimage thumbnail being updated ."}{"idx": 47660, "node_name": "minx", "Dec": "the x coordinate of the leftmost updated column of pixels ."}{"idx": 47661, "node_name": "miny", "Dec": "the y coordinate of the uppermost updated row of pixels ."}{"idx": 47662, "node_name": "width", "Dec": "the number of updated pixels horizontally ."}{"idx": 47663, "node_name": "height", "Dec": "the number of updated pixels vertically ."}{"idx": 47664, "node_name": "periodx", "Dec": "the horizontal spacing between updated pixels ; a value of 1 means no gaps ."}{"idx": 47665, "node_name": "periody", "Dec": "the vertical spacing between updated pixels ; a value of 1 means no gaps ."}{"idx": 47666, "node_name": "bands", "Dec": "an array of ints indicating which bands are being updated ."}{"idx": 47668, "node_name": "source", "Dec": "the imagereader object calling thumbnailPassComplete(javax.imageio.ImageReader,java.awt.image.BufferedImage) ."}{"idx": 47669, "node_name": "thethumbnail", "Dec": "the bufferedimage thumbnail being updated ."}{"idx": 47672, "node_name": "source", "Dec": "the imagereader object calling warningOccurred(javax.imageio.ImageReader,java.lang.String) ."}{"idx": 47673, "node_name": "warning", "Dec": "a string containing the warning ."}{"idx": 47676, "node_name": "source", "Dec": "the imagewriter object calling imageStarted(javax.imageio.ImageWriter,int) ."}{"idx": 47677, "node_name": "imageindex", "Dec": "the index of the image being written within its containing input file or stream ."}{"idx": 47679, "node_name": "source", "Dec": "the imagewriter object calling imageProgress(javax.imageio.ImageWriter,float) ."}{"idx": 47680, "node_name": "percentagedone", "Dec": "the approximate percentage of decoding that has been completed ."}{"idx": 47682, "node_name": "source", "Dec": "the imagewriter object calling imageComplete(javax.imageio.ImageWriter) ."}{"idx": 47684, "node_name": "source", "Dec": "the imagewrite object calling thumbnailStarted(javax.imageio.ImageWriter,int,int) ."}{"idx": 47685, "node_name": "imageindex", "Dec": "the index of the image being written within its containing input file or stream ."}{"idx": 47686, "node_name": "thumbnailindex", "Dec": "the index of the thumbnail being written ."}{"idx": 47688, "node_name": "source", "Dec": "the imagewriter object calling thumbnailProgress(javax.imageio.ImageWriter,float) ."}{"idx": 47689, "node_name": "percentagedone", "Dec": "the approximate percentage of decoding that has been completed ."}{"idx": 47691, "node_name": "source", "Dec": "the imagewriter object calling thumbnailComplete(javax.imageio.ImageWriter) ."}{"idx": 47693, "node_name": "source", "Dec": "the imagewriter object calling writeAborted(javax.imageio.ImageWriter) ."}{"idx": 47696, "node_name": "source", "Dec": "the imagewriter object calling warningOccurred(javax.imageio.ImageWriter,int,java.lang.String) ."}{"idx": 47697, "node_name": "imageindex", "Dec": "the index , starting with 0 , of the image generating the warning ."}{"idx": 47698, "node_name": "warning", "Dec": "a string containing the warning ."}{"idx": 47701, "node_name": "message", "Dec": "the error message ."}{"idx": 47703, "node_name": "message", "Dec": "the error message ."}{"idx": 47704, "node_name": "cause", "Dec": "the throwable ( error or exception ) that caused this exception to occur ."}{"idx": 47711, "node_name": "image", "Dec": "a renderedimage ."}{"idx": 47712, "node_name": "thumbnails", "Dec": "a list of bufferedimages , or null ."}{"idx": 47713, "node_name": "metadata", "Dec": "an iiometadata object , or null ."}{"idx": 47715, "node_name": "raster", "Dec": "a raster ."}{"idx": 47716, "node_name": "thumbnails", "Dec": "a list of bufferedimages , or null ."}{"idx": 47717, "node_name": "metadata", "Dec": "an iiometadata object , or null ."}{"idx": 47720, "node_name": "image", "Dec": "a renderedimage ."}{"idx": 47724, "node_name": "raster", "Dec": "a raster ."}{"idx": 47727, "node_name": "index", "Dec": "the index of the desired thumbnail image ."}{"idx": 47730, "node_name": "thumbnails", "Dec": "a list of bufferedimage thumbnails , or null ."}{"idx": 47733, "node_name": "metadata", "Dec": "an iiometadata object , or null ."}{"idx": 47747, "node_name": "sourceregion", "Dec": "a rectangle specifying the source region of interest , or null ."}{"idx": 47750, "node_name": "sourcexsubsampling", "Dec": "the number of columns to advance between pixels ."}{"idx": 47751, "node_name": "sourceysubsampling", "Dec": "the number of rows to advance between pixels ."}{"idx": 47752, "node_name": "subsamplingxoffset", "Dec": "the horizontal offset of the first subsample within the region , or within the image if no region is set ."}{"idx": 47753, "node_name": "subsamplingyoffset", "Dec": "the horizontal offset of the first subsample within the region , or within the image if no region is set ."}{"idx": 47759, "node_name": "sourcebands", "Dec": "an array of integer band indices to be used ."}{"idx": 47762, "node_name": "destinationtype", "Dec": "the imagetypespecifier to be used to determine the destination layout and color type ."}{"idx": 47765, "node_name": "destinationoffset", "Dec": "the offset in the destination , as a point ."}{"idx": 47768, "node_name": "controller", "Dec": "an appropriate iioparamcontroller , or null ."}{"idx": 47775, "node_name": "param", "Dec": "the iioparam object to be modified ."}{"idx": 47779, "node_name": "usecache", "Dec": "a boolean indicating whether a cache file should be used , in cases where it is optional ."}{"idx": 47782, "node_name": "cachedirectory", "Dec": "a file specifying a directory ."}{"idx": 47785, "node_name": "input", "Dec": "an object to be used as an input source , such as a file , readable randomaccessfile , or inputstream ."}{"idx": 47787, "node_name": "output", "Dec": "an object to be used as an output destination , such as a file , writable randomaccessfile , or outputstream ."}{"idx": 47792, "node_name": "input", "Dec": "an imageinputstream or other object containing encoded image data ."}{"idx": 47794, "node_name": "formatname", "Dec": "a string containing the informal name of a format ( e.g. , \" jpeg \" or \" tiff \" ."}{"idx": 47796, "node_name": "filesuffix", "Dec": "a string containing a file suffix ( e.g. , \" jpg \" or \" tiff \") ."}{"idx": 47798, "node_name": "mimetype", "Dec": "a string containing a file suffix ( e.g. , \" image / jpeg \" or \" image / x-bmp \") ."}{"idx": 47803, "node_name": "formatname", "Dec": "a string containing the informal name of a format ( e.g. , \" jpeg \" or \" tiff \" ."}{"idx": 47805, "node_name": "filesuffix", "Dec": "a string containing a file suffix ( e.g. , \" jpg \" or \" tiff \") ."}{"idx": 47807, "node_name": "mimetype", "Dec": "a string containing a file suffix ( e.g. , \" image / jpeg \" or \" image / x-bmp \") ."}{"idx": 47809, "node_name": "reader", "Dec": "an instance of a registered imagereader ."}{"idx": 47811, "node_name": "writer", "Dec": "an instance of a registered imagewriter ."}{"idx": 47813, "node_name": "type", "Dec": "an imagetypespecifier indicating the layout of the image to be written ."}{"idx": 47814, "node_name": "formatname", "Dec": "the informal name of the format ."}{"idx": 47816, "node_name": "reader", "Dec": "an imagereader ."}{"idx": 47817, "node_name": "writer", "Dec": "an imagewriter ."}{"idx": 47819, "node_name": "input", "Dec": "a file to read from ."}{"idx": 47821, "node_name": "input", "Dec": "an inputstream to read from ."}{"idx": 47823, "node_name": "input", "Dec": "a url to read from ."}{"idx": 47825, "node_name": "stream", "Dec": "an imageinputstream to read from ."}{"idx": 47827, "node_name": "im", "Dec": "a renderedimage to be written ."}{"idx": 47828, "node_name": "formatname", "Dec": "a string containing the informal name of the format ."}{"idx": 47829, "node_name": "output", "Dec": "an imageoutputstream to be written to ."}{"idx": 47831, "node_name": "im", "Dec": "a renderedimage to be written ."}{"idx": 47832, "node_name": "formatname", "Dec": "a string containing the informal name of the format ."}{"idx": 47833, "node_name": "output", "Dec": "a file to be written to ."}{"idx": 47835, "node_name": "im", "Dec": "a renderedimage to be written ."}{"idx": 47836, "node_name": "formatname", "Dec": "a string containing the informal name of the format ."}{"idx": 47837, "node_name": "output", "Dec": "an outputstream to be written to ."}{"idx": 47851, "node_name": "originatingprovider", "Dec": "the imagereaderspi that is invoking <init>(javax.imageio.spi.ImageReaderSpi) , or null ."}{"idx": 47855, "node_name": "input", "Dec": "the imageinputstream or other object to use for future decoding ."}{"idx": 47856, "node_name": "seekforwardonly", "Dec": "if true , images and metadata may only be read in ascending order from this input source ."}{"idx": 47857, "node_name": "ignoremetadata", "Dec": "if true , metadata may be ignored during reads ."}{"idx": 47859, "node_name": "input", "Dec": "the imageinputstream or other object to use for future decoding ."}{"idx": 47860, "node_name": "seekforwardonly", "Dec": "if true , images and metadata may only be read in ascending order from this input source ."}{"idx": 47862, "node_name": "input", "Dec": "the imageinputstream or other object to use for future decoding ."}{"idx": 47869, "node_name": "locale", "Dec": "the desired locale , or null ."}{"idx": 47872, "node_name": "allowsearch", "Dec": "if true , the true number of images will be returned even if a search is required . if false , the reader may return -1 without performing the search ."}{"idx": 47874, "node_name": "imageindex", "Dec": "the index of the image to be queried ."}{"idx": 47876, "node_name": "imageindex", "Dec": "the index of the image to be queried ."}{"idx": 47878, "node_name": "imageindex", "Dec": "the index of the image to be queried ."}{"idx": 47880, "node_name": "imageindex", "Dec": "the index of the image to be queried ."}{"idx": 47882, "node_name": "imageindex", "Dec": "the index of the image to be queried ."}{"idx": 47884, "node_name": "imageindex", "Dec": "the index of the image to be retrieved ."}{"idx": 47888, "node_name": "formatname", "Dec": "a metadata format name that may be used to retrieve a document from the returned iiometadata object ."}{"idx": 47889, "node_name": "nodenames", "Dec": "a set containing the names of nodes that may be contained in a retrieved document ."}{"idx": 47891, "node_name": "imageindex", "Dec": "the index of the image whose metadata is to be retrieved ."}{"idx": 47893, "node_name": "imageindex", "Dec": "the index of the image whose metadata is to be retrieved ."}{"idx": 47894, "node_name": "formatname", "Dec": "a metadata format name that may be used to retrieve a document from the returned iiometadata object ."}{"idx": 47895, "node_name": "nodenames", "Dec": "a set containing the names of nodes that may be contained in a retrieved document ."}{"idx": 47897, "node_name": "imageindex", "Dec": "the index of the image to be retrieved ."}{"idx": 47899, "node_name": "imageindex", "Dec": "the index of the image to be retrieved ."}{"idx": 47900, "node_name": "param", "Dec": "an imagereadparam used to control the reading process , or null ."}{"idx": 47902, "node_name": "imageindex", "Dec": "the index of the image to be retrieved ."}{"idx": 47903, "node_name": "param", "Dec": "an imagereadparam used to control the reading process , or null ."}{"idx": 47905, "node_name": "params", "Dec": "an iterator containing imagereadparam objects ."}{"idx": 47908, "node_name": "imageindex", "Dec": "the index of the image to be read ."}{"idx": 47909, "node_name": "param", "Dec": "an imagereadparam used to control the reading process , or null ."}{"idx": 47911, "node_name": "imageindex", "Dec": "the index of the image to be queried ."}{"idx": 47913, "node_name": "imageindex", "Dec": "the index of the image to be queried ."}{"idx": 47915, "node_name": "imageindex", "Dec": "the index of the image to be queried ."}{"idx": 47917, "node_name": "imageindex", "Dec": "the index of the image to be queried ."}{"idx": 47919, "node_name": "imageindex", "Dec": "the index of the image to be queried ."}{"idx": 47921, "node_name": "imageindex", "Dec": "the index of the image to be retrieved ."}{"idx": 47922, "node_name": "tilex", "Dec": "the column index ( starting with 0 ) of the tile to be retrieved ."}{"idx": 47923, "node_name": "tiley", "Dec": "the row index ( starting with 0 ) of the tile to be retrieved ."}{"idx": 47925, "node_name": "imageindex", "Dec": "the index of the image to be retrieved ."}{"idx": 47926, "node_name": "tilex", "Dec": "the column index ( starting with 0 ) of the tile to be retrieved ."}{"idx": 47927, "node_name": "tiley", "Dec": "the row index ( starting with 0 ) of the tile to be retrieved ."}{"idx": 47929, "node_name": "imageindex", "Dec": "the index of the image to be retrieved ."}{"idx": 47930, "node_name": "param", "Dec": "an imagereadparam used to control the reading process , or null ."}{"idx": 47933, "node_name": "imageindex", "Dec": "the index of the image being queried ."}{"idx": 47935, "node_name": "imageindex", "Dec": "the index of the image being queried ."}{"idx": 47937, "node_name": "imageindex", "Dec": "the index of the image to be retrieved ."}{"idx": 47938, "node_name": "thumbnailindex", "Dec": "the index of the thumbnail to be retrieved ."}{"idx": 47940, "node_name": "imageindex", "Dec": "the index of the image to be retrieved ."}{"idx": 47941, "node_name": "thumbnailindex", "Dec": "the index of the thumbnail to be retrieved ."}{"idx": 47943, "node_name": "imageindex", "Dec": "the index of the image to be retrieved ."}{"idx": 47944, "node_name": "thumbnailindex", "Dec": "the index of the thumbnail to be retrieved ."}{"idx": 47949, "node_name": "listener", "Dec": "an iioreadwarninglistener to be registered ."}{"idx": 47951, "node_name": "listener", "Dec": "an iioreadwarninglistener to be unregistered ."}{"idx": 47954, "node_name": "listener", "Dec": "an iioreadprogresslistener to be registered ."}{"idx": 47956, "node_name": "listener", "Dec": "an iioreadprogresslistener to be unregistered ."}{"idx": 47959, "node_name": "listener", "Dec": "an iioreadupdatelistener to be registered ."}{"idx": 47961, "node_name": "listener", "Dec": "an iioreadupdatelistener to be unregistered ."}{"idx": 47964, "node_name": "minindex", "Dec": "the lowest index being read ."}{"idx": 47967, "node_name": "imageindex", "Dec": "the index of the image about to be read ."}{"idx": 47969, "node_name": "percentagedone", "Dec": "the current percentage of completion , as a float ."}{"idx": 47972, "node_name": "imageindex", "Dec": "the index of the image associated with the thumbnail ."}{"idx": 47973, "node_name": "thumbnailindex", "Dec": "the index of the thumbnail ."}{"idx": 47975, "node_name": "percentagedone", "Dec": "the current percentage of completion , as a float ."}{"idx": 47979, "node_name": "theimage", "Dec": "the bufferedimage being updated ."}{"idx": 47980, "node_name": "pass", "Dec": "the index of the current pass , starting with 0 ."}{"idx": 47981, "node_name": "minpass", "Dec": "the index of the first pass that will be decoded ."}{"idx": 47982, "node_name": "maxpass", "Dec": "the index of the last pass that will be decoded ."}{"idx": 47983, "node_name": "minx", "Dec": "the x coordinate of the upper-left pixel included in the pass ."}{"idx": 47984, "node_name": "miny", "Dec": "the x coordinate of the upper-left pixel included in the pass ."}{"idx": 47985, "node_name": "periodx", "Dec": "the horizontal separation between pixels ."}{"idx": 47986, "node_name": "periody", "Dec": "the vertical separation between pixels ."}{"idx": 47987, "node_name": "bands", "Dec": "an array of ints indicating the set of affected bands of the destination ."}{"idx": 47989, "node_name": "theimage", "Dec": "the bufferedimage being updated ."}{"idx": 47990, "node_name": "minx", "Dec": "the x coordinate of the upper-left pixel included in the pass ."}{"idx": 47991, "node_name": "miny", "Dec": "the x coordinate of the upper-left pixel included in the pass ."}{"idx": 47992, "node_name": "width", "Dec": "the total width of the area being updated , including pixels being skipped if periodx > 1 ."}{"idx": 47993, "node_name": "height", "Dec": "the total height of the area being updated , including pixels being skipped if periody > 1 ."}{"idx": 47994, "node_name": "periodx", "Dec": "the horizontal separation between pixels ."}{"idx": 47995, "node_name": "periody", "Dec": "the vertical separation between pixels ."}{"idx": 47996, "node_name": "bands", "Dec": "an array of ints indicating the set of affected bands of the destination ."}{"idx": 47998, "node_name": "theimage", "Dec": "the bufferedimage being updated ."}{"idx": 48000, "node_name": "thethumbnail", "Dec": "the bufferedimage thumbnail being updated ."}{"idx": 48001, "node_name": "pass", "Dec": "the index of the current pass , starting with 0 ."}{"idx": 48002, "node_name": "minpass", "Dec": "the index of the first pass that will be decoded ."}{"idx": 48003, "node_name": "maxpass", "Dec": "the index of the last pass that will be decoded ."}{"idx": 48004, "node_name": "minx", "Dec": "the x coordinate of the upper-left pixel included in the pass ."}{"idx": 48005, "node_name": "miny", "Dec": "the x coordinate of the upper-left pixel included in the pass ."}{"idx": 48006, "node_name": "periodx", "Dec": "the horizontal separation between pixels ."}{"idx": 48007, "node_name": "periody", "Dec": "the vertical separation between pixels ."}{"idx": 48008, "node_name": "bands", "Dec": "an array of ints indicating the set of affected bands of the destination ."}{"idx": 48010, "node_name": "thethumbnail", "Dec": "the bufferedimage thumbnail being updated ."}{"idx": 48011, "node_name": "minx", "Dec": "the x coordinate of the upper-left pixel included in the pass ."}{"idx": 48012, "node_name": "miny", "Dec": "the x coordinate of the upper-left pixel included in the pass ."}{"idx": 48013, "node_name": "width", "Dec": "the total width of the area being updated , including pixels being skipped if periodx > 1 ."}{"idx": 48014, "node_name": "height", "Dec": "the total height of the area being updated , including pixels being skipped if periody > 1 ."}{"idx": 48015, "node_name": "periodx", "Dec": "the horizontal separation between pixels ."}{"idx": 48016, "node_name": "periody", "Dec": "the vertical separation between pixels ."}{"idx": 48017, "node_name": "bands", "Dec": "an array of ints indicating the set of affected bands of the destination ."}{"idx": 48019, "node_name": "thethumbnail", "Dec": "the bufferedimage thumbnail being updated ."}{"idx": 48021, "node_name": "warning", "Dec": "the warning message to send ."}{"idx": 48023, "node_name": "basename", "Dec": "the base name of a set of resourcebundles containing localized warning messages ."}{"idx": 48024, "node_name": "keyword", "Dec": "the keyword used to index the warning message within the set of resourcebundles ."}{"idx": 48028, "node_name": "param", "Dec": "the imagereadparam being used , or null ."}{"idx": 48029, "node_name": "srcwidth", "Dec": "the width of the source image ."}{"idx": 48030, "node_name": "srcheight", "Dec": "the height of the source image ."}{"idx": 48032, "node_name": "param", "Dec": "an imagereadparam , or null ."}{"idx": 48033, "node_name": "srcwidth", "Dec": "the width of the source image ."}{"idx": 48034, "node_name": "srcheight", "Dec": "the height of the source image ."}{"idx": 48035, "node_name": "image", "Dec": "a bufferedimage that will be the destination image , or null ."}{"idx": 48036, "node_name": "srcregion", "Dec": "a rectangle that will be filled with the source region of interest ."}{"idx": 48037, "node_name": "destregion", "Dec": "a rectangle that will be filled with the destination region of interest ."}{"idx": 48039, "node_name": "param", "Dec": "the imagereadparam being used to read the image ."}{"idx": 48040, "node_name": "numsrcbands", "Dec": "the number of bands of the image as it exists int the input source ."}{"idx": 48041, "node_name": "numdstbands", "Dec": "the number of bands in the destination image being written ."}{"idx": 48043, "node_name": "param", "Dec": "an imagereadparam to be used to get the destination image or image type , or null ."}{"idx": 48044, "node_name": "imagetypes", "Dec": "an iterator of imagetypespecifiers indicating the legal image types , with the default first ."}{"idx": 48045, "node_name": "width", "Dec": "the true width of the image or tile being decoded ."}{"idx": 48046, "node_name": "height", "Dec": "the true width of the image or tile being decoded ."}{"idx": 48056, "node_name": "destination", "Dec": "the bufferedimage to be written to , or null ."}{"idx": 48059, "node_name": "destinationbands", "Dec": "an array of integer band indices to be used ."}{"idx": 48063, "node_name": "size", "Dec": "a dimension indicating the desired width and height ."}{"idx": 48066, "node_name": "minpass", "Dec": "the index of the first pass to be decoded ."}{"idx": 48067, "node_name": "numpasses", "Dec": "the maximum number of passes to be decoded ."}{"idx": 48073, "node_name": "indata", "Dec": "an iiometadata object representing stream metadata , used to initialize the state of the returned object ."}{"idx": 48074, "node_name": "param", "Dec": "an imagewriteparam that will be used to encode the image , or null ."}{"idx": 48076, "node_name": "indata", "Dec": "an iiometadata object representing image metadata , used to initialize the state of the returned object ."}{"idx": 48077, "node_name": "imagetype", "Dec": "an imagetypespecifier indicating the layout and color information of the image with which the metadata will be associated ."}{"idx": 48078, "node_name": "param", "Dec": "an imagewriteparam that will be used to encode the image , or null ."}{"idx": 48083, "node_name": "colormodel", "Dec": "a colormodel ."}{"idx": 48084, "node_name": "samplemodel", "Dec": "a samplemodel ."}{"idx": 48086, "node_name": "image", "Dec": "a renderedimage ."}{"idx": 48088, "node_name": "colorspace", "Dec": "the desired colorspace ."}{"idx": 48089, "node_name": "redmask", "Dec": "a contiguous mask indicated the position of the red channel ."}{"idx": 48090, "node_name": "greenmask", "Dec": "a contiguous mask indicated the position of the green channel ."}{"idx": 48091, "node_name": "bluemask", "Dec": "a contiguous mask indicated the position of the blue channel ."}{"idx": 48092, "node_name": "alphamask", "Dec": "a contiguous mask indicated the position of the alpha channel ."}{"idx": 48093, "node_name": "transfertype", "Dec": "the desired samplemodel transfer type ."}{"idx": 48094, "node_name": "isalphapremultiplied", "Dec": "true if the color channels will be premultipled by the alpha channel ."}{"idx": 48096, "node_name": "colorspace", "Dec": "the desired colorspace ."}{"idx": 48097, "node_name": "bandoffsets", "Dec": "an array of ints indicating the offsets for each band ."}{"idx": 48098, "node_name": "datatype", "Dec": "the desired data type , as one of the enumerations from the databuffer class ."}{"idx": 48099, "node_name": "hasalpha", "Dec": "true if an alpha channel is desired ."}{"idx": 48100, "node_name": "isalphapremultiplied", "Dec": "true if the color channels will be premultipled by the alpha channel ."}{"idx": 48102, "node_name": "colorspace", "Dec": "the desired colorspace ."}{"idx": 48103, "node_name": "bankindices", "Dec": "an array of ints indicating the bank in which each band will be stored ."}{"idx": 48104, "node_name": "bandoffsets", "Dec": "an array of ints indicating the starting offset of each band within its bank ."}{"idx": 48105, "node_name": "datatype", "Dec": "the desired data type , as one of the enumerations from the databuffer class ."}{"idx": 48106, "node_name": "hasalpha", "Dec": "true if an alpha channel is desired ."}{"idx": 48107, "node_name": "isalphapremultiplied", "Dec": "true if the color channels will be premultipled by the alpha channel ."}{"idx": 48109, "node_name": "bits", "Dec": "the number of bits per gray value ( 1 , 2 , 4 , 8 , or 16 ) ."}{"idx": 48110, "node_name": "datatype", "Dec": "the desired data type , as one of the enumerations from the databuffer class ."}{"idx": 48111, "node_name": "issigned", "Dec": "true if negative values are to be represented ."}{"idx": 48113, "node_name": "bits", "Dec": "the number of bits per gray value ( 1 , 2 , 4 , 8 , or 16 ) ."}{"idx": 48114, "node_name": "datatype", "Dec": "the desired data type , as one of the enumerations from the databuffer class ."}{"idx": 48115, "node_name": "issigned", "Dec": "true if negative values are to be represented ."}{"idx": 48116, "node_name": "isalphapremultiplied", "Dec": "true if the luminance channel will be premultipled by the alpha channel ."}{"idx": 48118, "node_name": "redlut", "Dec": "an array of bytes containing the red values for each index ."}{"idx": 48119, "node_name": "greenlut", "Dec": "an array of bytes containing * the green values for each index ."}{"idx": 48120, "node_name": "bluelut", "Dec": "an array of bytes containing the blue values for each index ."}{"idx": 48121, "node_name": "alphalut", "Dec": "an array of bytes containing the alpha values for each index , or null to create a fully opaque lut ."}{"idx": 48122, "node_name": "bits", "Dec": "the number of bits in each index ."}{"idx": 48123, "node_name": "datatype", "Dec": "the desired output type , as one of the enumerations from the databuffer class ."}{"idx": 48125, "node_name": "bufferedimagetype", "Dec": "an int representing one of the standard bufferedimage types ."}{"idx": 48127, "node_name": "image", "Dec": "a renderedimage ."}{"idx": 48132, "node_name": "band", "Dec": "the index of the band to be queried , as an int ."}{"idx": 48135, "node_name": "width", "Dec": "the desired width of the returned samplemodel ."}{"idx": 48136, "node_name": "height", "Dec": "the desired height of the returned samplemodel ."}{"idx": 48139, "node_name": "width", "Dec": "the desired width of the returned bufferedimage ."}{"idx": 48140, "node_name": "height", "Dec": "the desired height of the returned bufferedimage ."}{"idx": 48142, "node_name": "o", "Dec": "the object to be compared for equality ."}{"idx": 48168, "node_name": "locale", "Dec": "a locale to be used to localize compression type names and quality descriptions , or null ."}{"idx": 48173, "node_name": "mode", "Dec": "the mode to use for tiling ."}{"idx": 48177, "node_name": "tilewidth", "Dec": "the width of each tile ."}{"idx": 48178, "node_name": "tileheight", "Dec": "the height of each tile ."}{"idx": 48179, "node_name": "tilegridxoffset", "Dec": "the horizontal offset of the tile grid ."}{"idx": 48180, "node_name": "tilegridyoffset", "Dec": "the vertical offset of the tile grid ."}{"idx": 48188, "node_name": "mode", "Dec": "the mode for setting progression in the output stream ."}{"idx": 48192, "node_name": "mode", "Dec": "the mode for setting compression in the output stream ."}{"idx": 48196, "node_name": "compressiontype", "Dec": "one of the strings returned by getcompressiontypes , or null to remove any previous setting ."}{"idx": 48202, "node_name": "quality", "Dec": "a float between 0 and 1 indicating the desired quality level ."}{"idx": 48205, "node_name": "quality", "Dec": "the quality setting whose bit rate is to be queried ."}{"idx": 48217, "node_name": "originatingprovider", "Dec": "the imagewriterspi that is constructing this object , or null ."}{"idx": 48220, "node_name": "output", "Dec": "the imageoutputstream or other object to use for future writing ."}{"idx": 48224, "node_name": "locale", "Dec": "the desired locale , or null ."}{"idx": 48228, "node_name": "param", "Dec": "an imagewriteparam that will be used to encode the image , or null ."}{"idx": 48230, "node_name": "imagetype", "Dec": "an imagetypespecifier indicating the format of the image to be written later ."}{"idx": 48231, "node_name": "param", "Dec": "an imagewriteparam that will be used to encode the image , or null ."}{"idx": 48233, "node_name": "imagetype", "Dec": "an imagetypespecifier indicating the type of image to be written , or null ."}{"idx": 48234, "node_name": "param", "Dec": "the imagewriteparam that will be used for writing , or null ."}{"idx": 48235, "node_name": "streammetadata", "Dec": "an iiometadata object that will be used for writing , or null ."}{"idx": 48236, "node_name": "imagemetadata", "Dec": "an iiometadata object that will be used for writing , or null ."}{"idx": 48238, "node_name": "imagetype", "Dec": "an imagetypespecifier indicating the type of image to be written , or null ."}{"idx": 48239, "node_name": "param", "Dec": "the imagewriteparam that will be used for writing , or null ."}{"idx": 48240, "node_name": "streammetadata", "Dec": "an iiometadata object that will be used for writing , or null ."}{"idx": 48241, "node_name": "imagemetadata", "Dec": "an iiometadata object that will be used for writing , or null ."}{"idx": 48244, "node_name": "streammetadata", "Dec": "an iiometadata object representing stream metadata , or null to use default values ."}{"idx": 48245, "node_name": "image", "Dec": "an iioimage object containing an image , thumbnails , and metadata to be written ."}{"idx": 48246, "node_name": "param", "Dec": "an imagewriteparam , or null to use a default imagewriteparam ."}{"idx": 48248, "node_name": "image", "Dec": "an iioimage object containing an image , thumbnails , and metadata to be written ."}{"idx": 48250, "node_name": "image", "Dec": "a renderedimage to be written ."}{"idx": 48253, "node_name": "streammetadata", "Dec": "a stream metadata object , or null ."}{"idx": 48255, "node_name": "image", "Dec": "an iioimage object containing an image , thumbnails , and metadata to be written ."}{"idx": 48256, "node_name": "param", "Dec": "an imagewriteparam , or null to use a default imagewriteparam ."}{"idx": 48260, "node_name": "streammetadata", "Dec": "an iiometadata object representing stream metadata , or null to use default values ."}{"idx": 48262, "node_name": "imageindex", "Dec": "the index of the image whose metadata is to be replaced ."}{"idx": 48264, "node_name": "imageindex", "Dec": "the index of the image whose metadata is to be replaced ."}{"idx": 48265, "node_name": "imagemetadata", "Dec": "an iiometadata object representing image metadata , or null ."}{"idx": 48267, "node_name": "imageindex", "Dec": "the index at which the image is to be inserted ."}{"idx": 48269, "node_name": "imageindex", "Dec": "the index at which to write the image ."}{"idx": 48270, "node_name": "image", "Dec": "an iioimage object containing an image , thumbnails , and metadata to be written ."}{"idx": 48271, "node_name": "param", "Dec": "an imagewriteparam , or null to use a default imagewriteparam ."}{"idx": 48273, "node_name": "imageindex", "Dec": "the index of the image to be removed ."}{"idx": 48275, "node_name": "imageindex", "Dec": "the index of the image to be removed ."}{"idx": 48278, "node_name": "streammetadata", "Dec": "an iiometadata object representing stream metadata , or null to use default values ."}{"idx": 48279, "node_name": "imagetype", "Dec": "an imagetypespecifier describing the layout of the image ."}{"idx": 48280, "node_name": "width", "Dec": "the width of the image ."}{"idx": 48281, "node_name": "height", "Dec": "the height of the image ."}{"idx": 48282, "node_name": "imagemetadata", "Dec": "an iiometadata object representing image metadata , or null ."}{"idx": 48283, "node_name": "thumbnails", "Dec": "a list of bufferedimage thumbnails for this image , or null ."}{"idx": 48284, "node_name": "param", "Dec": "an imagewriteparam , or null to use a default imagewriteparam ."}{"idx": 48287, "node_name": "imageindex", "Dec": "the index at which the image is to be inserted ."}{"idx": 48289, "node_name": "imageindex", "Dec": "the index at which to write the image ."}{"idx": 48290, "node_name": "imagetype", "Dec": "an imagetypespecifier describing the layout of the image ."}{"idx": 48291, "node_name": "width", "Dec": "the width of the image ."}{"idx": 48292, "node_name": "height", "Dec": "the height of the image ."}{"idx": 48293, "node_name": "imagemetadata", "Dec": "an iiometadata object representing image metadata , or null ."}{"idx": 48294, "node_name": "thumbnails", "Dec": "a list of bufferedimage thumbnails for this image , or null ."}{"idx": 48295, "node_name": "param", "Dec": "an imagewriteparam , or null to use a default imagewriteparam ."}{"idx": 48298, "node_name": "imageindex", "Dec": "the index of the image whose pixels are to be replaced ."}{"idx": 48300, "node_name": "imageindex", "Dec": "the index of the image whose pixels are to be replaced ."}{"idx": 48301, "node_name": "region", "Dec": "a rectangle that will be used to clip future pixel regions ."}{"idx": 48303, "node_name": "image", "Dec": "a renderedimage containing source pixels ."}{"idx": 48304, "node_name": "param", "Dec": "an imagewriteparam , or null to use a default imagewriteparam ."}{"idx": 48306, "node_name": "raster", "Dec": "a raster containing source pixels ."}{"idx": 48307, "node_name": "param", "Dec": "an imagewriteparam , or null to use a default imagewriteparam ."}{"idx": 48313, "node_name": "listener", "Dec": "an iiowritewarninglistener to be registered ."}{"idx": 48315, "node_name": "listener", "Dec": "an iiowritewarninglistener to be deregistered ."}{"idx": 48318, "node_name": "listener", "Dec": "an iiowriteprogresslistener to be registered ."}{"idx": 48320, "node_name": "listener", "Dec": "an iiowriteprogresslistener to be deregistered ."}{"idx": 48323, "node_name": "imageindex", "Dec": "the index of the image about to be written ."}{"idx": 48325, "node_name": "percentagedone", "Dec": "the current percentage of completion , as a float ."}{"idx": 48328, "node_name": "imageindex", "Dec": "the index of the image associated with the thumbnail ."}{"idx": 48329, "node_name": "thumbnailindex", "Dec": "the index of the thumbnail ."}{"idx": 48331, "node_name": "percentagedone", "Dec": "the current percentage of completion , as a float ."}{"idx": 48335, "node_name": "imageindex", "Dec": "the index of the image on which the warning occurred ."}{"idx": 48336, "node_name": "warning", "Dec": "the warning message ."}{"idx": 48338, "node_name": "imageindex", "Dec": "the index of the image on which the warning occurred ."}{"idx": 48339, "node_name": "basename", "Dec": "the base name of a set of resourcebundles containing localized warning messages ."}{"idx": 48340, "node_name": "keyword", "Dec": "the keyword used to index the warning message within the set of resourcebundles ."}{"idx": 48346, "node_name": "message", "Dec": "a string containing the reason for the parsing failure ."}{"idx": 48347, "node_name": "offendingnode", "Dec": "the dom node that caused the exception , or null ."}{"idx": 48349, "node_name": "message", "Dec": "a string containing the reason for the parsing failure ."}{"idx": 48350, "node_name": "cause", "Dec": "the throwable ( error or exception ) that caused this exception to occur , or null ."}{"idx": 48351, "node_name": "offendingnode", "Dec": "the dom node that caused the exception , or null ."}{"idx": 48363, "node_name": "standardmetadataformatsupported", "Dec": "true if this object can return or accept a dom tree using the standard metadata format ."}{"idx": 48364, "node_name": "nativemetadataformatname", "Dec": "the name of the native metadata format , as a string , or null if there is no native format ."}{"idx": 48365, "node_name": "nativemetadataformatclassname", "Dec": "the name of the class of the native metadata format , or null if there is no native format ."}{"idx": 48366, "node_name": "extrametadataformatnames", "Dec": "an array of strings indicating additional formats supported by this object , or null if there are none ."}{"idx": 48367, "node_name": "extrametadataformatclassnames", "Dec": "an array of strings indicating the class names of any additional formats supported by this object , or null if there are none ."}{"idx": 48374, "node_name": "formatname", "Dec": "the desired metadata format ."}{"idx": 48376, "node_name": "formatname", "Dec": "the desired metadata format ."}{"idx": 48378, "node_name": "formatname", "Dec": "the desired metadata format ."}{"idx": 48379, "node_name": "root", "Dec": "an xml dom node object forming the root of a tree ."}{"idx": 48390, "node_name": "formatname", "Dec": "the desired metadata format ."}{"idx": 48391, "node_name": "root", "Dec": "an xml dom node object forming the root of a tree ."}{"idx": 48394, "node_name": "controller", "Dec": "an appropriate iiometadatacontroller , or null ."}{"idx": 48401, "node_name": "metadata", "Dec": "the iiometadata object to be modified ."}{"idx": 48427, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48428, "node_name": "imagetype", "Dec": "an imagetypespecifier indicating the type of the image that will be associated with the metadata ."}{"idx": 48430, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48432, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48434, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48435, "node_name": "locale", "Dec": "the locale for which localization will be attempted ."}{"idx": 48437, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48439, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48441, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48443, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48444, "node_name": "attrname", "Dec": "the name of the attribute being queried ."}{"idx": 48446, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48447, "node_name": "attrname", "Dec": "the name of the attribute being queried ."}{"idx": 48449, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48450, "node_name": "attrname", "Dec": "the name of the attribute being queried ."}{"idx": 48452, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48453, "node_name": "attrname", "Dec": "the name of the attribute being queried ."}{"idx": 48455, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48456, "node_name": "attrname", "Dec": "the name of the attribute being queried ."}{"idx": 48458, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48459, "node_name": "attrname", "Dec": "the name of the attribute being queried ."}{"idx": 48461, "node_name": "elementname", "Dec": "the name of the element being queried , as a string ."}{"idx": 48462, "node_name": "attrname", "Dec": "the name of the attribute being queried ."}{"idx": 48464, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48465, "node_name": "attrname", "Dec": "the name of the attribute being queried ."}{"idx": 48467, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48468, "node_name": "attrname", "Dec": "the name of the attribute being queried ."}{"idx": 48470, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48471, "node_name": "attrname", "Dec": "the name of the attribute ."}{"idx": 48472, "node_name": "locale", "Dec": "the locale for which localization will be attempted ."}{"idx": 48474, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48476, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48478, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48480, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48482, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48484, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48486, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48488, "node_name": "elementname", "Dec": "the name of the element being queried ."}{"idx": 48492, "node_name": "rootname", "Dec": "the name of the root element ."}{"idx": 48493, "node_name": "childpolicy", "Dec": "one of the child_policy_* constants , other than child_policy_repeat ."}{"idx": 48495, "node_name": "rootname", "Dec": "the name of the root element ."}{"idx": 48496, "node_name": "minchildren", "Dec": "the minimum number of children of the node ."}{"idx": 48497, "node_name": "maxchildren", "Dec": "the maximum number of children of the node ."}{"idx": 48499, "node_name": "resourcebasename", "Dec": "a string containing the new base name ."}{"idx": 48502, "node_name": "elementname", "Dec": "the name of the new element ."}{"idx": 48503, "node_name": "parentname", "Dec": "the name of the element that will be the parent of the new element ."}{"idx": 48504, "node_name": "childpolicy", "Dec": "one of the child_policy_* constants , other than child_policy_repeat , indicating the child policy of the new element ."}{"idx": 48506, "node_name": "elementname", "Dec": "the name of the new element ."}{"idx": 48507, "node_name": "parentname", "Dec": "the name of the element that will be the parent of the new element ."}{"idx": 48508, "node_name": "minchildren", "Dec": "the minimum number of children of the node ."}{"idx": 48509, "node_name": "maxchildren", "Dec": "the maximum number of children of the node ."}{"idx": 48511, "node_name": "parentname", "Dec": "the name of the element that will be the new parent of the element ."}{"idx": 48512, "node_name": "elementname", "Dec": "the name of the element to be added as a child ."}{"idx": 48514, "node_name": "elementname", "Dec": "the name of the element to be removed ."}{"idx": 48516, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48517, "node_name": "attrname", "Dec": "the name of the attribute being added ."}{"idx": 48518, "node_name": "datatype", "Dec": "the data type ( string format ) of the attribute , one of the datatype_* constants ."}{"idx": 48519, "node_name": "required", "Dec": "true if the attribute must be present ."}{"idx": 48520, "node_name": "defaultvalue", "Dec": "the default value for the attribute , or null ."}{"idx": 48522, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48523, "node_name": "attrname", "Dec": "the name of the attribute being added ."}{"idx": 48524, "node_name": "datatype", "Dec": "the data type ( string format ) of the attribute , one of the datatype_* constants ."}{"idx": 48525, "node_name": "required", "Dec": "true if the attribute must be present ."}{"idx": 48526, "node_name": "defaultvalue", "Dec": "the default value for the attribute , or null ."}{"idx": 48527, "node_name": "enumeratedvalues", "Dec": "a list of strings containing the legal values for the attribute ."}{"idx": 48529, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48530, "node_name": "attrname", "Dec": "the name of the attribute being added ."}{"idx": 48531, "node_name": "datatype", "Dec": "the data type ( string format ) of the attribute , one of the datatype_* constants ."}{"idx": 48532, "node_name": "required", "Dec": "true if the attribute must be present ."}{"idx": 48533, "node_name": "defaultvalue", "Dec": "the default value for the attribute , or null ."}{"idx": 48534, "node_name": "minvalue", "Dec": "the smallest ( inclusive or exclusive depending on the value of mininclusive ) legal value for the attribute , as a string ."}{"idx": 48535, "node_name": "maxvalue", "Dec": "the largest ( inclusive or exclusive depending on the value of mininclusive ) legal value for the attribute , as a string ."}{"idx": 48536, "node_name": "mininclusive", "Dec": "true if minvalue is inclusive ."}{"idx": 48537, "node_name": "maxinclusive", "Dec": "true if maxvalue is inclusive ."}{"idx": 48539, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48540, "node_name": "attrname", "Dec": "the name of the attribute being added ."}{"idx": 48541, "node_name": "datatype", "Dec": "the data type ( string format ) of the attribute , one of the datatype_* constants ."}{"idx": 48542, "node_name": "required", "Dec": "true if the attribute must be present ."}{"idx": 48543, "node_name": "listminlength", "Dec": "the smallest legal number of list items ."}{"idx": 48544, "node_name": "listmaxlength", "Dec": "the largest legal number of list items ."}{"idx": 48546, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48547, "node_name": "attrname", "Dec": "the name of the attribute being added ."}{"idx": 48548, "node_name": "hasdefaultvalue", "Dec": "true if a default value should be present ."}{"idx": 48549, "node_name": "defaultvalue", "Dec": "the default value for the attribute as a boolean , ignored if hasdefaultvalue is false ."}{"idx": 48551, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48552, "node_name": "attrname", "Dec": "the name of the attribute being removed ."}{"idx": 48554, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48555, "node_name": "classtype", "Dec": "a class variable indicating the legal class type for the object value ."}{"idx": 48556, "node_name": "required", "Dec": "true if an object value must be present ."}{"idx": 48557, "node_name": "defaultvalue", "Dec": "the default value for the object reference , or null ."}{"idx": 48559, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48560, "node_name": "classtype", "Dec": "a class variable indicating the legal class type for the object value ."}{"idx": 48561, "node_name": "required", "Dec": "true if an object value must be present ."}{"idx": 48562, "node_name": "defaultvalue", "Dec": "the default value for the object reference , or null ."}{"idx": 48563, "node_name": "enumeratedvalues", "Dec": "a list of objects containing the legal values for the object reference ."}{"idx": 48565, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48566, "node_name": "classtype", "Dec": "a class variable indicating the legal class type for the object value ."}{"idx": 48567, "node_name": "defaultvalue", "Dec": "the default value for the"}{"idx": 48568, "node_name": "minvalue", "Dec": "the smallest ( inclusive or exclusive depending on the value of mininclusive ) legal value for the object value , as a string ."}{"idx": 48569, "node_name": "maxvalue", "Dec": "the largest ( inclusive or exclusive depending on the value of mininclusive ) legal value for the object value , as a string ."}{"idx": 48570, "node_name": "mininclusive", "Dec": "true if minvalue is inclusive ."}{"idx": 48571, "node_name": "maxinclusive", "Dec": "true if maxvalue is inclusive ."}{"idx": 48573, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48574, "node_name": "classtype", "Dec": "a class variable indicating the legal class type for the object value ."}{"idx": 48575, "node_name": "arrayminlength", "Dec": "the smallest legal length for the array ."}{"idx": 48576, "node_name": "arraymaxlength", "Dec": "the largest legal length for the array ."}{"idx": 48578, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48580, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48581, "node_name": "locale", "Dec": "the locale for which localization will be attempted ."}{"idx": 48583, "node_name": "elementname", "Dec": "the name of the element ."}{"idx": 48584, "node_name": "attrname", "Dec": "the name of the attribute ."}{"idx": 48585, "node_name": "locale", "Dec": "the locale for which localization will be attempted , or null ."}{"idx": 48590, "node_name": "nodename", "Dec": "the name of the node , as a string ."}{"idx": 48604, "node_name": "newchild", "Dec": "the node to insert ."}{"idx": 48605, "node_name": "refchild", "Dec": "the reference node ."}{"idx": 48607, "node_name": "newchild", "Dec": "the node to insert ."}{"idx": 48608, "node_name": "oldchild", "Dec": "the node to be replaced ."}{"idx": 48610, "node_name": "oldchild", "Dec": "the node to be removed ."}{"idx": 48612, "node_name": "newchild", "Dec": "the node to insert ."}{"idx": 48615, "node_name": "deep", "Dec": "if true , recursively clone the subtree under the specified node ; if false , clone only the node itself ."}{"idx": 48618, "node_name": "feature", "Dec": "a string , which is ignored ."}{"idx": 48619, "node_name": "version", "Dec": "a string , which is ignored ."}{"idx": 48623, "node_name": "prefix", "Dec": "a string , which is ignored ."}{"idx": 48627, "node_name": "name", "Dec": "the name of the attribute to retrieve ."}{"idx": 48629, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to retrieve ."}{"idx": 48630, "node_name": "localname", "Dec": "the local name of the attribute to retrieve ."}{"idx": 48632, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to create or alter ."}{"idx": 48633, "node_name": "qualifiedname", "Dec": "the qualified name of the attribute to create or alter ."}{"idx": 48634, "node_name": "value", "Dec": "the value to set in string form ."}{"idx": 48636, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to remove ."}{"idx": 48637, "node_name": "localname", "Dec": "the local name of the attribute to remove ."}{"idx": 48639, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to retrieve ."}{"idx": 48640, "node_name": "localname", "Dec": "the local name of the attribute to retrieve ."}{"idx": 48642, "node_name": "newattr", "Dec": "the attr node to add to the attribute list ."}{"idx": 48644, "node_name": "namespaceuri", "Dec": "the namespace uri of the elements to match on . the special value \" * \" matches all namespaces ."}{"idx": 48645, "node_name": "localname", "Dec": "the local name of the elements to match on . the special value \" * \" matches all local names ."}{"idx": 48647, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to look for ."}{"idx": 48648, "node_name": "localname", "Dec": "the local name of the attribute to look for ."}{"idx": 48651, "node_name": "userobject", "Dec": "the user object ."}{"idx": 48653, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 48654, "node_name": "isid", "Dec": "whether the attribute is a of type id ."}{"idx": 48656, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute ."}{"idx": 48657, "node_name": "localname", "Dec": "the local name of the attribute ."}{"idx": 48658, "node_name": "isid", "Dec": "whether the attribute is a of type id ."}{"idx": 48660, "node_name": "idattr", "Dec": "the attribute node ."}{"idx": 48661, "node_name": "isid", "Dec": "whether the attribute is a of type id ."}{"idx": 48664, "node_name": "key", "Dec": "the key to associate the object to ."}{"idx": 48665, "node_name": "data", "Dec": "the object to associate to the given key , or null to remove any existing association to that key ."}{"idx": 48666, "node_name": "handler", "Dec": "the handler to associate to that key , or null ."}{"idx": 48668, "node_name": "key", "Dec": "the key the object is associated to ."}{"idx": 48670, "node_name": "feature", "Dec": "the name of the feature requested . note that any plus sign \" + \" prepended to the name of the feature will be ignored since it is not significant in the context of getFeature(java.lang.String,java.lang.String) ."}{"idx": 48671, "node_name": "version", "Dec": "this is the version number of the feature to test ."}{"idx": 48673, "node_name": "node", "Dec": "the node to test against ."}{"idx": 48675, "node_name": "node", "Dec": "the node to compare equality with ."}{"idx": 48677, "node_name": "prefix", "Dec": "the prefix to look for . if this parameter is null , lookupNamespaceURI(java.lang.String) will return the default namespace uri if any ."}{"idx": 48679, "node_name": "namespaceuri", "Dec": "the namespace uri to look for ."}{"idx": 48681, "node_name": "namespaceuri", "Dec": "the namespace uri to look for ."}{"idx": 48685, "node_name": "other", "Dec": "the node to compare against the reference node ."}{"idx": 48689, "node_name": "locale", "Dec": "a locale to be used to localize compression type names and quality descriptions , or null ."}{"idx": 48692, "node_name": "topdown", "Dec": "whether the data are written in top-down order ."}{"idx": 48700, "node_name": "lengths", "Dec": "an array of shorts where lengths [ k ] is equal to the number of values with corresponding codes of length k + 1 bits ."}{"idx": 48701, "node_name": "values", "Dec": "an array of shorts containing the values in order of increasing code length ."}{"idx": 48709, "node_name": "qtables", "Dec": "an array of quantization table objects ."}{"idx": 48710, "node_name": "dchuffmantables", "Dec": "an array of huffman table objects ."}{"idx": 48711, "node_name": "achuffmantables", "Dec": "an array of huffman table objects ."}{"idx": 48718, "node_name": "locale", "Dec": "a locale to be used by the superclass to localize compression type names and quality descriptions , or null ."}{"idx": 48723, "node_name": "qtables", "Dec": "an array of quantization table objects ."}{"idx": 48724, "node_name": "dchuffmantables", "Dec": "an array of huffman table objects ."}{"idx": 48725, "node_name": "achuffmantables", "Dec": "an array of huffman table objects ."}{"idx": 48731, "node_name": "optimize", "Dec": "a boolean indicating whether to generate optimized huffman tables when writing ."}{"idx": 48739, "node_name": "table", "Dec": "the quantization table , as an int array ."}{"idx": 48742, "node_name": "scalefactor", "Dec": "multiplication factor for the table ."}{"idx": 48743, "node_name": "forcebaseline", "Dec": "if true , the values will be clamped to the range 1 .. 255"}{"idx": 49137, "node_name": "tagsets", "Dec": "the tifftagsets associated with this directory ."}{"idx": 49138, "node_name": "parenttag", "Dec": "the parent tifftag of this directory ; may be null ."}{"idx": 49140, "node_name": "tiffimagemetadata", "Dec": "a metadata object which supports a compatible image metadata format ."}{"idx": 49143, "node_name": "tagset", "Dec": "the tifftagset to add ."}{"idx": 49145, "node_name": "tagset", "Dec": "the tifftagset to remove ."}{"idx": 49148, "node_name": "tagnumber", "Dec": "the tag number of interest ."}{"idx": 49151, "node_name": "tagnumber", "Dec": "the tag number ."}{"idx": 49153, "node_name": "f", "Dec": "the field to add ."}{"idx": 49155, "node_name": "tagnumber", "Dec": "the tag number of the tag associated with the field ."}{"idx": 49157, "node_name": "tagnumber", "Dec": "the tag number of the tag associated with the field ."}{"idx": 49164, "node_name": "tag", "Dec": "the tag to associated with this field ."}{"idx": 49165, "node_name": "type", "Dec": "one of the tifftag.tiff_ * constants indicating the data type of the field as written to the tiff stream ."}{"idx": 49166, "node_name": "count", "Dec": "the number of data values ."}{"idx": 49167, "node_name": "data", "Dec": "the actual data content of the field ."}{"idx": 49169, "node_name": "tag", "Dec": "the tag to associated with this field ."}{"idx": 49170, "node_name": "type", "Dec": "one of the tifftag.tiff_ * constants indicating the data type of the field as written to the tiff stream ."}{"idx": 49171, "node_name": "count", "Dec": "the number of data values ."}{"idx": 49173, "node_name": "tag", "Dec": "the tag to associate with this field ."}{"idx": 49174, "node_name": "value", "Dec": "the value to associate with this field ."}{"idx": 49176, "node_name": "tag", "Dec": "the tag to associated with this field ."}{"idx": 49177, "node_name": "type", "Dec": "one of the constants tifftag.tiff_long or tifftag.tiff_ifd_pointer ."}{"idx": 49178, "node_name": "offset", "Dec": "the ifd offset ."}{"idx": 49179, "node_name": "dir", "Dec": "the directory ."}{"idx": 49181, "node_name": "tagset", "Dec": "the tifftagset to which the tifftag of the field belongs ."}{"idx": 49182, "node_name": "node", "Dec": "a native tiff image metadata tifffield node ."}{"idx": 49187, "node_name": "datatype", "Dec": "one of the tifftag.tiff_ * constants indicating the data type of the field as written to the tiff stream ."}{"idx": 49189, "node_name": "typename", "Dec": "the type name ."}{"idx": 49191, "node_name": "datatype", "Dec": "one of the tifftag.tiff_ * data type constants ."}{"idx": 49192, "node_name": "count", "Dec": "the number of values in the array ."}{"idx": 49207, "node_name": "index", "Dec": "the index of the data ."}{"idx": 49209, "node_name": "index", "Dec": "the index of the data ."}{"idx": 49211, "node_name": "index", "Dec": "the index of the data ."}{"idx": 49213, "node_name": "index", "Dec": "the index of the data ."}{"idx": 49215, "node_name": "index", "Dec": "the index of the data ."}{"idx": 49217, "node_name": "index", "Dec": "the index of the data ."}{"idx": 49219, "node_name": "index", "Dec": "the index of the data ."}{"idx": 49221, "node_name": "index", "Dec": "the index of the data ."}{"idx": 49228, "node_name": "tagset", "Dec": "a tifftagset ."}{"idx": 49230, "node_name": "tagset", "Dec": "a tifftagset ."}{"idx": 49233, "node_name": "readunknowntags", "Dec": "whether to read fields of unrecognized tags"}{"idx": 49253, "node_name": "name", "Dec": "the name of the tag ."}{"idx": 49254, "node_name": "number", "Dec": "the number used to represent the tag ."}{"idx": 49255, "node_name": "datatypes", "Dec": "a bit mask indicating the set of legal data types for this tag ."}{"idx": 49256, "node_name": "count", "Dec": "the value count for this tag ."}{"idx": 49258, "node_name": "name", "Dec": "the name of the tag ."}{"idx": 49259, "node_name": "number", "Dec": "the number used to represent the tag ."}{"idx": 49260, "node_name": "tagset", "Dec": "the tifftagset to which this tag belongs ."}{"idx": 49262, "node_name": "name", "Dec": "the name of the tag ."}{"idx": 49263, "node_name": "number", "Dec": "the number used to represent the tag ."}{"idx": 49264, "node_name": "datatypes", "Dec": "a bit mask indicating the set of legal data types for this tag ."}{"idx": 49266, "node_name": "datatype", "Dec": "the data type to be queried ."}{"idx": 49272, "node_name": "datatype", "Dec": "the data type to be queried , one of tiff_byte , tiff_short , etc ."}{"idx": 49277, "node_name": "value", "Dec": "the data value ."}{"idx": 49278, "node_name": "name", "Dec": "the name to associate with the value ."}{"idx": 49280, "node_name": "value", "Dec": "the data value ."}{"idx": 49284, "node_name": "tags", "Dec": "a list object containing tifftag objects to be added to this tag set ."}{"idx": 49286, "node_name": "tagnumber", "Dec": "the number of the tag to be retrieved ."}{"idx": 49288, "node_name": "tagname", "Dec": "the name of the tag to be retrieved , as a string ."}{"idx": 49298, "node_name": "vendorname", "Dec": "the vendor name ."}{"idx": 49299, "node_name": "version", "Dec": "a version identifier ."}{"idx": 49302, "node_name": "registry", "Dec": "a serviceregistry where this object has been registered ."}{"idx": 49303, "node_name": "category", "Dec": "a class object indicating the registry category under which this object has been registered ."}{"idx": 49305, "node_name": "registry", "Dec": "a serviceregistry from which this object is being ( wholly or partially ) deregistered ."}{"idx": 49306, "node_name": "category", "Dec": "a class object indicating the registry category from which this object is being deregistered ."}{"idx": 49310, "node_name": "locale", "Dec": "a locale for which the return value should be localized ."}{"idx": 49315, "node_name": "vendorname", "Dec": "the vendor name ."}{"idx": 49316, "node_name": "version", "Dec": "a version identifier ."}{"idx": 49317, "node_name": "inputclass", "Dec": "a class object indicating the legal object type for use by the createinputstreaminstance method ."}{"idx": 49322, "node_name": "input", "Dec": "an object of the class type returned by getinputclass ."}{"idx": 49323, "node_name": "usecache", "Dec": "a boolean indicating whether a cache file should be used , in cases where it is optional ."}{"idx": 49324, "node_name": "cachedir", "Dec": "a file indicating where the cache file should be created , or null to use the system directory ."}{"idx": 49326, "node_name": "input", "Dec": "an object of the class type returned by getinputclass ."}{"idx": 49331, "node_name": "vendorname", "Dec": "the vendor name ."}{"idx": 49332, "node_name": "version", "Dec": "a version identifier ."}{"idx": 49333, "node_name": "outputclass", "Dec": "a class object indicating the legal object type for use by the createoutputstreaminstance method ."}{"idx": 49338, "node_name": "output", "Dec": "an object of the class type returned by getoutputclass ."}{"idx": 49339, "node_name": "usecache", "Dec": "a boolean indicating whether a cache file should be used , in cases where it is optional ."}{"idx": 49340, "node_name": "cachedir", "Dec": "a file indicating where the cache file should be created , or null to use the system directory ."}{"idx": 49342, "node_name": "output", "Dec": "an object of the class type returned by getoutputclass ."}{"idx": 49348, "node_name": "vendorname", "Dec": "the vendor name , as a non-null string ."}{"idx": 49349, "node_name": "version", "Dec": "a version identifier , as a non-null string ."}{"idx": 49350, "node_name": "names", "Dec": "a non-null array of strings indicating the format names . at least one entry must be present ."}{"idx": 49351, "node_name": "suffixes", "Dec": "an array of strings indicating the common file suffixes . if no suffixes are defined , null should be supplied . an array of length 0 will be normalized to null ."}{"idx": 49352, "node_name": "mimetypes", "Dec": "an array of strings indicating the format's mime types . if no mime types are defined , null should be supplied . an array of length 0 will be normalized to null ."}{"idx": 49353, "node_name": "readerclassname", "Dec": "the fully-qualified name of the associated imagereader class , as a non-null string ."}{"idx": 49354, "node_name": "inputtypes", "Dec": "a non-null array of class objects of length at least 1 indicating the legal input types ."}{"idx": 49355, "node_name": "writerspinames", "Dec": "an array strings naming the classes of all associated imagewriters , or null . an array of length 0 is normalized to null ."}{"idx": 49356, "node_name": "supportsstandardstreammetadataformat", "Dec": "a boolean that indicates whether a stream metadata object can use trees described by the standard metadata format ."}{"idx": 49357, "node_name": "nativestreammetadataformatname", "Dec": "a string , or null , to be returned from getnativestreammetadataformatname ."}{"idx": 49358, "node_name": "nativestreammetadataformatclassname", "Dec": "a string , or null , to be used to instantiate a metadata format object to be returned from getnativestreammetadataformat ."}{"idx": 49359, "node_name": "extrastreammetadataformatnames", "Dec": "an array of strings , or null , to be returned from getextrastreammetadataformatnames . an array of length 0 is normalized to null ."}{"idx": 49360, "node_name": "extrastreammetadataformatclassnames", "Dec": "an array of strings , or null , to be used to instantiate a metadata format object to be returned from getstreammetadataformat . an array of length 0 is normalized to null ."}{"idx": 49361, "node_name": "supportsstandardimagemetadataformat", "Dec": "a boolean that indicates whether an image metadata object can use trees described by the standard metadata format ."}{"idx": 49362, "node_name": "nativeimagemetadataformatname", "Dec": "a string , or null , to be returned from getnativeimagemetadataformatname ."}{"idx": 49363, "node_name": "nativeimagemetadataformatclassname", "Dec": "a string , or null , to be used to instantiate a metadata format object to be returned from getnativeimagemetadataformat ."}{"idx": 49364, "node_name": "extraimagemetadataformatnames", "Dec": "an array of strings to be returned from getextraimagemetadataformatnames . an array of length 0 is normalized to null ."}{"idx": 49365, "node_name": "extraimagemetadataformatclassnames", "Dec": "an array of strings , or null , to be used to instantiate a metadata format object to be returned from getimagemetadataformat . an array of length 0 is normalized to null ."}{"idx": 49368, "node_name": "source", "Dec": "the object ( typically an imageinputstream ) to be decoded ."}{"idx": 49371, "node_name": "extension", "Dec": "a plug-in specific extension object , which may be null ."}{"idx": 49373, "node_name": "reader", "Dec": "an imagereader instance ."}{"idx": 49391, "node_name": "vendorname", "Dec": "the vendor name , as a non-null string ."}{"idx": 49392, "node_name": "version", "Dec": "a version identifier , as a non-null string ."}{"idx": 49393, "node_name": "names", "Dec": "a non-null array of strings indicating the format names . at least one entry must be present ."}{"idx": 49394, "node_name": "suffixes", "Dec": "an array of strings indicating the common file suffixes . if no suffixes are defined , null should be supplied . an array of length 0 will be normalized to null ."}{"idx": 49395, "node_name": "mimetypes", "Dec": "an array of strings indicating the format's mime types . if no mime types are defined , null should be supplied . an array of length 0 will be normalized to null ."}{"idx": 49396, "node_name": "pluginclassname", "Dec": "the fully-qualified name of the associated imagereader or imagewriter class , as a non-null string ."}{"idx": 49397, "node_name": "supportsstandardstreammetadataformat", "Dec": "a boolean that indicates whether a stream metadata object can use trees described by the standard metadata format ."}{"idx": 49398, "node_name": "nativestreammetadataformatname", "Dec": "a string , or null , to be returned from getnativestreammetadataformatname ."}{"idx": 49399, "node_name": "nativestreammetadataformatclassname", "Dec": "a string , or null , to be used to instantiate a metadata format object to be returned from getnativestreammetadataformat ."}{"idx": 49400, "node_name": "extrastreammetadataformatnames", "Dec": "an array of strings , or null , to be returned from getextrastreammetadataformatnames . an array of length 0 is normalized to null ."}{"idx": 49401, "node_name": "extrastreammetadataformatclassnames", "Dec": "an array of strings , or null , to be used to instantiate a metadata format object to be returned from getstreammetadataformat . an array of length 0 is normalized to null ."}{"idx": 49402, "node_name": "supportsstandardimagemetadataformat", "Dec": "a boolean that indicates whether an image metadata object can use trees described by the standard metadata format ."}{"idx": 49403, "node_name": "nativeimagemetadataformatname", "Dec": "a string , or null , to be returned from getnativeimagemetadataformatname ."}{"idx": 49404, "node_name": "nativeimagemetadataformatclassname", "Dec": "a string , or null , to be used to instantiate a metadata format object to be returned from getnativeimagemetadataformat ."}{"idx": 49405, "node_name": "extraimagemetadataformatnames", "Dec": "an array of strings to be returned from getextraimagemetadataformatnames . an array of length 0 is normalized to null ."}{"idx": 49406, "node_name": "extraimagemetadataformatclassnames", "Dec": "an array of strings , or null , to be used to instantiate a metadata format object to be returned from getimagemetadataformat . an array of length 0 is normalized to null ."}{"idx": 49419, "node_name": "formatname", "Dec": "the desired stream metadata format ."}{"idx": 49421, "node_name": "formatname", "Dec": "the desired image metadata format ."}{"idx": 49425, "node_name": "vendorname", "Dec": "the vendor name ."}{"idx": 49426, "node_name": "version", "Dec": "a version identifier ."}{"idx": 49435, "node_name": "vendorname", "Dec": "the vendor name , as a non-null string ."}{"idx": 49436, "node_name": "version", "Dec": "a version identifier , as a non-null string ."}{"idx": 49437, "node_name": "names", "Dec": "a non-null array of strings indicating the format names . at least one entry must be present ."}{"idx": 49438, "node_name": "suffixes", "Dec": "an array of strings indicating the common file suffixes . if no suffixes are defined , null should be supplied . an array of length 0 will be normalized to null ."}{"idx": 49439, "node_name": "mimetypes", "Dec": "an array of strings indicating the format's mime types . if no suffixes are defined , null should be supplied . an array of length 0 will be normalized to null ."}{"idx": 49440, "node_name": "writerclassname", "Dec": "the fully-qualified name of the associated imagewriterspi class , as a non-null string ."}{"idx": 49441, "node_name": "outputtypes", "Dec": "an array of class objects of length at least 1 indicating the legal output types ."}{"idx": 49442, "node_name": "readerspinames", "Dec": "an array strings of length at least 1 naming the classes of all associated imagereaders , or null . an array of length 0 is normalized to null ."}{"idx": 49443, "node_name": "supportsstandardstreammetadataformat", "Dec": "a boolean that indicates whether a stream metadata object can use trees described by the standard metadata format ."}{"idx": 49444, "node_name": "nativestreammetadataformatname", "Dec": "a string , or null , to be returned from getnativestreammetadataformatname ."}{"idx": 49445, "node_name": "nativestreammetadataformatclassname", "Dec": "a string , or null , to be used to instantiate a metadata format object to be returned from getnativestreammetadataformat ."}{"idx": 49446, "node_name": "extrastreammetadataformatnames", "Dec": "an array of strings , or null , to be returned from getextrastreammetadataformatnames . an array of length 0 is normalized to null ."}{"idx": 49447, "node_name": "extrastreammetadataformatclassnames", "Dec": "an array of strings , or null , to be used to instantiate a metadata format object to be returned from getstreammetadataformat . an array of length 0 is normalized to null ."}{"idx": 49448, "node_name": "supportsstandardimagemetadataformat", "Dec": "a boolean that indicates whether an image metadata object can use trees described by the standard metadata format ."}{"idx": 49449, "node_name": "nativeimagemetadataformatname", "Dec": "a string , or null , to be returned from getnativeimagemetadataformatname ."}{"idx": 49450, "node_name": "nativeimagemetadataformatclassname", "Dec": "a string , or null , to be used to instantiate a metadata format object to be returned from getnativeimagemetadataformat ."}{"idx": 49451, "node_name": "extraimagemetadataformatnames", "Dec": "an array of strings to be returned from getextraimagemetadataformatnames . an array of length 0 is normalized to null ."}{"idx": 49452, "node_name": "extraimagemetadataformatclassnames", "Dec": "an array of strings , or null , to be used to instantiate a metadata format object to be returned from getimagemetadataformat . an array of length 0 is normalized to null ."}{"idx": 49456, "node_name": "type", "Dec": "an imagetypespecifier specifying the layout of the image to be written ."}{"idx": 49458, "node_name": "im", "Dec": "an instance of renderedimage to be encoded ."}{"idx": 49461, "node_name": "extension", "Dec": "a plug-in specific extension object , which may be null ."}{"idx": 49463, "node_name": "writer", "Dec": "an imagewriter instance ."}{"idx": 49467, "node_name": "registry", "Dec": "a serviceregistry where this object has been registered ."}{"idx": 49468, "node_name": "category", "Dec": "a class object indicating the registry category under which this object has been registered ."}{"idx": 49470, "node_name": "registry", "Dec": "a serviceregistry from which this object is being ( wholly or partially ) deregistered ."}{"idx": 49471, "node_name": "category", "Dec": "a class object indicating the registry category from which this object is being deregistered ."}{"idx": 49474, "node_name": "provider", "Dec": "a service provider object ."}{"idx": 49477, "node_name": "categories", "Dec": "an iterator containing class objects to be used to define categories ."}{"idx": 49479, "node_name": "providerclass", "Dec": "a class object indicating the class or interface of the service providers being detected ."}{"idx": 49480, "node_name": "loader", "Dec": "the class loader to be used to load provider-configuration files and instantiate provider classes , or null if the system class loader ( or , failing that the bootstrap class loader ) is to be used ."}{"idx": 49482, "node_name": "providerclass", "Dec": "a class object indicating the class or interface of the service providers being detected ."}{"idx": 49485, "node_name": "provider", "Dec": "the service provide object to be registered ."}{"idx": 49486, "node_name": "category", "Dec": "the category under which to register the provider ."}{"idx": 49488, "node_name": "provider", "Dec": "the service provider object to be registered ."}{"idx": 49490, "node_name": "providers", "Dec": "an iterator containing service provider objects to be registered ."}{"idx": 49492, "node_name": "provider", "Dec": "the service provider object to be deregistered ."}{"idx": 49493, "node_name": "category", "Dec": "the category from which to deregister the provider ."}{"idx": 49495, "node_name": "provider", "Dec": "the service provider object to be deregistered ."}{"idx": 49497, "node_name": "provider", "Dec": "the service provider object to be queried ."}{"idx": 49499, "node_name": "category", "Dec": "the category to be retrieved from ."}{"idx": 49500, "node_name": "useordering", "Dec": "true if pairwise orderings should be taken account in ordering the returned objects ."}{"idx": 49502, "node_name": "category", "Dec": "the category to be retrieved from ."}{"idx": 49503, "node_name": "filter", "Dec": "an instance of serviceregistry.filter whose filter method will be invoked ."}{"idx": 49504, "node_name": "useordering", "Dec": "true if pairwise orderings should be taken account in ordering the returned objects ."}{"idx": 49506, "node_name": "providerclass", "Dec": "the class of the desired service provider object ."}{"idx": 49508, "node_name": "category", "Dec": "a class object indicating the category under which the preference is to be established ."}{"idx": 49509, "node_name": "firstprovider", "Dec": "the preferred provider ."}{"idx": 49510, "node_name": "secondprovider", "Dec": "the provider to which firstprovider is preferred ."}{"idx": 49512, "node_name": "category", "Dec": "a class object indicating the category under which the preference is to be disestablished ."}{"idx": 49513, "node_name": "firstprovider", "Dec": "the formerly preferred provider ."}{"idx": 49514, "node_name": "secondprovider", "Dec": "the provider to which firstprovider was formerly preferred ."}{"idx": 49516, "node_name": "category", "Dec": "the category to be emptied ."}{"idx": 49520, "node_name": "stream", "Dec": "an inputstream to read from ."}{"idx": 49521, "node_name": "cachedir", "Dec": "a file indicating where the cache file should be created , or null to use the system directory ."}{"idx": 49528, "node_name": "stream", "Dec": "an outputstream to write to ."}{"idx": 49529, "node_name": "cachedir", "Dec": "a file indicating where the cache file should be created , or null to use the system directory ."}{"idx": 49531, "node_name": "pos", "Dec": "a long containing the desired file pointer position ."}{"idx": 49538, "node_name": "f", "Dec": "a file to read from ."}{"idx": 49540, "node_name": "raf", "Dec": "a randomaccessfile to read from ."}{"idx": 49544, "node_name": "f", "Dec": "a file to write to ."}{"idx": 49546, "node_name": "raf", "Dec": "a randomaccessfile to write to ."}{"idx": 49548, "node_name": "pos", "Dec": "a long containing the desired file pointer position ."}{"idx": 49551, "node_name": "data", "Dec": "a byte array ."}{"idx": 49552, "node_name": "offset", "Dec": "an int offset within the array ."}{"idx": 49553, "node_name": "length", "Dec": "an int specifying the length of the data of interest within byte array , in bytes ."}{"idx": 49556, "node_name": "data", "Dec": "a byte array reference containing the new data value ."}{"idx": 49559, "node_name": "offset", "Dec": "an int containing the new offset value ."}{"idx": 49562, "node_name": "length", "Dec": "an int containing the new length value ."}{"idx": 49565, "node_name": "byteorder", "Dec": "one of byteorder.big_endian or java.nio.byteorder.little_endian , indicating whether network byte order or its reverse will be used for future reads ."}{"idx": 49569, "node_name": "b", "Dec": "an array of bytes to be written to ."}{"idx": 49571, "node_name": "b", "Dec": "an array of bytes to be written to ."}{"idx": 49572, "node_name": "off", "Dec": "the starting position within b to write to ."}{"idx": 49573, "node_name": "len", "Dec": "the maximum number of bytes to read ."}{"idx": 49575, "node_name": "buf", "Dec": "an iiobytebuffer object to be modified ."}{"idx": 49576, "node_name": "len", "Dec": "the maximum number of bytes to read ."}{"idx": 49591, "node_name": "b", "Dec": "an array of bytes to be written to ."}{"idx": 49592, "node_name": "off", "Dec": "the starting position within b to write to ."}{"idx": 49593, "node_name": "len", "Dec": "the maximum number of bytes to read ."}{"idx": 49595, "node_name": "b", "Dec": "an array of bytes ."}{"idx": 49597, "node_name": "s", "Dec": "an array of shorts to be written to ."}{"idx": 49598, "node_name": "off", "Dec": "the starting position within s to write to ."}{"idx": 49599, "node_name": "len", "Dec": "the maximum number of shorts to read ."}{"idx": 49601, "node_name": "c", "Dec": "an array of chars to be written to ."}{"idx": 49602, "node_name": "off", "Dec": "the starting position within c to write to ."}{"idx": 49603, "node_name": "len", "Dec": "the maximum number of chars to read ."}{"idx": 49605, "node_name": "i", "Dec": "an array of ints to be written to ."}{"idx": 49606, "node_name": "off", "Dec": "the starting position within i to write to ."}{"idx": 49607, "node_name": "len", "Dec": "the maximum number of ints to read ."}{"idx": 49609, "node_name": "l", "Dec": "an array of longs to be written to ."}{"idx": 49610, "node_name": "off", "Dec": "the starting position within l to write to ."}{"idx": 49611, "node_name": "len", "Dec": "the maximum number of longs to read ."}{"idx": 49613, "node_name": "f", "Dec": "an array of floats to be written to ."}{"idx": 49614, "node_name": "off", "Dec": "the starting position within f to write to ."}{"idx": 49615, "node_name": "len", "Dec": "the maximum number of floats to read ."}{"idx": 49617, "node_name": "d", "Dec": "an array of doubles to be written to ."}{"idx": 49618, "node_name": "off", "Dec": "the starting position within d to write to ."}{"idx": 49619, "node_name": "len", "Dec": "the maximum number of doubles to read ."}{"idx": 49623, "node_name": "bitoffset", "Dec": "the desired offset , as an int between 0 and 7 , inclusive ."}{"idx": 49626, "node_name": "numbits", "Dec": "the number of bits to read , as an int between 0 and 64 , inclusive ."}{"idx": 49629, "node_name": "n", "Dec": "an int containing the number of bytes to be skipped ."}{"idx": 49631, "node_name": "n", "Dec": "a long containing the number of bytes to be skipped ."}{"idx": 49633, "node_name": "pos", "Dec": "a long containing the desired file pointer position ."}{"idx": 49637, "node_name": "pos", "Dec": "a long containing the length of the stream prefix that may be flushed ."}{"idx": 49653, "node_name": "b", "Dec": "an array of bytes to be written to ."}{"idx": 49655, "node_name": "b", "Dec": "an array of bytes to be written to ."}{"idx": 49656, "node_name": "off", "Dec": "the starting position within b to write to ."}{"idx": 49657, "node_name": "len", "Dec": "the maximum number of bytes to read ."}{"idx": 49660, "node_name": "n", "Dec": "the number of bytes to seek forward ."}{"idx": 49662, "node_name": "n", "Dec": "the number of bytes to seek forward ."}{"idx": 49670, "node_name": "b", "Dec": "an int whose lower 8 bits are to be written ."}{"idx": 49672, "node_name": "b", "Dec": "an array of bytes to be written ."}{"idx": 49674, "node_name": "b", "Dec": "an array of bytes to be written ."}{"idx": 49675, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 49676, "node_name": "len", "Dec": "the number of bytes to write ."}{"idx": 49678, "node_name": "v", "Dec": "the boolean to be written ."}{"idx": 49680, "node_name": "v", "Dec": "an int containing the byte value to be written ."}{"idx": 49682, "node_name": "v", "Dec": "an int containing the short value to be written ."}{"idx": 49684, "node_name": "v", "Dec": "an int containing the char ( unsigned short ) value to be written ."}{"idx": 49686, "node_name": "v", "Dec": "an int containing the value to be written ."}{"idx": 49688, "node_name": "v", "Dec": "a long containing the value to be written ."}{"idx": 49690, "node_name": "v", "Dec": "a float containing the value to be written ."}{"idx": 49692, "node_name": "v", "Dec": "a double containing the value to be written ."}{"idx": 49694, "node_name": "s", "Dec": "a string containing the value to be written ."}{"idx": 49696, "node_name": "s", "Dec": "a string containing the value to be written ."}{"idx": 49698, "node_name": "s", "Dec": "a string containing the value to be written ."}{"idx": 49700, "node_name": "s", "Dec": "an array of shorts to be written ."}{"idx": 49701, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 49702, "node_name": "len", "Dec": "the number of shorts to write ."}{"idx": 49704, "node_name": "c", "Dec": "an array of chars to be written ."}{"idx": 49705, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 49706, "node_name": "len", "Dec": "the number of chars to write ."}{"idx": 49708, "node_name": "i", "Dec": "an array of ints to be written ."}{"idx": 49709, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 49710, "node_name": "len", "Dec": "the number of ints to write ."}{"idx": 49712, "node_name": "l", "Dec": "an array of longs to be written ."}{"idx": 49713, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 49714, "node_name": "len", "Dec": "the number of longs to write ."}{"idx": 49716, "node_name": "f", "Dec": "an array of floats to be written ."}{"idx": 49717, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 49718, "node_name": "len", "Dec": "the number of floats to write ."}{"idx": 49720, "node_name": "d", "Dec": "an array of doubless to be written ."}{"idx": 49721, "node_name": "off", "Dec": "the start offset in the data ."}{"idx": 49722, "node_name": "len", "Dec": "the number of doubles to write ."}{"idx": 49724, "node_name": "bit", "Dec": "an int whose least significant bit is to be written to the stream ."}{"idx": 49726, "node_name": "bits", "Dec": "a long containing the bits to be written , starting with the bit in position numbits"}{"idx": 49727, "node_name": "numbits", "Dec": "an int between 0 and 64 , inclusive ."}{"idx": 49729, "node_name": "pos", "Dec": "a long containing the length of the stream prefix that may be flushed to the destination ."}{"idx": 49735, "node_name": "stream", "Dec": "an inputstream to read from ."}{"idx": 49742, "node_name": "stream", "Dec": "an outputstream to write to ."}{"idx": 49750, "node_name": "annotationtype", "Dec": "the class object corresponding to the annotation type"}{"idx": 49752, "node_name": "annotationtype", "Dec": "the class object corresponding to the annotation type"}{"idx": 49760, "node_name": "v", "Dec": "the visitor operating on this value"}{"idx": 49761, "node_name": "p", "Dec": "additional parameter to the visitor"}{"idx": 49764, "node_name": "av", "Dec": "the value to visit"}{"idx": 49765, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49767, "node_name": "av", "Dec": "the value to visit"}{"idx": 49769, "node_name": "b", "Dec": "the value being visited"}{"idx": 49770, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49772, "node_name": "b", "Dec": "the value being visited"}{"idx": 49773, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49775, "node_name": "c", "Dec": "the value being visited"}{"idx": 49776, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49778, "node_name": "d", "Dec": "the value being visited"}{"idx": 49779, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49781, "node_name": "f", "Dec": "the value being visited"}{"idx": 49782, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49784, "node_name": "i", "Dec": "the value being visited"}{"idx": 49785, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49787, "node_name": "i", "Dec": "the value being visited"}{"idx": 49788, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49790, "node_name": "s", "Dec": "the value being visited"}{"idx": 49791, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49793, "node_name": "s", "Dec": "the value being visited"}{"idx": 49794, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49796, "node_name": "t", "Dec": "the value being visited"}{"idx": 49797, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49799, "node_name": "c", "Dec": "the value being visited"}{"idx": 49800, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49802, "node_name": "a", "Dec": "the value being visited"}{"idx": 49803, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49805, "node_name": "vals", "Dec": "the value being visited"}{"idx": 49806, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49808, "node_name": "av", "Dec": "the unknown value being visited"}{"idx": 49809, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49818, "node_name": "obj", "Dec": "the object to be compared with this element"}{"idx": 49822, "node_name": "annotationtype", "Dec": "the class object corresponding to the annotation type"}{"idx": 49824, "node_name": "v", "Dec": "the visitor operating on this element"}{"idx": 49825, "node_name": "p", "Dec": "additional parameter to the visitor"}{"idx": 49829, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 49835, "node_name": "e", "Dec": "the element to visit"}{"idx": 49836, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49838, "node_name": "e", "Dec": "the element to visit"}{"idx": 49840, "node_name": "e", "Dec": "the element to visit"}{"idx": 49841, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49843, "node_name": "e", "Dec": "the element to visit"}{"idx": 49844, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49846, "node_name": "e", "Dec": "the element to visit"}{"idx": 49847, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49849, "node_name": "e", "Dec": "the element to visit"}{"idx": 49850, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49852, "node_name": "e", "Dec": "the element to visit"}{"idx": 49853, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49855, "node_name": "e", "Dec": "the element to visit"}{"idx": 49856, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49858, "node_name": "e", "Dec": "the element to visit"}{"idx": 49859, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49874, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 49879, "node_name": "v", "Dec": "the visitor operating on this directive"}{"idx": 49880, "node_name": "p", "Dec": "additional parameter to the visitor"}{"idx": 49884, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 49887, "node_name": "d", "Dec": "the directive to visit"}{"idx": 49889, "node_name": "d", "Dec": "the directive to visit"}{"idx": 49890, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49892, "node_name": "d", "Dec": "the directive to visit"}{"idx": 49893, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49895, "node_name": "d", "Dec": "the directive to visit"}{"idx": 49896, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49898, "node_name": "d", "Dec": "the directive to visit"}{"idx": 49899, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49901, "node_name": "d", "Dec": "the directive to visit"}{"idx": 49902, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49904, "node_name": "d", "Dec": "the directive to visit"}{"idx": 49905, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49907, "node_name": "d", "Dec": "the directive to visit"}{"idx": 49908, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 49935, "node_name": "obj", "Dec": "the object to be compared with this element"}{"idx": 49938, "node_name": "cs", "Dec": "the sequence to compare this name against"}{"idx": 49942, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 49972, "node_name": "av", "Dec": "the unknown annotation value , may be null"}{"idx": 49973, "node_name": "p", "Dec": "an additional parameter , may be null"}{"idx": 49978, "node_name": "d", "Dec": "the unknown directive , may be null"}{"idx": 49979, "node_name": "p", "Dec": "an additional parameter , may be null"}{"idx": 49984, "node_name": "e", "Dec": "the unknown element , may be null"}{"idx": 49985, "node_name": "p", "Dec": "an additional parameter , may be null"}{"idx": 49996, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 50000, "node_name": "name", "Dec": "the string to check"}{"idx": 50002, "node_name": "name", "Dec": "the string to check"}{"idx": 50004, "node_name": "name", "Dec": "the string to check"}{"idx": 50005, "node_name": "version", "Dec": "the version to use"}{"idx": 50007, "node_name": "s", "Dec": "the string to check"}{"idx": 50009, "node_name": "s", "Dec": "the string to check"}{"idx": 50010, "node_name": "version", "Dec": "the version to use"}{"idx": 50028, "node_name": "type", "Dec": "the type being accessed"}{"idx": 50032, "node_name": "types", "Dec": "the types being accessed"}{"idx": 50041, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 50046, "node_name": "obj", "Dec": "the object to be compared with this type"}{"idx": 50050, "node_name": "v", "Dec": "the visitor operating on this type"}{"idx": 50051, "node_name": "p", "Dec": "additional parameter to the visitor"}{"idx": 50058, "node_name": "t", "Dec": "the type to visit"}{"idx": 50059, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50061, "node_name": "t", "Dec": "the element to visit"}{"idx": 50063, "node_name": "t", "Dec": "the type to visit"}{"idx": 50064, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50066, "node_name": "t", "Dec": "the type to visit"}{"idx": 50067, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50069, "node_name": "t", "Dec": "the type to visit"}{"idx": 50070, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50072, "node_name": "t", "Dec": "the type to visit"}{"idx": 50073, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50075, "node_name": "t", "Dec": "the type to visit"}{"idx": 50076, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50078, "node_name": "t", "Dec": "the type to visit"}{"idx": 50079, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50081, "node_name": "t", "Dec": "the type to visit"}{"idx": 50082, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50084, "node_name": "t", "Dec": "the type to visit"}{"idx": 50085, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50087, "node_name": "t", "Dec": "the type to visit"}{"idx": 50088, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50090, "node_name": "t", "Dec": "the type to visit"}{"idx": 50091, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50093, "node_name": "t", "Dec": "the type to visit"}{"idx": 50094, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50096, "node_name": "t", "Dec": "the type to visit"}{"idx": 50097, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50102, "node_name": "t", "Dec": "the unknown type , may be null"}{"idx": 50103, "node_name": "p", "Dec": "an additional parameter , may be null"}{"idx": 50111, "node_name": "message", "Dec": "the detail message"}{"idx": 50114, "node_name": "av", "Dec": "the value to visit"}{"idx": 50115, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50117, "node_name": "av", "Dec": "the value to visit"}{"idx": 50119, "node_name": "av", "Dec": "the unknown value being visited"}{"idx": 50120, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50128, "node_name": "e", "Dec": "the element to visit"}{"idx": 50129, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50131, "node_name": "e", "Dec": "the element to visit"}{"idx": 50133, "node_name": "e", "Dec": "the element to visit"}{"idx": 50134, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50136, "node_name": "e", "Dec": "the element to visit"}{"idx": 50137, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50144, "node_name": "t", "Dec": "the element to visit"}{"idx": 50145, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50148, "node_name": "t", "Dec": "the type to visit"}{"idx": 50149, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50151, "node_name": "t", "Dec": "the type to visit"}{"idx": 50153, "node_name": "t", "Dec": "the type to visit"}{"idx": 50154, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50156, "node_name": "t", "Dec": "the type to visit"}{"idx": 50157, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50159, "node_name": "t", "Dec": "the type to visit"}{"idx": 50160, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50163, "node_name": "t", "Dec": "the type to visit"}{"idx": 50164, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50168, "node_name": "t", "Dec": "the type to visit"}{"idx": 50169, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50174, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50176, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50178, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50180, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50182, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50184, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50186, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50188, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50190, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50192, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50194, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50196, "node_name": "elements", "Dec": "the elements to filter"}{"idx": 50198, "node_name": "directives", "Dec": "the directives to filter"}{"idx": 50200, "node_name": "directives", "Dec": "the directives to filter"}{"idx": 50202, "node_name": "directives", "Dec": "the directives to filter"}{"idx": 50204, "node_name": "directives", "Dec": "the directives to filter"}{"idx": 50206, "node_name": "directives", "Dec": "the directives to filter"}{"idx": 50209, "node_name": "e", "Dec": "the element to visit"}{"idx": 50210, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50212, "node_name": "e", "Dec": "the element to visit"}{"idx": 50213, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50215, "node_name": "e", "Dec": "the element to visit"}{"idx": 50216, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50218, "node_name": "e", "Dec": "the element to visit"}{"idx": 50219, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50221, "node_name": "e", "Dec": "the element to visit"}{"idx": 50222, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50224, "node_name": "e", "Dec": "the element to visit"}{"idx": 50225, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50227, "node_name": "e", "Dec": "the element to visit"}{"idx": 50228, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50230, "node_name": "e", "Dec": "the element to visit"}{"idx": 50231, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50233, "node_name": "e", "Dec": "the element to visit"}{"idx": 50234, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50236, "node_name": "e", "Dec": "the element to visit"}{"idx": 50237, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50239, "node_name": "e", "Dec": "the element to visit"}{"idx": 50240, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50242, "node_name": "e", "Dec": "the element to visit"}{"idx": 50243, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50245, "node_name": "e", "Dec": "the element to visit"}{"idx": 50246, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50248, "node_name": "e", "Dec": "the element to visit"}{"idx": 50249, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50251, "node_name": "e", "Dec": "the element to visit"}{"idx": 50252, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50254, "node_name": "e", "Dec": "the element to visit"}{"idx": 50255, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50257, "node_name": "e", "Dec": "the element to visit"}{"idx": 50258, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50260, "node_name": "e", "Dec": "the element to visit"}{"idx": 50261, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50263, "node_name": "e", "Dec": "the element to visit"}{"idx": 50264, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50267, "node_name": "e", "Dec": "the element to visit"}{"idx": 50268, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50272, "node_name": "defaultvalue", "Dec": "the value to assign to simpleelementvisitor6.default_value"}{"idx": 50276, "node_name": "defaultvalue", "Dec": "the value to assign to simpleelementvisitor6.default_value"}{"idx": 50278, "node_name": "e", "Dec": "the element to visit"}{"idx": 50279, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50282, "node_name": "name", "Dec": "fully qualified package name , or an empty string for an unnamed package"}{"idx": 50284, "node_name": "name", "Dec": "fully qualified package name , or an empty string for an unnamed package"}{"idx": 50285, "node_name": "module", "Dec": "module relative to which the lookup should happen"}{"idx": 50287, "node_name": "name", "Dec": "the canonical name"}{"idx": 50289, "node_name": "name", "Dec": "the canonical name"}{"idx": 50291, "node_name": "name", "Dec": "the canonical name"}{"idx": 50292, "node_name": "module", "Dec": "module relative to which the lookup should happen"}{"idx": 50294, "node_name": "name", "Dec": "the canonical name"}{"idx": 50296, "node_name": "name", "Dec": "the name , or an empty string for an unnamed module"}{"idx": 50299, "node_name": "a", "Dec": "annotation to examine"}{"idx": 50301, "node_name": "e", "Dec": "the element being examined"}{"idx": 50303, "node_name": "e", "Dec": "the element being examined"}{"idx": 50305, "node_name": "e", "Dec": "the element being examined"}{"idx": 50307, "node_name": "c", "Dec": "the construct the annotation mirror modifies"}{"idx": 50308, "node_name": "a", "Dec": "the annotation mirror being examined"}{"idx": 50310, "node_name": "m", "Dec": "the module of the directive"}{"idx": 50311, "node_name": "directive", "Dec": "the module directive being examined"}{"idx": 50313, "node_name": "e", "Dec": "the executable being examined"}{"idx": 50315, "node_name": "type", "Dec": "the type element being examined"}{"idx": 50317, "node_name": "type", "Dec": "the element being examined"}{"idx": 50319, "node_name": "type", "Dec": "the element being examined"}{"idx": 50321, "node_name": "type", "Dec": "the type being examined"}{"idx": 50323, "node_name": "e", "Dec": "the element being examined"}{"idx": 50325, "node_name": "hider", "Dec": "the first element"}{"idx": 50326, "node_name": "hidden", "Dec": "the second element"}{"idx": 50328, "node_name": "overrider", "Dec": "the first method , possible overrider"}{"idx": 50329, "node_name": "overridden", "Dec": "the second method , possibly being overridden"}{"idx": 50330, "node_name": "type", "Dec": "the type of which the first method is a member"}{"idx": 50332, "node_name": "value", "Dec": "a primitive value or string"}{"idx": 50334, "node_name": "w", "Dec": "the writer to print the output to"}{"idx": 50335, "node_name": "elements", "Dec": "the elements to print"}{"idx": 50337, "node_name": "cs", "Dec": "the character sequence to return as a name"}{"idx": 50339, "node_name": "type", "Dec": "the type element being examined"}{"idx": 50343, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 50348, "node_name": "iterable", "Dec": "the elements to scan"}{"idx": 50349, "node_name": "p", "Dec": "additional parameter"}{"idx": 50351, "node_name": "e", "Dec": "the element to scan"}{"idx": 50352, "node_name": "p", "Dec": "a scanner-specified parameter"}{"idx": 50354, "node_name": "e", "Dec": "the element to scan"}{"idx": 50356, "node_name": "e", "Dec": "the element to visit"}{"idx": 50357, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50359, "node_name": "e", "Dec": "the element to visit"}{"idx": 50360, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50362, "node_name": "e", "Dec": "the element to visit"}{"idx": 50363, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50365, "node_name": "e", "Dec": "the element to visit"}{"idx": 50366, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50368, "node_name": "e", "Dec": "the element to visit"}{"idx": 50369, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50372, "node_name": "e", "Dec": "the element to visit"}{"idx": 50373, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50377, "node_name": "defaultvalue", "Dec": "the default value"}{"idx": 50381, "node_name": "defaultvalue", "Dec": "the default value"}{"idx": 50383, "node_name": "e", "Dec": "the element to visit"}{"idx": 50384, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50388, "node_name": "o", "Dec": "the value of the annotation"}{"idx": 50389, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50391, "node_name": "b", "Dec": "the value being visited"}{"idx": 50392, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50394, "node_name": "b", "Dec": "the value being visited"}{"idx": 50395, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50397, "node_name": "c", "Dec": "the value being visited"}{"idx": 50398, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50400, "node_name": "d", "Dec": "the value being visited"}{"idx": 50401, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50403, "node_name": "f", "Dec": "the value being visited"}{"idx": 50404, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50406, "node_name": "i", "Dec": "the value being visited"}{"idx": 50407, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50409, "node_name": "i", "Dec": "the value being visited"}{"idx": 50410, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50412, "node_name": "s", "Dec": "the value being visited"}{"idx": 50413, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50415, "node_name": "s", "Dec": "the value being visited"}{"idx": 50416, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50418, "node_name": "t", "Dec": "the value being visited"}{"idx": 50419, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50421, "node_name": "c", "Dec": "the value being visited"}{"idx": 50422, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50424, "node_name": "a", "Dec": "the value being visited"}{"idx": 50425, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50427, "node_name": "vals", "Dec": "the value being visited"}{"idx": 50428, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50433, "node_name": "defaultvalue", "Dec": "the value to assign to simpleannotationvaluevisitor6.default_value"}{"idx": 50437, "node_name": "defaultvalue", "Dec": "the value to assign to simpleannotationvaluevisitor6.default_value"}{"idx": 50441, "node_name": "e", "Dec": "the element to process"}{"idx": 50442, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50444, "node_name": "e", "Dec": "the element to visit"}{"idx": 50445, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50447, "node_name": "e", "Dec": "the element to visit"}{"idx": 50448, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50450, "node_name": "e", "Dec": "the element to visit"}{"idx": 50451, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50453, "node_name": "e", "Dec": "the element to visit"}{"idx": 50454, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50456, "node_name": "e", "Dec": "the element to visit"}{"idx": 50457, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50460, "node_name": "e", "Dec": "the element to visit"}{"idx": 50461, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50465, "node_name": "defaultvalue", "Dec": "the value to assign to simpleelementvisitor6.default_value"}{"idx": 50469, "node_name": "defaultvalue", "Dec": "the value to assign to simpleelementvisitor6.default_value"}{"idx": 50471, "node_name": "e", "Dec": "the element to visit"}{"idx": 50472, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50476, "node_name": "e", "Dec": "the type to process"}{"idx": 50477, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50479, "node_name": "t", "Dec": "the type to visit"}{"idx": 50480, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50482, "node_name": "t", "Dec": "the type to visit"}{"idx": 50483, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50485, "node_name": "t", "Dec": "the type to visit"}{"idx": 50486, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50488, "node_name": "t", "Dec": "the type to visit"}{"idx": 50489, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50491, "node_name": "t", "Dec": "the type to visit"}{"idx": 50492, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50494, "node_name": "t", "Dec": "the type to visit"}{"idx": 50495, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50497, "node_name": "t", "Dec": "the type to visit"}{"idx": 50498, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50500, "node_name": "t", "Dec": "the type to visit"}{"idx": 50501, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50503, "node_name": "t", "Dec": "the type to visit"}{"idx": 50504, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50507, "node_name": "t", "Dec": "the type to visit"}{"idx": 50508, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50512, "node_name": "defaultvalue", "Dec": "the value to assign to simpletypevisitor6.default_value"}{"idx": 50514, "node_name": "t", "Dec": "the type to visit"}{"idx": 50515, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50519, "node_name": "defaultvalue", "Dec": "the value to assign to simpletypevisitor6.default_value"}{"idx": 50522, "node_name": "t", "Dec": "the type to visit"}{"idx": 50523, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50525, "node_name": "t", "Dec": "the type to visit"}{"idx": 50526, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50528, "node_name": "t", "Dec": "the type to visit"}{"idx": 50529, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50531, "node_name": "t", "Dec": "the type to visit"}{"idx": 50532, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50534, "node_name": "t", "Dec": "the type to visit"}{"idx": 50535, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50537, "node_name": "t", "Dec": "the type to visit"}{"idx": 50538, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50540, "node_name": "t", "Dec": "the type to visit"}{"idx": 50541, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50543, "node_name": "t", "Dec": "the type to visit"}{"idx": 50544, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50546, "node_name": "t", "Dec": "the type to visit"}{"idx": 50547, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50549, "node_name": "t", "Dec": "the type to visit"}{"idx": 50550, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50552, "node_name": "t", "Dec": "the type to visit"}{"idx": 50553, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50555, "node_name": "t", "Dec": "the type to visit"}{"idx": 50556, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50558, "node_name": "t", "Dec": "the type to visit"}{"idx": 50559, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50561, "node_name": "t", "Dec": "the type to visit"}{"idx": 50562, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50565, "node_name": "t", "Dec": "the type to visit"}{"idx": 50566, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50570, "node_name": "defaultvalue", "Dec": "the value to assign to simpletypevisitor6.default_value"}{"idx": 50572, "node_name": "t", "Dec": "the type to visit"}{"idx": 50573, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50577, "node_name": "defaultvalue", "Dec": "the value to assign to simpletypevisitor6.default_value"}{"idx": 50579, "node_name": "t", "Dec": "the type to visit"}{"idx": 50580, "node_name": "p", "Dec": "a visitor-specified parameter"}{"idx": 50583, "node_name": "t", "Dec": "the type to map to an element"}{"idx": 50585, "node_name": "t1", "Dec": "the first type"}{"idx": 50586, "node_name": "t2", "Dec": "the second type"}{"idx": 50588, "node_name": "t1", "Dec": "the first type"}{"idx": 50589, "node_name": "t2", "Dec": "the second type"}{"idx": 50591, "node_name": "t1", "Dec": "the first type"}{"idx": 50592, "node_name": "t2", "Dec": "the second type"}{"idx": 50594, "node_name": "t1", "Dec": "the first type"}{"idx": 50595, "node_name": "t2", "Dec": "the second type"}{"idx": 50597, "node_name": "m1", "Dec": "the first method"}{"idx": 50598, "node_name": "m2", "Dec": "the second method"}{"idx": 50600, "node_name": "t", "Dec": "the type being examined"}{"idx": 50602, "node_name": "t", "Dec": "the type to be erased"}{"idx": 50604, "node_name": "p", "Dec": "the primitive type to be converted"}{"idx": 50606, "node_name": "t", "Dec": "the type to be unboxed"}{"idx": 50608, "node_name": "t", "Dec": "the type to be converted"}{"idx": 50610, "node_name": "kind", "Dec": "the kind of primitive type to return"}{"idx": 50613, "node_name": "kind", "Dec": "the kind of type to return"}{"idx": 50615, "node_name": "componenttype", "Dec": "the component type"}{"idx": 50617, "node_name": "extendsbound", "Dec": "the extends ( upper ) bound , or null if none"}{"idx": 50618, "node_name": "superbound", "Dec": "the super ( lower ) bound , or null if none"}{"idx": 50620, "node_name": "typeelem", "Dec": "the type element"}{"idx": 50621, "node_name": "typeargs", "Dec": "the actual type arguments"}{"idx": 50623, "node_name": "containing", "Dec": "the containing type , or null if none"}{"idx": 50624, "node_name": "typeelem", "Dec": "the type element"}{"idx": 50625, "node_name": "typeargs", "Dec": "the actual type arguments"}{"idx": 50627, "node_name": "containing", "Dec": "the containing type"}{"idx": 50628, "node_name": "element", "Dec": "the element"}{"idx": 50631, "node_name": "name", "Dec": "a string containing the name of the attribute to be created . cannot be null ."}{"idx": 50632, "node_name": "value", "Dec": "the object which is assigned to the attribute . this object must be of the same type as the attribute ."}{"idx": 50636, "node_name": "object", "Dec": "the attribute that the current attribute is to be compared with ."}{"idx": 50642, "node_name": "source", "Dec": "the notification producer , that is , the mbean the attribute belongs to ."}{"idx": 50643, "node_name": "sequencenumber", "Dec": "the notification sequence number within the source object ."}{"idx": 50644, "node_name": "timestamp", "Dec": "the date at which the notification is being sent ."}{"idx": 50645, "node_name": "msg", "Dec": "a string containing the message of the notification ."}{"idx": 50646, "node_name": "attributename", "Dec": "a string giving the name of the attribute ."}{"idx": 50647, "node_name": "attributetype", "Dec": "a string containing the type of the attribute ."}{"idx": 50648, "node_name": "oldvalue", "Dec": "an object representing value of the attribute before the change ."}{"idx": 50649, "node_name": "newvalue", "Dec": "an object representing value of the attribute after the change ."}{"idx": 50657, "node_name": "notification", "Dec": "the attribute change notification to be sent ."}{"idx": 50659, "node_name": "name", "Dec": "the attribute name ."}{"idx": 50661, "node_name": "name", "Dec": "the attribute name ."}{"idx": 50667, "node_name": "initialcapacity", "Dec": "the initial capacity of the attributelist , as specified by arraylist ( int ) ."}{"idx": 50669, "node_name": "list", "Dec": "the attributelist that defines the initial contents of the new attributelist ."}{"idx": 50671, "node_name": "list", "Dec": "the list that defines the initial contents of the new attributelist ."}{"idx": 50674, "node_name": "object", "Dec": "the attribute to be added ."}{"idx": 50676, "node_name": "object", "Dec": "the attribute object to be inserted ."}{"idx": 50677, "node_name": "index", "Dec": "the position in the list where the new attribute object is to be inserted ."}{"idx": 50679, "node_name": "object", "Dec": "the value to which the attribute element should be set ."}{"idx": 50680, "node_name": "index", "Dec": "the position specified ."}{"idx": 50682, "node_name": "list", "Dec": "elements to be inserted into the list ."}{"idx": 50684, "node_name": "list", "Dec": "elements to be inserted into the list ."}{"idx": 50685, "node_name": "index", "Dec": "position at which to insert the first element from the attributelist specified ."}{"idx": 50687, "node_name": "element", "Dec": "element to be appended to this list"}{"idx": 50689, "node_name": "index", "Dec": "index at which the specified element is to be inserted"}{"idx": 50690, "node_name": "element", "Dec": "element to be inserted"}{"idx": 50692, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 50694, "node_name": "index", "Dec": "index at which to insert the first element from the specified collection"}{"idx": 50695, "node_name": "c", "Dec": "collection containing elements to be added to this list"}{"idx": 50697, "node_name": "index", "Dec": "index of the element to replace"}{"idx": 50698, "node_name": "element", "Dec": "element to be stored at the specified position"}{"idx": 50702, "node_name": "message", "Dec": "detail message ."}{"idx": 50705, "node_name": "attr", "Dec": "the name of the attribute whose value is the value of this valueexp ."}{"idx": 50708, "node_name": "name", "Dec": "the name of the mbean on which the attributevalueexp will be applied ."}{"idx": 50711, "node_name": "name", "Dec": "the name of the mbean whose attribute is to be returned ."}{"idx": 50714, "node_name": "val", "Dec": "the inappropriate value ."}{"idx": 50718, "node_name": "exp", "Dec": "the expression whose value was inappropriate ."}{"idx": 50723, "node_name": "message", "Dec": "the detail message ."}{"idx": 50729, "node_name": "fieldname", "Dec": "the field name ."}{"idx": 50731, "node_name": "fieldname", "Dec": "the field name to be set . cannot be null or empty ."}{"idx": 50732, "node_name": "fieldvalue", "Dec": "the field value to be set for the field name . can be null if that is a valid value for the field ."}{"idx": 50736, "node_name": "fieldnames", "Dec": "string array of the names of the fields that the values should be returned for . if the array is empty then an empty array will be returned . if the array is null then all values will be returned , as if the parameter were the array returned by getfieldnames() . if a field name in the array does not exist , including the case where it is null or the empty string , then null is returned for the matching array element being returned ."}{"idx": 50738, "node_name": "fieldname", "Dec": "string name of the field to be removed . if the field name is illegal or the field is not found , no exception is thrown ."}{"idx": 50740, "node_name": "fieldnames", "Dec": "string array of field names . the array and array elements cannot be null ."}{"idx": 50741, "node_name": "fieldvalues", "Dec": "object array of the corresponding field values . the array cannot be null . elements of the array can be null ."}{"idx": 50745, "node_name": "obj", "Dec": "the object to compare with ."}{"idx": 50749, "node_name": "indescriptor", "Dec": "replaces the descriptor associated with the component implementing this interface . if the indescriptor is invalid for the type of info object it is being set for , an exception is thrown . if the indescriptor is null , then the descriptor will revert to its default value which should contain , at a minimum , the descriptor name and descriptortype ."}{"idx": 50755, "node_name": "attribute", "Dec": "the name of the attribute to be retrieved"}{"idx": 50757, "node_name": "attribute", "Dec": "the identification of the attribute to be set and the value it is to be set to ."}{"idx": 50759, "node_name": "attributes", "Dec": "a list of the attributes to be retrieved ."}{"idx": 50761, "node_name": "attributes", "Dec": "a list of attributes : the identification of the attributes to be set and the values they are to be set to ."}{"idx": 50763, "node_name": "actionname", "Dec": "the name of the action to be invoked ."}{"idx": 50764, "node_name": "params", "Dec": "an array containing the parameters to be set when the action is invoked ."}{"idx": 50765, "node_name": "signature", "Dec": "an array containing the signature of the action . the class objects will be loaded through the same class loader as the one used for loading the mbean on which the action is invoked ."}{"idx": 50770, "node_name": "fieldnames", "Dec": "the field names"}{"idx": 50771, "node_name": "fieldvalues", "Dec": "the field values"}{"idx": 50773, "node_name": "fields", "Dec": "the field names"}{"idx": 50775, "node_name": "fields", "Dec": "the field names and values"}{"idx": 50777, "node_name": "descriptors", "Dec": "the descriptors to be combined . any of the descriptors can be null , in which case it is skipped ."}{"idx": 50779, "node_name": "o", "Dec": "the object to compare with ."}{"idx": 50784, "node_name": "fieldnames", "Dec": "string array of field names . the array and array elements cannot be null ."}{"idx": 50785, "node_name": "fieldvalues", "Dec": "object array of the corresponding field values . the array cannot be null . elements of the array can be null ."}{"idx": 50787, "node_name": "fieldname", "Dec": "the field name to be set . cannot be null or empty ."}{"idx": 50788, "node_name": "fieldvalue", "Dec": "the field value to be set for the field name . can be null if that is a valid value for the field ."}{"idx": 50790, "node_name": "fieldname", "Dec": "string name of the field to be removed . if the field name is illegal or the field is not found , no exception is thrown ."}{"idx": 50794, "node_name": "message", "Dec": "the detail message ."}{"idx": 50798, "node_name": "message", "Dec": "the detail message ."}{"idx": 50802, "node_name": "message", "Dec": "the detail message ."}{"idx": 50805, "node_name": "val", "Dec": "the detail message of this exception ."}{"idx": 50809, "node_name": "message", "Dec": "the detail message ."}{"idx": 50813, "node_name": "msg", "Dec": "the detail message ."}{"idx": 50817, "node_name": "message", "Dec": "the detail message ."}{"idx": 50829, "node_name": "connection", "Dec": "the mbean server to forward to ."}{"idx": 50830, "node_name": "objectname", "Dec": "the name of the mbean within connection to forward to ."}{"idx": 50831, "node_name": "interfaceclass", "Dec": "the management interface that the mbean exports , which will also be implemented by the returned proxy ."}{"idx": 50833, "node_name": "connection", "Dec": "the mbean server to forward to ."}{"idx": 50834, "node_name": "objectname", "Dec": "the name of the mbean within connection to forward to ."}{"idx": 50835, "node_name": "interfaceclass", "Dec": "the management interface that the mbean exports , which will also be implemented by the returned proxy ."}{"idx": 50836, "node_name": "notificationemitter", "Dec": "make the returned proxy implement notificationemitter by forwarding its methods via connection ."}{"idx": 50838, "node_name": "connection", "Dec": "the mbean server to forward to ."}{"idx": 50839, "node_name": "objectname", "Dec": "the name of the mbean within connection to forward to ."}{"idx": 50840, "node_name": "interfaceclass", "Dec": "the mxbean interface , which will also be implemented by the returned proxy ."}{"idx": 50842, "node_name": "connection", "Dec": "the mbean server to forward to ."}{"idx": 50843, "node_name": "objectname", "Dec": "the name of the mbean within connection to forward to ."}{"idx": 50844, "node_name": "interfaceclass", "Dec": "the mxbean interface , which will also be implemented by the returned proxy ."}{"idx": 50845, "node_name": "notificationemitter", "Dec": "make the returned proxy implement notificationemitter by forwarding its methods via connection ."}{"idx": 50847, "node_name": "interfaceclass", "Dec": "the candidate interface ."}{"idx": 50851, "node_name": "message", "Dec": "the detail message ."}{"idx": 50854, "node_name": "classname", "Dec": "the name of the class to be loaded ."}{"idx": 50856, "node_name": "classname", "Dec": "the name of the class to be loaded ."}{"idx": 50857, "node_name": "exclude", "Dec": "the class loader to be excluded . may be null , in which case loadClassWithout(java.lang.ClassLoader,java.lang.String) is equivalent to loadclass ( classname ) ."}{"idx": 50859, "node_name": "classname", "Dec": "the name of the class to be loaded ."}{"idx": 50860, "node_name": "stop", "Dec": "the class loader at which to stop . may be null , in which case loadClassBefore(java.lang.ClassLoader,java.lang.String) is equivalent to loadclass ( classname ) ."}{"idx": 50865, "node_name": "urls", "Dec": "the urls from which to load classes and resources ."}{"idx": 50867, "node_name": "urls", "Dec": "the urls from which to load classes and resources ."}{"idx": 50868, "node_name": "parent", "Dec": "the parent class loader for delegation ."}{"idx": 50870, "node_name": "urls", "Dec": "the urls from which to load classes and resources ."}{"idx": 50871, "node_name": "parent", "Dec": "the parent class loader for delegation ."}{"idx": 50872, "node_name": "factory", "Dec": "the urlstreamhandlerfactory to use when creating urls ."}{"idx": 50874, "node_name": "urls", "Dec": "the urls from which to load classes and resources ."}{"idx": 50875, "node_name": "delegatetoclr", "Dec": "true if , when a class is not found in either the parent classloader or the urls , the mlet should delegate to its containing mbeanserver's classloaderrepository ."}{"idx": 50877, "node_name": "urls", "Dec": "the urls from which to load classes and resources ."}{"idx": 50878, "node_name": "parent", "Dec": "the parent class loader for delegation ."}{"idx": 50879, "node_name": "delegatetoclr", "Dec": "true if , when a class is not found in either the parent classloader or the urls , the mlet should delegate to its containing mbeanserver's classloaderrepository ."}{"idx": 50881, "node_name": "urls", "Dec": "the urls from which to load classes and resources ."}{"idx": 50882, "node_name": "parent", "Dec": "the parent class loader for delegation ."}{"idx": 50883, "node_name": "factory", "Dec": "the urlstreamhandlerfactory to use when creating urls ."}{"idx": 50884, "node_name": "delegatetoclr", "Dec": "true if , when a class is not found in either the parent classloader or the urls , the mlet should delegate to its containing mbeanserver's classloaderrepository ."}{"idx": 50886, "node_name": "url", "Dec": "the url to be added to the search path of urls"}{"idx": 50888, "node_name": "url", "Dec": "the url to add ."}{"idx": 50891, "node_name": "url", "Dec": "the url of the text file to be loaded as url object ."}{"idx": 50893, "node_name": "url", "Dec": "the url of the text file to be loaded as string object ."}{"idx": 50896, "node_name": "libdir", "Dec": "the directory used by the library loader ."}{"idx": 50898, "node_name": "server", "Dec": "the mbean server in which the m-let will be registered ."}{"idx": 50899, "node_name": "name", "Dec": "the object name of the m-let ."}{"idx": 50901, "node_name": "registrationdone", "Dec": "indicates whether or not the m-let has been successfully registered in the mbean server . the value false means that either the registration phase has failed ."}{"idx": 50905, "node_name": "out", "Dec": "the object output stream to write to ."}{"idx": 50907, "node_name": "in", "Dec": "the object input stream to read from ."}{"idx": 50909, "node_name": "name", "Dec": "the name of the class we want to load ."}{"idx": 50910, "node_name": "clr", "Dec": "the classloaderrepository that will be used to search for the given class , if it is not found in this classloader . may be null ."}{"idx": 50912, "node_name": "name", "Dec": "the name of the class ."}{"idx": 50914, "node_name": "libname", "Dec": "the library name ."}{"idx": 50916, "node_name": "version", "Dec": "the version number of the .jar file stored locally ."}{"idx": 50917, "node_name": "codebase", "Dec": "the base url of the remote .jar file ."}{"idx": 50918, "node_name": "jarfile", "Dec": "the name of the .jar file to be loaded ."}{"idx": 50919, "node_name": "mlet", "Dec": "the mletcontent instance that represents the mlet tag ."}{"idx": 50922, "node_name": "url", "Dec": "the url of the mlet text file containing the mlet tag ."}{"idx": 50923, "node_name": "attributes", "Dec": "a map of the attributes of the mlet tag . the keys in this map are the attribute names in lowercase , for example codebase . the values are the associated attribute values ."}{"idx": 50924, "node_name": "types", "Dec": "a list of the type attributes that appeared in nested < param > tags ."}{"idx": 50925, "node_name": "values", "Dec": "a list of the value attributes that appeared in nested < param > tags ."}{"idx": 50938, "node_name": "url", "Dec": "the url of the text file to be loaded as string object ."}{"idx": 50940, "node_name": "url", "Dec": "the url of the text file to be loaded as url object ."}{"idx": 50942, "node_name": "url", "Dec": "the url to add ."}{"idx": 50944, "node_name": "url", "Dec": "the url to add ."}{"idx": 50947, "node_name": "name", "Dec": "the resource name"}{"idx": 50949, "node_name": "name", "Dec": "the resource name"}{"idx": 50951, "node_name": "name", "Dec": "the resource name ."}{"idx": 50954, "node_name": "libdir", "Dec": "the directory used by the library loader ."}{"idx": 50958, "node_name": "urls", "Dec": "the urls from which to load classes and resources ."}{"idx": 50959, "node_name": "delegatetoclr", "Dec": "true if , when a class is not found in either the parent classloader or the urls , the mlet should delegate to its containing mbeanserver's classloaderrepository ."}{"idx": 50961, "node_name": "urls", "Dec": "the urls from which to load classes and resources ."}{"idx": 50962, "node_name": "parent", "Dec": "the parent class loader for delegation ."}{"idx": 50963, "node_name": "delegatetoclr", "Dec": "true if , when a class is not found in either the parent classloader or the urls , the mlet should delegate to its containing mbeanserver's classloaderrepository ."}{"idx": 50965, "node_name": "urls", "Dec": "the urls from which to load classes and resources ."}{"idx": 50966, "node_name": "parent", "Dec": "the parent class loader for delegation ."}{"idx": 50967, "node_name": "factory", "Dec": "the urlstreamhandlerfactory to use when creating urls ."}{"idx": 50968, "node_name": "delegatetoclr", "Dec": "true if , when a class is not found in either the parent classloader or the urls , the mlet should delegate to its containing mbeanserver's classloaderrepository ."}{"idx": 50972, "node_name": "message", "Dec": "the detail message ."}{"idx": 50975, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 50976, "node_name": "type", "Dec": "the type or class name of the attribute ."}{"idx": 50977, "node_name": "description", "Dec": "a human readable description of the attribute ."}{"idx": 50978, "node_name": "isreadable", "Dec": "true if the attribute has a getter method , false otherwise ."}{"idx": 50979, "node_name": "iswritable", "Dec": "true if the attribute has a setter method , false otherwise ."}{"idx": 50980, "node_name": "isis", "Dec": "true if this attribute has an \" is \" getter , false otherwise ."}{"idx": 50982, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 50983, "node_name": "type", "Dec": "the type or class name of the attribute ."}{"idx": 50984, "node_name": "description", "Dec": "a human readable description of the attribute ."}{"idx": 50985, "node_name": "isreadable", "Dec": "true if the attribute has a getter method , false otherwise ."}{"idx": 50986, "node_name": "iswritable", "Dec": "true if the attribute has a setter method , false otherwise ."}{"idx": 50987, "node_name": "isis", "Dec": "true if this attribute has an \" is \" getter , false otherwise ."}{"idx": 50988, "node_name": "descriptor", "Dec": "the descriptor for the attribute . this may be null which is equivalent to an empty descriptor ."}{"idx": 50990, "node_name": "name", "Dec": "the programmatic name of the attribute ."}{"idx": 50991, "node_name": "description", "Dec": "a human readable description of the attribute ."}{"idx": 50992, "node_name": "getter", "Dec": "the method used for reading the attribute value . may be null if the property is write-only ."}{"idx": 50993, "node_name": "setter", "Dec": "the method used for writing the attribute value . may be null if the attribute is read-only ."}{"idx": 51000, "node_name": "o", "Dec": "the object to compare to ."}{"idx": 51003, "node_name": "description", "Dec": "a human readable description of the operation ."}{"idx": 51004, "node_name": "constructor", "Dec": "the java.lang.reflect.constructor object describing the mbean constructor ."}{"idx": 51006, "node_name": "name", "Dec": "the name of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[]) ."}{"idx": 51007, "node_name": "signature", "Dec": "mbeanparameterinfo objects describing the parameters ( arguments ) of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[]) . this may be null with the same effect as a zero-length array ."}{"idx": 51008, "node_name": "description", "Dec": "a human readable description of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[]) ."}{"idx": 51010, "node_name": "name", "Dec": "the name of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[],javax.management.Descriptor) ."}{"idx": 51011, "node_name": "signature", "Dec": "mbeanparameterinfo objects describing the parameters ( arguments ) of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[],javax.management.Descriptor) . this may be null with the same effect as a zero-length array ."}{"idx": 51012, "node_name": "description", "Dec": "a human readable description of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[],javax.management.Descriptor) ."}{"idx": 51013, "node_name": "descriptor", "Dec": "the descriptor for <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[],javax.management.Descriptor) . this may be null which is equivalent to an empty descriptor ."}{"idx": 51017, "node_name": "o", "Dec": "the object to compare to ."}{"idx": 51020, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 51022, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 51023, "node_name": "message", "Dec": "the detail message ."}{"idx": 51030, "node_name": "name", "Dec": "the name of the feature ."}{"idx": 51031, "node_name": "description", "Dec": "a human readable description of the feature ."}{"idx": 51033, "node_name": "name", "Dec": "the name of the feature ."}{"idx": 51034, "node_name": "description", "Dec": "a human readable description of the feature ."}{"idx": 51035, "node_name": "descriptor", "Dec": "the descriptor for the feature . this may be null which is equivalent to an empty descriptor ."}{"idx": 51040, "node_name": "o", "Dec": "the object to compare to ."}{"idx": 51043, "node_name": "classname", "Dec": "the name of the java class of the mbean described by this mbeaninfo . this value may be any syntactically legal java class name . it does not have to be a java class known to the mbean server or to the mbean's classloader . if it is a java class known to the mbean's classloader , it is recommended but not required that the class's public methods include those that would appear in a standard mbean implementing the attributes and operations in this mbeaninfo ."}{"idx": 51044, "node_name": "description", "Dec": "a human readable description of the mbean ( optional ) ."}{"idx": 51045, "node_name": "attributes", "Dec": "the list of exposed attributes of the mbean . this may be null with the same effect as a zero-length array ."}{"idx": 51046, "node_name": "constructors", "Dec": "the list of public constructors of the mbean . this may be null with the same effect as a zero-length array ."}{"idx": 51047, "node_name": "operations", "Dec": "the list of operations of the mbean . this may be null with the same effect as a zero-length array ."}{"idx": 51048, "node_name": "notifications", "Dec": "the list of notifications emitted . this may be null with the same effect as a zero-length array ."}{"idx": 51050, "node_name": "classname", "Dec": "the name of the java class of the mbean described by this mbeaninfo . this value may be any syntactically legal java class name . it does not have to be a java class known to the mbean server or to the mbean's classloader . if it is a java class known to the mbean's classloader , it is recommended but not required that the class's public methods include those that would appear in a standard mbean implementing the attributes and operations in this mbeaninfo ."}{"idx": 51051, "node_name": "description", "Dec": "a human readable description of the mbean ( optional ) ."}{"idx": 51052, "node_name": "attributes", "Dec": "the list of exposed attributes of the mbean . this may be null with the same effect as a zero-length array ."}{"idx": 51053, "node_name": "constructors", "Dec": "the list of public constructors of the mbean . this may be null with the same effect as a zero-length array ."}{"idx": 51054, "node_name": "operations", "Dec": "the list of operations of the mbean . this may be null with the same effect as a zero-length array ."}{"idx": 51055, "node_name": "notifications", "Dec": "the list of notifications emitted . this may be null with the same effect as a zero-length array ."}{"idx": 51056, "node_name": "descriptor", "Dec": "the descriptor for the mbean . this may be null which is equivalent to an empty descriptor ."}{"idx": 51066, "node_name": "o", "Dec": "the object to compare to ."}{"idx": 51069, "node_name": "notiftypes", "Dec": "the array of strings ( in dot notation ) containing the notification types that the mbean may emit . this may be null with the same effect as a zero-length array ."}{"idx": 51070, "node_name": "name", "Dec": "the fully qualified java class name of the described notifications ."}{"idx": 51071, "node_name": "description", "Dec": "a human readable description of the data ."}{"idx": 51073, "node_name": "notiftypes", "Dec": "the array of strings ( in dot notation ) containing the notification types that the mbean may emit . this may be null with the same effect as a zero-length array ."}{"idx": 51074, "node_name": "name", "Dec": "the fully qualified java class name of the described notifications ."}{"idx": 51075, "node_name": "description", "Dec": "a human readable description of the data ."}{"idx": 51076, "node_name": "descriptor", "Dec": "the descriptor for the notifications . this may be null which is equivalent to an empty descriptor ."}{"idx": 51080, "node_name": "o", "Dec": "the object to compare to ."}{"idx": 51087, "node_name": "method", "Dec": "the java.lang.reflect.method object describing the mbean operation ."}{"idx": 51088, "node_name": "description", "Dec": "a human readable description of the operation ."}{"idx": 51090, "node_name": "name", "Dec": "the name of the method ."}{"idx": 51091, "node_name": "description", "Dec": "a human readable description of the operation ."}{"idx": 51092, "node_name": "signature", "Dec": "mbeanparameterinfo objects describing the parameters ( arguments ) of the method . this may be null with the same effect as a zero-length array ."}{"idx": 51093, "node_name": "type", "Dec": "the type of the method's return value ."}{"idx": 51094, "node_name": "impact", "Dec": "the impact of the method , one of info , action , action_info , unknown ."}{"idx": 51096, "node_name": "name", "Dec": "the name of the method ."}{"idx": 51097, "node_name": "description", "Dec": "a human readable description of the operation ."}{"idx": 51098, "node_name": "signature", "Dec": "mbeanparameterinfo objects describing the parameters ( arguments ) of the method . this may be null with the same effect as a zero-length array ."}{"idx": 51099, "node_name": "type", "Dec": "the type of the method's return value ."}{"idx": 51100, "node_name": "impact", "Dec": "the impact of the method , one of info , action , action_info , unknown ."}{"idx": 51101, "node_name": "descriptor", "Dec": "the descriptor for the operation . this may be null which is equivalent to an empty descriptor ."}{"idx": 51107, "node_name": "o", "Dec": "the object to compare to ."}{"idx": 51110, "node_name": "name", "Dec": "the name of the data"}{"idx": 51111, "node_name": "type", "Dec": "the type or class name of the data"}{"idx": 51112, "node_name": "description", "Dec": "a human readable description of the data . optional ."}{"idx": 51114, "node_name": "name", "Dec": "the name of the data"}{"idx": 51115, "node_name": "type", "Dec": "the type or class name of the data"}{"idx": 51116, "node_name": "description", "Dec": "a human readable description of the data . optional ."}{"idx": 51117, "node_name": "descriptor", "Dec": "the descriptor for the operation . this may be null which is equivalent to an empty descriptor ."}{"idx": 51121, "node_name": "o", "Dec": "the object to compare to ."}{"idx": 51124, "node_name": "name", "Dec": "the triplet \" classname #member [ objectname ]\" ."}{"idx": 51125, "node_name": "actions", "Dec": "the action string ."}{"idx": 51127, "node_name": "classname", "Dec": "the class name to which this permission applies . may be null or \""}{"idx": 51128, "node_name": "member", "Dec": "the member to which this permission applies . may be null or \""}{"idx": 51129, "node_name": "objectname", "Dec": "the object name to which this permission applies . may be null , which represents an object name that is implied by any object name but does not imply any other object name ."}{"idx": 51130, "node_name": "actions", "Dec": "the action string ."}{"idx": 51134, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 51136, "node_name": "obj", "Dec": "the object we are testing for equality with this object ."}{"idx": 51139, "node_name": "server", "Dec": "the mbean server in which the mbean will be registered ."}{"idx": 51140, "node_name": "name", "Dec": "the object name of the mbean . this name is null if the name parameter to one of the creatembean or registermbean methods in the mbeanserver interface is null . in that case , preRegister(javax.management.MBeanServer,javax.management.ObjectName) must return a non-null objectname for the new mbean ."}{"idx": 51142, "node_name": "registrationdone", "Dec": "indicates whether or not the mbean has been successfully registered in the mbean server . the value false means that the registration phase has failed ."}{"idx": 51147, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 51149, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 51150, "node_name": "message", "Dec": "the detail message ."}{"idx": 51153, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 51154, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 51156, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 51157, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 51158, "node_name": "loadername", "Dec": "the object name of the class loader to be used ."}{"idx": 51160, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 51161, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 51162, "node_name": "params", "Dec": "an array containing the parameters of the constructor to be invoked ."}{"idx": 51163, "node_name": "signature", "Dec": "an array containing the signature of the constructor to be invoked ."}{"idx": 51165, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 51166, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 51167, "node_name": "loadername", "Dec": "the object name of the class loader to be used ."}{"idx": 51168, "node_name": "params", "Dec": "an array containing the parameters of the constructor to be invoked ."}{"idx": 51169, "node_name": "signature", "Dec": "an array containing the signature of the constructor to be invoked ."}{"idx": 51171, "node_name": "object", "Dec": "the mbean to be registered as an mbean ."}{"idx": 51172, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 51174, "node_name": "name", "Dec": "the object name of the mbean to be unregistered ."}{"idx": 51176, "node_name": "name", "Dec": "the object name pattern identifying the mbeans to be retrieved . if null or no domain and key properties are specified , all the mbeans registered will be retrieved ."}{"idx": 51177, "node_name": "query", "Dec": "the query expression to be applied for selecting mbeans . if null no query expression will be applied for selecting mbeans ."}{"idx": 51179, "node_name": "name", "Dec": "the object name pattern identifying the mbean names to be retrieved . if null or no domain and key properties are specified , the name of all registered mbeans will be retrieved ."}{"idx": 51180, "node_name": "query", "Dec": "the query expression to be applied for selecting mbeans . if null no query expression will be applied for selecting mbeans ."}{"idx": 51182, "node_name": "name", "Dec": "the object name of the mbean to be checked ."}{"idx": 51185, "node_name": "name", "Dec": "the object name of the mbean from which the attribute is to be retrieved ."}{"idx": 51186, "node_name": "attribute", "Dec": "a string specifying the name of the attribute to be retrieved ."}{"idx": 51188, "node_name": "name", "Dec": "the object name of the mbean from which the attributes are retrieved ."}{"idx": 51189, "node_name": "attributes", "Dec": "a list of the attributes to be retrieved ."}{"idx": 51191, "node_name": "name", "Dec": "the name of the mbean within which the attribute is to be set ."}{"idx": 51192, "node_name": "attribute", "Dec": "the identification of the attribute to be set and the value it is to be set to ."}{"idx": 51194, "node_name": "name", "Dec": "the object name of the mbean within which the attributes are to be set ."}{"idx": 51195, "node_name": "attributes", "Dec": "a list of attributes : the identification of the attributes to be set and the values they are to be set to ."}{"idx": 51197, "node_name": "name", "Dec": "the name of the mbean on which the listener should be added ."}{"idx": 51198, "node_name": "listener", "Dec": "the listener object which will handle the notifications emitted by the registered mbean ."}{"idx": 51199, "node_name": "filter", "Dec": "the filter object . if filter is null , no filtering will be performed before handling notifications ."}{"idx": 51200, "node_name": "handback", "Dec": "the context to be sent to the listener when a notification is emitted ."}{"idx": 51202, "node_name": "name", "Dec": "the name of the mbean on which the listener should be added ."}{"idx": 51203, "node_name": "listener", "Dec": "the object name of the listener which will handle the notifications emitted by the registered mbean ."}{"idx": 51204, "node_name": "filter", "Dec": "the filter object . if filter is null , no filtering will be performed before handling notifications ."}{"idx": 51205, "node_name": "handback", "Dec": "the context to be sent to the listener when a notification is emitted ."}{"idx": 51207, "node_name": "classname", "Dec": "the class name of the object to be instantiated ."}{"idx": 51209, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 51210, "node_name": "loadername", "Dec": "the object name of the class loader to be used ."}{"idx": 51212, "node_name": "classname", "Dec": "the class name of the object to be instantiated ."}{"idx": 51213, "node_name": "params", "Dec": "an array containing the parameters of the constructor to be invoked ."}{"idx": 51214, "node_name": "signature", "Dec": "an array containing the signature of the constructor to be invoked ."}{"idx": 51216, "node_name": "classname", "Dec": "the class name of the object to be instantiated ."}{"idx": 51217, "node_name": "params", "Dec": "an array containing the parameters of the constructor to be invoked ."}{"idx": 51218, "node_name": "signature", "Dec": "an array containing the signature of the constructor to be invoked ."}{"idx": 51219, "node_name": "loadername", "Dec": "the object name of the class loader to be used ."}{"idx": 51221, "node_name": "mbeanname", "Dec": "the objectname of the mbean ."}{"idx": 51223, "node_name": "loadername", "Dec": "the objectname of the classloader . may be null , in which case the mbean server's own classloader is returned ."}{"idx": 51229, "node_name": "defaultdomain", "Dec": "default domain of the new mbeanserver ."}{"idx": 51230, "node_name": "outer", "Dec": "a pointer to the mbeanserver object that must be passed to the mbeans when invoking their mbeanregistration interface ."}{"idx": 51231, "node_name": "delegate", "Dec": "a pointer to the mbeanserverdelegate associated with the new mbeanserver . the new mbeanserver must register this mbean in its mbean repository ."}{"idx": 51234, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 51235, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 51237, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 51238, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 51239, "node_name": "loadername", "Dec": "the object name of the class loader to be used ."}{"idx": 51241, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 51242, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 51243, "node_name": "params", "Dec": "an array containing the parameters of the constructor to be invoked ."}{"idx": 51244, "node_name": "signature", "Dec": "an array containing the signature of the constructor to be invoked ."}{"idx": 51246, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 51247, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 51248, "node_name": "params", "Dec": "an array containing the parameters of the constructor to be invoked ."}{"idx": 51249, "node_name": "signature", "Dec": "an array containing the signature of the constructor to be invoked ."}{"idx": 51250, "node_name": "loadername", "Dec": "the object name of the class loader to be used ."}{"idx": 51252, "node_name": "name", "Dec": "the object name of the mbean to be unregistered ."}{"idx": 51254, "node_name": "name", "Dec": "the object name of the mbean ."}{"idx": 51256, "node_name": "name", "Dec": "the object name pattern identifying the mbeans to be retrieved . if null or no domain and key properties are specified , all the mbeans registered will be retrieved ."}{"idx": 51257, "node_name": "query", "Dec": "the query expression to be applied for selecting mbeans . if null no query expression will be applied for selecting mbeans ."}{"idx": 51259, "node_name": "name", "Dec": "the object name pattern identifying the mbean names to be retrieved . if null or no domain and key properties are specified , the name of all registered mbeans will be retrieved ."}{"idx": 51260, "node_name": "query", "Dec": "the query expression to be applied for selecting mbeans . if null no query expression will be applied for selecting mbeans ."}{"idx": 51262, "node_name": "name", "Dec": "the object name of the mbean to be checked ."}{"idx": 51265, "node_name": "name", "Dec": "the object name of the mbean from which the attribute is to be retrieved ."}{"idx": 51266, "node_name": "attribute", "Dec": "a string specifying the name of the attribute to be retrieved ."}{"idx": 51268, "node_name": "name", "Dec": "the object name of the mbean from which the attributes are retrieved ."}{"idx": 51269, "node_name": "attributes", "Dec": "a list of the attributes to be retrieved ."}{"idx": 51271, "node_name": "name", "Dec": "the name of the mbean within which the attribute is to be set ."}{"idx": 51272, "node_name": "attribute", "Dec": "the identification of the attribute to be set and the value it is to be set to ."}{"idx": 51274, "node_name": "name", "Dec": "the object name of the mbean within which the attributes are to be set ."}{"idx": 51275, "node_name": "attributes", "Dec": "a list of attributes : the identification of the attributes to be set and the values they are to be set to ."}{"idx": 51277, "node_name": "name", "Dec": "the object name of the mbean on which invoke(javax.management.ObjectName,java.lang.String,java.lang.Object[],java.lang.String[]) is to be invoked ."}{"idx": 51278, "node_name": "operationname", "Dec": "the name of the operation to be invoked ."}{"idx": 51279, "node_name": "params", "Dec": "an array containing the parameters to be set when the operation is invoked"}{"idx": 51280, "node_name": "signature", "Dec": "an array containing the signature of the operation , an array of class names in the format returned by class.getname() . the class objects will be loaded using the same class loader as the one used for loading the mbean on which the operation was invoked ."}{"idx": 51284, "node_name": "name", "Dec": "the name of the mbean on which the listener should be added ."}{"idx": 51285, "node_name": "listener", "Dec": "the listener object which will handle the notifications emitted by the registered mbean ."}{"idx": 51286, "node_name": "filter", "Dec": "the filter object . if filter is null , no filtering will be performed before handling notifications ."}{"idx": 51287, "node_name": "handback", "Dec": "the context to be sent to the listener when a notification is emitted ."}{"idx": 51289, "node_name": "name", "Dec": "the name of the mbean on which the listener should be added ."}{"idx": 51290, "node_name": "listener", "Dec": "the object name of the listener which will handle the notifications emitted by the registered mbean ."}{"idx": 51291, "node_name": "filter", "Dec": "the filter object . if filter is null , no filtering will be performed before handling notifications ."}{"idx": 51292, "node_name": "handback", "Dec": "the context to be sent to the listener when a notification is emitted ."}{"idx": 51294, "node_name": "name", "Dec": "the name of the mbean on which the listener should be removed ."}{"idx": 51295, "node_name": "listener", "Dec": "the object name of the listener to be removed ."}{"idx": 51297, "node_name": "name", "Dec": "the name of the mbean on which the listener should be removed ."}{"idx": 51298, "node_name": "listener", "Dec": "the object name of the listener to be removed ."}{"idx": 51299, "node_name": "filter", "Dec": "the filter that was specified when the listener was added ."}{"idx": 51300, "node_name": "handback", "Dec": "the handback that was specified when the listener was added ."}{"idx": 51302, "node_name": "name", "Dec": "the name of the mbean on which the listener should be removed ."}{"idx": 51303, "node_name": "listener", "Dec": "the listener to be removed ."}{"idx": 51305, "node_name": "name", "Dec": "the name of the mbean on which the listener should be removed ."}{"idx": 51306, "node_name": "listener", "Dec": "the listener to be removed ."}{"idx": 51307, "node_name": "filter", "Dec": "the filter that was specified when the listener was added ."}{"idx": 51308, "node_name": "handback", "Dec": "the handback that was specified when the listener was added ."}{"idx": 51310, "node_name": "name", "Dec": "the name of the mbean to analyze"}{"idx": 51312, "node_name": "name", "Dec": "the objectname of the mbean ."}{"idx": 51313, "node_name": "classname", "Dec": "the name of the class ."}{"idx": 51325, "node_name": "notification", "Dec": "the notification to send ."}{"idx": 51336, "node_name": "mbeanserver", "Dec": "the mbeanserver object to remove ."}{"idx": 51339, "node_name": "domain", "Dec": "the default domain name for the created mbeanserver . this is the value that will be returned by mbeanserverconnection.getdefaultdomain() ."}{"idx": 51342, "node_name": "domain", "Dec": "the default domain name for the created mbeanserver . this is the value that will be returned by mbeanserverconnection.getdefaultdomain() ."}{"idx": 51344, "node_name": "agentid", "Dec": "the agent identifier of the mbeanserver to retrieve . if this parameter is null , all registered mbeanservers in this jvm are returned . otherwise , only mbeanservers whose id is equal to agentid are returned . the id of an mbeanserver is the mbeanserverid attribute of its delegate mbean ."}{"idx": 51346, "node_name": "server", "Dec": "the mbeanserver under examination . since jmx 1.2 , if server is null , the result is a nullpointerexception . this behavior differs from what was implemented in jmx 1.1"}{"idx": 51349, "node_name": "connection", "Dec": "the mbean server connection through which all methods of a proxy using this handler will be forwarded ."}{"idx": 51350, "node_name": "objectname", "Dec": "the name of the mbean within the mbean server to which methods will be forwarded ."}{"idx": 51352, "node_name": "connection", "Dec": "the mbean server connection through which all methods of a proxy using this handler will be forwarded ."}{"idx": 51353, "node_name": "objectname", "Dec": "the name of the mbean within the mbean server to which methods will be forwarded ."}{"idx": 51354, "node_name": "ismxbean", "Dec": "if true , the proxy is for an mxbean , and appropriate mappings will be applied to method parameters and return values ."}{"idx": 51359, "node_name": "connection", "Dec": "the mbean server to forward to ."}{"idx": 51360, "node_name": "objectname", "Dec": "the name of the mbean within connection to forward to ."}{"idx": 51361, "node_name": "interfaceclass", "Dec": "the management interface that the mbean exports , which will also be implemented by the returned proxy ."}{"idx": 51362, "node_name": "notificationbroadcaster", "Dec": "make the returned proxy implement notificationemitter by forwarding its methods via connection . a call to notificationbroadcaster.addnotificationlistener ( javax.management.notificationlistener , javax.management.notificationfilter , java.lang.object ) on the proxy will result in a call to mbeanserverconnection.addnotificationlistener ( objectname , notificationlistener , notificationfilter , object ) , and likewise for the other methods of notificationbroadcaster and notificationemitter ."}{"idx": 51367, "node_name": "type", "Dec": "a string denoting the type of the notification . set it to one these values : registration_notification , unregistration_notification ."}{"idx": 51368, "node_name": "source", "Dec": "the mbeanservernotification object responsible for forwarding mbean server notification ."}{"idx": 51369, "node_name": "sequencenumber", "Dec": "a sequence number that can be used to order received notifications ."}{"idx": 51370, "node_name": "objectname", "Dec": "the object name of the mbean that caused the notification ."}{"idx": 51374, "node_name": "name", "Dec": "the name of the granted permission . it must respect the constraints spelt out in the description of the mbeanserverpermission class ."}{"idx": 51376, "node_name": "name", "Dec": "the name of the granted permission . it must respect the constraints spelt out in the description of the mbeanserverpermission class ."}{"idx": 51377, "node_name": "actions", "Dec": "the associated actions . this parameter is not currently used and must be null or the empty string ."}{"idx": 51379, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 51381, "node_name": "obj", "Dec": "the object we are testing for equality with this object ."}{"idx": 51384, "node_name": "name", "Dec": "the name of the permission . it must be \" register \" or \" * \" for this permission ."}{"idx": 51386, "node_name": "name", "Dec": "the name of the permission . it must be \" register \" or \" * \" for this permission ."}{"idx": 51387, "node_name": "actions", "Dec": "the actions for the permission . it must be null or \"\" ."}{"idx": 51391, "node_name": "initnumfields", "Dec": "the initial capacity of the map that stores the descriptor fields ."}{"idx": 51393, "node_name": "indescr", "Dec": "the descriptor to be used to initialize the constructed descriptor . if it is null or contains no descriptor fields , an empty descriptor will be created ."}{"idx": 51395, "node_name": "instr", "Dec": "an xml-formatted string used to populate this descriptor . the format is not defined , but any implementation must ensure that the string returned by method toxmlstring on an existing descriptor can be used to instantiate an equivalent descriptor when instantiated using <init>(java.lang.String) ."}{"idx": 51397, "node_name": "fieldnames", "Dec": "string array of field names . no elements of this array can be null ."}{"idx": 51398, "node_name": "fieldvalues", "Dec": "object array of the corresponding field values . elements of the array can be null . the fieldvalue must be valid for the fieldname ( as defined in method isvalid ) note : array sizes of parameters should match . if both arrays are empty , then an empty descriptor is created ."}{"idx": 51400, "node_name": "fields", "Dec": "string array with each element containing a field name and value . if this array is null or empty , then the default constructor will be executed . null strings or empty strings will be ignored . all field values should be strings . if the field values are not strings , the programmer will have to reset or convert these fields correctly . note : each string should be of the form fieldname=fieldvalue . the field name ends at the first = character ; for example if the string is a =b =c then the field name is a and its value is b=c ."}{"idx": 51403, "node_name": "o", "Dec": "the object to compare with ."}{"idx": 51411, "node_name": "s", "Dec": "string value that will be incorporated in the message for this exception ."}{"idx": 51413, "node_name": "e", "Dec": "exception that we may have caught to reissue as an invalidtargetobjecttypeexception . the message will be used , and we may want to consider overriding the printstacktrace() methods to get data pointing back to original throw stack ."}{"idx": 51414, "node_name": "s", "Dec": "string value that will be incorporated in message for this exception ."}{"idx": 51417, "node_name": "inmodelmbeaninfo", "Dec": "the modelmbeaninfo object to be used by the modelmbean ."}{"idx": 51419, "node_name": "mr", "Dec": "object that is the managed resource"}{"idx": 51420, "node_name": "mr_type", "Dec": "the type of reference for the managed resource . can be : objectreference , handle , ior , ejbhandle , rmireference . if the mbeanserver cannot process the mr_type passed in , an invalidtargettypeexception will be thrown ."}{"idx": 51423, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 51424, "node_name": "description", "Dec": "a human readable description of the attribute . optional ."}{"idx": 51425, "node_name": "getter", "Dec": "the method used for reading the attribute value . may be null if the property is write-only ."}{"idx": 51426, "node_name": "setter", "Dec": "the method used for writing the attribute value . may be null if the attribute is read-only ."}{"idx": 51428, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 51429, "node_name": "description", "Dec": "a human readable description of the attribute . optional ."}{"idx": 51430, "node_name": "getter", "Dec": "the method used for reading the attribute value . may be null if the property is write-only ."}{"idx": 51431, "node_name": "setter", "Dec": "the method used for writing the attribute value . may be null if the attribute is read-only ."}{"idx": 51432, "node_name": "descriptor", "Dec": "an instance of descriptor containing the appropriate metadata for this instance of the attribute . if it is null , then a default descriptor will be created . if the descriptor does not contain the field \" displayname \" this field is added in the descriptor with its default value ."}{"idx": 51434, "node_name": "name", "Dec": "the name of the attribute"}{"idx": 51435, "node_name": "type", "Dec": "the type or class name of the attribute"}{"idx": 51436, "node_name": "description", "Dec": "a human readable description of the attribute ."}{"idx": 51437, "node_name": "isreadable", "Dec": "true if the attribute has a getter method , false otherwise ."}{"idx": 51438, "node_name": "iswritable", "Dec": "true if the attribute has a setter method , false otherwise ."}{"idx": 51439, "node_name": "isis", "Dec": "true if the attribute has an \" is \" getter , false otherwise ."}{"idx": 51441, "node_name": "name", "Dec": "the name of the attribute"}{"idx": 51442, "node_name": "type", "Dec": "the type or class name of the attribute"}{"idx": 51443, "node_name": "description", "Dec": "a human readable description of the attribute ."}{"idx": 51444, "node_name": "isreadable", "Dec": "true if the attribute has a getter method , false otherwise ."}{"idx": 51445, "node_name": "iswritable", "Dec": "true if the attribute has a setter method , false otherwise ."}{"idx": 51446, "node_name": "isis", "Dec": "true if the attribute has an \" is \" getter , false otherwise ."}{"idx": 51447, "node_name": "descriptor", "Dec": "an instance of descriptor containing the appropriate metadata for this instance of the attribute . if it is null then a default descriptor will be created . if the descriptor does not contain the field \" displayname \" this field is added in the descriptor with its default value ."}{"idx": 51449, "node_name": "ininfo", "Dec": "the modelmbeanattributeinfo to be duplicated"}{"idx": 51452, "node_name": "indescriptor", "Dec": "replaces the descriptor associated with the modelmbeanattributeinfo"}{"idx": 51457, "node_name": "description", "Dec": "a human readable description of <init>(java.lang.String,java.lang.reflect.Constructor) ."}{"idx": 51458, "node_name": "constructormethod", "Dec": "the java.lang.reflect.constructor object describing the mbean constructor ."}{"idx": 51460, "node_name": "description", "Dec": "a human readable description of <init>(java.lang.String,java.lang.reflect.Constructor,javax.management.Descriptor) ."}{"idx": 51461, "node_name": "constructormethod", "Dec": "the java.lang.reflect.constructor object describing the modelmbean constructor ."}{"idx": 51462, "node_name": "descriptor", "Dec": "an instance of descriptor containing the appropriate metadata for this instance of the modelmbeanconstructorinfo . if it is null , then a default descriptor will be created . if the descriptor does not contain the field \" displayname \" this field is added in the descriptor with its default value ."}{"idx": 51464, "node_name": "name", "Dec": "the name of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[]) ."}{"idx": 51465, "node_name": "description", "Dec": "a human readable description of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[]) ."}{"idx": 51466, "node_name": "signature", "Dec": "mbeanparameterinfo object array describing the parameters ( arguments ) of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[]) ."}{"idx": 51468, "node_name": "name", "Dec": "the name of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[],javax.management.Descriptor) ."}{"idx": 51469, "node_name": "description", "Dec": "a human readable description of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[],javax.management.Descriptor) ."}{"idx": 51470, "node_name": "signature", "Dec": "mbeanparameterinfo objects describing the parameters ( arguments ) of <init>(java.lang.String,java.lang.String,javax.management.MBeanParameterInfo[],javax.management.Descriptor) ."}{"idx": 51471, "node_name": "descriptor", "Dec": "an instance of descriptor containing the appropriate metadata for this instance of the mbeanconstructorinfo . if it is null then a default descriptor will be created . if the descriptor does not contain the field \" displayname \" this field is added in the descriptor with its default value ."}{"idx": 51475, "node_name": "indescriptor", "Dec": "replaces the descriptor associated with the modelmbeanconstructor . if the descriptor does not contain all the following fields , the missing ones are added with their default values : displayname , name , role , descriptortype ."}{"idx": 51479, "node_name": "indescriptortype", "Dec": "value of descriptortype field that must be set for the descriptor to be returned . must be \" mbean \" , \" attribute \" , \" operation \" , \" constructor \" or \" notification \" . if it is null or empty then all types will be returned ."}{"idx": 51481, "node_name": "indescriptors", "Dec": "the descriptors to be set in the modelmbeaninfo . null elements of the list will be ignored . all descriptors must have name and descriptortype fields ."}{"idx": 51483, "node_name": "indescriptorname", "Dec": "the name of the descriptor ."}{"idx": 51484, "node_name": "indescriptortype", "Dec": "the type of the descriptor being requested . if this is null or empty then all types are searched . valid types are ' mbean ' , ' attribute ' , ' constructor ' ' operation ' , and ' notification ' . this value will be equal to the ' descriptortype ' field in the descriptor that is returned ."}{"idx": 51486, "node_name": "indescriptor", "Dec": "the descriptor to be set in the modelmbean . it must not be null . all descriptors must have name and descriptortype fields ."}{"idx": 51487, "node_name": "indescriptortype", "Dec": "the type of the descriptor being set . if this is null then the descriptortype field in the descriptor is used . if specified this value must be set in the descriptortype field in the descriptor . must be \" mbean \" , \" attribute \" , \" constructor \" , \" operation \" , or \" notification \" ."}{"idx": 51490, "node_name": "indescriptor", "Dec": "the descriptor to set ."}{"idx": 51492, "node_name": "inname", "Dec": "the name of the modelmbeanattributeinfo to get . if no modelmbeanattributeinfo exists for this name null is returned ."}{"idx": 51494, "node_name": "inname", "Dec": "the name of the modelmbeanoperationinfo to get . if no modelmbeanoperationinfo exists for this name null is returned ."}{"idx": 51496, "node_name": "inname", "Dec": "the name of the modelmbeannotificationinfo to get . if no modelmbeannotificationinfo exists for this name null is returned ."}{"idx": 51506, "node_name": "mbi", "Dec": "the modelmbeaninfo instance from which the modelmbeaninfo being created is initialized ."}{"idx": 51508, "node_name": "classname", "Dec": "classname of the mbean"}{"idx": 51509, "node_name": "description", "Dec": "human readable description of the modelmbean"}{"idx": 51510, "node_name": "attributes", "Dec": "array of modelmbeanattributeinfo objects which have descriptors"}{"idx": 51511, "node_name": "constructors", "Dec": "array of modelmbeanconstructorinfo objects which have descriptors"}{"idx": 51512, "node_name": "operations", "Dec": "array of modelmbeanoperationinfo objects which have descriptors"}{"idx": 51513, "node_name": "notifications", "Dec": "array of modelmbeannotificationinfo objects which have descriptors"}{"idx": 51515, "node_name": "classname", "Dec": "classname of the mbean"}{"idx": 51516, "node_name": "description", "Dec": "human readable description of the modelmbean"}{"idx": 51517, "node_name": "attributes", "Dec": "array of modelmbeanattributeinfo objects which have descriptors"}{"idx": 51518, "node_name": "constructors", "Dec": "array of modelmbeanconstructorinfo objects which have descriptor"}{"idx": 51519, "node_name": "operations", "Dec": "array of modelmbeanoperationinfo objects which have descriptor"}{"idx": 51520, "node_name": "notifications", "Dec": "array of modelmbeannotificationinfo objects which have descriptor"}{"idx": 51521, "node_name": "mbeandescriptor", "Dec": "descriptor to be used as the mbeandescriptor containing mbean wide policy . if the descriptor is null , a default descriptor will be constructed . the default descriptor is : name=classname , descriptortype= \" mbean \" , displayname=classname , persistpolicy= \" never \" , log= \" f \" , visibility= \" 1 \" . if the descriptor does not contain all of these fields , the missing ones are added with these default values ."}{"idx": 51524, "node_name": "indescriptorname", "Dec": "the name of the descriptor ."}{"idx": 51526, "node_name": "inname", "Dec": "the name of the constructor ."}{"idx": 51530, "node_name": "ntfyobj", "Dec": "the notification which is to be passed to the ' handlenotification ' method of the listener object ."}{"idx": 51532, "node_name": "ntfytext", "Dec": "the text which is to be passed in the notification to the ' handlenotification ' method of the listener object . the constructed notification will be : type \" jmx.modelmbean.generic \" source this modelmbean instance sequence 1"}{"idx": 51534, "node_name": "notification", "Dec": "the notification which is to be passed to the ' handlenotification ' method of the listener object ."}{"idx": 51536, "node_name": "oldvalue", "Dec": "the original value for the attribute"}{"idx": 51537, "node_name": "newvalue", "Dec": "the current value for the attribute the constructed attributechangenotification will be : type \" jmx.attribute.change \" source this modelmbean instance sequence 1 attributename oldvalue.getname() attributetype oldvalue's class attributeoldvalue oldvalue.getvalue() attributenewvalue newvalue.getvalue()"}{"idx": 51539, "node_name": "listener", "Dec": "the listener object which will handles notifications emitted by the registered mbean ."}{"idx": 51540, "node_name": "attributename", "Dec": "the name of the modelmbean attribute for which to receive change notifications . if null , then all attribute changes will cause an attributechangenotification to be issued ."}{"idx": 51541, "node_name": "handback", "Dec": "the context to be sent to the listener with the notification when a notification is emitted ."}{"idx": 51543, "node_name": "listener", "Dec": "the listener name which was handling notifications emitted by the registered mbean . removeAttributeChangeNotificationListener(javax.management.NotificationListener,java.lang.String) will remove all information related to this listener ."}{"idx": 51544, "node_name": "attributename", "Dec": "the attribute for which the listener no longer wants to receive attributechangenotifications . if null the listener will be removed for all attributechangenotifications ."}{"idx": 51547, "node_name": "notiftypes", "Dec": "the array of strings ( in dot notation ) containing the notification types that may be emitted ."}{"idx": 51548, "node_name": "name", "Dec": "the name of the notification class ."}{"idx": 51549, "node_name": "description", "Dec": "a human readable description of the notification . optional ."}{"idx": 51551, "node_name": "notiftypes", "Dec": "the array of strings ( in dot notation ) containing the notification types that may be emitted ."}{"idx": 51552, "node_name": "name", "Dec": "the name of the notification class ."}{"idx": 51553, "node_name": "description", "Dec": "a human readable description of the notification . optional ."}{"idx": 51554, "node_name": "descriptor", "Dec": "an instance of descriptor containing the appropriate metadata for this instance of the mbeannotificationinfo . if it is null a default descriptor will be created . if the descriptor does not contain the fields \" displayname \" or \" severity \" , the missing ones are added with their default values ."}{"idx": 51556, "node_name": "ininfo", "Dec": "the modelmbeannotificationinfo to be duplicated"}{"idx": 51560, "node_name": "indescriptor", "Dec": "replaces the descriptor associated with the modelmbeannotification interface"}{"idx": 51564, "node_name": "operationmethod", "Dec": "the java.lang.reflect.method object describing the mbean operation ."}{"idx": 51565, "node_name": "description", "Dec": "a human readable description of the operation ."}{"idx": 51567, "node_name": "operationmethod", "Dec": "the java.lang.reflect.method object describing the mbean operation ."}{"idx": 51568, "node_name": "description", "Dec": "a human readable description of the operation ."}{"idx": 51569, "node_name": "descriptor", "Dec": "an instance of descriptor containing the appropriate metadata for this instance of the modelmbeanoperationinfo . if it is null a default descriptor will be created . if the descriptor does not contain the fields \" displayname \" or \" role \" , the missing ones are added with their default values ."}{"idx": 51571, "node_name": "name", "Dec": "the name of the method ."}{"idx": 51572, "node_name": "description", "Dec": "a human readable description of the operation ."}{"idx": 51573, "node_name": "signature", "Dec": "mbeanparameterinfo objects describing the parameters ( arguments ) of the method ."}{"idx": 51574, "node_name": "type", "Dec": "the type of the method's return value ."}{"idx": 51575, "node_name": "impact", "Dec": "the impact of the method , one of info , action , action_info , unknown ."}{"idx": 51577, "node_name": "name", "Dec": "the name of the method ."}{"idx": 51578, "node_name": "description", "Dec": "a human readable description of the operation ."}{"idx": 51579, "node_name": "signature", "Dec": "mbeanparameterinfo objects describing the parameters ( arguments ) of the method ."}{"idx": 51580, "node_name": "type", "Dec": "the type of the method's return value ."}{"idx": 51581, "node_name": "impact", "Dec": "the impact of the method , one of info , action , action_info , unknown ."}{"idx": 51582, "node_name": "descriptor", "Dec": "an instance of descriptor containing the appropriate metadata for this instance of the mbeanoperationinfo . if it is null then a default descriptor will be created . if the descriptor does not contain fields \" displayname \" or \" role \" , the missing ones are added with their default values ."}{"idx": 51584, "node_name": "ininfo", "Dec": "the modelmbeanoperationinfo to be duplicated"}{"idx": 51588, "node_name": "indescriptor", "Dec": "replaces the descriptor associated with the modelmbeanoperation ."}{"idx": 51593, "node_name": "mbi", "Dec": "the modelmbeaninfo object to be used by the requiredmodelmbean . the given modelmbeaninfo is cloned and modified as specified by setmodelmbeaninfo ( javax.management.modelmbean.modelmbeaninfo )"}{"idx": 51595, "node_name": "mbi", "Dec": "the modelmbeaninfo object to be used by the modelmbean ."}{"idx": 51597, "node_name": "mr", "Dec": "object that is the managed resource"}{"idx": 51598, "node_name": "mr_type", "Dec": "the type of reference for the managed resource . can be : \" objectreference \" , \" handle \" , \" ior \" , \" ejbhandle \" , or \" rmireference \" . in this implementation only \" objectreference \" is supported ."}{"idx": 51603, "node_name": "opname", "Dec": "the name of invoke(java.lang.String,java.lang.Object[],java.lang.String[]) to be invoked . the name can be the fully qualified method name including the classname , or just invoke(java.lang.String,java.lang.Object[],java.lang.String[]) name if the classname is defined in the ' class ' field of the operation descriptor ."}{"idx": 51604, "node_name": "opargs", "Dec": "an array containing the parameters to be set when the operation is invoked"}{"idx": 51605, "node_name": "sig", "Dec": "an array containing the signature of the operation . the class objects will be loaded using the same class loader as the one used for loading the mbean on which the operation was invoked ."}{"idx": 51607, "node_name": "attrname", "Dec": "a string specifying the name of the attribute to be retrieved . it must match the name of a modelmbeanattributeinfo ."}{"idx": 51609, "node_name": "attrnames", "Dec": "a string array of names of the attributes to be retrieved ."}{"idx": 51611, "node_name": "attribute", "Dec": "the attribute instance containing the name of the attribute to be set and the value it is to be set to ."}{"idx": 51613, "node_name": "attributes", "Dec": "a list of attributes : the identification of the attributes to be set and the values they are to be set to ."}{"idx": 51615, "node_name": "listener", "Dec": "the listener object which will handles notifications emitted by the registered mbean ."}{"idx": 51616, "node_name": "filter", "Dec": "the filter object . if null , no filtering will be performed before handling notifications ."}{"idx": 51617, "node_name": "handback", "Dec": "the context to be sent to the listener with the notification when a notification is emitted ."}{"idx": 51619, "node_name": "listener", "Dec": "the listener name which was handling notifications emitted by the registered mbean . removeNotificationListener(javax.management.NotificationListener) will remove all information related to this listener ."}{"idx": 51623, "node_name": "server", "Dec": "the mbean server in which the mbean will be registered ."}{"idx": 51624, "node_name": "name", "Dec": "the object name of the mbean . this name is null if the name parameter to one of the creatembean or registermbean methods in the mbeanserver interface is null . in that case , preRegister(javax.management.MBeanServer,javax.management.ObjectName) must return a non-null objectname for the new mbean ."}{"idx": 51626, "node_name": "registrationdone", "Dec": "indicates whether or not the mbean has been successfully registered in the mbean server . the value false means that the registration phase has failed ."}{"idx": 51632, "node_name": "s", "Dec": "the detail message ."}{"idx": 51634, "node_name": "e", "Dec": "the nested exception ."}{"idx": 51635, "node_name": "s", "Dec": "the detail message ."}{"idx": 51641, "node_name": "object", "Dec": "the name of the object whose derived gauge is to be returned ."}{"idx": 51643, "node_name": "object", "Dec": "the name of the object whose derived gauge timestamp is to be returned ."}{"idx": 51645, "node_name": "object", "Dec": "the name of the object whose threshold is to be returned ."}{"idx": 51648, "node_name": "value", "Dec": "the initial threshold value ."}{"idx": 51651, "node_name": "value", "Dec": "the offset value ."}{"idx": 51654, "node_name": "value", "Dec": "the modulus value ."}{"idx": 51657, "node_name": "value", "Dec": "the notification's on / off switch value ."}{"idx": 51660, "node_name": "value", "Dec": "the difference mode flag value ."}{"idx": 51664, "node_name": "object", "Dec": "the mbean for which the derived gauge is to be returned"}{"idx": 51666, "node_name": "object", "Dec": "the mbean for which the derived gauge timestamp is to be returned"}{"idx": 51668, "node_name": "object", "Dec": "the mbean for which the threshold value is to be returned"}{"idx": 51671, "node_name": "value", "Dec": "the initial threshold value ."}{"idx": 51674, "node_name": "value", "Dec": "the offset value ."}{"idx": 51677, "node_name": "value", "Dec": "the modulus value ."}{"idx": 51680, "node_name": "value", "Dec": "the notification's on / off switch value ."}{"idx": 51683, "node_name": "value", "Dec": "the difference mode flag value ."}{"idx": 51689, "node_name": "object", "Dec": "the name of the mbean ."}{"idx": 51691, "node_name": "object", "Dec": "the name of the object whose derived gauge timestamp is to be returned ."}{"idx": 51695, "node_name": "highvalue", "Dec": "the high threshold value ."}{"idx": 51696, "node_name": "lowvalue", "Dec": "the low threshold value ."}{"idx": 51699, "node_name": "value", "Dec": "the high notification's on / off switch value ."}{"idx": 51702, "node_name": "value", "Dec": "the low notification's on / off switch value ."}{"idx": 51705, "node_name": "value", "Dec": "the difference mode flag value ."}{"idx": 51709, "node_name": "object", "Dec": "the mbean for which the derived gauge is to be returned"}{"idx": 51711, "node_name": "object", "Dec": "the mbean for which the derived gauge timestamp is to be returned"}{"idx": 51715, "node_name": "highvalue", "Dec": "the high threshold value ."}{"idx": 51716, "node_name": "lowvalue", "Dec": "the low threshold value ."}{"idx": 51719, "node_name": "value", "Dec": "the high notification's on / off switch value ."}{"idx": 51722, "node_name": "value", "Dec": "the low notification's on / off switch value ."}{"idx": 51725, "node_name": "value", "Dec": "the difference mode flag value ."}{"idx": 51738, "node_name": "server", "Dec": "the mbean server in which the monitor mbean will be registered ."}{"idx": 51739, "node_name": "name", "Dec": "the object name of the monitor mbean ."}{"idx": 51741, "node_name": "registrationdone", "Dec": "indicates whether or not the mbean has been successfully registered in the mbean server . the value false means that the registration phase has failed ."}{"idx": 51747, "node_name": "object", "Dec": "the object to observe ."}{"idx": 51749, "node_name": "object", "Dec": "the object to remove ."}{"idx": 51751, "node_name": "object", "Dec": "the object to check ."}{"idx": 51755, "node_name": "attribute", "Dec": "the attribute to observe ."}{"idx": 51758, "node_name": "period", "Dec": "the granularity period value ."}{"idx": 51764, "node_name": "object", "Dec": "the object to observe ."}{"idx": 51766, "node_name": "object", "Dec": "the object to remove ."}{"idx": 51768, "node_name": "object", "Dec": "the object to check ."}{"idx": 51772, "node_name": "attribute", "Dec": "the attribute to observe ."}{"idx": 51775, "node_name": "period", "Dec": "the granularity period ."}{"idx": 51795, "node_name": "message", "Dec": "the specific error message ."}{"idx": 51801, "node_name": "object", "Dec": "the name of the mbean whose derived gauge is required ."}{"idx": 51803, "node_name": "object", "Dec": "the name of the object whose derived gauge timestamp is to be returned ."}{"idx": 51806, "node_name": "value", "Dec": "the string value ."}{"idx": 51809, "node_name": "value", "Dec": "the matching notification's on / off switch value ."}{"idx": 51812, "node_name": "value", "Dec": "the differing notification's on / off switch value ."}{"idx": 51816, "node_name": "object", "Dec": "the mbean for which the derived gauge is to be returned"}{"idx": 51818, "node_name": "object", "Dec": "the mbean for which the derived gauge timestamp is to be returned"}{"idx": 51821, "node_name": "value", "Dec": "the string value ."}{"idx": 51824, "node_name": "value", "Dec": "the matching notification's on / off switch value ."}{"idx": 51827, "node_name": "value", "Dec": "the differing notification's on / off switch value ."}{"idx": 51832, "node_name": "message", "Dec": "the detail message ."}{"idx": 51836, "node_name": "type", "Dec": "the notification type ."}{"idx": 51837, "node_name": "source", "Dec": "the notification source ."}{"idx": 51838, "node_name": "sequencenumber", "Dec": "the notification sequence number within the source object ."}{"idx": 51840, "node_name": "type", "Dec": "the notification type ."}{"idx": 51841, "node_name": "source", "Dec": "the notification source ."}{"idx": 51842, "node_name": "sequencenumber", "Dec": "the notification sequence number within the source object ."}{"idx": 51843, "node_name": "message", "Dec": "the detailed message ."}{"idx": 51845, "node_name": "type", "Dec": "the notification type ."}{"idx": 51846, "node_name": "source", "Dec": "the notification source ."}{"idx": 51847, "node_name": "sequencenumber", "Dec": "the notification sequence number within the source object ."}{"idx": 51848, "node_name": "timestamp", "Dec": "the notification emission date ."}{"idx": 51850, "node_name": "type", "Dec": "the notification type ."}{"idx": 51851, "node_name": "source", "Dec": "the notification source ."}{"idx": 51852, "node_name": "sequencenumber", "Dec": "the notification sequence number within the source object ."}{"idx": 51853, "node_name": "timestamp", "Dec": "the notification emission date ."}{"idx": 51854, "node_name": "message", "Dec": "the detailed message ."}{"idx": 51856, "node_name": "source", "Dec": "the new source for this object ."}{"idx": 51859, "node_name": "sequencenumber", "Dec": "the notification sequence number within the source object . it is a serial number identifying a particular instance of notification in the context of the notification source ."}{"idx": 51863, "node_name": "timestamp", "Dec": "the notification timestamp . it indicates when the notification was generated ."}{"idx": 51867, "node_name": "userdata", "Dec": "the user data object . it is used for whatever data the notification source wishes to communicate to its consumers ."}{"idx": 51871, "node_name": "listener", "Dec": "the listener object which will handle the notifications emitted by the broadcaster ."}{"idx": 51872, "node_name": "filter", "Dec": "the filter object . if filter is null , no filtering will be performed before handling notifications ."}{"idx": 51873, "node_name": "handback", "Dec": "an opaque object to be sent back to the listener when a notification is emitted . this object cannot be used by the notification broadcaster object . it should be resent unchanged with the notification to the listener ."}{"idx": 51875, "node_name": "listener", "Dec": "a listener that was previously added to this mbean ."}{"idx": 51880, "node_name": "executor", "Dec": "an executor used by the method sendnotification to send each notification . if it is null , the thread calling sendnotification will invoke the handlenotification method itself ."}{"idx": 51882, "node_name": "info", "Dec": "an array indicating , for each notification this mbean may send , the name of the java class of the notification and the notification type . can be null , which is equivalent to an empty array ."}{"idx": 51884, "node_name": "executor", "Dec": "an executor used by the method sendnotification to send each notification . if it is null , the thread calling sendnotification will invoke the handlenotification method itself ."}{"idx": 51885, "node_name": "info", "Dec": "an array indicating , for each notification this mbean may send , the name of the java class of the notification and the notification type . can be null , which is equivalent to an empty array ."}{"idx": 51887, "node_name": "listener", "Dec": "the listener to receive notifications ."}{"idx": 51888, "node_name": "filter", "Dec": "the filter object . if filter is null , no filtering will be performed before handling notifications ."}{"idx": 51889, "node_name": "handback", "Dec": "an opaque object to be sent back to the listener when a notification is emitted . this object cannot be used by the notification broadcaster object . it should be resent unchanged with the notification to the listener ."}{"idx": 51891, "node_name": "notification", "Dec": "the notification to send ."}{"idx": 51893, "node_name": "listener", "Dec": "the listener to which the notification is being delivered ."}{"idx": 51894, "node_name": "notif", "Dec": "the notification being delivered to the listener ."}{"idx": 51895, "node_name": "handback", "Dec": "the handback object that was supplied when the listener was added ."}{"idx": 51898, "node_name": "listener", "Dec": "a listener that was previously added to this mbean ."}{"idx": 51899, "node_name": "filter", "Dec": "the filter that was specified when the listener was added ."}{"idx": 51900, "node_name": "handback", "Dec": "the handback that was specified when the listener was added ."}{"idx": 51903, "node_name": "notification", "Dec": "the notification to be sent ."}{"idx": 51907, "node_name": "notification", "Dec": "the notification to be sent ."}{"idx": 51909, "node_name": "prefix", "Dec": "the prefix ."}{"idx": 51911, "node_name": "prefix", "Dec": "the prefix ."}{"idx": 51916, "node_name": "notification", "Dec": "the notification ."}{"idx": 51917, "node_name": "handback", "Dec": "an opaque object which helps the listener to associate information regarding the mbean emitter . this object is passed to the addnotificationlistener call and resent , without modification , to the listener ."}{"idx": 51920, "node_name": "objectname", "Dec": "a string representation of the object name ."}{"idx": 51921, "node_name": "classname", "Dec": "the full class name , including the package name , of the object instance . if the mbean is a dynamic mbean the class name corresponds to its getmbeaninfo() .getclassname() ."}{"idx": 51923, "node_name": "objectname", "Dec": "the object name ."}{"idx": 51924, "node_name": "classname", "Dec": "the full class name , including the package name , of the object instance . if the mbean is a dynamic mbean the class name corresponds to its getmbeaninfo() .getclassname() . if the mbean is a dynamic mbean the class name should be retrieved from the mbeaninfo it provides ."}{"idx": 51926, "node_name": "object", "Dec": "the object instance that the current object instance is to be compared with ."}{"idx": 51933, "node_name": "name", "Dec": "a string representation of the object name ."}{"idx": 51935, "node_name": "domain", "Dec": "the domain part of the object name ."}{"idx": 51936, "node_name": "key", "Dec": "the attribute in the key property of the object name ."}{"idx": 51937, "node_name": "value", "Dec": "the value in the key property of the object name ."}{"idx": 51939, "node_name": "domain", "Dec": "the domain part of the object name ."}{"idx": 51940, "node_name": "table", "Dec": "a hash table containing one or more key properties . the key of each entry in the table is the key of a key property in the object name . the associated value in the table is the associated value in the object name ."}{"idx": 51942, "node_name": "name", "Dec": "a string representation of the object name ."}{"idx": 51944, "node_name": "domain", "Dec": "the domain part of the object name ."}{"idx": 51945, "node_name": "key", "Dec": "the attribute in the key property of the object name ."}{"idx": 51946, "node_name": "value", "Dec": "the value in the key property of the object name ."}{"idx": 51948, "node_name": "domain", "Dec": "the domain part of the object name ."}{"idx": 51949, "node_name": "table", "Dec": "a hash table containing one or more key properties . the key of each entry in the table is the key of a key property in the object name . the associated value in the table is the associated value in the object name ."}{"idx": 51951, "node_name": "name", "Dec": "an instance of the objectname class or of a subclass"}{"idx": 51958, "node_name": "property", "Dec": "the property whose value is to be checked ."}{"idx": 51962, "node_name": "property", "Dec": "the property whose value is to be obtained ."}{"idx": 51968, "node_name": "object", "Dec": "the object name that the current object name is to be compared with ."}{"idx": 51971, "node_name": "s", "Dec": "the string to be quoted ."}{"idx": 51973, "node_name": "q", "Dec": "the string to be unquoted ."}{"idx": 51975, "node_name": "name", "Dec": "the name of the mbean to compare to ."}{"idx": 51977, "node_name": "name", "Dec": "the objectname to be compared ."}{"idx": 51980, "node_name": "dimension", "Dec": "the dimension of arrays described by this arraytype instance ; must be greater than or equal to 1 ."}{"idx": 51981, "node_name": "elementtype", "Dec": "the open type of element values contained in the arrays described by this arraytype instance ; must be an instance of either simpletype , compositetype , tabulartype or another arraytype with a simpletype , compositetype or tabulartype as its elementtype ."}{"idx": 51983, "node_name": "elementtype", "Dec": "the simpletype of the element values contained in the arrays described by this arraytype instance ."}{"idx": 51984, "node_name": "primitivearray", "Dec": "true when this array describes primitive arrays ."}{"idx": 51989, "node_name": "obj", "Dec": "the object to be tested ."}{"idx": 51991, "node_name": "obj", "Dec": "the object to be compared for equality with this arraytype instance ; if obj is null or is not an instance of the class arraytype equals(java.lang.Object) returns false ."}{"idx": 51995, "node_name": "elementtype", "Dec": "the open type of element values contained in the arrays described by this arraytype instance ; must be an instance of either simpletype , compositetype , tabulartype or another arraytype with a simpletype , compositetype or tabulartype as its elementtype ."}{"idx": 51997, "node_name": "arrayclass", "Dec": "a primitive array class such as int [ ] .class , boolean [ ] [ ] .class , etc . the getelementopentype() method of the returned arraytype returns the simpletype corresponding to the wrapper type of the primitive type of the array ."}{"idx": 52001, "node_name": "key", "Dec": "the name of the item ."}{"idx": 52003, "node_name": "keys", "Dec": "the names of the items ."}{"idx": 52005, "node_name": "key", "Dec": "the key to be tested ."}{"idx": 52007, "node_name": "value", "Dec": "the value to be tested ."}{"idx": 52010, "node_name": "obj", "Dec": "the object to be compared for equality with this compositedata instance ."}{"idx": 52015, "node_name": "compositedata", "Dec": "the compositedata that will supply information to getters ."}{"idx": 52019, "node_name": "compositetype", "Dec": "the composite type of this composite data instance ; must not be null ."}{"idx": 52020, "node_name": "itemnames", "Dec": "itemnames must list , in any order , all the item names defined in compositetype ; the order in which the names are listed , is used to match values in itemvalues [ ]; must not be null or empty ."}{"idx": 52021, "node_name": "itemvalues", "Dec": "the values of the items , listed in the same order as their respective names in itemnames ; each item value can be null , but if it is non-null it must be a valid value for the open type defined in compositetype for the corresponding item ; must be of the same size as itemnames ; must not be null or empty ."}{"idx": 52023, "node_name": "compositetype", "Dec": "the composite type of this composite data instance ; must not be null ."}{"idx": 52024, "node_name": "items", "Dec": "the mappings of all the item names to their values ; items must contain all the item names defined in compositetype ; must not be null or empty ."}{"idx": 52027, "node_name": "key", "Dec": "the name of the item ."}{"idx": 52029, "node_name": "keys", "Dec": "the names of the items ."}{"idx": 52031, "node_name": "key", "Dec": "the key to be tested ."}{"idx": 52033, "node_name": "value", "Dec": "the value to be tested ."}{"idx": 52036, "node_name": "obj", "Dec": "the object to be compared for equality with this compositedatasupport instance ."}{"idx": 52041, "node_name": "ct", "Dec": "the expected compositetype of the returned value . if the returned value is cd , then cd.getcompositetype() .equals ( ct ) should be true . typically this will be because cd is a compositedatasupport constructed with ct as its compositetype ."}{"idx": 52044, "node_name": "typename", "Dec": "the name given to the composite type this instance represents ; cannot be a null or empty string ."}{"idx": 52045, "node_name": "description", "Dec": "the human readable description of the composite type this instance represents ; cannot be a null or empty string ."}{"idx": 52046, "node_name": "itemnames", "Dec": "the names of the items contained in the composite data values described by this compositetype instance ; cannot be null and should contain at least one element ; no element can be a null or empty string . note that the order in which the item names are given is not important to differentiate a compositetype instance from another ; the item names are internally stored sorted in ascending alphanumeric order ."}{"idx": 52047, "node_name": "itemdescriptions", "Dec": "the descriptions , in the same order as itemnames , of the items contained in the composite data values described by this compositetype instance ; should be of the same size as itemnames ; no element can be null or an empty string ."}{"idx": 52048, "node_name": "itemtypes", "Dec": "the open type instances , in the same order as itemnames , describing the items contained in the composite data values described by this compositetype instance ; should be of the same size as itemnames ; no element can be null ."}{"idx": 52050, "node_name": "itemname", "Dec": "the name of the item ."}{"idx": 52052, "node_name": "itemname", "Dec": "the name of the item ."}{"idx": 52054, "node_name": "itemname", "Dec": "the name of the time ."}{"idx": 52057, "node_name": "obj", "Dec": "the value whose open type is to be tested for compatibility with this compositetype instance ."}{"idx": 52059, "node_name": "obj", "Dec": "the object to be compared for equality with this compositetype instance ; if obj is null , equals returns false ."}{"idx": 52065, "node_name": "msg", "Dec": "the detail message ."}{"idx": 52069, "node_name": "msg", "Dec": "the detail message ."}{"idx": 52073, "node_name": "msg", "Dec": "the detail message ."}{"idx": 52077, "node_name": "msg", "Dec": "the detail message ."}{"idx": 52083, "node_name": "obj", "Dec": "the object to be compared for equality with this openmbeanattributeinfo instance ;"}{"idx": 52088, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52089, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52090, "node_name": "opentype", "Dec": "cannot be null ."}{"idx": 52091, "node_name": "isreadable", "Dec": "true if the attribute has a getter exposed for management ."}{"idx": 52092, "node_name": "iswritable", "Dec": "true if the attribute has a setter exposed for management ."}{"idx": 52093, "node_name": "isis", "Dec": "true if the attribute's getter is of the form isxxx ."}{"idx": 52095, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52096, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52097, "node_name": "opentype", "Dec": "cannot be null ."}{"idx": 52098, "node_name": "isreadable", "Dec": "true if the attribute has a getter exposed for management ."}{"idx": 52099, "node_name": "iswritable", "Dec": "true if the attribute has a setter exposed for management ."}{"idx": 52100, "node_name": "isis", "Dec": "true if the attribute's getter is of the form isxxx ."}{"idx": 52101, "node_name": "descriptor", "Dec": "the descriptor for the attribute . this may be null which is equivalent to an empty descriptor ."}{"idx": 52103, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52104, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52105, "node_name": "opentype", "Dec": "cannot be null ."}{"idx": 52106, "node_name": "isreadable", "Dec": "true if the attribute has a getter exposed for management ."}{"idx": 52107, "node_name": "iswritable", "Dec": "true if the attribute has a setter exposed for management ."}{"idx": 52108, "node_name": "isis", "Dec": "true if the attribute's getter is of the form isxxx ."}{"idx": 52109, "node_name": "defaultvalue", "Dec": "must be a valid value for the opentype specified for this attribute ; default value not supported for arraytype and tabulartype ; can be null , in which case it means that no default value is set ."}{"idx": 52111, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52112, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52113, "node_name": "opentype", "Dec": "cannot be null ."}{"idx": 52114, "node_name": "isreadable", "Dec": "true if the attribute has a getter exposed for management ."}{"idx": 52115, "node_name": "iswritable", "Dec": "true if the attribute has a setter exposed for management ."}{"idx": 52116, "node_name": "isis", "Dec": "true if the attribute's getter is of the form isxxx ."}{"idx": 52117, "node_name": "defaultvalue", "Dec": "must be a valid value for the opentype specified for this attribute ; default value not supported for arraytype and tabulartype ; can be null , in which case it means that no default value is set ."}{"idx": 52118, "node_name": "legalvalues", "Dec": "each contained value must be valid for the opentype specified for this attribute ; legal values not supported for arraytype and tabulartype ; can be null or empty ."}{"idx": 52120, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52121, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52122, "node_name": "opentype", "Dec": "cannot be null ."}{"idx": 52123, "node_name": "isreadable", "Dec": "true if the attribute has a getter exposed for management ."}{"idx": 52124, "node_name": "iswritable", "Dec": "true if the attribute has a setter exposed for management ."}{"idx": 52125, "node_name": "isis", "Dec": "true if the attribute's getter is of the form isxxx ."}{"idx": 52126, "node_name": "defaultvalue", "Dec": "must be a valid value for the opentype specified for this attribute ; default value not supported for arraytype and tabulartype ; can be null , in which case it means that no default value is set ."}{"idx": 52127, "node_name": "minvalue", "Dec": "must be valid for the opentype specified for this attribute ; can be null , in which case it means that no minimal value is set ."}{"idx": 52128, "node_name": "maxvalue", "Dec": "must be valid for the opentype specified for this attribute ; can be null , in which case it means that no maximal value is set ."}{"idx": 52139, "node_name": "obj", "Dec": "the object to be tested ."}{"idx": 52141, "node_name": "obj", "Dec": "the object to be compared for equality with this openmbeanattributeinfosupport instance ."}{"idx": 52149, "node_name": "obj", "Dec": "the object to be compared for equality with this openmbeanconstructorinfo instance ;"}{"idx": 52154, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52155, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52156, "node_name": "signature", "Dec": "can be null or empty if there are no parameters to describe ."}{"idx": 52158, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52159, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52160, "node_name": "signature", "Dec": "can be null or empty if there are no parameters to describe ."}{"idx": 52161, "node_name": "descriptor", "Dec": "the descriptor for <init>(java.lang.String,java.lang.String,javax.management.openmbean.OpenMBeanParameterInfo[],javax.management.Descriptor) . this may be null which is equivalent to an empty descriptor ."}{"idx": 52163, "node_name": "obj", "Dec": "the object to be compared for equality with this openmbeanconstructorinfosupport instance ;"}{"idx": 52174, "node_name": "obj", "Dec": "the object to be compared for equality with this openmbeaninfo instance ;"}{"idx": 52179, "node_name": "classname", "Dec": "the fully qualified java class name of the open mbean described by this openmbeaninfosupport instance ."}{"idx": 52180, "node_name": "description", "Dec": "a human readable description of the open mbean described by this openmbeaninfosupport instance ."}{"idx": 52181, "node_name": "openattributes", "Dec": "the list of exposed attributes of the described open mbean ; must be an array of instances of a subclass of mbeanattributeinfo , typically openmbeanattributeinfosupport ."}{"idx": 52182, "node_name": "openconstructors", "Dec": "the list of exposed public constructors of the described open mbean ; must be an array of instances of a subclass of mbeanconstructorinfo , typically openmbeanconstructorinfosupport ."}{"idx": 52183, "node_name": "openoperations", "Dec": "the list of exposed operations of the described open mbean . must be an array of instances of a subclass of mbeanoperationinfo , typically openmbeanoperationinfosupport ."}{"idx": 52184, "node_name": "notifications", "Dec": "the list of notifications emitted by the described open mbean ."}{"idx": 52186, "node_name": "classname", "Dec": "the fully qualified java class name of the open mbean described by this openmbeaninfosupport instance ."}{"idx": 52187, "node_name": "description", "Dec": "a human readable description of the open mbean described by this openmbeaninfosupport instance ."}{"idx": 52188, "node_name": "openattributes", "Dec": "the list of exposed attributes of the described open mbean ; must be an array of instances of a subclass of mbeanattributeinfo , typically openmbeanattributeinfosupport ."}{"idx": 52189, "node_name": "openconstructors", "Dec": "the list of exposed public constructors of the described open mbean ; must be an array of instances of a subclass of mbeanconstructorinfo , typically openmbeanconstructorinfosupport ."}{"idx": 52190, "node_name": "openoperations", "Dec": "the list of exposed operations of the described open mbean . must be an array of instances of a subclass of mbeanoperationinfo , typically openmbeanoperationinfosupport ."}{"idx": 52191, "node_name": "notifications", "Dec": "the list of notifications emitted by the described open mbean ."}{"idx": 52192, "node_name": "descriptor", "Dec": "the descriptor for the mbean . this may be null which is equivalent to an empty descriptor ."}{"idx": 52194, "node_name": "obj", "Dec": "the object to be compared for equality with this openmbeaninfosupport instance ;"}{"idx": 52205, "node_name": "obj", "Dec": "the object to be compared for equality with this openmbeanoperationinfo instance ;"}{"idx": 52210, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52211, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52212, "node_name": "signature", "Dec": "can be null or empty if there are no parameters to describe ."}{"idx": 52213, "node_name": "returnopentype", "Dec": "cannot be null : use simpletype.void for operations that return nothing ."}{"idx": 52214, "node_name": "impact", "Dec": "must be one of action , action_info , info , or unknown ."}{"idx": 52216, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52217, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52218, "node_name": "signature", "Dec": "can be null or empty if there are no parameters to describe ."}{"idx": 52219, "node_name": "returnopentype", "Dec": "cannot be null : use simpletype.void for operations that return nothing ."}{"idx": 52220, "node_name": "impact", "Dec": "must be one of action , action_info , info , or unknown ."}{"idx": 52221, "node_name": "descriptor", "Dec": "the descriptor for the operation . this may be null , which is equivalent to an empty descriptor ."}{"idx": 52224, "node_name": "obj", "Dec": "the object to be compared for equality with this openmbeanoperationinfosupport instance ;"}{"idx": 52240, "node_name": "obj", "Dec": "the object to be tested ."}{"idx": 52242, "node_name": "obj", "Dec": "the object to be compared for equality with this openmbeanparameterinfo instance ;"}{"idx": 52247, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52248, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52249, "node_name": "opentype", "Dec": "cannot be null ."}{"idx": 52251, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52252, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52253, "node_name": "opentype", "Dec": "cannot be null ."}{"idx": 52254, "node_name": "descriptor", "Dec": "the descriptor for the parameter . this may be null which is equivalent to an empty descriptor ."}{"idx": 52256, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52257, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52258, "node_name": "opentype", "Dec": "cannot be null ."}{"idx": 52259, "node_name": "defaultvalue", "Dec": "must be a valid value for the opentype specified for this parameter ; default value not supported for arraytype and tabulartype ; can be null , in which case it means that no default value is set ."}{"idx": 52261, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52262, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52263, "node_name": "opentype", "Dec": "cannot be null ."}{"idx": 52264, "node_name": "defaultvalue", "Dec": "must be a valid value for the opentype specified for this parameter ; default value not supported for arraytype and tabulartype ; can be null , in which case it means that no default value is set ."}{"idx": 52265, "node_name": "legalvalues", "Dec": "each contained value must be valid for the opentype specified for this parameter ; legal values not supported for arraytype and tabulartype ; can be null or empty ."}{"idx": 52267, "node_name": "name", "Dec": "cannot be a null or empty string ."}{"idx": 52268, "node_name": "description", "Dec": "cannot be a null or empty string ."}{"idx": 52269, "node_name": "opentype", "Dec": "cannot be null ."}{"idx": 52270, "node_name": "defaultvalue", "Dec": "must be a valid value for the opentype specified for this parameter ; default value not supported for arraytype and tabulartype ; can be null , in which case it means that no default value is set ."}{"idx": 52271, "node_name": "minvalue", "Dec": "must be valid for the opentype specified for this parameter ; can be null , in which case it means that no minimal value is set ."}{"idx": 52272, "node_name": "maxvalue", "Dec": "must be valid for the opentype specified for this parameter ; can be null , in which case it means that no maximal value is set ."}{"idx": 52283, "node_name": "obj", "Dec": "the object to be tested ."}{"idx": 52285, "node_name": "obj", "Dec": "the object to be compared for equality with this openmbeanparameterinfosupport instance ."}{"idx": 52291, "node_name": "classname", "Dec": "the fully qualified java class name of the open data values this open type describes . the valid java class names allowed for open data values are listed in allowed_classnames_list . a multidimensional array of any one of these classes or their corresponding primitive types is also an allowed class , in which case the class name follows the rules defined by the method getname() of java.lang.class . for example , a 3-dimensional array of strings has for class name \" [[[ ljava.lang.string ; \" ( without the quotes ) ."}{"idx": 52292, "node_name": "typename", "Dec": "the name given to the open type this instance represents ; cannot be a null or empty string ."}{"idx": 52293, "node_name": "description", "Dec": "the human readable description of the open type this instance represents ; cannot be a null or empty string ."}{"idx": 52299, "node_name": "obj", "Dec": "the object to be tested for validity ."}{"idx": 52301, "node_name": "obj", "Dec": "the object to compare to ."}{"idx": 52319, "node_name": "obj", "Dec": "the object to be tested ."}{"idx": 52321, "node_name": "obj", "Dec": "the object to be compared for equality with this simpletype instance ; if obj is null or is not an instance of the class simpletype , equals returns false ."}{"idx": 52328, "node_name": "value", "Dec": "the composite data value whose index in this tabulardata instance is to be calculated ; must be of the same composite type as this instance's row type ; must not be null ."}{"idx": 52332, "node_name": "key", "Dec": "the index value whose presence in this tabulardata instance is to be tested ."}{"idx": 52334, "node_name": "value", "Dec": "the row value whose presence in this tabulardata instance is to be tested ."}{"idx": 52336, "node_name": "key", "Dec": "the key of the row to return ."}{"idx": 52338, "node_name": "value", "Dec": "the composite data value to be added as a new row to this tabulardata instance ; must be of the same composite type as this instance's row type ; must not be null ."}{"idx": 52340, "node_name": "key", "Dec": "the index of the value to get in this tabulardata instance ; must be valid with this tabulardata instance's row type definition ; must not be null ."}{"idx": 52342, "node_name": "values", "Dec": "the array of composite data values to be added as new rows to this tabulardata instance ; if values is null or empty , putAll(javax.management.openmbean.CompositeData[]) returns without doing anything ."}{"idx": 52347, "node_name": "obj", "Dec": "the object to be compared for equality with this tabulardata instance ;"}{"idx": 52352, "node_name": "tabulartype", "Dec": "the tabular type describing this tabulardata instance ; cannot be null ."}{"idx": 52354, "node_name": "tabulartype", "Dec": "the tabular type describing this tabulardata instance ; cannot be null ."}{"idx": 52355, "node_name": "initialcapacity", "Dec": "the initial capacity of the hashmap ."}{"idx": 52356, "node_name": "loadfactor", "Dec": "the load factor of the hashmap"}{"idx": 52359, "node_name": "value", "Dec": "the composite data value whose index in this tabulardata instance is to be calculated ; must be of the same composite type as this instance's row type ; must not be null ."}{"idx": 52361, "node_name": "key", "Dec": "the index value whose presence in this tabulardata instance is to be tested ."}{"idx": 52363, "node_name": "key", "Dec": "the index value whose presence in this tabulardata instance is to be tested ."}{"idx": 52365, "node_name": "value", "Dec": "the row value whose presence in this tabulardata instance is to be tested ."}{"idx": 52367, "node_name": "value", "Dec": "the row value whose presence in this tabulardata instance is to be tested ."}{"idx": 52369, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 52371, "node_name": "key", "Dec": "the index of the value to get in this tabulardata instance ; must be valid with this tabulardata instance's row type definition ; must not be null ."}{"idx": 52373, "node_name": "key", "Dec": "an ignored parameter ."}{"idx": 52374, "node_name": "value", "Dec": "the compositedata to put ."}{"idx": 52376, "node_name": "key", "Dec": "an object [ ] representing the key to remove ."}{"idx": 52378, "node_name": "key", "Dec": "the index of the value to get in this tabulardata instance ; must be valid with this tabulardata instance's row type definition ; must not be null ."}{"idx": 52380, "node_name": "t", "Dec": "the map whose values are to be added as new rows to this tabulardata instance ; if t is null or empty , putAll(java.util.Map) returns without doing anything ."}{"idx": 52382, "node_name": "values", "Dec": "the array of composite data values to be added as new rows to this tabulardata instance ; if values is null or empty , putAll(javax.management.openmbean.CompositeData[]) returns without doing anything ."}{"idx": 52391, "node_name": "obj", "Dec": "the object to be compared for equality with this tabulardatasupport instance ;"}{"idx": 52396, "node_name": "typename", "Dec": "the name given to the tabular type this instance represents ; cannot be a null or empty string ."}{"idx": 52397, "node_name": "description", "Dec": "the human readable description of the tabular type this instance represents ; cannot be a null or empty string ."}{"idx": 52398, "node_name": "rowtype", "Dec": "the type of the row elements of tabular data values described by this tabular type instance ; cannot be null ."}{"idx": 52399, "node_name": "indexnames", "Dec": "the names of the items the values of which are used to uniquely index each row element in the tabular data values described by this tabular type instance ; cannot be null or empty . each element should be an item name defined in rowtype ( no null or empty string allowed ) . it is important to note that the order of the item names in indexnames is used by the methods get and remove of class tabulardata to match their array of values parameter to items ."}{"idx": 52403, "node_name": "obj", "Dec": "the value whose open type is to be tested for compatibility with this tabulartype instance ."}{"idx": 52405, "node_name": "obj", "Dec": "the object to be compared for equality with this tabulartype instance ; if obj is null , equals returns false ."}{"idx": 52411, "node_name": "message", "Dec": "the detail message ."}{"idx": 52427, "node_name": "q1", "Dec": "a query expression ."}{"idx": 52428, "node_name": "q2", "Dec": "another query expression ."}{"idx": 52430, "node_name": "q1", "Dec": "a query expression ."}{"idx": 52431, "node_name": "q2", "Dec": "another query expression ."}{"idx": 52433, "node_name": "v1", "Dec": "a value expression ."}{"idx": 52434, "node_name": "v2", "Dec": "another value expression ."}{"idx": 52436, "node_name": "v1", "Dec": "a value expression ."}{"idx": 52437, "node_name": "v2", "Dec": "another value expression ."}{"idx": 52439, "node_name": "v1", "Dec": "a value expression ."}{"idx": 52440, "node_name": "v2", "Dec": "another value expression ."}{"idx": 52442, "node_name": "v1", "Dec": "a value expression ."}{"idx": 52443, "node_name": "v2", "Dec": "another value expression ."}{"idx": 52445, "node_name": "v1", "Dec": "a value expression ."}{"idx": 52446, "node_name": "v2", "Dec": "another value expression ."}{"idx": 52448, "node_name": "v1", "Dec": "a value expression that is \" between \" v2 and v3 ."}{"idx": 52449, "node_name": "v2", "Dec": "value expression that represents a boundary of the constraint ."}{"idx": 52450, "node_name": "v3", "Dec": "value expression that represents a boundary of the constraint ."}{"idx": 52452, "node_name": "a", "Dec": "an attribute expression"}{"idx": 52453, "node_name": "s", "Dec": "a string value expression representing a matching constraint"}{"idx": 52455, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 52457, "node_name": "classname", "Dec": "the name of the class possessing the attribute ."}{"idx": 52458, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 52461, "node_name": "queryexp", "Dec": "the constraint to negate ."}{"idx": 52463, "node_name": "val", "Dec": "a value to be constrained ."}{"idx": 52464, "node_name": "valuelist", "Dec": "an array of valueexps ."}{"idx": 52466, "node_name": "val", "Dec": "the string value ."}{"idx": 52468, "node_name": "val", "Dec": "an instance of number ."}{"idx": 52470, "node_name": "val", "Dec": "an int value ."}{"idx": 52472, "node_name": "val", "Dec": "a long value ."}{"idx": 52474, "node_name": "val", "Dec": "a float value ."}{"idx": 52476, "node_name": "val", "Dec": "a double value ."}{"idx": 52478, "node_name": "val", "Dec": "a boolean value ."}{"idx": 52480, "node_name": "value1", "Dec": "the first ' + ' operand ."}{"idx": 52481, "node_name": "value2", "Dec": "the second ' + ' operand ."}{"idx": 52483, "node_name": "value1", "Dec": "the first ' * ' operand ."}{"idx": 52484, "node_name": "value2", "Dec": "the second ' * ' operand ."}{"idx": 52486, "node_name": "value1", "Dec": "the first '"}{"idx": 52487, "node_name": "value2", "Dec": "the second '"}{"idx": 52489, "node_name": "value1", "Dec": "the first ' / ' operand ."}{"idx": 52490, "node_name": "value2", "Dec": "the second ' / ' operand ."}{"idx": 52492, "node_name": "a", "Dec": "an attribute expression ."}{"idx": 52493, "node_name": "s", "Dec": "a string value expression representing the beginning of the string value ."}{"idx": 52495, "node_name": "a", "Dec": "an attribute expression ."}{"idx": 52496, "node_name": "s", "Dec": "a string value expression representing the substring ."}{"idx": 52498, "node_name": "a", "Dec": "an attribute expression ."}{"idx": 52499, "node_name": "s", "Dec": "a string value expression representing the end of the string value ."}{"idx": 52501, "node_name": "classnamevalue", "Dec": "the stringvalueexp returning the name of the class of which selected mbeans should be instances ."}{"idx": 52505, "node_name": "s", "Dec": "the mbean server on which the query is to be performed ."}{"idx": 52509, "node_name": "name", "Dec": "the name of the mbean on which the queryexp will be applied ."}{"idx": 52511, "node_name": "s", "Dec": "the mbean server on which the query is to be performed ."}{"idx": 52514, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 52516, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 52517, "node_name": "message", "Dec": "the detail message ."}{"idx": 52523, "node_name": "message", "Dec": "the detail message ."}{"idx": 52527, "node_name": "message", "Dec": "the detail message ."}{"idx": 52531, "node_name": "message", "Dec": "the detail message ."}{"idx": 52535, "node_name": "message", "Dec": "the detail message ."}{"idx": 52539, "node_name": "message", "Dec": "the detail message ."}{"idx": 52544, "node_name": "objectname", "Dec": "objectname no longer of interest"}{"idx": 52547, "node_name": "objectname", "Dec": "objectname of interest"}{"idx": 52551, "node_name": "notif", "Dec": "the notification to be sent ."}{"idx": 52554, "node_name": "rolename", "Dec": "name of role"}{"idx": 52556, "node_name": "rolenamearray", "Dec": "array of names of roles to be retrieved"}{"idx": 52558, "node_name": "rolename", "Dec": "name of role"}{"idx": 52562, "node_name": "role", "Dec": "role to be set ( name and new value )"}{"idx": 52564, "node_name": "rolelist", "Dec": "list of roles to be set"}{"idx": 52566, "node_name": "objectname", "Dec": "objectname of unregistered mbean"}{"idx": 52567, "node_name": "rolename", "Dec": "name of role where the mbean is referenced"}{"idx": 52575, "node_name": "message", "Dec": "the detail message ."}{"idx": 52579, "node_name": "message", "Dec": "the detail message ."}{"idx": 52588, "node_name": "notiftype", "Dec": "type of the notification ; either :"}{"idx": 52589, "node_name": "sourceobj", "Dec": "source object , sending the notification . this is either an objectname or a relationservice object . in the latter case it must be the mbean emitting the notification ; the mbean server will rewrite the source to be the objectname under which that mbean is registered ."}{"idx": 52590, "node_name": "sequence", "Dec": "sequence number to identify the notification"}{"idx": 52591, "node_name": "timestamp", "Dec": "time stamp"}{"idx": 52592, "node_name": "message", "Dec": "human-readable message describing the notification"}{"idx": 52593, "node_name": "id", "Dec": "relation id identifying the relation in the relation service"}{"idx": 52594, "node_name": "typename", "Dec": "name of the relation type"}{"idx": 52595, "node_name": "objectname", "Dec": "objectname of the relation object if it is an mbean ( null for relations internally handled by the relation service )"}{"idx": 52596, "node_name": "unregmbeanlist", "Dec": "list of objectnames of referenced mbeans expected to be unregistered due to relation removal ( only for removal , due to cim qualifiers , can be null )"}{"idx": 52598, "node_name": "notiftype", "Dec": "type of the notification ; either :"}{"idx": 52599, "node_name": "sourceobj", "Dec": "source object , sending the notification . this is either an objectname or a relationservice object . in the latter case it must be the mbean emitting the notification ; the mbean server will rewrite the source to be the objectname under which that mbean is registered ."}{"idx": 52600, "node_name": "sequence", "Dec": "sequence number to identify the notification"}{"idx": 52601, "node_name": "timestamp", "Dec": "time stamp"}{"idx": 52602, "node_name": "message", "Dec": "human-readable message describing the notification"}{"idx": 52603, "node_name": "id", "Dec": "relation id identifying the relation in the relation service"}{"idx": 52604, "node_name": "typename", "Dec": "name of the relation type"}{"idx": 52605, "node_name": "objectname", "Dec": "objectname of the relation object if it is an mbean ( null for relations internally handled by the relation service )"}{"idx": 52606, "node_name": "name", "Dec": "name of the updated role"}{"idx": 52607, "node_name": "newvalue", "Dec": "new role value ( list of objectname objects )"}{"idx": 52608, "node_name": "oldvalue", "Dec": "old role value ( list of objectname objects )"}{"idx": 52618, "node_name": "immediatepurgeflag", "Dec": "flag to indicate when a notification is received for the unregistration of an mbean referenced in a relation , if an immediate \" purge \" of the relations ( look for the relations no longer valid ) has to be performed , or if that will be performed only when the purgerelations method will be explicitly called . true is immediate purge ."}{"idx": 52622, "node_name": "purgeflag", "Dec": "flag"}{"idx": 52624, "node_name": "relationtypename", "Dec": "name of the relation type"}{"idx": 52625, "node_name": "roleinfoarray", "Dec": "array of role infos"}{"idx": 52627, "node_name": "relationtypeobj", "Dec": "relation type object ( implementing the relationtype interface )"}{"idx": 52630, "node_name": "relationtypename", "Dec": "name of relation type"}{"idx": 52632, "node_name": "relationtypename", "Dec": "name of relation type"}{"idx": 52633, "node_name": "roleinfoname", "Dec": "name of role"}{"idx": 52635, "node_name": "relationtypename", "Dec": "name of the relation type to be removed"}{"idx": 52637, "node_name": "relationid", "Dec": "relation identifier , to identify uniquely the relation inside the relation service"}{"idx": 52638, "node_name": "relationtypename", "Dec": "name of the relation type ( has to be created in the relation service )"}{"idx": 52639, "node_name": "rolelist", "Dec": "role list to initialize roles of the relation ( can be null ) ."}{"idx": 52641, "node_name": "relationobjectname", "Dec": "objectname of the relation mbean to be added ."}{"idx": 52643, "node_name": "relationid", "Dec": "relation id identifying the relation"}{"idx": 52645, "node_name": "objectname", "Dec": "objectname of supposed relation"}{"idx": 52647, "node_name": "relationid", "Dec": "relation id identifying the relation"}{"idx": 52650, "node_name": "rolename", "Dec": "name of role to be checked"}{"idx": 52651, "node_name": "relationtypename", "Dec": "name of the relation type"}{"idx": 52653, "node_name": "role", "Dec": "role to be checked"}{"idx": 52654, "node_name": "relationtypename", "Dec": "name of relation type"}{"idx": 52655, "node_name": "initflag", "Dec": "flag to specify that the checking is done for the initialization of a role , write access shall not be verified ."}{"idx": 52657, "node_name": "relationid", "Dec": "relation identifier of the updated relation"}{"idx": 52659, "node_name": "relationid", "Dec": "relation identifier of the updated relation"}{"idx": 52660, "node_name": "newrole", "Dec": "new role ( name and new value )"}{"idx": 52661, "node_name": "oldvalue", "Dec": "old role value ( list of objectname objects )"}{"idx": 52663, "node_name": "relationid", "Dec": "relation identifier of the updated relation"}{"idx": 52664, "node_name": "unregmbeanlist", "Dec": "list of objectnames of mbeans expected to be unregistered due to relation removal ( can be null )"}{"idx": 52666, "node_name": "relationid", "Dec": "relation identifier of the updated relation"}{"idx": 52667, "node_name": "newrole", "Dec": "new role ( name and new value )"}{"idx": 52668, "node_name": "oldvalue", "Dec": "old role value ( list of objectname objects )"}{"idx": 52670, "node_name": "relationid", "Dec": "relation id of the relation to be removed"}{"idx": 52673, "node_name": "mbeanname", "Dec": "objectname of mbean"}{"idx": 52674, "node_name": "relationtypename", "Dec": "can be null ; if specified , only the relations of that type will be considered in the search . else all relation types are considered ."}{"idx": 52675, "node_name": "rolename", "Dec": "can be null ; if specified , only the relations where the mbean is referenced in that role will be returned . else all roles are considered ."}{"idx": 52677, "node_name": "mbeanname", "Dec": "objectname of mbean"}{"idx": 52678, "node_name": "relationtypename", "Dec": "can be null ; if specified , only the relations of that type will be considered in the search . else all relation types are considered ."}{"idx": 52679, "node_name": "rolename", "Dec": "can be null ; if specified , only the relations where the mbean is referenced in that role will be considered . else all roles are considered ."}{"idx": 52681, "node_name": "relationtypename", "Dec": "relation type name"}{"idx": 52683, "node_name": "relationid", "Dec": "relation id"}{"idx": 52684, "node_name": "rolename", "Dec": "name of role"}{"idx": 52686, "node_name": "relationid", "Dec": "relation id"}{"idx": 52687, "node_name": "rolenamearray", "Dec": "array of names of roles to be retrieved"}{"idx": 52689, "node_name": "relationid", "Dec": "relation id"}{"idx": 52691, "node_name": "relationid", "Dec": "relation id"}{"idx": 52692, "node_name": "rolename", "Dec": "name of role"}{"idx": 52694, "node_name": "relationid", "Dec": "relation id"}{"idx": 52695, "node_name": "role", "Dec": "role to be set ( name and new value )"}{"idx": 52697, "node_name": "relationid", "Dec": "relation id"}{"idx": 52698, "node_name": "rolelist", "Dec": "list of roles to be set"}{"idx": 52700, "node_name": "relationid", "Dec": "relation id"}{"idx": 52702, "node_name": "relationid", "Dec": "relation id"}{"idx": 52704, "node_name": "notif", "Dec": "the notification ."}{"idx": 52705, "node_name": "handback", "Dec": "an opaque object which helps the listener to associate information regarding the mbean emitter ( can be null ) ."}{"idx": 52711, "node_name": "purgeflag", "Dec": "flag"}{"idx": 52713, "node_name": "relationtypename", "Dec": "name of the relation type"}{"idx": 52714, "node_name": "roleinfoarray", "Dec": "array of role infos"}{"idx": 52716, "node_name": "relationtypeobj", "Dec": "relation type object ( implementing the relationtype interface )"}{"idx": 52719, "node_name": "relationtypename", "Dec": "name of relation type"}{"idx": 52721, "node_name": "relationtypename", "Dec": "name of relation type"}{"idx": 52722, "node_name": "roleinfoname", "Dec": "name of role"}{"idx": 52724, "node_name": "relationtypename", "Dec": "name of the relation type to be removed"}{"idx": 52726, "node_name": "relationid", "Dec": "relation identifier , to identify uniquely the relation inside the relation service"}{"idx": 52727, "node_name": "relationtypename", "Dec": "name of the relation type ( has to be created in the relation service )"}{"idx": 52728, "node_name": "rolelist", "Dec": "role list to initialize roles of the relation ( can be null ) ."}{"idx": 52730, "node_name": "relationobjectname", "Dec": "objectname of the relation mbean to be added ."}{"idx": 52732, "node_name": "relationid", "Dec": "relation id identifying the relation"}{"idx": 52734, "node_name": "objectname", "Dec": "objectname of supposed relation"}{"idx": 52736, "node_name": "relationid", "Dec": "relation id identifying the relation"}{"idx": 52739, "node_name": "rolename", "Dec": "name of role to be checked"}{"idx": 52740, "node_name": "relationtypename", "Dec": "name of the relation type"}{"idx": 52742, "node_name": "role", "Dec": "role to be checked"}{"idx": 52743, "node_name": "relationtypename", "Dec": "name of relation type"}{"idx": 52744, "node_name": "initflag", "Dec": "flag to specify that the checking is done for the initialization of a role , write access shall not be verified ."}{"idx": 52746, "node_name": "relationid", "Dec": "relation identifier of the updated relation"}{"idx": 52748, "node_name": "relationid", "Dec": "relation identifier of the updated relation"}{"idx": 52749, "node_name": "newrole", "Dec": "new role ( name and new value )"}{"idx": 52750, "node_name": "oldrolevalue", "Dec": "old role value ( list of objectname objects )"}{"idx": 52752, "node_name": "relationid", "Dec": "relation identifier of the updated relation"}{"idx": 52753, "node_name": "unregmbeanlist", "Dec": "list of objectnames of mbeans expected to be unregistered due to relation removal ( can be null )"}{"idx": 52755, "node_name": "relationid", "Dec": "relation identifier of the updated relation"}{"idx": 52756, "node_name": "newrole", "Dec": "new role ( name and new value )"}{"idx": 52757, "node_name": "oldrolevalue", "Dec": "old role value ( list of objectname objects )"}{"idx": 52759, "node_name": "relationid", "Dec": "relation id of the relation to be removed"}{"idx": 52762, "node_name": "mbeanname", "Dec": "objectname of mbean"}{"idx": 52763, "node_name": "relationtypename", "Dec": "can be null ; if specified , only the relations of that type will be considered in the search . else all relation types are considered ."}{"idx": 52764, "node_name": "rolename", "Dec": "can be null ; if specified , only the relations where the mbean is referenced in that role will be returned . else all roles are considered ."}{"idx": 52766, "node_name": "mbeanname", "Dec": "objectname of mbean"}{"idx": 52767, "node_name": "relationtypename", "Dec": "can be null ; if specified , only the relations of that type will be considered in the search . else all relation types are considered ."}{"idx": 52768, "node_name": "rolename", "Dec": "can be null ; if specified , only the relations where the mbean is referenced in that role will be considered . else all roles are considered ."}{"idx": 52770, "node_name": "relationtypename", "Dec": "relation type name"}{"idx": 52772, "node_name": "relationid", "Dec": "relation id"}{"idx": 52773, "node_name": "rolename", "Dec": "name of role"}{"idx": 52775, "node_name": "relationid", "Dec": "relation id"}{"idx": 52776, "node_name": "rolenamearray", "Dec": "array of names of roles to be retrieved"}{"idx": 52778, "node_name": "relationid", "Dec": "relation id"}{"idx": 52780, "node_name": "relationid", "Dec": "relation id"}{"idx": 52781, "node_name": "rolename", "Dec": "name of role"}{"idx": 52783, "node_name": "relationid", "Dec": "relation id"}{"idx": 52784, "node_name": "role", "Dec": "role to be set ( name and new value )"}{"idx": 52786, "node_name": "relationid", "Dec": "relation id"}{"idx": 52787, "node_name": "rolelist", "Dec": "list of roles to be set"}{"idx": 52789, "node_name": "relationid", "Dec": "relation id"}{"idx": 52791, "node_name": "relationid", "Dec": "relation id"}{"idx": 52795, "node_name": "message", "Dec": "the detail message ."}{"idx": 52798, "node_name": "relationid", "Dec": "relation identifier , to identify the relation in the relation service . expected to be unique in the given relation service ."}{"idx": 52799, "node_name": "relationservicename", "Dec": "objectname of the relation service where the relation will be registered . this parameter is required as it is the relation service that is aware of the definition of the relation type of the given relation , so that will be able to check update operations ( set ) ."}{"idx": 52800, "node_name": "relationtypename", "Dec": "name of relation type . expected to have been created in the given relation service ."}{"idx": 52801, "node_name": "list", "Dec": "list of roles ( role objects ) to initialize the relation . can be null . expected to conform to relation info in associated relation type ."}{"idx": 52803, "node_name": "relationid", "Dec": "relation identifier , to identify the relation in the relation service . expected to be unique in the given relation service ."}{"idx": 52804, "node_name": "relationservicename", "Dec": "objectname of the relation service where the relation will be registered . this parameter is required as it is the relation service that is aware of the definition of the relation type of the given relation , so that will be able to check update operations ( set ) ."}{"idx": 52805, "node_name": "relationservicembeanserver", "Dec": "mbean server where the wrapping mbean is or will be registered . expected to be the mbean server where the relation service is or will be registered ."}{"idx": 52806, "node_name": "relationtypename", "Dec": "name of relation type . expected to have been created in the given relation service ."}{"idx": 52807, "node_name": "list", "Dec": "list of roles ( role objects ) to initialize the relation . can be null . expected to conform to relation info in associated relation type ."}{"idx": 52809, "node_name": "rolename", "Dec": "name of role"}{"idx": 52811, "node_name": "rolenamearray", "Dec": "array of names of roles to be retrieved"}{"idx": 52815, "node_name": "rolename", "Dec": "name of role"}{"idx": 52817, "node_name": "role", "Dec": "role to be set ( name and new value )"}{"idx": 52819, "node_name": "list", "Dec": "list of roles to be set"}{"idx": 52821, "node_name": "objectname", "Dec": "objectname of unregistered mbean"}{"idx": 52822, "node_name": "rolename", "Dec": "name of role where the mbean is referenced"}{"idx": 52831, "node_name": "flag", "Dec": "whether the relation is handled by the relation service ."}{"idx": 52836, "node_name": "roleinfoname", "Dec": "role info name"}{"idx": 52840, "node_name": "message", "Dec": "the detail message ."}{"idx": 52843, "node_name": "relationtypename", "Dec": "name of relation type"}{"idx": 52844, "node_name": "roleinfoarray", "Dec": "list of role definitions ( roleinfo objects )"}{"idx": 52846, "node_name": "relationtypename", "Dec": "name of relation type ."}{"idx": 52850, "node_name": "roleinfoname", "Dec": "role info name"}{"idx": 52852, "node_name": "roleinfo", "Dec": "role info to be added ."}{"idx": 52855, "node_name": "rolename", "Dec": "role name"}{"idx": 52856, "node_name": "rolevalue", "Dec": "role value ( list of objectname objects )"}{"idx": 52860, "node_name": "rolename", "Dec": "role name"}{"idx": 52862, "node_name": "rolevalue", "Dec": "list of objectname objects for referenced mbeans ."}{"idx": 52866, "node_name": "rolevalue", "Dec": "list of objectname objects"}{"idx": 52870, "node_name": "rolename", "Dec": "name of the role ."}{"idx": 52871, "node_name": "mbeanclassname", "Dec": "name of the class of mbean ( s ) expected to be referenced in corresponding role . if an mbean m is in this role , then the mbean server must return true for isinstanceof ( m , mbeanclassname ) ."}{"idx": 52872, "node_name": "read", "Dec": "flag to indicate if the corresponding role can be read"}{"idx": 52873, "node_name": "write", "Dec": "flag to indicate if the corresponding role can be set"}{"idx": 52874, "node_name": "min", "Dec": "minimum degree for role , i.e. minimum number of mbeans to provide in corresponding role must be less than or equal to max . ( role_cardinality_infinity for unlimited )"}{"idx": 52875, "node_name": "max", "Dec": "maximum degree for role , i.e. maximum number of mbeans to provide in corresponding role must be greater than or equal to min ( role_cardinality_infinity for unlimited )"}{"idx": 52876, "node_name": "descr", "Dec": "description of the role ( can be null )"}{"idx": 52878, "node_name": "rolename", "Dec": "name of the role"}{"idx": 52879, "node_name": "mbeanclassname", "Dec": "name of the class of mbean ( s ) expected to be referenced in corresponding role . if an mbean m is in this role , then the mbean server must return true for isinstanceof ( m , mbeanclassname ) ."}{"idx": 52880, "node_name": "read", "Dec": "flag to indicate if the corresponding role can be read"}{"idx": 52881, "node_name": "write", "Dec": "flag to indicate if the corresponding role can be set minimum and maximum degrees defaulted to 1 . description of role defaulted to null ."}{"idx": 52883, "node_name": "rolename", "Dec": "name of the role"}{"idx": 52884, "node_name": "mbeanclassname", "Dec": "name of the class of mbean ( s ) expected to be referenced in corresponding role . if an mbean m is in this role , then the mbean server must return true for isinstanceof ( m , mbeanclassname ) . isreadable and iswritable defaulted to true . minimum and maximum degrees defaulted to 1 . description of role defaulted to null ."}{"idx": 52886, "node_name": "roleinfo", "Dec": "the roleinfo instance to be copied ."}{"idx": 52895, "node_name": "value", "Dec": "the value to be checked"}{"idx": 52897, "node_name": "value", "Dec": "the value to be checked"}{"idx": 52902, "node_name": "message", "Dec": "the detail message ."}{"idx": 52906, "node_name": "initialcapacity", "Dec": "initial capacity"}{"idx": 52908, "node_name": "list", "Dec": "the list that defines the initial contents of the new rolelist ."}{"idx": 52911, "node_name": "role", "Dec": "the role to be added ."}{"idx": 52913, "node_name": "index", "Dec": "the position in the list where the new role object is to be inserted ."}{"idx": 52914, "node_name": "role", "Dec": "the role object to be inserted ."}{"idx": 52916, "node_name": "index", "Dec": "the position specified ."}{"idx": 52917, "node_name": "role", "Dec": "the value to which the role element should be set ."}{"idx": 52919, "node_name": "rolelist", "Dec": "elements to be inserted into the list ( can be null )"}{"idx": 52921, "node_name": "index", "Dec": "position at which to insert the first element from the rolelist specified ."}{"idx": 52922, "node_name": "rolelist", "Dec": "elements to be inserted into the list ."}{"idx": 52926, "node_name": "message", "Dec": "the detail message ."}{"idx": 52929, "node_name": "list", "Dec": "list of roles successfully accessed ."}{"idx": 52930, "node_name": "unresolvedlist", "Dec": "list of roles not accessed ( with problem descriptions ) ."}{"idx": 52934, "node_name": "list", "Dec": "list of roles successfully accessed"}{"idx": 52936, "node_name": "unresolvedlist", "Dec": "list of roles unsuccessfully accessed"}{"idx": 52947, "node_name": "status", "Dec": "a status code ."}{"idx": 52950, "node_name": "name", "Dec": "name of the role"}{"idx": 52951, "node_name": "value", "Dec": "value of the role ( if problem when setting the role )"}{"idx": 52952, "node_name": "pbtype", "Dec": "type of problem ( according to known problem types , listed as static final members ) ."}{"idx": 52957, "node_name": "name", "Dec": "the new role name ."}{"idx": 52959, "node_name": "value", "Dec": "list of objectname objects for referenced mbeans not set in role ."}{"idx": 52961, "node_name": "pbtype", "Dec": "integer corresponding to a problem . must be one of those described as static final members of current class ."}{"idx": 52967, "node_name": "initialcapacity", "Dec": "initial capacity"}{"idx": 52969, "node_name": "list", "Dec": "the list that defines the initial contents of the new roleunresolvedlist ."}{"idx": 52972, "node_name": "role", "Dec": "- the unresolved role to be added ."}{"idx": 52974, "node_name": "index", "Dec": "- the position in the list where the new roleunresolved object is to be inserted ."}{"idx": 52975, "node_name": "role", "Dec": "- the roleunresolved object to be inserted ."}{"idx": 52977, "node_name": "index", "Dec": "- the position specified ."}{"idx": 52978, "node_name": "role", "Dec": "- the value to which the unresolved role element should be set ."}{"idx": 52980, "node_name": "rolelist", "Dec": "- elements to be inserted into the list ( can be null ) ."}{"idx": 52982, "node_name": "index", "Dec": "- position at which to insert the first element from the roleunresolvedlist specified ."}{"idx": 52983, "node_name": "rolelist", "Dec": "- elements to be inserted into the list ."}{"idx": 52988, "node_name": "credentials", "Dec": "the user-defined credentials to be passed into the server in order to authenticate the user before creating the mbeanserverconnection . the actual type of this parameter , and whether it can be null , depends on the connector ."}{"idx": 52995, "node_name": "type", "Dec": "the type of the notification . this is usually one of the constants opened , closed , failed , notifs_lost . it is not an error for it to be a different string ."}{"idx": 52996, "node_name": "source", "Dec": "the connector server or client emitting the notification ."}{"idx": 52997, "node_name": "connectionid", "Dec": "the id of the connection within its connector server ."}{"idx": 52998, "node_name": "sequencenumber", "Dec": "a non-negative integer . it is expected but not required that this number will be greater than any previous sequencenumber in a notification from this source ."}{"idx": 52999, "node_name": "message", "Dec": "an unspecified text message , typically containing a human-readable description of the event . can be null ."}{"idx": 53000, "node_name": "userdata", "Dec": "an object whose type and meaning is defined by the connector server . can be null ."}{"idx": 53006, "node_name": "env", "Dec": "the properties of the connection . properties in this map override properties in the map specified when the jmxconnector was created , if any . this parameter can be null , which is equivalent to an empty map ."}{"idx": 53009, "node_name": "delegationsubject", "Dec": "the subject on behalf of which requests will be performed . can be null , in which case requests will be performed on behalf of the authenticated subject , if any ."}{"idx": 53012, "node_name": "listener", "Dec": "a listener to receive connection status notifications ."}{"idx": 53013, "node_name": "filter", "Dec": "a filter to select which notifications are to be delivered to the listener , or null if all notifications are to be delivered ."}{"idx": 53014, "node_name": "handback", "Dec": "an object to be given to the listener along with each notification . can be null ."}{"idx": 53016, "node_name": "listener", "Dec": "a listener to receive connection status notifications ."}{"idx": 53018, "node_name": "l", "Dec": "a listener to receive connection status notifications ."}{"idx": 53019, "node_name": "f", "Dec": "a filter to select which notifications are to be delivered to the listener . can be null ."}{"idx": 53020, "node_name": "handback", "Dec": "an object to be given to the listener along with each notification . can be null ."}{"idx": 53027, "node_name": "serviceurl", "Dec": "the address of the connector server to connect to ."}{"idx": 53029, "node_name": "serviceurl", "Dec": "the address of the connector server to connect to ."}{"idx": 53030, "node_name": "environment", "Dec": "a set of attributes to determine how the connection is made . this parameter can be null . keys in this map must be strings . the appropriate type of each associated value depends on the attribute . the contents of environment are not changed by this call ."}{"idx": 53032, "node_name": "serviceurl", "Dec": "the address of the connector server to connect to ."}{"idx": 53033, "node_name": "environment", "Dec": "a set of attributes to determine how the connection is made . this parameter can be null . keys in this map must be strings . the appropriate type of each associated value depends on the attribute . the contents of environment are not changed by this call ."}{"idx": 53036, "node_name": "serviceurl", "Dec": "the address of the connector server to connect to ."}{"idx": 53037, "node_name": "environment", "Dec": "a read-only map containing named attributes to determine how the connection is made . keys in this map must be strings . the appropriate type of each associated value depends on the attribute ."}{"idx": 53042, "node_name": "mbeanserver", "Dec": "the mbean server that this connector server is attached to . null if this connector server will be attached to an mbean server by being registered in it ."}{"idx": 53045, "node_name": "env", "Dec": "client connection parameters of the same sort that could be provided to jmxconnector.connect ( map ) . can be null , which is equivalent to an empty map ."}{"idx": 53048, "node_name": "connectionid", "Dec": "the id of the new connection . this must be different from the id of any connection previously opened by this connector server ."}{"idx": 53049, "node_name": "message", "Dec": "the message for the emitted jmxconnectionnotification . can be null . see notification.getmessage() ."}{"idx": 53050, "node_name": "userdata", "Dec": "the userdata for the emitted jmxconnectionnotification . can be null . see notification.getuserdata() ."}{"idx": 53052, "node_name": "connectionid", "Dec": "the id of the closed connection ."}{"idx": 53053, "node_name": "message", "Dec": "the message for the emitted jmxconnectionnotification . can be null . see notification.getmessage() ."}{"idx": 53054, "node_name": "userdata", "Dec": "the userdata for the emitted jmxconnectionnotification . can be null . see notification.getuserdata() ."}{"idx": 53056, "node_name": "connectionid", "Dec": "the id of the failed connection ."}{"idx": 53057, "node_name": "message", "Dec": "the message for the emitted jmxconnectionnotification . can be null . see notification.getmessage() ."}{"idx": 53058, "node_name": "userdata", "Dec": "the userdata for the emitted jmxconnectionnotification . can be null . see notification.getuserdata() ."}{"idx": 53060, "node_name": "mbs", "Dec": "the mbean server in which this connection server is being registered ."}{"idx": 53061, "node_name": "name", "Dec": "the object name of the mbean ."}{"idx": 53069, "node_name": "serviceurl", "Dec": "the address of the new connector server . the actual address of the new connector server , as returned by its getaddress method , will not necessarily be exactly the same . for example , it might include a port number if the original address did not ."}{"idx": 53070, "node_name": "environment", "Dec": "a set of attributes to control the new connector server's behavior . this parameter can be null . keys in this map must be strings . the appropriate type of each associated value depends on the attribute . the contents of environment are not changed by this call ."}{"idx": 53071, "node_name": "mbeanserver", "Dec": "the mbean server that this connector server is attached to . null if this connector server will be attached to an mbean server by being registered in it ."}{"idx": 53077, "node_name": "mbsf", "Dec": "the new mbeanserverforwarder ."}{"idx": 53082, "node_name": "env", "Dec": "client connection parameters of the same sort that can be provided to jmxconnector.connect ( map ) . can be null , which is equivalent to an empty map ."}{"idx": 53085, "node_name": "serviceurl", "Dec": "the address of the new connector server . the actual address of the new connector server , as returned by its getaddress method , will not necessarily be exactly the same . for example , it might include a port number if the original address did not ."}{"idx": 53086, "node_name": "environment", "Dec": "a read-only map containing named attributes to control the new connector server's behavior . keys in this map must be strings . the appropriate type of each associated value depends on the attribute ."}{"idx": 53087, "node_name": "mbeanserver", "Dec": "the mbean server that this connector server is attached to . null if this connector server will be attached to an mbean server by being registered in it ."}{"idx": 53090, "node_name": "name", "Dec": "the jmx remote api name for this identity ."}{"idx": 53094, "node_name": "o", "Dec": "object to be compared for equality with this jmxprincipal ."}{"idx": 53099, "node_name": "message", "Dec": "the detail message"}{"idx": 53101, "node_name": "message", "Dec": "the detail message"}{"idx": 53102, "node_name": "cause", "Dec": "the nested exception"}{"idx": 53105, "node_name": "s", "Dec": "the detail message ."}{"idx": 53106, "node_name": "err", "Dec": "the nested error . an instance of this class can be constructed where this parameter is null , but the standard connectors will never do so ."}{"idx": 53109, "node_name": "serviceurl", "Dec": "the url string to be parsed ."}{"idx": 53111, "node_name": "protocol", "Dec": "the protocol part of the url . if null , defaults to jmxmp ."}{"idx": 53112, "node_name": "host", "Dec": "the host part of the url . if host is null and if local host name can be resolved to an ip , then host defaults to local host name as determined by inetaddress.getlocalhost() .gethostname() . if host is null and if local host name cannot be resolved to an ip , then host defaults to numeric ip address of one of the active network interfaces . if host is a numeric ipv6 address , it can optionally be enclosed in square brackets [ ] ."}{"idx": 53113, "node_name": "port", "Dec": "the port part of the url ."}{"idx": 53115, "node_name": "protocol", "Dec": "the protocol part of the url . if null , defaults to jmxmp ."}{"idx": 53116, "node_name": "host", "Dec": "the host part of the url . if host is null and if local host name can be resolved to an ip , then host defaults to local host name as determined by inetaddress.getlocalhost() .gethostname() . if host is null and if local host name cannot be resolved to an ip , then host defaults to numeric ip address of one of the active network interfaces . if host is a numeric ipv6 address , it can optionally be enclosed in square brackets [ ] ."}{"idx": 53117, "node_name": "port", "Dec": "the port part of the url ."}{"idx": 53118, "node_name": "urlpath", "Dec": "the url path part of the url . if null , defaults to the empty string ."}{"idx": 53125, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 53129, "node_name": "mbs", "Dec": "the mbeanserver object to which requests will be forwarded ."}{"idx": 53132, "node_name": "earliestsequencenumber", "Dec": "the sequence number of the earliest notification still in the buffer ."}{"idx": 53133, "node_name": "nextsequencenumber", "Dec": "the sequence number of the next notification available for querying ."}{"idx": 53134, "node_name": "targetednotifications", "Dec": "the notifications resulting from the query , and the listeners they correspond to . this array can be empty ."}{"idx": 53143, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 53144, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 53145, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53147, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 53148, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 53149, "node_name": "loadername", "Dec": "the object name of the class loader to be used ."}{"idx": 53150, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53152, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 53153, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 53154, "node_name": "params", "Dec": "an array containing the parameters of the constructor to be invoked , encapsulated into a marshalledobject . the encapsulated array can be null , equivalent to an empty array ."}{"idx": 53155, "node_name": "signature", "Dec": "an array containing the signature of the constructor to be invoked . can be null , equivalent to an empty array ."}{"idx": 53156, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53158, "node_name": "classname", "Dec": "the class name of the mbean to be instantiated ."}{"idx": 53159, "node_name": "name", "Dec": "the object name of the mbean . may be null ."}{"idx": 53160, "node_name": "loadername", "Dec": "the object name of the class loader to be used ."}{"idx": 53161, "node_name": "params", "Dec": "an array containing the parameters of the constructor to be invoked , encapsulated into a marshalledobject . the encapsulated array can be null , equivalent to an empty array ."}{"idx": 53162, "node_name": "signature", "Dec": "an array containing the signature of the constructor to be invoked . can be null , equivalent to an empty array ."}{"idx": 53163, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53165, "node_name": "name", "Dec": "the object name of the mbean to be unregistered ."}{"idx": 53166, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53168, "node_name": "name", "Dec": "the object name of the mbean ."}{"idx": 53169, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53171, "node_name": "name", "Dec": "the object name pattern identifying the mbeans to be retrieved . if null or no domain and key properties are specified , all the mbeans registered will be retrieved ."}{"idx": 53172, "node_name": "query", "Dec": "the query expression to be applied for selecting mbeans , encapsulated into a marshalledobject . if the marshalledobject encapsulates a null value no query expression will be applied for selecting mbeans ."}{"idx": 53173, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53175, "node_name": "name", "Dec": "the object name pattern identifying the mbean names to be retrieved . if null or no domain and key properties are specified , the name of all registered mbeans will be retrieved ."}{"idx": 53176, "node_name": "query", "Dec": "the query expression to be applied for selecting mbeans , encapsulated into a marshalledobject . if the marshalledobject encapsulates a null value no query expression will be applied for selecting mbeans ."}{"idx": 53177, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53179, "node_name": "name", "Dec": "the object name of the mbean to be checked ."}{"idx": 53180, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53182, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53184, "node_name": "name", "Dec": "the object name of the mbean from which the attribute is to be retrieved ."}{"idx": 53185, "node_name": "attribute", "Dec": "a string specifying the name of the attribute to be retrieved ."}{"idx": 53186, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53188, "node_name": "name", "Dec": "the object name of the mbean from which the attributes are retrieved ."}{"idx": 53189, "node_name": "attributes", "Dec": "a list of the attributes to be retrieved ."}{"idx": 53190, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53192, "node_name": "name", "Dec": "the name of the mbean within which the attribute is to be set ."}{"idx": 53193, "node_name": "attribute", "Dec": "the identification of the attribute to be set and the value it is to be set to , encapsulated into a marshalledobject ."}{"idx": 53194, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53196, "node_name": "name", "Dec": "the object name of the mbean within which the attributes are to be set ."}{"idx": 53197, "node_name": "attributes", "Dec": "a list of attributes : the identification of the attributes to be set and the values they are to be set to , encapsulated into a marshalledobject ."}{"idx": 53198, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53200, "node_name": "name", "Dec": "the object name of the mbean on which invoke(javax.management.ObjectName,java.lang.String,java.rmi.MarshalledObject,java.lang.String[],javax.security.auth.Subject) is to be invoked ."}{"idx": 53201, "node_name": "operationname", "Dec": "the name of the operation to be invoked ."}{"idx": 53202, "node_name": "params", "Dec": "an array containing the parameters to be set when the operation is invoked , encapsulated into a marshalledobject . the encapsulated array can be null , equivalent to an empty array ."}{"idx": 53203, "node_name": "signature", "Dec": "an array containing the signature of the operation . the class objects will be loaded using the same class loader as the one used for loading the mbean on which the operation was invoked . can be null , equivalent to an empty array ."}{"idx": 53204, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53206, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53208, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53210, "node_name": "name", "Dec": "the name of the mbean to analyze"}{"idx": 53211, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53213, "node_name": "name", "Dec": "the objectname of the mbean ."}{"idx": 53214, "node_name": "classname", "Dec": "the name of the class ."}{"idx": 53215, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53217, "node_name": "name", "Dec": "the name of the mbean on which the listener should be added ."}{"idx": 53218, "node_name": "listener", "Dec": "the object name of the listener which will handle the notifications emitted by the registered mbean ."}{"idx": 53219, "node_name": "filter", "Dec": "the filter object , encapsulated into a marshalledobject . if filter encapsulated in the marshalledobject has a null value , no filtering will be performed before handling notifications ."}{"idx": 53220, "node_name": "handback", "Dec": "the context to be sent to the listener when a notification is emitted , encapsulated into a marshalledobject ."}{"idx": 53221, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53223, "node_name": "name", "Dec": "the name of the mbean on which the listener should be removed ."}{"idx": 53224, "node_name": "listener", "Dec": "the object name of the listener to be removed ."}{"idx": 53225, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53227, "node_name": "name", "Dec": "the name of the mbean on which the listener should be removed ."}{"idx": 53228, "node_name": "listener", "Dec": "a listener that was previously added to this mbean ."}{"idx": 53229, "node_name": "filter", "Dec": "the filter that was specified when the listener was added , encapsulated into a marshalledobject ."}{"idx": 53230, "node_name": "handback", "Dec": "the handback that was specified when the listener was added , encapsulated into a marshalledobject ."}{"idx": 53231, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53233, "node_name": "names", "Dec": "the objectnames identifying the mbeans emitting the notifications ."}{"idx": 53234, "node_name": "filters", "Dec": "an array of marshalled representations of the notificationfilters . elements of this array can be null ."}{"idx": 53235, "node_name": "delegationsubjects", "Dec": "the subjects on behalf of which the listeners are being added . elements of this array can be null . also , the delegationsubjects parameter itself can be null , which is equivalent to an array of null values with the same size as the names and filters arrays ."}{"idx": 53237, "node_name": "name", "Dec": "the objectname identifying the mbean emitting the notifications ."}{"idx": 53238, "node_name": "listenerids", "Dec": "the list of the ids corresponding to the listeners to remove ."}{"idx": 53239, "node_name": "delegationsubject", "Dec": "the subject containing the delegation principals or null if the authentication principal is used instead ."}{"idx": 53241, "node_name": "clientsequencenumber", "Dec": "the first sequence number that the client is interested in . if negative , it is interpreted as meaning the sequence number that the next notification will have ."}{"idx": 53242, "node_name": "maxnotifications", "Dec": "the maximum number of different notifications to return . the targetednotification array in the returned notificationresult can have more elements than this if the same notification appears more than once . the behavior is unspecified if this parameter is negative ."}{"idx": 53243, "node_name": "timeout", "Dec": "the maximum time in milliseconds to wait for a notification to arrive . this can be 0 to indicate that fetchNotifications(long,int,long) should not wait if there are no notifications , but should return at once . it can be long.max_value to indicate that there is no timeout . the behavior is unspecified if this parameter is negative ."}{"idx": 53246, "node_name": "rmiserver", "Dec": "the rmiserverimpl object for which this connection is created . the behavior is unspecified if this parameter is null ."}{"idx": 53247, "node_name": "connectionid", "Dec": "the id for this connection . the behavior is unspecified if this parameter is null ."}{"idx": 53248, "node_name": "defaultclassloader", "Dec": "the default classloader to be used when deserializing marshalled objects . can be null , to signify the bootstrap class loader ."}{"idx": 53249, "node_name": "subject", "Dec": "the authenticated subject to be used for authorization . can be null , to signify that no subject has been authenticated ."}{"idx": 53250, "node_name": "env", "Dec": "the environment containing attributes for the new rmiserverimpl . can be null , equivalent to an empty map ."}{"idx": 53255, "node_name": "url", "Dec": "the address of the rmi connector server ."}{"idx": 53256, "node_name": "environment", "Dec": "additional attributes specifying how to make the connection . for jndi-based addresses , these attributes can usefully include jndi attributes recognized by initialcontext . this parameter can be null , which is equivalent to an empty map ."}{"idx": 53258, "node_name": "rmiserver", "Dec": "an rmi stub representing the rmi connector server ."}{"idx": 53259, "node_name": "environment", "Dec": "additional attributes specifying how to make the connection . this parameter can be null , which is equivalent to an empty map ."}{"idx": 53264, "node_name": "environment", "Dec": "the properties of the connection . properties in this map override properties in the map specified when the jmxconnector was created , if any . this parameter can be null , which is equivalent to an empty map ."}{"idx": 53272, "node_name": "url", "Dec": "the url defining how to create the connector server . cannot be null ."}{"idx": 53273, "node_name": "environment", "Dec": "attributes governing the creation and storing of the rmi object . can be null , which is equivalent to an empty map ."}{"idx": 53275, "node_name": "url", "Dec": "the url defining how to create the connector server . cannot be null ."}{"idx": 53276, "node_name": "environment", "Dec": "attributes governing the creation and storing of the rmi object . can be null , which is equivalent to an empty map ."}{"idx": 53277, "node_name": "mbeanserver", "Dec": "the mbean server to which the new connector server is attached , or null if it will be attached by being registered as an mbean in the mbean server ."}{"idx": 53279, "node_name": "url", "Dec": "the url defining how to create the connector server . cannot be null ."}{"idx": 53280, "node_name": "environment", "Dec": "attributes governing the creation and storing of the rmi object . can be null , which is equivalent to an empty map ."}{"idx": 53281, "node_name": "rmiserverimpl", "Dec": "an implementation of the rmiserver interface , consistent with the protocol type specified in url . if this parameter is non null , the protocol type specified by url is not constrained , and is assumed to be valid . otherwise , only \" rmi \" will be recognized ."}{"idx": 53282, "node_name": "mbeanserver", "Dec": "the mbean server to which the new connector server is attached , or null if it will be attached by being registered as an mbean in the mbean server ."}{"idx": 53284, "node_name": "env", "Dec": "client connection parameters of the same sort that could be provided to jmxconnector.connect ( map ) . can be null , which is equivalent to an empty map ."}{"idx": 53290, "node_name": "port", "Dec": "the port on which this object and the rmiconnectionimpl objects it creates will be exported . can be zero , to indicate any available port ."}{"idx": 53291, "node_name": "csf", "Dec": "the client socket factory for the created rmi objects . can be null ."}{"idx": 53292, "node_name": "ssf", "Dec": "the server socket factory for the created rmi objects . can be null ."}{"idx": 53293, "node_name": "env", "Dec": "the environment map . can be null ."}{"idx": 53296, "node_name": "connectionid", "Dec": "the id of the new connection . every connection opened by this connector server will have a different id . the behavior is unspecified if this parameter is null ."}{"idx": 53297, "node_name": "subject", "Dec": "the authenticated subject . can be null ."}{"idx": 53302, "node_name": "credentials", "Dec": "this object specifies the user-defined credentials to be passed in to the server in order to authenticate the user before creating the rmiconnection . can be null ."}{"idx": 53305, "node_name": "env", "Dec": "the environment containing attributes for the new rmiserverimpl . can be null , which is equivalent to an empty map ."}{"idx": 53309, "node_name": "cl", "Dec": "the new classloader to be used by this connector server ."}{"idx": 53312, "node_name": "mbs", "Dec": "the new mbeanserver . can be null , but new client connections will be refused as long as it is ."}{"idx": 53315, "node_name": "credentials", "Dec": "this object specifies the user-defined credentials to be passed in to the server in order to authenticate the caller before creating the rmiconnection . can be null ."}{"idx": 53317, "node_name": "connectionid", "Dec": "the id of the new connection . every connection opened by this connector server will have a different id . the behavior is unspecified if this parameter is null ."}{"idx": 53318, "node_name": "subject", "Dec": "the authenticated subject . can be null ."}{"idx": 53320, "node_name": "client", "Dec": "a connection previously returned by makeclient on which the closeclient method has not previously been called . the behavior is unspecified if these conditions are violated , including the case where client is null ."}{"idx": 53323, "node_name": "client", "Dec": "the client connection that has been closed ."}{"idx": 53329, "node_name": "name", "Dec": "the name of the subjectdelegationpermission"}{"idx": 53331, "node_name": "name", "Dec": "the name of the subjectdelegationpermission"}{"idx": 53332, "node_name": "actions", "Dec": "must be null ."}{"idx": 53335, "node_name": "notification", "Dec": "notification emitted from the mbean server ."}{"idx": 53336, "node_name": "listenerid", "Dec": "the id of the listener to which this notification is targeted ."}{"idx": 53342, "node_name": "e", "Dec": "the wrapped error ."}{"idx": 53344, "node_name": "e", "Dec": "the wrapped error ."}{"idx": 53345, "node_name": "message", "Dec": "the detail message ."}{"idx": 53350, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 53352, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 53353, "node_name": "message", "Dec": "the detail message ."}{"idx": 53358, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 53360, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 53361, "node_name": "message", "Dec": "the detail message ."}{"idx": 53367, "node_name": "message", "Dec": "the detail message ."}{"idx": 53370, "node_name": "implementation", "Dec": "the implementation of the mbean interface ."}{"idx": 53371, "node_name": "mbeaninterface", "Dec": "a standard mbean interface ."}{"idx": 53372, "node_name": "emitter", "Dec": "the object that will handle notifications ."}{"idx": 53374, "node_name": "implementation", "Dec": "the implementation of the mbean interface ."}{"idx": 53375, "node_name": "mbeaninterface", "Dec": "a standard mbean interface ."}{"idx": 53376, "node_name": "ismxbean", "Dec": "if true , the mbeaninterface parameter names an mxbean interface and the resultant mbean is an mxbean ."}{"idx": 53377, "node_name": "emitter", "Dec": "the object that will handle notifications ."}{"idx": 53379, "node_name": "mbeaninterface", "Dec": "a standardmbean interface ."}{"idx": 53380, "node_name": "emitter", "Dec": "the object that will handle notifications ."}{"idx": 53382, "node_name": "mbeaninterface", "Dec": "a standardmbean interface ."}{"idx": 53383, "node_name": "ismxbean", "Dec": "if true , the mbeaninterface parameter names an mxbean interface and the resultant mbean is an mxbean ."}{"idx": 53384, "node_name": "emitter", "Dec": "the object that will handle notifications ."}{"idx": 53386, "node_name": "n", "Dec": "the notification to send ."}{"idx": 53389, "node_name": "implementation", "Dec": "the implementation of this mbean ."}{"idx": 53390, "node_name": "mbeaninterface", "Dec": "the management interface exported by this mbean's implementation . if null , then this object will use standard jmx design pattern to determine the management interface associated with the given implementation ."}{"idx": 53392, "node_name": "mbeaninterface", "Dec": "the management interface exported by this mbean ."}{"idx": 53394, "node_name": "implementation", "Dec": "the implementation of this mbean ."}{"idx": 53395, "node_name": "mbeaninterface", "Dec": "the management interface exported by this mbean's implementation . if null , then this object will use standard jmx design pattern to determine the management interface associated with the given implementation ."}{"idx": 53396, "node_name": "ismxbean", "Dec": "if true , the mbeaninterface parameter names an mxbean interface and the resultant mbean is an mxbean ."}{"idx": 53398, "node_name": "mbeaninterface", "Dec": "the management interface exported by this mbean ."}{"idx": 53399, "node_name": "ismxbean", "Dec": "if true , the mbeaninterface parameter names an mxbean interface and the resultant mbean is an mxbean ."}{"idx": 53401, "node_name": "implementation", "Dec": "the new implementation of this standard mbean ( or mxbean ) . the implementation object must implement the standard mbean ( or mxbean ) interface that was supplied when this standardmbean was constructed ."}{"idx": 53407, "node_name": "info", "Dec": "the default mbeaninfo derived by reflection ."}{"idx": 53409, "node_name": "info", "Dec": "the default mbeaninfo derived by reflection ."}{"idx": 53411, "node_name": "info", "Dec": "the default mbeanfeatureinfo derived by reflection ."}{"idx": 53413, "node_name": "info", "Dec": "the default mbeanattributeinfo derived by reflection ."}{"idx": 53415, "node_name": "info", "Dec": "the default mbeanconstructorinfo derived by reflection ."}{"idx": 53417, "node_name": "ctor", "Dec": "the default mbeanconstructorinfo derived by reflection ."}{"idx": 53418, "node_name": "param", "Dec": "the default mbeanparameterinfo derived by reflection ."}{"idx": 53419, "node_name": "sequence", "Dec": "the sequence number of the parameter considered ( \" 0 \" for the first parameter , \" 1 \" for the second parameter , etc ... ) ."}{"idx": 53421, "node_name": "ctor", "Dec": "the default mbeanconstructorinfo derived by reflection ."}{"idx": 53422, "node_name": "param", "Dec": "the default mbeanparameterinfo derived by reflection ."}{"idx": 53423, "node_name": "sequence", "Dec": "the sequence number of the parameter considered ( \" 0 \" for the first parameter , \" 1 \" for the second parameter , etc ... ) ."}{"idx": 53425, "node_name": "info", "Dec": "the default mbeanoperationinfo derived by reflection ."}{"idx": 53427, "node_name": "info", "Dec": "the default mbeanoperationinfo derived by reflection ."}{"idx": 53429, "node_name": "op", "Dec": "the default mbeanoperationinfo derived by reflection ."}{"idx": 53430, "node_name": "param", "Dec": "the default mbeanparameterinfo derived by reflection ."}{"idx": 53431, "node_name": "sequence", "Dec": "the sequence number of the parameter considered ( \" 0 \" for the first parameter , \" 1 \" for the second parameter , etc ... ) ."}{"idx": 53433, "node_name": "op", "Dec": "the default mbeanoperationinfo derived by reflection ."}{"idx": 53434, "node_name": "param", "Dec": "the default mbeanparameterinfo derived by reflection ."}{"idx": 53435, "node_name": "sequence", "Dec": "the sequence number of the parameter considered ( \" 0 \" for the first parameter , \" 1 \" for the second parameter , etc ... ) ."}{"idx": 53437, "node_name": "ctors", "Dec": "the default mbeanconstructorinfo [ ] derived by reflection ."}{"idx": 53438, "node_name": "impl", "Dec": "the wrapped implementation . if null is passed , the wrapped implementation is ignored and ctors is returned ."}{"idx": 53441, "node_name": "info", "Dec": "the new mbeaninfo to cache . any previously cached value is discarded . this parameter may be null , in which case there is no new cached value ."}{"idx": 53443, "node_name": "server", "Dec": "the mbean server in which the mbean will be registered ."}{"idx": 53444, "node_name": "name", "Dec": "the object name of the mbean . this name is null if the name parameter to one of the creatembean or registermbean methods in the mbeanserver interface is null . in that case , preRegister(javax.management.MBeanServer,javax.management.ObjectName) must return a non-null objectname for the new mbean ."}{"idx": 53446, "node_name": "registrationdone", "Dec": "indicates whether or not the mbean has been successfully registered in the mbean server . the value false means that the registration phase has failed ."}{"idx": 53452, "node_name": "val", "Dec": "the string that will be the value of this expression"}{"idx": 53456, "node_name": "name", "Dec": "the name of the mbean on which the valueexp will be applied ."}{"idx": 53465, "node_name": "server", "Dec": "the mbean server in which the timer mbean will be registered ."}{"idx": 53466, "node_name": "name", "Dec": "the object name of the timer mbean ."}{"idx": 53468, "node_name": "registrationdone", "Dec": "indicates whether or not the mbean has been successfully registered in the mbean server . the value false means that the registration phase has failed ."}{"idx": 53474, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53475, "node_name": "message", "Dec": "the timer notification detailed message ."}{"idx": 53476, "node_name": "userdata", "Dec": "the timer notification user data object ."}{"idx": 53477, "node_name": "date", "Dec": "the date when the notification occurs ."}{"idx": 53478, "node_name": "period", "Dec": "the period of the timer notification ( in milliseconds ) ."}{"idx": 53479, "node_name": "nboccurences", "Dec": "the total number the timer notification will be emitted ."}{"idx": 53480, "node_name": "fixedrate", "Dec": "if true and if the notification is periodic , the notification is scheduled with a fixed-rate execution scheme . if false and if the notification is periodic , the notification is scheduled with a fixed-delay execution scheme . ignored if the notification is not periodic ."}{"idx": 53482, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53483, "node_name": "message", "Dec": "the timer notification detailed message ."}{"idx": 53484, "node_name": "userdata", "Dec": "the timer notification user data object ."}{"idx": 53485, "node_name": "date", "Dec": "the date when the notification occurs ."}{"idx": 53486, "node_name": "period", "Dec": "the period of the timer notification ( in milliseconds ) ."}{"idx": 53487, "node_name": "nboccurences", "Dec": "the total number the timer notification will be emitted ."}{"idx": 53489, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53490, "node_name": "message", "Dec": "the timer notification detailed message ."}{"idx": 53491, "node_name": "userdata", "Dec": "the timer notification user data object ."}{"idx": 53492, "node_name": "date", "Dec": "the date when the notification occurs ."}{"idx": 53493, "node_name": "period", "Dec": "the period of the timer notification ( in milliseconds ) ."}{"idx": 53495, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53496, "node_name": "message", "Dec": "the timer notification detailed message ."}{"idx": 53497, "node_name": "userdata", "Dec": "the timer notification user data object ."}{"idx": 53498, "node_name": "date", "Dec": "the date when the notification occurs ."}{"idx": 53500, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53502, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53507, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53509, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53511, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53513, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53515, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53517, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53519, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53521, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53524, "node_name": "value", "Dec": "the past notifications sending on / off flag value ."}{"idx": 53531, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53532, "node_name": "message", "Dec": "the timer notification detailed message ."}{"idx": 53533, "node_name": "userdata", "Dec": "the timer notification user data object ."}{"idx": 53534, "node_name": "date", "Dec": "the date when the notification occurs ."}{"idx": 53535, "node_name": "period", "Dec": "the period of the timer notification ( in milliseconds ) ."}{"idx": 53536, "node_name": "nboccurences", "Dec": "the total number the timer notification will be emitted ."}{"idx": 53537, "node_name": "fixedrate", "Dec": "if true and if the notification is periodic , the notification is scheduled with a fixed-rate execution scheme . if false and if the notification is periodic , the notification is scheduled with a fixed-delay execution scheme . ignored if the notification is not periodic ."}{"idx": 53539, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53540, "node_name": "message", "Dec": "the timer notification detailed message ."}{"idx": 53541, "node_name": "userdata", "Dec": "the timer notification user data object ."}{"idx": 53542, "node_name": "date", "Dec": "the date when the notification occurs ."}{"idx": 53543, "node_name": "period", "Dec": "the period of the timer notification ( in milliseconds ) ."}{"idx": 53544, "node_name": "nboccurences", "Dec": "the total number the timer notification will be emitted ."}{"idx": 53546, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53547, "node_name": "message", "Dec": "the timer notification detailed message ."}{"idx": 53548, "node_name": "userdata", "Dec": "the timer notification user data object ."}{"idx": 53549, "node_name": "date", "Dec": "the date when the notification occurs ."}{"idx": 53550, "node_name": "period", "Dec": "the period of the timer notification ( in milliseconds ) ."}{"idx": 53552, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53553, "node_name": "message", "Dec": "the timer notification detailed message ."}{"idx": 53554, "node_name": "userdata", "Dec": "the timer notification user data object ."}{"idx": 53555, "node_name": "date", "Dec": "the date when the notification occurs ."}{"idx": 53557, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53559, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53564, "node_name": "type", "Dec": "the timer notification type ."}{"idx": 53566, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53568, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53570, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53572, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53574, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53576, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53578, "node_name": "id", "Dec": "the timer notification identifier ."}{"idx": 53581, "node_name": "value", "Dec": "the past notifications sending on / off flag value ."}{"idx": 53586, "node_name": "type", "Dec": "the notification type ."}{"idx": 53587, "node_name": "source", "Dec": "the notification producer ."}{"idx": 53588, "node_name": "sequencenumber", "Dec": "the notification sequence number within the source object ."}{"idx": 53589, "node_name": "timestamp", "Dec": "the notification emission date ."}{"idx": 53590, "node_name": "msg", "Dec": "the notification message ."}{"idx": 53591, "node_name": "id", "Dec": "the notification identifier ."}{"idx": 53595, "node_name": "name", "Dec": "the name of the mbean on which the valueexp will be applied ."}{"idx": 53598, "node_name": "explanation", "Dec": "a possibly null string containing additional detail about this exception ."}{"idx": 53602, "node_name": "explanation", "Dec": "a possibly null string containing additional detail about this exception ."}{"idx": 53606, "node_name": "addrtype", "Dec": "a non-null string describing the type of the address ."}{"idx": 53607, "node_name": "src", "Dec": "the non-null contents of the address as a byte array . the contents of src is copied into the new binaryrefaddr ."}{"idx": 53609, "node_name": "addrtype", "Dec": "a non-null string describing the type of the address ."}{"idx": 53610, "node_name": "src", "Dec": "the non-null contents of the address as a byte array . the contents of src is copied into the new binaryrefaddr ."}{"idx": 53611, "node_name": "offset", "Dec": "the starting index in src to get the bytes . 0 <= offset <= src.length ."}{"idx": 53612, "node_name": "count", "Dec": "the number of bytes to extract from src . 0 <= count <= src.length-offset ."}{"idx": 53615, "node_name": "obj", "Dec": "the possibly null object to check ."}{"idx": 53620, "node_name": "name", "Dec": "the non-null name of the object . it is relative to the target context ( which is named by the first parameter of the listbindings() method )"}{"idx": 53621, "node_name": "obj", "Dec": "the possibly null object bound to name ."}{"idx": 53623, "node_name": "name", "Dec": "the non-null string name of the object ."}{"idx": 53624, "node_name": "obj", "Dec": "the possibly null object bound to name ."}{"idx": 53625, "node_name": "isrelative", "Dec": "true if name is a name relative to the target context ( which is named by the first parameter of the listbindings() method ); false if name is a url string ."}{"idx": 53627, "node_name": "name", "Dec": "the non-null name of the object . it is relative to the target context ( which is named by the first parameter of the listbindings() method )"}{"idx": 53628, "node_name": "classname", "Dec": "the possibly null class name of the object bound to name . if null , the class name of obj is returned by getclassname() . if obj is also null , getclassname() will return null ."}{"idx": 53629, "node_name": "obj", "Dec": "the possibly null object bound to name ."}{"idx": 53631, "node_name": "name", "Dec": "the non-null string name of the object ."}{"idx": 53632, "node_name": "classname", "Dec": "the possibly null class name of the object bound to name . if null , the class name of obj is returned by getclassname() . if obj is also null , getclassname() will return null ."}{"idx": 53633, "node_name": "obj", "Dec": "the possibly null object bound to name ."}{"idx": 53634, "node_name": "isrelative", "Dec": "true if name is a name relative to the target context ( which is named by the first parameter of the listbindings() method ); false if name is a url string ."}{"idx": 53638, "node_name": "obj", "Dec": "the possibly null object to use ."}{"idx": 53646, "node_name": "explanation", "Dec": "a possibly null string containing additional detail about this exception . if null , this exception has no detail message ."}{"idx": 53650, "node_name": "environment", "Dec": "a possibly null environment property set . null means no environment is being recorded for this exception ."}{"idx": 53653, "node_name": "newname", "Dec": "the possibly null name to set the \" remaining new name \" to . if null , it sets the remaining name field to null ."}{"idx": 53656, "node_name": "altname", "Dec": "the name of the resolved object , relative to altnamectx . it is a composite name . if null , then no name is specified ."}{"idx": 53659, "node_name": "altnamectx", "Dec": "the context relative to which altname is named . if null , then the default initial context is implied ."}{"idx": 53662, "node_name": "explanation", "Dec": "additional detail about this exception ."}{"idx": 53666, "node_name": "comps", "Dec": "a non-null enumeration containing the components for the new composite name . each element is of class string . the enumeration will be consumed to extract its elements ."}{"idx": 53668, "node_name": "n", "Dec": "the non-null string to parse ."}{"idx": 53672, "node_name": "obj", "Dec": "the possibly null object to compare against ."}{"idx": 53675, "node_name": "obj", "Dec": "the non-null object to compare against ."}{"idx": 53681, "node_name": "posn", "Dec": "the 0-based index of the component to retrieve . must be in the range [ 0 , size() ) ."}{"idx": 53683, "node_name": "posn", "Dec": "the 0-based index of the component at which to stop . must be in the range [ 0 , size() ] ."}{"idx": 53685, "node_name": "posn", "Dec": "the 0-based index of the component at which to start . must be in the range [ 0 , size() ] ."}{"idx": 53687, "node_name": "n", "Dec": "the possibly null name to check ."}{"idx": 53689, "node_name": "n", "Dec": "the possibly null name to check ."}{"idx": 53691, "node_name": "suffix", "Dec": "the non-null components to add ."}{"idx": 53693, "node_name": "n", "Dec": "the non-null components to add ."}{"idx": 53694, "node_name": "posn", "Dec": "the index in this name at which to add the new components . must be in the range [ 0 , size() ] ."}{"idx": 53696, "node_name": "comp", "Dec": "the non-null component to add ."}{"idx": 53698, "node_name": "comp", "Dec": "the non-null component to add ."}{"idx": 53699, "node_name": "posn", "Dec": "the index at which to add the new component . must be in the range [ 0 , size() ] ."}{"idx": 53701, "node_name": "posn", "Dec": "the index of the component to delete . must be in the range [ 0 , size() ) ."}{"idx": 53705, "node_name": "comps", "Dec": "a non-null enumeration of the components to add . each element of the enumeration is of class string . the enumeration will be consumed to extract its elements ."}{"idx": 53706, "node_name": "syntax", "Dec": "a non-null properties that specify the syntax of this compound name . see class description for contents of properties ."}{"idx": 53708, "node_name": "n", "Dec": "the non-null string to parse ."}{"idx": 53709, "node_name": "syntax", "Dec": "a non-null list of properties that specify the syntax of this compound name . see class description for contents of properties ."}{"idx": 53712, "node_name": "obj", "Dec": "the possibly null object to compare against ."}{"idx": 53716, "node_name": "obj", "Dec": "the non-null object to compare against ."}{"idx": 53721, "node_name": "posn", "Dec": "the 0-based index of the component to retrieve . must be in the range [ 0 , size() ) ."}{"idx": 53723, "node_name": "posn", "Dec": "the 0-based index of the component at which to stop . must be in the range [ 0 , size() ] ."}{"idx": 53725, "node_name": "posn", "Dec": "the 0-based index of the component at which to start . must be in the range [ 0 , size() ] ."}{"idx": 53727, "node_name": "n", "Dec": "the possibly null compound name to check ."}{"idx": 53729, "node_name": "n", "Dec": "the possibly null compound name to check ."}{"idx": 53731, "node_name": "suffix", "Dec": "the non-null components to add ."}{"idx": 53733, "node_name": "n", "Dec": "the non-null components to add ."}{"idx": 53734, "node_name": "posn", "Dec": "the index in this name at which to add the new components . must be in the range [ 0 , size() ] ."}{"idx": 53736, "node_name": "comp", "Dec": "the non-null component to add ."}{"idx": 53738, "node_name": "comp", "Dec": "the non-null component to add ."}{"idx": 53739, "node_name": "posn", "Dec": "the index at which to add the new component . must be in the range [ 0 , size() ] ."}{"idx": 53741, "node_name": "posn", "Dec": "the index of the component to delete . must be in the range [ 0 , size() ) ."}{"idx": 53744, "node_name": "explanation", "Dec": "a possibly null string containing additional detail about this exception ."}{"idx": 53762, "node_name": "name", "Dec": "the name of the object to look up"}{"idx": 53764, "node_name": "name", "Dec": "the name of the object to look up"}{"idx": 53766, "node_name": "name", "Dec": "the name to bind ; may not be empty"}{"idx": 53767, "node_name": "obj", "Dec": "the object to bind ; possibly null"}{"idx": 53769, "node_name": "name", "Dec": "the name to bind ; may not be empty"}{"idx": 53770, "node_name": "obj", "Dec": "the object to bind ; possibly null"}{"idx": 53772, "node_name": "name", "Dec": "the name to bind ; may not be empty"}{"idx": 53773, "node_name": "obj", "Dec": "the object to bind ; possibly null"}{"idx": 53775, "node_name": "name", "Dec": "the name to bind ; may not be empty"}{"idx": 53776, "node_name": "obj", "Dec": "the object to bind ; possibly null"}{"idx": 53778, "node_name": "name", "Dec": "the name to unbind ; may not be empty"}{"idx": 53780, "node_name": "name", "Dec": "the name to unbind ; may not be empty"}{"idx": 53782, "node_name": "oldname", "Dec": "the name of the existing binding ; may not be empty"}{"idx": 53783, "node_name": "newname", "Dec": "the name of the new binding ; may not be empty"}{"idx": 53785, "node_name": "oldname", "Dec": "the name of the existing binding ; may not be empty"}{"idx": 53786, "node_name": "newname", "Dec": "the name of the new binding ; may not be empty"}{"idx": 53788, "node_name": "name", "Dec": "the name of the context to list"}{"idx": 53790, "node_name": "name", "Dec": "the name of the context to list"}{"idx": 53792, "node_name": "name", "Dec": "the name of the context to list"}{"idx": 53794, "node_name": "name", "Dec": "the name of the context to list"}{"idx": 53796, "node_name": "name", "Dec": "the name of the context to be destroyed ; may not be empty"}{"idx": 53798, "node_name": "name", "Dec": "the name of the context to be destroyed ; may not be empty"}{"idx": 53800, "node_name": "name", "Dec": "the name of the context to create ; may not be empty"}{"idx": 53802, "node_name": "name", "Dec": "the name of the context to create ; may not be empty"}{"idx": 53804, "node_name": "name", "Dec": "the name of the object to look up"}{"idx": 53806, "node_name": "name", "Dec": "the name of the object to look up"}{"idx": 53808, "node_name": "name", "Dec": "the name of the context from which to get the parser"}{"idx": 53810, "node_name": "name", "Dec": "the name of the context from which to get the parser"}{"idx": 53812, "node_name": "name", "Dec": "a name relative to this context"}{"idx": 53813, "node_name": "prefix", "Dec": "the name of this context relative to one of its ancestors"}{"idx": 53815, "node_name": "name", "Dec": "a name relative to this context"}{"idx": 53816, "node_name": "prefix", "Dec": "the name of this context relative to one of its ancestors"}{"idx": 53818, "node_name": "propname", "Dec": "the name of the environment property to add ; may not be null"}{"idx": 53819, "node_name": "propval", "Dec": "the value of the property to add ; may not be null"}{"idx": 53821, "node_name": "propname", "Dec": "the name of the environment property to remove ; may not be null"}{"idx": 53827, "node_name": "explanation", "Dec": "possibly null string containing additional detail about this exception ."}{"idx": 53835, "node_name": "attrval", "Dec": "the possibly null value to check . if null , check whether the attribute has an attribute value whose value is null ."}{"idx": 53837, "node_name": "attrval", "Dec": "the new possibly null value to add . if null , null is added as an attribute value ."}{"idx": 53839, "node_name": "attrval", "Dec": "the possibly null value to remove from this attribute . if null , remove the attribute value that is null ."}{"idx": 53846, "node_name": "ix", "Dec": "the index of the value in the ordered list of attribute values . 0 <= ix < size() ."}{"idx": 53848, "node_name": "ix", "Dec": "the index of the value to remove . 0 <= ix < size() ."}{"idx": 53850, "node_name": "ix", "Dec": "the index in the ordered list of attribute values to add the new value . 0 <= ix <= size() ."}{"idx": 53851, "node_name": "attrval", "Dec": "the possibly null attribute value to add ; if null , null is the value added ."}{"idx": 53853, "node_name": "ix", "Dec": "the index of the value in the ordered list of attribute values . 0 <= ix < size() ."}{"idx": 53854, "node_name": "attrval", "Dec": "the possibly null attribute value to use . if null , ' null ' replaces the old value ."}{"idx": 53857, "node_name": "explanation", "Dec": "possibly null additional detail about this exception ."}{"idx": 53861, "node_name": "explanation", "Dec": "possibly null additional detail about this exception . if null , this exception has no detail message ."}{"idx": 53864, "node_name": "e", "Dec": "the possibly null list of unexecuted modifications ."}{"idx": 53871, "node_name": "attrid", "Dec": "the non-null id of the attribute to retrieve . if this attribute set ignores the character case of its attribute ids , the case of attrid is ignored ."}{"idx": 53875, "node_name": "attrid", "Dec": "non-null the id of the attribute to add . if the attribute set ignores the character case of its attribute ids , the case of attrid is ignored ."}{"idx": 53876, "node_name": "val", "Dec": "the possibly null value of the attribute to add . if null , the attribute does not have any values ."}{"idx": 53878, "node_name": "attr", "Dec": "the non-null attribute to add . if the attribute set ignores the character case of its attribute ids , the case of attr's identifier is ignored ."}{"idx": 53880, "node_name": "attrid", "Dec": "the non-null id of the attribute to remove . if the attribute set ignores the character case of its attribute ids , the case of attrid is ignored ."}{"idx": 53887, "node_name": "id", "Dec": "the attribute's id . it cannot be null ."}{"idx": 53889, "node_name": "id", "Dec": "the attribute's id . it cannot be null ."}{"idx": 53890, "node_name": "value", "Dec": "the attribute's value . if null , a null value is added to the attribute ."}{"idx": 53892, "node_name": "id", "Dec": "the attribute's id . it cannot be null ."}{"idx": 53893, "node_name": "ordered", "Dec": "true means the attribute's values will be ordered ; false otherwise ."}{"idx": 53895, "node_name": "id", "Dec": "the attribute's id . it cannot be null ."}{"idx": 53896, "node_name": "value", "Dec": "the attribute's value . if null , a null value is added to the attribute ."}{"idx": 53897, "node_name": "ordered", "Dec": "true means the attribute's values will be ordered ; false otherwise ."}{"idx": 53899, "node_name": "obj", "Dec": "the possibly null object to check ."}{"idx": 53905, "node_name": "attrval", "Dec": "the possibly null value to check . if null , check whether the attribute has an attribute value whose value is null ."}{"idx": 53907, "node_name": "attrval", "Dec": "the new possibly null value to add . if null , null is added as an attribute value ."}{"idx": 53909, "node_name": "attrval", "Dec": "the possibly null value to remove from this attribute . if null , remove the attribute value that is null ."}{"idx": 53915, "node_name": "ignorecase", "Dec": "true means this attribute set will ignore the case of its attribute identifiers when retrieving or adding attributes ; false means case is respected ."}{"idx": 53917, "node_name": "attrid", "Dec": "non-null the id of the attribute to add ."}{"idx": 53918, "node_name": "val", "Dec": "the value of the attribute to add . if null , a null value is added to the attribute ."}{"idx": 53920, "node_name": "attrid", "Dec": "non-null the id of the attribute to add . if this attribute set ignores the character case of its attribute ids , the case of attrid is ignored ."}{"idx": 53921, "node_name": "val", "Dec": "the value of the attribute to add . if null , a null value is added to the attribute ."}{"idx": 53922, "node_name": "ignorecase", "Dec": "true means this attribute set will ignore the case of its attribute identifiers when retrieving or adding attributes ; false means case is respected ."}{"idx": 53926, "node_name": "obj", "Dec": "the possibly null object to compare against ."}{"idx": 53933, "node_name": "name", "Dec": "the name of the object from which to retrieve attributes"}{"idx": 53935, "node_name": "name", "Dec": "the name of the object from which to retrieve attributes"}{"idx": 53937, "node_name": "name", "Dec": "the name of the object from which to retrieve attributes"}{"idx": 53938, "node_name": "attrids", "Dec": "the identifiers of the attributes to retrieve . null indicates that all attributes should be retrieved ; an empty array indicates that none should be retrieved ."}{"idx": 53940, "node_name": "name", "Dec": "the name of the object from which to retrieve attributes"}{"idx": 53941, "node_name": "attrids", "Dec": "the identifiers of the attributes to retrieve . null indicates that all attributes should be retrieved ; an empty array indicates that none should be retrieved ."}{"idx": 53943, "node_name": "name", "Dec": "the name of the object whose attributes will be updated"}{"idx": 53944, "node_name": "mod_op", "Dec": "the modification operation , one of : add_attribute , replace_attribute , remove_attribute ."}{"idx": 53945, "node_name": "attrs", "Dec": "the attributes to be used for the modification ; may not be null"}{"idx": 53947, "node_name": "name", "Dec": "the name of the object whose attributes will be updated"}{"idx": 53948, "node_name": "mod_op", "Dec": "the modification operation , one of : add_attribute , replace_attribute , remove_attribute ."}{"idx": 53949, "node_name": "attrs", "Dec": "the attributes to be used for the modification ; may not be null"}{"idx": 53951, "node_name": "name", "Dec": "the name of the object whose attributes will be updated"}{"idx": 53952, "node_name": "mods", "Dec": "an ordered sequence of modifications to be performed ; may not be null"}{"idx": 53954, "node_name": "name", "Dec": "the name of the object whose attributes will be updated"}{"idx": 53955, "node_name": "mods", "Dec": "an ordered sequence of modifications to be performed ; may not be null"}{"idx": 53957, "node_name": "name", "Dec": "the name to bind ; may not be empty"}{"idx": 53958, "node_name": "obj", "Dec": "the object to bind ; possibly null"}{"idx": 53959, "node_name": "attrs", "Dec": "the attributes to associate with the binding"}{"idx": 53961, "node_name": "name", "Dec": "the name to bind ; may not be empty"}{"idx": 53962, "node_name": "obj", "Dec": "the object to bind ; possibly null"}{"idx": 53963, "node_name": "attrs", "Dec": "the attributes to associate with the binding"}{"idx": 53965, "node_name": "name", "Dec": "the name to bind ; may not be empty"}{"idx": 53966, "node_name": "obj", "Dec": "the object to bind ; possibly null"}{"idx": 53967, "node_name": "attrs", "Dec": "the attributes to associate with the binding"}{"idx": 53969, "node_name": "name", "Dec": "the name to bind ; may not be empty"}{"idx": 53970, "node_name": "obj", "Dec": "the object to bind ; possibly null"}{"idx": 53971, "node_name": "attrs", "Dec": "the attributes to associate with the binding"}{"idx": 53973, "node_name": "name", "Dec": "the name of the context to create ; may not be empty"}{"idx": 53974, "node_name": "attrs", "Dec": "the attributes to associate with the newly created context"}{"idx": 53976, "node_name": "name", "Dec": "the name of the context to create ; may not be empty"}{"idx": 53977, "node_name": "attrs", "Dec": "the attributes to associate with the newly created context"}{"idx": 53979, "node_name": "name", "Dec": "the name of the object whose schema is to be retrieved"}{"idx": 53981, "node_name": "name", "Dec": "the name of the object whose schema is to be retrieved"}{"idx": 53983, "node_name": "name", "Dec": "the name of the object whose object class definition is to be retrieved"}{"idx": 53985, "node_name": "name", "Dec": "the name of the object whose object class definition is to be retrieved"}{"idx": 53987, "node_name": "name", "Dec": "the name of the context to search"}{"idx": 53988, "node_name": "matchingattributes", "Dec": "the attributes to search for . if empty or null , all objects in the target context are returned ."}{"idx": 53989, "node_name": "attributestoreturn", "Dec": "the attributes to return . null indicates that all attributes are to be returned ; an empty array indicates that none are to be returned ."}{"idx": 53991, "node_name": "name", "Dec": "the name of the context to search"}{"idx": 53992, "node_name": "matchingattributes", "Dec": "the attributes to search for"}{"idx": 53993, "node_name": "attributestoreturn", "Dec": "the attributes to return"}{"idx": 53995, "node_name": "name", "Dec": "the name of the context to search"}{"idx": 53996, "node_name": "matchingattributes", "Dec": "the attributes to search for"}{"idx": 53998, "node_name": "name", "Dec": "the name of the context to search"}{"idx": 53999, "node_name": "matchingattributes", "Dec": "the attributes to search for"}{"idx": 54001, "node_name": "name", "Dec": "the name of the context or object to search"}{"idx": 54002, "node_name": "filter", "Dec": "the filter expression to use for the search ; may not be null"}{"idx": 54003, "node_name": "cons", "Dec": "the search controls that control the search . if null , the default search controls are used ( equivalent to ( new searchcontrols() )) ."}{"idx": 54005, "node_name": "name", "Dec": "the name of the context or object to search"}{"idx": 54006, "node_name": "filter", "Dec": "the filter expression to use for the search ; may not be null"}{"idx": 54007, "node_name": "cons", "Dec": "the search controls that control the search . if null , the default search controls are used ( equivalent to ( new searchcontrols() )) ."}{"idx": 54009, "node_name": "name", "Dec": "the name of the context or object to search"}{"idx": 54010, "node_name": "filterexpr", "Dec": "the filter expression to use for the search . the expression may contain variables of the form \" { i } \" where i is a nonnegative integer . may not be null ."}{"idx": 54011, "node_name": "filterargs", "Dec": "the array of arguments to substitute for the variables in filterexpr . the value of filterargs [ i ] will replace each occurrence of \" { i} \" . if null , equivalent to an empty array ."}{"idx": 54012, "node_name": "cons", "Dec": "the search controls that control the search . if null , the default search controls are used ( equivalent to ( new searchcontrols() )) ."}{"idx": 54014, "node_name": "name", "Dec": "the name of the context or object to search"}{"idx": 54015, "node_name": "filterexpr", "Dec": "the filter expression to use for the search . the expression may contain variables of the form \" { i } \" where i is a nonnegative integer . may not be null ."}{"idx": 54016, "node_name": "filterargs", "Dec": "the array of arguments to substitute for the variables in filterexpr . the value of filterargs [ i ] will replace each occurrence of \" { i} \" . if null , equivalent to an empty array ."}{"idx": 54017, "node_name": "cons", "Dec": "the search controls that control the search . if null , the default search controls are used ( equivalent to ( new searchcontrols() )) ."}{"idx": 54020, "node_name": "lazy", "Dec": "true means do not initialize the initial dircontext ; false is equivalent to calling new initialdircontext()"}{"idx": 54023, "node_name": "environment", "Dec": "environment used to create the initial dircontext . null indicates an empty environment ."}{"idx": 54026, "node_name": "explanation", "Dec": "possibly null string containing additional detail about this exception ."}{"idx": 54030, "node_name": "explanation", "Dec": "additional detail about this exception . can be null ."}{"idx": 54034, "node_name": "explanation", "Dec": "additional detail about this exception . can be null ."}{"idx": 54039, "node_name": "msg", "Dec": "detail about this exception . can be null ."}{"idx": 54043, "node_name": "msg", "Dec": "detail about this exception . can be null ."}{"idx": 54046, "node_name": "mod_op", "Dec": "modification to apply . it must be one of : dircontext.add_attribute dircontext.replace_attribute dircontext.remove_attribute"}{"idx": 54047, "node_name": "attr", "Dec": "the non-null attribute to use for modification ."}{"idx": 54053, "node_name": "explanation", "Dec": "additional detail about this exception . can be null ."}{"idx": 54058, "node_name": "explanation", "Dec": "detail about this exception . can be null ."}{"idx": 54065, "node_name": "scope", "Dec": "the search scope . one of : object_scope , onelevel_scope , subtree_scope ."}{"idx": 54066, "node_name": "timelim", "Dec": "the number of milliseconds to wait before returning . if 0 , wait indefinitely ."}{"idx": 54067, "node_name": "deref", "Dec": "if true , dereference links during search ."}{"idx": 54068, "node_name": "countlim", "Dec": "the maximum number of entries to return . if 0 , return all entries that satisfy filter ."}{"idx": 54069, "node_name": "retobj", "Dec": "if true , return the object bound to the name of the entry ; if false , do not return object ."}{"idx": 54070, "node_name": "attrs", "Dec": "the identifiers of the attributes to return along with the entry . if null , return all attributes . if empty return no attributes ."}{"idx": 54078, "node_name": "scope", "Dec": "the search scope of this searchcontrols ."}{"idx": 54080, "node_name": "ms", "Dec": "the time limit of these searchcontrols in milliseconds ."}{"idx": 54082, "node_name": "on", "Dec": "if true links will be dereferenced ; if false , not followed ."}{"idx": 54084, "node_name": "on", "Dec": "if true , objects will be returned ; if false , objects will not be returned ."}{"idx": 54086, "node_name": "limit", "Dec": "the maximum number of entries that will be returned ."}{"idx": 54088, "node_name": "attrs", "Dec": "an array of attribute ids identifying the attributes that will be returned . can be null ."}{"idx": 54091, "node_name": "name", "Dec": "the non-null name of the search item . it is relative to the target context of the search ( which is named by the first parameter of the search() method )"}{"idx": 54092, "node_name": "obj", "Dec": "the object bound to name . can be null ."}{"idx": 54093, "node_name": "attrs", "Dec": "the attributes that were requested to be returned with this search item . cannot be null ."}{"idx": 54095, "node_name": "name", "Dec": "the non-null name of the search item ."}{"idx": 54096, "node_name": "obj", "Dec": "the object bound to name . can be null ."}{"idx": 54097, "node_name": "attrs", "Dec": "the attributes that were requested to be returned with this search item . cannot be null ."}{"idx": 54098, "node_name": "isrelative", "Dec": "true if name is relative to the target context of the search ( which is named by the first parameter of the search() method ); false if name is a url string ."}{"idx": 54100, "node_name": "name", "Dec": "the non-null name of the search item . it is relative to the target context of the search ( which is named by the first parameter of the search() method )"}{"idx": 54101, "node_name": "classname", "Dec": "the possibly null class name of the object bound to name . if null , the class name of obj is returned by getclassname() . if obj is also null , getclassname() will return null ."}{"idx": 54102, "node_name": "obj", "Dec": "the object bound to name . can be null ."}{"idx": 54103, "node_name": "attrs", "Dec": "the attributes that were requested to be returned with this search item . cannot be null ."}{"idx": 54105, "node_name": "name", "Dec": "the non-null name of the search item ."}{"idx": 54106, "node_name": "classname", "Dec": "the possibly null class name of the object bound to name . if null , the class name of obj is returned by getclassname() . if obj is also null , getclassname() will return null ."}{"idx": 54107, "node_name": "obj", "Dec": "the object bound to name . can be null ."}{"idx": 54108, "node_name": "attrs", "Dec": "the attributes that were requested to be returned with this search item . cannot be null ."}{"idx": 54109, "node_name": "isrelative", "Dec": "true if name is relative to the target context of the search ( which is named by the first parameter of the search() method ); false if name is a url string ."}{"idx": 54112, "node_name": "attrs", "Dec": "the non-null attributes to use . can be empty ."}{"idx": 54119, "node_name": "target", "Dec": "a nonnull name to be resolved relative to this context ."}{"idx": 54120, "node_name": "scope", "Dec": "one of object_scope , onelevel_scope , or subtree_scope ."}{"idx": 54121, "node_name": "l", "Dec": "the nonnull listener ."}{"idx": 54123, "node_name": "target", "Dec": "the nonnull string name of the object resolved relative to this context ."}{"idx": 54124, "node_name": "scope", "Dec": "one of object_scope , onelevel_scope , or subtree_scope ."}{"idx": 54125, "node_name": "l", "Dec": "the nonnull listener ."}{"idx": 54127, "node_name": "l", "Dec": "the nonnull listener ."}{"idx": 54131, "node_name": "target", "Dec": "the nonnull name of the object resolved relative to this context ."}{"idx": 54132, "node_name": "filter", "Dec": "the nonnull string filter ( see rfc2254 ) ."}{"idx": 54133, "node_name": "ctls", "Dec": "the possibly null search controls . if null , the default search controls are used ."}{"idx": 54134, "node_name": "l", "Dec": "the nonnull listener ."}{"idx": 54136, "node_name": "target", "Dec": "the nonnull string name of the object resolved relative to this context ."}{"idx": 54137, "node_name": "filter", "Dec": "the nonnull string filter ( see rfc2254 ) ."}{"idx": 54138, "node_name": "ctls", "Dec": "the possibly null search controls . if null , the default search controls is used ."}{"idx": 54139, "node_name": "l", "Dec": "the nonnull listener ."}{"idx": 54141, "node_name": "target", "Dec": "the nonnull name of the object resolved relative to this context ."}{"idx": 54142, "node_name": "filter", "Dec": "the nonnull string filter ( see rfc2254 ) ."}{"idx": 54143, "node_name": "filterargs", "Dec": "the possibly null array of arguments for the filter ."}{"idx": 54144, "node_name": "ctls", "Dec": "the possibly null search controls . if null , the default search controls are used ."}{"idx": 54145, "node_name": "l", "Dec": "the nonnull listener ."}{"idx": 54147, "node_name": "target", "Dec": "the nonnull string name of the object resolved relative to this context ."}{"idx": 54148, "node_name": "filter", "Dec": "the nonnull string filter ( see rfc2254 ) ."}{"idx": 54149, "node_name": "filterargs", "Dec": "the possibly null array of arguments for the filter ."}{"idx": 54150, "node_name": "ctls", "Dec": "the possibly null search controls . if null , the default search controls is used ."}{"idx": 54151, "node_name": "l", "Dec": "the nonnull listener ."}{"idx": 54154, "node_name": "evt", "Dec": "the nonnull event ."}{"idx": 54156, "node_name": "evt", "Dec": "the nonnull event ."}{"idx": 54158, "node_name": "evt", "Dec": "the nonnull event ."}{"idx": 54169, "node_name": "source", "Dec": "the non-null context that fired this event ."}{"idx": 54170, "node_name": "type", "Dec": "the type of the event ."}{"idx": 54171, "node_name": "newbd", "Dec": "a possibly null binding before the change . see method description ."}{"idx": 54172, "node_name": "oldbd", "Dec": "a possibly null binding after the change . see method description ."}{"idx": 54173, "node_name": "changeinfo", "Dec": "a possibly null object containing information about the change ."}{"idx": 54180, "node_name": "listener", "Dec": "the nonnull listener ."}{"idx": 54183, "node_name": "source", "Dec": "the non-null context in which the exception was thrown ."}{"idx": 54184, "node_name": "exc", "Dec": "the non-null namingexception that was thrown ."}{"idx": 54188, "node_name": "listener", "Dec": "the non-null naming listener on which to invoke dispatch(javax.naming.event.NamingListener) ."}{"idx": 54191, "node_name": "evt", "Dec": "the nonnull event ."}{"idx": 54194, "node_name": "evt", "Dec": "the nonnull naming event ."}{"idx": 54200, "node_name": "lazy", "Dec": "true means do not initialize the initial context ; false is equivalent to calling new initialcontext()"}{"idx": 54203, "node_name": "environment", "Dec": "environment used to create the initial context . null indicates an empty environment ."}{"idx": 54205, "node_name": "environment", "Dec": "environment used to create the initial context . null indicates an empty environment ."}{"idx": 54207, "node_name": "name", "Dec": "the name of the object to look up"}{"idx": 54209, "node_name": "name", "Dec": "the name of the object to look up"}{"idx": 54212, "node_name": "name", "Dec": "the non-null name for which to get the context ."}{"idx": 54214, "node_name": "name", "Dec": "the non-null name for which to get the context ."}{"idx": 54216, "node_name": "name", "Dec": "a name relative to this context"}{"idx": 54217, "node_name": "prefix", "Dec": "the name of this context relative to one of its ancestors"}{"idx": 54219, "node_name": "name", "Dec": "a name relative to this context"}{"idx": 54220, "node_name": "prefix", "Dec": "the name of this context relative to one of its ancestors"}{"idx": 54223, "node_name": "explanation", "Dec": "possibly null additional detail about this exception ."}{"idx": 54227, "node_name": "explanation", "Dec": "a possibly null message explaining the problem ."}{"idx": 54231, "node_name": "explanation", "Dec": "a possibly null message explaining the problem ."}{"idx": 54238, "node_name": "id", "Dec": "the control's object identifier string ."}{"idx": 54240, "node_name": "id", "Dec": "the control's object identifier string ."}{"idx": 54241, "node_name": "criticality", "Dec": "the control's criticality ."}{"idx": 54242, "node_name": "value", "Dec": "the control's asn.1 ber encoded value . it is not cloned"}{"idx": 54255, "node_name": "ctl", "Dec": "a non-null control ."}{"idx": 54257, "node_name": "ctl", "Dec": "the non-null control object containing the oid and ber data ."}{"idx": 54258, "node_name": "ctx", "Dec": "the possibly null context in which the control is being created . if null , no such information is available ."}{"idx": 54259, "node_name": "env", "Dec": "the possibly null environment of the context . this is used to find the value of the ldapcontext.control_factories property ."}{"idx": 54264, "node_name": "id", "Dec": "the possibly null object identifier of the response control ."}{"idx": 54265, "node_name": "bervalue", "Dec": "the possibly null asn.1 ber encoded value of the response control . this is the raw ber bytes including the tag and length of the response value . it does not include the response oid ."}{"idx": 54266, "node_name": "offset", "Dec": "the starting position in bervalue of the bytes to use ."}{"idx": 54267, "node_name": "length", "Dec": "the number of bytes in bervalue to use ."}{"idx": 54276, "node_name": "environment", "Dec": "environment used to create the initial dircontext . null indicates an empty environment ."}{"idx": 54277, "node_name": "connctls", "Dec": "connection request controls for the initial context . if null , no connection request controls are used ."}{"idx": 54281, "node_name": "request", "Dec": "the non-null request to be performed ."}{"idx": 54283, "node_name": "requestcontrols", "Dec": "the possibly null request controls to use for the new context . if null , the context is initialized with no request controls ."}{"idx": 54285, "node_name": "connctls", "Dec": "the possibly null controls to use . if null , no controls are used ."}{"idx": 54288, "node_name": "requestcontrols", "Dec": "the possibly null controls to use . if null , no controls are used ."}{"idx": 54293, "node_name": "name", "Dec": "this is a non-null distinguished name formatted according to the rules defined in rfc 2253 ."}{"idx": 54295, "node_name": "rdns", "Dec": "the non-null list of rdns forming this ldap name ."}{"idx": 54300, "node_name": "posn", "Dec": "the 0-based index of the component to retrieve . must be in the range [ 0 , size() ) ."}{"idx": 54302, "node_name": "posn", "Dec": "the 0-based index of the rdn to retrieve . must be in the range [ 0 , size() ) ."}{"idx": 54304, "node_name": "posn", "Dec": "the 0-based index of the component at which to stop . must be in the range [ 0 , size() ] ."}{"idx": 54306, "node_name": "posn", "Dec": "the 0-based index of the component at which to start . must be in the range [ 0 , size() ] ."}{"idx": 54308, "node_name": "n", "Dec": "the ldap name to check ."}{"idx": 54310, "node_name": "rdns", "Dec": "the sequence of rdns to check ."}{"idx": 54312, "node_name": "n", "Dec": "the ldap name to check ."}{"idx": 54314, "node_name": "rdns", "Dec": "the sequence of rdns to check ."}{"idx": 54316, "node_name": "suffix", "Dec": "the non-null components to add ."}{"idx": 54318, "node_name": "suffixrdns", "Dec": "the non-null suffix rdns to add ."}{"idx": 54320, "node_name": "suffix", "Dec": "the non-null components to add ."}{"idx": 54321, "node_name": "posn", "Dec": "the index at which to add the new component . must be in the range [ 0 , size() ] ."}{"idx": 54323, "node_name": "suffixrdns", "Dec": "the non-null suffix rdns to add ."}{"idx": 54324, "node_name": "posn", "Dec": "the index at which to add the suffix rdns . must be in the range [ 0 , size() ] ."}{"idx": 54326, "node_name": "comp", "Dec": "the non-null component to add ."}{"idx": 54328, "node_name": "comp", "Dec": "the non-null rdn to add ."}{"idx": 54330, "node_name": "comp", "Dec": "the non-null component to add ."}{"idx": 54331, "node_name": "posn", "Dec": "the index at which to add the new component . must be in the range [ 0 , size() ] ."}{"idx": 54333, "node_name": "comp", "Dec": "the non-null rdn to add ."}{"idx": 54334, "node_name": "posn", "Dec": "the index at which to add the new rdn . must be in the range [ 0 , size() ] ."}{"idx": 54336, "node_name": "posn", "Dec": "the index of the component to remove . must be in the range [ 0 , size() ) ."}{"idx": 54341, "node_name": "obj", "Dec": "the possibly null object to compare against ."}{"idx": 54343, "node_name": "obj", "Dec": "the non-null ldapname instance to compare against ."}{"idx": 54347, "node_name": "explanation", "Dec": "additional detail about this exception . can be null ."}{"idx": 54351, "node_name": "env", "Dec": "the possibly null environment to use when retrieving the referral context . if null , no environment properties will be used ."}{"idx": 54353, "node_name": "reqctls", "Dec": "the possibly null request controls to use for the new context . if null or the empty array means use no request controls ."}{"idx": 54354, "node_name": "env", "Dec": "the possibly null environment properties to use when for the new context . if null , the context is initialized with no environment properties ."}{"idx": 54359, "node_name": "criticality", "Dec": "the control's criticality setting ."}{"idx": 54363, "node_name": "pagesize", "Dec": "the number of entries to return in a page ."}{"idx": 54364, "node_name": "criticality", "Dec": "if true then the server must honor the control and return search results as indicated by pagesize or refuse to perform the search . if false , then the server need not honor the control ."}{"idx": 54366, "node_name": "pagesize", "Dec": "the number of entries to return in a page ."}{"idx": 54367, "node_name": "cookie", "Dec": "a possibly null server-generated cookie ."}{"idx": 54368, "node_name": "criticality", "Dec": "if true then the server must honor the control and return search results as indicated by pagesize or refuse to perform the search . if false , then the server need not honor the control ."}{"idx": 54372, "node_name": "id", "Dec": "the control's object identifier string ."}{"idx": 54373, "node_name": "criticality", "Dec": "the control's criticality ."}{"idx": 54374, "node_name": "value", "Dec": "the control's asn.1 ber encoded value . it is not cloned"}{"idx": 54379, "node_name": "attrset", "Dec": "the non-null and non-empty attributes containing type / value mappings ."}{"idx": 54381, "node_name": "rdnstring", "Dec": "the non-null and non-empty rfc2253 formatted string ."}{"idx": 54383, "node_name": "rdn", "Dec": "the non-null rdn to be copied ."}{"idx": 54385, "node_name": "type", "Dec": "the non-null and non-empty string attribute type ."}{"idx": 54386, "node_name": "value", "Dec": "the non-null and non-empty attribute value ."}{"idx": 54391, "node_name": "obj", "Dec": "the non-null object to compare against ."}{"idx": 54393, "node_name": "obj", "Dec": "object to be compared for equality with this rdn ."}{"idx": 54398, "node_name": "val", "Dec": "the non-null object to be escaped ."}{"idx": 54400, "node_name": "val", "Dec": "the non-null string to be unescaped ."}{"idx": 54404, "node_name": "sortby", "Dec": "an attribute id to sort by ."}{"idx": 54405, "node_name": "criticality", "Dec": "if true then the server must honor the control and return the search results sorted as requested or refuse to perform the search . if false , then the server need not honor the control ."}{"idx": 54407, "node_name": "sortby", "Dec": "a non-null list of attribute ids to sort by . the list is in order of highest to lowest sort key precedence ."}{"idx": 54408, "node_name": "criticality", "Dec": "if true then the server must honor the control and return the search results sorted as requested or refuse to perform the search . if false , then the server need not honor the control ."}{"idx": 54410, "node_name": "sortby", "Dec": "a non-null list of keys to sort by . the list is in order of highest to lowest sort key precedence ."}{"idx": 54411, "node_name": "criticality", "Dec": "if true then the server must honor the control and return the search results sorted as requested or refuse to perform the search . if false , then the server need not honor the control ."}{"idx": 54414, "node_name": "attrid", "Dec": "the non-null id of the attribute to be used as a sort key ."}{"idx": 54416, "node_name": "attrid", "Dec": "the non-null id of the attribute to be used as a sort key ."}{"idx": 54417, "node_name": "ascendingorder", "Dec": "if true then entries are arranged in ascending order . otherwise there are arranged in descending order ."}{"idx": 54418, "node_name": "matchingruleid", "Dec": "the possibly null id of the matching rule to use to order the attribute values . if not specified then the ordering matching rule defined for the sort key attribute is used ."}{"idx": 54425, "node_name": "id", "Dec": "the control's object identifier string ."}{"idx": 54426, "node_name": "criticality", "Dec": "the control's criticality ."}{"idx": 54427, "node_name": "value", "Dec": "the control's asn.1 ber encoded value . it is not cloned"}{"idx": 54435, "node_name": "url", "Dec": "the context provider url"}{"idx": 54436, "node_name": "env", "Dec": "the context environment ."}{"idx": 54439, "node_name": "domainname", "Dec": "the resolved domain name ; can be null ."}{"idx": 54440, "node_name": "endpoints", "Dec": "the possibly empty list of resolved ldap server endpoints"}{"idx": 54449, "node_name": "id", "Dec": "the object identifier of the extended response . its value must be \" 1.3.6.1.4.1.1466.20037 \" or null . both values are equivalent ."}{"idx": 54450, "node_name": "bervalue", "Dec": "the possibly null asn.1 ber encoded value of the extended response . this is the raw ber bytes including the tag and length of the response value . it does not include the response oid . its value is ignored because a start tls response is not expected to contain any response value ."}{"idx": 54451, "node_name": "offset", "Dec": "the starting position in bervalue of the bytes to use . its value is ignored because a start tls response is not expected to contain any response value ."}{"idx": 54452, "node_name": "length", "Dec": "the number of bytes in bervalue to use . its value is ignored because a start tls response is not expected to contain any response value ."}{"idx": 54459, "node_name": "suites", "Dec": "the non-null list of names of all the cipher suites to enable ."}{"idx": 54461, "node_name": "verifier", "Dec": "the non-null hostname verifier callback ."}{"idx": 54464, "node_name": "factory", "Dec": "the possibly null ssl socket factory to use . if null , the default ssl socket factory is used ."}{"idx": 54471, "node_name": "src", "Dec": "the non-null source that fired the event ."}{"idx": 54472, "node_name": "notice", "Dec": "the non-null unsolicited notification ."}{"idx": 54475, "node_name": "listener", "Dec": "the non-null listener on which to invoke notificationreceived ."}{"idx": 54478, "node_name": "evt", "Dec": "the non-null unsolicitednotificationevent"}{"idx": 54482, "node_name": "explanation", "Dec": "possibly null detail about this exception ."}{"idx": 54489, "node_name": "explanation", "Dec": "a possibly null string containing additional detail about this exception ."}{"idx": 54496, "node_name": "msg", "Dec": "the possibly null detail string explaining more about the problem with resolving a link . if null , it means no detail will be recorded ."}{"idx": 54498, "node_name": "name", "Dec": "the name to set resolved link name to . this can be null . if null , it sets the link resolved name field to null ."}{"idx": 54500, "node_name": "name", "Dec": "the name to set remaining link name to . this can be null . if null , it sets the remaining name field to null ."}{"idx": 54502, "node_name": "obj", "Dec": "the object to set link resolved object to . this can be null . if null , the link resolved object field is set to null ."}{"idx": 54505, "node_name": "detail", "Dec": "if true , add information about the link resolved object ."}{"idx": 54508, "node_name": "explanation", "Dec": "a possibly null string containing additional detail about this exception ."}{"idx": 54512, "node_name": "linkname", "Dec": "the non-null name for which to create this link ."}{"idx": 54514, "node_name": "linkname", "Dec": "the non-null name for which to create this link ."}{"idx": 54518, "node_name": "explanation", "Dec": "a possibly null string containing additional detail about this exception ."}{"idx": 54523, "node_name": "obj", "Dec": "the non-null object to compare against ."}{"idx": 54528, "node_name": "posn", "Dec": "the 0-based index of the component to retrieve . must be in the range [ 0 , size() ) ."}{"idx": 54530, "node_name": "posn", "Dec": "the 0-based index of the component at which to stop . must be in the range [ 0 , size() ] ."}{"idx": 54532, "node_name": "posn", "Dec": "the 0-based index of the component at which to start . must be in the range [ 0 , size() ] ."}{"idx": 54534, "node_name": "n", "Dec": "the name to check"}{"idx": 54536, "node_name": "n", "Dec": "the name to check"}{"idx": 54538, "node_name": "suffix", "Dec": "the components to add"}{"idx": 54540, "node_name": "n", "Dec": "the components to add"}{"idx": 54541, "node_name": "posn", "Dec": "the index in this name at which to add the new components . must be in the range [ 0 , size() ] ."}{"idx": 54543, "node_name": "comp", "Dec": "the component to add"}{"idx": 54545, "node_name": "comp", "Dec": "the component to add"}{"idx": 54546, "node_name": "posn", "Dec": "the index at which to add the new component . must be in the range [ 0 , size() ] ."}{"idx": 54548, "node_name": "posn", "Dec": "the index of the component to remove . must be in the range [ 0 , size() ) ."}{"idx": 54551, "node_name": "explanation", "Dec": "possibly null additional detail about this exception ."}{"idx": 54555, "node_name": "name", "Dec": "the non-null name of the object . it is relative to the target context ( which is named by the first parameter of the list() method )"}{"idx": 54556, "node_name": "classname", "Dec": "the possibly null class name of the object bound to name . it is null if the object bound is null ."}{"idx": 54558, "node_name": "name", "Dec": "the non-null name of the object ."}{"idx": 54559, "node_name": "classname", "Dec": "the possibly null class name of the object bound to name . it is null if the object bound is null ."}{"idx": 54560, "node_name": "isrelative", "Dec": "true if name is a name relative to the target context ( which is named by the first parameter of the list() method ); false if name is a url string ."}{"idx": 54564, "node_name": "name", "Dec": "the non-null string to use as the name ."}{"idx": 54566, "node_name": "name", "Dec": "the possibly null string to use as the class name . if null , binding.getclassname() will return the actual class name of the object in the binding . the class name will be null if the object bound is null ."}{"idx": 54569, "node_name": "r", "Dec": "if true , the name of binding is relative to the target context ; if false , the name of binding is a url string ."}{"idx": 54572, "node_name": "fullname", "Dec": "the full name to use ."}{"idx": 54576, "node_name": "explanation", "Dec": "possibly null additional detail about this exception ."}{"idx": 54580, "node_name": "name", "Dec": "the non-null string name to parse ."}{"idx": 54591, "node_name": "explanation", "Dec": "a possibly null string containing additional detail about this exception ."}{"idx": 54598, "node_name": "name", "Dec": "the possibly null name to set resolved name to . if null , it sets the resolved name field to null ."}{"idx": 54600, "node_name": "name", "Dec": "the possibly null name to set remaining name to . if null , it sets the remaining name field to null ."}{"idx": 54602, "node_name": "obj", "Dec": "the possibly null object to set resolved object to . if null , the resolved object field is set to null ."}{"idx": 54604, "node_name": "name", "Dec": "the component to add . if name is null , appendRemainingComponent(java.lang.String) does not do anything ."}{"idx": 54606, "node_name": "name", "Dec": "the possibly null name containing ordered components to add . if name is null , appendRemainingName(javax.naming.Name) does not do anything ."}{"idx": 54609, "node_name": "e", "Dec": "the possibly null exception that caused the naming operation to fail . if null , it means this naming exception has no root cause ."}{"idx": 54612, "node_name": "cause", "Dec": "the cause , which is saved for later retrieval by the getcause() method . a null value indicates that the cause is nonexistent or unknown ."}{"idx": 54615, "node_name": "detail", "Dec": "if true , include details about the resolved object in addition to the other information ."}{"idx": 54618, "node_name": "explanation", "Dec": "possibly null additional detail about this exception ."}{"idx": 54623, "node_name": "explanation", "Dec": "possibly null additional detail about this exception ."}{"idx": 54626, "node_name": "explanation", "Dec": "possibly null additional detail about this exception ."}{"idx": 54630, "node_name": "explanation", "Dec": "possibly null additional detail about this exception ."}{"idx": 54635, "node_name": "explanation", "Dec": "possibly null additional detail about this exception"}{"idx": 54638, "node_name": "explanation", "Dec": "possibly null detail explaining the exception ."}{"idx": 54643, "node_name": "addrtype", "Dec": "a non-null string describing the type of the address ."}{"idx": 54647, "node_name": "obj", "Dec": "possibly null obj to check ."}{"idx": 54656, "node_name": "classname", "Dec": "the non-null class name of the object to which this reference refers ."}{"idx": 54658, "node_name": "classname", "Dec": "the non-null class name of the object to which this reference refers ."}{"idx": 54659, "node_name": "addr", "Dec": "the non-null address of the object ."}{"idx": 54661, "node_name": "classname", "Dec": "the non-null class name of the object to which this reference refers ."}{"idx": 54662, "node_name": "factory", "Dec": "the possibly null class name of the object's factory ."}{"idx": 54663, "node_name": "factorylocation", "Dec": "the possibly null location from which to load the factory ( e.g. url )"}{"idx": 54665, "node_name": "classname", "Dec": "the non-null class name of the object to which this reference refers ."}{"idx": 54666, "node_name": "factory", "Dec": "the possibly null class name of the object's factory ."}{"idx": 54667, "node_name": "factorylocation", "Dec": "the possibly null location from which to load the factory ( e.g. url )"}{"idx": 54668, "node_name": "addr", "Dec": "the non-null address of the object ."}{"idx": 54673, "node_name": "addrtype", "Dec": "the non-null address type for which to find the address ."}{"idx": 54675, "node_name": "posn", "Dec": "the index of the address to retrieve ."}{"idx": 54679, "node_name": "addr", "Dec": "the non-null address to add ."}{"idx": 54681, "node_name": "posn", "Dec": "the 0-based index of the list to insert addr ."}{"idx": 54682, "node_name": "addr", "Dec": "the non-null address to add ."}{"idx": 54684, "node_name": "posn", "Dec": "the 0-based index of in address to delete ."}{"idx": 54687, "node_name": "obj", "Dec": "the possibly null object to check ."}{"idx": 54695, "node_name": "explanation", "Dec": "additional detail about this exception . can be null ."}{"idx": 54700, "node_name": "env", "Dec": "the possibly null environment to use when retrieving the referral context . if null , no environment properties will be used ."}{"idx": 54705, "node_name": "explanation", "Dec": "possibly null additional detail about this exception ."}{"idx": 54710, "node_name": "explanation", "Dec": "possibly null detail about this exception ."}{"idx": 54713, "node_name": "cpe", "Dec": "the non-null exception that triggered this continuation ."}{"idx": 54715, "node_name": "refinfo", "Dec": "the possibly null object for which to create an object ."}{"idx": 54716, "node_name": "name", "Dec": "the name of this object relative to namectx . specifying a name is optional ; if it is omitted , name should be null ."}{"idx": 54717, "node_name": "namectx", "Dec": "the context relative to which the name parameter is specified . if null , name is relative to the default initial context ."}{"idx": 54718, "node_name": "environment", "Dec": "the possibly null environment to be used in the creation of the object factory and the object ."}{"idx": 54719, "node_name": "attrs", "Dec": "the possibly null attributes associated with refinfo . this might not be the complete set of attributes for refinfo ; you might be able to read more attributes from the directory ."}{"idx": 54721, "node_name": "obj", "Dec": "the non-null object for which to get state to bind ."}{"idx": 54722, "node_name": "name", "Dec": "the name of this object relative to namectx , or null if no name is specified ."}{"idx": 54723, "node_name": "namectx", "Dec": "the context relative to which the name parameter is specified , or null if name is relative to the default initial context ."}{"idx": 54724, "node_name": "environment", "Dec": "the possibly null environment to be used in the creation of the state factory and the object's state ."}{"idx": 54725, "node_name": "attrs", "Dec": "the possibly null attributes that is to be bound with the object ."}{"idx": 54728, "node_name": "obj", "Dec": "the possibly null object containing location or reference information that can be used in creating an object ."}{"idx": 54729, "node_name": "name", "Dec": "the name of this object relative to namectx , or null if no name is specified ."}{"idx": 54730, "node_name": "namectx", "Dec": "the context relative to which the name parameter is specified , or null if name is relative to the default initial context ."}{"idx": 54731, "node_name": "environment", "Dec": "the possibly null environment that is used in creating the object ."}{"idx": 54732, "node_name": "attrs", "Dec": "the possibly null attributes containing some of obj's attributes . attrs might not necessarily have all of obj's attributes . if the object factory requires more attributes , it needs to get it , either using obj , or name and namectx . the factory must not modify attrs ."}{"idx": 54735, "node_name": "obj", "Dec": "a possibly null object whose state is to be retrieved ."}{"idx": 54736, "node_name": "name", "Dec": "the name of this object relative to namectx , or null if no name is specified ."}{"idx": 54737, "node_name": "namectx", "Dec": "the context relative to which the name parameter is specified , or null if name is relative to the default initial context ."}{"idx": 54738, "node_name": "environment", "Dec": "the possibly null environment to be used in the creation of the object's state ."}{"idx": 54739, "node_name": "inattrs", "Dec": "the possibly null attributes to be bound with the object . the factory must not modify inattrs ."}{"idx": 54742, "node_name": "obj", "Dec": "the possibly null object to be bound ."}{"idx": 54743, "node_name": "outattrs", "Dec": "the possibly null attributes to be bound ."}{"idx": 54748, "node_name": "environment", "Dec": "the possibly null environment specifying information to be used in the creation of the initial context ."}{"idx": 54751, "node_name": "environment", "Dec": "environment used in creating an initial context implementation . can be null ."}{"idx": 54755, "node_name": "builder", "Dec": "the factory builder to install . if null , no builder is installed ."}{"idx": 54757, "node_name": "refinfo", "Dec": "the possibly null object for which to create an object ."}{"idx": 54758, "node_name": "name", "Dec": "the name of this object relative to namectx . specifying a name is optional ; if it is omitted , name should be null ."}{"idx": 54759, "node_name": "namectx", "Dec": "the context relative to which the name parameter is specified . if null , name is relative to the default initial context ."}{"idx": 54760, "node_name": "environment", "Dec": "the possibly null environment to be used in the creation of the object factory and the object ."}{"idx": 54762, "node_name": "scheme", "Dec": "the non-null scheme-id of the urls supported by the context ."}{"idx": 54763, "node_name": "environment", "Dec": "the possibly null environment properties to be used in the creation of the object factory and the context ."}{"idx": 54765, "node_name": "env", "Dec": "the possibly null environment properties used when creating the context ."}{"idx": 54767, "node_name": "builder", "Dec": "the initial context factory builder to install . if null , no builder is set ."}{"idx": 54770, "node_name": "cpe", "Dec": "the non-null exception that triggered this continuation ."}{"idx": 54772, "node_name": "obj", "Dec": "the non-null object for which to get state to bind ."}{"idx": 54773, "node_name": "name", "Dec": "the name of this object relative to namectx , or null if no name is specified ."}{"idx": 54774, "node_name": "namectx", "Dec": "the context relative to which the name parameter is specified , or null if name is relative to the default initial context ."}{"idx": 54775, "node_name": "environment", "Dec": "the possibly null environment to be used in the creation of the state factory and the object's state ."}{"idx": 54778, "node_name": "obj", "Dec": "the possibly null object containing location or reference information that can be used in creating an object ."}{"idx": 54779, "node_name": "name", "Dec": "the name of this object relative to namectx , or null if no name is specified ."}{"idx": 54780, "node_name": "namectx", "Dec": "the context relative to which the name parameter is specified , or null if name is relative to the default initial context ."}{"idx": 54781, "node_name": "environment", "Dec": "the possibly null environment that is used in creating the object ."}{"idx": 54784, "node_name": "obj", "Dec": "the possibly null object for which to create a factory ."}{"idx": 54785, "node_name": "environment", "Dec": "environment to use when creating the factory . can be null ."}{"idx": 54788, "node_name": "name", "Dec": "the name to resolve"}{"idx": 54789, "node_name": "contexttype", "Dec": "the type of object to resolve . this should be a subtype of context ."}{"idx": 54791, "node_name": "name", "Dec": "the name to resolve"}{"idx": 54792, "node_name": "contexttype", "Dec": "the type of object to resolve . this should be a subtype of context ."}{"idx": 54798, "node_name": "robj", "Dec": "the non-null object resolved to ."}{"idx": 54799, "node_name": "rcomp", "Dec": "the single remaining name component that has yet to be resolved . cannot be null ( but can be empty ) ."}{"idx": 54801, "node_name": "robj", "Dec": "the non-null object resolved to ."}{"idx": 54802, "node_name": "rname", "Dec": "the non-null remaining name that has yet to be resolved ."}{"idx": 54806, "node_name": "name", "Dec": "the name to set remaining name to . cannot be null ."}{"idx": 54808, "node_name": "name", "Dec": "the components to add . can be null ."}{"idx": 54810, "node_name": "name", "Dec": "the component to add . can be null ."}{"idx": 54812, "node_name": "obj", "Dec": "the object to use for setting the resolved obj field . cannot be null ."}{"idx": 54815, "node_name": "obj", "Dec": "a non-null object whose state is to be retrieved ."}{"idx": 54816, "node_name": "name", "Dec": "the name of this object relative to namectx , or null if no name is specified ."}{"idx": 54817, "node_name": "namectx", "Dec": "the context relative to which the name parameter is specified , or null if name is relative to the default initial context ."}{"idx": 54818, "node_name": "environment", "Dec": "the possibly null environment to be used in the creation of the object's state ."}{"idx": 54821, "node_name": "addrtype", "Dec": "a non-null string describing the type of the address ."}{"idx": 54822, "node_name": "addr", "Dec": "the possibly null contents of the address in the form of a string ."}{"idx": 54827, "node_name": "explanation", "Dec": "possibly null detail about this exception ."}{"idx": 54833, "node_name": "port", "Dec": "the port to listen to"}{"idx": 54835, "node_name": "port", "Dec": "the port to listen to"}{"idx": 54836, "node_name": "backlog", "Dec": "how many connections are queued"}{"idx": 54838, "node_name": "port", "Dec": "the port to listen to"}{"idx": 54839, "node_name": "backlog", "Dec": "how many connections are queued"}{"idx": 54840, "node_name": "ifaddress", "Dec": "the network interface address to use"}{"idx": 54846, "node_name": "host", "Dec": "the server host name with which to connect , or null for the loopback address ."}{"idx": 54847, "node_name": "port", "Dec": "the server port"}{"idx": 54849, "node_name": "host", "Dec": "the server host name with which to connect , or null for the loopback address ."}{"idx": 54850, "node_name": "port", "Dec": "the server port"}{"idx": 54851, "node_name": "localhost", "Dec": "the local address the socket is bound to"}{"idx": 54852, "node_name": "localport", "Dec": "the local port the socket is bound to"}{"idx": 54854, "node_name": "host", "Dec": "the server host"}{"idx": 54855, "node_name": "port", "Dec": "the server port"}{"idx": 54857, "node_name": "address", "Dec": "the server network address"}{"idx": 54858, "node_name": "port", "Dec": "the server port"}{"idx": 54859, "node_name": "localaddress", "Dec": "the client network address"}{"idx": 54860, "node_name": "localport", "Dec": "the client port"}{"idx": 54863, "node_name": "parameters", "Dec": "the certpathparameters to be used"}{"idx": 54873, "node_name": "sock", "Dec": "the sslsocket acting as the source of the event"}{"idx": 54874, "node_name": "s", "Dec": "the sslsession this event is associated with"}{"idx": 54884, "node_name": "event", "Dec": "the event identifying when the ssl handshake completed on a given ssl connection"}{"idx": 54887, "node_name": "hostname", "Dec": "the host name"}{"idx": 54888, "node_name": "session", "Dec": "sslsession used on the connection to host"}{"idx": 54892, "node_name": "url", "Dec": "the url"}{"idx": 54899, "node_name": "v", "Dec": "the default host name verifier"}{"idx": 54902, "node_name": "v", "Dec": "the host name verifier"}{"idx": 54905, "node_name": "sf", "Dec": "the default ssl socket factory"}{"idx": 54908, "node_name": "sf", "Dec": "the ssl socket factory"}{"idx": 54914, "node_name": "factoryspi", "Dec": "the delegate"}{"idx": 54915, "node_name": "provider", "Dec": "the provider"}{"idx": 54916, "node_name": "algorithm", "Dec": "the algorithm"}{"idx": 54920, "node_name": "algorithm", "Dec": "the standard name of the requested algorithm . see the keymanagerfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 54922, "node_name": "algorithm", "Dec": "the standard name of the requested algorithm . see the keymanagerfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 54923, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 54925, "node_name": "algorithm", "Dec": "the standard name of the requested algorithm . see the keymanagerfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 54926, "node_name": "provider", "Dec": "an instance of the provider ."}{"idx": 54929, "node_name": "ks", "Dec": "the key store or null"}{"idx": 54930, "node_name": "password", "Dec": "the password for recovering keys in the keystore"}{"idx": 54932, "node_name": "spec", "Dec": "an implementation of a provider-specific parameter specification"}{"idx": 54937, "node_name": "ks", "Dec": "the key store or null"}{"idx": 54938, "node_name": "password", "Dec": "the password for recovering keys"}{"idx": 54940, "node_name": "spec", "Dec": "an implementation of a provider-specific parameter specification"}{"idx": 54944, "node_name": "builder", "Dec": "the builder object"}{"idx": 54946, "node_name": "parameters", "Dec": "the list of builder objects"}{"idx": 54951, "node_name": "hostname", "Dec": "the hostname of this server name"}{"idx": 54953, "node_name": "encoded", "Dec": "the encoded hostname of this server name"}{"idx": 54956, "node_name": "other", "Dec": "the other server name object to compare with ."}{"idx": 54960, "node_name": "regex", "Dec": "the regular expression pattern representing the hostname ( s ) to match"}{"idx": 54963, "node_name": "type", "Dec": "the type of the server name that this matcher performs on"}{"idx": 54966, "node_name": "servername", "Dec": "the sniservername instance on which this matcher performs match operations"}{"idx": 54969, "node_name": "type", "Dec": "the type of the server name"}{"idx": 54970, "node_name": "encoded", "Dec": "the encoded value of the server name"}{"idx": 54974, "node_name": "other", "Dec": "the reference object with which to compare ."}{"idx": 54979, "node_name": "contextspi", "Dec": "the delegate"}{"idx": 54980, "node_name": "provider", "Dec": "the provider"}{"idx": 54981, "node_name": "protocol", "Dec": "the protocol"}{"idx": 54984, "node_name": "context", "Dec": "the sslcontext"}{"idx": 54986, "node_name": "protocol", "Dec": "the standard name of the requested protocol . see the sslcontext section in the java security standard algorithm names specification for information about standard protocol names ."}{"idx": 54988, "node_name": "protocol", "Dec": "the standard name of the requested protocol . see the sslcontext section in the java security standard algorithm names specification for information about standard protocol names ."}{"idx": 54989, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 54991, "node_name": "protocol", "Dec": "the standard name of the requested protocol . see the sslcontext section in the java security standard algorithm names specification for information about standard protocol names ."}{"idx": 54992, "node_name": "provider", "Dec": "an instance of the provider ."}{"idx": 54996, "node_name": "km", "Dec": "the sources of authentication keys or null"}{"idx": 54997, "node_name": "tm", "Dec": "the sources of peer authentication trust decisions or null"}{"idx": 54998, "node_name": "random", "Dec": "the source of randomness for this generator or null"}{"idx": 55003, "node_name": "peerhost", "Dec": "the non-authoritative name of the host"}{"idx": 55004, "node_name": "peerport", "Dec": "the non-authoritative port"}{"idx": 55012, "node_name": "km", "Dec": "the sources of authentication keys"}{"idx": 55013, "node_name": "tm", "Dec": "the sources of peer authentication trust decisions"}{"idx": 55014, "node_name": "sr", "Dec": "the source of randomness"}{"idx": 55019, "node_name": "host", "Dec": "the non-authoritative name of the host"}{"idx": 55020, "node_name": "port", "Dec": "the non-authoritative port"}{"idx": 55028, "node_name": "peerhost", "Dec": "the name of the peer host"}{"idx": 55029, "node_name": "peerport", "Dec": "the port number of the peer"}{"idx": 55033, "node_name": "src", "Dec": "a bytebuffer containing outbound application data"}{"idx": 55034, "node_name": "dst", "Dec": "a bytebuffer to hold outbound network data"}{"idx": 55036, "node_name": "srcs", "Dec": "an array of bytebuffers containing the outbound application data"}{"idx": 55037, "node_name": "dst", "Dec": "a bytebuffer to hold outbound network data"}{"idx": 55039, "node_name": "srcs", "Dec": "an array of bytebuffers containing the outbound application data"}{"idx": 55040, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer from which bytes are to be retrieved ; it must be non-negative and no larger than srcs.length"}{"idx": 55041, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; it must be non-negative and no larger than srcs.length"}{"idx": 55042, "node_name": "dst", "Dec": "a bytebuffer to hold outbound network data"}{"idx": 55044, "node_name": "src", "Dec": "a bytebuffer containing inbound network data ."}{"idx": 55045, "node_name": "dst", "Dec": "a bytebuffer to hold inbound application data ."}{"idx": 55047, "node_name": "src", "Dec": "a bytebuffer containing inbound network data ."}{"idx": 55048, "node_name": "dsts", "Dec": "an array of bytebuffers to hold inbound application data ."}{"idx": 55050, "node_name": "src", "Dec": "a bytebuffer containing inbound network data ."}{"idx": 55051, "node_name": "dsts", "Dec": "an array of bytebuffers to hold inbound application data ."}{"idx": 55052, "node_name": "offset", "Dec": "the offset within the buffer array of the first buffer from which bytes are to be transferred ; it must be non-negative and no larger than dsts.length ."}{"idx": 55053, "node_name": "length", "Dec": "the maximum number of buffers to be accessed ; it must be non-negative and no larger than dsts.length"}{"idx": 55062, "node_name": "suites", "Dec": "names of all the cipher suites to enable"}{"idx": 55066, "node_name": "protocols", "Dec": "names of all the protocols to enable ."}{"idx": 55072, "node_name": "mode", "Dec": "true if the engine should start its handshaking in \" client \" mode"}{"idx": 55075, "node_name": "need", "Dec": "set to true if client authentication is required , or false if no client authentication is desired ."}{"idx": 55078, "node_name": "want", "Dec": "set to true if client authentication is requested , or false if no client authentication is desired ."}{"idx": 55081, "node_name": "flag", "Dec": "true indicates that sessions may be created ; this is the default . false indicates that an existing session must be resumed"}{"idx": 55085, "node_name": "params", "Dec": "the parameters"}{"idx": 55093, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 55096, "node_name": "status", "Dec": "the return value of the operation ."}{"idx": 55097, "node_name": "handshakestatus", "Dec": "the current handshaking status ."}{"idx": 55098, "node_name": "bytesconsumed", "Dec": "the number of bytes consumed from the source bytebuffer"}{"idx": 55099, "node_name": "bytesproduced", "Dec": "the number of bytes placed into the destination bytebuffer"}{"idx": 55101, "node_name": "status", "Dec": "the return value of the operation ."}{"idx": 55102, "node_name": "handshakestatus", "Dec": "the current handshaking status ."}{"idx": 55103, "node_name": "bytesconsumed", "Dec": "the number of bytes consumed from the source bytebuffer"}{"idx": 55104, "node_name": "bytesproduced", "Dec": "the number of bytes placed into the destination bytebuffer"}{"idx": 55105, "node_name": "sequencenumber", "Dec": "the sequence number ( unsigned long ) of the produced or consumed ssl / tls / dtls record , or -1l if no record produced or consumed"}{"idx": 55115, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 55118, "node_name": "reason", "Dec": "describes the problem ."}{"idx": 55120, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 55121, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 55123, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 55126, "node_name": "reason", "Dec": "describes the problem ."}{"idx": 55129, "node_name": "reason", "Dec": "describes the problem ."}{"idx": 55133, "node_name": "ciphersuites", "Dec": "the array of ciphersuites ( or null )"}{"idx": 55135, "node_name": "ciphersuites", "Dec": "the array of ciphersuites ( or null )"}{"idx": 55136, "node_name": "protocols", "Dec": "the array of protocols ( or null )"}{"idx": 55139, "node_name": "ciphersuites", "Dec": "the array of ciphersuites ( or null ) . note that the standard list of cipher suite names may be found in the jsse cipher suite names section of the java cryptography architecture standard algorithm name documentation . providers may support cipher suite names not found in this list or might not use the recommended name for a certain cipher suite ."}{"idx": 55142, "node_name": "protocols", "Dec": "the array of protocols ( or null )"}{"idx": 55145, "node_name": "wantclientauth", "Dec": "whether client authentication should be requested"}{"idx": 55148, "node_name": "needclientauth", "Dec": "whether client authentication should be required"}{"idx": 55151, "node_name": "constraints", "Dec": "the algorithm constraints ( or null )"}{"idx": 55154, "node_name": "algorithm", "Dec": "the standard string name of the endpoint identification algorithm ( or null ) . see the java security standard algorithm names document for information about standard algorithm names ."}{"idx": 55156, "node_name": "servernames", "Dec": "the list of desired sniservernames ( or null )"}{"idx": 55159, "node_name": "matchers", "Dec": "the collection of snimatchers ( or null )"}{"idx": 55162, "node_name": "honororder", "Dec": "whether local cipher suites order in #getciphersuites should be honored during ssl / tls / dtls handshaking ."}{"idx": 55165, "node_name": "enableretransmissions", "Dec": "true indicates that dtls handshake retransmissions should be enabled ; false indicates that dtls handshake retransmissions should be disabled"}{"idx": 55168, "node_name": "maximumpacketsize", "Dec": "the maximum expected network packet size in bytes , or 0 to use the implicit size that is automatically specified by the underlying implementation ."}{"idx": 55172, "node_name": "protocols", "Dec": "an ordered array of application protocols , with protocols [ 0 ] being the most preferred . if the array is empty ( zero-length ) , protocol indications will not be used ."}{"idx": 55175, "node_name": "reason", "Dec": "describes the problem ."}{"idx": 55178, "node_name": "name", "Dec": "the name of the sslpermission ."}{"idx": 55180, "node_name": "name", "Dec": "the name of the sslpermission ."}{"idx": 55181, "node_name": "actions", "Dec": "ignored ."}{"idx": 55184, "node_name": "reason", "Dec": "describes the problem ."}{"idx": 55188, "node_name": "port", "Dec": "the port on which to listen"}{"idx": 55190, "node_name": "port", "Dec": "the port on which to listen"}{"idx": 55191, "node_name": "backlog", "Dec": "requested maximum length of the queue of incoming connections ."}{"idx": 55193, "node_name": "port", "Dec": "the port on which to listen"}{"idx": 55194, "node_name": "backlog", "Dec": "requested maximum length of the queue of incoming connections ."}{"idx": 55195, "node_name": "address", "Dec": "the address of the network interface through which connections will be accepted"}{"idx": 55198, "node_name": "suites", "Dec": "names of all the cipher suites to enable"}{"idx": 55203, "node_name": "protocols", "Dec": "names of all the protocols to enable ."}{"idx": 55205, "node_name": "need", "Dec": "set to true if client authentication is required , or false if no client authentication is desired ."}{"idx": 55208, "node_name": "want", "Dec": "set to true if client authentication is requested , or false if no client authentication is desired ."}{"idx": 55211, "node_name": "mode", "Dec": "true if newly accepted connections should use ssl client mode ."}{"idx": 55214, "node_name": "flag", "Dec": "true indicates that sessions may be created ; this is the default . false indicates that an existing session must be resumed ."}{"idx": 55218, "node_name": "params", "Dec": "the parameters"}{"idx": 55232, "node_name": "name", "Dec": "the name to which the data object will be bound . this may not be null ."}{"idx": 55233, "node_name": "value", "Dec": "the data object to be bound . this may not be null ."}{"idx": 55235, "node_name": "name", "Dec": "the name of the binding to find ."}{"idx": 55237, "node_name": "name", "Dec": "the name of the object to remove visible across different access control contexts"}{"idx": 55251, "node_name": "session", "Dec": "the sslsession acting as the source of the event"}{"idx": 55252, "node_name": "name", "Dec": "the name to which the object is being bound or unbound"}{"idx": 55257, "node_name": "event", "Dec": "the event identifying the sslsession into which the listener is being bound ."}{"idx": 55259, "node_name": "event", "Dec": "the event identifying the sslsession from which the listener is being unbound ."}{"idx": 55262, "node_name": "sessionid", "Dec": "the session identifier"}{"idx": 55265, "node_name": "seconds", "Dec": "the new session timeout limit in seconds ; zero means there is no limit ."}{"idx": 55268, "node_name": "size", "Dec": "the new session cache size limit ; zero means there is no limit ."}{"idx": 55273, "node_name": "host", "Dec": "name of the host with which to connect , or null for the loopback address ."}{"idx": 55274, "node_name": "port", "Dec": "number of the server's port"}{"idx": 55276, "node_name": "address", "Dec": "the server's host"}{"idx": 55277, "node_name": "port", "Dec": "its port"}{"idx": 55279, "node_name": "host", "Dec": "name of the host with which to connect , or null for the loopback address ."}{"idx": 55280, "node_name": "port", "Dec": "number of the server's port"}{"idx": 55281, "node_name": "clientaddress", "Dec": "the client's address the socket is bound to , or null for the anylocal address ."}{"idx": 55282, "node_name": "clientport", "Dec": "the client's port the socket is bound to , or zero for a system selected free port ."}{"idx": 55284, "node_name": "address", "Dec": "the server's host"}{"idx": 55285, "node_name": "port", "Dec": "its port"}{"idx": 55286, "node_name": "clientaddress", "Dec": "the client's address the socket is bound to , or null for the anylocal address ."}{"idx": 55287, "node_name": "clientport", "Dec": "the client's port the socket is bound to , or zero for a system selected free port ."}{"idx": 55291, "node_name": "suites", "Dec": "names of all the cipher suites to enable"}{"idx": 55295, "node_name": "protocols", "Dec": "names of all the protocols to enable ."}{"idx": 55299, "node_name": "listener", "Dec": "the handshake completed event listener"}{"idx": 55301, "node_name": "listener", "Dec": "the handshake completed event listener"}{"idx": 55304, "node_name": "mode", "Dec": "true if the socket should start its handshaking in \" client \" mode"}{"idx": 55307, "node_name": "need", "Dec": "set to true if client authentication is required , or false if no client authentication is desired ."}{"idx": 55310, "node_name": "want", "Dec": "set to true if client authentication is requested , or false if no client authentication is desired ."}{"idx": 55313, "node_name": "flag", "Dec": "true indicates that sessions may be created ; this is the default . false indicates that an existing session must be resumed"}{"idx": 55317, "node_name": "params", "Dec": "the parameters"}{"idx": 55328, "node_name": "s", "Dec": "the existing socket"}{"idx": 55329, "node_name": "host", "Dec": "the server host"}{"idx": 55330, "node_name": "port", "Dec": "the server port"}{"idx": 55331, "node_name": "autoclose", "Dec": "close the underlying socket when this socket is closed"}{"idx": 55333, "node_name": "s", "Dec": "the existing socket"}{"idx": 55334, "node_name": "consumed", "Dec": "the consumed inbound network data that has already been removed from the existing socket inputstream . this parameter may be null if no data has been removed ."}{"idx": 55335, "node_name": "autoclose", "Dec": "close the underlying socket when this socket is closed ."}{"idx": 55341, "node_name": "factoryspi", "Dec": "the delegate"}{"idx": 55342, "node_name": "provider", "Dec": "the provider"}{"idx": 55343, "node_name": "algorithm", "Dec": "the algorithm"}{"idx": 55347, "node_name": "algorithm", "Dec": "the standard name of the requested trust management algorithm . see the trustmanagerfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 55349, "node_name": "algorithm", "Dec": "the standard name of the requested trust management algorithm . see the trustmanagerfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 55350, "node_name": "provider", "Dec": "the name of the provider ."}{"idx": 55352, "node_name": "algorithm", "Dec": "the standard name of the requested trust management algorithm . see the trustmanagerfactory section in the java security standard algorithm names specification for information about standard algorithm names ."}{"idx": 55353, "node_name": "provider", "Dec": "an instance of the provider ."}{"idx": 55356, "node_name": "ks", "Dec": "the key store , or null"}{"idx": 55358, "node_name": "spec", "Dec": "an implementation of a provider-specific parameter specification"}{"idx": 55363, "node_name": "ks", "Dec": "the key store or null"}{"idx": 55365, "node_name": "spec", "Dec": "an implementation of a provider-specific parameter specification"}{"idx": 55370, "node_name": "keytype", "Dec": "the key algorithm type name ( s ) , ordered with the most-preferred key type first ."}{"idx": 55371, "node_name": "issuers", "Dec": "the list of acceptable ca issuer subject names or null if it does not matter which issuers are used ."}{"idx": 55372, "node_name": "engine", "Dec": "the sslengine to be used for this connection . this parameter can be null , which indicates that implementations of this interface are free to select an alias applicable to any engine ."}{"idx": 55374, "node_name": "keytype", "Dec": "the key algorithm type name ."}{"idx": 55375, "node_name": "issuers", "Dec": "the list of acceptable ca issuer subject names or null if it does not matter which issuers are used ."}{"idx": 55376, "node_name": "engine", "Dec": "the sslengine to be used for this connection . this parameter can be null , which indicates that implementations of this interface are free to select an alias applicable to any engine ."}{"idx": 55380, "node_name": "chain", "Dec": "the peer certificate chain"}{"idx": 55381, "node_name": "authtype", "Dec": "the key exchange algorithm used"}{"idx": 55382, "node_name": "socket", "Dec": "the socket used for this connection . this parameter can be null , which indicates that implementations need not check the ssl parameters"}{"idx": 55384, "node_name": "chain", "Dec": "the peer certificate chain"}{"idx": 55385, "node_name": "authtype", "Dec": "the key exchange algorithm used"}{"idx": 55386, "node_name": "socket", "Dec": "the socket used for this connection . this parameter can be null , which indicates that implementations need not check the ssl parameters"}{"idx": 55388, "node_name": "chain", "Dec": "the peer certificate chain"}{"idx": 55389, "node_name": "authtype", "Dec": "the key exchange algorithm used"}{"idx": 55390, "node_name": "engine", "Dec": "the engine used for this connection . this parameter can be null , which indicates that implementations need not check the ssl parameters"}{"idx": 55392, "node_name": "chain", "Dec": "the peer certificate chain"}{"idx": 55393, "node_name": "authtype", "Dec": "the key exchange algorithm used"}{"idx": 55394, "node_name": "engine", "Dec": "the engine used for this connection . this parameter can be null , which indicates that implementations need not check the ssl parameters"}{"idx": 55397, "node_name": "keytype", "Dec": "the key algorithm type name"}{"idx": 55398, "node_name": "issuers", "Dec": "the list of acceptable ca issuer subject names , or null if it does not matter which issuers are used ."}{"idx": 55400, "node_name": "keytype", "Dec": "the key algorithm type name ( s ) , ordered with the most-preferred key type first ."}{"idx": 55401, "node_name": "issuers", "Dec": "the list of acceptable ca issuer subject names or null if it does not matter which issuers are used ."}{"idx": 55402, "node_name": "socket", "Dec": "the socket to be used for this connection . this parameter can be null , which indicates that implementations are free to select an alias applicable to any socket ."}{"idx": 55404, "node_name": "keytype", "Dec": "the key algorithm type name"}{"idx": 55405, "node_name": "issuers", "Dec": "the list of acceptable ca issuer subject names or null if it does not matter which issuers are used ."}{"idx": 55407, "node_name": "keytype", "Dec": "the key algorithm type name ."}{"idx": 55408, "node_name": "issuers", "Dec": "the list of acceptable ca issuer subject names or null if it does not matter which issuers are used ."}{"idx": 55409, "node_name": "socket", "Dec": "the socket to be used for this connection . this parameter can be null , which indicates that implementations are free to select an alias applicable to any socket ."}{"idx": 55411, "node_name": "alias", "Dec": "the alias name"}{"idx": 55413, "node_name": "alias", "Dec": "the alias name"}{"idx": 55416, "node_name": "chain", "Dec": "the peer certificate chain"}{"idx": 55417, "node_name": "authtype", "Dec": "the authentication type based on the client certificate"}{"idx": 55419, "node_name": "chain", "Dec": "the peer certificate chain"}{"idx": 55420, "node_name": "authtype", "Dec": "the key exchange algorithm used"}{"idx": 55427, "node_name": "category", "Dec": "attribute category whose associated attribute value is to be returned . it must be a class that implements interface attribute ."}{"idx": 55429, "node_name": "attribute", "Dec": "attribute value to be added to this attribute set"}{"idx": 55431, "node_name": "category", "Dec": "attribute category to be removed from this attribute set"}{"idx": 55433, "node_name": "attribute", "Dec": "attribute value to be removed from this attribute set"}{"idx": 55435, "node_name": "category", "Dec": "whose presence in this attribute set is to be tested"}{"idx": 55437, "node_name": "attribute", "Dec": "attribute value whose presence in this attribute set is to be tested"}{"idx": 55439, "node_name": "attributes", "Dec": "whose elements are to be added to this attribute set"}{"idx": 55445, "node_name": "object", "Dec": "to be compared for equality with this attribute set"}{"idx": 55449, "node_name": "attributeset", "Dec": "underlying attribute set"}{"idx": 55451, "node_name": "attributeset", "Dec": "underlying doc attribute set"}{"idx": 55453, "node_name": "attributeset", "Dec": "underlying print request attribute set"}{"idx": 55455, "node_name": "attributeset", "Dec": "underlying print job attribute set"}{"idx": 55457, "node_name": "attributeset", "Dec": "underlying print service attribute set"}{"idx": 55459, "node_name": "attributeset", "Dec": "underlying attribute set"}{"idx": 55461, "node_name": "attributeset", "Dec": "underlying doc attribute set"}{"idx": 55463, "node_name": "attributeset", "Dec": "underlying print request attribute set"}{"idx": 55465, "node_name": "attributeset", "Dec": "underlying print job attribute set"}{"idx": 55467, "node_name": "attributeset", "Dec": "underlying print service attribute set"}{"idx": 55469, "node_name": "object", "Dec": "object to test"}{"idx": 55470, "node_name": "interfacename", "Dec": "interface the object must implement"}{"idx": 55472, "node_name": "object", "Dec": "object to test"}{"idx": 55473, "node_name": "interfacename", "Dec": "interface of which the object must be an instance"}{"idx": 55475, "node_name": "category", "Dec": "attribute category to test"}{"idx": 55476, "node_name": "attribute", "Dec": "attribute value to test"}{"idx": 55479, "node_name": "value", "Dec": "java.util.date value"}{"idx": 55482, "node_name": "object", "Dec": "object to compare to"}{"idx": 55488, "node_name": "attribute", "Dec": "attribute value to be added to this attribute set"}{"idx": 55490, "node_name": "attributes", "Dec": "whose elements are to be added to this attribute set"}{"idx": 55493, "node_name": "value", "Dec": "integer value"}{"idx": 55505, "node_name": "attribute", "Dec": "attribute value to add to the set"}{"idx": 55507, "node_name": "attributes", "Dec": "array of attribute values to add to the set . if null , an empty attribute set is constructed ."}{"idx": 55509, "node_name": "attributes", "Dec": "set of attributes from which to initialise this set . if null , an empty attribute set is constructed ."}{"idx": 55511, "node_name": "interfacename", "Dec": "the interface of which all members of this attribute set must be an instance . it is assumed to be interface attribute or a subinterface thereof ."}{"idx": 55513, "node_name": "attribute", "Dec": "attribute value to add to the set"}{"idx": 55514, "node_name": "interfacename", "Dec": "the interface of which all members of this attribute set must be an instance . it is assumed to be interface attribute or a subinterface thereof ."}{"idx": 55516, "node_name": "attributes", "Dec": "array of attribute values to add to the set . if null , an empty attribute set is constructed ."}{"idx": 55517, "node_name": "interfacename", "Dec": "the interface of which all members of this attribute set must be an instance . it is assumed to be interface attribute or a subinterface thereof ."}{"idx": 55519, "node_name": "attributes", "Dec": "set of attribute values to initialise the set . if null , an empty attribute set is constructed ."}{"idx": 55520, "node_name": "interfacename", "Dec": "the interface of which all members of this attribute set must be an instance . it is assumed to be interface attribute or a subinterface thereof ."}{"idx": 55522, "node_name": "category", "Dec": "attribute category whose associated attribute value is to be returned . it must be a class that implements interface attribute ."}{"idx": 55524, "node_name": "attribute", "Dec": "attribute value to be added to this attribute set"}{"idx": 55526, "node_name": "category", "Dec": "attribute category to be removed from this attribute set"}{"idx": 55528, "node_name": "attribute", "Dec": "attribute value to be removed from this attribute set"}{"idx": 55530, "node_name": "category", "Dec": "whose presence in this attribute set is to be tested"}{"idx": 55532, "node_name": "attribute", "Dec": "value whose presence in this attribute set is to be tested"}{"idx": 55534, "node_name": "attributes", "Dec": "whose elements are to be added to this attribute set"}{"idx": 55540, "node_name": "object", "Dec": "to be compared for equality with this attribute set"}{"idx": 55545, "node_name": "attribute", "Dec": "attribute value to add to the set"}{"idx": 55547, "node_name": "attributes", "Dec": "array of attribute values to add to the set . if null , an empty attribute set is constructed ."}{"idx": 55549, "node_name": "attributes", "Dec": "set of attribute values to initialise the set . if null , an empty attribute set is constructed ."}{"idx": 55553, "node_name": "attribute", "Dec": "attribute value to add to the set"}{"idx": 55555, "node_name": "attributes", "Dec": "array of attribute values to add to the set . if null , an empty attribute set is constructed ."}{"idx": 55557, "node_name": "attributes", "Dec": "set of attribute values to initialise the set . if null , an empty attribute set is constructed ."}{"idx": 55561, "node_name": "attribute", "Dec": "attribute value to add to the set"}{"idx": 55563, "node_name": "attributes", "Dec": "array of attribute values to add to the set . if null , an empty attribute set is constructed ."}{"idx": 55565, "node_name": "attributes", "Dec": "set of attribute values to initialise the set . if null , an empty attribute set is constructed ."}{"idx": 55569, "node_name": "attribute", "Dec": "attribute value to add to the set"}{"idx": 55571, "node_name": "attributes", "Dec": "array of attribute values to add to the set . if null , an empty attribute set is constructed ."}{"idx": 55573, "node_name": "attributes", "Dec": "set of attribute values to initialise the set . if null , an empty attribute set is constructed ."}{"idx": 55576, "node_name": "value", "Dec": "integer value"}{"idx": 55578, "node_name": "value", "Dec": "integer value"}{"idx": 55579, "node_name": "lowerbound", "Dec": "lower bound"}{"idx": 55580, "node_name": "upperbound", "Dec": "upper bound"}{"idx": 55583, "node_name": "object", "Dec": "object to compare to"}{"idx": 55589, "node_name": "attribute", "Dec": "attribute value to be added to this attribute set"}{"idx": 55591, "node_name": "attributes", "Dec": "whose elements are to be added to this attribute set"}{"idx": 55595, "node_name": "attribute", "Dec": "attribute value to be added to this attribute set"}{"idx": 55597, "node_name": "attributes", "Dec": "whose elements are to be added to this attribute set"}{"idx": 55601, "node_name": "attribute", "Dec": "attribute value to be added to this attribute set"}{"idx": 55603, "node_name": "attributes", "Dec": "whose elements are to be added to this attribute set"}{"idx": 55608, "node_name": "crossfeedresolution", "Dec": "cross feed direction resolution"}{"idx": 55609, "node_name": "feedresolution", "Dec": "feed direction resolution"}{"idx": 55610, "node_name": "units", "Dec": "unit conversion factor , e.g. dpi or dpcm"}{"idx": 55612, "node_name": "units", "Dec": "unit conversion factor , e.g. dpi or dpcm"}{"idx": 55614, "node_name": "units", "Dec": "unit conversion factor , e.g. dpi or dpcm"}{"idx": 55616, "node_name": "units", "Dec": "unit conversion factor , e.g. dpi or dpcm"}{"idx": 55618, "node_name": "units", "Dec": "unit conversion factor , e.g. code > dpi or dpcm"}{"idx": 55619, "node_name": "unitsname", "Dec": "units name string , e.g. \" dpi \" or \" dpcm \" . if null , no units name is appended to the result ."}{"idx": 55621, "node_name": "other", "Dec": "resolution attribute to compare with"}{"idx": 55623, "node_name": "object", "Dec": "object to compare to"}{"idx": 55630, "node_name": "members", "Dec": "set members in string form . if null , an empty set is constructed ."}{"idx": 55632, "node_name": "members", "Dec": "set members in array form . if null , an empty set is constructed ."}{"idx": 55634, "node_name": "member", "Dec": "set member"}{"idx": 55636, "node_name": "lowerbound", "Dec": "lower bound of the range"}{"idx": 55637, "node_name": "upperbound", "Dec": "upper bound of the range"}{"idx": 55640, "node_name": "x", "Dec": "the integer value"}{"idx": 55642, "node_name": "attribute", "Dec": "the integer attribute"}{"idx": 55644, "node_name": "x", "Dec": "the integer value"}{"idx": 55646, "node_name": "object", "Dec": "object to compare to"}{"idx": 55653, "node_name": "x", "Dec": "x dimension"}{"idx": 55654, "node_name": "y", "Dec": "y dimension"}{"idx": 55655, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 55657, "node_name": "x", "Dec": "x dimension"}{"idx": 55658, "node_name": "y", "Dec": "y dimension"}{"idx": 55659, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 55661, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 55663, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 55665, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 55667, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 55668, "node_name": "unitsname", "Dec": "units name string , e.g. in or mm . if null , no units name is appended to the result"}{"idx": 55670, "node_name": "object", "Dec": "object to compare to"}{"idx": 55679, "node_name": "value", "Dec": "integer value"}{"idx": 55688, "node_name": "value", "Dec": "integer value"}{"idx": 55699, "node_name": "value", "Dec": "integer value"}{"idx": 55706, "node_name": "value", "Dec": "integer value"}{"idx": 55708, "node_name": "object", "Dec": "object to compare to"}{"idx": 55713, "node_name": "member", "Dec": "set member"}{"idx": 55715, "node_name": "lowerbound", "Dec": "lower bound of the range"}{"idx": 55716, "node_name": "upperbound", "Dec": "upper bound of the range"}{"idx": 55718, "node_name": "object", "Dec": "object to compare to"}{"idx": 55723, "node_name": "datetime", "Dec": "date value"}{"idx": 55725, "node_name": "object", "Dec": "object to compare to"}{"idx": 55730, "node_name": "datetime", "Dec": "date value"}{"idx": 55732, "node_name": "object", "Dec": "object to compare to"}{"idx": 55737, "node_name": "datetime", "Dec": "date value"}{"idx": 55739, "node_name": "object", "Dec": "object to compare to"}{"idx": 55744, "node_name": "uri", "Dec": "uri"}{"idx": 55746, "node_name": "object", "Dec": "object to compare to"}{"idx": 55752, "node_name": "owner", "Dec": "window ."}{"idx": 55760, "node_name": "value", "Dec": "integer value"}{"idx": 55767, "node_name": "documentname", "Dec": "document name"}{"idx": 55768, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 55770, "node_name": "object", "Dec": "object to compare to"}{"idx": 55777, "node_name": "value", "Dec": "integer value"}{"idx": 55802, "node_name": "value", "Dec": "integer value"}{"idx": 55810, "node_name": "datetime", "Dec": "date value"}{"idx": 55812, "node_name": "object", "Dec": "object to compare to"}{"idx": 55817, "node_name": "value", "Dec": "integer value"}{"idx": 55819, "node_name": "object", "Dec": "object to compare to"}{"idx": 55824, "node_name": "value", "Dec": "integer value"}{"idx": 55826, "node_name": "object", "Dec": "object to compare to"}{"idx": 55831, "node_name": "lowerbound", "Dec": "lower bound of the range"}{"idx": 55832, "node_name": "upperbound", "Dec": "upper bound of the range"}{"idx": 55834, "node_name": "object", "Dec": "object to compare to"}{"idx": 55839, "node_name": "value", "Dec": "integer value"}{"idx": 55841, "node_name": "object", "Dec": "object to compare to"}{"idx": 55846, "node_name": "value", "Dec": "integer value"}{"idx": 55848, "node_name": "object", "Dec": "object to compare to"}{"idx": 55853, "node_name": "lowerbound", "Dec": "lower bound of the range"}{"idx": 55854, "node_name": "upperbound", "Dec": "upper bound of the range"}{"idx": 55856, "node_name": "object", "Dec": "object to compare to"}{"idx": 55861, "node_name": "value", "Dec": "integer value"}{"idx": 55863, "node_name": "object", "Dec": "object to compare to"}{"idx": 55868, "node_name": "value", "Dec": "integer value"}{"idx": 55870, "node_name": "object", "Dec": "object to compare to"}{"idx": 55875, "node_name": "lowerbound", "Dec": "lower bound of the range"}{"idx": 55876, "node_name": "upperbound", "Dec": "upper bound of the range"}{"idx": 55878, "node_name": "object", "Dec": "object to compare to"}{"idx": 55883, "node_name": "message", "Dec": "the message"}{"idx": 55884, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 55886, "node_name": "object", "Dec": "object to compare to"}{"idx": 55891, "node_name": "jobname", "Dec": "job name"}{"idx": 55892, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 55894, "node_name": "object", "Dec": "object to compare to"}{"idx": 55899, "node_name": "username", "Dec": "user name"}{"idx": 55900, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 55902, "node_name": "object", "Dec": "object to compare to"}{"idx": 55907, "node_name": "value", "Dec": "integer value"}{"idx": 55909, "node_name": "object", "Dec": "object to compare to"}{"idx": 55914, "node_name": "value", "Dec": "number of different job priority levels supported"}{"idx": 55916, "node_name": "object", "Dec": "object to compare to"}{"idx": 55923, "node_name": "value", "Dec": "integer value"}{"idx": 55938, "node_name": "value", "Dec": "integer value"}{"idx": 55974, "node_name": "value", "Dec": "integer value"}{"idx": 55982, "node_name": "initialcapacity", "Dec": "initial capacity"}{"idx": 55984, "node_name": "initialcapacity", "Dec": "initial capacity"}{"idx": 55985, "node_name": "loadfactor", "Dec": "load factor"}{"idx": 55987, "node_name": "collection", "Dec": "collection to copy"}{"idx": 55989, "node_name": "o", "Dec": "element to be added to this job state reasons attribute"}{"idx": 55994, "node_name": "value", "Dec": "a value"}{"idx": 55996, "node_name": "object", "Dec": "object to compare to"}{"idx": 56005, "node_name": "value", "Dec": "integer value"}{"idx": 56012, "node_name": "x", "Dec": "printable x"}{"idx": 56013, "node_name": "y", "Dec": "printable y"}{"idx": 56014, "node_name": "w", "Dec": "printable width"}{"idx": 56015, "node_name": "h", "Dec": "printable height"}{"idx": 56016, "node_name": "units", "Dec": "in which the values are expressed"}{"idx": 56018, "node_name": "x", "Dec": "printable x"}{"idx": 56019, "node_name": "y", "Dec": "printable y"}{"idx": 56020, "node_name": "w", "Dec": "printable width"}{"idx": 56021, "node_name": "h", "Dec": "printable height"}{"idx": 56022, "node_name": "units", "Dec": "in which the values are expressed"}{"idx": 56024, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 56026, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 56028, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 56030, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 56032, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 56034, "node_name": "object", "Dec": "object to compare to"}{"idx": 56038, "node_name": "units", "Dec": "unit conversion factor , e.g. inch or mm"}{"idx": 56039, "node_name": "unitsname", "Dec": "units name string , e.g. \" in \" or \" mm \" . if null , no units name is appended to the result"}{"idx": 56114, "node_name": "x", "Dec": "x dimension"}{"idx": 56115, "node_name": "y", "Dec": "y dimension"}{"idx": 56116, "node_name": "units", "Dec": "unit conversion factor , e.g. size2dsyntax.inch or size2dsyntax.mm"}{"idx": 56118, "node_name": "x", "Dec": "x dimension"}{"idx": 56119, "node_name": "y", "Dec": "y dimension"}{"idx": 56120, "node_name": "units", "Dec": "unit conversion factor , e.g. size2dsyntax.inch or size2dsyntax.mm"}{"idx": 56122, "node_name": "x", "Dec": "x dimension"}{"idx": 56123, "node_name": "y", "Dec": "y dimension"}{"idx": 56124, "node_name": "units", "Dec": "unit conversion factor , e.g. size2dsyntax.inch or size2dsyntax.mm"}{"idx": 56125, "node_name": "media", "Dec": "a media name to associate with this mediasize"}{"idx": 56127, "node_name": "x", "Dec": "x dimension"}{"idx": 56128, "node_name": "y", "Dec": "y dimension"}{"idx": 56129, "node_name": "units", "Dec": "unit conversion factor , e.g. size2dsyntax.inch or size2dsyntax.mm"}{"idx": 56130, "node_name": "media", "Dec": "a media name to associate with this mediasize"}{"idx": 56133, "node_name": "media", "Dec": "the name of the media for which the size is sought"}{"idx": 56135, "node_name": "x", "Dec": "x dimension"}{"idx": 56136, "node_name": "y", "Dec": "y dimension"}{"idx": 56137, "node_name": "units", "Dec": "unit conversion factor , e.g. size2dsyntax.inch or size2dsyntax.mm"}{"idx": 56139, "node_name": "object", "Dec": "object to compare to"}{"idx": 56246, "node_name": "value", "Dec": "integer value"}{"idx": 56259, "node_name": "value", "Dec": "integer value"}{"idx": 56268, "node_name": "value", "Dec": "integer value"}{"idx": 56275, "node_name": "value", "Dec": "integer value"}{"idx": 56277, "node_name": "object", "Dec": "object to compare to"}{"idx": 56282, "node_name": "value", "Dec": "integer value"}{"idx": 56284, "node_name": "object", "Dec": "object to compare to"}{"idx": 56289, "node_name": "value", "Dec": "integer value"}{"idx": 56291, "node_name": "object", "Dec": "object to compare to"}{"idx": 56296, "node_name": "members", "Dec": "set members in array form"}{"idx": 56298, "node_name": "member", "Dec": "set member"}{"idx": 56300, "node_name": "lowerbound", "Dec": "lower bound of the range"}{"idx": 56301, "node_name": "upperbound", "Dec": "upper bound of the range"}{"idx": 56303, "node_name": "object", "Dec": "object to compare to"}{"idx": 56312, "node_name": "value", "Dec": "integer value"}{"idx": 56320, "node_name": "devicename", "Dec": "device name"}{"idx": 56321, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 56323, "node_name": "object", "Dec": "object to compare to"}{"idx": 56328, "node_name": "members", "Dec": "set members in array form"}{"idx": 56330, "node_name": "members", "Dec": "set members in string form"}{"idx": 56332, "node_name": "member", "Dec": "set member"}{"idx": 56334, "node_name": "lowerbound", "Dec": "lower bound of the range"}{"idx": 56335, "node_name": "upperbound", "Dec": "upper bound of the range"}{"idx": 56337, "node_name": "object", "Dec": "object to compare to"}{"idx": 56342, "node_name": "value", "Dec": "integer value"}{"idx": 56344, "node_name": "object", "Dec": "object to compare to"}{"idx": 56349, "node_name": "value", "Dec": "integer value"}{"idx": 56351, "node_name": "object", "Dec": "object to compare to"}{"idx": 56358, "node_name": "value", "Dec": "integer value"}{"idx": 56378, "node_name": "info", "Dec": "printer information string"}{"idx": 56379, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 56381, "node_name": "object", "Dec": "object to compare to"}{"idx": 56388, "node_name": "value", "Dec": "integer value"}{"idx": 56395, "node_name": "location", "Dec": "printer location"}{"idx": 56396, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 56398, "node_name": "object", "Dec": "object to compare to"}{"idx": 56403, "node_name": "makeandmodel", "Dec": "printer make and model string"}{"idx": 56404, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 56406, "node_name": "object", "Dec": "object to compare to"}{"idx": 56411, "node_name": "message", "Dec": "the message"}{"idx": 56412, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 56414, "node_name": "object", "Dec": "object to compare to"}{"idx": 56419, "node_name": "uri", "Dec": "uri"}{"idx": 56421, "node_name": "object", "Dec": "object to compare to"}{"idx": 56426, "node_name": "uri", "Dec": "uri"}{"idx": 56428, "node_name": "object", "Dec": "object to compare to"}{"idx": 56433, "node_name": "printername", "Dec": "printer name"}{"idx": 56434, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 56436, "node_name": "object", "Dec": "object to compare to"}{"idx": 56441, "node_name": "crossfeedresolution", "Dec": "cross feed direction resolution"}{"idx": 56442, "node_name": "feedresolution", "Dec": "feed direction resolution"}{"idx": 56443, "node_name": "units", "Dec": "unit conversion factor , e.g. resolutionsyntax.dpi or resolutionsyntax.dpcm"}{"idx": 56445, "node_name": "object", "Dec": "object to compare to"}{"idx": 56454, "node_name": "value", "Dec": "integer value"}{"idx": 56494, "node_name": "value", "Dec": "integer value"}{"idx": 56502, "node_name": "initialcapacity", "Dec": "initial capacity"}{"idx": 56504, "node_name": "initialcapacity", "Dec": "initial capacity"}{"idx": 56505, "node_name": "loadfactor", "Dec": "load factor"}{"idx": 56507, "node_name": "map", "Dec": "map to copy"}{"idx": 56509, "node_name": "reason", "Dec": "printer state reason . this must be an instance of class printerstatereason"}{"idx": 56510, "node_name": "severity", "Dec": "severity of the printer state reason . this must be an instance of class severity"}{"idx": 56514, "node_name": "severity", "Dec": "severity level"}{"idx": 56517, "node_name": "uri", "Dec": "uri of the printer"}{"idx": 56519, "node_name": "object", "Dec": "object to compare to"}{"idx": 56527, "node_name": "value", "Dec": "integer value"}{"idx": 56535, "node_name": "value", "Dec": "integer value"}{"idx": 56537, "node_name": "object", "Dec": "object to compare to"}{"idx": 56550, "node_name": "value", "Dec": "integer value"}{"idx": 56557, "node_name": "username", "Dec": "user name"}{"idx": 56558, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale as returned by locale.getdefault()"}{"idx": 56560, "node_name": "object", "Dec": "object to compare to"}{"idx": 56568, "node_name": "value", "Dec": "integer value"}{"idx": 56577, "node_name": "value", "Dec": "integer value"}{"idx": 56589, "node_name": "value", "Dec": "integer value"}{"idx": 56597, "node_name": "value", "Dec": "text string"}{"idx": 56598, "node_name": "locale", "Dec": "natural language of the text string . null is interpreted to mean the default locale for as returned by locale.getdefault()"}{"idx": 56603, "node_name": "object", "Dec": "object to compare to"}{"idx": 56608, "node_name": "message", "Dec": "the detail message"}{"idx": 56611, "node_name": "uri", "Dec": "the uri"}{"idx": 56615, "node_name": "object", "Dec": "object to compare to"}{"idx": 56649, "node_name": "mimetype", "Dec": "mime media type string"}{"idx": 56654, "node_name": "mimetype", "Dec": "mime media type string . if it is a text media type , it is assumed to contain a \" charset= utf-16 \" parameter ."}{"idx": 56676, "node_name": "mimetype", "Dec": "mime media type string"}{"idx": 56680, "node_name": "mimetype", "Dec": "mime media type string"}{"idx": 56681, "node_name": "classname", "Dec": "fully-qualified representation class name"}{"idx": 56686, "node_name": "paramname", "Dec": "the name of the parameter . this name is internally converted to the canonical lower case format before performing the match ."}{"idx": 56691, "node_name": "obj", "Dec": "object to test"}{"idx": 56696, "node_name": "mimetype", "Dec": "mime media type string . if it is a text media type , it is assumed to contain a \" charset= utf-16 \" parameter ."}{"idx": 56702, "node_name": "classname", "Dec": "fully-qualified representation class name"}{"idx": 56707, "node_name": "mimetype", "Dec": "mime media type string . if it is a text media type , it is assumed to contain a \" charset= utf-16 \" parameter ."}{"idx": 56729, "node_name": "mimetype", "Dec": "mime media type string"}{"idx": 56734, "node_name": "listener", "Dec": "the object implementing the listener interface"}{"idx": 56736, "node_name": "listener", "Dec": "the object implementing the listener interface"}{"idx": 56738, "node_name": "listener", "Dec": "the object implementing the listener interface"}{"idx": 56739, "node_name": "attributes", "Dec": "the attributes to listen on , or null to mean all attributes that can change , as determined by the job"}{"idx": 56741, "node_name": "listener", "Dec": "the object implementing the listener interface"}{"idx": 56743, "node_name": "doc", "Dec": "the document to be printed . it must be a flavor supported by this printjob ."}{"idx": 56744, "node_name": "attributes", "Dec": "the job attributes to be applied to this print job . if this parameter is null then the default attributes are used ."}{"idx": 56747, "node_name": "source", "Dec": "is the source of the event"}{"idx": 56752, "node_name": "pje", "Dec": "the event being notified"}{"idx": 56754, "node_name": "pje", "Dec": "the event being notified"}{"idx": 56756, "node_name": "pje", "Dec": "the event being notified"}{"idx": 56758, "node_name": "pje", "Dec": "the event being notified"}{"idx": 56760, "node_name": "pje", "Dec": "the event being notified"}{"idx": 56762, "node_name": "pje", "Dec": "the event being notified"}{"idx": 56765, "node_name": "source", "Dec": "the print job generating this event"}{"idx": 56766, "node_name": "attributes", "Dec": "the attribute changes being reported"}{"idx": 56771, "node_name": "pjae", "Dec": "the event being notified"}{"idx": 56780, "node_name": "source", "Dec": "a docprintjob object"}{"idx": 56781, "node_name": "reason", "Dec": "an int specifying the reason"}{"idx": 56786, "node_name": "pje", "Dec": "the job generating this event"}{"idx": 56788, "node_name": "pje", "Dec": "the job generating this event"}{"idx": 56790, "node_name": "pje", "Dec": "the job generating this event"}{"idx": 56792, "node_name": "pje", "Dec": "the job generating this event"}{"idx": 56794, "node_name": "pje", "Dec": "the job generating this event"}{"idx": 56796, "node_name": "pje", "Dec": "the job generating this event"}{"idx": 56799, "node_name": "source", "Dec": "the print job generating this event"}{"idx": 56800, "node_name": "attributes", "Dec": "the attribute changes being reported"}{"idx": 56805, "node_name": "psae", "Dec": "the event being notified"}{"idx": 56813, "node_name": "multidoc", "Dec": "the documents to be printed . all must be a flavor supported by the printjob & printservice ."}{"idx": 56814, "node_name": "attributes", "Dec": "the job attributes to be applied to this print job . if this parameter is null then the default attributes are used ."}{"idx": 56820, "node_name": "s", "Dec": "detail message , or null if no detail message"}{"idx": 56822, "node_name": "e", "Dec": "chained exception"}{"idx": 56824, "node_name": "s", "Dec": "detail message , or null if no detail message"}{"idx": 56825, "node_name": "e", "Dec": "chained exception"}{"idx": 56830, "node_name": "listener", "Dec": "a printserviceattributelistener , which monitors the status of a print service"}{"idx": 56832, "node_name": "listener", "Dec": "a printserviceattributelistener object"}{"idx": 56835, "node_name": "category", "Dec": "the category of a printserviceattribute supported by this service"}{"idx": 56838, "node_name": "flavor", "Dec": "the docflavor to query for support"}{"idx": 56841, "node_name": "category", "Dec": "printing attribute category to test . it must be a class that implements interface attribute ."}{"idx": 56843, "node_name": "category", "Dec": "printing attribute category for which the default attribute value is requested . it must be a class that implements interface attribute ."}{"idx": 56845, "node_name": "category", "Dec": "printing attribute category to test . it must be a class that implements interface attribute ."}{"idx": 56846, "node_name": "flavor", "Dec": "doc flavor for a supposed job , or null"}{"idx": 56847, "node_name": "attributes", "Dec": "set of printing attributes for a supposed job ( both job-level attributes and document-level attributes ) , or null"}{"idx": 56849, "node_name": "attrval", "Dec": "printing attribute value to test"}{"idx": 56850, "node_name": "flavor", "Dec": "doc flavor for a supposed job , or null"}{"idx": 56851, "node_name": "attributes", "Dec": "set of printing attributes for a supposed job ( both job-level attributes and document-level attributes ) , or null"}{"idx": 56853, "node_name": "flavor", "Dec": "doc flavor to test , or null"}{"idx": 56854, "node_name": "attributes", "Dec": "set of printing attributes for a supposed job ( both job-level attributes and document-level attributes ) , or null"}{"idx": 56857, "node_name": "obj", "Dec": "the reference object with which to compare"}{"idx": 56862, "node_name": "flavor", "Dec": "the flavor to print . if null , this constraint is not used ."}{"idx": 56863, "node_name": "attributes", "Dec": "attributes that the print service must support . if null this constraint is not used ."}{"idx": 56865, "node_name": "flavors", "Dec": "the flavors to print . if null or empty this constraint is not used . otherwise return only multidoc print services that can print all specified doc flavors ."}{"idx": 56866, "node_name": "attributes", "Dec": "attributes that the print service must support . if null this constraint is not used ."}{"idx": 56869, "node_name": "sp", "Dec": "an implementation of a lookup service"}{"idx": 56871, "node_name": "service", "Dec": "an implementation of a print service"}{"idx": 56873, "node_name": "flavor", "Dec": "of document required . if null it is ignored ."}{"idx": 56874, "node_name": "attributes", "Dec": "required to be supported . if null this constraint is not used ."}{"idx": 56877, "node_name": "flavors", "Dec": "of documents required . if null or empty it is ignored ."}{"idx": 56878, "node_name": "attributes", "Dec": "required to be supported . if null this constraint is not used ."}{"idx": 56883, "node_name": "gc", "Dec": "used to select screen , null means primary or default screen"}{"idx": 56884, "node_name": "x", "Dec": "location of dialog including border in screen coordinates relative to the origin of gc"}{"idx": 56885, "node_name": "y", "Dec": "location of dialog including border in screen coordinates relative to the origin of gc"}{"idx": 56886, "node_name": "services", "Dec": "to be browsable , must be non-null"}{"idx": 56887, "node_name": "defaultservice", "Dec": "initial printservice to display"}{"idx": 56888, "node_name": "flavor", "Dec": "the flavor to be printed , or null"}{"idx": 56889, "node_name": "attributes", "Dec": "on input is the initial application supplied preferences . this cannot be null but may be empty . on output the attributes reflect changes made by the user ."}{"idx": 56901, "node_name": "role", "Dec": "requested . must be one of the standard roles or a private role supported by this factory ."}{"idx": 56902, "node_name": "ui", "Dec": "type in which the role is requested"}{"idx": 56904, "node_name": "role", "Dec": "to be looked up"}{"idx": 56907, "node_name": "printdata", "Dec": "the print data object"}{"idx": 56908, "node_name": "flavor", "Dec": "the docflavor object"}{"idx": 56909, "node_name": "attributes", "Dec": "a docattributeset , which can be null"}{"idx": 56917, "node_name": "out", "Dec": "stream to which to send formatted print data"}{"idx": 56925, "node_name": "flavor", "Dec": "of the input document type"}{"idx": 56926, "node_name": "outputmimetype", "Dec": "representing the required output format , used to identify suitable stream printer factories . a value of null means match all formats ."}{"idx": 56930, "node_name": "out", "Dec": "destination stream for generated output"}{"idx": 56940, "node_name": "host", "Dec": "the host name"}{"idx": 56941, "node_name": "port", "Dec": "the port number"}{"idx": 56943, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 56948, "node_name": "enabledciphersuites", "Dec": "names of all the cipher suites to enable on ssl connections accepted by server sockets created by this factory , or null to use the cipher suites that are enabled by default"}{"idx": 56949, "node_name": "enabledprotocols", "Dec": "names of all the protocol versions to enable on ssl connections accepted by server sockets created by this factory , or null to use the protocol versions that are enabled by default"}{"idx": 56950, "node_name": "needclientauth", "Dec": "true to require client authentication on ssl connections accepted by server sockets created by this factory ; false to not require client authentication"}{"idx": 56952, "node_name": "context", "Dec": "the ssl context to be used for creating ssl sockets . if context is null the default sslsocketfactory or the default sslserversocketfactory will be used to create ssl sockets . otherwise , the socket factory returned by sslcontext.getsocketfactory() or sslcontext.getserversocketfactory() will be used instead ."}{"idx": 56953, "node_name": "enabledciphersuites", "Dec": "names of all the cipher suites to enable on ssl connections accepted by server sockets created by this factory , or null to use the cipher suites that are enabled by default"}{"idx": 56954, "node_name": "enabledprotocols", "Dec": "names of all the protocol versions to enable on ssl connections accepted by server sockets created by this factory , or null to use the protocol versions that are enabled by default"}{"idx": 56955, "node_name": "needclientauth", "Dec": "true to require client authentication on ssl connections accepted by server sockets created by this factory ; false to not require client authentication"}{"idx": 56960, "node_name": "port", "Dec": "the port number"}{"idx": 56962, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 56968, "node_name": "n", "Dec": "the specified bindings ."}{"idx": 56970, "node_name": "ctxt", "Dec": "the specified scriptcontext ."}{"idx": 56973, "node_name": "scope", "Dec": "the specified scope"}{"idx": 56975, "node_name": "bindings", "Dec": "the specified bindings ."}{"idx": 56976, "node_name": "scope", "Dec": "the specified scope ."}{"idx": 56978, "node_name": "key", "Dec": "the specified key ."}{"idx": 56979, "node_name": "value", "Dec": "the specified value ."}{"idx": 56981, "node_name": "key", "Dec": "the key whose value is to be returned"}{"idx": 56983, "node_name": "reader", "Dec": "a reader containing the source of the script ."}{"idx": 56984, "node_name": "bindings", "Dec": "a bindings to use for the engine_scope while the script executes ."}{"idx": 56986, "node_name": "script", "Dec": "a string containing the source of the script ."}{"idx": 56987, "node_name": "bindings", "Dec": "a bindings to use as the engine_scope while the script executes ."}{"idx": 56989, "node_name": "reader", "Dec": "a reader containing the source of the script ."}{"idx": 56991, "node_name": "script", "Dec": "a string containing the source of the script ."}{"idx": 56993, "node_name": "nn", "Dec": "bindings to use for the engine_scope"}{"idx": 56996, "node_name": "name", "Dec": "the name associated with the value ."}{"idx": 56997, "node_name": "value", "Dec": "the value associated with the name ."}{"idx": 56999, "node_name": "tomerge", "Dec": "the map to merge with this one ."}{"idx": 57001, "node_name": "key", "Dec": "key whose presence in this map is to be tested ."}{"idx": 57003, "node_name": "key", "Dec": "key whose associated value is to be returned ."}{"idx": 57005, "node_name": "key", "Dec": "key whose mapping is to be removed from the map ."}{"idx": 57008, "node_name": "script", "Dec": "the source of the script , represented as a string ."}{"idx": 57010, "node_name": "script", "Dec": "the reader from which the script source is obtained ."}{"idx": 57014, "node_name": "context", "Dec": "a scriptcontext that is used in the same way as the scriptcontext passed to the eval methods of scriptengine ."}{"idx": 57016, "node_name": "bindings", "Dec": "the bindings of attributes used for the engine_scope ."}{"idx": 57021, "node_name": "name", "Dec": "the name of the procedure to be called ."}{"idx": 57022, "node_name": "thiz", "Dec": "if the procedure is a member of a class defined in the script and thiz is an instance of that class returned by a previous execution or invocation , the named method is called through that instance ."}{"idx": 57023, "node_name": "args", "Dec": "arguments to pass to the procedure . the rules for converting the arguments to scripting variables are implementation-specific ."}{"idx": 57025, "node_name": "name", "Dec": "of the procedure or function to call"}{"idx": 57026, "node_name": "args", "Dec": "arguments to pass to the procedure or function"}{"idx": 57028, "node_name": "clasz", "Dec": "the class object of the interface to return ."}{"idx": 57030, "node_name": "thiz", "Dec": "the scripting object whose member functions are used to implement getInterface(java.lang.Object,java.lang.Class)s of the interface ."}{"idx": 57031, "node_name": "clasz", "Dec": "the class object of the interface to return ."}{"idx": 57036, "node_name": "bindings", "Dec": "the bindings to associate with the given scope"}{"idx": 57037, "node_name": "scope", "Dec": "the scope"}{"idx": 57039, "node_name": "scope", "Dec": "the scope"}{"idx": 57041, "node_name": "name", "Dec": "the name of the attribute to set"}{"idx": 57042, "node_name": "value", "Dec": "the value of the attribute"}{"idx": 57043, "node_name": "scope", "Dec": "the scope in which to set the attribute"}{"idx": 57045, "node_name": "name", "Dec": "the name of the attribute to retrieve ."}{"idx": 57046, "node_name": "scope", "Dec": "the scope in which to retrieve the attribute ."}{"idx": 57048, "node_name": "name", "Dec": "the name of the attribute to remove"}{"idx": 57049, "node_name": "scope", "Dec": "the scope in which to remove the attribute"}{"idx": 57051, "node_name": "name", "Dec": "the name of the attribute to retrieve ."}{"idx": 57053, "node_name": "name", "Dec": "name of the attribute ."}{"idx": 57057, "node_name": "writer", "Dec": "the new writer ."}{"idx": 57059, "node_name": "writer", "Dec": "the writer ."}{"idx": 57062, "node_name": "reader", "Dec": "the new reader ."}{"idx": 57073, "node_name": "script", "Dec": "the script to be executed by the script engine ."}{"idx": 57074, "node_name": "context", "Dec": "a scriptcontext exposing sets of attributes in different scopes . the meanings of the scopes scriptcontext.global_scope , and scriptcontext.engine_scope are defined in the specification . the engine_scope bindings of the scriptcontext contains the bindings of scripting variables to application objects to be used during this script execution ."}{"idx": 57076, "node_name": "reader", "Dec": "the source of the script to be executed by the script engine ."}{"idx": 57077, "node_name": "context", "Dec": "the scriptcontext passed to the script engine ."}{"idx": 57079, "node_name": "script", "Dec": "the script language source to be executed ."}{"idx": 57081, "node_name": "reader", "Dec": "the source of the script ."}{"idx": 57083, "node_name": "script", "Dec": "the source for the script ."}{"idx": 57084, "node_name": "n", "Dec": "the bindings of attributes to be used for script execution ."}{"idx": 57086, "node_name": "reader", "Dec": "the source of the script ."}{"idx": 57087, "node_name": "n", "Dec": "the bindings of attributes ."}{"idx": 57089, "node_name": "key", "Dec": "the name of named value to add"}{"idx": 57090, "node_name": "value", "Dec": "the value of named value to add ."}{"idx": 57092, "node_name": "key", "Dec": "the key whose value is to be returned"}{"idx": 57094, "node_name": "scope", "Dec": "either scriptcontext.engine_scope or scriptcontext.global_scope which specifies the bindings to return . implementations of scriptcontext may define additional scopes . if the default scriptcontext of the scriptengine defines additional scopes , any of them can be passed to get the corresponding bindings ."}{"idx": 57096, "node_name": "bindings", "Dec": "the bindings for the specified scope ."}{"idx": 57097, "node_name": "scope", "Dec": "the specified scope . either scriptcontext.engine_scope , scriptcontext.global_scope , or any other valid value of scope ."}{"idx": 57101, "node_name": "context", "Dec": "a scriptcontext that will replace the default scriptcontext in the scriptengine ."}{"idx": 57112, "node_name": "key", "Dec": "the name of the parameter"}{"idx": 57114, "node_name": "obj", "Dec": "the name representing the object whose method is to be invoked . the name is the one used to create bindings using the put method of scriptengine , the put method of an engine_scope bindings , or the setattribute method of scriptcontext . the identifier used in scripts may be a decorated form of the specified one ."}{"idx": 57115, "node_name": "m", "Dec": "the name of getMethodCallSyntax(java.lang.String,java.lang.String,java.lang.String...) to invoke ."}{"idx": 57116, "node_name": "args", "Dec": "names of the arguments in getMethodCallSyntax(java.lang.String,java.lang.String,java.lang.String...) call ."}{"idx": 57118, "node_name": "todisplay", "Dec": "the string to be displayed by the returned statement ."}{"idx": 57120, "node_name": "statements", "Dec": "the statements to be executed . may be return values of calls to the getmethodcallsyntax and getoutputstatement methods ."}{"idx": 57125, "node_name": "loader", "Dec": "classloader used to discover script engine factories ."}{"idx": 57127, "node_name": "bindings", "Dec": "the specified bindings"}{"idx": 57130, "node_name": "key", "Dec": "key to set"}{"idx": 57131, "node_name": "value", "Dec": "value to set ."}{"idx": 57133, "node_name": "key", "Dec": "the key whose value is to be returned ."}{"idx": 57135, "node_name": "shortname", "Dec": "the short name of the scriptengine implementation . returned by the getnames method of its scriptenginefactory ."}{"idx": 57137, "node_name": "extension", "Dec": "the given extension"}{"idx": 57139, "node_name": "mimetype", "Dec": "the given mime type"}{"idx": 57142, "node_name": "name", "Dec": "the name to be associated with the scriptenginefactory ."}{"idx": 57143, "node_name": "factory", "Dec": "the class to associate with the given name ."}{"idx": 57145, "node_name": "type", "Dec": "the mime type to be associated with the scriptenginefactory ."}{"idx": 57146, "node_name": "factory", "Dec": "the class to associate with the given mime type ."}{"idx": 57148, "node_name": "extension", "Dec": "the extension type to be associated with the scriptenginefactory ."}{"idx": 57149, "node_name": "factory", "Dec": "the class to associate with the given extension ."}{"idx": 57152, "node_name": "s", "Dec": "the string to use in the message ."}{"idx": 57154, "node_name": "e", "Dec": "the wrapped exception ."}{"idx": 57156, "node_name": "message", "Dec": "the string to use in the message"}{"idx": 57157, "node_name": "filename", "Dec": "the file or resource name describing the location of a script error causing the scriptexception to be thrown ."}{"idx": 57158, "node_name": "linenumber", "Dec": "a line number describing the location of a script error causing the scriptexception to be thrown ."}{"idx": 57160, "node_name": "message", "Dec": "the message ."}{"idx": 57161, "node_name": "filename", "Dec": "the filename"}{"idx": 57162, "node_name": "linenumber", "Dec": "the line number ."}{"idx": 57163, "node_name": "columnnumber", "Dec": "the column number ."}{"idx": 57170, "node_name": "m", "Dec": "the map backing this simplebindings ."}{"idx": 57173, "node_name": "name", "Dec": "name of value"}{"idx": 57174, "node_name": "value", "Dec": "value to set ."}{"idx": 57176, "node_name": "tomerge", "Dec": "the map of values to add ."}{"idx": 57178, "node_name": "key", "Dec": "key whose presence in this map is to be tested ."}{"idx": 57180, "node_name": "key", "Dec": "key whose associated value is to be returned ."}{"idx": 57182, "node_name": "key", "Dec": "key whose mapping is to be removed from the map ."}{"idx": 57191, "node_name": "bindings", "Dec": "the bindings of attributes to set ."}{"idx": 57192, "node_name": "scope", "Dec": "the value of the scope in which the attributes are set ."}{"idx": 57194, "node_name": "name", "Dec": "the name of the attribute to retrieve ."}{"idx": 57196, "node_name": "name", "Dec": "the name of the attribute to retrieve ."}{"idx": 57197, "node_name": "scope", "Dec": "the scope in which to retrieve the attribute ."}{"idx": 57199, "node_name": "name", "Dec": "the name of the attribute to remove"}{"idx": 57200, "node_name": "scope", "Dec": "the scope in which to remove the attribute"}{"idx": 57202, "node_name": "name", "Dec": "the name of the attribute to set"}{"idx": 57203, "node_name": "value", "Dec": "the value of the attribute"}{"idx": 57204, "node_name": "scope", "Dec": "the scope in which to set the attribute"}{"idx": 57206, "node_name": "name", "Dec": "name of the attribute ."}{"idx": 57208, "node_name": "scope", "Dec": "the specified scope"}{"idx": 57211, "node_name": "name", "Dec": "the name of the authpermission"}{"idx": 57213, "node_name": "name", "Dec": "the name of the authpermission"}{"idx": 57214, "node_name": "actions", "Dec": "should be null ."}{"idx": 57218, "node_name": "callbacks", "Dec": "an array of callback objects provided by an underlying security service which contains the information requested to be retrieved or displayed ."}{"idx": 57221, "node_name": "prompt", "Dec": "the prompt used to describe the list of choices ."}{"idx": 57222, "node_name": "choices", "Dec": "the list of choices ."}{"idx": 57223, "node_name": "defaultchoice", "Dec": "the choice to be used as the default choice when the list of choices are displayed . this value is represented as an index into the choices array ."}{"idx": 57224, "node_name": "multipleselectionsallowed", "Dec": "boolean specifying whether or not multiple selections can be made from the list of choices ."}{"idx": 57230, "node_name": "selection", "Dec": "the selection represented as an index into the choices list ."}{"idx": 57232, "node_name": "selections", "Dec": "the selections represented as indexes into the choices list ."}{"idx": 57247, "node_name": "messagetype", "Dec": "the message type ( information , warning or error ) ."}{"idx": 57248, "node_name": "optiontype", "Dec": "the option type ( yes_no_option , yes_no_cancel_option or ok_cancel_option ) ."}{"idx": 57249, "node_name": "defaultoption", "Dec": "the default option from the provided optiontype ( yes , no , cancel or ok ) ."}{"idx": 57251, "node_name": "messagetype", "Dec": "the message type ( information , warning or error ) ."}{"idx": 57252, "node_name": "options", "Dec": "the list of confirmation options ."}{"idx": 57253, "node_name": "defaultoption", "Dec": "the default option , represented as an index into the options array ."}{"idx": 57255, "node_name": "prompt", "Dec": "the prompt used to describe the list of options ."}{"idx": 57256, "node_name": "messagetype", "Dec": "the message type ( information , warning or error ) ."}{"idx": 57257, "node_name": "optiontype", "Dec": "the option type ( yes_no_option , yes_no_cancel_option or ok_cancel_option ) ."}{"idx": 57258, "node_name": "defaultoption", "Dec": "the default option from the provided optiontype ( yes , no , cancel or ok ) ."}{"idx": 57260, "node_name": "prompt", "Dec": "the prompt used to describe the list of options ."}{"idx": 57261, "node_name": "messagetype", "Dec": "the message type ( information , warning or error ) ."}{"idx": 57262, "node_name": "options", "Dec": "the list of confirmation options ."}{"idx": 57263, "node_name": "defaultoption", "Dec": "the default option , represented as an index into the options array ."}{"idx": 57270, "node_name": "selection", "Dec": "the selection represented as yes , no , ok or cancel if an optiontype was specified to the constructor of this confirmationcallback . otherwise , the selection represents the index into the options array specified to the constructor of this confirmationcallback ."}{"idx": 57275, "node_name": "locale", "Dec": "the retrieved locale ."}{"idx": 57279, "node_name": "prompt", "Dec": "the prompt used to request the name ."}{"idx": 57281, "node_name": "prompt", "Dec": "the prompt used to request the information ."}{"idx": 57282, "node_name": "defaultname", "Dec": "the name to be used as the default name displayed with the prompt ."}{"idx": 57286, "node_name": "name", "Dec": "the retrieved name ( which may be null ) ."}{"idx": 57290, "node_name": "prompt", "Dec": "the prompt used to request the password ."}{"idx": 57291, "node_name": "echoon", "Dec": "true if the password should be displayed as it is being typed ."}{"idx": 57295, "node_name": "password", "Dec": "the retrieved password , which may be null ."}{"idx": 57300, "node_name": "prompt", "Dec": "the prompt used to request the information ."}{"idx": 57302, "node_name": "prompt", "Dec": "the prompt used to request the information ."}{"idx": 57303, "node_name": "defaulttext", "Dec": "the text to be used as the default text displayed with the prompt ."}{"idx": 57307, "node_name": "text", "Dec": "the retrieved text , which may be null ."}{"idx": 57314, "node_name": "messagetype", "Dec": "the message type ( information , warning or error ) ."}{"idx": 57315, "node_name": "message", "Dec": "the message to be displayed ."}{"idx": 57320, "node_name": "callback", "Dec": "the unrecognized callback ."}{"idx": 57322, "node_name": "callback", "Dec": "the unrecognized callback ."}{"idx": 57323, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57331, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57334, "node_name": "principals", "Dec": "the name of the subordinate and target principals"}{"idx": 57336, "node_name": "principals", "Dec": "the name of the subordinate and target principals"}{"idx": 57337, "node_name": "actions", "Dec": "should be null ."}{"idx": 57339, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 57341, "node_name": "obj", "Dec": "the object to test for equality with this object ."}{"idx": 57346, "node_name": "keybytes", "Dec": "the key material for the key"}{"idx": 57347, "node_name": "keytype", "Dec": "the key type for the key as defined by the kerberos protocol specification ."}{"idx": 57356, "node_name": "other", "Dec": "the object to compare to"}{"idx": 57359, "node_name": "sender", "Dec": "the sender of the message"}{"idx": 57360, "node_name": "recipient", "Dec": "the recipient of the message"}{"idx": 57361, "node_name": "message", "Dec": "the der encoded krb_cred message"}{"idx": 57369, "node_name": "other", "Dec": "the object to compare to"}{"idx": 57372, "node_name": "principal", "Dec": "the principal that this secret key belongs to"}{"idx": 57373, "node_name": "keybytes", "Dec": "the key material for the secret key"}{"idx": 57374, "node_name": "keytype", "Dec": "the key type for the secret key as defined by the kerberos protocol specification ."}{"idx": 57375, "node_name": "versionnum", "Dec": "the version number of this secret key"}{"idx": 57377, "node_name": "principal", "Dec": "the principal that this password belongs to"}{"idx": 57378, "node_name": "password", "Dec": "the password that should be used to compute the key"}{"idx": 57379, "node_name": "algorithm", "Dec": "the name for the algorithm that this key will be used for"}{"idx": 57391, "node_name": "other", "Dec": "the object to compare to"}{"idx": 57401, "node_name": "name", "Dec": "the principal name"}{"idx": 57403, "node_name": "name", "Dec": "the principal name"}{"idx": 57404, "node_name": "nametype", "Dec": "the name type of the principal"}{"idx": 57408, "node_name": "other", "Dec": "the object to compare to"}{"idx": 57414, "node_name": "asn1encoding", "Dec": "the asn.1 encoding of the ticket as defined by the kerberos protocol specification ."}{"idx": 57415, "node_name": "client", "Dec": "the client that owns this service ticket"}{"idx": 57416, "node_name": "server", "Dec": "the service that this ticket is for"}{"idx": 57417, "node_name": "sessionkey", "Dec": "the raw bytes for the session key that must be used to encrypt the authenticator that will be sent to the server"}{"idx": 57418, "node_name": "keytype", "Dec": "the key type for the session key as defined by the kerberos protocol specification ."}{"idx": 57419, "node_name": "flags", "Dec": "the ticket flags . each element in this array indicates the value for the corresponding bit in the asn.1 bitstring that represents the ticket flags . if the number of elements in this array is less than the number of flags used by the kerberos protocol , then the missing flags will be filled in with false ."}{"idx": 57420, "node_name": "authtime", "Dec": "the time of initial authentication for the client"}{"idx": 57421, "node_name": "starttime", "Dec": "the time after which the ticket will be valid . this may be null in which case the value of authtime is treated as the starttime ."}{"idx": 57422, "node_name": "endtime", "Dec": "the time after which the ticket will no longer be valid"}{"idx": 57423, "node_name": "renewtill", "Dec": "an absolute expiration time for the ticket , including all renewal that might be possible . this field may be null for tickets that are not renewable ."}{"idx": 57424, "node_name": "clientaddresses", "Dec": "the addresses from where the ticket may be used by the client . this field may be null when the ticket is usable from any address ."}{"idx": 57450, "node_name": "other", "Dec": "the object to compare to"}{"idx": 57453, "node_name": "file", "Dec": "the keytab file object , must not be null"}{"idx": 57455, "node_name": "file", "Dec": "the keytab file object , must not be null"}{"idx": 57457, "node_name": "princ", "Dec": "the bound service principal , must not be null"}{"idx": 57458, "node_name": "file", "Dec": "the keytab file object , must not be null"}{"idx": 57462, "node_name": "princ", "Dec": "the bound service principal , must not be null"}{"idx": 57464, "node_name": "principal", "Dec": "the kerberos principal , must not be null ."}{"idx": 57469, "node_name": "other", "Dec": "the object to compare to"}{"idx": 57474, "node_name": "serviceprincipal", "Dec": "the name of the service principal . an asterisk may appear by itself , to signify any service principal ."}{"idx": 57475, "node_name": "action", "Dec": "the action string"}{"idx": 57477, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 57479, "node_name": "obj", "Dec": "the object to test for equality with this object ."}{"idx": 57486, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57490, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57494, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57498, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57501, "node_name": "loginmodulename", "Dec": "string representing the class name of the loginmodule configured for the specified application ."}{"idx": 57502, "node_name": "controlflag", "Dec": "either required , requisite , sufficient , or optional ."}{"idx": 57503, "node_name": "options", "Dec": "the options configured for this loginmodule ."}{"idx": 57517, "node_name": "configuration", "Dec": "the new configuration"}{"idx": 57519, "node_name": "type", "Dec": "the specified configuration type . see the configuration section in the java security standard algorithm names specification for a list of standard configuration types ."}{"idx": 57520, "node_name": "params", "Dec": "parameters for the configuration , which may be null ."}{"idx": 57522, "node_name": "type", "Dec": "the specified configuration type . see the configuration section in the java security standard algorithm names specification for a list of standard configuration types ."}{"idx": 57523, "node_name": "params", "Dec": "parameters for the configuration , which may be null ."}{"idx": 57524, "node_name": "provider", "Dec": "the provider ."}{"idx": 57526, "node_name": "type", "Dec": "the specified configuration type . see the configuration section in the java security standard algorithm names specification for a list of standard configuration types ."}{"idx": 57527, "node_name": "params", "Dec": "parameters for the configuration , which may be null ."}{"idx": 57528, "node_name": "provider", "Dec": "the provider ."}{"idx": 57533, "node_name": "name", "Dec": "the name used to index the configuration ."}{"idx": 57539, "node_name": "name", "Dec": "the name used to index the configuration ."}{"idx": 57544, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57548, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57552, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57556, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57559, "node_name": "name", "Dec": "the name used as the index into the configuration ."}{"idx": 57561, "node_name": "name", "Dec": "the name used as the index into the configuration ."}{"idx": 57562, "node_name": "subject", "Dec": "the subject to authenticate ."}{"idx": 57564, "node_name": "name", "Dec": "the name used as the index into the configuration ."}{"idx": 57565, "node_name": "callbackhandler", "Dec": "the callbackhandler object used by loginmodules to communicate with the user ."}{"idx": 57567, "node_name": "name", "Dec": "the name used as the index into the configuration ."}{"idx": 57568, "node_name": "subject", "Dec": "the subject to authenticate ."}{"idx": 57569, "node_name": "callbackhandler", "Dec": "the callbackhandler object used by loginmodules to communicate with the user ."}{"idx": 57571, "node_name": "name", "Dec": "the name used as the index into the caller-specified configuration ."}{"idx": 57572, "node_name": "subject", "Dec": "the subject to authenticate , or null ."}{"idx": 57573, "node_name": "callbackhandler", "Dec": "the callbackhandler object used by loginmodules to communicate with the user , or null ."}{"idx": 57574, "node_name": "config", "Dec": "the configuration that lists the login modules to be called to perform the authentication , or null ."}{"idx": 57581, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57584, "node_name": "name", "Dec": "the name specifying the credential class and principal set ."}{"idx": 57585, "node_name": "actions", "Dec": "the actions specifying that the credential can be read ."}{"idx": 57589, "node_name": "p", "Dec": "the permission to check against ."}{"idx": 57591, "node_name": "obj", "Dec": "the object we are testing for equality with this object ."}{"idx": 57601, "node_name": "msg", "Dec": "the detail message ."}{"idx": 57604, "node_name": "subject", "Dec": "the subject to be authenticated ."}{"idx": 57605, "node_name": "callbackhandler", "Dec": "a callbackhandler for communicating with the end user ( prompting for usernames and passwords , for example ) ."}{"idx": 57606, "node_name": "sharedstate", "Dec": "state shared with other configured loginmodules ."}{"idx": 57607, "node_name": "options", "Dec": "options specified in the login configuration for this particular loginmodule ."}{"idx": 57615, "node_name": "readonly", "Dec": "true if the subject is to be read-only , and false otherwise ."}{"idx": 57616, "node_name": "principals", "Dec": "the set of principals to be associated with this subject ."}{"idx": 57617, "node_name": "pubcredentials", "Dec": "the set of public credentials to be associated with this subject ."}{"idx": 57618, "node_name": "privcredentials", "Dec": "the set of private credentials to be associated with this subject ."}{"idx": 57622, "node_name": "acc", "Dec": "the accesscontrolcontext from which to retrieve the subject ."}{"idx": 57624, "node_name": "subject", "Dec": "the subject that the specified action will run as . this parameter may be null ."}{"idx": 57625, "node_name": "action", "Dec": "the code to be run as the specified subject ."}{"idx": 57627, "node_name": "subject", "Dec": "the subject that the specified action will run as . this parameter may be null ."}{"idx": 57628, "node_name": "action", "Dec": "the code to be run as the specified subject ."}{"idx": 57630, "node_name": "subject", "Dec": "the subject that the specified action will run as . this parameter may be null ."}{"idx": 57631, "node_name": "action", "Dec": "the code to be run as the specified subject ."}{"idx": 57632, "node_name": "acc", "Dec": "the accesscontrolcontext to be tied to the specified subject and action ."}{"idx": 57634, "node_name": "subject", "Dec": "the subject that the specified action will run as . this parameter may be null ."}{"idx": 57635, "node_name": "action", "Dec": "the code to be run as the specified subject ."}{"idx": 57636, "node_name": "acc", "Dec": "the accesscontrolcontext to be tied to the specified subject and action ."}{"idx": 57639, "node_name": "c", "Dec": "the returned set of principals will all be instances of this class ."}{"idx": 57643, "node_name": "c", "Dec": "the returned set of public credentials will all be instances of this class ."}{"idx": 57645, "node_name": "c", "Dec": "the returned set of private credentials will all be instances of this class ."}{"idx": 57647, "node_name": "o", "Dec": "object to be compared for equality with this subject ."}{"idx": 57652, "node_name": "subject", "Dec": "the subject to be associated with this subjectdomaincombiner ."}{"idx": 57655, "node_name": "currentdomains", "Dec": "the protectiondomains associated with the current execution thread , up to the most recent privileged protectiondomain . the protectiondomains are listed in order of execution , with the most recently executing protectiondomain residing at the beginning of the array . this parameter may be null if the current execution thread has no associated protectiondomains ."}{"idx": 57656, "node_name": "assigneddomains", "Dec": "the protectiondomains inherited from the parent thread , or the protectiondomains from the privileged context , if a call to accesscontroller.doprivileged ( ..., context ) had occurred this parameter may be null if there were no protectiondomains inherited from the parent thread , or from the privileged context ."}{"idx": 57662, "node_name": "name", "Dec": "an x.500 distinguished name in rfc 1779 or rfc 2253 format"}{"idx": 57664, "node_name": "name", "Dec": "an x.500 distinguished name in rfc 1779 or rfc 2253 format"}{"idx": 57665, "node_name": "keywordmap", "Dec": "an attribute type keyword map , where each key is a keyword string that maps to a corresponding object identifier in string form ( a sequence of nonnegative integers separated by periods ) . the map may be empty but never null ."}{"idx": 57667, "node_name": "name", "Dec": "a byte array containing the distinguished name in asn.1 der encoded form"}{"idx": 57669, "node_name": "is", "Dec": "an inputstream containing the distinguished name in asn.1 der encoded form"}{"idx": 57672, "node_name": "format", "Dec": "the format to use"}{"idx": 57674, "node_name": "format", "Dec": "the format to use"}{"idx": 57675, "node_name": "oidmap", "Dec": "an oid map , where each key is an object identifier in string form ( a sequence of nonnegative integers separated by periods ) that maps to a corresponding attribute type keyword string . the map may be empty but never null ."}{"idx": 57679, "node_name": "o", "Dec": "object to be compared for equality with this x500principal"}{"idx": 57683, "node_name": "cert", "Dec": "x509certificate"}{"idx": 57684, "node_name": "key", "Dec": "privatekey for the certificate"}{"idx": 57686, "node_name": "cert", "Dec": "x509certificate"}{"idx": 57687, "node_name": "key", "Dec": "privatekey for the certificate"}{"idx": 57688, "node_name": "alias", "Dec": "keystore alias"}{"idx": 57704, "node_name": "detail", "Dec": "a possibly null string containing details of the exception ."}{"idx": 57706, "node_name": "detail", "Dec": "a possibly null string containing details of the exception ."}{"idx": 57707, "node_name": "ex", "Dec": "a possibly null root exception that caused this exception ."}{"idx": 57710, "node_name": "authnid", "Dec": "the ( authenticated ) authentication id ."}{"idx": 57711, "node_name": "authzid", "Dec": "the authorization id ."}{"idx": 57716, "node_name": "ok", "Dec": "true if authorization is allowed ; false otherwise"}{"idx": 57719, "node_name": "id", "Dec": "the id of the authorized user ."}{"idx": 57722, "node_name": "prompt", "Dec": "the non-null prompt to use to request the realm information ."}{"idx": 57724, "node_name": "prompt", "Dec": "the non-null prompt to use to request the realm information ."}{"idx": 57725, "node_name": "defaultrealminfo", "Dec": "the non-null default realm information to use ."}{"idx": 57728, "node_name": "prompt", "Dec": "the non-null prompt to use to request the realm ."}{"idx": 57729, "node_name": "choices", "Dec": "the non-null list of realms to choose from ."}{"idx": 57730, "node_name": "defaultchoice", "Dec": "the choice to be used as the default choice when the list of choices is displayed . it is an index into the choices array ."}{"idx": 57731, "node_name": "multiple", "Dec": "true if multiple choices allowed ; false otherwise"}{"idx": 57748, "node_name": "mechanisms", "Dec": "the non-null list of mechanism names to try . each is the iana-registered name of a sasl mechanism . ( e.g. \" gssapi \" , \" cram-md5 \") ."}{"idx": 57749, "node_name": "authorizationid", "Dec": "the possibly null protocol-dependent identification to be used for authorization . if null or empty , the server derives an authorization id from the client's authentication credentials . when the sasl authentication completes successfully , the specified entity is granted access ."}{"idx": 57750, "node_name": "protocol", "Dec": "the non-null string name of the protocol for which the authentication is being performed ( e.g. , \" ldap \") ."}{"idx": 57751, "node_name": "servername", "Dec": "the non-null fully-qualified host name of the server to authenticate to ."}{"idx": 57752, "node_name": "props", "Dec": "the possibly null set of properties used to select the sasl mechanism and to configure the authentication exchange of the selected mechanism . for example , if props contains the sasl.policy_noplaintext property with the value \" true \" , then the selected sasl mechanism must not be susceptible to simple plain passive attacks . in addition to the standard properties declared in this class , other , possibly mechanism-specific , properties can be included . properties not relevant to the selected mechanism are ignored , including any map entries with non-string keys ."}{"idx": 57753, "node_name": "cbh", "Dec": "the possibly null callback handler to used by the sasl mechanisms to get further information from the application / library to complete the authentication . for example , a sasl mechanism might require the authentication id , password and realm from the caller . the authentication id is requested by using a namecallback . the password is requested by using a passwordcallback . the realm is requested by using a realmchoicecallback if there is a list of realms to choose from , and by using a realmcallback if the realm must be entered ."}{"idx": 57755, "node_name": "mechanism", "Dec": "the non-null mechanism name . it must be an iana-registered name of a sasl mechanism . ( e.g. \" gssapi \" , \" cram-md5 \") ."}{"idx": 57756, "node_name": "protocol", "Dec": "the non-null string name of the protocol for which the authentication is being performed ( e.g. , \" ldap \") ."}{"idx": 57757, "node_name": "servername", "Dec": "the fully qualified host name of the server , or null if the server is not bound to any specific host name . if the mechanism does not allow an unbound server , a saslexception will be thrown ."}{"idx": 57758, "node_name": "props", "Dec": "the possibly null set of properties used to select the sasl mechanism and to configure the authentication exchange of the selected mechanism . for example , if props contains the sasl.policy_noplaintext property with the value \" true \" , then the selected sasl mechanism must not be susceptible to simple plain passive attacks . in addition to the standard properties declared in this class , other , possibly mechanism-specific , properties can be included . properties not relevant to the selected mechanism are ignored , including any map entries with non-string keys ."}{"idx": 57759, "node_name": "cbh", "Dec": "the possibly null callback handler to used by the sasl mechanisms to get further information from the application / library to complete the authentication . for example , a sasl mechanism might require the authentication id , password and realm from the caller . the authentication id is requested by using a namecallback . the password is requested by using a passwordcallback . the realm is requested by using a realmchoicecallback if there is a list of realms to choose from , and by using a realmcallback if the realm must be entered ."}{"idx": 57766, "node_name": "challenge", "Dec": "the non-null challenge sent from the server . the challenge array may have zero length ."}{"idx": 57769, "node_name": "incoming", "Dec": "a non-null byte array containing the encoded bytes from the server ."}{"idx": 57770, "node_name": "offset", "Dec": "the starting position at incoming of the bytes to use ."}{"idx": 57771, "node_name": "len", "Dec": "the number of bytes from incoming to use ."}{"idx": 57773, "node_name": "outgoing", "Dec": "a non-null byte array containing the bytes to encode ."}{"idx": 57774, "node_name": "offset", "Dec": "the starting position at outgoing of the bytes to use ."}{"idx": 57775, "node_name": "len", "Dec": "the number of bytes from outgoing to use ."}{"idx": 57777, "node_name": "propname", "Dec": "the non-null property name ."}{"idx": 57781, "node_name": "mechanisms", "Dec": "the non-null list of mechanism names to try . each is the iana-registered name of a sasl mechanism . ( e.g. \" gssapi \" , \" cram-md5 \") ."}{"idx": 57782, "node_name": "authorizationid", "Dec": "the possibly null protocol-dependent identification to be used for authorization . if null or empty , the server derives an authorization id from the client's authentication credentials . when the sasl authentication completes successfully , the specified entity is granted access ."}{"idx": 57783, "node_name": "protocol", "Dec": "the non-null string name of the protocol for which the authentication is being performed ( e.g. , \" ldap \") ."}{"idx": 57784, "node_name": "servername", "Dec": "the non-null fully qualified host name of the server to authenticate to ."}{"idx": 57785, "node_name": "props", "Dec": "the possibly null set of properties used to select the sasl mechanism and to configure the authentication exchange of the selected mechanism . see the sasl class for a list of standard properties . other , possibly mechanism-specific , properties can be included . properties not relevant to the selected mechanism are ignored , including any map entries with non-string keys ."}{"idx": 57786, "node_name": "cbh", "Dec": "the possibly null callback handler to used by the sasl mechanisms to get further information from the application / library to complete the authentication . for example , a sasl mechanism might require the authentication id , password and realm from the caller . the authentication id is requested by using a namecallback . the password is requested by using a passwordcallback . the realm is requested by using a realmchoicecallback if there is a list of realms to choose from , and by using a realmcallback if the realm must be entered ."}{"idx": 57788, "node_name": "props", "Dec": "the possibly null set of properties used to specify the security policy of the sasl mechanisms . for example , if props contains the sasl.policy_noplaintext property with the value \" true \" , then the factory must not return any sasl mechanisms that are susceptible to simple plain passive attacks . see the sasl class for a complete list of policy properties . non-policy related properties , if present in props , are ignored , including any map entries with non-string keys ."}{"idx": 57792, "node_name": "detail", "Dec": "a possibly null string containing details of the exception ."}{"idx": 57794, "node_name": "detail", "Dec": "a possibly null string containing details of the exception ."}{"idx": 57795, "node_name": "ex", "Dec": "a possibly null root exception that caused this exception ."}{"idx": 57800, "node_name": "response", "Dec": "the non-null ( but possibly empty ) response sent by the client ."}{"idx": 57804, "node_name": "incoming", "Dec": "a non-null byte array containing the encoded bytes from the client ."}{"idx": 57805, "node_name": "offset", "Dec": "the starting position at incoming of the bytes to use ."}{"idx": 57806, "node_name": "len", "Dec": "the number of bytes from incoming to use ."}{"idx": 57808, "node_name": "outgoing", "Dec": "a non-null byte array containing the bytes to encode ."}{"idx": 57809, "node_name": "offset", "Dec": "the starting position at outgoing of the bytes to use ."}{"idx": 57810, "node_name": "len", "Dec": "the number of bytes from outgoing to use ."}{"idx": 57812, "node_name": "propname", "Dec": "the property"}{"idx": 57816, "node_name": "mechanism", "Dec": "the non-null iana-registered name of a sasl mechanism . ( e.g. \" gssapi \" , \" cram-md5 \") ."}{"idx": 57817, "node_name": "protocol", "Dec": "the non-null string name of the protocol for which the authentication is being performed ( e.g. , \" ldap \") ."}{"idx": 57818, "node_name": "servername", "Dec": "the fully qualified host name of the server to authenticate to , or null if the server is not bound to any specific host name . if the mechanism does not allow an unbound server , a saslexception will be thrown ."}{"idx": 57819, "node_name": "props", "Dec": "the possibly null set of properties used to select the sasl mechanism and to configure the authentication exchange of the selected mechanism . see the sasl class for a list of standard properties . other , possibly mechanism-specific , properties can be included . properties not relevant to the selected mechanism are ignored , including any map entries with non-string keys ."}{"idx": 57820, "node_name": "cbh", "Dec": "the possibly null callback handler to used by the sasl mechanisms to get further information from the application / library to complete the authentication . for example , a sasl mechanism might require the authentication id , password and realm from the caller . the authentication id is requested by using a namecallback . the password is requested by using a passwordcallback . the realm is requested by using a realmchoicecallback if there is a list of realms to choose from , and by using a realmcallback if the realm must be entered ."}{"idx": 57822, "node_name": "props", "Dec": "the possibly null set of properties used to specify the security policy of the sasl mechanisms . for example , if props contains the sasl.policy_noplaintext property with the value \" true \" , then the factory must not return any sasl mechanisms that are susceptible to simple plain passive attacks . see the sasl class for a complete list of policy properties . non-policy related properties , if present in props , are ignored , including any map entries with non-string keys ."}{"idx": 57825, "node_name": "atr", "Dec": "the byte array containing the answer-to-reset bytes"}{"idx": 57830, "node_name": "obj", "Dec": "the object to be compared for equality with this atr"}{"idx": 57841, "node_name": "controlcode", "Dec": "the control code of the command"}{"idx": 57842, "node_name": "command", "Dec": "the command data"}{"idx": 57844, "node_name": "reset", "Dec": "whether to reset the card after disconnecting ."}{"idx": 57850, "node_name": "command", "Dec": "the command apdu"}{"idx": 57852, "node_name": "command", "Dec": "the buffer containing the command apdu"}{"idx": 57853, "node_name": "response", "Dec": "the buffer that shall receive the response apdu from the card"}{"idx": 57857, "node_name": "message", "Dec": "the detail message"}{"idx": 57859, "node_name": "cause", "Dec": "the cause of this exception or null"}{"idx": 57861, "node_name": "message", "Dec": "the detail message"}{"idx": 57862, "node_name": "cause", "Dec": "the cause of this exception or null"}{"idx": 57865, "node_name": "message", "Dec": "the detail message"}{"idx": 57867, "node_name": "cause", "Dec": "the cause of this exception or null"}{"idx": 57869, "node_name": "message", "Dec": "the detail message"}{"idx": 57870, "node_name": "cause", "Dec": "the cause of this exception or null"}{"idx": 57873, "node_name": "terminalname", "Dec": "the name of the card terminal , or *"}{"idx": 57874, "node_name": "actions", "Dec": "the action string ( or null if the set of permitted actions is empty )"}{"idx": 57877, "node_name": "permission", "Dec": "the permission to check against"}{"idx": 57879, "node_name": "obj", "Dec": "the object to be compared for equality with this cardpermission"}{"idx": 57885, "node_name": "protocol", "Dec": "the protocol to use ( \" t=0 \" , \" t=1 \" , or \" t=cl \") , or \" * \" to connect using any available protocol ."}{"idx": 57888, "node_name": "timeout", "Dec": "if positive , block for up to timeout milliseconds ; if zero , block indefinitely ; must not be negative"}{"idx": 57890, "node_name": "timeout", "Dec": "if positive , block for up to timeout milliseconds ; if zero , block indefinitely ; must not be negative"}{"idx": 57895, "node_name": "state", "Dec": "the state"}{"idx": 57897, "node_name": "name", "Dec": "the terminal name"}{"idx": 57900, "node_name": "timeout", "Dec": "if positive , block for up to timeout milliseconds ; if zero , block indefinitely ; must not be negative"}{"idx": 57904, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 57907, "node_name": "apdu", "Dec": "the complete command apdu"}{"idx": 57909, "node_name": "apdu", "Dec": "the complete command apdu"}{"idx": 57910, "node_name": "apduoffset", "Dec": "the offset in the byte array at which the apdu data begins"}{"idx": 57911, "node_name": "apdulength", "Dec": "the length of the apdu"}{"idx": 57913, "node_name": "apdu", "Dec": "the bytebuffer containing the complete apdu"}{"idx": 57915, "node_name": "cla", "Dec": "the class byte cla"}{"idx": 57916, "node_name": "ins", "Dec": "the instruction byte ins"}{"idx": 57917, "node_name": "p1", "Dec": "the parameter byte p1"}{"idx": 57918, "node_name": "p2", "Dec": "the parameter byte p2"}{"idx": 57920, "node_name": "cla", "Dec": "the class byte cla"}{"idx": 57921, "node_name": "ins", "Dec": "the instruction byte ins"}{"idx": 57922, "node_name": "p1", "Dec": "the parameter byte p1"}{"idx": 57923, "node_name": "p2", "Dec": "the parameter byte p2"}{"idx": 57924, "node_name": "ne", "Dec": "the maximum number of expected data bytes in a response apdu"}{"idx": 57926, "node_name": "cla", "Dec": "the class byte cla"}{"idx": 57927, "node_name": "ins", "Dec": "the instruction byte ins"}{"idx": 57928, "node_name": "p1", "Dec": "the parameter byte p1"}{"idx": 57929, "node_name": "p2", "Dec": "the parameter byte p2"}{"idx": 57930, "node_name": "data", "Dec": "the byte array containing the data bytes of the command body"}{"idx": 57932, "node_name": "cla", "Dec": "the class byte cla"}{"idx": 57933, "node_name": "ins", "Dec": "the instruction byte ins"}{"idx": 57934, "node_name": "p1", "Dec": "the parameter byte p1"}{"idx": 57935, "node_name": "p2", "Dec": "the parameter byte p2"}{"idx": 57936, "node_name": "data", "Dec": "the byte array containing the data bytes of the command body"}{"idx": 57937, "node_name": "dataoffset", "Dec": "the offset in the byte array at which the data bytes of the command body begin"}{"idx": 57938, "node_name": "datalength", "Dec": "the number of the data bytes in the command body"}{"idx": 57940, "node_name": "cla", "Dec": "the class byte cla"}{"idx": 57941, "node_name": "ins", "Dec": "the instruction byte ins"}{"idx": 57942, "node_name": "p1", "Dec": "the parameter byte p1"}{"idx": 57943, "node_name": "p2", "Dec": "the parameter byte p2"}{"idx": 57944, "node_name": "data", "Dec": "the byte array containing the data bytes of the command body"}{"idx": 57945, "node_name": "ne", "Dec": "the maximum number of expected data bytes in a response apdu"}{"idx": 57947, "node_name": "cla", "Dec": "the class byte cla"}{"idx": 57948, "node_name": "ins", "Dec": "the instruction byte ins"}{"idx": 57949, "node_name": "p1", "Dec": "the parameter byte p1"}{"idx": 57950, "node_name": "p2", "Dec": "the parameter byte p2"}{"idx": 57951, "node_name": "data", "Dec": "the byte array containing the data bytes of the command body"}{"idx": 57952, "node_name": "dataoffset", "Dec": "the offset in the byte array at which the data bytes of the command body begin"}{"idx": 57953, "node_name": "datalength", "Dec": "the number of the data bytes in the command body"}{"idx": 57954, "node_name": "ne", "Dec": "the maximum number of expected data bytes in a response apdu"}{"idx": 57965, "node_name": "obj", "Dec": "the object to be compared for equality with this command apdu"}{"idx": 57969, "node_name": "apdu", "Dec": "the complete response apdu"}{"idx": 57978, "node_name": "obj", "Dec": "the object to be compared for equality with this response apdu"}{"idx": 57984, "node_name": "type", "Dec": "the type of the requested terminalfactory"}{"idx": 57985, "node_name": "params", "Dec": "the parameters to pass to the terminalfactoryspi implementation , or null if no parameters are needed"}{"idx": 57987, "node_name": "type", "Dec": "the type of the requested terminalfactory"}{"idx": 57988, "node_name": "params", "Dec": "the parameters to pass to the terminalfactoryspi implementation , or null if no parameters are needed"}{"idx": 57989, "node_name": "provider", "Dec": "the name of the provider"}{"idx": 57991, "node_name": "type", "Dec": "the type of the requested terminalfactory"}{"idx": 57992, "node_name": "params", "Dec": "the parameters to pass to the terminalfactoryspi implementation , or null if no parameters are needed"}{"idx": 57993, "node_name": "provider", "Dec": "the provider"}{"idx": 58003, "node_name": "event", "Dec": "the control-change event that the sequencer encountered in the sequence it is processing"}{"idx": 58006, "node_name": "soundbank", "Dec": "sound bank containing the instrument"}{"idx": 58007, "node_name": "patch", "Dec": "the patch of this instrument"}{"idx": 58008, "node_name": "name", "Dec": "the name of this instrument"}{"idx": 58009, "node_name": "dataclass", "Dec": "the class used to represent the sample's data"}{"idx": 58014, "node_name": "message", "Dec": "the string to display as an error detail message"}{"idx": 58017, "node_name": "meta", "Dec": "the meta-message that the sequencer encountered"}{"idx": 58022, "node_name": "type", "Dec": "meta-message type ( must be less than 128 )"}{"idx": 58023, "node_name": "data", "Dec": "the data bytes in the midi message"}{"idx": 58024, "node_name": "length", "Dec": "an amount of bytes in the data byte array ; it should be non-negative and less than or equal to data.length"}{"idx": 58026, "node_name": "data", "Dec": "an array of bytes containing the complete message . the message data may be changed using the setmessage method ."}{"idx": 58028, "node_name": "type", "Dec": "meta-message type ( must be less than 128 )"}{"idx": 58029, "node_name": "data", "Dec": "the data bytes in the midi message"}{"idx": 58030, "node_name": "length", "Dec": "the number of bytes in the data byte array"}{"idx": 58036, "node_name": "notenumber", "Dec": "the midi note number , from 0 to 127 ( 60 = middle c )"}{"idx": 58037, "node_name": "velocity", "Dec": "the speed with which the key was depressed"}{"idx": 58039, "node_name": "notenumber", "Dec": "the midi note number , from 0 to 127 ( 60 = middle c )"}{"idx": 58040, "node_name": "velocity", "Dec": "the speed with which the key was released"}{"idx": 58042, "node_name": "notenumber", "Dec": "the midi note number , from 0 to 127 ( 60 = middle c )"}{"idx": 58044, "node_name": "notenumber", "Dec": "the midi note number , from 0 to 127 ( 60 = middle c )"}{"idx": 58045, "node_name": "pressure", "Dec": "value for the specified key , from 0 to 127 ( 127 = maximum pressure )"}{"idx": 58047, "node_name": "notenumber", "Dec": "the midi note number , from 0 to 127 ( 60 = middle c )"}{"idx": 58049, "node_name": "pressure", "Dec": "the pressure with which the keyboard is being depressed , from 0 to 127 ( 127 = maximum pressure )"}{"idx": 58052, "node_name": "controller", "Dec": "the controller number ( 0 to 127 ; see the midi 1.0 specification for the interpretation )"}{"idx": 58053, "node_name": "value", "Dec": "the value to which the specified controller is changed ( 0 to 127 )"}{"idx": 58055, "node_name": "controller", "Dec": "the number of the controller whose value is desired . the allowed range is 0-127 ; see the midi 1.0 specification for the interpretation ."}{"idx": 58057, "node_name": "program", "Dec": "the program number to switch to ( 0 to 127 )"}{"idx": 58059, "node_name": "bank", "Dec": "the bank number to switch to ( 0 to 16383 )"}{"idx": 58060, "node_name": "program", "Dec": "the program ( patch ) to use in the specified bank ( 0 to 127 )"}{"idx": 58063, "node_name": "bend", "Dec": "the amount of pitch change , as a nonnegative 14-bit value ( 8192 = no bend )"}{"idx": 58069, "node_name": "on", "Dec": "true to turn local control on , false to turn local control off"}{"idx": 58071, "node_name": "on", "Dec": "true to turn mono mode on , false to turn it off ( which means turning poly mode on )"}{"idx": 58074, "node_name": "on", "Dec": "true to turn omni mode on , false to turn it off"}{"idx": 58077, "node_name": "mute", "Dec": "the new mute state"}{"idx": 58080, "node_name": "solostate", "Dec": "new solo state for the channel"}{"idx": 58084, "node_name": "name", "Dec": "the name of the device"}{"idx": 58085, "node_name": "vendor", "Dec": "the name of the company who provides the device"}{"idx": 58086, "node_name": "description", "Dec": "a description of the device"}{"idx": 58087, "node_name": "version", "Dec": "version information for the device"}{"idx": 58089, "node_name": "obj", "Dec": "the reference object with which to compare"}{"idx": 58114, "node_name": "message", "Dec": "the midi message contained in the event"}{"idx": 58115, "node_name": "tick", "Dec": "the time-stamp for the event , in midi ticks"}{"idx": 58118, "node_name": "tick", "Dec": "the new time-stamp , in midi ticks"}{"idx": 58128, "node_name": "type", "Dec": "the midi file type ( 0 , 1 , or 2 )"}{"idx": 58129, "node_name": "divisiontype", "Dec": "the timing division type ( ppq or one of the smpte types )"}{"idx": 58130, "node_name": "resolution", "Dec": "the timing resolution"}{"idx": 58131, "node_name": "bytes", "Dec": "the length of the midi file in bytes , or unknown_length if not known"}{"idx": 58132, "node_name": "microseconds", "Dec": "the duration of the file in microseconds , or unknown_length if not known"}{"idx": 58134, "node_name": "type", "Dec": "the midi file type ( 0 , 1 , or 2 )"}{"idx": 58135, "node_name": "divisiontype", "Dec": "the timing division type ( ppq or one of the smpte types )"}{"idx": 58136, "node_name": "resolution", "Dec": "the timing resolution"}{"idx": 58137, "node_name": "bytes", "Dec": "the length of the midi file in bytes , or unknown_length if not known"}{"idx": 58138, "node_name": "microseconds", "Dec": "the duration of the file in microseconds , or unknown_length if not known"}{"idx": 58139, "node_name": "properties", "Dec": "a map < string , object > object with properties"}{"idx": 58147, "node_name": "key", "Dec": "the key of the desired property"}{"idx": 58152, "node_name": "data", "Dec": "an array of bytes containing the complete message . the message data may be changed using the setmessage method ."}{"idx": 58154, "node_name": "data", "Dec": "the data bytes in the midi message"}{"idx": 58155, "node_name": "length", "Dec": "the number of bytes in the data byte array"}{"idx": 58163, "node_name": "info", "Dec": "a device information object representing the desired device"}{"idx": 58169, "node_name": "connected", "Dec": "whether or not the returned sequencer is connected to the default synthesizer"}{"idx": 58171, "node_name": "stream", "Dec": "the source of the sound bank data"}{"idx": 58173, "node_name": "url", "Dec": "the source of the sound bank data"}{"idx": 58175, "node_name": "file", "Dec": "the source of the sound bank data"}{"idx": 58177, "node_name": "stream", "Dec": "the input stream from which file format information should be extracted"}{"idx": 58179, "node_name": "url", "Dec": "the url from which file format information should be extracted"}{"idx": 58181, "node_name": "file", "Dec": "the file from which file format information should be extracted"}{"idx": 58183, "node_name": "stream", "Dec": "the input stream from which the sequence should be constructed"}{"idx": 58185, "node_name": "url", "Dec": "the url from which the sequence should be constructed"}{"idx": 58187, "node_name": "file", "Dec": "the file from which the sequence should be constructed"}{"idx": 58190, "node_name": "filetype", "Dec": "the file type for which write capabilities are queried"}{"idx": 58192, "node_name": "sequence", "Dec": "the sequence for which midi file type support is queried"}{"idx": 58194, "node_name": "filetype", "Dec": "the file type for which write capabilities are queried"}{"idx": 58195, "node_name": "sequence", "Dec": "the sequence for which file writing support is queried"}{"idx": 58197, "node_name": "in", "Dec": "sequence containing midi data to be written to the file"}{"idx": 58198, "node_name": "filetype", "Dec": "the file type of the file to be written to the output stream"}{"idx": 58199, "node_name": "out", "Dec": "stream to which the file data should be written"}{"idx": 58201, "node_name": "in", "Dec": "sequence containing midi data to be written to the file"}{"idx": 58202, "node_name": "type", "Dec": "the file type of the file to be written to the output stream"}{"idx": 58203, "node_name": "out", "Dec": "external file to which the file data should be written"}{"idx": 58207, "node_name": "message", "Dec": "the string to display as an error detail message"}{"idx": 58210, "node_name": "bank", "Dec": "the bank index ( in the range from 0 to 16383 )"}{"idx": 58211, "node_name": "program", "Dec": "the program index ( in the range from 0 to 127 )"}{"idx": 58216, "node_name": "message", "Dec": "the midi message to send"}{"idx": 58217, "node_name": "timestamp", "Dec": "the time-stamp for the message , in microseconds"}{"idx": 58229, "node_name": "divisiontype", "Dec": "the timing division type ( ppq or one of the smpte types )"}{"idx": 58230, "node_name": "resolution", "Dec": "the timing resolution"}{"idx": 58232, "node_name": "divisiontype", "Dec": "the timing division type ( ppq or one of the smpte types )"}{"idx": 58233, "node_name": "resolution", "Dec": "the timing resolution"}{"idx": 58234, "node_name": "numtracks", "Dec": "the initial number of tracks in the sequence"}{"idx": 58239, "node_name": "track", "Dec": "the track to remove"}{"idx": 58247, "node_name": "sequence", "Dec": "the sequence to be loaded"}{"idx": 58249, "node_name": "stream", "Dec": "stream containing midi file data"}{"idx": 58258, "node_name": "track", "Dec": "the track to which events will be recorded"}{"idx": 58259, "node_name": "channel", "Dec": "the channel on which events will be received . if -1 is specified for the channel value , the track will receive data from all channels ."}{"idx": 58261, "node_name": "track", "Dec": "the track to disable for recording , or null to disable recording for all tracks"}{"idx": 58264, "node_name": "bpm", "Dec": "desired new tempo in beats per minute"}{"idx": 58267, "node_name": "mpq", "Dec": "desired new tempo in microseconds per quarter note"}{"idx": 58269, "node_name": "factor", "Dec": "the requested tempo scalar"}{"idx": 58274, "node_name": "tick", "Dec": "the desired tick position"}{"idx": 58278, "node_name": "microseconds", "Dec": "desired position in microseconds"}{"idx": 58280, "node_name": "sync", "Dec": "the desired master synchronization mode"}{"idx": 58284, "node_name": "sync", "Dec": "the desired slave synchronization mode"}{"idx": 58288, "node_name": "track", "Dec": "the track number . tracks in the current sequence are numbered from 0 to the number of tracks in the sequence minus 1 ."}{"idx": 58289, "node_name": "mute", "Dec": "the new mute state for the track . true implies the track should be muted , false implies the track should be unmuted ."}{"idx": 58291, "node_name": "track", "Dec": "the track number . tracks in the current sequence are numbered from 0 to the number of tracks in the sequence minus 1 ."}{"idx": 58293, "node_name": "track", "Dec": "the track number . tracks in the current sequence are numbered from 0 to the number of tracks in the sequence minus 1 ."}{"idx": 58294, "node_name": "solo", "Dec": "the new solo state for the track . true implies the track should be solo'd , false implies the track should not be solo'd ."}{"idx": 58296, "node_name": "track", "Dec": "the track number . tracks in the current sequence are numbered from 0 to the number of tracks in the sequence minus 1 ."}{"idx": 58298, "node_name": "listener", "Dec": "listener to add"}{"idx": 58300, "node_name": "listener", "Dec": "the meta-event listener to remove"}{"idx": 58302, "node_name": "listener", "Dec": "the controller event listener to add to the list of registered listeners"}{"idx": 58303, "node_name": "controllers", "Dec": "the midi controller numbers for which change notification is requested"}{"idx": 58305, "node_name": "listener", "Dec": "old listener"}{"idx": 58306, "node_name": "controllers", "Dec": "the midi controller numbers for which change notification should be cancelled , or null to cancel for all controllers"}{"idx": 58308, "node_name": "tick", "Dec": "the loop's starting position , in midi ticks ( zero-based )"}{"idx": 58311, "node_name": "tick", "Dec": "the loop's ending position , in midi ticks ( zero-based ) , or -1 to indicate the final tick"}{"idx": 58314, "node_name": "count", "Dec": "the number of times playback should loop back from the loop's end position to the loop's start position , or loop_continuously to indicate that looping should continue until interrupted"}{"idx": 58322, "node_name": "name", "Dec": "name of the synchronization mode"}{"idx": 58324, "node_name": "obj", "Dec": "the reference object with which to compare"}{"idx": 58348, "node_name": "status", "Dec": "the midi status byte"}{"idx": 58350, "node_name": "status", "Dec": "the midi status byte"}{"idx": 58351, "node_name": "data1", "Dec": "the first data byte"}{"idx": 58352, "node_name": "data2", "Dec": "the second data byte"}{"idx": 58354, "node_name": "command", "Dec": "the midi command represented by this message"}{"idx": 58355, "node_name": "channel", "Dec": "the channel associated with the message"}{"idx": 58356, "node_name": "data1", "Dec": "the first data byte"}{"idx": 58357, "node_name": "data2", "Dec": "the second data byte"}{"idx": 58359, "node_name": "data", "Dec": "an array of bytes containing the complete message . the message data may be changed using the setmessage method ."}{"idx": 58361, "node_name": "status", "Dec": "the midi status byte"}{"idx": 58363, "node_name": "status", "Dec": "the midi status byte"}{"idx": 58364, "node_name": "data1", "Dec": "the first data byte"}{"idx": 58365, "node_name": "data2", "Dec": "the second data byte"}{"idx": 58367, "node_name": "command", "Dec": "the midi command represented by this message"}{"idx": 58368, "node_name": "channel", "Dec": "the channel associated with the message"}{"idx": 58369, "node_name": "data1", "Dec": "the first data byte"}{"idx": 58370, "node_name": "data2", "Dec": "the second data byte"}{"idx": 58377, "node_name": "status", "Dec": "status byte value , which must represent a short midi message"}{"idx": 58386, "node_name": "patch", "Dec": "a patch object specifying the bank index and program change number"}{"idx": 58389, "node_name": "soundbank", "Dec": "the sound bank containing this soundbankresource"}{"idx": 58390, "node_name": "name", "Dec": "the name of the sample"}{"idx": 58391, "node_name": "dataclass", "Dec": "the class used to represent the sample's data"}{"idx": 58399, "node_name": "info", "Dec": "an info object that describes the device for which support is queried"}{"idx": 58402, "node_name": "info", "Dec": "an info object that describes the desired device"}{"idx": 58406, "node_name": "stream", "Dec": "the input stream from which file format information should be extracted"}{"idx": 58408, "node_name": "url", "Dec": "the url from which file format information should be extracted"}{"idx": 58410, "node_name": "file", "Dec": "the file from which file format information should be extracted"}{"idx": 58412, "node_name": "stream", "Dec": "the input stream from which the sequence should be constructed"}{"idx": 58414, "node_name": "url", "Dec": "the url for which the sequence should be constructed"}{"idx": 58416, "node_name": "file", "Dec": "the file from which the sequence should be constructed"}{"idx": 58421, "node_name": "sequence", "Dec": "the sequence for which midi file type support is queried"}{"idx": 58423, "node_name": "filetype", "Dec": "the file type for which write capabilities are queried"}{"idx": 58425, "node_name": "filetype", "Dec": "the file type for which write capabilities are queried"}{"idx": 58426, "node_name": "sequence", "Dec": "the sequence for which file writing support is queried"}{"idx": 58428, "node_name": "in", "Dec": "sequence containing midi data to be written to the file"}{"idx": 58429, "node_name": "filetype", "Dec": "type of the file to be written to the output stream"}{"idx": 58430, "node_name": "out", "Dec": "stream to which the file data should be written"}{"idx": 58432, "node_name": "in", "Dec": "sequence containing midi data to be written to the external file"}{"idx": 58433, "node_name": "filetype", "Dec": "type of the file to be written to the external file"}{"idx": 58434, "node_name": "out", "Dec": "external file to which the file data should be written"}{"idx": 58438, "node_name": "url", "Dec": "url representing the soundbank"}{"idx": 58440, "node_name": "stream", "Dec": "inputstream representing the soundbank"}{"idx": 58442, "node_name": "file", "Dec": "the file representing the soundbank"}{"idx": 58449, "node_name": "soundbank", "Dec": "soundbank for which support is queried"}{"idx": 58451, "node_name": "instrument", "Dec": "instrument to load"}{"idx": 58453, "node_name": "instrument", "Dec": "instrument to unload"}{"idx": 58455, "node_name": "from", "Dec": "the instrument object to be replaced"}{"idx": 58456, "node_name": "to", "Dec": "the instrument object to be used in place of the old instrument , it should be loaded into the synthesizer"}{"idx": 58461, "node_name": "soundbank", "Dec": "the soundbank whose are instruments are to be loaded"}{"idx": 58463, "node_name": "soundbank", "Dec": "soundbank containing instruments to unload"}{"idx": 58465, "node_name": "soundbank", "Dec": "the soundbank containing the instruments to load"}{"idx": 58466, "node_name": "patchlist", "Dec": "list of patches for which instruments should be loaded"}{"idx": 58468, "node_name": "soundbank", "Dec": "soundbank containing instruments to unload"}{"idx": 58469, "node_name": "patchlist", "Dec": "list of patches for which instruments should be unloaded"}{"idx": 58475, "node_name": "data", "Dec": "the system exclusive message data including the status byte"}{"idx": 58476, "node_name": "length", "Dec": "the length of the valid message data in the array , including the status byte ; it should be non-negative and less than or equal to data.length"}{"idx": 58478, "node_name": "status", "Dec": "the status byte for the message ; it must be a valid system exclusive status byte ( 0xf0 or 0xf7 )"}{"idx": 58479, "node_name": "data", "Dec": "the system exclusive message data ( without the status byte )"}{"idx": 58480, "node_name": "length", "Dec": "the length of the valid message data in the array ; it should be non-negative and less than or equal to data.length"}{"idx": 58482, "node_name": "data", "Dec": "an array of bytes containing the complete message . the message data may be changed using the setmessage method ."}{"idx": 58484, "node_name": "data", "Dec": "the system exclusive message data"}{"idx": 58485, "node_name": "length", "Dec": "the length of the valid message data in the array , including the status byte"}{"idx": 58487, "node_name": "status", "Dec": "the status byte for the message ( 0xf0 or 0xf7 )"}{"idx": 58488, "node_name": "data", "Dec": "the system exclusive message data"}{"idx": 58489, "node_name": "length", "Dec": "the length of the valid message data in the array"}{"idx": 58494, "node_name": "event", "Dec": "the event to add"}{"idx": 58496, "node_name": "event", "Dec": "the event to remove"}{"idx": 58498, "node_name": "index", "Dec": "the location of the desired event in the event vector"}{"idx": 58503, "node_name": "receiver", "Dec": "the desired receiver"}{"idx": 58516, "node_name": "type", "Dec": "the type of the audio file"}{"idx": 58517, "node_name": "bytelength", "Dec": "the length of the file in bytes , or audiosystem.not_specified"}{"idx": 58518, "node_name": "format", "Dec": "the format of the audio data contained in the file"}{"idx": 58519, "node_name": "framelength", "Dec": "the audio data length in sample frames , or audiosystem.not_specified"}{"idx": 58521, "node_name": "type", "Dec": "the type of the audio file"}{"idx": 58522, "node_name": "format", "Dec": "the format of the audio data contained in the file"}{"idx": 58523, "node_name": "framelength", "Dec": "the audio data length in sample frames , or audiosystem.not_specified"}{"idx": 58525, "node_name": "type", "Dec": "the type of the audio file"}{"idx": 58526, "node_name": "format", "Dec": "the format of the audio data contained in the file"}{"idx": 58527, "node_name": "framelength", "Dec": "the audio data length in sample frames , or audiosystem.not_specified"}{"idx": 58528, "node_name": "properties", "Dec": "a map < string , object > object with properties"}{"idx": 58535, "node_name": "key", "Dec": "the key of the desired property"}{"idx": 58544, "node_name": "name", "Dec": "the string that names the file type"}{"idx": 58545, "node_name": "extension", "Dec": "the string that commonly marks the file type without leading dot"}{"idx": 58547, "node_name": "obj", "Dec": "the reference object with which to compare"}{"idx": 58558, "node_name": "name", "Dec": "the name of the new type of encoding"}{"idx": 58560, "node_name": "obj", "Dec": "the reference object with which to compare"}{"idx": 58572, "node_name": "encoding", "Dec": "the audio encoding technique"}{"idx": 58573, "node_name": "samplerate", "Dec": "the number of samples per second"}{"idx": 58574, "node_name": "samplesizeinbits", "Dec": "the number of bits in each sample"}{"idx": 58575, "node_name": "channels", "Dec": "the number of channels ( 1 for mono , 2 for stereo , and so on )"}{"idx": 58576, "node_name": "framesize", "Dec": "the number of bytes in each frame"}{"idx": 58577, "node_name": "framerate", "Dec": "the number of frames per second"}{"idx": 58578, "node_name": "bigendian", "Dec": "indicates whether the data for a single sample is stored in big-endian byte order ( false means little-endian )"}{"idx": 58580, "node_name": "encoding", "Dec": "the audio encoding technique"}{"idx": 58581, "node_name": "samplerate", "Dec": "the number of samples per second"}{"idx": 58582, "node_name": "samplesizeinbits", "Dec": "the number of bits in each sample"}{"idx": 58583, "node_name": "channels", "Dec": "the number of channels ( 1 for mono , 2 for stereo , and so on )"}{"idx": 58584, "node_name": "framesize", "Dec": "the number of bytes in each frame"}{"idx": 58585, "node_name": "framerate", "Dec": "the number of frames per second"}{"idx": 58586, "node_name": "bigendian", "Dec": "indicates whether the data for a single sample is stored in big-endian byte order ( false means little-endian )"}{"idx": 58587, "node_name": "properties", "Dec": "a map < string , object > object containing format properties"}{"idx": 58589, "node_name": "samplerate", "Dec": "the number of samples per second"}{"idx": 58590, "node_name": "samplesizeinbits", "Dec": "the number of bits in each sample"}{"idx": 58591, "node_name": "channels", "Dec": "the number of channels ( 1 for mono , 2 for stereo , and so on )"}{"idx": 58592, "node_name": "signed", "Dec": "indicates whether the data is signed or unsigned"}{"idx": 58593, "node_name": "bigendian", "Dec": "indicates whether the data for a single sample is stored in big-endian byte order ( false means little-endian )"}{"idx": 58603, "node_name": "key", "Dec": "the key of the desired property"}{"idx": 58605, "node_name": "format", "Dec": "format to test for match"}{"idx": 58613, "node_name": "stream", "Dec": "the stream on which this audioinputstream object is based"}{"idx": 58614, "node_name": "format", "Dec": "the format of this stream's audio data"}{"idx": 58615, "node_name": "length", "Dec": "the length in sample frames of the data in this stream"}{"idx": 58617, "node_name": "line", "Dec": "the target data line from which this stream obtains its data"}{"idx": 58622, "node_name": "b", "Dec": "the buffer into which the data is read"}{"idx": 58624, "node_name": "b", "Dec": "the buffer into which the data is read"}{"idx": 58625, "node_name": "off", "Dec": "the offset , from the beginning of array b , at which the data will be written"}{"idx": 58626, "node_name": "len", "Dec": "the maximum number of bytes to read"}{"idx": 58628, "node_name": "n", "Dec": "the requested number of bytes to be skipped"}{"idx": 58632, "node_name": "readlimit", "Dec": "the maximum number of bytes that can be read before the mark position becomes invalid"}{"idx": 58637, "node_name": "name", "Dec": "the name of the new audiopermission"}{"idx": 58639, "node_name": "name", "Dec": "the name of the new audiopermission"}{"idx": 58640, "node_name": "actions", "Dec": "( unused ; should be null )"}{"idx": 58645, "node_name": "info", "Dec": "a mixer.info object representing the desired mixer , or null for the system default mixer"}{"idx": 58647, "node_name": "info", "Dec": "a line.info object that specifies the kind of lines about which information is requested"}{"idx": 58649, "node_name": "info", "Dec": "a line.info object that specifies the kind of lines about which information is requested"}{"idx": 58651, "node_name": "info", "Dec": "a line.info object describing the line for which support is queried"}{"idx": 58653, "node_name": "info", "Dec": "a line.info object describing the desired kind of line"}{"idx": 58656, "node_name": "mixerinfo", "Dec": "a mixer.info object representing the desired mixer , or null for the system default mixer"}{"idx": 58658, "node_name": "format", "Dec": "an audioformat object specifying the supported audio format of the returned line , or null for any audio format"}{"idx": 58660, "node_name": "format", "Dec": "an audioformat object specifying the supported audio format of the returned line , or null for any audio format"}{"idx": 58661, "node_name": "mixerinfo", "Dec": "a mixer.info object representing the desired mixer , or null for the system default mixer"}{"idx": 58663, "node_name": "format", "Dec": "an audioformat object specifying the supported audio format of the returned line , or null for any audio format"}{"idx": 58665, "node_name": "format", "Dec": "an audioformat object specifying the supported audio format of the returned line , or null for any audio format"}{"idx": 58666, "node_name": "mixerinfo", "Dec": "a mixer.info object representing the desired mixer , or null for the system default mixer"}{"idx": 58668, "node_name": "sourceencoding", "Dec": "the encoding for which conversion support is queried"}{"idx": 58670, "node_name": "sourceformat", "Dec": "the audio format for which conversion is queried"}{"idx": 58672, "node_name": "targetencoding", "Dec": "the desired encoding after conversion"}{"idx": 58673, "node_name": "sourceformat", "Dec": "the audio format before conversion"}{"idx": 58675, "node_name": "targetencoding", "Dec": "the desired encoding after conversion"}{"idx": 58676, "node_name": "sourcestream", "Dec": "the stream to be converted"}{"idx": 58678, "node_name": "targetencoding", "Dec": "the desired encoding after conversion"}{"idx": 58679, "node_name": "sourceformat", "Dec": "the audio format before conversion"}{"idx": 58681, "node_name": "targetformat", "Dec": "the desired audio format after conversion"}{"idx": 58682, "node_name": "sourceformat", "Dec": "the audio format before conversion"}{"idx": 58684, "node_name": "targetformat", "Dec": "the desired audio format after conversion"}{"idx": 58685, "node_name": "sourcestream", "Dec": "the stream to be converted"}{"idx": 58687, "node_name": "stream", "Dec": "the input stream from which file format information should be extracted"}{"idx": 58689, "node_name": "url", "Dec": "the url from which file format information should be extracted"}{"idx": 58691, "node_name": "file", "Dec": "the file from which file format information should be extracted"}{"idx": 58693, "node_name": "stream", "Dec": "the input stream from which the audioinputstream should be constructed"}{"idx": 58695, "node_name": "url", "Dec": "the url for which the audioinputstream should be constructed"}{"idx": 58697, "node_name": "file", "Dec": "the file for which the audioinputstream should be constructed"}{"idx": 58700, "node_name": "filetype", "Dec": "the file type for which write capabilities are queried"}{"idx": 58702, "node_name": "stream", "Dec": "the audio input stream for which audio file type support is queried"}{"idx": 58704, "node_name": "filetype", "Dec": "the file type for which write capabilities are queried"}{"idx": 58705, "node_name": "stream", "Dec": "the stream for which file-writing support is queried"}{"idx": 58707, "node_name": "stream", "Dec": "the audio input stream containing audio data to be written to the file"}{"idx": 58708, "node_name": "filetype", "Dec": "the kind of audio file to write"}{"idx": 58709, "node_name": "out", "Dec": "the stream to which the file data should be written"}{"idx": 58711, "node_name": "stream", "Dec": "the audio input stream containing audio data to be written to the file"}{"idx": 58712, "node_name": "filetype", "Dec": "the kind of audio file to write"}{"idx": 58713, "node_name": "out", "Dec": "the external file to which the file data should be written"}{"idx": 58716, "node_name": "type", "Dec": "the type of control represented this float control object"}{"idx": 58717, "node_name": "initialvalue", "Dec": "the initial control value"}{"idx": 58718, "node_name": "truestatelabel", "Dec": "the label for the state represented by true , such as \" true \" or \" on \""}{"idx": 58719, "node_name": "falsestatelabel", "Dec": "the label for the state represented by false , such as \" false \" or \" off \""}{"idx": 58721, "node_name": "type", "Dec": "the type of control represented by this float control object"}{"idx": 58722, "node_name": "initialvalue", "Dec": "the initial control value"}{"idx": 58724, "node_name": "value", "Dec": "desired new value"}{"idx": 58727, "node_name": "state", "Dec": "the state whose label will be returned"}{"idx": 58733, "node_name": "name", "Dec": "the name of the new boolean control type"}{"idx": 58737, "node_name": "format", "Dec": "the format of the supplied audio data"}{"idx": 58738, "node_name": "data", "Dec": "a byte array containing audio data to load into the clip"}{"idx": 58739, "node_name": "offset", "Dec": "the point at which to start copying , expressed in bytes from the beginning of the array"}{"idx": 58740, "node_name": "buffersize", "Dec": "the number of bytes of data to load into the clip from the array"}{"idx": 58742, "node_name": "stream", "Dec": "an audio input stream from which audio data will be read into the clip"}{"idx": 58746, "node_name": "frames", "Dec": "the desired new media position , expressed in sample frames"}{"idx": 58748, "node_name": "microseconds", "Dec": "the desired new media position , expressed in microseconds"}{"idx": 58750, "node_name": "start", "Dec": "the loop's starting position , in sample frames ( zero-based )"}{"idx": 58751, "node_name": "end", "Dec": "the loop's ending position , in sample frames ( zero-based ) , or -1 to indicate the final frame"}{"idx": 58753, "node_name": "count", "Dec": "the number of times playback should loop back from the loop's end position to the loop's start position , or loop_continuously to indicate that looping should continue until interrupted"}{"idx": 58756, "node_name": "type", "Dec": "the type of control represented this compound control object"}{"idx": 58757, "node_name": "membercontrols", "Dec": "the set of member controls"}{"idx": 58762, "node_name": "name", "Dec": "the name of the new compound control type"}{"idx": 58765, "node_name": "type", "Dec": "the kind of control desired"}{"idx": 58770, "node_name": "name", "Dec": "the name of the new control type"}{"idx": 58772, "node_name": "obj", "Dec": "the reference object with which to compare"}{"idx": 58777, "node_name": "lineclass", "Dec": "the class of the data line described by the info object"}{"idx": 58778, "node_name": "formats", "Dec": "set of formats supported"}{"idx": 58779, "node_name": "minbuffersize", "Dec": "minimum buffer size supported by the data line , in bytes"}{"idx": 58780, "node_name": "maxbuffersize", "Dec": "maximum buffer size supported by the data line , in bytes"}{"idx": 58782, "node_name": "lineclass", "Dec": "the class of the data line described by the info object"}{"idx": 58783, "node_name": "format", "Dec": "desired format"}{"idx": 58784, "node_name": "buffersize", "Dec": "desired buffer size , in bytes"}{"idx": 58786, "node_name": "lineclass", "Dec": "the class of the data line described by the info object"}{"idx": 58787, "node_name": "format", "Dec": "desired format"}{"idx": 58790, "node_name": "format", "Dec": "the audio format for which support is queried"}{"idx": 58794, "node_name": "info", "Dec": "the info object which is being compared to this one"}{"idx": 58812, "node_name": "type", "Dec": "the type of control represented this enumerated control object"}{"idx": 58813, "node_name": "values", "Dec": "the set of possible values for the control"}{"idx": 58814, "node_name": "value", "Dec": "the initial control value"}{"idx": 58816, "node_name": "value", "Dec": "the desired new value"}{"idx": 58823, "node_name": "name", "Dec": "the name of the new enumerated control type"}{"idx": 58826, "node_name": "type", "Dec": "the kind of control represented by this float control object"}{"idx": 58827, "node_name": "minimum", "Dec": "the smallest value permitted for the control"}{"idx": 58828, "node_name": "maximum", "Dec": "the largest value permitted for the control"}{"idx": 58829, "node_name": "precision", "Dec": "the resolution or granularity of the control . this is the size of the increment between discrete valid values ."}{"idx": 58830, "node_name": "updateperiod", "Dec": "the smallest time interval , in microseconds , over which the control can change from one discrete value to the next during a shift"}{"idx": 58831, "node_name": "initialvalue", "Dec": "the value that the control starts with when constructed"}{"idx": 58832, "node_name": "units", "Dec": "the label for the units in which the control's values are expressed , such as \" db \" or \" frames per second \""}{"idx": 58833, "node_name": "minlabel", "Dec": "the label for the minimum value , such as \" left \" or \" off \""}{"idx": 58834, "node_name": "midlabel", "Dec": "the label for the midpoint value , such as \" center \" or \" default \""}{"idx": 58835, "node_name": "maxlabel", "Dec": "the label for the maximum value , such as \" right \" or \" full \""}{"idx": 58837, "node_name": "type", "Dec": "the kind of control represented by this float control object"}{"idx": 58838, "node_name": "minimum", "Dec": "the smallest value permitted for the control"}{"idx": 58839, "node_name": "maximum", "Dec": "the largest value permitted for the control"}{"idx": 58840, "node_name": "precision", "Dec": "the resolution or granularity of the control . this is the size of the increment between discrete valid values ."}{"idx": 58841, "node_name": "updateperiod", "Dec": "the smallest time interval , in microseconds , over which the control can change from one discrete value to the next during a shift"}{"idx": 58842, "node_name": "initialvalue", "Dec": "the value that the control starts with when constructed"}{"idx": 58843, "node_name": "units", "Dec": "the label for the units in which the control's values are expressed , such as \" db \" or \" frames per second \""}{"idx": 58845, "node_name": "newvalue", "Dec": "desired new value"}{"idx": 58856, "node_name": "from", "Dec": "initial value at the beginning of the shift"}{"idx": 58857, "node_name": "to", "Dec": "final value after the shift"}{"idx": 58858, "node_name": "microseconds", "Dec": "maximum duration of the shift in microseconds"}{"idx": 58871, "node_name": "name", "Dec": "the name of the new float control type"}{"idx": 58874, "node_name": "lineclass", "Dec": "the class of the line that the new line.info object describes"}{"idx": 58877, "node_name": "info", "Dec": "the info object which is being compared to this one"}{"idx": 58886, "node_name": "control", "Dec": "the type of the control for which support is queried"}{"idx": 58888, "node_name": "control", "Dec": "the type of the requested control"}{"idx": 58890, "node_name": "listener", "Dec": "the object to add as a listener to this line"}{"idx": 58892, "node_name": "listener", "Dec": "listener to remove"}{"idx": 58895, "node_name": "line", "Dec": "the source of this event"}{"idx": 58896, "node_name": "type", "Dec": "the event type ( open , close , start , or stop )"}{"idx": 58897, "node_name": "position", "Dec": "the number of sample frames that the line had already processed when the event occurred , or audiosystem.not_specified"}{"idx": 58908, "node_name": "name", "Dec": "name of the type"}{"idx": 58910, "node_name": "obj", "Dec": "the reference object with which to compare"}{"idx": 58915, "node_name": "event", "Dec": "a line event that describes the change"}{"idx": 58919, "node_name": "message", "Dec": "a string containing the error detail message"}{"idx": 58922, "node_name": "name", "Dec": "the name of the mixer"}{"idx": 58923, "node_name": "vendor", "Dec": "the company who manufactures or creates the hardware or software mixer"}{"idx": 58924, "node_name": "description", "Dec": "descriptive text about the mixer"}{"idx": 58925, "node_name": "version", "Dec": "version information for the mixer"}{"idx": 58927, "node_name": "obj", "Dec": "the reference object with which to compare"}{"idx": 58939, "node_name": "info", "Dec": "a line.info object describing lines about which information is queried"}{"idx": 58941, "node_name": "info", "Dec": "a line.info object describing lines about which information is queried"}{"idx": 58943, "node_name": "info", "Dec": "describes the line for which support is queried"}{"idx": 58945, "node_name": "info", "Dec": "describes the desired line"}{"idx": 58947, "node_name": "info", "Dec": "a line.info that describes the line for which the number of supported instances is queried"}{"idx": 58951, "node_name": "lines", "Dec": "the lines that should be synchronized"}{"idx": 58952, "node_name": "maintainsync", "Dec": "true if the synchronization must be precisely maintained ( i.e. , the synchronization must be sample-accurate ) at all times during operation of the lines , or false if precise synchronization is required only during start and stop operations"}{"idx": 58954, "node_name": "lines", "Dec": "the synchronized lines for which synchronization should be released , or null for all this mixer's synchronized lines"}{"idx": 58956, "node_name": "lines", "Dec": "the set of lines for which synchronization support is queried"}{"idx": 58957, "node_name": "maintainsync", "Dec": "true if the synchronization must be precisely maintained ( i.e. , the synchronization must be sample-accurate ) at all times during operation of the lines , or false if precise synchronization is required only during start and stop operations"}{"idx": 58966, "node_name": "lineclass", "Dec": "the class of the port described by the info object"}{"idx": 58967, "node_name": "name", "Dec": "the string that names the port"}{"idx": 58968, "node_name": "issource", "Dec": "true if the port is a source port ( such as a microphone ) , false if the port is a target port ( such as a speaker )"}{"idx": 58972, "node_name": "info", "Dec": "the info object for which the match is queried"}{"idx": 58974, "node_name": "obj", "Dec": "the reference object with which to compare"}{"idx": 58980, "node_name": "name", "Dec": "the name of the new reverb type , or a zero-length string"}{"idx": 58981, "node_name": "earlyreflectiondelay", "Dec": "the new type's early reflection delay time in microseconds"}{"idx": 58982, "node_name": "earlyreflectionintensity", "Dec": "the new type's early reflection intensity in db"}{"idx": 58983, "node_name": "latereflectiondelay", "Dec": "the new type's late reflection delay time in microseconds"}{"idx": 58984, "node_name": "latereflectionintensity", "Dec": "the new type's late reflection intensity in db"}{"idx": 58985, "node_name": "decaytime", "Dec": "the new type's decay time in microseconds"}{"idx": 58993, "node_name": "obj", "Dec": "the reference object with which to compare"}{"idx": 58998, "node_name": "format", "Dec": "the desired audio format"}{"idx": 58999, "node_name": "buffersize", "Dec": "the desired buffer size"}{"idx": 59001, "node_name": "format", "Dec": "the desired audio format"}{"idx": 59003, "node_name": "b", "Dec": "a byte array containing data to be written to the data line"}{"idx": 59004, "node_name": "off", "Dec": "the offset from the beginning of the array , in bytes"}{"idx": 59005, "node_name": "len", "Dec": "the length , in bytes , of the valid data in the array ( in other words , the requested amount of data to write , in bytes )"}{"idx": 59009, "node_name": "stream", "Dec": "the input stream from which file format information should be extracted"}{"idx": 59011, "node_name": "url", "Dec": "the url from which file format information should be extracted"}{"idx": 59013, "node_name": "file", "Dec": "the file from which file format information should be extracted"}{"idx": 59015, "node_name": "stream", "Dec": "the input stream from which the audioinputstream should be constructed"}{"idx": 59017, "node_name": "url", "Dec": "the url for which the audioinputstream should be constructed"}{"idx": 59019, "node_name": "file", "Dec": "the file for which the audioinputstream should be constructed"}{"idx": 59024, "node_name": "filetype", "Dec": "the file type for which write capabilities are queried"}{"idx": 59026, "node_name": "stream", "Dec": "the audio input stream for which audio file type support is queried"}{"idx": 59028, "node_name": "filetype", "Dec": "file type for which write capabilities are queried"}{"idx": 59029, "node_name": "stream", "Dec": "for which file writing support is queried"}{"idx": 59031, "node_name": "stream", "Dec": "the audio input stream containing audio data to be written to the output stream"}{"idx": 59032, "node_name": "filetype", "Dec": "file type to be written to the output stream"}{"idx": 59033, "node_name": "out", "Dec": "stream to which the file data should be written"}{"idx": 59035, "node_name": "stream", "Dec": "the audio input stream containing audio data to be written to the file"}{"idx": 59036, "node_name": "filetype", "Dec": "file type to be written to the file"}{"idx": 59037, "node_name": "out", "Dec": "external file to which the file data should be written"}{"idx": 59043, "node_name": "sourceencoding", "Dec": "the source format encoding for which support is queried"}{"idx": 59045, "node_name": "targetencoding", "Dec": "the target format encoding for which support is queried"}{"idx": 59047, "node_name": "sourceformat", "Dec": "format of the incoming data"}{"idx": 59049, "node_name": "targetencoding", "Dec": "desired encoding of the outgoing data"}{"idx": 59050, "node_name": "sourceformat", "Dec": "format of the incoming data"}{"idx": 59052, "node_name": "targetencoding", "Dec": "desired encoding of the stream after processing"}{"idx": 59053, "node_name": "sourceformat", "Dec": "format of the incoming data"}{"idx": 59055, "node_name": "targetformat", "Dec": "desired format of outgoing data"}{"idx": 59056, "node_name": "sourceformat", "Dec": "format of the incoming data"}{"idx": 59058, "node_name": "targetencoding", "Dec": "desired encoding of the stream after processing"}{"idx": 59059, "node_name": "sourcestream", "Dec": "stream from which data to be processed should be read"}{"idx": 59061, "node_name": "targetformat", "Dec": "desired data format of the stream after processing"}{"idx": 59062, "node_name": "sourcestream", "Dec": "stream from which data to be processed should be read"}{"idx": 59066, "node_name": "info", "Dec": "an info object that describes the mixer for which support is queried"}{"idx": 59069, "node_name": "info", "Dec": "an info object that describes the desired mixer , or null for the default mixer"}{"idx": 59072, "node_name": "format", "Dec": "the desired audio format"}{"idx": 59073, "node_name": "buffersize", "Dec": "the desired buffer size , in bytes"}{"idx": 59075, "node_name": "format", "Dec": "the desired audio format"}{"idx": 59077, "node_name": "b", "Dec": "a byte array that will contain the requested input data when read(byte[],int,int) returns"}{"idx": 59078, "node_name": "off", "Dec": "the offset from the beginning of the array , in bytes"}{"idx": 59079, "node_name": "len", "Dec": "the requested number of bytes to read"}{"idx": 59083, "node_name": "message", "Dec": "a string containing the error detail message"}{"idx": 59087, "node_name": "out", "Dec": "the new log writer ; to disable logging , set to null"}{"idx": 59089, "node_name": "seconds", "Dec": "the data source login time limit"}{"idx": 59095, "node_name": "con", "Dec": "the pooled connection that is the source of the event"}{"idx": 59097, "node_name": "con", "Dec": "the pooled connection that is the source of the event"}{"idx": 59098, "node_name": "ex", "Dec": "the sqlexception about to be thrown to the application"}{"idx": 59102, "node_name": "event", "Dec": "an event object describing the source of the event"}{"idx": 59104, "node_name": "event", "Dec": "an event object describing the source of the event and containing the sqlexception that the driver is about to throw"}{"idx": 59108, "node_name": "user", "Dec": "the database user on whose behalf the connection is being made"}{"idx": 59109, "node_name": "password", "Dec": "the user's password"}{"idx": 59112, "node_name": "out", "Dec": "the new log writer ; to disable logging , set to null"}{"idx": 59114, "node_name": "seconds", "Dec": "the data source login time limit"}{"idx": 59120, "node_name": "username", "Dec": "the database user on whose behalf the connection is being made"}{"idx": 59121, "node_name": "password", "Dec": "the user's password"}{"idx": 59124, "node_name": "out", "Dec": "the new log writer ; to disable logging , set to null"}{"idx": 59126, "node_name": "seconds", "Dec": "the data source login time limit"}{"idx": 59133, "node_name": "listener", "Dec": "a component , usually the connection pool manager , that has implemented the connectioneventlistener interface and wants to be notified when the connection is closed or has an error"}{"idx": 59135, "node_name": "listener", "Dec": "a component , usually the connection pool manager , that has implemented the connectioneventlistener interface and been registered with this pooledconnection object as a listener"}{"idx": 59137, "node_name": "listener", "Dec": "an component which implements the statementeventlistener interface that is to be registered with this pooledconnection object"}{"idx": 59139, "node_name": "listener", "Dec": "the component which implements the statementeventlistener interface that was previously registered with this pooledconnection object"}{"idx": 59142, "node_name": "username", "Dec": "the database user on whose behalf the connection is being made"}{"idx": 59144, "node_name": "password", "Dec": "the password to use for this connection . may be null"}{"idx": 59146, "node_name": "shardingkey", "Dec": "the shardingkey . may be null"}{"idx": 59148, "node_name": "supershardingkey", "Dec": "the supershardingkey . may be null"}{"idx": 59161, "node_name": "listener", "Dec": "an object that has implemented the javax.sql.rowsetlistener interface and wants to be notified of any events that occur on this rowset object ; may be null ."}{"idx": 59163, "node_name": "listener", "Dec": "a rowsetlistener object that is on the list of listeners for this rowset object"}{"idx": 59169, "node_name": "cmd", "Dec": "a string object containing an sql query that will be set as this rowset object's command property ; may be null but may not be an empty string"}{"idx": 59172, "node_name": "url", "Dec": "a string object that contains the jdbc url that will be used to establish the connection to a database for this rowset object ; may be null but must not be an empty string"}{"idx": 59175, "node_name": "name", "Dec": "a string object with the name that can be supplied to a naming service based on jndi technology to retrieve the datasource object that can be used to get a connection ; may be null but must not be an empty string"}{"idx": 59178, "node_name": "name", "Dec": "the string object containing the user name that is supplied to the data source to create a connection . it may be null ."}{"idx": 59181, "node_name": "pass", "Dec": "the string object that represents the password that is supplied to the database to create a connection . it may be null ."}{"idx": 59183, "node_name": "type", "Dec": "one of the following constants : resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 59186, "node_name": "concurrency", "Dec": "one of the following constants : resultset.concur_read_only or resultset.concur_updatable"}{"idx": 59189, "node_name": "value", "Dec": "true to indicate that this rowset object is read-only ; false to indicate that it is updatable"}{"idx": 59192, "node_name": "level", "Dec": "one of the following constants , listed in ascending order : connection.transaction_none , connection.transaction_read_uncommitted , connection.transaction_read_committed , connection.transaction_repeatable_read , or connection.transaction_serializable"}{"idx": 59195, "node_name": "map", "Dec": "a java.util.map object that contains the mapping from sql type names for user defined types ( udt ) to classes in the java programming language . each entry in the map object consists of the fully qualified sql name of a udt and the class object for the sqldata implementation of that udt . may be null ."}{"idx": 59198, "node_name": "max", "Dec": "an int indicating the new maximum column size limit ; zero means that there is no limit"}{"idx": 59201, "node_name": "max", "Dec": "an int indicating the current maximum number of rows ; zero means that there is no limit"}{"idx": 59203, "node_name": "enable", "Dec": "true to enable escape processing ; false to disable it"}{"idx": 59206, "node_name": "seconds", "Dec": "the new query time-out limit in seconds ; zero means that there is no limit ; must not be less than zero"}{"idx": 59209, "node_name": "value", "Dec": "true if deleted rows should be shown ; false otherwise"}{"idx": 59212, "node_name": "direction", "Dec": "one of resultset.fetch_forward , resultset.fetch_reverse , or resultset.fetch_unknown"}{"idx": 59215, "node_name": "rows", "Dec": "the number of rows to fetch ; 0 to let the driver decide what the best fetch size is ; must not be less than 0 or more than the maximum number of rows allowed for this rowset object ( the number returned by a call to setFetchSize(int) getmaxrows() )"}{"idx": 59219, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59220, "node_name": "sqltype", "Dec": "an int that is one of the sql type codes defined in the class types . if a non-standard sqltype is supplied , setNull(int,int) will not throw a sqlexception . this allows implicit support for non-standard sql types ."}{"idx": 59222, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59223, "node_name": "sqltype", "Dec": "a value from java.sql.types"}{"idx": 59224, "node_name": "typename", "Dec": "the fully qualified name of an sql user-defined type , which is ignored if the parameter is not a user-defined type or ref value"}{"idx": 59226, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59227, "node_name": "x", "Dec": "the parameter value"}{"idx": 59229, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59230, "node_name": "x", "Dec": "the parameter value"}{"idx": 59232, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59233, "node_name": "x", "Dec": "the parameter value"}{"idx": 59235, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59236, "node_name": "x", "Dec": "the parameter value"}{"idx": 59238, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59239, "node_name": "x", "Dec": "the parameter value"}{"idx": 59241, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59242, "node_name": "x", "Dec": "the parameter value"}{"idx": 59244, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59245, "node_name": "x", "Dec": "the parameter value"}{"idx": 59247, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59248, "node_name": "x", "Dec": "the parameter value"}{"idx": 59250, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59251, "node_name": "x", "Dec": "the parameter value"}{"idx": 59253, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59254, "node_name": "x", "Dec": "the parameter value"}{"idx": 59256, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59257, "node_name": "x", "Dec": "the parameter value"}{"idx": 59259, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59260, "node_name": "x", "Dec": "a java.sql.time object , which is to be set as the value for placeholder parameter parameterindex"}{"idx": 59262, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59263, "node_name": "x", "Dec": "a java.sql.timestamp object"}{"idx": 59265, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59266, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 59267, "node_name": "length", "Dec": "the number of bytes in the stream . this is the number of bytes the driver will send to the dbms ; lengths of 0 or less are are undefined but will cause an invalid length exception to be thrown in the underlying jdbc driver ."}{"idx": 59269, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59270, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 59272, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59273, "node_name": "x", "Dec": "the input stream that contains the binary value to be set"}{"idx": 59274, "node_name": "length", "Dec": "the number of bytes in the stream ; lengths of 0 or less are are undefined but will cause an invalid length exception to be thrown in the underlying jdbc driver ."}{"idx": 59276, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59277, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 59279, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59280, "node_name": "reader", "Dec": "the reader object that contains the unicode data"}{"idx": 59281, "node_name": "length", "Dec": "the number of characters in the stream ; lengths of 0 or less are undefined but will cause an invalid length exception to be thrown in the underlying jdbc driver ."}{"idx": 59283, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59284, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data"}{"idx": 59286, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59287, "node_name": "x", "Dec": "the object containing the input parameter value ; must be an object type"}{"idx": 59288, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database . the scale argument may further qualify this type . if a non-standard targetsqltype is supplied , setObject(int,java.lang.Object,int,int) will not throw a sqlexception . this allows implicit support for non-standard sql types ."}{"idx": 59289, "node_name": "scale", "Dec": "for the types java.sql.types.decimal and java.sql.types.numeric , this is the number of digits after the decimal point . for all other types , this value will be ignored ."}{"idx": 59291, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59292, "node_name": "x", "Dec": "the object containing the input parameter value ; must be an object type"}{"idx": 59293, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database . if a non-standard targetsqltype is supplied , setObject(int,java.lang.Object,int) will not throw a sqlexception . this allows implicit support for non-standard sql types ."}{"idx": 59295, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59296, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 59298, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59299, "node_name": "ref", "Dec": "a ref object representing an sql ref value ; cannot be null"}{"idx": 59301, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59302, "node_name": "x", "Dec": "a blob object representing an sql blob value"}{"idx": 59304, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59305, "node_name": "x", "Dec": "a clob object representing an sql clob value ; cannot be null"}{"idx": 59307, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59308, "node_name": "array", "Dec": "an array object representing an sql array value ; cannot be null . the array object passed to setArray(int,java.sql.Array) must return a non-null object for all getarray() method calls . a null value will cause a sqlexception to be thrown ."}{"idx": 59310, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59311, "node_name": "x", "Dec": "a java.sql.date object representing an sql date value"}{"idx": 59312, "node_name": "cal", "Dec": "a java.util.calendar object to use when when constructing the date"}{"idx": 59314, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59315, "node_name": "x", "Dec": "a java.sql.time object"}{"idx": 59316, "node_name": "cal", "Dec": "the java.util.calendar object the driver can use to construct the time"}{"idx": 59318, "node_name": "parameterindex", "Dec": "the ordinal number of the placeholder parameter in this rowset object's command that is to be set . the first parameter is 1 , the second is 2 , and so on ; must be 1 or greater"}{"idx": 59319, "node_name": "x", "Dec": "a java.sql.timestamp object"}{"idx": 59320, "node_name": "cal", "Dec": "the java.util.calendar object the driver can use to construct the timestamp"}{"idx": 59324, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59325, "node_name": "sqltype", "Dec": "the sql type code defined in java.sql.types"}{"idx": 59327, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59328, "node_name": "sqltype", "Dec": "a value from java.sql.types"}{"idx": 59329, "node_name": "typename", "Dec": "the fully-qualified name of an sql user-defined type ; ignored if the parameter is not a user-defined type or sql ref value"}{"idx": 59331, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59332, "node_name": "x", "Dec": "the parameter value"}{"idx": 59334, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59335, "node_name": "x", "Dec": "the parameter value"}{"idx": 59337, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59338, "node_name": "x", "Dec": "the parameter value"}{"idx": 59340, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59341, "node_name": "x", "Dec": "the parameter value"}{"idx": 59343, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59344, "node_name": "x", "Dec": "the parameter value"}{"idx": 59346, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59347, "node_name": "x", "Dec": "the parameter value"}{"idx": 59349, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59350, "node_name": "x", "Dec": "the parameter value"}{"idx": 59352, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59353, "node_name": "x", "Dec": "the parameter value"}{"idx": 59355, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59356, "node_name": "x", "Dec": "the parameter value"}{"idx": 59358, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59359, "node_name": "x", "Dec": "the parameter value"}{"idx": 59361, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59362, "node_name": "x", "Dec": "the parameter value"}{"idx": 59364, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59365, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 59366, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 59368, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59369, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 59370, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 59372, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59373, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data used as the designated parameter"}{"idx": 59374, "node_name": "length", "Dec": "the number of characters in the stream"}{"idx": 59376, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59377, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 59379, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59380, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 59382, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59383, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data"}{"idx": 59385, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 59386, "node_name": "value", "Dec": "the parameter value"}{"idx": 59388, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59389, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 59390, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database . the scale argument may further qualify this type ."}{"idx": 59391, "node_name": "scale", "Dec": "for java.sql.types.decimal or java.sql.types.numeric types , this is the number of digits after the decimal point . for all other types , this value will be ignored ."}{"idx": 59393, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59394, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 59395, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database"}{"idx": 59397, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59398, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 59400, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59401, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59402, "node_name": "length", "Dec": "the number of bytes in the parameter data ."}{"idx": 59404, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59405, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59407, "node_name": "parametername", "Dec": "the name of the parameter to be set the second is 2 , ..."}{"idx": 59408, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59409, "node_name": "length", "Dec": "the number of bytes in the parameter data ."}{"idx": 59411, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59412, "node_name": "x", "Dec": "a blob object that maps an sql blob value"}{"idx": 59414, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59415, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59417, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59418, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59419, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59421, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59422, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59424, "node_name": "parametername", "Dec": "the name of the parameter to be set"}{"idx": 59425, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59426, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59428, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59429, "node_name": "x", "Dec": "a clob object that maps an sql clob value"}{"idx": 59431, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59432, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59434, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59435, "node_name": "x", "Dec": "the parameter value"}{"idx": 59437, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59438, "node_name": "x", "Dec": "the parameter value"}{"idx": 59439, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the date"}{"idx": 59441, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59442, "node_name": "x", "Dec": "the parameter value"}{"idx": 59444, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59445, "node_name": "x", "Dec": "the parameter value"}{"idx": 59446, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the time"}{"idx": 59448, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59449, "node_name": "x", "Dec": "the parameter value"}{"idx": 59450, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the timestamp"}{"idx": 59452, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59453, "node_name": "xmlobject", "Dec": "a sqlxml object that maps an sql xml value"}{"idx": 59455, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59456, "node_name": "xmlobject", "Dec": "a sqlxml object that maps an sql xml value"}{"idx": 59458, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59459, "node_name": "x", "Dec": "the parameter value"}{"idx": 59461, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59462, "node_name": "x", "Dec": "the parameter value"}{"idx": 59464, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 59465, "node_name": "value", "Dec": "the parameter value"}{"idx": 59467, "node_name": "parametername", "Dec": "the name of the column to be set"}{"idx": 59468, "node_name": "value", "Dec": "the parameter value"}{"idx": 59470, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 59471, "node_name": "value", "Dec": "the parameter value"}{"idx": 59472, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59474, "node_name": "parametername", "Dec": "the name of the column to be set"}{"idx": 59475, "node_name": "value", "Dec": "the parameter value"}{"idx": 59476, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59478, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59479, "node_name": "value", "Dec": "the parameter value"}{"idx": 59481, "node_name": "parametername", "Dec": "the name of the column to be set"}{"idx": 59482, "node_name": "value", "Dec": "the parameter value"}{"idx": 59484, "node_name": "parametername", "Dec": "the name of the parameter to be set"}{"idx": 59485, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59486, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59488, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59489, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59491, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59492, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59493, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59495, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 59496, "node_name": "value", "Dec": "the parameter value"}{"idx": 59498, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59499, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59501, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59502, "node_name": "x", "Dec": "the java.net.url object to be set"}{"idx": 59505, "node_name": "data", "Dec": "the resultset object containing the data to be read into this cachedrowset object"}{"idx": 59507, "node_name": "conn", "Dec": "a standard jdbc connection object with valid properties"}{"idx": 59510, "node_name": "con", "Dec": "a standard jdbc connection object"}{"idx": 59517, "node_name": "idx", "Dec": "an int identifying the column to be checked for updates"}{"idx": 59519, "node_name": "columnname", "Dec": "a string object giving the name of the column to be checked for updates"}{"idx": 59522, "node_name": "column", "Dec": "an int indicating the column whose values are to be represented in a collection object"}{"idx": 59524, "node_name": "column", "Dec": "a string object giving the name of the column whose values are to be represented in a collection"}{"idx": 59527, "node_name": "provider", "Dec": "a string object giving the fully qualified class name of a syncprovider implementation"}{"idx": 59530, "node_name": "md", "Dec": "a rowsetmetadata object containing metadata about the columns in this cachedrowset object"}{"idx": 59536, "node_name": "tabname", "Dec": "a string object identifying the table from which this cachedrowset object was derived ; cannot be null but may be an empty string"}{"idx": 59539, "node_name": "keys", "Dec": "an array of int indicating the columns that form a primary key for this cachedrowset object ; every element in the array must be greater than 0 and less than or equal to the number of columns in this rowset"}{"idx": 59547, "node_name": "b", "Dec": "true if deleted rows should be shown ; false otherwise"}{"idx": 59551, "node_name": "s", "Dec": "a savepoint transaction marker"}{"idx": 59553, "node_name": "event", "Dec": "a rowsetevent object that contains the rowset object that is the source of the events"}{"idx": 59554, "node_name": "numrows", "Dec": "when populating , the number of rows interval on which the cachedrowset populated should fire ; the default value is zero ; cannot be less than fetchsize or zero"}{"idx": 59556, "node_name": "startrow", "Dec": "the position in the resultset from where to start populating the records in this cachedrowset"}{"idx": 59557, "node_name": "rs", "Dec": "the resultset object containing the data to be read into this cachedrowset object"}{"idx": 59559, "node_name": "size", "Dec": "the page-size of the cachedrowset"}{"idx": 59565, "node_name": "p", "Dec": "a predicate object defining the filter for this filteredrowset object . setting a null value will clear the predicate , allowing all rows to become visible ."}{"idx": 59570, "node_name": "b", "Dec": "true if deleted rows should be shown ; false otherwise"}{"idx": 59575, "node_name": "autocommit", "Dec": "true to enable auto-commit ; false to disable auto-commit"}{"idx": 59578, "node_name": "s", "Dec": "the savepoint to rollback to"}{"idx": 59581, "node_name": "columnidx", "Dec": "an int identifying the index of the column to be set as the match column"}{"idx": 59583, "node_name": "columnidxes", "Dec": "an array of int identifying the indexes of the columns to be set as the match columns"}{"idx": 59585, "node_name": "columnname", "Dec": "a string object giving the name of the column to be set as the match column"}{"idx": 59587, "node_name": "columnnames", "Dec": "an array of string objects giving the names of the column to be set as the match columns"}{"idx": 59591, "node_name": "columnidx", "Dec": "an int that identifies the index of the column that is to be unset as a match column"}{"idx": 59593, "node_name": "columnidxes", "Dec": "an array of int that identifies the indexes of the columns that are to be unset as match columns"}{"idx": 59595, "node_name": "columnname", "Dec": "a string object giving the name of the column that is to be unset as a match column"}{"idx": 59597, "node_name": "columnname", "Dec": "an array of string objects giving the names of the columns that are to be unset as the match columns"}{"idx": 59605, "node_name": "rowset", "Dec": "the rowset object that is to be added to this joinrowset object ; it must implement the joinable interface and have a match column set"}{"idx": 59607, "node_name": "rowset", "Dec": "the rowset object that is to be added to this joinrowset object ; it may implement the joinable interface"}{"idx": 59608, "node_name": "columnidx", "Dec": "an int that identifies the column to become the match column"}{"idx": 59610, "node_name": "rowset", "Dec": "the rowset object that is to be added to this joinrowset object ; it may implement the joinable interface"}{"idx": 59611, "node_name": "columnname", "Dec": "the string object giving the name of the column to be set as the match column"}{"idx": 59613, "node_name": "rowset", "Dec": "an array of one or more rowset objects to be added to the join ; it may implement the joinable interface"}{"idx": 59614, "node_name": "columnidx", "Dec": "an array of int values indicating the index ( es ) of the columns to be set as the match columns for the rowset objects in rowset"}{"idx": 59616, "node_name": "rowset", "Dec": "an array of one or more rowset objects to be added to the join ; it may implement the joinable interface"}{"idx": 59617, "node_name": "columnname", "Dec": "an array of string values indicating the names of the columns to be set as the match columns for the rowset objects in rowset"}{"idx": 59627, "node_name": "jointype", "Dec": "the standard joinrowset.xxx static field definition of a sql join to re-configure a joinrowset instance on the fly ."}{"idx": 59633, "node_name": "url", "Dec": "a string value ; may be null"}{"idx": 59636, "node_name": "name", "Dec": "the logical name of the data source for this rowset object ; may be null"}{"idx": 59639, "node_name": "name", "Dec": "a user name"}{"idx": 59642, "node_name": "password", "Dec": "the password string"}{"idx": 59645, "node_name": "level", "Dec": "the transaction isolation level ; one of connection.transaction_read_uncommitted , connection.transaction_read_committed , connection.transaction_repeatable_read , or connection.transaction_serializable"}{"idx": 59648, "node_name": "map", "Dec": "a java.util.map object containing the names of sql user-defined types and the java classes to which they are to be mapped"}{"idx": 59651, "node_name": "cmd", "Dec": "the sql query that will be used to get the data for this rowset object ; may be null"}{"idx": 59654, "node_name": "value", "Dec": "true if read-only ; false if updatable"}{"idx": 59657, "node_name": "max", "Dec": "the new max column size limit in bytes ; zero means unlimited"}{"idx": 59660, "node_name": "max", "Dec": "the new maximum number of rows ; zero means unlimited"}{"idx": 59663, "node_name": "enable", "Dec": "true to enable escape processing ; false to disable it"}{"idx": 59666, "node_name": "seconds", "Dec": "the new query timeout limit in seconds ; zero means that there is no limit"}{"idx": 59668, "node_name": "type", "Dec": "one of the resultset constants specifying a type : resultset.type_forward_only , resultset.type_scroll_insensitive , or resultset.type_scroll_sensitive"}{"idx": 59670, "node_name": "concurrency", "Dec": "one of the resultset constants specifying a concurrency level : resultset.concur_read_only or resultset.concur_updatable"}{"idx": 59672, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59673, "node_name": "sqltype", "Dec": "a sql type code defined by java.sql.types"}{"idx": 59675, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59676, "node_name": "sqltype", "Dec": "the sql type code defined in java.sql.types"}{"idx": 59678, "node_name": "paramindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59679, "node_name": "sqltype", "Dec": "a value from java.sql.types"}{"idx": 59680, "node_name": "typename", "Dec": "the fully qualified name of an sql udt or the type name of the sql structured type being referenced by a ref type ; ignored if the parameter is not a udt or ref type"}{"idx": 59682, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59683, "node_name": "sqltype", "Dec": "a value from java.sql.types"}{"idx": 59684, "node_name": "typename", "Dec": "the fully-qualified name of an sql user-defined type ; ignored if the parameter is not a user-defined type or sql ref value"}{"idx": 59686, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59687, "node_name": "x", "Dec": "the parameter value"}{"idx": 59689, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59690, "node_name": "x", "Dec": "the parameter value"}{"idx": 59692, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59693, "node_name": "x", "Dec": "the parameter value"}{"idx": 59695, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59696, "node_name": "x", "Dec": "the parameter value"}{"idx": 59698, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59699, "node_name": "x", "Dec": "the parameter value"}{"idx": 59701, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59702, "node_name": "x", "Dec": "the parameter value"}{"idx": 59704, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59705, "node_name": "x", "Dec": "the parameter value"}{"idx": 59707, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59708, "node_name": "x", "Dec": "the parameter value"}{"idx": 59710, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59711, "node_name": "x", "Dec": "the parameter value"}{"idx": 59713, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59714, "node_name": "x", "Dec": "the parameter value"}{"idx": 59716, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59717, "node_name": "x", "Dec": "the parameter value"}{"idx": 59719, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59720, "node_name": "x", "Dec": "the parameter value"}{"idx": 59722, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59723, "node_name": "x", "Dec": "the parameter value"}{"idx": 59725, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59726, "node_name": "x", "Dec": "the parameter value"}{"idx": 59728, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59729, "node_name": "x", "Dec": "the parameter value"}{"idx": 59731, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59732, "node_name": "x", "Dec": "the parameter value"}{"idx": 59734, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59735, "node_name": "x", "Dec": "the parameter value"}{"idx": 59737, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59738, "node_name": "x", "Dec": "the parameter value"}{"idx": 59740, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59741, "node_name": "x", "Dec": "the parameter value"}{"idx": 59743, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59744, "node_name": "x", "Dec": "the parameter value"}{"idx": 59746, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59747, "node_name": "x", "Dec": "the parameter value"}{"idx": 59749, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59750, "node_name": "x", "Dec": "the parameter value"}{"idx": 59752, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59753, "node_name": "x", "Dec": "the parameter value"}{"idx": 59755, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59756, "node_name": "x", "Dec": "the parameter value"}{"idx": 59758, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59759, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 59760, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 59762, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59763, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 59764, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 59766, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59767, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 59768, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 59770, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59771, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 59772, "node_name": "length", "Dec": "the number of bytes in the stream"}{"idx": 59774, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59775, "node_name": "reader", "Dec": "the reader object that contains the unicode data to be set"}{"idx": 59776, "node_name": "length", "Dec": "the number of characters in the stream"}{"idx": 59778, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59779, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data used as the designated parameter"}{"idx": 59780, "node_name": "length", "Dec": "the number of characters in the stream"}{"idx": 59782, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59783, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 59785, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59786, "node_name": "x", "Dec": "the java input stream that contains the ascii parameter value"}{"idx": 59788, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59789, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 59791, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59792, "node_name": "x", "Dec": "the java input stream which contains the binary parameter value"}{"idx": 59794, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59795, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data"}{"idx": 59797, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59798, "node_name": "reader", "Dec": "the java.io.reader object that contains the unicode data"}{"idx": 59800, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 59801, "node_name": "value", "Dec": "the parameter value"}{"idx": 59803, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59804, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 59805, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database . the scale argument may further qualify this type ."}{"idx": 59806, "node_name": "scaleorlength", "Dec": "for java.sql.types.decimal or java.sql.types.numeric types , this is the number of digits after the decimal point . for java object types inputstream and reader , this is the length of the data in the stream or reader . for all other types , this value will be ignored ."}{"idx": 59808, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59809, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 59810, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database . the scale argument may further qualify this type ."}{"idx": 59811, "node_name": "scale", "Dec": "for java.sql.types.decimal or java.sql.types.numeric types , this is the number of digits after the decimal point . for all other types , this value will be ignored ."}{"idx": 59813, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59814, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 59815, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database"}{"idx": 59817, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59818, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 59819, "node_name": "targetsqltype", "Dec": "the sql type ( as defined in java.sql.types ) to be sent to the database"}{"idx": 59821, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59822, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 59824, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59825, "node_name": "x", "Dec": "the object containing the input parameter value"}{"idx": 59827, "node_name": "i", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59828, "node_name": "x", "Dec": "an object representing data of an sql ref type"}{"idx": 59830, "node_name": "i", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59831, "node_name": "x", "Dec": "an object representing a blob"}{"idx": 59833, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59834, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59835, "node_name": "length", "Dec": "the number of bytes in the parameter data ."}{"idx": 59837, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59838, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59840, "node_name": "parametername", "Dec": "the name of the parameter to be set the second is 2 , ..."}{"idx": 59841, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59842, "node_name": "length", "Dec": "the number of bytes in the parameter data ."}{"idx": 59844, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59845, "node_name": "x", "Dec": "a blob object that maps an sql blob value"}{"idx": 59847, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59848, "node_name": "inputstream", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59850, "node_name": "i", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59851, "node_name": "x", "Dec": "an object representing a clob"}{"idx": 59853, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59854, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59855, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59857, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59858, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59860, "node_name": "parametername", "Dec": "the name of the parameter to be set"}{"idx": 59861, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59862, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59864, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59865, "node_name": "x", "Dec": "a clob object that maps an sql clob value"}{"idx": 59867, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59868, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59870, "node_name": "i", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59871, "node_name": "x", "Dec": "an object representing an sql array"}{"idx": 59873, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59874, "node_name": "x", "Dec": "the parameter value"}{"idx": 59875, "node_name": "cal", "Dec": "the java.util.calendar object to use for calculating the date"}{"idx": 59877, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59878, "node_name": "x", "Dec": "the parameter value"}{"idx": 59880, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59881, "node_name": "x", "Dec": "the parameter value"}{"idx": 59882, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the date"}{"idx": 59884, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59885, "node_name": "x", "Dec": "the parameter value"}{"idx": 59886, "node_name": "cal", "Dec": "the java.util.calendar object to use for calculating the time"}{"idx": 59888, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59889, "node_name": "x", "Dec": "the parameter value"}{"idx": 59891, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59892, "node_name": "x", "Dec": "the parameter value"}{"idx": 59893, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the time"}{"idx": 59895, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59896, "node_name": "x", "Dec": "the parameter value"}{"idx": 59897, "node_name": "cal", "Dec": "the java.util.calendar object to use for calculating the timestamp"}{"idx": 59899, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59900, "node_name": "x", "Dec": "the parameter value"}{"idx": 59901, "node_name": "cal", "Dec": "the calendar object the driver will use to construct the timestamp"}{"idx": 59905, "node_name": "listener", "Dec": "a component that has implemented the rowsetlistener interface and wants to be notified when events occur on this rowset object"}{"idx": 59907, "node_name": "listener", "Dec": "a component that has been registered as a listener for this rowset object"}{"idx": 59909, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59910, "node_name": "xmlobject", "Dec": "a sqlxml object that maps an sql xml value"}{"idx": 59912, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59913, "node_name": "xmlobject", "Dec": "a sqlxml object that maps an sql xml value"}{"idx": 59915, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59916, "node_name": "x", "Dec": "the parameter value"}{"idx": 59918, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59919, "node_name": "x", "Dec": "the parameter value"}{"idx": 59921, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 59922, "node_name": "value", "Dec": "the parameter value"}{"idx": 59924, "node_name": "parametername", "Dec": "the name of the column to be set"}{"idx": 59925, "node_name": "value", "Dec": "the parameter value"}{"idx": 59927, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 59928, "node_name": "value", "Dec": "the parameter value"}{"idx": 59929, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59931, "node_name": "parametername", "Dec": "the name of the column to be set"}{"idx": 59932, "node_name": "value", "Dec": "the parameter value"}{"idx": 59933, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59935, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59936, "node_name": "value", "Dec": "the parameter value"}{"idx": 59938, "node_name": "parametername", "Dec": "the name of the column to be set"}{"idx": 59939, "node_name": "value", "Dec": "the parameter value"}{"idx": 59941, "node_name": "parametername", "Dec": "the name of the parameter to be set"}{"idx": 59942, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59943, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59945, "node_name": "parametername", "Dec": "the name of the parameter"}{"idx": 59946, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59948, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59949, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59950, "node_name": "length", "Dec": "the number of characters in the parameter data ."}{"idx": 59952, "node_name": "parameterindex", "Dec": "of the first parameter is 1 , the second is 2 , ..."}{"idx": 59953, "node_name": "value", "Dec": "the parameter value"}{"idx": 59955, "node_name": "parameterindex", "Dec": "index of the first parameter is 1 , the second is 2 , ..."}{"idx": 59956, "node_name": "reader", "Dec": "an object that contains the data to set the parameter value to ."}{"idx": 59958, "node_name": "parameterindex", "Dec": "the first parameter is 1 , the second is 2 , ..."}{"idx": 59959, "node_name": "x", "Dec": "the java.net.url object to be set"}{"idx": 59962, "node_name": "rs", "Dec": "the rowset to be evaluated"}{"idx": 59964, "node_name": "value", "Dec": "an object value which needs to be checked , whether it can be part of this filterrowset object ."}{"idx": 59965, "node_name": "column", "Dec": "a int object that must match the sql index of a column in this rowset object . this must have been passed to predicate as one of the columns for filtering while initializing a predicate"}{"idx": 59967, "node_name": "value", "Dec": "an object value which needs to be checked , whether it can be part of this filterrowset ."}{"idx": 59968, "node_name": "columnname", "Dec": "a string object that must match the sql name of a column in this rowset , ignoring case . this must have been passed to predicate as one of the columns for filtering while initializing a predicate"}{"idx": 59978, "node_name": "columncount", "Dec": "an int giving the number of columns in the rowset object"}{"idx": 59980, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns in the rowset , inclusive"}{"idx": 59981, "node_name": "property", "Dec": "true if the given column is automatically incremented ; false otherwise"}{"idx": 59983, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns in the rowset , inclusive"}{"idx": 59984, "node_name": "property", "Dec": "true to indicate that the column name is case sensitive ; false otherwise"}{"idx": 59986, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns in the rowset , inclusive"}{"idx": 59987, "node_name": "property", "Dec": "true to indicate that a column value can be used in a where clause ; false otherwise"}{"idx": 59989, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive between 1 and the number of columns , inclusive"}{"idx": 59990, "node_name": "property", "Dec": "true if the value is a cash value ; false otherwise ."}{"idx": 59992, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 59993, "node_name": "property", "Dec": "one of the following resultsetmetadata constants : columnnonulls , columnnullable , or columnnullableunknown"}{"idx": 59995, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 59996, "node_name": "property", "Dec": "true to indicate that a column value is a signed number ; false to indicate that it is not"}{"idx": 59998, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 59999, "node_name": "size", "Dec": "the maximum size of the column in chars ; must be 0 or more"}{"idx": 60001, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60002, "node_name": "label", "Dec": "the column label to be used in printouts and displays ; if the column label is null , an empty string is set"}{"idx": 60004, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60005, "node_name": "columnname", "Dec": "a string object indicating the column name ; if the given name is null , an empty string is set"}{"idx": 60007, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60008, "node_name": "schemaname", "Dec": "the schema name for the table from which a value in the designated column was derived ; may be an empty string or null"}{"idx": 60010, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60011, "node_name": "precision", "Dec": "the total number of decimal digits ; must be 0 or more"}{"idx": 60013, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60014, "node_name": "scale", "Dec": "the number of digits to the right of the decimal point ; must be zero or greater"}{"idx": 60016, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60017, "node_name": "tablename", "Dec": "the column's table name ; may be null or an empty string"}{"idx": 60019, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60020, "node_name": "catalogname", "Dec": "the column's table's catalog name ; if the catalogname is null , an empty string is set"}{"idx": 60022, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60023, "node_name": "sqltype", "Dec": "the designated column's sql type , which must be one of the constants in the class java.sql.types"}{"idx": 60025, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60026, "node_name": "typename", "Dec": "the data source-specific type name ; if typename is null , an empty string is set"}{"idx": 60029, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60031, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60033, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60035, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60037, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60039, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60041, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60043, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60045, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60047, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60049, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60051, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60053, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60055, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60057, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60059, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60061, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60063, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60065, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60067, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , and so on ; must be between 1 and the number of columns , inclusive"}{"idx": 60069, "node_name": "iface", "Dec": "a class defining an interface that the result must implement ."}{"idx": 60071, "node_name": "interfaces", "Dec": "a class defining an interface ."}{"idx": 60076, "node_name": "factoryclassname", "Dec": "fully qualified factory class name that provides an implementation of javax.sql.rowset.rowsetfactory ."}{"idx": 60077, "node_name": "cl", "Dec": "classloader used to load the factory class . if null current thread's context classloader is used to load the factory class ."}{"idx": 60080, "node_name": "reason", "Dec": "a string object giving a description of the warning ; if the string is null , <init>(java.lang.String) behaves like the default ( zero parameter ) rowsetwarning constructor"}{"idx": 60083, "node_name": "reason", "Dec": "a string giving a description of the warning ;"}{"idx": 60084, "node_name": "sqlstate", "Dec": "an xopen code identifying the warning ; if a non standard xopen sqlstate is supplied , no exception is thrown ."}{"idx": 60086, "node_name": "reason", "Dec": "a string giving a description of the warning ;"}{"idx": 60087, "node_name": "sqlstate", "Dec": "an xopen code identifying the warning ; if a non standard xopen sqlstate is supplied , no exception is thrown ."}{"idx": 60088, "node_name": "vendorcode", "Dec": "a database vendor-specific warning code"}{"idx": 60091, "node_name": "warning", "Dec": "the rowsetwarning object to be set as the next warning ; if the rowsetwarning is null , this represents the finish point in the warning chain"}{"idx": 60094, "node_name": "array", "Dec": "the array object to be serialized"}{"idx": 60095, "node_name": "map", "Dec": "a java.util.map object in which each entry consists of 1 ) a string object giving the fully qualified name of a udt ( an sql structured type or distinct type ) and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped . the map parameter does not have any effect for blob , clob , datalink , or java_object types ."}{"idx": 60097, "node_name": "array", "Dec": "the array object to be serialized"}{"idx": 60101, "node_name": "map", "Dec": "a java.util.map object in which each entry consists of 1 ) a string object giving the fully qualified name of a udt and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped"}{"idx": 60103, "node_name": "index", "Dec": "the index into this serialarray object of the first element to be copied ; the index of the first element is 0"}{"idx": 60104, "node_name": "count", "Dec": "the number of consecutive elements to be copied , starting at the given index"}{"idx": 60106, "node_name": "index", "Dec": "the index into this serialarray object of the first element to be copied ; the index of the first element in the array is 0"}{"idx": 60107, "node_name": "count", "Dec": "the number of consecutive elements to be copied , starting at the given index"}{"idx": 60108, "node_name": "map", "Dec": "a java.util.map object in which each entry consists of 1 ) a string object giving the fully qualified name of a udt and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped"}{"idx": 60112, "node_name": "index", "Dec": "the index into this serialarray object of the first element to be copied ; the index of the first element in the array is 0"}{"idx": 60113, "node_name": "count", "Dec": "the number of consecutive elements to be copied , starting at the given index"}{"idx": 60115, "node_name": "map", "Dec": "a java.util.map object in which each entry consists of 1 ) a string object giving the fully qualified name of a udt and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped"}{"idx": 60118, "node_name": "index", "Dec": "the index into this serialarray object of the first element to be copied ; the index of the first element in the array is 0"}{"idx": 60119, "node_name": "count", "Dec": "the number of consecutive elements to be copied , starting at the given index"}{"idx": 60120, "node_name": "map", "Dec": "a java.util.map object in which each entry consists of 1 ) a string object giving the fully qualified name of a udt and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped"}{"idx": 60122, "node_name": "obj", "Dec": "the object to compare this serialarray against"}{"idx": 60127, "node_name": "b", "Dec": "the byte array containing the data for the blob object to be serialized"}{"idx": 60129, "node_name": "blob", "Dec": "the blob object from which this serialblob object is to be constructed ; cannot be null ."}{"idx": 60131, "node_name": "pos", "Dec": "the ordinal position of the first byte in this serialblob object to be copied ; numbering starts at 1 ; must not be less than 1 and must be less than or equal to the length of this serialblob object"}{"idx": 60132, "node_name": "length", "Dec": "the number of bytes to be copied"}{"idx": 60136, "node_name": "pattern", "Dec": "the pattern of bytes for which to search"}{"idx": 60137, "node_name": "start", "Dec": "the position of the byte in this serialblob object from which to begin the search ; the first position is 1 ; must not be less than 1 nor greater than the length of this serialblob object"}{"idx": 60139, "node_name": "pattern", "Dec": "the blob object for which to search ;"}{"idx": 60140, "node_name": "start", "Dec": "the position of the byte in this serialblob object from which to begin the search ; the first position is 1 ; must not be less than 1 nor greater than the length of this serialblob object"}{"idx": 60142, "node_name": "pos", "Dec": "the position in the sql blob value at which to start writing . the first position is 1 ; must not be less than 1 nor greater than the length of this serialblob object ."}{"idx": 60143, "node_name": "bytes", "Dec": "the array of bytes to be written to the blob value that this blob object represents"}{"idx": 60145, "node_name": "pos", "Dec": "the position in the blob object at which to start writing . the first position is 1 ; must not be less than 1 nor greater than the length of this serialblob object ."}{"idx": 60146, "node_name": "bytes", "Dec": "the array of bytes to be written to the blob value"}{"idx": 60147, "node_name": "offset", "Dec": "the offset in the byte array at which to start reading the bytes . the first offset position is 0 ; must not be less than 0 nor greater than the length of the byte array"}{"idx": 60148, "node_name": "length", "Dec": "the number of bytes to be written to the blob value from the array of bytes bytes ."}{"idx": 60150, "node_name": "pos", "Dec": "the position in the blob value at which to start writing"}{"idx": 60152, "node_name": "length", "Dec": "the length , in bytes , to which the blob value that this blob object represents should be truncated"}{"idx": 60154, "node_name": "pos", "Dec": "the offset to the first byte of the partial value to be retrieved . the first byte in the blob is at position 1"}{"idx": 60155, "node_name": "length", "Dec": "the length in bytes of the partial value to be retrieved"}{"idx": 60158, "node_name": "obj", "Dec": "the object to compare this serialblob against"}{"idx": 60163, "node_name": "ch", "Dec": "the char array representing the clob object to be serialized"}{"idx": 60165, "node_name": "clob", "Dec": "the clob object from which this serialclob object is to be constructed ; cannot be null"}{"idx": 60170, "node_name": "pos", "Dec": "the position of the first character in the substring to be copied ; the first character of the serialclob object is at position 1 ; must not be less than 1 , and the sum of the starting position and the length of the substring must be less than the length of this serialclob object"}{"idx": 60171, "node_name": "length", "Dec": "the number of characters in the substring to be returned ; must not be greater than the length of this serialclob object , and the sum of the starting position and the length of the substring must be less than the length of this serialclob object"}{"idx": 60173, "node_name": "searchstr", "Dec": "the string object for which to search"}{"idx": 60174, "node_name": "start", "Dec": "the position in this serialclob object at which to start the search ; the first position is 1 ; must not be less than 1 nor greater than the length of this serialclob object"}{"idx": 60176, "node_name": "searchstr", "Dec": "the clob object for which to search"}{"idx": 60177, "node_name": "start", "Dec": "the position in this serialclob object at which to begin the search ; the first position is 1 ; must not be less than 1 nor greater than the length of this serialclob object"}{"idx": 60179, "node_name": "pos", "Dec": "the position at which to start writing to the clob value that this serialclob object represents ; the first position is 1 ; must not be less than 1 nor greater than the length of this serialclob object"}{"idx": 60180, "node_name": "str", "Dec": "the string to be written to the clob value that this serialclob object represents"}{"idx": 60182, "node_name": "pos", "Dec": "the position at which to start writing to the clob value that this serialclob object represents ; the first position is 1 ; must not be less than 1 nor greater than the length of this serialclob object"}{"idx": 60183, "node_name": "str", "Dec": "the string to be written to the clob value that this clob object represents"}{"idx": 60184, "node_name": "offset", "Dec": "the offset into str to start reading the characters to be written"}{"idx": 60185, "node_name": "length", "Dec": "the number of characters to be written"}{"idx": 60187, "node_name": "pos", "Dec": "the position at which to start writing to the clob object"}{"idx": 60189, "node_name": "pos", "Dec": "the position at which to start writing to the clob value"}{"idx": 60191, "node_name": "length", "Dec": "the length , in bytes , to which the clob value should be truncated"}{"idx": 60193, "node_name": "pos", "Dec": "the offset to the first character of the partial value to be retrieved . the first character in the serialclob is at position 1 ."}{"idx": 60194, "node_name": "length", "Dec": "the length in characters of the partial value to be retrieved ."}{"idx": 60197, "node_name": "obj", "Dec": "the object to compare this serialclob against"}{"idx": 60202, "node_name": "url", "Dec": "the url to create the serialdatalink from"}{"idx": 60205, "node_name": "obj", "Dec": "the object to compare this serialdatalink against"}{"idx": 60211, "node_name": "msg", "Dec": "the detail message"}{"idx": 60214, "node_name": "obj", "Dec": "the java object to be serialized"}{"idx": 60218, "node_name": "o", "Dec": "the object to compare this serialjavaobject against"}{"idx": 60223, "node_name": "ref", "Dec": "a ref object ; cannot be null"}{"idx": 60226, "node_name": "map", "Dec": "a java.util.map object containing zero or more entries , with each entry consisting of 1 ) a string giving the fully qualified name of a udt and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped"}{"idx": 60229, "node_name": "obj", "Dec": "an object representing the sql structured type to be referenced"}{"idx": 60231, "node_name": "obj", "Dec": "the object to compare this serialref against"}{"idx": 60236, "node_name": "in", "Dec": "an instance of struct"}{"idx": 60237, "node_name": "map", "Dec": "a java.util.map object in which each entry consists of 1 ) a string object giving the fully qualified name of a udt and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped"}{"idx": 60239, "node_name": "in", "Dec": "an instance of the sqldata class that defines the mapping of the sql structured type to one or more objects in the java programming language"}{"idx": 60240, "node_name": "map", "Dec": "a java.util.map object in which each entry consists of 1 ) a string object giving the fully qualified name of a udt and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped"}{"idx": 60244, "node_name": "map", "Dec": "a java.util.map object in which each entry consists of 1 ) a string object giving the fully qualified name of a udt and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped"}{"idx": 60246, "node_name": "obj", "Dec": "the object to compare this serialstruct against"}{"idx": 60251, "node_name": "attributes", "Dec": "an array of object instances in which each element is an attribute of a udt . the order of the attributes in the array is the same order in which the attributes were defined in the udt definition ."}{"idx": 60252, "node_name": "map", "Dec": "a java.util.map object containing zero or more entries , with each entry consisting of 1 ) a string giving the fully qualified name of the udt and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped"}{"idx": 60282, "node_name": "attributes", "Dec": "a vector object containing the attributes of the udt to be mapped to one or more objects in the java programming language"}{"idx": 60283, "node_name": "map", "Dec": "a java.util.map object containing zero or more entries , with each entry consisting of 1 ) a string giving the fully qualified name of a udt and 2 ) the class object for the sqldata implementation that defines how the udt is to be mapped"}{"idx": 60285, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60287, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60289, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60291, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60293, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60295, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60297, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60299, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60301, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60303, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60305, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60307, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60309, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60311, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60313, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60315, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60317, "node_name": "x", "Dec": "the object representing data of an sql structured or distinct type"}{"idx": 60319, "node_name": "x", "Dec": "an object representing an sql ref value"}{"idx": 60321, "node_name": "x", "Dec": "an object representing an sql blob value"}{"idx": 60323, "node_name": "x", "Dec": "an object representing an sql clob value"}{"idx": 60325, "node_name": "x", "Dec": "an object representing the attributes of an sql structured type"}{"idx": 60327, "node_name": "x", "Dec": "an object representing an sql array value"}{"idx": 60329, "node_name": "url", "Dec": "an object representing a sql datalink value"}{"idx": 60331, "node_name": "x", "Dec": "the value to pass to the database"}{"idx": 60333, "node_name": "x", "Dec": "a nclob object representing data of an sql nclob value"}{"idx": 60335, "node_name": "x", "Dec": "a rowid object representing data of an sql rowid value"}{"idx": 60337, "node_name": "x", "Dec": "a sqlxml object representing data of an sql xml value"}{"idx": 60343, "node_name": "providerid", "Dec": "a string object with the unique id of the synchronization provider being registered"}{"idx": 60346, "node_name": "providerid", "Dec": "the unique-id of the synchronization provider"}{"idx": 60348, "node_name": "providerid", "Dec": "the unique identifier of the provider"}{"idx": 60351, "node_name": "logger", "Dec": "a logger object instance"}{"idx": 60353, "node_name": "logger", "Dec": "a logger object instance"}{"idx": 60354, "node_name": "level", "Dec": "a level object instance indicating the degree of logging required"}{"idx": 60357, "node_name": "ctx", "Dec": "a valid jndi context"}{"idx": 60361, "node_name": "msg", "Dec": "the detail message ."}{"idx": 60380, "node_name": "datasource_lock", "Dec": "one of the following constants indicating the severity level of data source lock required : syncprovider.datasource_no_lock , syncprovider.datasource_row_lock , syncprovider.datasource_table_lock , syncprovider.datasource_db_lock ,"}{"idx": 60388, "node_name": "msg", "Dec": "the detail message"}{"idx": 60390, "node_name": "syncresolver", "Dec": "the syncresolver instance used to to process the synchronization conflicts"}{"idx": 60393, "node_name": "syncresolver", "Dec": "the syncresolver object to be set ; cannot be null"}{"idx": 60401, "node_name": "index", "Dec": "an int designating the column in this row of this syncresolver object from which to retrieve the value causing a conflict"}{"idx": 60403, "node_name": "columnname", "Dec": "a string object designating the column in this row of this syncresolver object from which to retrieve the value causing a conflict"}{"idx": 60405, "node_name": "index", "Dec": "an int giving the number of the column into which to set the value to be persisted"}{"idx": 60406, "node_name": "obj", "Dec": "an object that is the value to be set in the rowset object and persisted in the data source"}{"idx": 60408, "node_name": "columnname", "Dec": "a string object giving the name of the column into which to set the value to be persisted"}{"idx": 60409, "node_name": "obj", "Dec": "an object that is the value to be set in the rowset object and persisted in the data source"}{"idx": 60416, "node_name": "s", "Dec": "a savepoint object marking a savepoint in the current transaction . all changes made before s was set will be undone . all changes made after s was set will be made permanent ."}{"idx": 60419, "node_name": "caller", "Dec": "the webrowset object to be parsed , whose xmlreader field must contain a reference to this xmlreader object"}{"idx": 60420, "node_name": "reader", "Dec": "the java.io.reader object from which caller will be read"}{"idx": 60423, "node_name": "caller", "Dec": "the webrowset instance to be written , for which this xmlwriter object is the writer"}{"idx": 60424, "node_name": "writer", "Dec": "the java.io.writer object that serves as the output stream for writing caller as an xml document"}{"idx": 60429, "node_name": "reader", "Dec": "the java.io.reader stream from which this webrowset object will be populated"}{"idx": 60431, "node_name": "istream", "Dec": "the java.io.inputstream from which this webrowset object will be populated"}{"idx": 60433, "node_name": "rs", "Dec": "the resultset object with which to populate this webrowset object"}{"idx": 60434, "node_name": "writer", "Dec": "the java.io.writer object to write to ."}{"idx": 60436, "node_name": "rs", "Dec": "the resultset object with which to populate this webrowset object"}{"idx": 60437, "node_name": "ostream", "Dec": "the java.io.outputstream to write to"}{"idx": 60439, "node_name": "writer", "Dec": "the java.io.writer stream to write to"}{"idx": 60441, "node_name": "ostream", "Dec": "the java.io.outputstream stream to write to"}{"idx": 60444, "node_name": "source", "Dec": "the rowset object whose data has changed or whose cursor has moved"}{"idx": 60449, "node_name": "md", "Dec": "the rowsetmetadata object that will be set with information about the rowset's columns"}{"idx": 60454, "node_name": "event", "Dec": "a rowsetevent object that contains the rowset object that is the source of the event"}{"idx": 60456, "node_name": "event", "Dec": "a rowsetevent object that contains the rowset object that is the source of the event"}{"idx": 60458, "node_name": "event", "Dec": "a rowsetevent object that contains the rowset object that is the source of the event"}{"idx": 60461, "node_name": "columncount", "Dec": "the number of columns in the rowset object"}{"idx": 60463, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60464, "node_name": "property", "Dec": "true if the column is automatically numbered ; false if it is not"}{"idx": 60466, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60467, "node_name": "property", "Dec": "true if the column is case sensitive ; false if it is not"}{"idx": 60469, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60470, "node_name": "property", "Dec": "true if the column can be used in a where clause ; false if it cannot"}{"idx": 60472, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60473, "node_name": "property", "Dec": "true if the column is a cash value ; false if it is not"}{"idx": 60475, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60476, "node_name": "property", "Dec": "one of the following constants : resultsetmetadata.columnnonulls , resultsetmetadata.columnnullable , or resultsetmetadata.columnnullableunknown"}{"idx": 60478, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60479, "node_name": "property", "Dec": "true if the column is a signed number ; false if it is not"}{"idx": 60481, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60482, "node_name": "size", "Dec": "the normal maximum number of characters for the designated column"}{"idx": 60484, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60485, "node_name": "label", "Dec": "the column title"}{"idx": 60487, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60488, "node_name": "columnname", "Dec": "the designated column's name"}{"idx": 60490, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60491, "node_name": "schemaname", "Dec": "the schema name"}{"idx": 60493, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60494, "node_name": "precision", "Dec": "the total number of decimal digits"}{"idx": 60496, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60497, "node_name": "scale", "Dec": "the number of digits to right of decimal point"}{"idx": 60499, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60500, "node_name": "tablename", "Dec": "the column's table name"}{"idx": 60502, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60503, "node_name": "catalogname", "Dec": "the column's catalog name"}{"idx": 60505, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60506, "node_name": "sqltype", "Dec": "the column's sql type"}{"idx": 60508, "node_name": "columnindex", "Dec": "the first column is 1 , the second is 2 , ..."}{"idx": 60509, "node_name": "typename", "Dec": "data source specific type name ."}{"idx": 60512, "node_name": "caller", "Dec": "the rowset object ( 1 ) that has implemented the rowsetinternal interface , ( 2 ) with which this reader is registered , and ( 3 ) whose execute method called this reader"}{"idx": 60515, "node_name": "caller", "Dec": "the rowset object ( 1 ) that has implemented the rowsetinternal interface , ( 2 ) with which this writer is registered , and ( 3 ) that called writeData(javax.sql.RowSetInternal) internally"}{"idx": 60518, "node_name": "con", "Dec": "the pooledconnection that the closed or invalid preparedstatementis associated with ."}{"idx": 60519, "node_name": "statement", "Dec": "the preparedstatement that is being closed or is invalid"}{"idx": 60521, "node_name": "con", "Dec": "the pooledconnection that the closed or invalid preparedstatement is associated with ."}{"idx": 60522, "node_name": "statement", "Dec": "the preparedstatement that is being closed or is invalid"}{"idx": 60523, "node_name": "exception", "Dec": "the sqlexception the driver is about to throw to the application"}{"idx": 60528, "node_name": "event", "Dec": "an event object describing the source of the event and that the preparedstatement was closed ."}{"idx": 60530, "node_name": "event", "Dec": "an event object describing the source of the event , the statement that is invalid and the exception the driver is about to throw . the source of the event is the pooledconnection which the invalid preparedstatement is associated with ."}{"idx": 60535, "node_name": "username", "Dec": "the database user on whose behalf the connection is being made"}{"idx": 60537, "node_name": "password", "Dec": "the password to use for this connection . may be null"}{"idx": 60539, "node_name": "shardingkey", "Dec": "the shardingkey . may be null"}{"idx": 60541, "node_name": "supershardingkey", "Dec": "the supershardingkey . may be null"}{"idx": 60546, "node_name": "user", "Dec": "the database user on whose behalf the connection is being made"}{"idx": 60547, "node_name": "password", "Dec": "the user's password"}{"idx": 60550, "node_name": "out", "Dec": "the new log writer ; to disable logging , set to null"}{"idx": 60552, "node_name": "seconds", "Dec": "the data source login time limit"}{"idx": 60560, "node_name": "name", "Dec": "the name ( action.name ) for the action ; a value of null is ignored"}{"idx": 60562, "node_name": "name", "Dec": "the name ( action.name ) for the action ; a value of null is ignored"}{"idx": 60563, "node_name": "icon", "Dec": "the small icon ( action.small_icon ) for the action ; a value of null is ignored"}{"idx": 60565, "node_name": "key", "Dec": "a string containing the specified key"}{"idx": 60567, "node_name": "key", "Dec": "the string that identifies the stored object"}{"idx": 60568, "node_name": "newvalue", "Dec": "the object to store using this key"}{"idx": 60571, "node_name": "newvalue", "Dec": "true to enable the action , false to disable it"}{"idx": 60574, "node_name": "propertyname", "Dec": "the name of the property that has changed"}{"idx": 60575, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 60576, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 60578, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 60580, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 60593, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 60595, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 60598, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 60602, "node_name": "p", "Dec": "the point in local coordinates"}{"idx": 60604, "node_name": "i", "Dec": "the index into the string"}{"idx": 60608, "node_name": "part", "Dec": "the accessibletext.character , accessibletext.word , or accessibletext.sentence to retrieve"}{"idx": 60609, "node_name": "index", "Dec": "an index within the text > = 0"}{"idx": 60611, "node_name": "part", "Dec": "the accessibletext.character , accessibletext.word , or accessibletext.sentence to retrieve"}{"idx": 60612, "node_name": "index", "Dec": "an index within the text > = 0"}{"idx": 60614, "node_name": "part", "Dec": "the accessibletext.character , accessibletext.word , or accessibletext.sentence to retrieve"}{"idx": 60615, "node_name": "index", "Dec": "an index within the text > = 0"}{"idx": 60617, "node_name": "i", "Dec": "the zero-based index into the text"}{"idx": 60652, "node_name": "hideactiontext", "Dec": "true if the button's text property should not reflect that of the action ; the default is false"}{"idx": 60656, "node_name": "text", "Dec": "the string used to set the text"}{"idx": 60659, "node_name": "b", "Dec": "true if the button is selected , otherwise false"}{"idx": 60662, "node_name": "presstime", "Dec": "the time to \" hold down \" the button , in milliseconds"}{"idx": 60664, "node_name": "m", "Dec": "the space between the border and the label"}{"idx": 60668, "node_name": "defaulticon", "Dec": "the icon used as the default image"}{"idx": 60671, "node_name": "pressedicon", "Dec": "the icon used as the \" pressed \" image"}{"idx": 60674, "node_name": "selectedicon", "Dec": "the icon used as the \" selected \" image"}{"idx": 60677, "node_name": "rollovericon", "Dec": "the icon used as the \" rollover \" image"}{"idx": 60680, "node_name": "rolloverselectedicon", "Dec": "the icon used as the \" selected rollover \" image"}{"idx": 60683, "node_name": "disabledicon", "Dec": "the icon used as the disabled image"}{"idx": 60686, "node_name": "disabledselectedicon", "Dec": "the icon used as the disabled selection image"}{"idx": 60689, "node_name": "alignment", "Dec": "one of the following values : swingconstants.center ( the default ) swingconstants.top swingconstants.bottom"}{"idx": 60692, "node_name": "alignment", "Dec": "the alignment value , one of the following values : swingconstants.right swingconstants.left swingconstants.center swingconstants.leading swingconstants.trailing"}{"idx": 60695, "node_name": "textposition", "Dec": "one of the following values : swingconstants.center ( the default ) swingconstants.top swingconstants.bottom"}{"idx": 60698, "node_name": "textposition", "Dec": "one of the following values : swingconstants.right swingconstants.left swingconstants.center swingconstants.leading swingconstants.trailing ( the default )"}{"idx": 60701, "node_name": "icontextgap", "Dec": "the space between icon and text if these properties are set ."}{"idx": 60703, "node_name": "key", "Dec": "the property value to check"}{"idx": 60704, "node_name": "exception", "Dec": "the message to use in the illegalargumentexception that is thrown for an invalid value"}{"idx": 60706, "node_name": "key", "Dec": "the property value to check"}{"idx": 60707, "node_name": "exception", "Dec": "the message to use in the illegalargumentexception that is thrown for an invalid value"}{"idx": 60710, "node_name": "actioncommand", "Dec": "the action command for this button"}{"idx": 60713, "node_name": "a", "Dec": "the action for the abstractbutton , or null"}{"idx": 60716, "node_name": "a", "Dec": "the action from which to get the properties , or null"}{"idx": 60718, "node_name": "action", "Dec": "the action associated with this button"}{"idx": 60719, "node_name": "propertyname", "Dec": "the name of the property that changed"}{"idx": 60721, "node_name": "a", "Dec": "the button's action"}{"idx": 60724, "node_name": "b", "Dec": "if true and border property is not null , the border is painted"}{"idx": 60726, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 60729, "node_name": "b", "Dec": "if true , the focus state should be painted"}{"idx": 60732, "node_name": "b", "Dec": "if true , the content should be filled ; if false the content area is not filled"}{"idx": 60735, "node_name": "b", "Dec": "if true , rollover effects should be painted"}{"idx": 60738, "node_name": "mnemonic", "Dec": "the key code which represents the mnemonic"}{"idx": 60740, "node_name": "mnemonic", "Dec": "a char specifying the mnemonic value"}{"idx": 60742, "node_name": "index", "Dec": "index into the string to underline"}{"idx": 60745, "node_name": "threshhold", "Dec": "the amount of time required between mouse press events to generate corresponding action events"}{"idx": 60749, "node_name": "newmodel", "Dec": "the new buttonmodel"}{"idx": 60752, "node_name": "ui", "Dec": "the buttonui l&f object"}{"idx": 60755, "node_name": "comp", "Dec": "the component to be added"}{"idx": 60756, "node_name": "constraints", "Dec": "an object expressing layout constraints for this component"}{"idx": 60757, "node_name": "index", "Dec": "the position in the container's list at which to insert the component , where -1 means append to the end"}{"idx": 60759, "node_name": "mgr", "Dec": "the specified layout manager"}{"idx": 60761, "node_name": "l", "Dec": "the listener to be added"}{"idx": 60763, "node_name": "l", "Dec": "the listener to be removed"}{"idx": 60767, "node_name": "l", "Dec": "the actionlistener to be added"}{"idx": 60769, "node_name": "l", "Dec": "the listener to be removed"}{"idx": 60773, "node_name": "event", "Dec": "the actionevent object"}{"idx": 60775, "node_name": "event", "Dec": "the itemevent object"}{"idx": 60779, "node_name": "b", "Dec": "true to enable the button , otherwise false"}{"idx": 60781, "node_name": "l", "Dec": "the itemlistener to be added"}{"idx": 60783, "node_name": "l", "Dec": "the itemlistener to be removed"}{"idx": 60787, "node_name": "text", "Dec": "the text of the button"}{"idx": 60788, "node_name": "icon", "Dec": "the icon image to display on the button"}{"idx": 60790, "node_name": "img", "Dec": "the image to be compared"}{"idx": 60791, "node_name": "infoflags", "Dec": "flags used to repaint the button when the image is updated and which determine how much is to be painted"}{"idx": 60792, "node_name": "x", "Dec": "the x coordinate"}{"idx": 60793, "node_name": "y", "Dec": "the y coordinate"}{"idx": 60794, "node_name": "w", "Dec": "the width"}{"idx": 60795, "node_name": "h", "Dec": "the height"}{"idx": 60802, "node_name": "e", "Dec": "an event object"}{"idx": 60804, "node_name": "anevent", "Dec": "an event object"}{"idx": 60808, "node_name": "l", "Dec": "the new listener to be added"}{"idx": 60810, "node_name": "l", "Dec": "the listener to be removed"}{"idx": 60818, "node_name": "l", "Dec": "the listdatalistener to be added"}{"idx": 60820, "node_name": "l", "Dec": "the listdatalistener to be removed"}{"idx": 60823, "node_name": "source", "Dec": "the listmodel that changed , typically \" this \""}{"idx": 60824, "node_name": "index0", "Dec": "one end of the new interval"}{"idx": 60825, "node_name": "index1", "Dec": "the other end of the new interval"}{"idx": 60827, "node_name": "source", "Dec": "the listmodel that changed , typically \" this \""}{"idx": 60828, "node_name": "index0", "Dec": "one end of the new interval"}{"idx": 60829, "node_name": "index1", "Dec": "the other end of the new interval"}{"idx": 60831, "node_name": "source", "Dec": "the listmodel that changed , typically \" this \""}{"idx": 60832, "node_name": "index0", "Dec": "one end of the removed interval , including index0"}{"idx": 60833, "node_name": "index1", "Dec": "the other end of the removed interval , including index1"}{"idx": 60835, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 60840, "node_name": "l", "Dec": "the changelistener to add"}{"idx": 60842, "node_name": "l", "Dec": "the changelistener to remove"}{"idx": 60846, "node_name": "listenertype", "Dec": "the type of listeners to return , e.g. changelistener.class"}{"idx": 60860, "node_name": "key", "Dec": "a string containing the key"}{"idx": 60862, "node_name": "key", "Dec": "a string containing the key"}{"idx": 60863, "node_name": "value", "Dec": "an object value"}{"idx": 60865, "node_name": "b", "Dec": "true to enable this action , false to disable it"}{"idx": 60868, "node_name": "sender", "Dec": "the object to check , can be null"}{"idx": 60870, "node_name": "listener", "Dec": "a propertychangelistener object"}{"idx": 60872, "node_name": "listener", "Dec": "a propertychangelistener object"}{"idx": 60876, "node_name": "map", "Dec": "the actionmap that is the parent of this one"}{"idx": 60879, "node_name": "key", "Dec": "a key"}{"idx": 60880, "node_name": "action", "Dec": "a binding for key"}{"idx": 60882, "node_name": "key", "Dec": "a key"}{"idx": 60884, "node_name": "key", "Dec": "a key"}{"idx": 60892, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 60893, "node_name": "g", "Dec": "the paint graphics"}{"idx": 60894, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 60895, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 60896, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 60897, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 60899, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 60901, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 60902, "node_name": "insets", "Dec": "the object to be reinitialized"}{"idx": 60905, "node_name": "c", "Dec": "the component for which this border is being computed"}{"idx": 60906, "node_name": "x", "Dec": "the x position of the border"}{"idx": 60907, "node_name": "y", "Dec": "the y position of the border"}{"idx": 60908, "node_name": "width", "Dec": "the width of the border"}{"idx": 60909, "node_name": "height", "Dec": "the height of the border"}{"idx": 60911, "node_name": "c", "Dec": "the component for which this border is being computed"}{"idx": 60912, "node_name": "b", "Dec": "the border object"}{"idx": 60913, "node_name": "x", "Dec": "the x position of the border"}{"idx": 60914, "node_name": "y", "Dec": "the y position of the border"}{"idx": 60915, "node_name": "width", "Dec": "the width of the border"}{"idx": 60916, "node_name": "height", "Dec": "the height of the border"}{"idx": 60918, "node_name": "c", "Dec": "component baseline is being requested for"}{"idx": 60919, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 60920, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 60922, "node_name": "c", "Dec": "component to return baseline resize behavior for"}{"idx": 60932, "node_name": "beveltype", "Dec": "the type of bevel for the border"}{"idx": 60934, "node_name": "beveltype", "Dec": "the type of bevel for the border"}{"idx": 60935, "node_name": "highlight", "Dec": "the color to use for the bevel highlight"}{"idx": 60936, "node_name": "shadow", "Dec": "the color to use for the bevel shadow"}{"idx": 60938, "node_name": "beveltype", "Dec": "the type of bevel for the border"}{"idx": 60939, "node_name": "highlightoutercolor", "Dec": "the color to use for the bevel outer highlight"}{"idx": 60940, "node_name": "highlightinnercolor", "Dec": "the color to use for the bevel inner highlight"}{"idx": 60941, "node_name": "shadowoutercolor", "Dec": "the color to use for the bevel outer shadow"}{"idx": 60942, "node_name": "shadowinnercolor", "Dec": "the color to use for the bevel inner shadow"}{"idx": 60944, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 60945, "node_name": "g", "Dec": "the paint graphics"}{"idx": 60946, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 60947, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 60948, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 60949, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 60951, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 60952, "node_name": "insets", "Dec": "the object to be reinitialized"}{"idx": 60954, "node_name": "c", "Dec": "the component for which the highlight may be derived"}{"idx": 60956, "node_name": "c", "Dec": "the component for which the highlight may be derived"}{"idx": 60958, "node_name": "c", "Dec": "the component for which the shadow may be derived"}{"idx": 60960, "node_name": "c", "Dec": "the component for which the shadow may be derived"}{"idx": 60968, "node_name": "c", "Dec": "the component for which the raised bevel is being painted"}{"idx": 60969, "node_name": "g", "Dec": "the paint graphics"}{"idx": 60970, "node_name": "x", "Dec": "the x position of the raised bevel"}{"idx": 60971, "node_name": "y", "Dec": "the y position of the raised bevel"}{"idx": 60972, "node_name": "width", "Dec": "the width of the raised bevel"}{"idx": 60973, "node_name": "height", "Dec": "the height of the raised bevel"}{"idx": 60975, "node_name": "c", "Dec": "the component for which the lowered bevel is being painted"}{"idx": 60976, "node_name": "g", "Dec": "the paint graphics"}{"idx": 60977, "node_name": "x", "Dec": "the x position of the lowered bevel"}{"idx": 60978, "node_name": "y", "Dec": "the y position of the lowered bevel"}{"idx": 60979, "node_name": "width", "Dec": "the width of the lowered bevel"}{"idx": 60980, "node_name": "height", "Dec": "the height of the lowered bevel"}{"idx": 60983, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 60984, "node_name": "g", "Dec": "the paint graphics"}{"idx": 60985, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 60986, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 60987, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 60988, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 60990, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 60997, "node_name": "outsideborder", "Dec": "the outside border"}{"idx": 60998, "node_name": "insideborder", "Dec": "the inside border to be nested"}{"idx": 61001, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 61002, "node_name": "g", "Dec": "the paint graphics"}{"idx": 61003, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 61004, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 61005, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 61006, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 61008, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 61009, "node_name": "insets", "Dec": "the object to be reinitialized"}{"idx": 61018, "node_name": "top", "Dec": "the top inset of the border"}{"idx": 61019, "node_name": "left", "Dec": "the left inset of the border"}{"idx": 61020, "node_name": "bottom", "Dec": "the bottom inset of the border"}{"idx": 61021, "node_name": "right", "Dec": "the right inset of the border"}{"idx": 61023, "node_name": "borderinsets", "Dec": "the insets of the border"}{"idx": 61025, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 61026, "node_name": "g", "Dec": "the paint graphics"}{"idx": 61027, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 61028, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 61029, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 61030, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 61032, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 61033, "node_name": "insets", "Dec": "the object to be reinitialized"}{"idx": 61044, "node_name": "etchtype", "Dec": "the type of etch to be drawn by the border"}{"idx": 61046, "node_name": "highlight", "Dec": "the color to use for the etched highlight"}{"idx": 61047, "node_name": "shadow", "Dec": "the color to use for the etched shadow"}{"idx": 61049, "node_name": "etchtype", "Dec": "the type of etch to be drawn by the border"}{"idx": 61050, "node_name": "highlight", "Dec": "the color to use for the etched highlight"}{"idx": 61051, "node_name": "shadow", "Dec": "the color to use for the etched shadow"}{"idx": 61053, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 61054, "node_name": "g", "Dec": "the paint graphics"}{"idx": 61055, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 61056, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 61057, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 61058, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 61060, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 61061, "node_name": "insets", "Dec": "the object to be reinitialized"}{"idx": 61065, "node_name": "c", "Dec": "the component for which the highlight may be derived"}{"idx": 61068, "node_name": "c", "Dec": "the component for which the shadow may be derived"}{"idx": 61075, "node_name": "color", "Dec": "the color for the border"}{"idx": 61077, "node_name": "color", "Dec": "the color of the border"}{"idx": 61078, "node_name": "thickness", "Dec": "the thickness of the border"}{"idx": 61080, "node_name": "color", "Dec": "the color of the border"}{"idx": 61081, "node_name": "thickness", "Dec": "the thickness of the border"}{"idx": 61082, "node_name": "roundedcorners", "Dec": "whether or not border corners should be round"}{"idx": 61086, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 61087, "node_name": "g", "Dec": "the paint graphics"}{"idx": 61088, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 61089, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 61090, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 61091, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 61093, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 61094, "node_name": "insets", "Dec": "the object to be reinitialized"}{"idx": 61103, "node_name": "top", "Dec": "the top inset of the border"}{"idx": 61104, "node_name": "left", "Dec": "the left inset of the border"}{"idx": 61105, "node_name": "bottom", "Dec": "the bottom inset of the border"}{"idx": 61106, "node_name": "right", "Dec": "the right inset of the border"}{"idx": 61107, "node_name": "mattecolor", "Dec": "the color rendered for the border"}{"idx": 61109, "node_name": "borderinsets", "Dec": "the insets of the border"}{"idx": 61110, "node_name": "mattecolor", "Dec": "the color rendered for the border"}{"idx": 61112, "node_name": "top", "Dec": "the top inset of the border"}{"idx": 61113, "node_name": "left", "Dec": "the left inset of the border"}{"idx": 61114, "node_name": "bottom", "Dec": "the bottom inset of the border"}{"idx": 61115, "node_name": "right", "Dec": "the right inset of the border"}{"idx": 61116, "node_name": "tileicon", "Dec": "the icon to be used for tiling the border"}{"idx": 61118, "node_name": "borderinsets", "Dec": "the insets of the border"}{"idx": 61119, "node_name": "tileicon", "Dec": "the icon to be used for tiling the border"}{"idx": 61121, "node_name": "tileicon", "Dec": "the icon to be used for tiling the border"}{"idx": 61123, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 61124, "node_name": "g", "Dec": "the paint graphics"}{"idx": 61125, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 61126, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 61127, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 61128, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 61130, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 61131, "node_name": "insets", "Dec": "the object to be reinitialized"}{"idx": 61138, "node_name": "beveltype", "Dec": "the type of bevel for the border"}{"idx": 61140, "node_name": "beveltype", "Dec": "the type of bevel for the border"}{"idx": 61141, "node_name": "highlight", "Dec": "the color to use for the bevel highlight"}{"idx": 61142, "node_name": "shadow", "Dec": "the color to use for the bevel shadow"}{"idx": 61144, "node_name": "beveltype", "Dec": "the type of bevel for the border"}{"idx": 61145, "node_name": "highlightoutercolor", "Dec": "the color to use for the bevel outer highlight"}{"idx": 61146, "node_name": "highlightinnercolor", "Dec": "the color to use for the bevel inner highlight"}{"idx": 61147, "node_name": "shadowoutercolor", "Dec": "the color to use for the bevel outer shadow"}{"idx": 61148, "node_name": "shadowinnercolor", "Dec": "the color to use for the bevel inner shadow"}{"idx": 61150, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 61151, "node_name": "g", "Dec": "the paint graphics"}{"idx": 61152, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 61153, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 61154, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 61155, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 61157, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 61158, "node_name": "insets", "Dec": "the object to be reinitialized"}{"idx": 61162, "node_name": "stroke", "Dec": "the basicstroke object used to stroke a shape"}{"idx": 61164, "node_name": "stroke", "Dec": "the basicstroke object used to stroke a shape"}{"idx": 61165, "node_name": "paint", "Dec": "the paint object used to generate a color"}{"idx": 61167, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 61168, "node_name": "g", "Dec": "the paint graphics"}{"idx": 61169, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 61170, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 61171, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 61172, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 61174, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 61175, "node_name": "insets", "Dec": "the insets object to be reinitialized"}{"idx": 61202, "node_name": "title", "Dec": "the title the border should display"}{"idx": 61204, "node_name": "border", "Dec": "the border"}{"idx": 61206, "node_name": "border", "Dec": "the border"}{"idx": 61207, "node_name": "title", "Dec": "the title the border should display"}{"idx": 61209, "node_name": "border", "Dec": "the border"}{"idx": 61210, "node_name": "title", "Dec": "the title the border should display"}{"idx": 61211, "node_name": "titlejustification", "Dec": "the justification for the title"}{"idx": 61212, "node_name": "titleposition", "Dec": "the position for the title"}{"idx": 61214, "node_name": "border", "Dec": "the border"}{"idx": 61215, "node_name": "title", "Dec": "the title the border should display"}{"idx": 61216, "node_name": "titlejustification", "Dec": "the justification for the title"}{"idx": 61217, "node_name": "titleposition", "Dec": "the position for the title"}{"idx": 61218, "node_name": "titlefont", "Dec": "the font for rendering the title"}{"idx": 61220, "node_name": "border", "Dec": "the border"}{"idx": 61221, "node_name": "title", "Dec": "the title the border should display"}{"idx": 61222, "node_name": "titlejustification", "Dec": "the justification for the title"}{"idx": 61223, "node_name": "titleposition", "Dec": "the position for the title"}{"idx": 61224, "node_name": "titlefont", "Dec": "the font of the title"}{"idx": 61225, "node_name": "titlecolor", "Dec": "the color of the title"}{"idx": 61227, "node_name": "c", "Dec": "the component for which this border is being painted"}{"idx": 61228, "node_name": "g", "Dec": "the paint graphics"}{"idx": 61229, "node_name": "x", "Dec": "the x position of the painted border"}{"idx": 61230, "node_name": "y", "Dec": "the y position of the painted border"}{"idx": 61231, "node_name": "width", "Dec": "the width of the painted border"}{"idx": 61232, "node_name": "height", "Dec": "the height of the painted border"}{"idx": 61234, "node_name": "c", "Dec": "the component for which this border insets value applies"}{"idx": 61235, "node_name": "insets", "Dec": "the object to be reinitialized"}{"idx": 61244, "node_name": "title", "Dec": "the title for the border"}{"idx": 61246, "node_name": "border", "Dec": "the border"}{"idx": 61248, "node_name": "titleposition", "Dec": "the position for the border"}{"idx": 61250, "node_name": "titlejustification", "Dec": "the justification for the border"}{"idx": 61252, "node_name": "titlefont", "Dec": "the font for the border title"}{"idx": 61254, "node_name": "titlecolor", "Dec": "the color for the border title"}{"idx": 61256, "node_name": "c", "Dec": "the component where this border will be drawn"}{"idx": 61258, "node_name": "c", "Dec": "component baseline is being requested for"}{"idx": 61259, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 61260, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 61262, "node_name": "c", "Dec": "component to return baseline resize behavior for"}{"idx": 61264, "node_name": "c", "Dec": "the component"}{"idx": 61267, "node_name": "color", "Dec": "a color to use for the line"}{"idx": 61269, "node_name": "color", "Dec": "a color to use for the line"}{"idx": 61270, "node_name": "thickness", "Dec": "an integer specifying the width in pixels"}{"idx": 61272, "node_name": "color", "Dec": "the color of the border"}{"idx": 61273, "node_name": "thickness", "Dec": "the thickness of the border"}{"idx": 61274, "node_name": "rounded", "Dec": "whether or not border corners should be round"}{"idx": 61278, "node_name": "type", "Dec": "an integer specifying either bevelborder.lowered or bevelborder.raised"}{"idx": 61280, "node_name": "type", "Dec": "an integer specifying either bevelborder.lowered or bevelborder.raised"}{"idx": 61281, "node_name": "highlight", "Dec": "a color object for highlights"}{"idx": 61282, "node_name": "shadow", "Dec": "a color object for shadows"}{"idx": 61284, "node_name": "type", "Dec": "an integer specifying either bevelborder.lowered or bevelborder.raised"}{"idx": 61285, "node_name": "highlightouter", "Dec": "a color object for the outer edge of the highlight area"}{"idx": 61286, "node_name": "highlightinner", "Dec": "a color object for the inner edge of the highlight area"}{"idx": 61287, "node_name": "shadowouter", "Dec": "a color object for the outer edge of the shadow area"}{"idx": 61288, "node_name": "shadowinner", "Dec": "a color object for the inner edge of the shadow area"}{"idx": 61292, "node_name": "type", "Dec": "a type of a bevel"}{"idx": 61294, "node_name": "type", "Dec": "a type of a bevel"}{"idx": 61295, "node_name": "highlight", "Dec": "a basic color of the highlight area"}{"idx": 61296, "node_name": "shadow", "Dec": "a basic color of the shadow area"}{"idx": 61298, "node_name": "type", "Dec": "a type of a bevel"}{"idx": 61299, "node_name": "highlightouter", "Dec": "a color of the outer edge of the highlight area"}{"idx": 61300, "node_name": "highlightinner", "Dec": "a color of the inner edge of the highlight area"}{"idx": 61301, "node_name": "shadowouter", "Dec": "a color of the outer edge of the shadow area"}{"idx": 61302, "node_name": "shadowinner", "Dec": "a color of the inner edge of the shadow area"}{"idx": 61305, "node_name": "highlight", "Dec": "a color object for the border highlights"}{"idx": 61306, "node_name": "shadow", "Dec": "a color object for the border shadows"}{"idx": 61308, "node_name": "type", "Dec": "one of etchedborder.raised , or etchedborder.lowered"}{"idx": 61310, "node_name": "type", "Dec": "one of etchedborder.raised , or etchedborder.lowered"}{"idx": 61311, "node_name": "highlight", "Dec": "a color object for the border highlights"}{"idx": 61312, "node_name": "shadow", "Dec": "a color object for the border shadows"}{"idx": 61314, "node_name": "title", "Dec": "a string containing the text of the title"}{"idx": 61316, "node_name": "border", "Dec": "the border object to add the title to ; if null the border is determined by the current look and feel ."}{"idx": 61318, "node_name": "border", "Dec": "the border object to add the title to"}{"idx": 61319, "node_name": "title", "Dec": "a string containing the text of the title"}{"idx": 61321, "node_name": "border", "Dec": "the border object to add the title to"}{"idx": 61322, "node_name": "title", "Dec": "a string containing the text of the title"}{"idx": 61323, "node_name": "titlejustification", "Dec": "an integer specifying the justification of the title -- one of the following : titledborder.left titledborder.center titledborder.right titledborder.leading titledborder.trailing titledborder.default_justification ( leading )"}{"idx": 61324, "node_name": "titleposition", "Dec": "an integer specifying the vertical position of the text in relation to the border -- one of the following : titledborder.above_top titledborder.top ( sitting on the top line ) titledborder.below_top titledborder.above_bottom titledborder.bottom ( sitting on the bottom line ) titledborder.below_bottom titledborder.default_position ( the title position is determined by the current look and feel )"}{"idx": 61326, "node_name": "border", "Dec": "the border object to add the title to"}{"idx": 61327, "node_name": "title", "Dec": "a string containing the text of the title"}{"idx": 61328, "node_name": "titlejustification", "Dec": "an integer specifying the justification of the title -- one of the following : titledborder.left titledborder.center titledborder.right titledborder.leading titledborder.trailing titledborder.default_justification ( leading )"}{"idx": 61329, "node_name": "titleposition", "Dec": "an integer specifying the vertical position of the text in relation to the border -- one of the following : titledborder.above_top titledborder.top ( sitting on the top line ) titledborder.below_top titledborder.above_bottom titledborder.bottom ( sitting on the bottom line ) titledborder.below_bottom titledborder.default_position ( the title position is determined by the current look and feel )"}{"idx": 61330, "node_name": "titlefont", "Dec": "a font object specifying the title font"}{"idx": 61332, "node_name": "border", "Dec": "the border object to add the title to"}{"idx": 61333, "node_name": "title", "Dec": "a string containing the text of the title"}{"idx": 61334, "node_name": "titlejustification", "Dec": "an integer specifying the justification of the title -- one of the following : titledborder.left titledborder.center titledborder.right titledborder.leading titledborder.trailing titledborder.default_justification ( leading )"}{"idx": 61335, "node_name": "titleposition", "Dec": "an integer specifying the vertical position of the text in relation to the border -- one of the following : titledborder.above_top titledborder.top ( sitting on the top line ) titledborder.below_top titledborder.above_bottom titledborder.bottom ( sitting on the bottom line ) titledborder.below_bottom titledborder.default_position ( the title position is determined by the current look and feel )"}{"idx": 61336, "node_name": "titlefont", "Dec": "a font object specifying the title font"}{"idx": 61337, "node_name": "titlecolor", "Dec": "a color object specifying the title color"}{"idx": 61340, "node_name": "top", "Dec": "an integer specifying the width of the top , in pixels"}{"idx": 61341, "node_name": "left", "Dec": "an integer specifying the width of the left side , in pixels"}{"idx": 61342, "node_name": "bottom", "Dec": "an integer specifying the width of the bottom , in pixels"}{"idx": 61343, "node_name": "right", "Dec": "an integer specifying the width of the right side , in pixels"}{"idx": 61346, "node_name": "outsideborder", "Dec": "a border object for the outer edge of the compound border"}{"idx": 61347, "node_name": "insideborder", "Dec": "a border object for the inner edge of the compound border"}{"idx": 61349, "node_name": "top", "Dec": "an integer specifying the width of the top , in pixels"}{"idx": 61350, "node_name": "left", "Dec": "an integer specifying the width of the left side , in pixels"}{"idx": 61351, "node_name": "bottom", "Dec": "an integer specifying the width of the right side , in pixels"}{"idx": 61352, "node_name": "right", "Dec": "an integer specifying the width of the bottom , in pixels"}{"idx": 61353, "node_name": "color", "Dec": "a color to use for the border"}{"idx": 61355, "node_name": "top", "Dec": "an integer specifying the width of the top , in pixels"}{"idx": 61356, "node_name": "left", "Dec": "an integer specifying the width of the left side , in pixels"}{"idx": 61357, "node_name": "bottom", "Dec": "an integer specifying the width of the right side , in pixels"}{"idx": 61358, "node_name": "right", "Dec": "an integer specifying the width of the bottom , in pixels"}{"idx": 61359, "node_name": "tileicon", "Dec": "the icon object used for the border tiles"}{"idx": 61361, "node_name": "stroke", "Dec": "the basicstroke object used to stroke a shape"}{"idx": 61363, "node_name": "stroke", "Dec": "the basicstroke object used to stroke a shape"}{"idx": 61364, "node_name": "paint", "Dec": "the paint object used to generate a color"}{"idx": 61366, "node_name": "paint", "Dec": "the paint object used to generate a color"}{"idx": 61368, "node_name": "paint", "Dec": "the paint object used to generate a color"}{"idx": 61369, "node_name": "length", "Dec": "the relative length of a dash line"}{"idx": 61370, "node_name": "spacing", "Dec": "the relative spacing between dash lines"}{"idx": 61372, "node_name": "paint", "Dec": "the paint object used to generate a color"}{"idx": 61373, "node_name": "thickness", "Dec": "the width of a dash line"}{"idx": 61374, "node_name": "length", "Dec": "the relative length of a dash line"}{"idx": 61375, "node_name": "spacing", "Dec": "the relative spacing between dash lines"}{"idx": 61376, "node_name": "rounded", "Dec": "whether or not line ends should be round"}{"idx": 61380, "node_name": "newminimum", "Dec": "the model's new minimum"}{"idx": 61383, "node_name": "newmaximum", "Dec": "the model's new maximum"}{"idx": 61386, "node_name": "newvalue", "Dec": "the model's new value"}{"idx": 61388, "node_name": "b", "Dec": "true if the upcoming changes to the value property are part of a series"}{"idx": 61392, "node_name": "newextent", "Dec": "the model's new extent"}{"idx": 61394, "node_name": "value", "Dec": "an int giving the current value"}{"idx": 61395, "node_name": "extent", "Dec": "an int giving the amount by which the value can \" jump \""}{"idx": 61396, "node_name": "min", "Dec": "an int giving the minimum value"}{"idx": 61397, "node_name": "max", "Dec": "an int giving the maximum value"}{"idx": 61398, "node_name": "adjusting", "Dec": "a boolean , true if a series of changes are in progress"}{"idx": 61400, "node_name": "x", "Dec": "the changelistener to add"}{"idx": 61402, "node_name": "x", "Dec": "the changelistener to remove"}{"idx": 61411, "node_name": "min", "Dec": "minimum size"}{"idx": 61412, "node_name": "pref", "Dec": "preferred size"}{"idx": 61413, "node_name": "max", "Dec": "maximum size"}{"idx": 61415, "node_name": "min", "Dec": "value to return for getminimumsize"}{"idx": 61416, "node_name": "pref", "Dec": "value to return for getpreferredsize"}{"idx": 61417, "node_name": "max", "Dec": "value to return for getmaximumsize"}{"idx": 61419, "node_name": "g", "Dec": "the graphics to paint to"}{"idx": 61423, "node_name": "axis", "Dec": "can be boxlayout.x_axis , boxlayout.y_axis , boxlayout.line_axis or boxlayout.page_axis ."}{"idx": 61427, "node_name": "d", "Dec": "the dimensions of the invisible component"}{"idx": 61429, "node_name": "width", "Dec": "the width of the invisible component , in pixels > = 0"}{"idx": 61431, "node_name": "height", "Dec": "the height of the invisible component , in pixels > = 0"}{"idx": 61436, "node_name": "l", "Dec": "the layout manager to use"}{"idx": 61438, "node_name": "g", "Dec": "the graphics to paint to"}{"idx": 61446, "node_name": "target", "Dec": "the container that needs to be laid out"}{"idx": 61447, "node_name": "axis", "Dec": "the axis to lay out components along . can be one of : boxlayout.x_axis , boxlayout.y_axis , boxlayout.line_axis or boxlayout.page_axis"}{"idx": 61451, "node_name": "target", "Dec": "the affected container"}{"idx": 61453, "node_name": "name", "Dec": "the name of the component"}{"idx": 61454, "node_name": "comp", "Dec": "the component"}{"idx": 61456, "node_name": "comp", "Dec": "the component"}{"idx": 61458, "node_name": "comp", "Dec": "the component"}{"idx": 61459, "node_name": "constraints", "Dec": "constraints"}{"idx": 61461, "node_name": "target", "Dec": "the container that needs to be laid out"}{"idx": 61463, "node_name": "target", "Dec": "the container that needs to be laid out"}{"idx": 61465, "node_name": "target", "Dec": "the container that needs to be laid out"}{"idx": 61467, "node_name": "target", "Dec": "the container"}{"idx": 61469, "node_name": "target", "Dec": "the container"}{"idx": 61471, "node_name": "target", "Dec": "the container to lay out"}{"idx": 61476, "node_name": "b", "Dec": "the button to be added"}{"idx": 61478, "node_name": "b", "Dec": "the button to be removed"}{"idx": 61483, "node_name": "m", "Dec": "the buttonmodel"}{"idx": 61484, "node_name": "b", "Dec": "true if this button is to be selected , otherwise false"}{"idx": 61486, "node_name": "m", "Dec": "an isntance of buttonmodel"}{"idx": 61495, "node_name": "b", "Dec": "whether or not the button should be armed"}{"idx": 61497, "node_name": "b", "Dec": "true selects the button , false deselects the button"}{"idx": 61499, "node_name": "b", "Dec": "whether or not the button should be enabled"}{"idx": 61501, "node_name": "b", "Dec": "whether or not the button should be pressed"}{"idx": 61503, "node_name": "b", "Dec": "whether or not the button is in the rollover state"}{"idx": 61505, "node_name": "key", "Dec": "an int specifying the accelerator key"}{"idx": 61508, "node_name": "s", "Dec": "the string that identifies the generated event"}{"idx": 61511, "node_name": "group", "Dec": "the buttongroup the button belongs to"}{"idx": 61514, "node_name": "l", "Dec": "the listener to add"}{"idx": 61516, "node_name": "l", "Dec": "the listener to remove"}{"idx": 61518, "node_name": "l", "Dec": "the listener to add"}{"idx": 61520, "node_name": "l", "Dec": "the listener to remove"}{"idx": 61522, "node_name": "l", "Dec": "the listener to add"}{"idx": 61524, "node_name": "l", "Dec": "the listener to remove"}{"idx": 61528, "node_name": "anevent", "Dec": "the event the editor should use to consider whether to begin editing or not"}{"idx": 61530, "node_name": "anevent", "Dec": "the event the editor should use to start editing"}{"idx": 61534, "node_name": "l", "Dec": "the celleditorlistener"}{"idx": 61536, "node_name": "l", "Dec": "the celleditorlistener"}{"idx": 61545, "node_name": "g", "Dec": "the specified graphics window"}{"idx": 61547, "node_name": "g", "Dec": "the specified graphics window"}{"idx": 61549, "node_name": "x", "Dec": "the component to be added"}{"idx": 61550, "node_name": "constraints", "Dec": "an object expressing layout constraints for this component"}{"idx": 61551, "node_name": "index", "Dec": "the position in the container's list at which to insert the component , where -1 means append to the end"}{"idx": 61553, "node_name": "g", "Dec": "the graphics object to draw on"}{"idx": 61554, "node_name": "c", "Dec": "the component to draw"}{"idx": 61555, "node_name": "p", "Dec": "the container component actually drawn on"}{"idx": 61556, "node_name": "x", "Dec": "an int specifying the left side of the area draw in , in pixels , measured from the left edge of the graphics context"}{"idx": 61557, "node_name": "y", "Dec": "an int specifying the top of the area to draw in , in pixels measured down from the top edge of the graphics context"}{"idx": 61558, "node_name": "w", "Dec": "an int specifying the width of the area draw in , in pixels"}{"idx": 61559, "node_name": "h", "Dec": "an int specifying the height of the area draw in , in pixels"}{"idx": 61560, "node_name": "shouldvalidate", "Dec": "if true , component c will be validated before being painted"}{"idx": 61562, "node_name": "g", "Dec": "the graphics object to draw on"}{"idx": 61563, "node_name": "c", "Dec": "the component to draw"}{"idx": 61564, "node_name": "p", "Dec": "the container component actually drawn on"}{"idx": 61565, "node_name": "x", "Dec": "an int specifying the left side of the area draw in , in pixels , measured from the left edge of the graphics context"}{"idx": 61566, "node_name": "y", "Dec": "an int specifying the top of the area to draw in , in pixels measured down from the top edge of the graphics context"}{"idx": 61567, "node_name": "w", "Dec": "an int specifying the width of the area draw in , in pixels"}{"idx": 61568, "node_name": "h", "Dec": "an int specifying the height of the area draw in , in pixels"}{"idx": 61570, "node_name": "g", "Dec": "the graphics object to draw on"}{"idx": 61571, "node_name": "c", "Dec": "the component to draw"}{"idx": 61572, "node_name": "p", "Dec": "the container component actually drawn on"}{"idx": 61573, "node_name": "r", "Dec": "the rectangle to draw in"}{"idx": 61586, "node_name": "enclosingchooser", "Dec": "the chooser to which the panel is to be added"}{"idx": 61588, "node_name": "enclosingchooser", "Dec": "the chooser from which the panel is to be removed"}{"idx": 61592, "node_name": "b", "Dec": "true if the transparency of a color can be selected"}{"idx": 61595, "node_name": "g", "Dec": "the graphics object"}{"idx": 61602, "node_name": "color", "Dec": "the new color"}{"idx": 61604, "node_name": "listener", "Dec": "the changelistener to be added"}{"idx": 61606, "node_name": "listener", "Dec": "the changelistener to be removed"}{"idx": 61612, "node_name": "color", "Dec": "the new color"}{"idx": 61615, "node_name": "color", "Dec": "the new color"}{"idx": 61617, "node_name": "l", "Dec": "the changelistener to be added"}{"idx": 61619, "node_name": "l", "Dec": "the changelistener to be removed"}{"idx": 61625, "node_name": "anobject", "Dec": "an item"}{"idx": 61629, "node_name": "l", "Dec": "an actionlistener"}{"idx": 61631, "node_name": "l", "Dec": "an actionlistener"}{"idx": 61634, "node_name": "anitem", "Dec": "the list object to select or null to clear the selection"}{"idx": 61638, "node_name": "component", "Dec": "a non-null jcomponent"}{"idx": 61640, "node_name": "map", "Dec": "a componentinputmap"}{"idx": 61643, "node_name": "keystroke", "Dec": "a keystroke"}{"idx": 61644, "node_name": "actionmapkey", "Dec": "an action map key"}{"idx": 61646, "node_name": "key", "Dec": "the keystroke for which to remove the binding"}{"idx": 61655, "node_name": "graphics", "Dec": "the graphics context to slow down"}{"idx": 61656, "node_name": "component", "Dec": "the jcomponent to draw slowly"}{"idx": 61658, "node_name": "graphics", "Dec": "the graphics context to slow down"}{"idx": 61661, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 61662, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 61663, "node_name": "width", "Dec": "the width of the clipping rectangle ."}{"idx": 61664, "node_name": "height", "Dec": "the height of the clipping rectangle ."}{"idx": 61666, "node_name": "flashcolor", "Dec": "the color used to flash drawing operations"}{"idx": 61669, "node_name": "flashtime", "Dec": "the time delay of drawing operation flashing"}{"idx": 61672, "node_name": "flashcount", "Dec": "number of times that drawing operations will flash"}{"idx": 61675, "node_name": "stream", "Dec": "the stream to which the debuggraphics logs drawing operations"}{"idx": 61678, "node_name": "afont", "Dec": "the font ."}{"idx": 61681, "node_name": "acolor", "Dec": "the new rendering color ."}{"idx": 61685, "node_name": "f", "Dec": "the specified font"}{"idx": 61687, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 61688, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 61691, "node_name": "acolor", "Dec": "the xor alternation color"}{"idx": 61694, "node_name": "x", "Dec": "the x coordinate of the rectangle to intersect the clip with"}{"idx": 61695, "node_name": "y", "Dec": "the y coordinate of the rectangle to intersect the clip with"}{"idx": 61696, "node_name": "width", "Dec": "the width of the rectangle to intersect the clip with"}{"idx": 61697, "node_name": "height", "Dec": "the height of the rectangle to intersect the clip with"}{"idx": 61699, "node_name": "x", "Dec": "the x coordinate of the new clip rectangle ."}{"idx": 61700, "node_name": "y", "Dec": "the y coordinate of the new clip rectangle ."}{"idx": 61701, "node_name": "width", "Dec": "the width of the new clip rectangle ."}{"idx": 61702, "node_name": "height", "Dec": "the height of the new clip rectangle ."}{"idx": 61705, "node_name": "clip", "Dec": "the shape to use to set the clip"}{"idx": 61707, "node_name": "x", "Dec": "the x coordinate of the rectangle to be drawn ."}{"idx": 61708, "node_name": "y", "Dec": "the y coordinate of the rectangle to be drawn ."}{"idx": 61709, "node_name": "width", "Dec": "the width of the rectangle to be drawn ."}{"idx": 61710, "node_name": "height", "Dec": "the height of the rectangle to be drawn ."}{"idx": 61712, "node_name": "x", "Dec": "the x coordinate of the rectangle to be filled ."}{"idx": 61713, "node_name": "y", "Dec": "the y coordinate of the rectangle to be filled ."}{"idx": 61714, "node_name": "width", "Dec": "the width of the rectangle to be filled ."}{"idx": 61715, "node_name": "height", "Dec": "the height of the rectangle to be filled ."}{"idx": 61717, "node_name": "x", "Dec": "the x coordinate of the rectangle to clear ."}{"idx": 61718, "node_name": "y", "Dec": "the y coordinate of the rectangle to clear ."}{"idx": 61719, "node_name": "width", "Dec": "the width of the rectangle to clear ."}{"idx": 61720, "node_name": "height", "Dec": "the height of the rectangle to clear ."}{"idx": 61722, "node_name": "x", "Dec": "the x coordinate of the rectangle to be drawn ."}{"idx": 61723, "node_name": "y", "Dec": "the y coordinate of the rectangle to be drawn ."}{"idx": 61724, "node_name": "width", "Dec": "the width of the rectangle to be drawn ."}{"idx": 61725, "node_name": "height", "Dec": "the height of the rectangle to be drawn ."}{"idx": 61726, "node_name": "arcwidth", "Dec": "the horizontal diameter of the arc at the four corners ."}{"idx": 61727, "node_name": "archeight", "Dec": "the vertical diameter of the arc at the four corners ."}{"idx": 61729, "node_name": "x", "Dec": "the x coordinate of the rectangle to be filled ."}{"idx": 61730, "node_name": "y", "Dec": "the y coordinate of the rectangle to be filled ."}{"idx": 61731, "node_name": "width", "Dec": "the width of the rectangle to be filled ."}{"idx": 61732, "node_name": "height", "Dec": "the height of the rectangle to be filled ."}{"idx": 61733, "node_name": "arcwidth", "Dec": "the horizontal diameter of the arc at the four corners ."}{"idx": 61734, "node_name": "archeight", "Dec": "the vertical diameter of the arc at the four corners ."}{"idx": 61736, "node_name": "x1", "Dec": "the first point's x coordinate ."}{"idx": 61737, "node_name": "y1", "Dec": "the first point's y coordinate ."}{"idx": 61738, "node_name": "x2", "Dec": "the second point's x coordinate ."}{"idx": 61739, "node_name": "y2", "Dec": "the second point's y coordinate ."}{"idx": 61741, "node_name": "x", "Dec": "the x coordinate of the rectangle to be drawn ."}{"idx": 61742, "node_name": "y", "Dec": "the y coordinate of the rectangle to be drawn ."}{"idx": 61743, "node_name": "width", "Dec": "the width of the rectangle to be drawn ."}{"idx": 61744, "node_name": "height", "Dec": "the height of the rectangle to be drawn ."}{"idx": 61745, "node_name": "raised", "Dec": "a boolean that determines whether the rectangle appears to be raised above the surface or sunk into the surface ."}{"idx": 61747, "node_name": "x", "Dec": "the x coordinate of the rectangle to be filled ."}{"idx": 61748, "node_name": "y", "Dec": "the y coordinate of the rectangle to be filled ."}{"idx": 61749, "node_name": "width", "Dec": "the width of the rectangle to be filled ."}{"idx": 61750, "node_name": "height", "Dec": "the height of the rectangle to be filled ."}{"idx": 61751, "node_name": "raised", "Dec": "a boolean value that determines whether the rectangle appears to be raised above the surface or etched into the surface ."}{"idx": 61753, "node_name": "x", "Dec": "the x coordinate of the upper left corner of the oval to be drawn ."}{"idx": 61754, "node_name": "y", "Dec": "the y coordinate of the upper left corner of the oval to be drawn ."}{"idx": 61755, "node_name": "width", "Dec": "the width of the oval to be drawn ."}{"idx": 61756, "node_name": "height", "Dec": "the height of the oval to be drawn ."}{"idx": 61758, "node_name": "x", "Dec": "the x coordinate of the upper left corner of the oval to be filled ."}{"idx": 61759, "node_name": "y", "Dec": "the y coordinate of the upper left corner of the oval to be filled ."}{"idx": 61760, "node_name": "width", "Dec": "the width of the oval to be filled ."}{"idx": 61761, "node_name": "height", "Dec": "the height of the oval to be filled ."}{"idx": 61763, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the arc to be drawn ."}{"idx": 61764, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the arc to be drawn ."}{"idx": 61765, "node_name": "width", "Dec": "the width of the arc to be drawn ."}{"idx": 61766, "node_name": "height", "Dec": "the height of the arc to be drawn ."}{"idx": 61767, "node_name": "startangle", "Dec": "the beginning angle ."}{"idx": 61768, "node_name": "arcangle", "Dec": "the angular extent of the arc , relative to the start angle ."}{"idx": 61770, "node_name": "x", "Dec": "the x coordinate of the upper-left corner of the arc to be filled ."}{"idx": 61771, "node_name": "y", "Dec": "the y coordinate of the upper-left corner of the arc to be filled ."}{"idx": 61772, "node_name": "width", "Dec": "the width of the arc to be filled ."}{"idx": 61773, "node_name": "height", "Dec": "the height of the arc to be filled ."}{"idx": 61774, "node_name": "startangle", "Dec": "the beginning angle ."}{"idx": 61775, "node_name": "arcangle", "Dec": "the angular extent of the arc , relative to the start angle ."}{"idx": 61777, "node_name": "xpoints", "Dec": "an array of x points"}{"idx": 61778, "node_name": "ypoints", "Dec": "an array of y points"}{"idx": 61779, "node_name": "npoints", "Dec": "the total number of points"}{"idx": 61781, "node_name": "xpoints", "Dec": "a an array of x coordinates ."}{"idx": 61782, "node_name": "ypoints", "Dec": "a an array of y coordinates ."}{"idx": 61783, "node_name": "npoints", "Dec": "a the total number of points ."}{"idx": 61785, "node_name": "xpoints", "Dec": "a an array of x coordinates ."}{"idx": 61786, "node_name": "ypoints", "Dec": "a an array of y coordinates ."}{"idx": 61787, "node_name": "npoints", "Dec": "a the total number of points ."}{"idx": 61789, "node_name": "astring", "Dec": "the string to be drawn ."}{"idx": 61790, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 61791, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 61793, "node_name": "iterator", "Dec": "the iterator whose text is to be drawn"}{"idx": 61794, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 61795, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 61797, "node_name": "data", "Dec": "the data to be drawn"}{"idx": 61798, "node_name": "offset", "Dec": "the start offset in the data"}{"idx": 61799, "node_name": "length", "Dec": "the number of bytes that are drawn"}{"idx": 61800, "node_name": "x", "Dec": "the x coordinate of the baseline of the text"}{"idx": 61801, "node_name": "y", "Dec": "the y coordinate of the baseline of the text"}{"idx": 61803, "node_name": "data", "Dec": "the array of characters to be drawn"}{"idx": 61804, "node_name": "offset", "Dec": "the start offset in the data"}{"idx": 61805, "node_name": "length", "Dec": "the number of characters to be drawn"}{"idx": 61806, "node_name": "x", "Dec": "the x coordinate of the baseline of the text"}{"idx": 61807, "node_name": "y", "Dec": "the y coordinate of the baseline of the text"}{"idx": 61809, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 61810, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 61811, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 61812, "node_name": "observer", "Dec": "object to be notified as more of the image is converted ."}{"idx": 61814, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 61815, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 61816, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 61817, "node_name": "width", "Dec": "the width of the rectangle ."}{"idx": 61818, "node_name": "height", "Dec": "the height of the rectangle ."}{"idx": 61819, "node_name": "observer", "Dec": "object to be notified as more of the image is converted ."}{"idx": 61821, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 61822, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 61823, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 61824, "node_name": "bgcolor", "Dec": "the background color to paint under the non-opaque portions of the image ."}{"idx": 61825, "node_name": "observer", "Dec": "object to be notified as more of the image is converted ."}{"idx": 61827, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 61828, "node_name": "x", "Dec": "the x coordinate ."}{"idx": 61829, "node_name": "y", "Dec": "the y coordinate ."}{"idx": 61830, "node_name": "width", "Dec": "the width of the rectangle ."}{"idx": 61831, "node_name": "height", "Dec": "the height of the rectangle ."}{"idx": 61832, "node_name": "bgcolor", "Dec": "the background color to paint under the non-opaque portions of the image ."}{"idx": 61833, "node_name": "observer", "Dec": "object to be notified as more of the image is converted ."}{"idx": 61835, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 61836, "node_name": "dx1", "Dec": "the x coordinate of the first corner of the destination rectangle ."}{"idx": 61837, "node_name": "dy1", "Dec": "the y coordinate of the first corner of the destination rectangle ."}{"idx": 61838, "node_name": "dx2", "Dec": "the x coordinate of the second corner of the destination rectangle ."}{"idx": 61839, "node_name": "dy2", "Dec": "the y coordinate of the second corner of the destination rectangle ."}{"idx": 61840, "node_name": "sx1", "Dec": "the x coordinate of the first corner of the source rectangle ."}{"idx": 61841, "node_name": "sy1", "Dec": "the y coordinate of the first corner of the source rectangle ."}{"idx": 61842, "node_name": "sx2", "Dec": "the x coordinate of the second corner of the source rectangle ."}{"idx": 61843, "node_name": "sy2", "Dec": "the y coordinate of the second corner of the source rectangle ."}{"idx": 61844, "node_name": "observer", "Dec": "object to be notified as more of the image is scaled and converted ."}{"idx": 61846, "node_name": "img", "Dec": "the specified image to be drawn . drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver) does nothing if img is null ."}{"idx": 61847, "node_name": "dx1", "Dec": "the x coordinate of the first corner of the destination rectangle ."}{"idx": 61848, "node_name": "dy1", "Dec": "the y coordinate of the first corner of the destination rectangle ."}{"idx": 61849, "node_name": "dx2", "Dec": "the x coordinate of the second corner of the destination rectangle ."}{"idx": 61850, "node_name": "dy2", "Dec": "the y coordinate of the second corner of the destination rectangle ."}{"idx": 61851, "node_name": "sx1", "Dec": "the x coordinate of the first corner of the source rectangle ."}{"idx": 61852, "node_name": "sy1", "Dec": "the y coordinate of the first corner of the source rectangle ."}{"idx": 61853, "node_name": "sx2", "Dec": "the x coordinate of the second corner of the source rectangle ."}{"idx": 61854, "node_name": "sy2", "Dec": "the y coordinate of the second corner of the source rectangle ."}{"idx": 61855, "node_name": "bgcolor", "Dec": "the background color to paint under the non-opaque portions of the image ."}{"idx": 61856, "node_name": "observer", "Dec": "object to be notified as more of the image is scaled and converted ."}{"idx": 61858, "node_name": "x", "Dec": "the x coordinate of the source rectangle ."}{"idx": 61859, "node_name": "y", "Dec": "the y coordinate of the source rectangle ."}{"idx": 61860, "node_name": "width", "Dec": "the width of the source rectangle ."}{"idx": 61861, "node_name": "height", "Dec": "the height of the source rectangle ."}{"idx": 61862, "node_name": "destx", "Dec": "the horizontal distance to copy the pixels ."}{"idx": 61863, "node_name": "desty", "Dec": "the vertical distance to copy the pixels ."}{"idx": 61867, "node_name": "options", "Dec": "indicates how diagnostic information should be displayed"}{"idx": 61874, "node_name": "value", "Dec": "an int giving the current value"}{"idx": 61875, "node_name": "extent", "Dec": "the length of the inner range that begins at the model's value"}{"idx": 61876, "node_name": "min", "Dec": "an int giving the minimum value"}{"idx": 61877, "node_name": "max", "Dec": "an int giving the maximum value"}{"idx": 61883, "node_name": "n", "Dec": "the model's new value"}{"idx": 61885, "node_name": "n", "Dec": "the model's new extent"}{"idx": 61887, "node_name": "n", "Dec": "the model's new minimum"}{"idx": 61889, "node_name": "n", "Dec": "the model's new maximum"}{"idx": 61891, "node_name": "b", "Dec": "true if the upcoming changes to the value property are part of a series"}{"idx": 61894, "node_name": "newvalue", "Dec": "an int giving the current value"}{"idx": 61895, "node_name": "newextent", "Dec": "an int giving the amount by which the value can \" jump \""}{"idx": 61896, "node_name": "newmin", "Dec": "an int giving the minimum value"}{"idx": 61897, "node_name": "newmax", "Dec": "an int giving the maximum value"}{"idx": 61898, "node_name": "adjusting", "Dec": "a boolean , true if a series of changes are in progress"}{"idx": 61900, "node_name": "l", "Dec": "the changelistener to add"}{"idx": 61902, "node_name": "l", "Dec": "the changelistener to remove"}{"idx": 61907, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 61925, "node_name": "e", "Dec": "the actionevent to deliver to listeners"}{"idx": 61928, "node_name": "e", "Dec": "the itemevent to deliver to listeners"}{"idx": 61930, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 61938, "node_name": "value", "Dec": "the new value of this cell"}{"idx": 61940, "node_name": "anevent", "Dec": "the event"}{"idx": 61942, "node_name": "anevent", "Dec": "the event"}{"idx": 61944, "node_name": "anevent", "Dec": "the event"}{"idx": 61948, "node_name": "e", "Dec": "the action event"}{"idx": 61950, "node_name": "e", "Dec": "the action event"}{"idx": 61956, "node_name": "textfield", "Dec": "a jtextfield object"}{"idx": 61958, "node_name": "checkbox", "Dec": "a jcheckbox object"}{"idx": 61960, "node_name": "combobox", "Dec": "a jcombobox object"}{"idx": 61963, "node_name": "count", "Dec": "an int specifying the number of clicks needed to start editing"}{"idx": 61967, "node_name": "anevent", "Dec": "an event object"}{"idx": 61969, "node_name": "anevent", "Dec": "an event object"}{"idx": 61973, "node_name": "tree", "Dec": "the jtree that is asking the editor to edit ; this parameter can be null"}{"idx": 61974, "node_name": "value", "Dec": "the value of the cell to be edited"}{"idx": 61975, "node_name": "isselected", "Dec": "true if the cell is to be rendered with selection highlighting"}{"idx": 61976, "node_name": "expanded", "Dec": "true if the node is expanded"}{"idx": 61977, "node_name": "leaf", "Dec": "true if the node is a leaf node"}{"idx": 61978, "node_name": "row", "Dec": "the row index of the node being edited"}{"idx": 61980, "node_name": "table", "Dec": "the jtable that is asking the editor to edit ; can be null"}{"idx": 61981, "node_name": "value", "Dec": "the value of the cell to be edited ; it is up to the specific editor to interpret and draw the value . for example , if value is the string \" true \" , it could be rendered as a string or it could be rendered as a check box that is checked . null is a valid value"}{"idx": 61982, "node_name": "isselected", "Dec": "true if the cell is to be rendered with highlighting"}{"idx": 61983, "node_name": "row", "Dec": "the row of the cell being edited"}{"idx": 61984, "node_name": "column", "Dec": "the column of the cell being edited"}{"idx": 61988, "node_name": "items", "Dec": "an array of object objects"}{"idx": 61990, "node_name": "v", "Dec": "a vector object ..."}{"idx": 61992, "node_name": "anobject", "Dec": "the combo box value or null for no selection ."}{"idx": 61994, "node_name": "anobject", "Dec": "the object to return the index of"}{"idx": 61997, "node_name": "c", "Dec": "the collection which contains the elements to add"}{"idx": 61999, "node_name": "index", "Dec": "index at which to insert the first element from the specified collection"}{"idx": 62000, "node_name": "c", "Dec": "the collection which contains the elements to add"}{"idx": 62004, "node_name": "f", "Dec": "the jinternalframe to be displayed"}{"idx": 62006, "node_name": "f", "Dec": "the jinternalframe to be removed"}{"idx": 62008, "node_name": "f", "Dec": "the frame to be resized"}{"idx": 62010, "node_name": "f", "Dec": "the jinternalframe to be restored"}{"idx": 62012, "node_name": "f", "Dec": "the jinternalframe to be iconified"}{"idx": 62014, "node_name": "f", "Dec": "the jinternalframe to be de-iconified"}{"idx": 62016, "node_name": "f", "Dec": "the jinternalframe to be activated"}{"idx": 62018, "node_name": "f", "Dec": "the jcomponent being dragged"}{"idx": 62019, "node_name": "newx", "Dec": "the new x-coordinate"}{"idx": 62020, "node_name": "newy", "Dec": "the new y-coordinate"}{"idx": 62022, "node_name": "f", "Dec": "the component to be resized"}{"idx": 62023, "node_name": "newx", "Dec": "the new x-coordinate"}{"idx": 62024, "node_name": "newy", "Dec": "the new y-coordinate"}{"idx": 62025, "node_name": "newwidth", "Dec": "the new width"}{"idx": 62026, "node_name": "newheight", "Dec": "the new height"}{"idx": 62028, "node_name": "f", "Dec": "the jcomponent being moved or resized"}{"idx": 62029, "node_name": "newx", "Dec": "the new x-coordinate"}{"idx": 62030, "node_name": "newy", "Dec": "the new y-coordinate"}{"idx": 62031, "node_name": "newwidth", "Dec": "the new width"}{"idx": 62032, "node_name": "newheight", "Dec": "the new height"}{"idx": 62034, "node_name": "f", "Dec": "the jinternalframe for which to remove the desktopicon"}{"idx": 62036, "node_name": "f", "Dec": "the jinternalframe of interest"}{"idx": 62038, "node_name": "f", "Dec": "the component about to be resized"}{"idx": 62039, "node_name": "r", "Dec": "the normal bounds to be saved away"}{"idx": 62041, "node_name": "f", "Dec": "the jinternalframe of interest"}{"idx": 62043, "node_name": "f", "Dec": "the jinternalframe of interest"}{"idx": 62044, "node_name": "value", "Dec": "a boolean signifying if component has been iconized"}{"idx": 62046, "node_name": "f", "Dec": "the jinternalframe of interest"}{"idx": 62050, "node_name": "acontainer", "Dec": "a container"}{"idx": 62051, "node_name": "acomponent", "Dec": "a component"}{"idx": 62053, "node_name": "acontainer", "Dec": "a container"}{"idx": 62054, "node_name": "acomponent", "Dec": "a component"}{"idx": 62056, "node_name": "acontainer", "Dec": "a container"}{"idx": 62058, "node_name": "acontainer", "Dec": "a container"}{"idx": 62060, "node_name": "a", "Dec": "the first component"}{"idx": 62061, "node_name": "b", "Dec": "the second component"}{"idx": 62071, "node_name": "tm", "Dec": "this parameter is not used"}{"idx": 62072, "node_name": "x", "Dec": "the x value of the dirty region"}{"idx": 62073, "node_name": "y", "Dec": "the y value of the dirty region"}{"idx": 62074, "node_name": "width", "Dec": "the width of the dirty region"}{"idx": 62075, "node_name": "height", "Dec": "the height of the dirty region"}{"idx": 62077, "node_name": "r", "Dec": "a rectangle containing the dirty region"}{"idx": 62079, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 62080, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 62081, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 62083, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 62084, "node_name": "oldvalue", "Dec": "the old value of the property ( as a byte )"}{"idx": 62085, "node_name": "newvalue", "Dec": "the new value of the property ( as a byte )"}{"idx": 62087, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 62088, "node_name": "oldvalue", "Dec": "the old value of the property ( as a char )"}{"idx": 62089, "node_name": "newvalue", "Dec": "the new value of the property ( as a char )"}{"idx": 62091, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 62092, "node_name": "oldvalue", "Dec": "the old value of the property ( as a short )"}{"idx": 62093, "node_name": "newvalue", "Dec": "the new value of the property ( as a short )"}{"idx": 62095, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 62096, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 62097, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 62099, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 62100, "node_name": "oldvalue", "Dec": "the old value of the property ( as a long )"}{"idx": 62101, "node_name": "newvalue", "Dec": "the new value of the property ( as a long )"}{"idx": 62103, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 62104, "node_name": "oldvalue", "Dec": "the old value of the property ( as a float )"}{"idx": 62105, "node_name": "newvalue", "Dec": "the new value of the property ( as a float )"}{"idx": 62107, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 62108, "node_name": "oldvalue", "Dec": "the old value of the property ( as a double )"}{"idx": 62109, "node_name": "newvalue", "Dec": "the new value of the property ( as a double )"}{"idx": 62111, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 62112, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 62113, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 62120, "node_name": "index", "Dec": "an index into this list"}{"idx": 62122, "node_name": "anarray", "Dec": "the array into which the components get copied"}{"idx": 62125, "node_name": "mincapacity", "Dec": "the desired minimum capacity"}{"idx": 62127, "node_name": "newsize", "Dec": "the new size of this list"}{"idx": 62133, "node_name": "elem", "Dec": "an object"}{"idx": 62135, "node_name": "elem", "Dec": "an object"}{"idx": 62137, "node_name": "elem", "Dec": "the desired component"}{"idx": 62138, "node_name": "index", "Dec": "the index from which to begin searching"}{"idx": 62140, "node_name": "elem", "Dec": "the desired component"}{"idx": 62142, "node_name": "elem", "Dec": "the desired component"}{"idx": 62143, "node_name": "index", "Dec": "the index to start searching from"}{"idx": 62145, "node_name": "index", "Dec": "an index into this list"}{"idx": 62149, "node_name": "element", "Dec": "what the component is to be set to"}{"idx": 62150, "node_name": "index", "Dec": "the specified index"}{"idx": 62152, "node_name": "index", "Dec": "the index of the object to remove"}{"idx": 62154, "node_name": "element", "Dec": "the component to insert"}{"idx": 62155, "node_name": "index", "Dec": "where to insert the new component"}{"idx": 62157, "node_name": "element", "Dec": "the component to be added"}{"idx": 62159, "node_name": "obj", "Dec": "the component to be removed"}{"idx": 62164, "node_name": "index", "Dec": "index of element to return"}{"idx": 62166, "node_name": "index", "Dec": "index of element to replace"}{"idx": 62167, "node_name": "element", "Dec": "element to be stored at the specified position"}{"idx": 62169, "node_name": "index", "Dec": "index at which the specified element is to be inserted"}{"idx": 62170, "node_name": "element", "Dec": "element to be inserted"}{"idx": 62172, "node_name": "index", "Dec": "the index of the element to removed"}{"idx": 62175, "node_name": "fromindex", "Dec": "the index of the lower end of the range"}{"idx": 62176, "node_name": "toindex", "Dec": "the index of the upper end of the range"}{"idx": 62178, "node_name": "c", "Dec": "the collection which contains the elements to add"}{"idx": 62180, "node_name": "index", "Dec": "index at which to insert the first element from the specified collection"}{"idx": 62181, "node_name": "c", "Dec": "the collection which contains the elements to add"}{"idx": 62187, "node_name": "selectionmode", "Dec": "the selection mode"}{"idx": 62190, "node_name": "isadjusting", "Dec": "true if this is the final change in a series of adjustments"}{"idx": 62192, "node_name": "firstindex", "Dec": "the first index in the interval"}{"idx": 62193, "node_name": "lastindex", "Dec": "the last index in the interval"}{"idx": 62195, "node_name": "firstindex", "Dec": "the first index in the interval"}{"idx": 62196, "node_name": "lastindex", "Dec": "the last index in the interval"}{"idx": 62197, "node_name": "isadjusting", "Dec": "true if this is the final change in a series of adjustments"}{"idx": 62199, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 62201, "node_name": "flag", "Dec": "boolean value for leadanchornotificationenabled"}{"idx": 62204, "node_name": "index0", "Dec": "one end of the interval ."}{"idx": 62205, "node_name": "index1", "Dec": "other end of the interval"}{"idx": 62207, "node_name": "index0", "Dec": "one end of the interval ."}{"idx": 62208, "node_name": "index1", "Dec": "other end of the interval"}{"idx": 62210, "node_name": "index0", "Dec": "one end of the interval"}{"idx": 62211, "node_name": "index1", "Dec": "other end of the interval"}{"idx": 62213, "node_name": "index", "Dec": "the beginning of the interval"}{"idx": 62214, "node_name": "length", "Dec": "the length of the interval"}{"idx": 62215, "node_name": "before", "Dec": "if true , interval inserts before the index , otherwise , interval inserts after the index"}{"idx": 62217, "node_name": "index0", "Dec": "the beginning of the interval"}{"idx": 62218, "node_name": "index1", "Dec": "the end of the interval"}{"idx": 62222, "node_name": "anchorindex", "Dec": "the anchor selection index"}{"idx": 62224, "node_name": "leadindex", "Dec": "the new lead selection index"}{"idx": 62226, "node_name": "leadindex", "Dec": "the lead selection index"}{"idx": 62230, "node_name": "modelwrapper", "Dec": "the model wrapper responsible for providing the data that gets sorted and filtered"}{"idx": 62234, "node_name": "column", "Dec": "the column to enable or disable sorting on , in terms of the underlying model"}{"idx": 62235, "node_name": "sortable", "Dec": "whether or not the specified column is sortable"}{"idx": 62237, "node_name": "column", "Dec": "the column to check sorting for , in terms of the underlying model"}{"idx": 62239, "node_name": "sortkeys", "Dec": "the new sortkeys ; null is a shorthand for specifying an empty list , indicating that the view should be unsorted"}{"idx": 62242, "node_name": "max", "Dec": "the maximum number of sort keys"}{"idx": 62245, "node_name": "sortsonupdates", "Dec": "whether or not to sort on update events"}{"idx": 62248, "node_name": "filter", "Dec": "the filter used to determine what entries should be included"}{"idx": 62251, "node_name": "column", "Dec": "index of the column to make the primary sorted column , in terms of the underlying model"}{"idx": 62253, "node_name": "index", "Dec": "the row index in terms of the underlying model"}{"idx": 62255, "node_name": "index", "Dec": "the row index in terms of the underlying view"}{"idx": 62258, "node_name": "column", "Dec": "the index of the column to test , in terms of the underlying model"}{"idx": 62260, "node_name": "column", "Dec": "the index of the column the comparator is to be used for , in terms of the underlying model"}{"idx": 62261, "node_name": "comparator", "Dec": "the comparator to use"}{"idx": 62263, "node_name": "column", "Dec": "the column to fetch the comparator for , in terms of the underlying model"}{"idx": 62265, "node_name": "firstrow", "Dec": "the first row"}{"idx": 62266, "node_name": "endrow", "Dec": "the last row"}{"idx": 62268, "node_name": "firstrow", "Dec": "the first row"}{"idx": 62269, "node_name": "endrow", "Dec": "the last row"}{"idx": 62271, "node_name": "firstrow", "Dec": "the first row , in terms of the underlying model"}{"idx": 62272, "node_name": "endrow", "Dec": "the last row , in terms of the underlying model"}{"idx": 62274, "node_name": "firstrow", "Dec": "the first row , in terms of the underlying model"}{"idx": 62275, "node_name": "endrow", "Dec": "the last row , in terms of the underlying model"}{"idx": 62276, "node_name": "column", "Dec": "the column that has changed , in terms of the underlying model"}{"idx": 62283, "node_name": "row", "Dec": "the row index"}{"idx": 62284, "node_name": "column", "Dec": "the column index"}{"idx": 62286, "node_name": "row", "Dec": "the row index"}{"idx": 62287, "node_name": "column", "Dec": "the column index"}{"idx": 62289, "node_name": "row", "Dec": "the row to return the identifier for , in terms of the underlying model"}{"idx": 62295, "node_name": "l", "Dec": "the changelistener to add"}{"idx": 62297, "node_name": "l", "Dec": "the changelistener to remove"}{"idx": 62301, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 62304, "node_name": "f", "Dec": "the jinternalframe to be displayed"}{"idx": 62306, "node_name": "f", "Dec": "the jinternalframe to be removed"}{"idx": 62308, "node_name": "f", "Dec": "the jinternalframe to be resized"}{"idx": 62310, "node_name": "f", "Dec": "the jinternalframe to be restored"}{"idx": 62312, "node_name": "f", "Dec": "the jinternalframe to be iconified"}{"idx": 62314, "node_name": "f", "Dec": "the jinternalframe to be de-iconified"}{"idx": 62316, "node_name": "f", "Dec": "the jinternalframe to be activated"}{"idx": 62318, "node_name": "f", "Dec": "the jinternalframe to be deactivated"}{"idx": 62320, "node_name": "f", "Dec": "the jcomponent being dragged"}{"idx": 62322, "node_name": "f", "Dec": "the jcomponent being dragged"}{"idx": 62323, "node_name": "newx", "Dec": "the new x-coordinate"}{"idx": 62324, "node_name": "newy", "Dec": "the new y-coordinate"}{"idx": 62326, "node_name": "f", "Dec": "the jcomponent being dragged"}{"idx": 62328, "node_name": "f", "Dec": "the jcomponent being resized"}{"idx": 62329, "node_name": "direction", "Dec": "the direction"}{"idx": 62331, "node_name": "f", "Dec": "the jcomponent being resized"}{"idx": 62332, "node_name": "newx", "Dec": "the new x-coordinate"}{"idx": 62333, "node_name": "newy", "Dec": "the new y-coordinate"}{"idx": 62334, "node_name": "newwidth", "Dec": "the new width"}{"idx": 62335, "node_name": "newheight", "Dec": "the new height"}{"idx": 62337, "node_name": "f", "Dec": "the jcomponent being resized"}{"idx": 62339, "node_name": "f", "Dec": "the jcomponent being moved or resized"}{"idx": 62340, "node_name": "newx", "Dec": "the new x-coordinate"}{"idx": 62341, "node_name": "newy", "Dec": "the new y-coordinate"}{"idx": 62342, "node_name": "newwidth", "Dec": "the new width"}{"idx": 62343, "node_name": "newheight", "Dec": "the new height"}{"idx": 62347, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 62353, "node_name": "source", "Dec": "the jcomponent that originated the event ( typically this )"}{"idx": 62354, "node_name": "id", "Dec": "an int specifying ancestor_added , ancestor_removed or ancestor_moved"}{"idx": 62355, "node_name": "ancestor", "Dec": "a container object specifying the ancestor-component whose display-status changed"}{"idx": 62356, "node_name": "ancestorparent", "Dec": "a container object specifying the ancestor's parent"}{"idx": 62362, "node_name": "event", "Dec": "an ancestorevent signifying a change in an ancestor-component ' s display-status"}{"idx": 62364, "node_name": "event", "Dec": "an ancestorevent signifying a change in an ancestor-component ' s display-status"}{"idx": 62366, "node_name": "event", "Dec": "an ancestorevent signifying a change in an ancestor-component ' s display-status"}{"idx": 62369, "node_name": "source", "Dec": "the object responsible for the event"}{"idx": 62374, "node_name": "e", "Dec": "the caret event"}{"idx": 62377, "node_name": "e", "Dec": "the changeevent containing the source of the event"}{"idx": 62379, "node_name": "e", "Dec": "the changeevent containing the source of the event"}{"idx": 62382, "node_name": "source", "Dec": "the object that is the source of the event ( typically this )"}{"idx": 62385, "node_name": "e", "Dec": "a changeevent object"}{"idx": 62402, "node_name": "elem", "Dec": "the element"}{"idx": 62405, "node_name": "e", "Dec": "the document event"}{"idx": 62407, "node_name": "e", "Dec": "the document event"}{"idx": 62409, "node_name": "e", "Dec": "the document event"}{"idx": 62415, "node_name": "t", "Dec": "the type of eventlistener classes to be returned"}{"idx": 62418, "node_name": "t", "Dec": "the type of listeners to count"}{"idx": 62420, "node_name": "t", "Dec": "the type of the eventlistener class to add"}{"idx": 62421, "node_name": "l", "Dec": "the listener to be added"}{"idx": 62423, "node_name": "t", "Dec": "the type of the listener to be removed"}{"idx": 62424, "node_name": "l", "Dec": "the listener to be removed"}{"idx": 62433, "node_name": "source", "Dec": "the object responsible for the event"}{"idx": 62434, "node_name": "type", "Dec": "the event type"}{"idx": 62435, "node_name": "u", "Dec": "the affected url"}{"idx": 62437, "node_name": "source", "Dec": "the object responsible for the event"}{"idx": 62438, "node_name": "type", "Dec": "the event type"}{"idx": 62439, "node_name": "u", "Dec": "the affected url . this may be null if a valid url could not be created ."}{"idx": 62440, "node_name": "desc", "Dec": "the description of the link . this may be useful when attempting to form a url resulted in a malformedurlexception . the description provides the text used when attempting to form the url ."}{"idx": 62442, "node_name": "source", "Dec": "the object responsible for the event"}{"idx": 62443, "node_name": "type", "Dec": "the event type"}{"idx": 62444, "node_name": "u", "Dec": "the affected url . this may be null if a valid url could not be created ."}{"idx": 62445, "node_name": "desc", "Dec": "the description of the link . this may be useful when attempting to form a url resulted in a malformedurlexception . the description provides the text used when attempting to form the url ."}{"idx": 62446, "node_name": "sourceelement", "Dec": "element in the document representing the anchor"}{"idx": 62448, "node_name": "source", "Dec": "the object responsible for the event"}{"idx": 62449, "node_name": "type", "Dec": "the event type"}{"idx": 62450, "node_name": "u", "Dec": "the affected url . this may be null if a valid url could not be created ."}{"idx": 62451, "node_name": "desc", "Dec": "the description of the link . this may be useful when attempting to form a url resulted in a malformedurlexception . the description provides the text used when attempting to form the url ."}{"idx": 62452, "node_name": "sourceelement", "Dec": "element in the document representing the anchor"}{"idx": 62453, "node_name": "inputevent", "Dec": "inputevent that triggered the hyperlink event"}{"idx": 62461, "node_name": "e", "Dec": "the event responsible for the update"}{"idx": 62465, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62467, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62469, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62471, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62473, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62475, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62477, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62489, "node_name": "source", "Dec": "the jinternalframe object that originated the event"}{"idx": 62490, "node_name": "id", "Dec": "an integer indicating the type of event"}{"idx": 62495, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62497, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62499, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62501, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62503, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62505, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62507, "node_name": "e", "Dec": "an internalframeevent with information about the jinteralframe that originated the event"}{"idx": 62513, "node_name": "source", "Dec": "the source object ( typically this )"}{"idx": 62514, "node_name": "type", "Dec": "an int specifying contents_changed , interval_added , or interval_removed"}{"idx": 62515, "node_name": "index0", "Dec": "one end of the new interval"}{"idx": 62516, "node_name": "index1", "Dec": "the other end of the new interval"}{"idx": 62523, "node_name": "e", "Dec": "a listdataevent encapsulating the event information"}{"idx": 62525, "node_name": "e", "Dec": "a listdataevent encapsulating the event information"}{"idx": 62527, "node_name": "e", "Dec": "a listdataevent encapsulating the event information"}{"idx": 62530, "node_name": "source", "Dec": "the object on which the event initially occurred"}{"idx": 62531, "node_name": "firstindex", "Dec": "the first index in the range , <= lastindex"}{"idx": 62532, "node_name": "lastindex", "Dec": "the last index in the range , > = firstindex"}{"idx": 62533, "node_name": "isadjusting", "Dec": "whether or not this is one in a series of multiple events , where changes are still being made"}{"idx": 62540, "node_name": "e", "Dec": "the event that characterizes the change ."}{"idx": 62543, "node_name": "source", "Dec": "the component that originated the event ( typically this )"}{"idx": 62544, "node_name": "id", "Dec": "an int specifying the type of event , as defined in mouseevent"}{"idx": 62545, "node_name": "when", "Dec": "a long identifying the time the event occurred"}{"idx": 62546, "node_name": "modifiers", "Dec": "an int specifying any modifier keys held down , as specified in inputevent"}{"idx": 62547, "node_name": "x", "Dec": "an int specifying the horizontal position at which the event occurred , in pixels"}{"idx": 62548, "node_name": "y", "Dec": "an int specifying the vertical position at which the event occurred , in pixels"}{"idx": 62549, "node_name": "clickcount", "Dec": "an int specifying the number of mouse-clicks"}{"idx": 62550, "node_name": "popuptrigger", "Dec": "a boolean -- true if the event { should ? / did ? } trigger a popup"}{"idx": 62551, "node_name": "p", "Dec": "an array of menuelement objects specifying a path to a menu item affected by the drag"}{"idx": 62552, "node_name": "m", "Dec": "a menuselectionmanager object that handles selections"}{"idx": 62554, "node_name": "source", "Dec": "the component that originated the event ( typically this )"}{"idx": 62555, "node_name": "id", "Dec": "an int specifying the type of event , as defined in mouseevent"}{"idx": 62556, "node_name": "when", "Dec": "a long identifying the time the event occurred"}{"idx": 62557, "node_name": "modifiers", "Dec": "an int specifying any modifier keys held down , as specified in inputevent"}{"idx": 62558, "node_name": "x", "Dec": "an int specifying the horizontal position at which the event occurred , in pixels"}{"idx": 62559, "node_name": "y", "Dec": "an int specifying the vertical position at which the event occurred , in pixels"}{"idx": 62560, "node_name": "xabs", "Dec": "an int specifying the horizontal absolute position at which the event occurred , in pixels"}{"idx": 62561, "node_name": "yabs", "Dec": "an int specifying the vertical absolute position at which the event occurred , in pixels"}{"idx": 62562, "node_name": "clickcount", "Dec": "an int specifying the number of mouse-clicks"}{"idx": 62563, "node_name": "popuptrigger", "Dec": "a boolean -- true if the event { should ? / did ? } trigger a popup"}{"idx": 62564, "node_name": "p", "Dec": "an array of menuelement objects specifying a path to a menu item affected by the drag"}{"idx": 62565, "node_name": "m", "Dec": "a menuselectionmanager object that handles selections"}{"idx": 62570, "node_name": "e", "Dec": "a menudragmouseevent object"}{"idx": 62572, "node_name": "e", "Dec": "a menudragmouseevent object"}{"idx": 62574, "node_name": "e", "Dec": "a menudragmouseevent object"}{"idx": 62576, "node_name": "e", "Dec": "a menudragmouseevent object"}{"idx": 62579, "node_name": "source", "Dec": "the object that originated the event ( typically this )"}{"idx": 62582, "node_name": "source", "Dec": "the component that originated the event ( typically this )"}{"idx": 62583, "node_name": "id", "Dec": "an int specifying the type of event , as defined in keyevent"}{"idx": 62584, "node_name": "when", "Dec": "a long identifying the time the event occurred"}{"idx": 62585, "node_name": "modifiers", "Dec": "an int specifying any modifier keys held down , as specified in inputevent"}{"idx": 62586, "node_name": "keycode", "Dec": "an int specifying the specific key that was pressed"}{"idx": 62587, "node_name": "keychar", "Dec": "a char specifying the key's character value , if any -- null if the key has no character value"}{"idx": 62588, "node_name": "p", "Dec": "an array of menuelement objects specifying a path to a menu item affected by the drag"}{"idx": 62589, "node_name": "m", "Dec": "a menuselectionmanager object that handles selections"}{"idx": 62594, "node_name": "e", "Dec": "a menukeyevent"}{"idx": 62596, "node_name": "e", "Dec": "a menukeyevent"}{"idx": 62598, "node_name": "e", "Dec": "a menukeyevent"}{"idx": 62601, "node_name": "e", "Dec": "a menuevent object"}{"idx": 62603, "node_name": "e", "Dec": "a menuevent object"}{"idx": 62605, "node_name": "e", "Dec": "a menuevent object"}{"idx": 62611, "node_name": "source", "Dec": "the object that originated the event ( typically this )"}{"idx": 62614, "node_name": "e", "Dec": "a popupmenuevent containing the source of the event"}{"idx": 62616, "node_name": "e", "Dec": "a popupmenuevent containing the source of the event"}{"idx": 62618, "node_name": "e", "Dec": "a popupmenuevent containing the source of the event"}{"idx": 62621, "node_name": "source", "Dec": "the source of the change"}{"idx": 62623, "node_name": "source", "Dec": "the source of the change"}{"idx": 62624, "node_name": "type", "Dec": "the type of event"}{"idx": 62625, "node_name": "previousrowindextomodel", "Dec": "the mapping from model indices to view indices prior to the sort , may be null"}{"idx": 62629, "node_name": "index", "Dec": "the index in terms of the view"}{"idx": 62634, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 62637, "node_name": "e", "Dec": "the event , will not be null"}{"idx": 62640, "node_name": "sourcebean", "Dec": "the bean to be given as the source for any events ."}{"idx": 62642, "node_name": "sourcebean", "Dec": "the bean to be given as the source for any events"}{"idx": 62643, "node_name": "notifyonedt", "Dec": "whether to notify listeners on the event dispatch thread only"}{"idx": 62645, "node_name": "evt", "Dec": "the propertychangeevent to be fired"}{"idx": 62651, "node_name": "source", "Dec": "the tablecolumnmodel that originated the event"}{"idx": 62652, "node_name": "from", "Dec": "an int specifying the index from where the column was moved or removed"}{"idx": 62653, "node_name": "to", "Dec": "an int specifying the index to where the column was moved or added"}{"idx": 62658, "node_name": "e", "Dec": "a tablecolumnmodelevent"}{"idx": 62660, "node_name": "e", "Dec": "a tablecolumnmodelevent"}{"idx": 62662, "node_name": "e", "Dec": "a tablecolumnmodelevent"}{"idx": 62664, "node_name": "e", "Dec": "a changeevent"}{"idx": 62666, "node_name": "e", "Dec": "a listselectionevent"}{"idx": 62678, "node_name": "source", "Dec": "the tablemodel affected by this event"}{"idx": 62680, "node_name": "source", "Dec": "the tablemodel affected by this event"}{"idx": 62681, "node_name": "row", "Dec": "the row which has been updated"}{"idx": 62683, "node_name": "source", "Dec": "the tablemodel affected by this event"}{"idx": 62684, "node_name": "firstrow", "Dec": "the first row affected by this event"}{"idx": 62685, "node_name": "lastrow", "Dec": "the last row affected by this event"}{"idx": 62687, "node_name": "source", "Dec": "the tablemodel affected by this event"}{"idx": 62688, "node_name": "firstrow", "Dec": "the first row affected by this event"}{"idx": 62689, "node_name": "lastrow", "Dec": "the last row affected by this event"}{"idx": 62690, "node_name": "column", "Dec": "the column index of cells changed ; all_columns signifies all cells in the specified range of rows are changed ."}{"idx": 62692, "node_name": "source", "Dec": "the tablemodel affected by this event"}{"idx": 62693, "node_name": "firstrow", "Dec": "the first row affected by this event"}{"idx": 62694, "node_name": "lastrow", "Dec": "the last row affected by this event"}{"idx": 62695, "node_name": "column", "Dec": "the column index of cells changed ; all_columns signifies all cells in the specified range of rows are changed ."}{"idx": 62696, "node_name": "type", "Dec": "the type of change signified by this even , insert , delete or update"}{"idx": 62703, "node_name": "e", "Dec": "a tablemodelevent to notify listener that a table model has changed"}{"idx": 62707, "node_name": "source", "Dec": "the object that originated the event ( typically this )"}{"idx": 62708, "node_name": "path", "Dec": "a treepath object identifying the newly expanded node"}{"idx": 62712, "node_name": "event", "Dec": "a treeexpansionevent containing a treepath object for the expanded node"}{"idx": 62714, "node_name": "event", "Dec": "a treeexpansionevent containing a treepath object for the collapsed node"}{"idx": 62720, "node_name": "source", "Dec": "the object responsible for generating the event ( typically the creator of the event object passes this for its value )"}{"idx": 62721, "node_name": "path", "Dec": "an array of object identifying the path to the parent of the modified item ( s ) , where the first element of the array is the object stored at the root node and the last element is the object stored at the parent node"}{"idx": 62722, "node_name": "childindices", "Dec": "an array of int that specifies the index values of the removed items . the indices must be in sorted order , from lowest to highest"}{"idx": 62723, "node_name": "children", "Dec": "an array of object containing the inserted , removed , or changed objects"}{"idx": 62725, "node_name": "source", "Dec": "the object responsible for generating the event ( typically the creator of the event object passes this for its value )"}{"idx": 62726, "node_name": "path", "Dec": "a treepath object that identifies the path to the parent of the modified item ( s )"}{"idx": 62727, "node_name": "childindices", "Dec": "an array of int that specifies the index values of the modified items"}{"idx": 62728, "node_name": "children", "Dec": "an array of object containing the inserted , removed , or changed objects"}{"idx": 62730, "node_name": "source", "Dec": "the object responsible for generating the event ( typically the creator of the event object passes this for its value )"}{"idx": 62731, "node_name": "path", "Dec": "an array of object identifying the path to the root of the modified subtree , where the first element of the array is the object stored at the root node and the last element is the object stored at the changed node"}{"idx": 62733, "node_name": "source", "Dec": "the object responsible for generating the event ( typically the creator of the event object passes this for its value )"}{"idx": 62734, "node_name": "path", "Dec": "a treepath object that identifies the path to the change . in the defaulttreemodel , this object contains an array of user-data objects , but a subclass of treepath could use some totally different mechanism -- for example , a node id number"}{"idx": 62742, "node_name": "e", "Dec": "a treemodelevent describing changes to a tree model"}{"idx": 62744, "node_name": "e", "Dec": "a treemodelevent describing changes to a tree model"}{"idx": 62746, "node_name": "e", "Dec": "a treemodelevent describing changes to a tree model"}{"idx": 62748, "node_name": "e", "Dec": "a treemodelevent describing changes to a tree model"}{"idx": 62755, "node_name": "source", "Dec": "source of event"}{"idx": 62756, "node_name": "paths", "Dec": "the paths that have changed in the selection"}{"idx": 62757, "node_name": "arenew", "Dec": "a boolean array indicating whether the paths in paths are new to the selection"}{"idx": 62758, "node_name": "oldleadselectionpath", "Dec": "the previous lead selection path"}{"idx": 62759, "node_name": "newleadselectionpath", "Dec": "the new lead selection path"}{"idx": 62761, "node_name": "source", "Dec": "source of event"}{"idx": 62762, "node_name": "path", "Dec": "the path that has changed in the selection"}{"idx": 62763, "node_name": "isnew", "Dec": "whether or not the path is new to the selection , false means path was removed from the selection ."}{"idx": 62764, "node_name": "oldleadselectionpath", "Dec": "the previous lead selection path"}{"idx": 62765, "node_name": "newleadselectionpath", "Dec": "the new lead selection path"}{"idx": 62770, "node_name": "path", "Dec": "the path to test"}{"idx": 62772, "node_name": "index", "Dec": "the index of the path to test"}{"idx": 62776, "node_name": "newsource", "Dec": "source of event"}{"idx": 62779, "node_name": "e", "Dec": "the event that characterizes the change ."}{"idx": 62782, "node_name": "event", "Dec": "a treeexpansionevent containing a treepath object for the node"}{"idx": 62784, "node_name": "event", "Dec": "a treeexpansionevent containing a treepath object for the node"}{"idx": 62787, "node_name": "source", "Dec": "the object that originated the event ( typically this )"}{"idx": 62788, "node_name": "edit", "Dec": "an undoableedit object"}{"idx": 62792, "node_name": "e", "Dec": "an undoableeditevent object"}{"idx": 62796, "node_name": "f", "Dec": "the file to test"}{"idx": 62800, "node_name": "description", "Dec": "textual description for the filter , may be null"}{"idx": 62801, "node_name": "extensions", "Dec": "the accepted file name extensions"}{"idx": 62803, "node_name": "f", "Dec": "the file to test"}{"idx": 62811, "node_name": "f", "Dec": "a file object representing a directory"}{"idx": 62813, "node_name": "f", "Dec": "the file"}{"idx": 62815, "node_name": "f", "Dec": "a file object"}{"idx": 62817, "node_name": "f", "Dec": "a file object"}{"idx": 62819, "node_name": "f", "Dec": "a file object"}{"idx": 62821, "node_name": "folder", "Dec": "a file object representing a directory or special folder"}{"idx": 62822, "node_name": "file", "Dec": "a file object"}{"idx": 62824, "node_name": "parent", "Dec": "a file object representing a directory or special folder"}{"idx": 62825, "node_name": "filename", "Dec": "a name of a file or folder which exists in parent"}{"idx": 62827, "node_name": "f", "Dec": "a file object"}{"idx": 62829, "node_name": "containingdir", "Dec": "a file object denoting directory to contain the new folder"}{"idx": 62831, "node_name": "f", "Dec": "a file object"}{"idx": 62833, "node_name": "dir", "Dec": "a file object representing a directory"}{"idx": 62835, "node_name": "dir", "Dec": "a directory"}{"idx": 62837, "node_name": "dir", "Dec": "a directory"}{"idx": 62839, "node_name": "dir", "Dec": "a directory"}{"idx": 62844, "node_name": "dir", "Dec": "an abstract pathname denoting a directory"}{"idx": 62845, "node_name": "filename", "Dec": "a string representation of a pathname"}{"idx": 62847, "node_name": "path", "Dec": "string representation of path"}{"idx": 62849, "node_name": "dir", "Dec": "the root directory of files to be returned"}{"idx": 62850, "node_name": "usefilehiding", "Dec": "determine if hidden files are returned"}{"idx": 62852, "node_name": "dir", "Dec": "the file being queried"}{"idx": 62856, "node_name": "file", "Dec": "a file"}{"idx": 62858, "node_name": "file", "Dec": "a file"}{"idx": 62860, "node_name": "f", "Dec": "a file object representing a file system root directory , for example \" / \" on unix or \" c :\\ \" on windows ."}{"idx": 62864, "node_name": "f", "Dec": "a file object"}{"idx": 62866, "node_name": "f", "Dec": "a file object"}{"idx": 62868, "node_name": "f", "Dec": "a file object"}{"idx": 62870, "node_name": "f", "Dec": "a file object"}{"idx": 62872, "node_name": "f", "Dec": "a file object representing a directory"}{"idx": 62878, "node_name": "afocusmanager", "Dec": "the new keyboardfocusmanager for this thread's context"}{"idx": 62881, "node_name": "b", "Dec": "a boolean -- true if the pixels should be brightened"}{"idx": 62882, "node_name": "p", "Dec": "an int in the range 0 .. 100 that determines the percentage of gray , where 100 is the darkest gray , and 0 is the lightest"}{"idx": 62884, "node_name": "i", "Dec": "an image to be created as disabled"}{"idx": 62886, "node_name": "x", "Dec": "the x coordinate of the pixel"}{"idx": 62887, "node_name": "y", "Dec": "the y coordinate of the pixel"}{"idx": 62888, "node_name": "rgb", "Dec": "the integer pixel representation in the default rgb color model"}{"idx": 62892, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 62895, "node_name": "group", "Dec": "the group to add"}{"idx": 62897, "node_name": "component", "Dec": "the component to add"}{"idx": 62899, "node_name": "component", "Dec": "the component to add"}{"idx": 62900, "node_name": "min", "Dec": "the minimum size or one of default_size or preferred_size"}{"idx": 62901, "node_name": "pref", "Dec": "the preferred size or one of default_size or preferred_size"}{"idx": 62902, "node_name": "max", "Dec": "the maximum size or one of default_size or preferred_size"}{"idx": 62904, "node_name": "size", "Dec": "the size of the gap"}{"idx": 62906, "node_name": "min", "Dec": "the minimum size of the gap"}{"idx": 62907, "node_name": "pref", "Dec": "the preferred size of the gap"}{"idx": 62908, "node_name": "max", "Dec": "the maximum size of the gap"}{"idx": 62913, "node_name": "host", "Dec": "the container the grouplayout is the layoutmanager for"}{"idx": 62915, "node_name": "honorsvisibility", "Dec": "whether component visibility is considered when sizing and positioning components"}{"idx": 62918, "node_name": "component", "Dec": "the component"}{"idx": 62919, "node_name": "honorsvisibility", "Dec": "whether visibility of this component should be considered for sizing and positioning"}{"idx": 62921, "node_name": "autocreatepadding", "Dec": "whether a gap between components is automatically created"}{"idx": 62924, "node_name": "autocreatecontainerpadding", "Dec": "whether a gap between the container and components that touch the border of the container should automatically be created"}{"idx": 62927, "node_name": "group", "Dec": "the group that positions and sizes components along the horizontal axis"}{"idx": 62929, "node_name": "group", "Dec": "the group that positions and sizes components along the vertical axis"}{"idx": 62933, "node_name": "alignment", "Dec": "the alignment for the elements of the group"}{"idx": 62935, "node_name": "alignment", "Dec": "the alignment for the elements of the group"}{"idx": 62936, "node_name": "resizable", "Dec": "true if the group is resizable ; if the group is not resizable the preferred size is used for the minimum and maximum size of the group"}{"idx": 62938, "node_name": "resizable", "Dec": "whether the group is resizable"}{"idx": 62939, "node_name": "anchorbaselinetotop", "Dec": "whether the baseline is anchored to the top or bottom of the group"}{"idx": 62941, "node_name": "components", "Dec": "the components that are to have the same size"}{"idx": 62943, "node_name": "axis", "Dec": "the axis to link the size along ; one of swingconstants.horizontal or swingconstants.vertical"}{"idx": 62944, "node_name": "components", "Dec": "the components that are to have the same size"}{"idx": 62946, "node_name": "existingcomponent", "Dec": "the component that should be removed and replaced with newcomponent"}{"idx": 62947, "node_name": "newcomponent", "Dec": "the component to put in existingcomponent's place"}{"idx": 62949, "node_name": "layoutstyle", "Dec": "the layoutstyle to use"}{"idx": 62952, "node_name": "name", "Dec": "the string to be associated with the component"}{"idx": 62953, "node_name": "component", "Dec": "the component to be added"}{"idx": 62955, "node_name": "component", "Dec": "the component to be removed"}{"idx": 62957, "node_name": "parent", "Dec": "the container to return the preferred size for"}{"idx": 62959, "node_name": "parent", "Dec": "the container to return the size for"}{"idx": 62961, "node_name": "parent", "Dec": "the container to be laid out"}{"idx": 62963, "node_name": "component", "Dec": "the component added"}{"idx": 62964, "node_name": "constraints", "Dec": "description of where to place the component"}{"idx": 62966, "node_name": "parent", "Dec": "the container to return the size for"}{"idx": 62968, "node_name": "parent", "Dec": "the container hosting this layoutmanager"}{"idx": 62970, "node_name": "parent", "Dec": "the container hosting this layoutmanager"}{"idx": 62972, "node_name": "parent", "Dec": "the container hosting this layoutmanager"}{"idx": 62976, "node_name": "group", "Dec": "the group to add"}{"idx": 62978, "node_name": "component", "Dec": "the component to add"}{"idx": 62980, "node_name": "component", "Dec": "the component to add"}{"idx": 62981, "node_name": "min", "Dec": "the minimum size or one of default_size or preferred_size"}{"idx": 62982, "node_name": "pref", "Dec": "the preferred size or one of default_size or preferred_size"}{"idx": 62983, "node_name": "max", "Dec": "the maximum size or one of default_size or preferred_size"}{"idx": 62985, "node_name": "pref", "Dec": "the size of the gap"}{"idx": 62987, "node_name": "min", "Dec": "the minimum size of the gap"}{"idx": 62988, "node_name": "pref", "Dec": "the preferred size of the gap"}{"idx": 62989, "node_name": "max", "Dec": "the maximum size of the gap"}{"idx": 62991, "node_name": "alignment", "Dec": "the alignment"}{"idx": 62992, "node_name": "group", "Dec": "the group to add"}{"idx": 62994, "node_name": "alignment", "Dec": "the alignment"}{"idx": 62995, "node_name": "component", "Dec": "the component to add"}{"idx": 62997, "node_name": "alignment", "Dec": "the alignment"}{"idx": 62998, "node_name": "component", "Dec": "the component to add"}{"idx": 62999, "node_name": "min", "Dec": "the minimum size"}{"idx": 63000, "node_name": "pref", "Dec": "the preferred size"}{"idx": 63001, "node_name": "max", "Dec": "the maximum size"}{"idx": 63004, "node_name": "group", "Dec": "the group to add"}{"idx": 63006, "node_name": "group", "Dec": "the group to add"}{"idx": 63007, "node_name": "useasbaseline", "Dec": "whether the specified group should be used to calculate the baseline for this group"}{"idx": 63009, "node_name": "component", "Dec": "the component to add"}{"idx": 63011, "node_name": "useasbaseline", "Dec": "whether the specified component should be used to calculate the baseline for this group"}{"idx": 63012, "node_name": "component", "Dec": "the component to add"}{"idx": 63014, "node_name": "component", "Dec": "the component to add"}{"idx": 63015, "node_name": "min", "Dec": "the minimum size or one of default_size or preferred_size"}{"idx": 63016, "node_name": "pref", "Dec": "the preferred size or one of default_size or preferred_size"}{"idx": 63017, "node_name": "max", "Dec": "the maximum size or one of default_size or preferred_size"}{"idx": 63019, "node_name": "useasbaseline", "Dec": "whether the specified component should be used to calculate the baseline for this group"}{"idx": 63020, "node_name": "component", "Dec": "the component to add"}{"idx": 63021, "node_name": "min", "Dec": "the minimum size or one of default_size or preferred_size"}{"idx": 63022, "node_name": "pref", "Dec": "the preferred size or one of default_size or preferred_size"}{"idx": 63023, "node_name": "max", "Dec": "the maximum size or one of default_size or preferred_size"}{"idx": 63025, "node_name": "size", "Dec": "the size of the gap"}{"idx": 63027, "node_name": "min", "Dec": "the minimum size of the gap"}{"idx": 63028, "node_name": "pref", "Dec": "the preferred size of the gap"}{"idx": 63029, "node_name": "max", "Dec": "the maximum size of the gap"}{"idx": 63031, "node_name": "comp1", "Dec": "the first component"}{"idx": 63032, "node_name": "comp2", "Dec": "the second component"}{"idx": 63033, "node_name": "type", "Dec": "the type of gap ; one of the constants defined by layoutstyle"}{"idx": 63035, "node_name": "comp1", "Dec": "the first component"}{"idx": 63036, "node_name": "comp2", "Dec": "the second component"}{"idx": 63037, "node_name": "type", "Dec": "the type of gap"}{"idx": 63038, "node_name": "pref", "Dec": "the preferred size of the grap ; one of default_size or a value > = 0"}{"idx": 63039, "node_name": "max", "Dec": "the maximum size of the gap ; one of default_size , preferred_size or a value > = 0"}{"idx": 63041, "node_name": "type", "Dec": "the type of gap ; one of layoutstyle.componentplacement.related or layoutstyle.componentplacement.unrelated"}{"idx": 63043, "node_name": "type", "Dec": "the type of gap ; one of layoutstyle.componentplacement.related or layoutstyle.componentplacement.unrelated"}{"idx": 63044, "node_name": "pref", "Dec": "the preferred size of the grap ; one of default_size or a value > = 0"}{"idx": 63045, "node_name": "max", "Dec": "the maximum size of the gap ; one of default_size , preferred_size or a value > = 0"}{"idx": 63048, "node_name": "pref", "Dec": "the preferred size ; one of default_size or a value > = 0"}{"idx": 63049, "node_name": "max", "Dec": "the maximum size ; one of default_size , preferred_size or a value > = 0"}{"idx": 63052, "node_name": "c", "Dec": "a component to get properties useful for painting"}{"idx": 63053, "node_name": "g", "Dec": "the graphics context"}{"idx": 63054, "node_name": "x", "Dec": "the x coordinate of the icon's top-left corner"}{"idx": 63055, "node_name": "y", "Dec": "the y coordinate of the icon's top-left corner"}{"idx": 63066, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 63070, "node_name": "description", "Dec": "the description of the icon"}{"idx": 63075, "node_name": "filename", "Dec": "the name of the file containing the image"}{"idx": 63076, "node_name": "description", "Dec": "a brief textual description of the image"}{"idx": 63078, "node_name": "filename", "Dec": "a string specifying a filename or path"}{"idx": 63080, "node_name": "location", "Dec": "the url for the image"}{"idx": 63081, "node_name": "description", "Dec": "a brief textual description of the image"}{"idx": 63083, "node_name": "location", "Dec": "the url for the image"}{"idx": 63085, "node_name": "image", "Dec": "the image"}{"idx": 63086, "node_name": "description", "Dec": "a brief textual description of the image"}{"idx": 63088, "node_name": "image", "Dec": "the image"}{"idx": 63090, "node_name": "imagedata", "Dec": "an array of pixels in an image format supported by the awt toolkit , such as gif , jpeg , or ( as of 1.3 ) png"}{"idx": 63091, "node_name": "description", "Dec": "a brief textual description of the image"}{"idx": 63093, "node_name": "imagedata", "Dec": "an array of pixels in an image format supported by the awt toolkit , such as gif , jpeg , or ( as of 1.3 ) png"}{"idx": 63096, "node_name": "image", "Dec": "the image"}{"idx": 63100, "node_name": "image", "Dec": "the image"}{"idx": 63103, "node_name": "description", "Dec": "a brief textual description of the image"}{"idx": 63105, "node_name": "c", "Dec": "the component to be used as the observer if this icon has no image observer"}{"idx": 63106, "node_name": "g", "Dec": "the graphics context"}{"idx": 63107, "node_name": "x", "Dec": "the x coordinate of the icon's top-left corner"}{"idx": 63108, "node_name": "y", "Dec": "the y coordinate of the icon's top-left corner"}{"idx": 63112, "node_name": "observer", "Dec": "the image observer"}{"idx": 63119, "node_name": "map", "Dec": "the inputmap that is the parent of this one"}{"idx": 63122, "node_name": "keystroke", "Dec": "a keystroke"}{"idx": 63123, "node_name": "actionmapkey", "Dec": "an action map key"}{"idx": 63125, "node_name": "keystroke", "Dec": "the keystroke for which to get the binding"}{"idx": 63127, "node_name": "key", "Dec": "the keystroke for which to remove the binding"}{"idx": 63135, "node_name": "input", "Dec": "the jcomponent to verify"}{"idx": 63137, "node_name": "target", "Dec": "the target jcomponent to verify"}{"idx": 63139, "node_name": "source", "Dec": "the source jcomponent of the focus transfer"}{"idx": 63140, "node_name": "target", "Dec": "the target jcomponent of the focus transfer"}{"idx": 63144, "node_name": "frame", "Dec": "the jinternalframe whose initial component is to be returned"}{"idx": 63154, "node_name": "icon", "Dec": "the icon image to display on the button"}{"idx": 63156, "node_name": "text", "Dec": "the text of the button"}{"idx": 63158, "node_name": "a", "Dec": "the action used to specify the new button"}{"idx": 63160, "node_name": "text", "Dec": "the text of the button"}{"idx": 63161, "node_name": "icon", "Dec": "the icon image to display on the button"}{"idx": 63167, "node_name": "defaultcapable", "Dec": "true if this button will be capable of being the default button on the rootpane ; otherwise false"}{"idx": 63178, "node_name": "icon", "Dec": "the icon image to display"}{"idx": 63180, "node_name": "icon", "Dec": "the icon image to display"}{"idx": 63181, "node_name": "selected", "Dec": "a boolean value indicating the initial selection state . if true the check box is selected"}{"idx": 63183, "node_name": "text", "Dec": "the text of the check box ."}{"idx": 63185, "node_name": "a", "Dec": "the action used to specify the new check box"}{"idx": 63187, "node_name": "text", "Dec": "the text of the check box ."}{"idx": 63188, "node_name": "selected", "Dec": "a boolean value indicating the initial selection state . if true the check box is selected"}{"idx": 63190, "node_name": "text", "Dec": "the text of the check box ."}{"idx": 63191, "node_name": "icon", "Dec": "the icon image to display"}{"idx": 63193, "node_name": "text", "Dec": "the text of the check box ."}{"idx": 63194, "node_name": "icon", "Dec": "the icon image to display"}{"idx": 63195, "node_name": "selected", "Dec": "a boolean value indicating the initial selection state . if true the check box is selected"}{"idx": 63197, "node_name": "b", "Dec": "true requests that the border be painted flat ; false requests normal borders"}{"idx": 63209, "node_name": "icon", "Dec": "the icon of the jcheckboxmenuitem ."}{"idx": 63211, "node_name": "text", "Dec": "the text of the jcheckboxmenuitem"}{"idx": 63213, "node_name": "a", "Dec": "the action of the jcheckboxmenuitem"}{"idx": 63215, "node_name": "text", "Dec": "the text of the jcheckboxmenuitem"}{"idx": 63216, "node_name": "icon", "Dec": "the icon of the jcheckboxmenuitem"}{"idx": 63218, "node_name": "text", "Dec": "the text of the check box menu item ."}{"idx": 63219, "node_name": "b", "Dec": "the selected state of the check box menu item"}{"idx": 63221, "node_name": "text", "Dec": "the text of the check box menu item"}{"idx": 63222, "node_name": "icon", "Dec": "the icon of the check box menu item"}{"idx": 63223, "node_name": "b", "Dec": "the selected state of the check box menu item"}{"idx": 63227, "node_name": "b", "Dec": "a boolean value indicating the item's selected-state , where true=selected"}{"idx": 63241, "node_name": "initialcolor", "Dec": "the initial color set in the chooser"}{"idx": 63243, "node_name": "model", "Dec": "the colorselectionmodel to be used"}{"idx": 63245, "node_name": "component", "Dec": "the parent component for the dialog"}{"idx": 63246, "node_name": "title", "Dec": "the string containing the dialog's title"}{"idx": 63247, "node_name": "initialcolor", "Dec": "the initial color set when the color-chooser is shown"}{"idx": 63249, "node_name": "component", "Dec": "the parent component for the dialog"}{"idx": 63250, "node_name": "title", "Dec": "the string containing the dialog's title"}{"idx": 63251, "node_name": "initialcolor", "Dec": "the initial color set when the color-chooser is shown"}{"idx": 63252, "node_name": "colortransparencyselectionenabled", "Dec": "true if the transparency of a color can be selected"}{"idx": 63254, "node_name": "c", "Dec": "the parent component for the dialog"}{"idx": 63255, "node_name": "title", "Dec": "the title for the dialog"}{"idx": 63256, "node_name": "modal", "Dec": "a boolean . when true , the remainder of the program is inactive until the dialog is closed ."}{"idx": 63257, "node_name": "chooserpane", "Dec": "the color-chooser to be placed inside the dialog"}{"idx": 63258, "node_name": "oklistener", "Dec": "the actionlistener invoked when \" ok \" is pressed"}{"idx": 63259, "node_name": "cancellistener", "Dec": "the actionlistener invoked when \" cancel \" is pressed"}{"idx": 63262, "node_name": "ui", "Dec": "the colorchooserui l&f object"}{"idx": 63267, "node_name": "color", "Dec": "the color to be set in the color chooser"}{"idx": 63269, "node_name": "r", "Dec": "an int specifying the amount of red"}{"idx": 63270, "node_name": "g", "Dec": "an int specifying the amount of green"}{"idx": 63271, "node_name": "b", "Dec": "an int specifying the amount of blue"}{"idx": 63273, "node_name": "c", "Dec": "an integer value that sets the current color in the chooser where the low-order 8 bits specify the blue value , the next 8 bits specify the green value , and the 8 bits above that specify the red value ."}{"idx": 63275, "node_name": "b", "Dec": "the value to set the dragenabled property to"}{"idx": 63278, "node_name": "preview", "Dec": "the jcomponent which displays the current color"}{"idx": 63281, "node_name": "panel", "Dec": "the abstractcolorchooserpanel to be added"}{"idx": 63283, "node_name": "panel", "Dec": "a string that specifies the panel to be removed"}{"idx": 63285, "node_name": "panels", "Dec": "an array of abstractcolorchooserpanel objects"}{"idx": 63289, "node_name": "newmodel", "Dec": "the new colorselectionmodel object"}{"idx": 63296, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 63301, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 63304, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 63308, "node_name": "i", "Dec": "the zero-based index of selected children"}{"idx": 63310, "node_name": "i", "Dec": "the zero-based index of the child in this accessible object ."}{"idx": 63312, "node_name": "i", "Dec": "the zero-based index of the child"}{"idx": 63314, "node_name": "i", "Dec": "the zero-based index of the child"}{"idx": 63328, "node_name": "amodel", "Dec": "the comboboxmodel that provides the displayed list of items"}{"idx": 63330, "node_name": "items", "Dec": "an array of objects to insert into the combo box"}{"idx": 63332, "node_name": "items", "Dec": "an array of vectors to insert into the combo box"}{"idx": 63336, "node_name": "ui", "Dec": "the comboboxui l&f object"}{"idx": 63341, "node_name": "amodel", "Dec": "the comboboxmodel that provides the displayed list of items"}{"idx": 63344, "node_name": "aflag", "Dec": "if true , lightweight popups are desired"}{"idx": 63347, "node_name": "aflag", "Dec": "a boolean value , where true indicates that the field is editable"}{"idx": 63350, "node_name": "count", "Dec": "an integer specifying the maximum number of items to display in the list before using a scrollbar"}{"idx": 63353, "node_name": "arenderer", "Dec": "the listcellrenderer that displays the selected item"}{"idx": 63356, "node_name": "aneditor", "Dec": "the comboboxeditor that displays the selected item"}{"idx": 63359, "node_name": "anobject", "Dec": "the list object to select ; use null to clear the selection"}{"idx": 63362, "node_name": "anindex", "Dec": "an integer specifying the list item to select , where 0 specifies the first item in the list and -1 indicates no selection"}{"idx": 63366, "node_name": "prototypedisplayvalue", "Dec": "the prototype display value"}{"idx": 63368, "node_name": "item", "Dec": "the item to add to the list"}{"idx": 63370, "node_name": "item", "Dec": "the item to add to the list"}{"idx": 63371, "node_name": "index", "Dec": "an integer specifying the position at which to add the item"}{"idx": 63373, "node_name": "anobject", "Dec": "the object to remove from the item list"}{"idx": 63375, "node_name": "anindex", "Dec": "an int specifying the index of the item to remove , where 0 indicates the first item in the list"}{"idx": 63380, "node_name": "v", "Dec": "if true shows the popup , otherwise , hides the popup ."}{"idx": 63383, "node_name": "alistener", "Dec": "the itemlistener that is to be notified"}{"idx": 63385, "node_name": "alistener", "Dec": "the itemlistener to remove"}{"idx": 63388, "node_name": "l", "Dec": "the actionlistener that is to be notified"}{"idx": 63390, "node_name": "l", "Dec": "the actionlistener to remove"}{"idx": 63393, "node_name": "l", "Dec": "the popupmenulistener to add"}{"idx": 63395, "node_name": "l", "Dec": "the popupmenulistener to remove"}{"idx": 63401, "node_name": "acommand", "Dec": "a string containing the \" command \" that is sent to action listeners ; the same listener can then do different things depending on the command it receives"}{"idx": 63404, "node_name": "a", "Dec": "the action for the jcombobox , or null ."}{"idx": 63407, "node_name": "a", "Dec": "the action from which to get the properties , or null"}{"idx": 63409, "node_name": "a", "Dec": "the combobox's action"}{"idx": 63411, "node_name": "action", "Dec": "the action associated with this combobox"}{"idx": 63412, "node_name": "propertyname", "Dec": "the name of the property that changed"}{"idx": 63414, "node_name": "e", "Dec": "the event of interest"}{"idx": 63419, "node_name": "e", "Dec": "the event to be processed"}{"idx": 63421, "node_name": "e", "Dec": "a listdataevent encapsulating the event information"}{"idx": 63423, "node_name": "e", "Dec": "a listdataevent encapsulating the event information"}{"idx": 63425, "node_name": "e", "Dec": "a listdataevent encapsulating the event information"}{"idx": 63427, "node_name": "keychar", "Dec": "a char , typically this is a keyboard key typed by the user"}{"idx": 63429, "node_name": "b", "Dec": "a boolean value , where true enables the component and false disables it"}{"idx": 63431, "node_name": "aneditor", "Dec": "the comboboxeditor that displays the list item in the combo box field and allows it to be edited"}{"idx": 63432, "node_name": "anitem", "Dec": "the object to display and edit in the field"}{"idx": 63434, "node_name": "e", "Dec": "the keyevent containing the keyboard key that was pressed"}{"idx": 63436, "node_name": "amanager", "Dec": "a key selection manager"}{"idx": 63440, "node_name": "index", "Dec": "an integer indicating the list position , where the first item starts at zero"}{"idx": 63446, "node_name": "akey", "Dec": "a char value , usually indicating a keyboard key that was pressed"}{"idx": 63447, "node_name": "amodel", "Dec": "a comboboxmodel -- the component's data model , containing the list of selectable items"}{"idx": 63454, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 63456, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 63458, "node_name": "b", "Dec": "the border for which to retrieve its title"}{"idx": 63465, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 63479, "node_name": "value", "Dec": "whether or not the jpopupmenu is inherited"}{"idx": 63482, "node_name": "popup", "Dec": "- the popup that will be assigned to this component may be null"}{"idx": 63487, "node_name": "newui", "Dec": "the new ui delegate"}{"idx": 63490, "node_name": "g", "Dec": "the original graphics object"}{"idx": 63492, "node_name": "g", "Dec": "the graphics object to protect"}{"idx": 63494, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 63496, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 63498, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 63500, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 63502, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 63504, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 63506, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 63508, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 63510, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 63514, "node_name": "requestfocusenabled", "Dec": "indicates whether you want this jcomponent to be focusable or not"}{"idx": 63518, "node_name": "temporary", "Dec": "boolean indicating if the focus change is temporary"}{"idx": 63521, "node_name": "temporary", "Dec": "boolean indicating if the focus change is temporary"}{"idx": 63524, "node_name": "verifyinputwhenfocustarget", "Dec": "value for the verifyinputwhenfocustarget property"}{"idx": 63527, "node_name": "font", "Dec": "the font for which font metrics is to be obtained"}{"idx": 63529, "node_name": "preferredsize", "Dec": "the new preferred size , or null"}{"idx": 63532, "node_name": "maximumsize", "Dec": "a dimension containing the desired maximum allowable size"}{"idx": 63535, "node_name": "minimumsize", "Dec": "the new minimum size of this component"}{"idx": 63538, "node_name": "x", "Dec": "the x coordinate of the point"}{"idx": 63539, "node_name": "y", "Dec": "the y coordinate of the point"}{"idx": 63541, "node_name": "border", "Dec": "the border to be rendered for this component"}{"idx": 63545, "node_name": "insets", "Dec": "the insets object , which can be reused"}{"idx": 63548, "node_name": "alignmenty", "Dec": "the new vertical alignment"}{"idx": 63551, "node_name": "alignmentx", "Dec": "the new horizontal alignment"}{"idx": 63553, "node_name": "inputverifier", "Dec": "the new input verifier"}{"idx": 63557, "node_name": "debugoptions", "Dec": "determines how the component should display the information ; one of the following options : debuggraphics.log_option"}{"idx": 63561, "node_name": "anaction", "Dec": "action to be registered to given keystroke and condition"}{"idx": 63562, "node_name": "akeystroke", "Dec": "a keystroke"}{"idx": 63563, "node_name": "acondition", "Dec": "the condition to be associated with given keystroke and action"}{"idx": 63565, "node_name": "akeystroke", "Dec": "the keystroke for which to unregister its keyboard action"}{"idx": 63568, "node_name": "akeystroke", "Dec": "the keystroke for which to request an action-keystroke condition"}{"idx": 63570, "node_name": "akeystroke", "Dec": "the keystroke for which to return a listener"}{"idx": 63573, "node_name": "condition", "Dec": "one of the values listed above"}{"idx": 63574, "node_name": "map", "Dec": "the inputmap to use for the given condition"}{"idx": 63576, "node_name": "condition", "Dec": "one of when_in_focused_window , when_focused , when_ancestor_of_focused_component"}{"idx": 63579, "node_name": "am", "Dec": "the new actionmap"}{"idx": 63582, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 63583, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 63586, "node_name": "aflag", "Dec": "true to make the component visible ; false to make it invisible"}{"idx": 63588, "node_name": "enabled", "Dec": "true if this component should be enabled , false otherwise"}{"idx": 63590, "node_name": "fg", "Dec": "the desired foreground color"}{"idx": 63592, "node_name": "bg", "Dec": "the desired background color"}{"idx": 63594, "node_name": "font", "Dec": "the desired font for this component"}{"idx": 63597, "node_name": "l", "Dec": "the desired default locale for new components ."}{"idx": 63599, "node_name": "e", "Dec": "the event to be processed"}{"idx": 63601, "node_name": "e", "Dec": "the key event"}{"idx": 63603, "node_name": "ks", "Dec": "the keystroke queried"}{"idx": 63604, "node_name": "e", "Dec": "the keyevent"}{"idx": 63605, "node_name": "condition", "Dec": "one of the following values : jcomponent.when_focused jcomponent.when_ancestor_of_focused_component jcomponent.when_in_focused_window"}{"idx": 63606, "node_name": "pressed", "Dec": "true if the key is pressed"}{"idx": 63608, "node_name": "text", "Dec": "the string to display ; if the text is null , the tool tip is turned off for this component"}{"idx": 63611, "node_name": "event", "Dec": "the mouseevent that initiated the tooltip display"}{"idx": 63613, "node_name": "event", "Dec": "the mouseevent that caused the tooltipmanager to show the tooltip"}{"idx": 63615, "node_name": "event", "Dec": "the mouseevent that triggered the popup to be shown , or null if the popup is not being shown as the result of a mouse event"}{"idx": 63618, "node_name": "arect", "Dec": "the visible rectangle"}{"idx": 63620, "node_name": "autoscrolls", "Dec": "if true , synthetic mouse dragged events are generated when the mouse is dragged outside of a component's bounds and the mouse button continues to be held down ; otherwise false"}{"idx": 63623, "node_name": "newhandler", "Dec": "the new transferhandler"}{"idx": 63626, "node_name": "e", "Dec": "the mouse event"}{"idx": 63628, "node_name": "e", "Dec": "the mouseevent"}{"idx": 63630, "node_name": "key", "Dec": "the being queried"}{"idx": 63632, "node_name": "key", "Dec": "the new client property key"}{"idx": 63633, "node_name": "value", "Dec": "the new client property value ; if null putClientProperty(java.lang.Object,java.lang.Object) will remove the property"}{"idx": 63635, "node_name": "id", "Dec": "one of keyboardfocusmanager.forward_traversal_keys , keyboardfocusmanager.backward_traversal_keys , or keyboardfocusmanager.up_cycle_traversal_keys"}{"idx": 63636, "node_name": "keystrokes", "Dec": "the set of awtkeystroke for the specified operation"}{"idx": 63638, "node_name": "c", "Dec": "the component to be checked"}{"idx": 63640, "node_name": "rv", "Dec": "the return value , modified to the component's bounds"}{"idx": 63642, "node_name": "rv", "Dec": "the return value , modified to the component's size"}{"idx": 63644, "node_name": "rv", "Dec": "the return value , modified to the component's location"}{"idx": 63651, "node_name": "isopaque", "Dec": "true if this component should be opaque"}{"idx": 63653, "node_name": "visiblerect", "Dec": "a rectangle computed as the intersection of all visible rectangles for this component and all of its ancestors -- this is the return value for computeVisibleRect(java.awt.Rectangle)"}{"idx": 63656, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 63657, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 63658, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 63660, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 63661, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 63662, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 63664, "node_name": "propertyname", "Dec": "the name of the property that was listened on"}{"idx": 63665, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 63666, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 63668, "node_name": "listener", "Dec": "the vetoablechangelistener to be added"}{"idx": 63670, "node_name": "listener", "Dec": "the vetoablechangelistener to be removed"}{"idx": 63674, "node_name": "listener", "Dec": "the ancestorlistener to register"}{"idx": 63676, "node_name": "listener", "Dec": "the ancestorlistener to be removed"}{"idx": 63679, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 63683, "node_name": "tm", "Dec": "this parameter is not used"}{"idx": 63684, "node_name": "x", "Dec": "the x value of the dirty region"}{"idx": 63685, "node_name": "y", "Dec": "the y value of the dirty region"}{"idx": 63686, "node_name": "width", "Dec": "the width of the dirty region"}{"idx": 63687, "node_name": "height", "Dec": "the height of the dirty region"}{"idx": 63689, "node_name": "r", "Dec": "a rectangle containing the dirty region"}{"idx": 63695, "node_name": "x", "Dec": "the x value of the region to be painted"}{"idx": 63696, "node_name": "y", "Dec": "the y value of the region to be painted"}{"idx": 63697, "node_name": "w", "Dec": "the width of the region to be painted"}{"idx": 63698, "node_name": "h", "Dec": "the height of the region to be painted"}{"idx": 63700, "node_name": "r", "Dec": "a rectangle containing the region to be painted"}{"idx": 63702, "node_name": "aflag", "Dec": "if true , set this component to be double buffered"}{"idx": 63715, "node_name": "ui", "Dec": "the desktoppaneui l&f object"}{"idx": 63717, "node_name": "dragmode", "Dec": "the style of drag to use for items in the desktop"}{"idx": 63721, "node_name": "d", "Dec": "the desktopmanager to use"}{"idx": 63727, "node_name": "f", "Dec": "the internal frame that's currently selected"}{"idx": 63729, "node_name": "layer", "Dec": "an int specifying the desktop layer"}{"idx": 63731, "node_name": "forward", "Dec": "a boolean indicating which direction to select in ; true for forward , false for backward"}{"idx": 63733, "node_name": "comp", "Dec": "the component to be added"}{"idx": 63734, "node_name": "constraints", "Dec": "an object expressing layout constraints for this component"}{"idx": 63735, "node_name": "index", "Dec": "the position in the container's list at which to insert the component , where -1 means append to the end"}{"idx": 63737, "node_name": "index", "Dec": "an int specifying the component to remove"}{"idx": 63740, "node_name": "comp", "Dec": "the component to be moved"}{"idx": 63741, "node_name": "index", "Dec": "the position in the container's list to insert the component , where getcomponentcount() appends to the end"}{"idx": 63754, "node_name": "owner", "Dec": "the frame from which the dialog is displayed"}{"idx": 63756, "node_name": "owner", "Dec": "the frame from which the dialog is displayed"}{"idx": 63757, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if true , the modality type property is set to default_modality_type , otherwise the dialog is modeless ."}{"idx": 63759, "node_name": "owner", "Dec": "the frame from which the dialog is displayed"}{"idx": 63760, "node_name": "title", "Dec": "the string to display in the dialog's title bar"}{"idx": 63762, "node_name": "owner", "Dec": "the frame from which the dialog is displayed"}{"idx": 63763, "node_name": "title", "Dec": "the string to display in the dialog's title bar"}{"idx": 63764, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if true , the modality type property is set to default_modality_type otherwise the dialog is modeless"}{"idx": 63766, "node_name": "owner", "Dec": "the frame from which the dialog is displayed"}{"idx": 63767, "node_name": "title", "Dec": "the string to display in the dialog's title bar"}{"idx": 63768, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if true , the modality type property is set to default_modality_type , otherwise the dialog is modeless ."}{"idx": 63769, "node_name": "gc", "Dec": "the graphicsconfiguration of the target screen device ; if null , the default system graphicsconfiguration is assumed"}{"idx": 63771, "node_name": "owner", "Dec": "the owner dialog from which the dialog is displayed or null if this dialog has no owner"}{"idx": 63773, "node_name": "owner", "Dec": "the owner dialog from which the dialog is displayed or null if this dialog has no owner"}{"idx": 63774, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if true , the modality type property is set to default_modality_type , otherwise the dialog is modeless ."}{"idx": 63776, "node_name": "owner", "Dec": "the owner dialog from which the dialog is displayed or null if this dialog has no owner"}{"idx": 63777, "node_name": "title", "Dec": "the string to display in the dialog's title bar"}{"idx": 63779, "node_name": "owner", "Dec": "the owner dialog from which the dialog is displayed or null if this dialog has no owner"}{"idx": 63780, "node_name": "title", "Dec": "the string to display in the dialog's title bar"}{"idx": 63781, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if true , the modality type property is set to default_modality_type , otherwise the dialog is modeless"}{"idx": 63783, "node_name": "owner", "Dec": "the owner dialog from which the dialog is displayed or null if this dialog has no owner"}{"idx": 63784, "node_name": "title", "Dec": "the string to display in the dialog's title bar"}{"idx": 63785, "node_name": "modal", "Dec": "specifies whether dialog blocks user input to other top-level windows when shown . if true , the modality type property is set to default_modality_type , otherwise the dialog is modeless"}{"idx": 63786, "node_name": "gc", "Dec": "the graphicsconfiguration of the target screen device ; if null , the default system graphicsconfiguration is assumed"}{"idx": 63788, "node_name": "owner", "Dec": "the window from which the dialog is displayed or null if this dialog has no owner"}{"idx": 63790, "node_name": "owner", "Dec": "the window from which the dialog is displayed or null if this dialog has no owner"}{"idx": 63791, "node_name": "modalitytype", "Dec": "specifies whether dialog blocks input to other windows when shown . null value and unsupported modality types are equivalent to modeless"}{"idx": 63793, "node_name": "owner", "Dec": "the window from which the dialog is displayed or null if this dialog has no owner"}{"idx": 63794, "node_name": "title", "Dec": "the string to display in the dialog's title bar or null if the dialog has no title"}{"idx": 63796, "node_name": "owner", "Dec": "the window from which the dialog is displayed or null if this dialog has no owner"}{"idx": 63797, "node_name": "title", "Dec": "the string to display in the dialog's title bar or null if the dialog has no title"}{"idx": 63798, "node_name": "modalitytype", "Dec": "specifies whether dialog blocks input to other windows when shown . null value and unsupported modality types are equivalent to modeless"}{"idx": 63800, "node_name": "owner", "Dec": "the window from which the dialog is displayed or null if this dialog has no owner"}{"idx": 63801, "node_name": "title", "Dec": "the string to display in the dialog's title bar or null if the dialog has no title"}{"idx": 63802, "node_name": "modalitytype", "Dec": "specifies whether dialog blocks input to other windows when shown . null value and unsupported modality types are equivalent to modeless"}{"idx": 63803, "node_name": "gc", "Dec": "the graphicsconfiguration of the target screen device ; if null , the default system graphicsconfiguration is assumed"}{"idx": 63807, "node_name": "e", "Dec": "the window event"}{"idx": 63809, "node_name": "operation", "Dec": "the operation which should be performed when the user closes the dialog"}{"idx": 63812, "node_name": "newhandler", "Dec": "the new transferhandler"}{"idx": 63815, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 63817, "node_name": "menu", "Dec": "the menubar being placed in the dialog"}{"idx": 63821, "node_name": "enabled", "Dec": "true if add and setlayout are forwarded , false if they should operate directly on the jdialog ."}{"idx": 63823, "node_name": "comp", "Dec": "the component to be enhanced"}{"idx": 63824, "node_name": "constraints", "Dec": "the constraints to be respected"}{"idx": 63825, "node_name": "index", "Dec": "the index"}{"idx": 63827, "node_name": "comp", "Dec": "the component to be removed"}{"idx": 63829, "node_name": "manager", "Dec": "the layoutmanager"}{"idx": 63832, "node_name": "root", "Dec": "the rootpane object for this dialog"}{"idx": 63835, "node_name": "contentpane", "Dec": "the contentpane object for this dialog"}{"idx": 63838, "node_name": "layeredpane", "Dec": "the new layeredpane property"}{"idx": 63841, "node_name": "glasspane", "Dec": "the glasspane object for this dialog"}{"idx": 63844, "node_name": "time", "Dec": "maximum time in milliseconds before update"}{"idx": 63845, "node_name": "x", "Dec": "the x coordinate"}{"idx": 63846, "node_name": "y", "Dec": "the y coordinate"}{"idx": 63847, "node_name": "width", "Dec": "the width"}{"idx": 63848, "node_name": "height", "Dec": "the height"}{"idx": 63850, "node_name": "defaultlookandfeeldecorated", "Dec": "a hint as to whether or not current look and feel should provide window decorations"}{"idx": 63863, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 63865, "node_name": "p", "Dec": "the point relative to the coordinate system of this object ."}{"idx": 63868, "node_name": "e", "Dec": "the element"}{"idx": 63872, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 63874, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 63876, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 63878, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 63885, "node_name": "charindex", "Dec": "index within the text"}{"idx": 63887, "node_name": "linkindex", "Dec": "into the set of hyperlinks for this hypertext doc ."}{"idx": 63889, "node_name": "linkindex", "Dec": "into the set of hyperlinks for this hypertext doc ."}{"idx": 63895, "node_name": "initialpage", "Dec": "the url"}{"idx": 63897, "node_name": "url", "Dec": "the url"}{"idx": 63899, "node_name": "type", "Dec": "mime type of the given text"}{"idx": 63900, "node_name": "text", "Dec": "the text to initialize with ; may be null"}{"idx": 63902, "node_name": "listener", "Dec": "the listener"}{"idx": 63904, "node_name": "listener", "Dec": "the listener"}{"idx": 63907, "node_name": "e", "Dec": "the event"}{"idx": 63909, "node_name": "page", "Dec": "the url of the page"}{"idx": 63911, "node_name": "in", "Dec": "the stream from which to read"}{"idx": 63912, "node_name": "desc", "Dec": "an object describing the stream"}{"idx": 63914, "node_name": "page", "Dec": "the url of the page"}{"idx": 63916, "node_name": "reference", "Dec": "the named location to scroll to"}{"idx": 63919, "node_name": "url", "Dec": "the url for display"}{"idx": 63925, "node_name": "type", "Dec": "the non-null mime type for the content editing support"}{"idx": 63927, "node_name": "kit", "Dec": "the desired editor behavior"}{"idx": 63929, "node_name": "type", "Dec": "the non-null content type"}{"idx": 63931, "node_name": "type", "Dec": "the non-null content type"}{"idx": 63932, "node_name": "k", "Dec": "the editor kit to be set"}{"idx": 63934, "node_name": "content", "Dec": "the content to replace the selection with . this value can be null"}{"idx": 63936, "node_name": "type", "Dec": "the content type"}{"idx": 63938, "node_name": "type", "Dec": "the non-null content type"}{"idx": 63939, "node_name": "classname", "Dec": "the class to load later"}{"idx": 63941, "node_name": "type", "Dec": "the non-null content type"}{"idx": 63942, "node_name": "classname", "Dec": "the class to load later"}{"idx": 63943, "node_name": "loader", "Dec": "the classloader to use to load the name"}{"idx": 63945, "node_name": "type", "Dec": "the non-null content type"}{"idx": 63948, "node_name": "t", "Dec": "the new text to be set ; if null the old text will be deleted"}{"idx": 63990, "node_name": "currentdirectorypath", "Dec": "a string giving the path to a file or directory"}{"idx": 63992, "node_name": "currentdirectory", "Dec": "a file object specifying the path to a file or directory"}{"idx": 63994, "node_name": "fsv", "Dec": "a filesystemview"}{"idx": 63996, "node_name": "currentdirectory", "Dec": "a file object specifying the path to a file or directory"}{"idx": 63997, "node_name": "fsv", "Dec": "a filesystemview"}{"idx": 63999, "node_name": "currentdirectorypath", "Dec": "a string specifying the path to a file or directory"}{"idx": 64000, "node_name": "fsv", "Dec": "a filesystemview"}{"idx": 64002, "node_name": "view", "Dec": "the filesystemview used for setup"}{"idx": 64004, "node_name": "b", "Dec": "the value to set the dragenabled property to"}{"idx": 64008, "node_name": "file", "Dec": "the selected file"}{"idx": 64011, "node_name": "selectedfiles", "Dec": "an array files to be selected"}{"idx": 64014, "node_name": "dir", "Dec": "the current directory to point to"}{"idx": 64018, "node_name": "f", "Dec": "a file object"}{"idx": 64020, "node_name": "parent", "Dec": "the parent component of the dialog , can be null ; see showdialog for details"}{"idx": 64022, "node_name": "parent", "Dec": "the parent component of the dialog , can be null ; see showdialog for details"}{"idx": 64024, "node_name": "parent", "Dec": "the parent component of the dialog ; can be null"}{"idx": 64025, "node_name": "approvebuttontext", "Dec": "the text of the approvebutton"}{"idx": 64027, "node_name": "parent", "Dec": "the parent component of the dialog ; can be null"}{"idx": 64030, "node_name": "b", "Dec": "false if control buttons should not be shown ; otherwise , true"}{"idx": 64033, "node_name": "dialogtype", "Dec": "the type of dialog to be displayed : jfilechooser.open_dialog jfilechooser.save_dialog jfilechooser.custom_dialog"}{"idx": 64035, "node_name": "dialogtitle", "Dec": "the new string for the title bar"}{"idx": 64038, "node_name": "tooltiptext", "Dec": "the tooltip text for the approve button"}{"idx": 64042, "node_name": "mnemonic", "Dec": "an integer value for the mnemonic key"}{"idx": 64044, "node_name": "mnemonic", "Dec": "a character value for the mnemonic key"}{"idx": 64046, "node_name": "approvebuttontext", "Dec": "the text used in the approvebutton"}{"idx": 64050, "node_name": "filter", "Dec": "the filefilter to add to the choosable file filter list"}{"idx": 64052, "node_name": "f", "Dec": "the file filter to be removed"}{"idx": 64057, "node_name": "b", "Dec": "a boolean which determines whether the acceptall file filter is an available choice in the choosable filter list"}{"idx": 64060, "node_name": "newaccessory", "Dec": "the accessory component to be set"}{"idx": 64062, "node_name": "mode", "Dec": "the type of files to be displayed : jfilechooser.files_only jfilechooser.directories_only jfilechooser.files_and_directories"}{"idx": 64067, "node_name": "b", "Dec": "true if multiple files may be selected"}{"idx": 64071, "node_name": "b", "Dec": "the boolean value that determines whether file hiding is turned on"}{"idx": 64073, "node_name": "filter", "Dec": "the new current file filter to use"}{"idx": 64076, "node_name": "fileview", "Dec": "a fileview to be used to retrieve ui information"}{"idx": 64079, "node_name": "f", "Dec": "the file"}{"idx": 64081, "node_name": "f", "Dec": "the file"}{"idx": 64083, "node_name": "f", "Dec": "the file"}{"idx": 64085, "node_name": "f", "Dec": "the file"}{"idx": 64087, "node_name": "f", "Dec": "the file"}{"idx": 64089, "node_name": "f", "Dec": "the file"}{"idx": 64091, "node_name": "fsv", "Dec": "the new filesystemview"}{"idx": 64096, "node_name": "l", "Dec": "the listener to be added"}{"idx": 64098, "node_name": "l", "Dec": "the listener to be removed"}{"idx": 64101, "node_name": "command", "Dec": "a string that may specify a command associated with the event"}{"idx": 64110, "node_name": "ftf", "Dec": "jformattedtextfield to format for , may be null indicating uninstall from current jformattedtextfield ."}{"idx": 64113, "node_name": "text", "Dec": "string to convert"}{"idx": 64115, "node_name": "value", "Dec": "value to convert"}{"idx": 64119, "node_name": "valid", "Dec": "valid state of the jformattedtextfield"}{"idx": 64127, "node_name": "tf", "Dec": "jformattedtextfield requesting abstractformatter"}{"idx": 64135, "node_name": "value", "Dec": "initial value for the jformattedtextfield"}{"idx": 64137, "node_name": "format", "Dec": "format used to look up an abstractformatter"}{"idx": 64139, "node_name": "formatter", "Dec": "abstractformatter to use for formatting ."}{"idx": 64141, "node_name": "factory", "Dec": "abstractformatterfactory used for formatting ."}{"idx": 64143, "node_name": "factory", "Dec": "abstractformatterfactory used for formatting ."}{"idx": 64144, "node_name": "currentvalue", "Dec": "initial value to use"}{"idx": 64146, "node_name": "behavior", "Dec": "identifies behavior when focus is lost"}{"idx": 64149, "node_name": "tf", "Dec": "abstractformatterfactory used to lookup instances of abstractformatter"}{"idx": 64152, "node_name": "format", "Dec": "abstractformatter to use for formatting"}{"idx": 64155, "node_name": "value", "Dec": "current value to display"}{"idx": 64161, "node_name": "e", "Dec": "the inputmethodevent"}{"idx": 64163, "node_name": "e", "Dec": "the focusevent"}{"idx": 64167, "node_name": "doc", "Dec": "the document to display / edit"}{"idx": 64178, "node_name": "gc", "Dec": "the graphicsconfiguration that is used to construct the new frame ; if gc is null , the system default graphicsconfiguration is assumed"}{"idx": 64180, "node_name": "title", "Dec": "the title for the frame"}{"idx": 64182, "node_name": "title", "Dec": "the title to be displayed in the frame's border . a null value is treated as an empty string , \"\" ."}{"idx": 64183, "node_name": "gc", "Dec": "the graphicsconfiguration that is used to construct the new jframe with ; if gc is null , the system default graphicsconfiguration is assumed"}{"idx": 64187, "node_name": "e", "Dec": "the window event"}{"idx": 64189, "node_name": "operation", "Dec": "the operation which should be performed when the user closes the frame"}{"idx": 64192, "node_name": "newhandler", "Dec": "the new transferhandler"}{"idx": 64195, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 64197, "node_name": "menubar", "Dec": "the menubar being placed in the frame"}{"idx": 64201, "node_name": "enabled", "Dec": "true if add and setlayout are forwarded , false if they should operate directly on the jframe ."}{"idx": 64203, "node_name": "comp", "Dec": "the component to be enhanced"}{"idx": 64204, "node_name": "constraints", "Dec": "the constraints to be respected"}{"idx": 64205, "node_name": "index", "Dec": "the index"}{"idx": 64207, "node_name": "comp", "Dec": "the component to be removed"}{"idx": 64209, "node_name": "manager", "Dec": "the layoutmanager"}{"idx": 64212, "node_name": "root", "Dec": "the rootpane object for this frame"}{"idx": 64215, "node_name": "contentpane", "Dec": "the contentpane object for this frame"}{"idx": 64218, "node_name": "layeredpane", "Dec": "the layeredpane object for this frame"}{"idx": 64221, "node_name": "glasspane", "Dec": "the glasspane object for this frame"}{"idx": 64224, "node_name": "time", "Dec": "maximum time in milliseconds before update"}{"idx": 64225, "node_name": "x", "Dec": "the x coordinate"}{"idx": 64226, "node_name": "y", "Dec": "the y coordinate"}{"idx": 64227, "node_name": "width", "Dec": "the width"}{"idx": 64228, "node_name": "height", "Dec": "the height"}{"idx": 64230, "node_name": "defaultlookandfeeldecorated", "Dec": "a hint as to whether or not current look and feel should provide window decorations"}{"idx": 64241, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 64250, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 64255, "node_name": "f", "Dec": "the jinternalframe for which the icon is created"}{"idx": 64258, "node_name": "ui", "Dec": "the desktopiconui look-and-feel object"}{"idx": 64261, "node_name": "f", "Dec": "the jinternalframe with which this icon is associated"}{"idx": 64293, "node_name": "title", "Dec": "the non-null string to display in the title bar"}{"idx": 64295, "node_name": "title", "Dec": "the string to display in the title bar"}{"idx": 64296, "node_name": "resizable", "Dec": "if true , the internal frame can be resized"}{"idx": 64298, "node_name": "title", "Dec": "the string to display in the title bar"}{"idx": 64299, "node_name": "resizable", "Dec": "if true , the internal frame can be resized"}{"idx": 64300, "node_name": "closable", "Dec": "if true , the internal frame can be closed"}{"idx": 64302, "node_name": "title", "Dec": "the string to display in the title bar"}{"idx": 64303, "node_name": "resizable", "Dec": "if true , the internal frame can be resized"}{"idx": 64304, "node_name": "closable", "Dec": "if true , the internal frame can be closed"}{"idx": 64305, "node_name": "maximizable", "Dec": "if true , the internal frame can be maximized"}{"idx": 64307, "node_name": "title", "Dec": "the string to display in the title bar"}{"idx": 64308, "node_name": "resizable", "Dec": "if true , the internal frame can be resized"}{"idx": 64309, "node_name": "closable", "Dec": "if true , the internal frame can be closed"}{"idx": 64310, "node_name": "maximizable", "Dec": "if true , the internal frame can be maximized"}{"idx": 64311, "node_name": "iconifiable", "Dec": "if true , the internal frame can be iconified"}{"idx": 64315, "node_name": "ui", "Dec": "the ui delegate"}{"idx": 64320, "node_name": "enabled", "Dec": "true if add and setlayout are forwarded , false if they should operate directly on the jinternalframe ."}{"idx": 64322, "node_name": "comp", "Dec": "the component to be enhanced"}{"idx": 64323, "node_name": "constraints", "Dec": "the constraints to be respected"}{"idx": 64324, "node_name": "index", "Dec": "the index"}{"idx": 64326, "node_name": "comp", "Dec": "the component to be removed"}{"idx": 64328, "node_name": "manager", "Dec": "the layoutmanager"}{"idx": 64331, "node_name": "m", "Dec": "the jmenubar to use in this internal frame"}{"idx": 64334, "node_name": "c", "Dec": "the content pane for this internal frame"}{"idx": 64337, "node_name": "layered", "Dec": "the jlayeredpane for this internal frame"}{"idx": 64340, "node_name": "glass", "Dec": "the glass pane for this internal frame"}{"idx": 64343, "node_name": "root", "Dec": "the new jrootpane object"}{"idx": 64345, "node_name": "b", "Dec": "a boolean value , where true means this internal frame can be closed"}{"idx": 64349, "node_name": "b", "Dec": "must be true"}{"idx": 64351, "node_name": "b", "Dec": "a boolean , where true means this internal frame can be resized"}{"idx": 64354, "node_name": "b", "Dec": "a boolean , where true means this internal frame can be iconified"}{"idx": 64358, "node_name": "b", "Dec": "a boolean , where true means to iconify this internal frame and false means to de-iconify it"}{"idx": 64360, "node_name": "b", "Dec": "true to specify that this internal frame should be maximizable ; false to specify that it should not be"}{"idx": 64364, "node_name": "b", "Dec": "a boolean , where true maximizes this internal frame and false restores it"}{"idx": 64367, "node_name": "title", "Dec": "the string to display in the title bar"}{"idx": 64369, "node_name": "selected", "Dec": "a boolean , where true means this internal frame should become selected ( currently active ) and false means it should become deselected"}{"idx": 64372, "node_name": "icon", "Dec": "the icon to display in the title bar"}{"idx": 64378, "node_name": "cursor", "Dec": "one of the constants defined by the cursor class ; if this parameter is null then this component will inherit the cursor of its parent"}{"idx": 64380, "node_name": "layer", "Dec": "an integer object specifying this frame's desktop layer"}{"idx": 64382, "node_name": "layer", "Dec": "an integer specifying this internal frame's desktop layer"}{"idx": 64386, "node_name": "d", "Dec": "the jdesktopicon to display on the desktop"}{"idx": 64390, "node_name": "r", "Dec": "the bounds that this internal frame should be restored to"}{"idx": 64395, "node_name": "x", "Dec": "an integer giving the component's new horizontal position measured in pixels from the left of its container"}{"idx": 64396, "node_name": "y", "Dec": "an integer giving the component's new vertical position , measured in pixels from the bottom of its container"}{"idx": 64397, "node_name": "width", "Dec": "an integer giving the component's new width in pixels"}{"idx": 64398, "node_name": "height", "Dec": "an integer giving the component's new height in pixels"}{"idx": 64400, "node_name": "l", "Dec": "the internal frame listener"}{"idx": 64402, "node_name": "l", "Dec": "the internal frame listener"}{"idx": 64405, "node_name": "id", "Dec": "the type of the event being fired ; one of the following : internalframeevent.internal_frame_opened internalframeevent.internal_frame_closing internalframeevent.internal_frame_closed internalframeevent.internal_frame_iconified internalframeevent.internal_frame_deiconified internalframeevent.internal_frame_activated internalframeevent.internal_frame_deactivated if the event type is not one of the above , nothing happens ."}{"idx": 64415, "node_name": "focuscycleroot", "Dec": "this value is ignored"}{"idx": 64421, "node_name": "g", "Dec": "the graphics object to protect"}{"idx": 64430, "node_name": "p", "Dec": "the point in local coordinates"}{"idx": 64432, "node_name": "i", "Dec": "the index into the string"}{"idx": 64436, "node_name": "part", "Dec": "the accessibletext.character , accessibletext.word , or accessibletext.sentence to retrieve"}{"idx": 64437, "node_name": "index", "Dec": "an index within the text > = 0"}{"idx": 64439, "node_name": "part", "Dec": "the accessibletext.character , accessibletext.word , or accessibletext.sentence to retrieve"}{"idx": 64440, "node_name": "index", "Dec": "an index within the text > = 0"}{"idx": 64442, "node_name": "part", "Dec": "the accessibletext.character , accessibletext.word , or accessibletext.sentence to retrieve"}{"idx": 64443, "node_name": "index", "Dec": "an index within the text > = 0"}{"idx": 64445, "node_name": "i", "Dec": "the zero-based index into the text"}{"idx": 64455, "node_name": "text", "Dec": "the text to be displayed by the label ."}{"idx": 64456, "node_name": "icon", "Dec": "the image to be displayed by the label ."}{"idx": 64457, "node_name": "horizontalalignment", "Dec": "one of the following constants defined in swingconstants : left , center , right , leading or trailing ."}{"idx": 64459, "node_name": "text", "Dec": "the text to be displayed by the label ."}{"idx": 64460, "node_name": "horizontalalignment", "Dec": "one of the following constants defined in swingconstants : left , center , right , leading or trailing ."}{"idx": 64462, "node_name": "text", "Dec": "the text to be displayed by the label ."}{"idx": 64464, "node_name": "image", "Dec": "the image to be displayed by the label ."}{"idx": 64465, "node_name": "horizontalalignment", "Dec": "one of the following constants defined in swingconstants : left , center , right , leading or trailing ."}{"idx": 64467, "node_name": "image", "Dec": "the image to be displayed by the label ."}{"idx": 64471, "node_name": "ui", "Dec": "the labelui l&f object"}{"idx": 64476, "node_name": "text", "Dec": "the single line of text this component will display"}{"idx": 64479, "node_name": "icon", "Dec": "the default icon this component will display"}{"idx": 64482, "node_name": "disabledicon", "Dec": "the icon to display when the component is disabled"}{"idx": 64484, "node_name": "key", "Dec": "a keycode that indicates a mnemonic key"}{"idx": 64486, "node_name": "achar", "Dec": "a char specifying the mnemonic to display"}{"idx": 64489, "node_name": "index", "Dec": "index into the string to underline"}{"idx": 64492, "node_name": "key", "Dec": "the property value to check"}{"idx": 64493, "node_name": "message", "Dec": "the illegalargumentexception detail message"}{"idx": 64495, "node_name": "key", "Dec": "the property value to check"}{"idx": 64496, "node_name": "message", "Dec": "the illegalargumentexception detail message"}{"idx": 64499, "node_name": "icontextgap", "Dec": "the space between the icon and text properties"}{"idx": 64502, "node_name": "alignment", "Dec": "one of the following constants defined in swingconstants : top , center ( the default ) , or bottom ."}{"idx": 64505, "node_name": "alignment", "Dec": "one of the following constants defined in swingconstants : left , center ( the default for image-only labels ) , right , leading ( the default for text-only labels ) or trailing ."}{"idx": 64508, "node_name": "textposition", "Dec": "one of the following constants defined in swingconstants : top , center ( the default ) , or bottom ."}{"idx": 64511, "node_name": "textposition", "Dec": "one of the following constants defined in swingconstants : left , center , right , leading , or trailing ( the default ) ."}{"idx": 64513, "node_name": "img", "Dec": "the image being observed"}{"idx": 64514, "node_name": "infoflags", "Dec": "see imageupdate for more information"}{"idx": 64515, "node_name": "x", "Dec": "the x coordinate"}{"idx": 64516, "node_name": "y", "Dec": "the y coordinate"}{"idx": 64517, "node_name": "w", "Dec": "the width"}{"idx": 64518, "node_name": "h", "Dec": "the height"}{"idx": 64522, "node_name": "c", "Dec": "the component this label is for , or null if the label is not the label for a component"}{"idx": 64527, "node_name": "view", "Dec": "the component to be decorated by this jlayer"}{"idx": 64529, "node_name": "view", "Dec": "the component to be decorated"}{"idx": 64530, "node_name": "ui", "Dec": "the layerui delegate to be used by this jlayer"}{"idx": 64533, "node_name": "view", "Dec": "the view component for this jlayer"}{"idx": 64535, "node_name": "ui", "Dec": "the layerui for this jlayer"}{"idx": 64539, "node_name": "glasspane", "Dec": "the glasspane component of this jlayer"}{"idx": 64542, "node_name": "mgr", "Dec": "the specified layout manager"}{"idx": 64544, "node_name": "border", "Dec": "the border to be rendered for the view component"}{"idx": 64547, "node_name": "comp", "Dec": "the component to be added"}{"idx": 64548, "node_name": "constraints", "Dec": "an object expressing layout constraints for this component"}{"idx": 64549, "node_name": "index", "Dec": "the position in the container's list at which to insert the component , where -1 means append to the end"}{"idx": 64552, "node_name": "x", "Dec": "the x value of the region to be painted"}{"idx": 64553, "node_name": "y", "Dec": "the y value of the region to be painted"}{"idx": 64554, "node_name": "w", "Dec": "the width of the region to be painted"}{"idx": 64555, "node_name": "h", "Dec": "the height of the region to be painted"}{"idx": 64557, "node_name": "img", "Dec": "the image being observed"}{"idx": 64558, "node_name": "infoflags", "Dec": "see imageupdate for more information"}{"idx": 64559, "node_name": "x", "Dec": "the x coordinate"}{"idx": 64560, "node_name": "y", "Dec": "the y coordinate"}{"idx": 64561, "node_name": "w", "Dec": "the width"}{"idx": 64562, "node_name": "h", "Dec": "the height"}{"idx": 64564, "node_name": "g", "Dec": "the graphics to render to"}{"idx": 64566, "node_name": "g", "Dec": "the graphics object to protect"}{"idx": 64569, "node_name": "layereventmask", "Dec": "the bitmask of event types to receive"}{"idx": 64574, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 64575, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal ."}{"idx": 64576, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right ."}{"idx": 64580, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 64581, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal ."}{"idx": 64582, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right ."}{"idx": 64598, "node_name": "index", "Dec": "an int specifying the component to remove"}{"idx": 64602, "node_name": "c", "Dec": "the jcomponent to move"}{"idx": 64603, "node_name": "layer", "Dec": "an int specifying the layer to move it to"}{"idx": 64605, "node_name": "c", "Dec": "the jcomponent to check"}{"idx": 64607, "node_name": "c", "Dec": "the component to check"}{"idx": 64609, "node_name": "c", "Dec": "the component to set the layer for"}{"idx": 64610, "node_name": "layer", "Dec": "an int specifying the layer to set , where lower numbers are closer to the bottom"}{"idx": 64612, "node_name": "c", "Dec": "the component to set the layer for"}{"idx": 64613, "node_name": "layer", "Dec": "an int specifying the layer to set , where lower numbers are closer to the bottom"}{"idx": 64614, "node_name": "position", "Dec": "an int specifying the position within the layer , where 0 is the topmost position and -1 is the bottommost position"}{"idx": 64616, "node_name": "c", "Dec": "the component to check"}{"idx": 64618, "node_name": "c", "Dec": "the component to check"}{"idx": 64620, "node_name": "c", "Dec": "the component to move"}{"idx": 64622, "node_name": "c", "Dec": "the component to move"}{"idx": 64624, "node_name": "c", "Dec": "the component to move"}{"idx": 64625, "node_name": "position", "Dec": "an int in the range -1 .. n-1 , where n is the number of components in the component's current layer"}{"idx": 64627, "node_name": "c", "Dec": "the component to check"}{"idx": 64631, "node_name": "layer", "Dec": "an int specifying the layer to check"}{"idx": 64633, "node_name": "layer", "Dec": "an int specifying the layer to check"}{"idx": 64635, "node_name": "g", "Dec": "the graphics context within which to paint"}{"idx": 64638, "node_name": "layer", "Dec": "an int specifying the layer"}{"idx": 64640, "node_name": "layer", "Dec": "an int specifying the layer"}{"idx": 64641, "node_name": "position", "Dec": "an int specifying the position within the layer"}{"idx": 64646, "node_name": "parent", "Dec": "the parent"}{"idx": 64647, "node_name": "indexinparent", "Dec": "the index in the parent"}{"idx": 64653, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 64655, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 64660, "node_name": "e", "Dec": "propertychangeevent"}{"idx": 64662, "node_name": "e", "Dec": "listselectionevent"}{"idx": 64664, "node_name": "e", "Dec": "listdataevent"}{"idx": 64666, "node_name": "e", "Dec": "listdataevent"}{"idx": 64668, "node_name": "e", "Dec": "listdataevent"}{"idx": 64672, "node_name": "p", "Dec": "the point defining the top-left corner of the accessible , given in the coordinate space of the object's parent"}{"idx": 64675, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 64679, "node_name": "i", "Dec": "the zero-based index of selected items"}{"idx": 64681, "node_name": "i", "Dec": "the zero-based index of the child in this accessible object ."}{"idx": 64683, "node_name": "i", "Dec": "the zero-based index of selectable items"}{"idx": 64685, "node_name": "i", "Dec": "the zero-based index of selectable items"}{"idx": 64697, "node_name": "datamodel", "Dec": "the model for the list"}{"idx": 64699, "node_name": "listdata", "Dec": "the array of objects to be loaded into the data model , non-null"}{"idx": 64701, "node_name": "listdata", "Dec": "the vector to be loaded into the data model , non-null"}{"idx": 64705, "node_name": "ui", "Dec": "the listui object"}{"idx": 64710, "node_name": "prototypecellvalue", "Dec": "the value on which to base fixedcellwidth and fixedcellheight"}{"idx": 64713, "node_name": "width", "Dec": "the width to be used for all cells in the list"}{"idx": 64716, "node_name": "height", "Dec": "the height to be used for all cells in the list"}{"idx": 64719, "node_name": "cellrenderer", "Dec": "the listcellrenderer that paints list cells"}{"idx": 64722, "node_name": "selectionforeground", "Dec": "the color to use in the foreground for selected list items"}{"idx": 64725, "node_name": "selectionbackground", "Dec": "the color to use for the background of selected cells"}{"idx": 64728, "node_name": "visiblerowcount", "Dec": "an integer specifying the preferred number of rows to display without requiring scrolling"}{"idx": 64731, "node_name": "layoutorientation", "Dec": "the new layout orientation , one of : vertical , horizontal_wrap or vertical_wrap"}{"idx": 64735, "node_name": "index", "Dec": "the index of the cell to make visible"}{"idx": 64737, "node_name": "b", "Dec": "whether or not to enable automatic drag handling"}{"idx": 64740, "node_name": "dropmode", "Dec": "the drop mode to use"}{"idx": 64744, "node_name": "prefix", "Dec": "the string to test for a match"}{"idx": 64745, "node_name": "startindex", "Dec": "the index for starting the search"}{"idx": 64746, "node_name": "bias", "Dec": "the search direction , either position.bias.forward or position.bias.backward ."}{"idx": 64748, "node_name": "event", "Dec": "the mouseevent to fetch the tooltip text for"}{"idx": 64750, "node_name": "location", "Dec": "the coordinates of the point"}{"idx": 64752, "node_name": "index", "Dec": "the cell index"}{"idx": 64754, "node_name": "index0", "Dec": "the first index in the range"}{"idx": 64755, "node_name": "index1", "Dec": "the second index in the range"}{"idx": 64758, "node_name": "model", "Dec": "the listmodel that provides the list of items for display"}{"idx": 64760, "node_name": "listdata", "Dec": "an array of e containing the items to display in the list"}{"idx": 64762, "node_name": "listdata", "Dec": "a vector containing the items to display in the list"}{"idx": 64766, "node_name": "firstindex", "Dec": "the first index in the range , <= lastindex"}{"idx": 64767, "node_name": "lastindex", "Dec": "the last index in the range , > = firstindex"}{"idx": 64768, "node_name": "isadjusting", "Dec": "whether or not this is one in a series of multiple events , where changes are still being made"}{"idx": 64770, "node_name": "listener", "Dec": "the listselectionlistener to add"}{"idx": 64772, "node_name": "listener", "Dec": "the listselectionlistener to remove"}{"idx": 64775, "node_name": "selectionmodel", "Dec": "the listselectionmodel that implements the selections"}{"idx": 64777, "node_name": "selectionmode", "Dec": "the selection mode"}{"idx": 64784, "node_name": "index", "Dec": "index to be queried for selection state"}{"idx": 64788, "node_name": "anchor", "Dec": "the first index to select"}{"idx": 64789, "node_name": "lead", "Dec": "the last index to select"}{"idx": 64791, "node_name": "anchor", "Dec": "the first index to add to the selection"}{"idx": 64792, "node_name": "lead", "Dec": "the last index to add to the selection"}{"idx": 64794, "node_name": "index0", "Dec": "the first index to remove from the selection"}{"idx": 64795, "node_name": "index1", "Dec": "the last index to remove from the selection"}{"idx": 64797, "node_name": "b", "Dec": "the new value for the property"}{"idx": 64801, "node_name": "index", "Dec": "the index of the cell to select"}{"idx": 64803, "node_name": "indices", "Dec": "an array of the indices of the cells to select , non-null"}{"idx": 64808, "node_name": "anobject", "Dec": "the object to select"}{"idx": 64809, "node_name": "shouldscroll", "Dec": "true if the list should scroll to display the selected object , if one exists ; otherwise false"}{"idx": 64812, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 64813, "node_name": "orientation", "Dec": "swingconstants.horizontal or swingconstants.vertical"}{"idx": 64814, "node_name": "direction", "Dec": "less or equal to zero to scroll up / back , greater than zero for down / forward"}{"idx": 64816, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 64817, "node_name": "orientation", "Dec": "swingconstants.horizontal or swingconstants.vertical"}{"idx": 64818, "node_name": "direction", "Dec": "less or equal to zero to scroll up / back , greater than zero for down / forward"}{"idx": 64827, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 64832, "node_name": "i", "Dec": "the zero-based index of selected children"}{"idx": 64834, "node_name": "i", "Dec": "the zero-based index of the child in this accessible object ."}{"idx": 64836, "node_name": "i", "Dec": "the index of the item to be selected"}{"idx": 64838, "node_name": "i", "Dec": "the zero-based index of the selected item"}{"idx": 64845, "node_name": "s", "Dec": "the text for the menu label"}{"idx": 64847, "node_name": "a", "Dec": "an action"}{"idx": 64849, "node_name": "s", "Dec": "the text for the menu label"}{"idx": 64850, "node_name": "b", "Dec": "can the menu be torn off ( not yet implemented )"}{"idx": 64854, "node_name": "newmodel", "Dec": "the buttonmodel"}{"idx": 64857, "node_name": "b", "Dec": "true to select ( highlight ) the menu ; false to de-select the menu"}{"idx": 64860, "node_name": "b", "Dec": "a boolean value -- true to make the menu visible , false to hide it"}{"idx": 64864, "node_name": "d", "Dec": "the number of milliseconds to delay"}{"idx": 64866, "node_name": "x", "Dec": "the x coordinate of the popup's new position"}{"idx": 64867, "node_name": "y", "Dec": "the y coordinate of the popup's new position"}{"idx": 64869, "node_name": "menuitem", "Dec": "the jmenuitem to be added"}{"idx": 64871, "node_name": "c", "Dec": "the component to add"}{"idx": 64873, "node_name": "c", "Dec": "the component to add"}{"idx": 64874, "node_name": "index", "Dec": "the position at which to insert the component"}{"idx": 64876, "node_name": "s", "Dec": "the string for the menu item to be added"}{"idx": 64878, "node_name": "a", "Dec": "the action for the menu item to be added"}{"idx": 64880, "node_name": "a", "Dec": "the action for the menu item to be added"}{"idx": 64882, "node_name": "b", "Dec": "a menu item for which to create a propertychangelistener"}{"idx": 64885, "node_name": "s", "Dec": "the text for the menu item to add"}{"idx": 64886, "node_name": "pos", "Dec": "an integer specifying the position at which to add the new menu item"}{"idx": 64888, "node_name": "mi", "Dec": "the jmenuitem to add"}{"idx": 64889, "node_name": "pos", "Dec": "an integer specifying the position at which to add the new jmenuitem"}{"idx": 64891, "node_name": "a", "Dec": "the action object for the menu item to add"}{"idx": 64892, "node_name": "pos", "Dec": "an integer specifying the position at which to add the new menu item"}{"idx": 64894, "node_name": "index", "Dec": "an integer specifying the position at which to insert the menu separator"}{"idx": 64896, "node_name": "pos", "Dec": "an integer specifying the position"}{"idx": 64900, "node_name": "item", "Dec": "the jmenuitem to be removed from the menu"}{"idx": 64902, "node_name": "pos", "Dec": "the position of the item to be removed"}{"idx": 64904, "node_name": "c", "Dec": "the component to be removed"}{"idx": 64908, "node_name": "n", "Dec": "the position of the component to be returned"}{"idx": 64912, "node_name": "c", "Dec": "the component to be tested"}{"idx": 64915, "node_name": "l", "Dec": "the listener to be added"}{"idx": 64917, "node_name": "l", "Dec": "the listener to be removed"}{"idx": 64923, "node_name": "p", "Dec": "the jpopupmenu"}{"idx": 64925, "node_name": "isincluded", "Dec": "true if this menu is active , false if it is not"}{"idx": 64929, "node_name": "o", "Dec": "the new component orientation of this menu and the components contained within it ."}{"idx": 64931, "node_name": "keystroke", "Dec": "the keystroke combination which will invoke the jmenuitem's actionlisteners without navigating the menu hierarchy"}{"idx": 64933, "node_name": "evt", "Dec": "the key event to be processed"}{"idx": 64935, "node_name": "presstime", "Dec": "indicates the number of milliseconds the button was pressed for"}{"idx": 64940, "node_name": "p", "Dec": "the popup menu for which to create a listener"}{"idx": 64942, "node_name": "e", "Dec": "the event to be processed"}{"idx": 64950, "node_name": "i", "Dec": "the zero-based index of selected children"}{"idx": 64952, "node_name": "i", "Dec": "the zero-based index of the child in this accessible object ."}{"idx": 64954, "node_name": "i", "Dec": "the zero-based index of selectable items"}{"idx": 64956, "node_name": "i", "Dec": "the zero-based index of selectable items"}{"idx": 64963, "node_name": "ui", "Dec": "the new menubarui l&f object"}{"idx": 64968, "node_name": "model", "Dec": "the singleselectionmodel to use"}{"idx": 64970, "node_name": "c", "Dec": "the jmenu component to add"}{"idx": 64972, "node_name": "index", "Dec": "an integer giving the position in the menu bar , where 0 is the first position"}{"idx": 64975, "node_name": "menu", "Dec": "the jmenu that delivers help to the user"}{"idx": 64978, "node_name": "c", "Dec": "the component to find"}{"idx": 64980, "node_name": "sel", "Dec": "the component to select"}{"idx": 64984, "node_name": "b", "Dec": "if true and border property is not null , the border is painted ."}{"idx": 64986, "node_name": "g", "Dec": "the graphics context to use for painting"}{"idx": 64988, "node_name": "m", "Dec": "an insets object containing the margin values"}{"idx": 64991, "node_name": "event", "Dec": "a mouseevent to be processed"}{"idx": 64992, "node_name": "path", "Dec": "the path of the receiving element in the menu hierarchy"}{"idx": 64993, "node_name": "manager", "Dec": "the menuselectionmanager for the menu hierarchy"}{"idx": 64995, "node_name": "e", "Dec": "a keyevent to be processed"}{"idx": 64996, "node_name": "path", "Dec": "the path of the receiving element in the menu hierarchy"}{"idx": 64997, "node_name": "manager", "Dec": "the menuselectionmanager for the menu hierarchy"}{"idx": 64999, "node_name": "isincluded", "Dec": "can be used to indicate if this menuelement is active ( if it is a menu ) or is on the part of the menu path that changed ( if it is a menu item ) ."}{"idx": 65005, "node_name": "ks", "Dec": "the keystroke queried"}{"idx": 65006, "node_name": "e", "Dec": "the keyevent"}{"idx": 65007, "node_name": "condition", "Dec": "one of the following values : jcomponent.when_focused jcomponent.when_ancestor_of_focused_component jcomponent.when_in_focused_window"}{"idx": 65008, "node_name": "pressed", "Dec": "true if the key is pressed"}{"idx": 65014, "node_name": "e", "Dec": "a changeevent object"}{"idx": 65018, "node_name": "icon", "Dec": "the icon of the jmenuitem"}{"idx": 65020, "node_name": "text", "Dec": "the text of the jmenuitem"}{"idx": 65022, "node_name": "a", "Dec": "the action of the jmenuitem"}{"idx": 65024, "node_name": "text", "Dec": "the text of the jmenuitem"}{"idx": 65025, "node_name": "icon", "Dec": "the icon of the jmenuitem"}{"idx": 65027, "node_name": "text", "Dec": "the text of the jmenuitem"}{"idx": 65028, "node_name": "mnemonic", "Dec": "the keyboard mnemonic for the jmenuitem"}{"idx": 65030, "node_name": "text", "Dec": "the text of the jmenuitem"}{"idx": 65031, "node_name": "icon", "Dec": "the icon of the jmenuitem"}{"idx": 65033, "node_name": "ui", "Dec": "the jmenuitemui l&f object"}{"idx": 65037, "node_name": "b", "Dec": "true to arm the menu item so it can be selected"}{"idx": 65040, "node_name": "b", "Dec": "true to enable the item"}{"idx": 65042, "node_name": "keystroke", "Dec": "the keystroke which will serve as an accelerator"}{"idx": 65045, "node_name": "a", "Dec": "the action from which to get the properties , or null"}{"idx": 65047, "node_name": "action", "Dec": "the action associated with this button"}{"idx": 65048, "node_name": "propertyname", "Dec": "the name of the property that changed"}{"idx": 65050, "node_name": "e", "Dec": "a mouseevent"}{"idx": 65051, "node_name": "path", "Dec": "the menuelement path array"}{"idx": 65052, "node_name": "manager", "Dec": "the menuselectionmanager"}{"idx": 65054, "node_name": "e", "Dec": "a keyevent"}{"idx": 65055, "node_name": "path", "Dec": "the menuelement path array"}{"idx": 65056, "node_name": "manager", "Dec": "the menuselectionmanager"}{"idx": 65058, "node_name": "e", "Dec": "a menudragmouseevent object"}{"idx": 65060, "node_name": "e", "Dec": "a menukeyevent object"}{"idx": 65062, "node_name": "event", "Dec": "a menumousedragevent"}{"idx": 65064, "node_name": "event", "Dec": "a menudragmouseevent"}{"idx": 65066, "node_name": "event", "Dec": "a menudragmouseevent"}{"idx": 65068, "node_name": "event", "Dec": "a menudragmouseevent"}{"idx": 65070, "node_name": "event", "Dec": "a menukeyevent"}{"idx": 65072, "node_name": "event", "Dec": "a menukeyevent"}{"idx": 65074, "node_name": "event", "Dec": "a menukeyevent"}{"idx": 65076, "node_name": "isincluded", "Dec": "true if this menu item is on the part of the menu path that changed , false if this menu is part of the a menu path that changed , but this particular part of that path is still the same"}{"idx": 65080, "node_name": "l", "Dec": "the menudragmouselistener to be added"}{"idx": 65082, "node_name": "l", "Dec": "the menudragmouselistener to be removed"}{"idx": 65085, "node_name": "l", "Dec": "the menukeylistener to be added"}{"idx": 65087, "node_name": "l", "Dec": "the menukeylistener to be removed"}{"idx": 65134, "node_name": "message", "Dec": "the object to display"}{"idx": 65136, "node_name": "message", "Dec": "the object to display"}{"idx": 65137, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65139, "node_name": "message", "Dec": "the object to display"}{"idx": 65140, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65141, "node_name": "optiontype", "Dec": "the options to display in the pane : default_option , yes_no_option , yes_no_cancel_option , ok_cancel_option"}{"idx": 65143, "node_name": "message", "Dec": "the object to display"}{"idx": 65144, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65145, "node_name": "optiontype", "Dec": "the options to display in the pane : default_option , yes_no_option , yes_no_cancel_option , ok_cancel_option"}{"idx": 65146, "node_name": "icon", "Dec": "the icon image to display"}{"idx": 65148, "node_name": "message", "Dec": "the object to display"}{"idx": 65149, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65150, "node_name": "optiontype", "Dec": "the options to display in the pane : default_option , yes_no_option , yes_no_cancel_option , ok_cancel_option"}{"idx": 65151, "node_name": "icon", "Dec": "the icon image to display"}{"idx": 65152, "node_name": "options", "Dec": "the choices the user can select"}{"idx": 65154, "node_name": "message", "Dec": "the object to display"}{"idx": 65155, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65156, "node_name": "optiontype", "Dec": "the options to display in the pane : default_option , yes_no_option , yes_no_cancel_option , ok_cancel_option"}{"idx": 65157, "node_name": "icon", "Dec": "the icon image to display"}{"idx": 65158, "node_name": "options", "Dec": "the choices the user can select"}{"idx": 65159, "node_name": "initialvalue", "Dec": "the choice that is initially selected ; if null , then nothing will be initially selected ; only meaningful if options is used"}{"idx": 65161, "node_name": "message", "Dec": "the object to display"}{"idx": 65163, "node_name": "message", "Dec": "the object to display"}{"idx": 65164, "node_name": "initialselectionvalue", "Dec": "the value used to initialize the input field"}{"idx": 65166, "node_name": "parentcomponent", "Dec": "the parent component for the dialog"}{"idx": 65167, "node_name": "message", "Dec": "the object to display"}{"idx": 65169, "node_name": "parentcomponent", "Dec": "the parent component for the dialog"}{"idx": 65170, "node_name": "message", "Dec": "the object to display"}{"idx": 65171, "node_name": "initialselectionvalue", "Dec": "the value used to initialize the input field"}{"idx": 65173, "node_name": "parentcomponent", "Dec": "the parent component for the dialog"}{"idx": 65174, "node_name": "message", "Dec": "the object to display"}{"idx": 65175, "node_name": "title", "Dec": "the string to display in the dialog title bar"}{"idx": 65176, "node_name": "messagetype", "Dec": "the type of message that is to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65178, "node_name": "parentcomponent", "Dec": "the parent component for the dialog"}{"idx": 65179, "node_name": "message", "Dec": "the object to display"}{"idx": 65180, "node_name": "title", "Dec": "the string to display in the dialog title bar"}{"idx": 65181, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65182, "node_name": "icon", "Dec": "the icon image to display"}{"idx": 65183, "node_name": "selectionvalues", "Dec": "an array of objects that gives the possible selections"}{"idx": 65184, "node_name": "initialselectionvalue", "Dec": "the value used to initialize the input field"}{"idx": 65186, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65187, "node_name": "message", "Dec": "the object to display"}{"idx": 65189, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65190, "node_name": "message", "Dec": "the object to display"}{"idx": 65191, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65192, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65194, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65195, "node_name": "message", "Dec": "the object to display"}{"idx": 65196, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65197, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65198, "node_name": "icon", "Dec": "an icon to display in the dialog that helps the user identify the kind of message that is being displayed"}{"idx": 65200, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65201, "node_name": "message", "Dec": "the object to display"}{"idx": 65203, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65204, "node_name": "message", "Dec": "the object to display"}{"idx": 65205, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65206, "node_name": "optiontype", "Dec": "an int designating the options available on the dialog : yes_no_option , yes_no_cancel_option , or ok_cancel_option"}{"idx": 65208, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used ."}{"idx": 65209, "node_name": "message", "Dec": "the object to display"}{"idx": 65210, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65211, "node_name": "optiontype", "Dec": "an integer designating the options available on the dialog : yes_no_option , yes_no_cancel_option , or ok_cancel_option"}{"idx": 65212, "node_name": "messagetype", "Dec": "an integer designating the kind of message this is ; primarily used to determine the icon from the pluggable look and feel : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65214, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65215, "node_name": "message", "Dec": "the object to display"}{"idx": 65216, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65217, "node_name": "optiontype", "Dec": "an int designating the options available on the dialog : yes_no_option , yes_no_cancel_option , or ok_cancel_option"}{"idx": 65218, "node_name": "messagetype", "Dec": "an int designating the kind of message this is , primarily used to determine the icon from the pluggable look and feel : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65219, "node_name": "icon", "Dec": "the icon to display in the dialog"}{"idx": 65221, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65222, "node_name": "message", "Dec": "the object to display"}{"idx": 65223, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65224, "node_name": "optiontype", "Dec": "an integer designating the options available on the dialog : default_option , yes_no_option , yes_no_cancel_option , or ok_cancel_option"}{"idx": 65225, "node_name": "messagetype", "Dec": "an integer designating the kind of message this is , primarily used to determine the icon from the pluggable look and feel : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65226, "node_name": "icon", "Dec": "the icon to display in the dialog"}{"idx": 65227, "node_name": "options", "Dec": "an array of objects indicating the possible choices the user can make ; if the objects are components , they are rendered properly ; non-string objects are rendered using their tostring methods ; if this parameter is null , the options are determined by the look and feel"}{"idx": 65228, "node_name": "initialvalue", "Dec": "the object that represents the default selection for the dialog ; only meaningful if options is used ; can be null"}{"idx": 65230, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if the parentcomponent has no frame , a default frame is used"}{"idx": 65231, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65233, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65235, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65236, "node_name": "message", "Dec": "the object to display"}{"idx": 65238, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65239, "node_name": "message", "Dec": "the object to display"}{"idx": 65240, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65241, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65243, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65244, "node_name": "message", "Dec": "the object to display"}{"idx": 65245, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65246, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65247, "node_name": "icon", "Dec": "an icon to display in the dialog that helps the user identify the kind of message that is being displayed"}{"idx": 65249, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65250, "node_name": "message", "Dec": "the object to display"}{"idx": 65252, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65253, "node_name": "message", "Dec": "the object to display in the dialog ; a component object is rendered as a component ; a string object is rendered as a string ; other objects are converted to a string using the tostring method"}{"idx": 65254, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65255, "node_name": "optiontype", "Dec": "an integer designating the options available on the dialog : yes_no_option , or yes_no_cancel_option"}{"idx": 65257, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65258, "node_name": "message", "Dec": "the object to display in the dialog ; a component object is rendered as a component ; a string object is rendered as a string ; other objects are converted to a string using the tostring method"}{"idx": 65259, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65260, "node_name": "optiontype", "Dec": "an integer designating the options available on the dialog : yes_no_option , or yes_no_cancel_option"}{"idx": 65261, "node_name": "messagetype", "Dec": "an integer designating the kind of message this is , primarily used to determine the icon from the pluggable look and feel : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65263, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65264, "node_name": "message", "Dec": "the object to display in the dialog ; a component object is rendered as a component ; a string object is rendered as a string ; other objects are converted to a string using the tostring method"}{"idx": 65265, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65266, "node_name": "optiontype", "Dec": "an integer designating the options available on the dialog : yes_no_option , or yes_no_cancel_option ."}{"idx": 65267, "node_name": "messagetype", "Dec": "an integer designating the kind of message this is , primarily used to determine the icon from the pluggable look and feel : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65268, "node_name": "icon", "Dec": "the icon to display in the dialog"}{"idx": 65270, "node_name": "parentcomponent", "Dec": "determines the frame in which the dialog is displayed ; if null , or if the parentcomponent has no frame , a default frame is used"}{"idx": 65271, "node_name": "message", "Dec": "the object to display in the dialog ; a component object is rendered as a component ; a string object is rendered as a string . other objects are converted to a string using the tostring method"}{"idx": 65272, "node_name": "title", "Dec": "the title string for the dialog"}{"idx": 65273, "node_name": "optiontype", "Dec": "an integer designating the options available on the dialog : yes_no_option , or yes_no_cancel_option"}{"idx": 65274, "node_name": "messagetype", "Dec": "an integer designating the kind of message this is ; primarily used to determine the icon from the pluggable look and feel : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65275, "node_name": "icon", "Dec": "the icon to display in the dialog"}{"idx": 65276, "node_name": "options", "Dec": "an array of objects indicating the possible choices the user can make ; if the objects are components , they are rendered properly ; non-string objects are rendered using their tostring methods ; if this parameter is null , the options are determined by the look and feel"}{"idx": 65277, "node_name": "initialvalue", "Dec": "the object that represents the default selection for the dialog ; only meaningful if options is used ; can be null"}{"idx": 65279, "node_name": "parentcomponent", "Dec": "the parent component for the dialog"}{"idx": 65280, "node_name": "message", "Dec": "the object to display"}{"idx": 65282, "node_name": "parentcomponent", "Dec": "the parent component for the dialog"}{"idx": 65283, "node_name": "message", "Dec": "the object to display"}{"idx": 65284, "node_name": "title", "Dec": "the string to display in the dialog title bar"}{"idx": 65285, "node_name": "messagetype", "Dec": "the type of message that is to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65287, "node_name": "parentcomponent", "Dec": "the parent component for the dialog"}{"idx": 65288, "node_name": "message", "Dec": "the object to display"}{"idx": 65289, "node_name": "title", "Dec": "the string to display in the dialog title bar"}{"idx": 65290, "node_name": "messagetype", "Dec": "the type of message to be displayed : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65291, "node_name": "icon", "Dec": "the icon image to display"}{"idx": 65292, "node_name": "selectionvalues", "Dec": "an array of objects that gives the possible selections"}{"idx": 65293, "node_name": "initialselectionvalue", "Dec": "the value used to initialize the input field"}{"idx": 65295, "node_name": "parentcomponent", "Dec": "the parent component for the internal frame"}{"idx": 65296, "node_name": "title", "Dec": "the string to display in the frame's title bar"}{"idx": 65298, "node_name": "parentcomponent", "Dec": "the component to check for a frame"}{"idx": 65300, "node_name": "parentcomponent", "Dec": "the component to check for a desktop"}{"idx": 65302, "node_name": "newrootframe", "Dec": "the default frame to use"}{"idx": 65305, "node_name": "ui", "Dec": "the optionpaneui l&f object"}{"idx": 65310, "node_name": "newmessage", "Dec": "the object to display"}{"idx": 65313, "node_name": "newicon", "Dec": "the icon to display"}{"idx": 65316, "node_name": "newvalue", "Dec": "the chosen value"}{"idx": 65319, "node_name": "newoptions", "Dec": "an array of objects that create the buttons the user can click on , or arbitrary components to add to the pane"}{"idx": 65322, "node_name": "newinitialvalue", "Dec": "the object that gets the initial keyboard focus"}{"idx": 65325, "node_name": "newtype", "Dec": "an integer specifying the kind of message to display : error_message , information_message , warning_message , question_message , or plain_message"}{"idx": 65328, "node_name": "newtype", "Dec": "an integer specifying the options the l&f is to display : default_option , yes_no_option , yes_no_cancel_option , or ok_cancel_option"}{"idx": 65331, "node_name": "newvalues", "Dec": "an array of objects the user to be displayed ( usually in a list or combo-box ) from which the user can make a selection"}{"idx": 65334, "node_name": "newvalue", "Dec": "the initially selected value"}{"idx": 65337, "node_name": "newvalue", "Dec": "the object used to set the value that the user specified ( usually in a text field )"}{"idx": 65341, "node_name": "newvalue", "Dec": "if true , an input component whose parent is parentcomponent is provided to allow the user to input a value ."}{"idx": 65351, "node_name": "layout", "Dec": "the layoutmanager to use"}{"idx": 65352, "node_name": "isdoublebuffered", "Dec": "a boolean , true for double-buffering , which uses additional memory space to achieve fast , flicker-free updates"}{"idx": 65354, "node_name": "layout", "Dec": "the layoutmanager to use"}{"idx": 65356, "node_name": "isdoublebuffered", "Dec": "a boolean , true for double-buffering , which uses additional memory space to achieve fast , flicker-free updates"}{"idx": 65361, "node_name": "ui", "Dec": "the panelui l&f object"}{"idx": 65370, "node_name": "part", "Dec": "the character , word or sentence to retrieve"}{"idx": 65371, "node_name": "index", "Dec": "an index within the text"}{"idx": 65373, "node_name": "part", "Dec": "the character , word or sentence to retrieve"}{"idx": 65374, "node_name": "index", "Dec": "an index within the text"}{"idx": 65376, "node_name": "part", "Dec": "the character , word or sentence to retrieve"}{"idx": 65377, "node_name": "index", "Dec": "an index within the text"}{"idx": 65379, "node_name": "startindex", "Dec": "the start index in the text"}{"idx": 65380, "node_name": "endindex", "Dec": "the end index in the text"}{"idx": 65382, "node_name": "part", "Dec": "the character , word , sentence , line or attribute_run to retrieve"}{"idx": 65383, "node_name": "index", "Dec": "an index within the text"}{"idx": 65385, "node_name": "part", "Dec": "the character , word , sentence , line or attribute_run to retrieve"}{"idx": 65386, "node_name": "index", "Dec": "an index within the text"}{"idx": 65388, "node_name": "part", "Dec": "the character , word , sentence , line or attribute_run to retrieve"}{"idx": 65389, "node_name": "index", "Dec": "an index within the text"}{"idx": 65393, "node_name": "text", "Dec": "the text to be displayed , null if none"}{"idx": 65395, "node_name": "columns", "Dec": "the number of columns > = 0"}{"idx": 65397, "node_name": "text", "Dec": "the text to be displayed , null if none"}{"idx": 65398, "node_name": "columns", "Dec": "the number of columns > = 0"}{"idx": 65400, "node_name": "doc", "Dec": "the text storage to use"}{"idx": 65401, "node_name": "txt", "Dec": "the text to be displayed , null if none"}{"idx": 65402, "node_name": "columns", "Dec": "the number of columns to use to calculate the preferred width > = 0 ; if columns is set to zero , the preferred width will be whatever naturally results from the component implementation"}{"idx": 65407, "node_name": "c", "Dec": "the echo character to display"}{"idx": 65418, "node_name": "e", "Dec": "a propertychangeevent object describing the event source and the property that has changed . must not be null ."}{"idx": 65422, "node_name": "label", "Dec": "the string that a ui may use to display as a title for the popup menu ."}{"idx": 65424, "node_name": "aflag", "Dec": "true if popups can be lightweight , otherwise false"}{"idx": 65428, "node_name": "ui", "Dec": "the new popupmenuui l&f object"}{"idx": 65432, "node_name": "evt", "Dec": "the key event to be processed"}{"idx": 65435, "node_name": "model", "Dec": "the new singleselectionmodel"}{"idx": 65437, "node_name": "menuitem", "Dec": "the jmenuitem to add"}{"idx": 65439, "node_name": "s", "Dec": "the string for the menu item to be added"}{"idx": 65441, "node_name": "a", "Dec": "the action to add to the menu"}{"idx": 65443, "node_name": "a", "Dec": "the action for the menu item to be added"}{"idx": 65445, "node_name": "b", "Dec": "the menu item for which to create a listener"}{"idx": 65447, "node_name": "pos", "Dec": "the position of the item to be removed"}{"idx": 65449, "node_name": "aflag", "Dec": "false to disable lightweight popups"}{"idx": 65453, "node_name": "label", "Dec": "a string specifying the label for the popup menu"}{"idx": 65456, "node_name": "a", "Dec": "the action object to insert"}{"idx": 65457, "node_name": "index", "Dec": "specifies the position at which to insert the action , where 0 is the first"}{"idx": 65459, "node_name": "component", "Dec": "the component to insert"}{"idx": 65460, "node_name": "index", "Dec": "specifies the position at which to insert the component , where 0 is the first"}{"idx": 65462, "node_name": "l", "Dec": "the popupmenulistener to add"}{"idx": 65464, "node_name": "l", "Dec": "the popupmenulistener to remove"}{"idx": 65467, "node_name": "l", "Dec": "the menukeylistener to be added"}{"idx": 65469, "node_name": "l", "Dec": "the menukeylistener to be removed"}{"idx": 65476, "node_name": "b", "Dec": "true to make the popup visible , or false to hide it"}{"idx": 65479, "node_name": "x", "Dec": "the x coordinate of the popup's new position in the screen's coordinate space"}{"idx": 65480, "node_name": "y", "Dec": "the y coordinate of the popup's new position in the screen's coordinate space"}{"idx": 65483, "node_name": "invoker", "Dec": "the component in which the popup menu is displayed"}{"idx": 65485, "node_name": "invoker", "Dec": "the component in whose space the popup menu is to appear"}{"idx": 65486, "node_name": "x", "Dec": "the x coordinate in invoker's coordinate space at which the popup menu is to be displayed"}{"idx": 65487, "node_name": "y", "Dec": "the y coordinate in invoker's coordinate space at which the popup menu is to be displayed"}{"idx": 65489, "node_name": "c", "Dec": "the component to find"}{"idx": 65491, "node_name": "d", "Dec": "the dimension specifying the new size of this component ."}{"idx": 65493, "node_name": "width", "Dec": "the new width of the popup in pixels"}{"idx": 65494, "node_name": "height", "Dec": "the new height of the popup in pixels"}{"idx": 65496, "node_name": "sel", "Dec": "the component to select"}{"idx": 65499, "node_name": "b", "Dec": "if true , the border is painted ."}{"idx": 65501, "node_name": "g", "Dec": "the graphics object"}{"idx": 65506, "node_name": "event", "Dec": "a mouseevent to be processed"}{"idx": 65507, "node_name": "path", "Dec": "the path of the receiving element in the menu hierarchy"}{"idx": 65508, "node_name": "manager", "Dec": "the menuselectionmanager for the menu hierarchy"}{"idx": 65510, "node_name": "e", "Dec": "a keyevent"}{"idx": 65511, "node_name": "path", "Dec": "the menuelement path array"}{"idx": 65512, "node_name": "manager", "Dec": "the menuselectionmanager"}{"idx": 65514, "node_name": "isincluded", "Dec": "true if this menu is active , false if it is not"}{"idx": 65518, "node_name": "e", "Dec": "a mouseevent"}{"idx": 65529, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 65542, "node_name": "orient", "Dec": "the desired orientation of the progress bar"}{"idx": 65544, "node_name": "min", "Dec": "the minimum value of the progress bar"}{"idx": 65545, "node_name": "max", "Dec": "the maximum value of the progress bar"}{"idx": 65547, "node_name": "orient", "Dec": "the desired orientation of the progress bar"}{"idx": 65548, "node_name": "min", "Dec": "the minimum value of the progress bar"}{"idx": 65549, "node_name": "max", "Dec": "the maximum value of the progress bar"}{"idx": 65551, "node_name": "newmodel", "Dec": "the data model for the progress bar"}{"idx": 65554, "node_name": "neworientation", "Dec": "horizontal or vertical"}{"idx": 65557, "node_name": "b", "Dec": "true if the progress bar should render a string"}{"idx": 65560, "node_name": "s", "Dec": "the value of the progress string"}{"idx": 65564, "node_name": "b", "Dec": "true if the progress bar should paint its border ; otherwise , false"}{"idx": 65566, "node_name": "g", "Dec": "the graphics context within which to paint the border"}{"idx": 65569, "node_name": "ui", "Dec": "a progressbarui object"}{"idx": 65574, "node_name": "l", "Dec": "the changelistener to add"}{"idx": 65576, "node_name": "l", "Dec": "the changelistener to remove"}{"idx": 65581, "node_name": "newmodel", "Dec": "the boundedrangemodel to use"}{"idx": 65586, "node_name": "n", "Dec": "the new value"}{"idx": 65588, "node_name": "n", "Dec": "the new minimum"}{"idx": 65590, "node_name": "n", "Dec": "the new maximum"}{"idx": 65592, "node_name": "newvalue", "Dec": "true if the progress bar should change to indeterminate mode ; false if it should revert to normal ."}{"idx": 65602, "node_name": "icon", "Dec": "the image that the button should display"}{"idx": 65604, "node_name": "a", "Dec": "an action"}{"idx": 65606, "node_name": "icon", "Dec": "the image that the button should display"}{"idx": 65607, "node_name": "selected", "Dec": "if true , the button is initially selected ; otherwise , the button is initially unselected"}{"idx": 65609, "node_name": "text", "Dec": "the string displayed on the radio button"}{"idx": 65611, "node_name": "text", "Dec": "the string displayed on the radio button"}{"idx": 65612, "node_name": "selected", "Dec": "if true , the button is initially selected ; otherwise , the button is initially unselected"}{"idx": 65614, "node_name": "text", "Dec": "the string displayed on the radio button"}{"idx": 65615, "node_name": "icon", "Dec": "the image that the button should display"}{"idx": 65617, "node_name": "text", "Dec": "the string displayed on the radio button"}{"idx": 65618, "node_name": "icon", "Dec": "the image that the button should display"}{"idx": 65619, "node_name": "selected", "Dec": "if true , the button is initially selected otherwise , the button is initially unselected"}{"idx": 65630, "node_name": "icon", "Dec": "the icon to display on the jradiobuttonmenuitem"}{"idx": 65632, "node_name": "text", "Dec": "the text of the jradiobuttonmenuitem"}{"idx": 65634, "node_name": "a", "Dec": "the action on which to base the radio button menu item"}{"idx": 65636, "node_name": "text", "Dec": "the text of the jradiobuttonmenuitem"}{"idx": 65637, "node_name": "icon", "Dec": "the icon to display on the jradiobuttonmenuitem"}{"idx": 65639, "node_name": "text", "Dec": "the text of the checkboxmenuitem"}{"idx": 65640, "node_name": "selected", "Dec": "the selected state of the checkboxmenuitem"}{"idx": 65642, "node_name": "icon", "Dec": "the image that the button should display"}{"idx": 65643, "node_name": "selected", "Dec": "if true , the button is initially selected ; otherwise , the button is initially unselected"}{"idx": 65645, "node_name": "text", "Dec": "the string displayed on the radio button"}{"idx": 65646, "node_name": "icon", "Dec": "the image that the button should display"}{"idx": 65647, "node_name": "selected", "Dec": "if true , the button is initially selected , otherwise , the button is initially unselected"}{"idx": 65656, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 65674, "node_name": "aflag", "Dec": "if true , set this component to be double buffered"}{"idx": 65677, "node_name": "windowdecorationstyle", "Dec": "constant identifying window decorations to provide ."}{"idx": 65680, "node_name": "ui", "Dec": "the labelui l&f object"}{"idx": 65688, "node_name": "menu", "Dec": "the jmenubar to add"}{"idx": 65691, "node_name": "content", "Dec": "the container to use for component-contents"}{"idx": 65694, "node_name": "layered", "Dec": "the jlayeredpane to use"}{"idx": 65697, "node_name": "glass", "Dec": "the component to use as the glass pane for this jrootpane"}{"idx": 65702, "node_name": "defaultbutton", "Dec": "the jbutton which is to be the default button"}{"idx": 65705, "node_name": "comp", "Dec": "the component to be enhanced"}{"idx": 65706, "node_name": "constraints", "Dec": "the constraints to be respected"}{"idx": 65707, "node_name": "index", "Dec": "the index"}{"idx": 65713, "node_name": "parent", "Dec": "the container for which this layout manager is being used"}{"idx": 65715, "node_name": "parent", "Dec": "the container for which this layout manager is being used"}{"idx": 65717, "node_name": "target", "Dec": "the container for which this layout manager is being used"}{"idx": 65719, "node_name": "parent", "Dec": "the container for which this layout manager is being used"}{"idx": 65727, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 65736, "node_name": "orientation", "Dec": "an orientation of the jscrollbar"}{"idx": 65737, "node_name": "value", "Dec": "an int giving the current value"}{"idx": 65738, "node_name": "extent", "Dec": "an int giving the amount by which the value can \" jump \""}{"idx": 65739, "node_name": "min", "Dec": "an int giving the minimum value"}{"idx": 65740, "node_name": "max", "Dec": "an int giving the maximum value"}{"idx": 65742, "node_name": "orientation", "Dec": "an orientation of the jscrollbar"}{"idx": 65745, "node_name": "ui", "Dec": "the scrollbarui l&f object"}{"idx": 65751, "node_name": "orientation", "Dec": "an orientation of the jscrollbar"}{"idx": 65754, "node_name": "newmodel", "Dec": "a new model"}{"idx": 65756, "node_name": "direction", "Dec": "is -1 or 1 for up / down respectively"}{"idx": 65758, "node_name": "unitincrement", "Dec": "the unit increment"}{"idx": 65760, "node_name": "direction", "Dec": "is -1 or 1 for up / down respectively"}{"idx": 65762, "node_name": "blockincrement", "Dec": "the block increment"}{"idx": 65767, "node_name": "value", "Dec": "the current value , between minimum and maximum"}{"idx": 65770, "node_name": "extent", "Dec": "the length of the indicator"}{"idx": 65773, "node_name": "minimum", "Dec": "the minimum value"}{"idx": 65776, "node_name": "maximum", "Dec": "the maximum value"}{"idx": 65779, "node_name": "b", "Dec": "true if the upcoming changes to the value property are part of a series"}{"idx": 65781, "node_name": "newvalue", "Dec": "an int giving the current value"}{"idx": 65782, "node_name": "newextent", "Dec": "an int giving the amount by which the value can \" jump \""}{"idx": 65783, "node_name": "newmin", "Dec": "an int giving the minimum value"}{"idx": 65784, "node_name": "newmax", "Dec": "an int giving the maximum value"}{"idx": 65786, "node_name": "l", "Dec": "the adjustmentlister to add"}{"idx": 65788, "node_name": "l", "Dec": "the adjustmentlister to remove"}{"idx": 65791, "node_name": "id", "Dec": "an integer indicating the type of event ."}{"idx": 65792, "node_name": "type", "Dec": "an integer indicating the adjustment type ."}{"idx": 65793, "node_name": "value", "Dec": "the current value of the adjustment"}{"idx": 65797, "node_name": "x", "Dec": "a boolean value , where true enables the component and false disables it"}{"idx": 65806, "node_name": "e", "Dec": "a changeevent object . must not be null ."}{"idx": 65808, "node_name": "e", "Dec": "a propertychangeevent object describing the event source and the property that has changed . must not be null ."}{"idx": 65822, "node_name": "view", "Dec": "the component to display in the scrollpanes viewport"}{"idx": 65823, "node_name": "vsbpolicy", "Dec": "an integer that specifies the vertical scrollbar policy"}{"idx": 65824, "node_name": "hsbpolicy", "Dec": "an integer that specifies the horizontal scrollbar policy"}{"idx": 65826, "node_name": "view", "Dec": "the component to display in the scrollpane's viewport"}{"idx": 65828, "node_name": "vsbpolicy", "Dec": "an integer that specifies the vertical scrollbar policy"}{"idx": 65829, "node_name": "hsbpolicy", "Dec": "an integer that specifies the horizontal scrollbar policy"}{"idx": 65833, "node_name": "ui", "Dec": "the scrollpaneui l&f object"}{"idx": 65837, "node_name": "layout", "Dec": "the specified layout manager"}{"idx": 65841, "node_name": "policy", "Dec": "one of the three values listed above"}{"idx": 65844, "node_name": "policy", "Dec": "one of the three values listed above"}{"idx": 65847, "node_name": "viewportborder", "Dec": "the border to be added"}{"idx": 65852, "node_name": "horizontalscrollbar", "Dec": "the horizontal scrollbar to be added"}{"idx": 65856, "node_name": "verticalscrollbar", "Dec": "the new vertical scrollbar to be added"}{"idx": 65860, "node_name": "viewport", "Dec": "the new viewport to be used ; if viewport is null , the old viewport is still removed and the new viewport is set to null"}{"idx": 65862, "node_name": "view", "Dec": "the component to add to the viewport"}{"idx": 65865, "node_name": "rowheader", "Dec": "the new row header to be used ; if null the old row header is still removed and the new rowheader is set to null"}{"idx": 65867, "node_name": "view", "Dec": "the component to display as the row header"}{"idx": 65870, "node_name": "columnheader", "Dec": "a jviewport which is the new column header"}{"idx": 65872, "node_name": "view", "Dec": "the component to display as the column header"}{"idx": 65874, "node_name": "key", "Dec": "one of the values as shown above"}{"idx": 65876, "node_name": "key", "Dec": "identifies which corner the component will appear in"}{"idx": 65877, "node_name": "corner", "Dec": "one of the following components : lowerleft lowerright upperleft upperright"}{"idx": 65879, "node_name": "co", "Dec": "one of the following values : java.awt.componentorientation.left_to_right java.awt.componentorientation.right_to_left java.awt.componentorientation.unknown"}{"idx": 65882, "node_name": "handlewheel", "Dec": "true if scrolling should be done automatically for a mousewheelevent , false otherwise ."}{"idx": 65887, "node_name": "orientation", "Dec": "an integer specifying one of the legal orientation values shown above"}{"idx": 65889, "node_name": "unitincrement", "Dec": "the new unit increment value , in pixels"}{"idx": 65891, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right"}{"idx": 65893, "node_name": "blockincrement", "Dec": "the new block increment value , in pixels"}{"idx": 65895, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right"}{"idx": 65902, "node_name": "orientation", "Dec": "an integer specifying swingconstants.horizontal or swingconstants.vertical"}{"idx": 65905, "node_name": "ui", "Dec": "the separatorui l&f object"}{"idx": 65910, "node_name": "orientation", "Dec": "either swingconstants.horizontal or swingconstants.vertical"}{"idx": 65920, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 65933, "node_name": "orientation", "Dec": "the orientation of the slider"}{"idx": 65935, "node_name": "min", "Dec": "the minimum value of the slider"}{"idx": 65936, "node_name": "max", "Dec": "the maximum value of the slider"}{"idx": 65938, "node_name": "min", "Dec": "the minimum value of the slider"}{"idx": 65939, "node_name": "max", "Dec": "the maximum value of the slider"}{"idx": 65940, "node_name": "value", "Dec": "the initial value of the slider"}{"idx": 65942, "node_name": "orientation", "Dec": "the orientation of the slider"}{"idx": 65943, "node_name": "min", "Dec": "the minimum value of the slider"}{"idx": 65944, "node_name": "max", "Dec": "the maximum value of the slider"}{"idx": 65945, "node_name": "value", "Dec": "the initial value of the slider"}{"idx": 65947, "node_name": "brm", "Dec": "a boundedrangemodel for the slider"}{"idx": 65950, "node_name": "ui", "Dec": "the sliderui l&f object"}{"idx": 65955, "node_name": "l", "Dec": "the changelistener to add"}{"idx": 65957, "node_name": "l", "Dec": "the changelistener to remove"}{"idx": 65962, "node_name": "newmodel", "Dec": "the new , non-null boundedrangemodel to use"}{"idx": 65965, "node_name": "n", "Dec": "the new value"}{"idx": 65968, "node_name": "minimum", "Dec": "the new minimum"}{"idx": 65971, "node_name": "maximum", "Dec": "the new maximum"}{"idx": 65974, "node_name": "b", "Dec": "the new value for the valueisadjusting property"}{"idx": 65977, "node_name": "extent", "Dec": "the new extent"}{"idx": 65980, "node_name": "orientation", "Dec": "horizontal or vertical"}{"idx": 65982, "node_name": "font", "Dec": "the desired font for this component"}{"idx": 65984, "node_name": "img", "Dec": "the image being observed"}{"idx": 65985, "node_name": "infoflags", "Dec": "see imageupdate for more information"}{"idx": 65986, "node_name": "x", "Dec": "the x coordinate"}{"idx": 65987, "node_name": "y", "Dec": "the y coordinate"}{"idx": 65988, "node_name": "w", "Dec": "the width"}{"idx": 65989, "node_name": "h", "Dec": "the height"}{"idx": 65992, "node_name": "labels", "Dec": "new dictionary of labels , or null to remove all labels"}{"idx": 65995, "node_name": "increment", "Dec": "distance between labels in the generated hashtable"}{"idx": 65997, "node_name": "increment", "Dec": "distance between labels in the generated hashtable"}{"idx": 65998, "node_name": "start", "Dec": "value at which the labels will begin"}{"idx": 66001, "node_name": "b", "Dec": "true to reverse the slider values from their normal order"}{"idx": 66004, "node_name": "n", "Dec": "new value for the majortickspacing property"}{"idx": 66007, "node_name": "n", "Dec": "new value for the minortickspacing property"}{"idx": 66010, "node_name": "b", "Dec": "true to snap the knob to the nearest tick mark"}{"idx": 66013, "node_name": "b", "Dec": "whether or not tick marks should be painted"}{"idx": 66016, "node_name": "b", "Dec": "whether or not to paint the slider track"}{"idx": 66019, "node_name": "b", "Dec": "whether or not to paint labels"}{"idx": 66025, "node_name": "e", "Dec": "a changeevent object . must not be null ."}{"idx": 66029, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 66035, "node_name": "n", "Dec": "the value to set for this object"}{"idx": 66040, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 66042, "node_name": "i", "Dec": "zero-based index of actions . the first action ( index 0 ) is accessibleaction.increment and the second action ( index 1 ) is accessibleaction.decrement ."}{"idx": 66044, "node_name": "p", "Dec": "the point in local coordinates"}{"idx": 66046, "node_name": "i", "Dec": "the index into the string"}{"idx": 66050, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 66051, "node_name": "index", "Dec": "an index within the text"}{"idx": 66053, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 66054, "node_name": "index", "Dec": "an index within the text"}{"idx": 66056, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 66057, "node_name": "index", "Dec": "an index within the text"}{"idx": 66059, "node_name": "i", "Dec": "the zero-based index into the text"}{"idx": 66064, "node_name": "s", "Dec": "the string to set the text contents"}{"idx": 66066, "node_name": "index", "Dec": "the index in the text where the string will be inserted"}{"idx": 66067, "node_name": "s", "Dec": "the string to insert in the text"}{"idx": 66069, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 66070, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 66072, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 66073, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 66075, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 66076, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 66078, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 66080, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 66081, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 66082, "node_name": "s", "Dec": "the string to replace the text between two indices"}{"idx": 66084, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 66085, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 66087, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 66088, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 66089, "node_name": "as", "Dec": "the attribute set"}{"idx": 66092, "node_name": "spinner", "Dec": "the spinner whose model this editor will monitor"}{"idx": 66094, "node_name": "spinner", "Dec": "the spinner whose model this editor will monitor"}{"idx": 66095, "node_name": "dateformatpattern", "Dec": "the initial pattern for the simpledateformat object that's used to display and parse the value of the text field ."}{"idx": 66100, "node_name": "spinner", "Dec": "the spinner whose model this editor will monitor"}{"idx": 66102, "node_name": "spinner", "Dec": "the jspinner to disconnect this editor from ; the same spinner as was passed to the constructor ."}{"idx": 66106, "node_name": "e", "Dec": "the changeevent whose source is the jspinner whose model has changed ."}{"idx": 66108, "node_name": "e", "Dec": "the propertychangeevent whose source is the jformattedtextfield created by this class ."}{"idx": 66110, "node_name": "name", "Dec": "ignored"}{"idx": 66111, "node_name": "child", "Dec": "ignored"}{"idx": 66113, "node_name": "child", "Dec": "ignored"}{"idx": 66115, "node_name": "parent", "Dec": "the container that's managing the layout"}{"idx": 66117, "node_name": "parent", "Dec": "the container that's managing the layout"}{"idx": 66119, "node_name": "parent", "Dec": "the container to be laid out"}{"idx": 66122, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 66123, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 66127, "node_name": "model", "Dec": "a model for the new spinner"}{"idx": 66131, "node_name": "ui", "Dec": "the spinnerui l&f object"}{"idx": 66135, "node_name": "model", "Dec": "the value of getmodel"}{"idx": 66137, "node_name": "model", "Dec": "the new spinnermodel"}{"idx": 66141, "node_name": "value", "Dec": "new value for the spinner"}{"idx": 66144, "node_name": "listener", "Dec": "the changelistener to add"}{"idx": 66146, "node_name": "listener", "Dec": "the changelistener to remove"}{"idx": 66151, "node_name": "editor", "Dec": "the new editor"}{"idx": 66157, "node_name": "spinner", "Dec": "the spinner whose model this editor will monitor"}{"idx": 66161, "node_name": "spinner", "Dec": "the spinner whose model this editor will monitor"}{"idx": 66163, "node_name": "spinner", "Dec": "the spinner whose model this editor will monitor"}{"idx": 66164, "node_name": "decimalformatpattern", "Dec": "the initial pattern for the decimalformat object that's used to display and parse the value of the text field ."}{"idx": 66173, "node_name": "n", "Dec": "the number to use for the value"}{"idx": 66201, "node_name": "neworientation", "Dec": "jsplitpane.horizontal_split or jsplitpane.vertical_split"}{"idx": 66203, "node_name": "neworientation", "Dec": "jsplitpane.horizontal_split or jsplitpane.vertical_split"}{"idx": 66204, "node_name": "newcontinuouslayout", "Dec": "a boolean , true for the components to redraw continuously as the divider changes position , false to wait until the divider position stops changing to redraw"}{"idx": 66206, "node_name": "neworientation", "Dec": "jsplitpane.horizontal_split or jsplitpane.vertical_split"}{"idx": 66207, "node_name": "newleftcomponent", "Dec": "the component that will appear on the left of a horizontally-split pane , or at the top of a vertically-split pane"}{"idx": 66208, "node_name": "newrightcomponent", "Dec": "the component that will appear on the right of a horizontally-split pane , or at the bottom of a vertically-split pane"}{"idx": 66210, "node_name": "neworientation", "Dec": "jsplitpane.horizontal_split or jsplitpane.vertical_split"}{"idx": 66211, "node_name": "newcontinuouslayout", "Dec": "a boolean , true for the components to redraw continuously as the divider changes position , false to wait until the divider position stops changing to redraw"}{"idx": 66212, "node_name": "newleftcomponent", "Dec": "the component that will appear on the left of a horizontally-split pane , or at the top of a vertically-split pane"}{"idx": 66213, "node_name": "newrightcomponent", "Dec": "the component that will appear on the right of a horizontally-split pane , or at the bottom of a vertically-split pane"}{"idx": 66215, "node_name": "ui", "Dec": "the splitpaneui l&f object"}{"idx": 66220, "node_name": "newsize", "Dec": "an integer giving the size of the divider in pixels"}{"idx": 66223, "node_name": "comp", "Dec": "the component to display in that position"}{"idx": 66226, "node_name": "comp", "Dec": "the component to display in that position"}{"idx": 66229, "node_name": "comp", "Dec": "the component to display in that position"}{"idx": 66232, "node_name": "comp", "Dec": "the component to display in that position"}{"idx": 66235, "node_name": "newvalue", "Dec": "true to specify that the split pane should provide a collapse / expand widget"}{"idx": 66238, "node_name": "newlastlocation", "Dec": "an integer specifying the last divider location in pixels , from the left ( or upper ) edge of the pane to the left ( or upper ) edge of the divider"}{"idx": 66241, "node_name": "orientation", "Dec": "an integer specifying the orientation"}{"idx": 66244, "node_name": "newcontinuouslayout", "Dec": "true if the components should continuously be redrawn as the divider changes position"}{"idx": 66247, "node_name": "value", "Dec": "as described above"}{"idx": 66251, "node_name": "proportionallocation", "Dec": "a double-precision floating point value that specifies a percentage , from zero ( top / left ) to 1.0 ( bottom / right )"}{"idx": 66253, "node_name": "location", "Dec": "an int specifying a ui-specific value ( typically a pixel count )"}{"idx": 66258, "node_name": "component", "Dec": "the component to remove"}{"idx": 66260, "node_name": "index", "Dec": "an integer specifying the component to remove , where 1 specifies the left / top component and 2 specifies the bottom / right component"}{"idx": 66264, "node_name": "comp", "Dec": "the component to add"}{"idx": 66265, "node_name": "constraints", "Dec": "an object specifying the layout constraints ( position ) for this component"}{"idx": 66266, "node_name": "index", "Dec": "an integer specifying the index in the container's list ."}{"idx": 66268, "node_name": "g", "Dec": "the graphics context within which to paint"}{"idx": 66277, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 66280, "node_name": "p", "Dec": "the point defining the top-left corner of the accessible , given in the coordinate space of the object's parent"}{"idx": 66290, "node_name": "tabplacement", "Dec": "the placement for the tabs relative to the content"}{"idx": 66292, "node_name": "tabplacement", "Dec": "the placement for the tabs relative to the content"}{"idx": 66293, "node_name": "tablayoutpolicy", "Dec": "the policy for laying out tabs when all tabs will not fit on one run"}{"idx": 66296, "node_name": "ui", "Dec": "the new ui object"}{"idx": 66301, "node_name": "l", "Dec": "the changelistener to add"}{"idx": 66303, "node_name": "l", "Dec": "the changelistener to remove"}{"idx": 66308, "node_name": "model", "Dec": "the model to be used"}{"idx": 66311, "node_name": "tabplacement", "Dec": "the placement for the tabs relative to the content"}{"idx": 66314, "node_name": "tablayoutpolicy", "Dec": "the policy used to layout the tabs"}{"idx": 66317, "node_name": "index", "Dec": "the index to be selected"}{"idx": 66320, "node_name": "c", "Dec": "the selected component for this tabbedpane"}{"idx": 66322, "node_name": "title", "Dec": "the title to be displayed on the tab"}{"idx": 66323, "node_name": "icon", "Dec": "the icon to be displayed on the tab"}{"idx": 66324, "node_name": "component", "Dec": "the component to be displayed when this tab is clicked ."}{"idx": 66325, "node_name": "tip", "Dec": "the tooltip to be displayed for this tab"}{"idx": 66326, "node_name": "index", "Dec": "the position to insert this new tab ( > 0 and <= gettabcount() )"}{"idx": 66328, "node_name": "title", "Dec": "the title to be displayed in this tab"}{"idx": 66329, "node_name": "icon", "Dec": "the icon to be displayed in this tab"}{"idx": 66330, "node_name": "component", "Dec": "the component to be displayed when this tab is clicked"}{"idx": 66331, "node_name": "tip", "Dec": "the tooltip to be displayed for this tab"}{"idx": 66333, "node_name": "title", "Dec": "the title to be displayed in this tab"}{"idx": 66334, "node_name": "icon", "Dec": "the icon to be displayed in this tab"}{"idx": 66335, "node_name": "component", "Dec": "the component to be displayed when this tab is clicked"}{"idx": 66337, "node_name": "title", "Dec": "the title to be displayed in this tab"}{"idx": 66338, "node_name": "component", "Dec": "the component to be displayed when this tab is clicked"}{"idx": 66340, "node_name": "component", "Dec": "the component to be displayed when this tab is clicked"}{"idx": 66342, "node_name": "title", "Dec": "the title to be displayed in this tab"}{"idx": 66343, "node_name": "component", "Dec": "the component to be displayed when this tab is clicked"}{"idx": 66345, "node_name": "component", "Dec": "the component to be displayed when this tab is clicked"}{"idx": 66346, "node_name": "index", "Dec": "the position to insert this new tab"}{"idx": 66348, "node_name": "component", "Dec": "the component to be displayed when this tab is clicked"}{"idx": 66349, "node_name": "constraints", "Dec": "the object to be displayed in the tab"}{"idx": 66351, "node_name": "component", "Dec": "the component to be displayed when this tab is clicked"}{"idx": 66352, "node_name": "constraints", "Dec": "the object to be displayed in the tab"}{"idx": 66353, "node_name": "index", "Dec": "the position to insert this new tab"}{"idx": 66355, "node_name": "index", "Dec": "the index of the tab to be removed"}{"idx": 66357, "node_name": "component", "Dec": "the component to remove from the tabbedpane"}{"idx": 66359, "node_name": "index", "Dec": "the index of the component to remove from the tabbedpane"}{"idx": 66364, "node_name": "index", "Dec": "the index of the item being queried"}{"idx": 66366, "node_name": "index", "Dec": "the index of the item being queried"}{"idx": 66368, "node_name": "index", "Dec": "the index of the item being queried"}{"idx": 66370, "node_name": "index", "Dec": "the index of the item being queried"}{"idx": 66372, "node_name": "index", "Dec": "the index of the item being queried"}{"idx": 66374, "node_name": "index", "Dec": "the index of the item being queried"}{"idx": 66376, "node_name": "index", "Dec": "the index of the item being queried"}{"idx": 66378, "node_name": "index", "Dec": "the index of the item being queried"}{"idx": 66380, "node_name": "tabindex", "Dec": "the index of the tab that the mnemonic refers to"}{"idx": 66382, "node_name": "tabindex", "Dec": "the index of the tab that the mnemonic refers to"}{"idx": 66384, "node_name": "index", "Dec": "the index to be queried"}{"idx": 66386, "node_name": "index", "Dec": "the tab index where the title should be set"}{"idx": 66387, "node_name": "title", "Dec": "the title to be displayed in the tab"}{"idx": 66389, "node_name": "index", "Dec": "the tab index where the icon should be set"}{"idx": 66390, "node_name": "icon", "Dec": "the icon to be displayed in the tab"}{"idx": 66392, "node_name": "index", "Dec": "the tab index where the disabled icon should be set"}{"idx": 66393, "node_name": "disabledicon", "Dec": "the icon to be displayed in the tab when disabled"}{"idx": 66395, "node_name": "index", "Dec": "the tab index where the tooltip text should be set"}{"idx": 66396, "node_name": "tooltiptext", "Dec": "the tooltip text to be displayed for the tab"}{"idx": 66398, "node_name": "index", "Dec": "the tab index where the background should be set"}{"idx": 66399, "node_name": "background", "Dec": "the color to be displayed in the tab's background"}{"idx": 66401, "node_name": "index", "Dec": "the tab index where the foreground should be set"}{"idx": 66402, "node_name": "foreground", "Dec": "the color to be displayed as the tab's foreground"}{"idx": 66404, "node_name": "index", "Dec": "the tab index which should be enabled / disabled"}{"idx": 66405, "node_name": "enabled", "Dec": "whether or not the tab should be enabled"}{"idx": 66407, "node_name": "index", "Dec": "the tab index where this component is being placed"}{"idx": 66408, "node_name": "component", "Dec": "the component for the tab"}{"idx": 66410, "node_name": "tabindex", "Dec": "the index of the tab that the mnemonic refers to"}{"idx": 66411, "node_name": "mnemonicindex", "Dec": "index into the string to underline"}{"idx": 66413, "node_name": "tabindex", "Dec": "the index of the tab that the mnemonic refers to"}{"idx": 66414, "node_name": "mnemonic", "Dec": "the key code which represents the mnemonic"}{"idx": 66416, "node_name": "title", "Dec": "the title for the tab"}{"idx": 66418, "node_name": "icon", "Dec": "the icon for the tab"}{"idx": 66420, "node_name": "component", "Dec": "the component for the tab"}{"idx": 66422, "node_name": "x", "Dec": "the x location relative to this tabbedpane"}{"idx": 66423, "node_name": "y", "Dec": "the y location relative to this tabbedpane"}{"idx": 66425, "node_name": "event", "Dec": "the mouseevent that tells where the cursor is lingering"}{"idx": 66429, "node_name": "index", "Dec": "the tab index where the component should be set"}{"idx": 66430, "node_name": "component", "Dec": "the component to render the title for the specified tab"}{"idx": 66432, "node_name": "index", "Dec": "the index of the item being queried"}{"idx": 66434, "node_name": "tabcomponent", "Dec": "the tab component for the tab"}{"idx": 66439, "node_name": "t", "Dec": "a jtable"}{"idx": 66440, "node_name": "r", "Dec": "an int specifying a row"}{"idx": 66441, "node_name": "c", "Dec": "an int specifying a column"}{"idx": 66442, "node_name": "i", "Dec": "an int specifying the index to this cell"}{"idx": 66448, "node_name": "s", "Dec": "the new localized name of the object"}{"idx": 66451, "node_name": "s", "Dec": "the new localized description of the object"}{"idx": 66458, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 66461, "node_name": "l", "Dec": "the propertychangelistener to be added"}{"idx": 66463, "node_name": "l", "Dec": "the propertychangelistener to be removed"}{"idx": 66471, "node_name": "c", "Dec": "the new color for the background"}{"idx": 66474, "node_name": "c", "Dec": "the new color for the foreground"}{"idx": 66477, "node_name": "c", "Dec": "the new cursor for the object"}{"idx": 66480, "node_name": "f", "Dec": "the new font for the object"}{"idx": 66482, "node_name": "f", "Dec": "the font"}{"idx": 66485, "node_name": "b", "Dec": "if true , enables this object ; otherwise , disables it"}{"idx": 66488, "node_name": "b", "Dec": "if true , shows this object ; otherwise , hides it"}{"idx": 66491, "node_name": "p", "Dec": "the point relative to the coordinate system of the object"}{"idx": 66495, "node_name": "p", "Dec": "the new position for the top-left corner"}{"idx": 66503, "node_name": "type", "Dec": "the type"}{"idx": 66504, "node_name": "firstrow", "Dec": "the first row"}{"idx": 66505, "node_name": "lastrow", "Dec": "the last row"}{"idx": 66506, "node_name": "firstcolumn", "Dec": "the first column"}{"idx": 66507, "node_name": "lastcolumn", "Dec": "the last column"}{"idx": 66516, "node_name": "e", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 66518, "node_name": "e", "Dec": "a tablemodelevent describing the event"}{"idx": 66520, "node_name": "e", "Dec": "a tablemodelevent describing the event"}{"idx": 66522, "node_name": "e", "Dec": "a tablemodelevent describing the event"}{"idx": 66524, "node_name": "e", "Dec": "a tablecolumnmodelevent"}{"idx": 66526, "node_name": "e", "Dec": "a tablecolumnmodelevent"}{"idx": 66528, "node_name": "e", "Dec": "a tablecolumnmodelevent"}{"idx": 66530, "node_name": "e", "Dec": "a changeevent"}{"idx": 66532, "node_name": "e", "Dec": "a listselectionevent"}{"idx": 66534, "node_name": "e", "Dec": "the changeevent containing the source of the event"}{"idx": 66536, "node_name": "e", "Dec": "the changeevent containing the source of the event"}{"idx": 66538, "node_name": "e", "Dec": "the event that characterizes the change ."}{"idx": 66542, "node_name": "p", "Dec": "the point defining the top-left corner of the accessible , given in the coordinate space of the object's parent"}{"idx": 66545, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 66548, "node_name": "i", "Dec": "the zero-based index of selected children"}{"idx": 66550, "node_name": "i", "Dec": "the zero-based index of the child in this accessible object"}{"idx": 66552, "node_name": "i", "Dec": "the zero-based index of the child"}{"idx": 66554, "node_name": "i", "Dec": "the zero-based index of the child"}{"idx": 66558, "node_name": "index", "Dec": "the zero-based index in the table"}{"idx": 66560, "node_name": "index", "Dec": "the zero-based index in the table"}{"idx": 66562, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 66563, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 66567, "node_name": "a", "Dec": "the caption for the table"}{"idx": 66570, "node_name": "a", "Dec": "the summary description of the table"}{"idx": 66572, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 66573, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 66575, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 66576, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 66579, "node_name": "a", "Dec": "an accessibletable representing the row headers"}{"idx": 66582, "node_name": "a", "Dec": "an accessibletable representing the column headers"}{"idx": 66584, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 66586, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 66587, "node_name": "a", "Dec": "the description of the row"}{"idx": 66589, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 66591, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 66592, "node_name": "a", "Dec": "the description of the column"}{"idx": 66594, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 66595, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 66597, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 66599, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 66603, "node_name": "i", "Dec": "zero-based index into the table"}{"idx": 66605, "node_name": "i", "Dec": "zero-based index into the table"}{"idx": 66607, "node_name": "r", "Dec": "zero-based row of the table"}{"idx": 66608, "node_name": "c", "Dec": "zero-based column of the table"}{"idx": 66645, "node_name": "dm", "Dec": "the data model for the table"}{"idx": 66647, "node_name": "dm", "Dec": "the data model for the table"}{"idx": 66648, "node_name": "cm", "Dec": "the column model for the table"}{"idx": 66650, "node_name": "dm", "Dec": "the data model for the table"}{"idx": 66651, "node_name": "cm", "Dec": "the column model for the table"}{"idx": 66652, "node_name": "sm", "Dec": "the row selection model for the table"}{"idx": 66654, "node_name": "numrows", "Dec": "the number of rows the table holds"}{"idx": 66655, "node_name": "numcolumns", "Dec": "the number of columns the table holds"}{"idx": 66657, "node_name": "rowdata", "Dec": "the data for the new table"}{"idx": 66658, "node_name": "columnnames", "Dec": "names of each column"}{"idx": 66660, "node_name": "rowdata", "Dec": "the data for the new table"}{"idx": 66661, "node_name": "columnnames", "Dec": "names of each column"}{"idx": 66667, "node_name": "tableheader", "Dec": "new tableheader"}{"idx": 66670, "node_name": "rowheight", "Dec": "new row height"}{"idx": 66673, "node_name": "row", "Dec": "the row whose height is being changed"}{"idx": 66674, "node_name": "rowheight", "Dec": "new row height , in pixels"}{"idx": 66676, "node_name": "row", "Dec": "the row whose height is to be returned"}{"idx": 66678, "node_name": "rowmargin", "Dec": "the number of pixels between cells in a row"}{"idx": 66681, "node_name": "intercellspacing", "Dec": "a dimension specifying the new width and height between cells"}{"idx": 66684, "node_name": "gridcolor", "Dec": "the new color of the grid lines"}{"idx": 66687, "node_name": "showgrid", "Dec": "true if table view should draw grid lines"}{"idx": 66689, "node_name": "showhorizontallines", "Dec": "true if table view should draw horizontal lines"}{"idx": 66691, "node_name": "showverticallines", "Dec": "true if table view should draw vertical lines"}{"idx": 66695, "node_name": "mode", "Dec": "one of 5 legal values : auto_resize_off , auto_resize_next_column , auto_resize_subsequent_columns , auto_resize_last_column , auto_resize_all_columns"}{"idx": 66698, "node_name": "autocreatecolumnsfrommodel", "Dec": "true if jtable should automatically create columns"}{"idx": 66702, "node_name": "columnclass", "Dec": "set the default cell renderer for this columnclass"}{"idx": 66703, "node_name": "renderer", "Dec": "default cell renderer to be used for this columnclass"}{"idx": 66705, "node_name": "columnclass", "Dec": "return the default cell renderer for this columnclass"}{"idx": 66707, "node_name": "columnclass", "Dec": "set the default cell editor for this columnclass"}{"idx": 66708, "node_name": "editor", "Dec": "default cell editor to be used for this columnclass"}{"idx": 66710, "node_name": "columnclass", "Dec": "return the default cell editor for this columnclass"}{"idx": 66712, "node_name": "b", "Dec": "whether or not to enable automatic drag handling"}{"idx": 66715, "node_name": "dropmode", "Dec": "the drop mode to use"}{"idx": 66719, "node_name": "autocreaterowsorter", "Dec": "whether or not a rowsorter should be automatically created"}{"idx": 66722, "node_name": "update", "Dec": "whether or not to update the selection on sorting"}{"idx": 66725, "node_name": "sorter", "Dec": "the rowsorter ; null turns sorting off"}{"idx": 66728, "node_name": "selectionmode", "Dec": "the mode used by the row and column selection models"}{"idx": 66730, "node_name": "rowselectionallowed", "Dec": "true if this model will allow row selection"}{"idx": 66733, "node_name": "columnselectionallowed", "Dec": "true if this model will allow column selection"}{"idx": 66736, "node_name": "cellselectionenabled", "Dec": "true if simultaneous row and column selection is allowed"}{"idx": 66741, "node_name": "index0", "Dec": "one end of the interval"}{"idx": 66742, "node_name": "index1", "Dec": "the other end of the interval"}{"idx": 66744, "node_name": "index0", "Dec": "one end of the interval"}{"idx": 66745, "node_name": "index1", "Dec": "the other end of the interval"}{"idx": 66747, "node_name": "index0", "Dec": "one end of the interval"}{"idx": 66748, "node_name": "index1", "Dec": "the other end of the interval"}{"idx": 66750, "node_name": "index0", "Dec": "one end of the interval"}{"idx": 66751, "node_name": "index1", "Dec": "the other end of the interval"}{"idx": 66753, "node_name": "index0", "Dec": "one end of the interval"}{"idx": 66754, "node_name": "index1", "Dec": "the other end of the interval"}{"idx": 66756, "node_name": "index0", "Dec": "one end of the interval"}{"idx": 66757, "node_name": "index1", "Dec": "the other end of the interval"}{"idx": 66765, "node_name": "row", "Dec": "a row in the row model"}{"idx": 66767, "node_name": "column", "Dec": "the column in the column model"}{"idx": 66769, "node_name": "row", "Dec": "the row being queried"}{"idx": 66770, "node_name": "column", "Dec": "the column being queried"}{"idx": 66772, "node_name": "rowindex", "Dec": "affects the selection at row"}{"idx": 66773, "node_name": "columnindex", "Dec": "affects the selection at column"}{"idx": 66774, "node_name": "toggle", "Dec": "see description above"}{"idx": 66775, "node_name": "extend", "Dec": "if true , extend the current selection"}{"idx": 66778, "node_name": "selectionforeground", "Dec": "the color to use in the foreground for selected list items"}{"idx": 66781, "node_name": "selectionbackground", "Dec": "the color to use for the background of selected cells"}{"idx": 66783, "node_name": "identifier", "Dec": "the identifier object"}{"idx": 66785, "node_name": "viewcolumnindex", "Dec": "the index of the column in the view"}{"idx": 66787, "node_name": "modelcolumnindex", "Dec": "the index of the column in the model"}{"idx": 66789, "node_name": "modelrowindex", "Dec": "the index of the row in terms of the model"}{"idx": 66791, "node_name": "viewrowindex", "Dec": "the index of the row in the view"}{"idx": 66795, "node_name": "column", "Dec": "the column in the view being queried"}{"idx": 66797, "node_name": "column", "Dec": "the column in the view being queried"}{"idx": 66799, "node_name": "row", "Dec": "the row whose value is to be queried"}{"idx": 66800, "node_name": "column", "Dec": "the column whose value is to be queried"}{"idx": 66802, "node_name": "avalue", "Dec": "the new value"}{"idx": 66803, "node_name": "row", "Dec": "the row of the cell to be changed"}{"idx": 66804, "node_name": "column", "Dec": "the column of the cell to be changed"}{"idx": 66806, "node_name": "row", "Dec": "the row whose value is to be queried"}{"idx": 66807, "node_name": "column", "Dec": "the column whose value is to be queried"}{"idx": 66809, "node_name": "acolumn", "Dec": "the tablecolumn to be added"}{"idx": 66811, "node_name": "acolumn", "Dec": "the tablecolumn to be removed"}{"idx": 66813, "node_name": "column", "Dec": "the index of column to be moved"}{"idx": 66814, "node_name": "targetcolumn", "Dec": "the new index of the column"}{"idx": 66816, "node_name": "point", "Dec": "the location of interest"}{"idx": 66818, "node_name": "point", "Dec": "the location of interest"}{"idx": 66820, "node_name": "row", "Dec": "the row index where the desired cell is located"}{"idx": 66821, "node_name": "column", "Dec": "the column index where the desired cell is located in the display ; this is not necessarily the same as the column index in the data model for the table ; the convertcolumnindextoview ( int ) method may be used to convert a data model column index to a display column index"}{"idx": 66822, "node_name": "includespacing", "Dec": "if false , return the true cell bounds"}{"idx": 66825, "node_name": "resizingcolumn", "Dec": "the column whose resizing made this adjustment necessary or -1 if there is no such column"}{"idx": 66827, "node_name": "event", "Dec": "the mouseevent that initiated the tooltip display"}{"idx": 66829, "node_name": "surrendersfocusonkeystroke", "Dec": "true if the editor should get the focus when keystrokes cause the editor to be activated"}{"idx": 66832, "node_name": "row", "Dec": "the row to be edited"}{"idx": 66833, "node_name": "column", "Dec": "the column to be edited"}{"idx": 66835, "node_name": "row", "Dec": "the row to be edited"}{"idx": 66836, "node_name": "column", "Dec": "the column to be edited"}{"idx": 66837, "node_name": "e", "Dec": "event to pass into shouldselectcell ; note that as of java 2 platform v1.2 , the call to shouldselectcell is no longer made"}{"idx": 66844, "node_name": "ui", "Dec": "the tableui l&f object"}{"idx": 66848, "node_name": "datamodel", "Dec": "the new data source for this table"}{"idx": 66851, "node_name": "columnmodel", "Dec": "the new data source for this table"}{"idx": 66854, "node_name": "selectionmodel", "Dec": "the new selection model"}{"idx": 66857, "node_name": "e", "Dec": "the rowsorterevent describing the change"}{"idx": 66859, "node_name": "e", "Dec": "a tablemodelevent to notify listener that a table model has changed"}{"idx": 66861, "node_name": "e", "Dec": "a tablecolumnmodelevent"}{"idx": 66863, "node_name": "e", "Dec": "a tablecolumnmodelevent"}{"idx": 66865, "node_name": "e", "Dec": "the event received"}{"idx": 66867, "node_name": "e", "Dec": "the event received"}{"idx": 66869, "node_name": "e", "Dec": "the event received"}{"idx": 66871, "node_name": "e", "Dec": "the event received"}{"idx": 66873, "node_name": "e", "Dec": "the event received"}{"idx": 66875, "node_name": "e", "Dec": "the event received"}{"idx": 66877, "node_name": "size", "Dec": "a dimension object specifying the preferredsize of a jviewport whose view is this table"}{"idx": 66880, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 66881, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal"}{"idx": 66882, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right"}{"idx": 66884, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 66885, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal ."}{"idx": 66886, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right ."}{"idx": 66890, "node_name": "fillsviewportheight", "Dec": "whether or not this table is always made large enough to fill the height of an enclosing viewport"}{"idx": 66902, "node_name": "aneditor", "Dec": "the active cell editor"}{"idx": 66904, "node_name": "acolumn", "Dec": "the column of the cell to be edited"}{"idx": 66906, "node_name": "arow", "Dec": "the row of the cell to be edited"}{"idx": 66908, "node_name": "row", "Dec": "the row of the cell to render , where 0 is the first row"}{"idx": 66909, "node_name": "column", "Dec": "the column of the cell to render , where 0 is the first column"}{"idx": 66911, "node_name": "renderer", "Dec": "the tablecellrenderer to prepare"}{"idx": 66912, "node_name": "row", "Dec": "the row of the cell to render , where 0 is the first row"}{"idx": 66913, "node_name": "column", "Dec": "the column of the cell to render , where 0 is the first column"}{"idx": 66915, "node_name": "row", "Dec": "the row of the cell to edit , where 0 is the first row"}{"idx": 66916, "node_name": "column", "Dec": "the column of the cell to edit , where 0 is the first column"}{"idx": 66918, "node_name": "editor", "Dec": "the tablecelleditor to set up"}{"idx": 66919, "node_name": "row", "Dec": "the row of the cell to edit , where 0 is the first row"}{"idx": 66920, "node_name": "column", "Dec": "the column of the cell to edit , where 0 is the first column"}{"idx": 66925, "node_name": "printmode", "Dec": "the printing mode that the printable should use"}{"idx": 66927, "node_name": "printmode", "Dec": "the printing mode that the printable should use"}{"idx": 66928, "node_name": "headerformat", "Dec": "a messageformat specifying the text to be used in printing a header , or null for none"}{"idx": 66929, "node_name": "footerformat", "Dec": "a messageformat specifying the text to be used in printing a footer , or null for none"}{"idx": 66931, "node_name": "printmode", "Dec": "the printing mode that the printable should use"}{"idx": 66932, "node_name": "headerformat", "Dec": "a messageformat specifying the text to be used in printing a header , or null for none"}{"idx": 66933, "node_name": "footerformat", "Dec": "a messageformat specifying the text to be used in printing a footer , or null for none"}{"idx": 66934, "node_name": "showprintdialog", "Dec": "whether or not to display a print dialog"}{"idx": 66935, "node_name": "attr", "Dec": "a printrequestattributeset specifying any printing attributes , or null for none"}{"idx": 66936, "node_name": "interactive", "Dec": "whether or not to print in an interactive mode"}{"idx": 66938, "node_name": "printmode", "Dec": "the printing mode that the printable should use"}{"idx": 66939, "node_name": "headerformat", "Dec": "a messageformat specifying the text to be used in printing a header , or null for none"}{"idx": 66940, "node_name": "footerformat", "Dec": "a messageformat specifying the text to be used in printing a footer , or null for none"}{"idx": 66941, "node_name": "showprintdialog", "Dec": "whether or not to display a print dialog"}{"idx": 66942, "node_name": "attr", "Dec": "a printrequestattributeset specifying any printing attributes , or null for none"}{"idx": 66943, "node_name": "interactive", "Dec": "whether or not to print in an interactive mode"}{"idx": 66944, "node_name": "service", "Dec": "the destination printservice , or null to use the default printer"}{"idx": 66946, "node_name": "printmode", "Dec": "the printing mode that the printable should use"}{"idx": 66947, "node_name": "headerformat", "Dec": "a messageformat specifying the text to be used in printing a header , or null for none"}{"idx": 66948, "node_name": "footerformat", "Dec": "a messageformat specifying the text to be used in printing a footer , or null for none"}{"idx": 66953, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 66960, "node_name": "text", "Dec": "the text to be displayed , or null"}{"idx": 66962, "node_name": "rows", "Dec": "the number of rows > = 0"}{"idx": 66963, "node_name": "columns", "Dec": "the number of columns > = 0"}{"idx": 66965, "node_name": "text", "Dec": "the text to be displayed , or null"}{"idx": 66966, "node_name": "rows", "Dec": "the number of rows > = 0"}{"idx": 66967, "node_name": "columns", "Dec": "the number of columns > = 0"}{"idx": 66969, "node_name": "doc", "Dec": "the model to use"}{"idx": 66971, "node_name": "doc", "Dec": "the model to use , or create a default one if null"}{"idx": 66972, "node_name": "text", "Dec": "the text to be displayed , null if none"}{"idx": 66973, "node_name": "rows", "Dec": "the number of rows > = 0"}{"idx": 66974, "node_name": "columns", "Dec": "the number of columns > = 0"}{"idx": 66978, "node_name": "size", "Dec": "number of characters to expand to"}{"idx": 66981, "node_name": "wrap", "Dec": "indicates if lines should be wrapped"}{"idx": 66984, "node_name": "word", "Dec": "indicates if word boundaries should be used for line wrapping"}{"idx": 66987, "node_name": "offset", "Dec": "the offset > = 0"}{"idx": 66990, "node_name": "line", "Dec": "the line number to translate > = 0"}{"idx": 66992, "node_name": "line", "Dec": "the line > = 0"}{"idx": 66994, "node_name": "str", "Dec": "the text to insert"}{"idx": 66995, "node_name": "pos", "Dec": "the position at which to insert > = 0"}{"idx": 66997, "node_name": "str", "Dec": "the text to insert"}{"idx": 66999, "node_name": "str", "Dec": "the text to use as the replacement"}{"idx": 67000, "node_name": "start", "Dec": "the start position > = 0"}{"idx": 67001, "node_name": "end", "Dec": "the end position > = start"}{"idx": 67004, "node_name": "rows", "Dec": "the number of rows > = 0"}{"idx": 67008, "node_name": "columns", "Dec": "the number of columns > = 0"}{"idx": 67012, "node_name": "f", "Dec": "the font to use as the current font"}{"idx": 67017, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 67018, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal ."}{"idx": 67019, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right ."}{"idx": 67028, "node_name": "text", "Dec": "the text to be displayed , or null"}{"idx": 67030, "node_name": "columns", "Dec": "the number of columns to use to calculate the preferred width ; if columns is set to zero , the preferred width will be whatever naturally results from the component implementation"}{"idx": 67032, "node_name": "text", "Dec": "the text to be displayed , or null"}{"idx": 67033, "node_name": "columns", "Dec": "the number of columns to use to calculate the preferred width ; if columns is set to zero , the preferred width will be whatever naturally results from the component implementation"}{"idx": 67035, "node_name": "doc", "Dec": "the text storage to use ; if this is null , a default will be provided by calling the createdefaultmodel method"}{"idx": 67036, "node_name": "text", "Dec": "the initial string to display , or null"}{"idx": 67037, "node_name": "columns", "Dec": "the number of columns to use to calculate the preferred width > = 0 ; if columns is set to zero , the preferred width will be whatever naturally results from the component implementation"}{"idx": 67040, "node_name": "doc", "Dec": "the document to display / edit"}{"idx": 67044, "node_name": "alignment", "Dec": "the alignment"}{"idx": 67048, "node_name": "columns", "Dec": "the number of columns > = 0"}{"idx": 67052, "node_name": "f", "Dec": "the new font"}{"idx": 67054, "node_name": "l", "Dec": "the action listener to be added"}{"idx": 67056, "node_name": "l", "Dec": "the action listener to be removed"}{"idx": 67060, "node_name": "command", "Dec": "the command string"}{"idx": 67062, "node_name": "a", "Dec": "the action for the jtextfield , or null"}{"idx": 67065, "node_name": "a", "Dec": "the action from which to get the properties , or null"}{"idx": 67067, "node_name": "action", "Dec": "the action associated with this textfield"}{"idx": 67068, "node_name": "propertyname", "Dec": "the name of the property that changed"}{"idx": 67070, "node_name": "a", "Dec": "the textfield's action"}{"idx": 67076, "node_name": "scrolloffset", "Dec": "the offset > = 0"}{"idx": 67078, "node_name": "r", "Dec": "the region to scroll"}{"idx": 67084, "node_name": "doc", "Dec": "the document model"}{"idx": 67087, "node_name": "doc", "Dec": "the document to display / edit"}{"idx": 67089, "node_name": "doc", "Dec": "the document to display / edit"}{"idx": 67092, "node_name": "content", "Dec": "the content to replace the selection with"}{"idx": 67094, "node_name": "c", "Dec": "the component to insert"}{"idx": 67096, "node_name": "g", "Dec": "the icon to insert"}{"idx": 67098, "node_name": "nm", "Dec": "the name of the style ( must be unique within the collection of named styles ) . the name may be null if the style is unnamed , but the caller is responsible for managing the reference returned as an unnamed style can't be fetched by name . an unnamed style may be useful for things like character attribute overrides such as found in a style run ."}{"idx": 67099, "node_name": "parent", "Dec": "the parent style . this may be null if unspecified attributes need not be resolved in some other style ."}{"idx": 67101, "node_name": "nm", "Dec": "the name of the style to remove"}{"idx": 67103, "node_name": "nm", "Dec": "the name of the style"}{"idx": 67105, "node_name": "s", "Dec": "the logical style to assign to the paragraph , or null for no style"}{"idx": 67109, "node_name": "attr", "Dec": "the attributes"}{"idx": 67110, "node_name": "replace", "Dec": "if true , then replace the existing attributes first"}{"idx": 67113, "node_name": "attr", "Dec": "the non-null attributes"}{"idx": 67114, "node_name": "replace", "Dec": "if true , replace the existing attributes first"}{"idx": 67119, "node_name": "kit", "Dec": "the desired editor behavior"}{"idx": 67124, "node_name": "e", "Dec": "the event to be processed"}{"idx": 67129, "node_name": "icon", "Dec": "the image that the button should display"}{"idx": 67131, "node_name": "icon", "Dec": "the image that the button should display"}{"idx": 67132, "node_name": "selected", "Dec": "if true , the button is initially selected ; otherwise , the button is initially unselected"}{"idx": 67134, "node_name": "text", "Dec": "the string displayed on the toggle button"}{"idx": 67136, "node_name": "text", "Dec": "the string displayed on the toggle button"}{"idx": 67137, "node_name": "selected", "Dec": "if true , the button is initially selected ; otherwise , the button is initially unselected"}{"idx": 67139, "node_name": "a", "Dec": "an instance of an action"}{"idx": 67141, "node_name": "text", "Dec": "the string displayed on the button"}{"idx": 67142, "node_name": "icon", "Dec": "the image that the button should display"}{"idx": 67144, "node_name": "text", "Dec": "the text of the toggle button"}{"idx": 67145, "node_name": "icon", "Dec": "the image that the button should display"}{"idx": 67146, "node_name": "selected", "Dec": "if true , the button is initially selected ; otherwise , the button is initially unselected"}{"idx": 67150, "node_name": "cause", "Dec": "the cause why the focus is requested"}{"idx": 67152, "node_name": "cause", "Dec": "the cause why the focus is requested"}{"idx": 67159, "node_name": "b", "Dec": "true selects the toggle button , false deselects the toggle button ."}{"idx": 67161, "node_name": "b", "Dec": "whether or not the button should be pressed"}{"idx": 67169, "node_name": "orientation", "Dec": "the orientation desired"}{"idx": 67171, "node_name": "name", "Dec": "the name of the tool bar"}{"idx": 67173, "node_name": "name", "Dec": "the name of the tool bar"}{"idx": 67174, "node_name": "orientation", "Dec": "the initial orientation -- it must be either horizontal or vertical"}{"idx": 67177, "node_name": "ui", "Dec": "the toolbarui l&f object"}{"idx": 67181, "node_name": "c", "Dec": "the component to find"}{"idx": 67183, "node_name": "i", "Dec": "the component's position , where 0 is first"}{"idx": 67185, "node_name": "m", "Dec": "an insets object that defines the space between the border and the buttons"}{"idx": 67189, "node_name": "b", "Dec": "if true , the border is painted"}{"idx": 67191, "node_name": "g", "Dec": "the graphics context in which the painting is done"}{"idx": 67194, "node_name": "b", "Dec": "if true , the tool bar can be moved ; false otherwise"}{"idx": 67197, "node_name": "o", "Dec": "the new orientation -- either horizontal or vertical"}{"idx": 67199, "node_name": "rollover", "Dec": "true for rollover toolbar buttons ; otherwise false"}{"idx": 67203, "node_name": "size", "Dec": "the dimension of the separator"}{"idx": 67205, "node_name": "a", "Dec": "the action object to add as a new menu item"}{"idx": 67207, "node_name": "a", "Dec": "the action for the button to be added"}{"idx": 67209, "node_name": "b", "Dec": "a jbutton"}{"idx": 67211, "node_name": "comp", "Dec": "the component to be enhanced"}{"idx": 67212, "node_name": "constraints", "Dec": "the constraints to be enforced on the component"}{"idx": 67213, "node_name": "index", "Dec": "the index of the component"}{"idx": 67219, "node_name": "size", "Dec": "the dimension of the separator"}{"idx": 67222, "node_name": "size", "Dec": "the new dimension of the separator"}{"idx": 67237, "node_name": "tiptext", "Dec": "the string to display"}{"idx": 67240, "node_name": "c", "Dec": "the jcomponent being described"}{"idx": 67246, "node_name": "t", "Dec": "an instance of jtree"}{"idx": 67247, "node_name": "p", "Dec": "an instance of treepath"}{"idx": 67248, "node_name": "ap", "Dec": "an instance of accessible"}{"idx": 67252, "node_name": "s", "Dec": "the new localized name of the object ."}{"idx": 67255, "node_name": "s", "Dec": "the new localized description of the object"}{"idx": 67262, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 67265, "node_name": "l", "Dec": "the propertychangelistener to be added"}{"idx": 67267, "node_name": "l", "Dec": "the propertychangelistener to be removed"}{"idx": 67275, "node_name": "c", "Dec": "the new color for the background"}{"idx": 67279, "node_name": "p", "Dec": "point in local coordinates of this accessible"}{"idx": 67282, "node_name": "i", "Dec": "the zero-based index of selected items"}{"idx": 67284, "node_name": "i", "Dec": "the zero-based index of the child in this accessible object ."}{"idx": 67286, "node_name": "i", "Dec": "the zero-based index of selectable items"}{"idx": 67288, "node_name": "i", "Dec": "the zero-based index of selectable items"}{"idx": 67293, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 67295, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 67299, "node_name": "e", "Dec": "listselectionevent"}{"idx": 67302, "node_name": "e", "Dec": "a tree model event"}{"idx": 67304, "node_name": "e", "Dec": "a tree node insertion event"}{"idx": 67306, "node_name": "e", "Dec": "a tree node ( s ) removal event"}{"idx": 67308, "node_name": "e", "Dec": "a tree model event"}{"idx": 67310, "node_name": "e", "Dec": "a treeexpansionevent"}{"idx": 67312, "node_name": "e", "Dec": "a tree node insertion event"}{"idx": 67315, "node_name": "p", "Dec": "point in local coordinates of this accessible"}{"idx": 67318, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 67323, "node_name": "i", "Dec": "the zero-based index of selected items"}{"idx": 67325, "node_name": "i", "Dec": "the zero-based index of the child in this accessible object ."}{"idx": 67327, "node_name": "i", "Dec": "the zero-based index of selectable items"}{"idx": 67329, "node_name": "i", "Dec": "the zero-based index of selectable items"}{"idx": 67341, "node_name": "value", "Dec": "the object that is the value for the new node"}{"idx": 67342, "node_name": "children", "Dec": "an array of objects , a vector , or a hashtable used to create the child nodes ; if any other object is specified , or if the value is null , then the node is not allowed to have children"}{"idx": 67344, "node_name": "parent", "Dec": "the parent node"}{"idx": 67345, "node_name": "children", "Dec": "the children"}{"idx": 67350, "node_name": "index", "Dec": "an index into this node's child array"}{"idx": 67357, "node_name": "paths", "Dec": "the paths to select ; this is ignored"}{"idx": 67359, "node_name": "paths", "Dec": "the paths to add to the selection ; this is ignored"}{"idx": 67361, "node_name": "paths", "Dec": "the paths to remove ; this is ignored"}{"idx": 67363, "node_name": "mode", "Dec": "the selection mode ; this is ignored"}{"idx": 67365, "node_name": "mapper", "Dec": "the rowmapper instance ; this is ignored"}{"idx": 67367, "node_name": "listener", "Dec": "the listener to add ; this is ignored"}{"idx": 67369, "node_name": "listener", "Dec": "the listener to remove ; this is ignored"}{"idx": 67371, "node_name": "listener", "Dec": "the listener to add ; this is ignored"}{"idx": 67373, "node_name": "listener", "Dec": "the listener to remove ; this is ignored"}{"idx": 67408, "node_name": "value", "Dec": "an array of objects"}{"idx": 67410, "node_name": "value", "Dec": "a vector"}{"idx": 67412, "node_name": "value", "Dec": "a hashtable"}{"idx": 67414, "node_name": "root", "Dec": "a treenode object"}{"idx": 67416, "node_name": "root", "Dec": "a treenode object"}{"idx": 67417, "node_name": "asksallowschildren", "Dec": "if false , any node without children is a leaf node ; if true , only nodes that do not allow children are leaf nodes"}{"idx": 67419, "node_name": "newmodel", "Dec": "the treemodel to use as the data model"}{"idx": 67422, "node_name": "value", "Dec": "the object used as the foundation for the treemodel"}{"idx": 67425, "node_name": "ui", "Dec": "the treeui l&f object"}{"idx": 67430, "node_name": "x", "Dec": "the treecellrenderer that is to render each cell"}{"idx": 67432, "node_name": "flag", "Dec": "a boolean value , true if the tree is editable"}{"idx": 67435, "node_name": "celleditor", "Dec": "the treecelleditor to use"}{"idx": 67439, "node_name": "newmodel", "Dec": "the treemodel that is to provide the data"}{"idx": 67442, "node_name": "rootvisible", "Dec": "true if the root node of the tree is to be displayed"}{"idx": 67444, "node_name": "newvalue", "Dec": "true if root handles should be displayed ; otherwise , false"}{"idx": 67447, "node_name": "rowheight", "Dec": "the height of each cell , in pixels"}{"idx": 67451, "node_name": "newvalue", "Dec": "true to suggest a large model to the ui"}{"idx": 67454, "node_name": "newvalue", "Dec": "true means that stopcellediting is invoked when editing is interrupted , and data is saved ; false means that cancelcellediting is invoked , and changes are lost"}{"idx": 67457, "node_name": "newvalue", "Dec": "false to disable scrolling on expansion ; true to enable it"}{"idx": 67460, "node_name": "clickcount", "Dec": "the number of mouse clicks to get a node expanded or closed"}{"idx": 67463, "node_name": "newvalue", "Dec": "the new value for expandsselectedpaths"}{"idx": 67466, "node_name": "b", "Dec": "whether or not to enable automatic drag handling"}{"idx": 67469, "node_name": "dropmode", "Dec": "the drop mode to use"}{"idx": 67473, "node_name": "path", "Dec": "a treepath identifying a node"}{"idx": 67475, "node_name": "event", "Dec": "the mouseevent that initiated the tooltip display"}{"idx": 67477, "node_name": "value", "Dec": "the object to convert to text"}{"idx": 67478, "node_name": "selected", "Dec": "true if the node is selected"}{"idx": 67479, "node_name": "expanded", "Dec": "true if the node is expanded"}{"idx": 67480, "node_name": "leaf", "Dec": "true if the node is a leaf node"}{"idx": 67481, "node_name": "row", "Dec": "an integer specifying the node's display row , where 0 is the first row in the display"}{"idx": 67482, "node_name": "hasfocus", "Dec": "true if the node has the focus"}{"idx": 67485, "node_name": "path", "Dec": "the treepath specifying the node to select"}{"idx": 67487, "node_name": "paths", "Dec": "an array of treepath objects that specifies the nodes to select"}{"idx": 67489, "node_name": "newpath", "Dec": "the new lead path"}{"idx": 67491, "node_name": "newpath", "Dec": "the new anchor path"}{"idx": 67493, "node_name": "row", "Dec": "the row to select , where 0 is the first row in the display"}{"idx": 67495, "node_name": "rows", "Dec": "an array of ints specifying the rows to select , where 0 indicates the first row in the display"}{"idx": 67497, "node_name": "path", "Dec": "the treepath to add"}{"idx": 67499, "node_name": "paths", "Dec": "an array of treepath objects that specifies the nodes to add"}{"idx": 67501, "node_name": "row", "Dec": "an integer specifying the row of the node to add , where 0 is the first row in the display"}{"idx": 67503, "node_name": "rows", "Dec": "an array of ints specifying the rows to add , where 0 indicates the first row in the display"}{"idx": 67515, "node_name": "path", "Dec": "a treepath identifying a node"}{"idx": 67517, "node_name": "row", "Dec": "an integer specifying a display row , where 0 is the first row in the display"}{"idx": 67519, "node_name": "parent", "Dec": "the path which is to be examined"}{"idx": 67521, "node_name": "path", "Dec": "a treepath identifying a node"}{"idx": 67523, "node_name": "path", "Dec": "the treepath specifying the node to check"}{"idx": 67525, "node_name": "row", "Dec": "the row to check , where 0 is the first row in the display"}{"idx": 67527, "node_name": "path", "Dec": "the treepath to check"}{"idx": 67529, "node_name": "row", "Dec": "the row to check , where 0 is the first row in the display"}{"idx": 67531, "node_name": "path", "Dec": "the treepath to make visible"}{"idx": 67533, "node_name": "path", "Dec": "treepath identifying a node"}{"idx": 67535, "node_name": "path", "Dec": "the treepath identifying the node"}{"idx": 67537, "node_name": "row", "Dec": "the row to be drawn , where 0 is the first row in the display"}{"idx": 67539, "node_name": "path", "Dec": "the treepath identifying the node to bring into view"}{"idx": 67541, "node_name": "row", "Dec": "an integer specifying the row to scroll , where 0 is the first row in the display"}{"idx": 67543, "node_name": "row", "Dec": "an integer specifying a row"}{"idx": 67545, "node_name": "path", "Dec": "the treepath identifying a node"}{"idx": 67547, "node_name": "path", "Dec": "the treepath identifying a node"}{"idx": 67549, "node_name": "row", "Dec": "an integer specifying a display row , where 0 is the first row in the display"}{"idx": 67551, "node_name": "path", "Dec": "the treepath identifying a node"}{"idx": 67553, "node_name": "row", "Dec": "an integer specifying a display row , where 0 is the first row in the display"}{"idx": 67555, "node_name": "x", "Dec": "an integer giving the number of pixels horizontally from the left edge of the display area , minus any left margin"}{"idx": 67556, "node_name": "y", "Dec": "an integer giving the number of pixels vertically from the top of the display area , minus any top margin"}{"idx": 67558, "node_name": "x", "Dec": "an integer giving the number of pixels horizontally from the left edge of the display area , minus any left margin"}{"idx": 67559, "node_name": "y", "Dec": "an integer giving the number of pixels vertically from the top of the display area , minus any top margin"}{"idx": 67561, "node_name": "x", "Dec": "an integer giving the number of pixels horizontally from the left edge of the display area , minus any left margin"}{"idx": 67562, "node_name": "y", "Dec": "an integer giving the number of pixels vertically from the top of the display area , minus any top margin"}{"idx": 67564, "node_name": "x", "Dec": "an integer giving the number of pixels horizontally from the left edge of the display area , minus any left margin"}{"idx": 67565, "node_name": "y", "Dec": "an integer giving the number of pixels vertically from the top of the display area , minus any top margin"}{"idx": 67570, "node_name": "path", "Dec": "the treepath identifying a node"}{"idx": 67573, "node_name": "selectionmodel", "Dec": "the treeselectionmodel to use , or null to disable selections"}{"idx": 67576, "node_name": "index0", "Dec": "the first index in the range"}{"idx": 67577, "node_name": "index1", "Dec": "the last index in the range"}{"idx": 67579, "node_name": "index0", "Dec": "the first index in the range to select"}{"idx": 67580, "node_name": "index1", "Dec": "the last index in the range to select"}{"idx": 67582, "node_name": "index0", "Dec": "the first index in the range to add to the selection"}{"idx": 67583, "node_name": "index1", "Dec": "the last index in the range to add to the selection"}{"idx": 67585, "node_name": "index0", "Dec": "the first row to remove from the selection"}{"idx": 67586, "node_name": "index1", "Dec": "the last row to remove from the selection"}{"idx": 67588, "node_name": "path", "Dec": "the treepath identifying a node"}{"idx": 67590, "node_name": "paths", "Dec": "an array of treepath objects that specifies the nodes to remove"}{"idx": 67592, "node_name": "row", "Dec": "the row to remove"}{"idx": 67594, "node_name": "rows", "Dec": "an array of ints specifying display rows , where 0 is the first row in the display"}{"idx": 67598, "node_name": "tel", "Dec": "a treeexpansionlistener that will be notified when a tree node is expanded or collapsed ( a \" negative expansion \")"}{"idx": 67600, "node_name": "tel", "Dec": "the treeexpansionlistener to remove"}{"idx": 67603, "node_name": "tel", "Dec": "a treewillexpandlistener that will be notified when a tree node will be expanded or collapsed ( a \" negative expansion \")"}{"idx": 67605, "node_name": "tel", "Dec": "the treewillexpandlistener to remove"}{"idx": 67608, "node_name": "path", "Dec": "the treepath indicating the node that was expanded"}{"idx": 67610, "node_name": "path", "Dec": "the treepath indicating the node that was collapsed"}{"idx": 67612, "node_name": "path", "Dec": "the treepath indicating the node that was expanded"}{"idx": 67614, "node_name": "path", "Dec": "the treepath indicating the node that was expanded"}{"idx": 67616, "node_name": "tsl", "Dec": "the treeselectionlistener that will be notified when a node is selected or deselected ( a \" negative selection \")"}{"idx": 67618, "node_name": "tsl", "Dec": "the treeselectionlistener to remove"}{"idx": 67621, "node_name": "e", "Dec": "the treeselectionevent to be fired ; generated by the treeselectionmodel when a node is selected or deselected"}{"idx": 67624, "node_name": "newcount", "Dec": "the number of rows to display"}{"idx": 67627, "node_name": "prefix", "Dec": "the string to test for a match"}{"idx": 67628, "node_name": "startingrow", "Dec": "the row for starting the search"}{"idx": 67629, "node_name": "bias", "Dec": "the search direction , either position.bias.forward or position.bias.backward ."}{"idx": 67632, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 67633, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal"}{"idx": 67634, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right"}{"idx": 67636, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 67637, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal"}{"idx": 67638, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right ."}{"idx": 67642, "node_name": "path", "Dec": "a treepath identifying a node"}{"idx": 67643, "node_name": "state", "Dec": "if true , all parents of @{code path } and path are marked as expanded . otherwise , all parents of path are marked expanded , but path itself is marked collapsed ."}{"idx": 67645, "node_name": "parent", "Dec": "a path"}{"idx": 67647, "node_name": "toremove", "Dec": "an enumeration of the paths to remove ; a value of null is ignored"}{"idx": 67651, "node_name": "path", "Dec": "a path"}{"idx": 67652, "node_name": "includepath", "Dec": "is true and path is selected , it will be removed from the selection ."}{"idx": 67660, "node_name": "e", "Dec": "the treeselectionevent generated by the treeselectionmodel"}{"idx": 67675, "node_name": "ui", "Dec": "the viewportui l&f object"}{"idx": 67679, "node_name": "child", "Dec": "the lightweight child of the viewport"}{"idx": 67680, "node_name": "constraints", "Dec": "the constraints to be respected"}{"idx": 67681, "node_name": "index", "Dec": "the index"}{"idx": 67683, "node_name": "child", "Dec": "the component to be removed"}{"idx": 67685, "node_name": "contentrect", "Dec": "the rectangle to display"}{"idx": 67687, "node_name": "border", "Dec": "the border to set"}{"idx": 67690, "node_name": "insets", "Dec": "the insets object which can be reused"}{"idx": 67694, "node_name": "g", "Dec": "the graphics context within which to paint"}{"idx": 67696, "node_name": "x", "Dec": "left edge of the origin"}{"idx": 67697, "node_name": "y", "Dec": "top edge of the origin"}{"idx": 67698, "node_name": "w", "Dec": "width in pixels"}{"idx": 67699, "node_name": "h", "Dec": "height in pixels"}{"idx": 67701, "node_name": "mode", "Dec": "one of the following values : jviewport.blit_scroll_mode jviewport.backingstore_scroll_mode jviewport.simple_scroll_mode"}{"idx": 67705, "node_name": "view", "Dec": "the viewport's new lightweight child"}{"idx": 67708, "node_name": "newsize", "Dec": "a dimension object specifying the new size of the view"}{"idx": 67711, "node_name": "p", "Dec": "a point object giving the upper left coordinates"}{"idx": 67714, "node_name": "dx", "Dec": "the horizontal delta"}{"idx": 67715, "node_name": "dy", "Dec": "the vertical delta"}{"idx": 67716, "node_name": "blitfrom", "Dec": "the point we're blitting from"}{"idx": 67717, "node_name": "blitto", "Dec": "the point we're blitting to"}{"idx": 67718, "node_name": "blitsize", "Dec": "the dimension of the area to blit"}{"idx": 67719, "node_name": "blitpaint", "Dec": "the area to blit"}{"idx": 67722, "node_name": "size", "Dec": "a dimension object using pixel coordinates"}{"idx": 67724, "node_name": "p", "Dec": "a point object using pixel coordinates"}{"idx": 67726, "node_name": "newextent", "Dec": "a dimension object specifying the size of the view"}{"idx": 67730, "node_name": "l", "Dec": "the changelistener to add"}{"idx": 67732, "node_name": "l", "Dec": "the changelistener to remove"}{"idx": 67736, "node_name": "tm", "Dec": "maximum time in milliseconds before update"}{"idx": 67737, "node_name": "x", "Dec": "the x coordinate ( pixels over from left )"}{"idx": 67738, "node_name": "y", "Dec": "the y coordinate ( pixels down from top )"}{"idx": 67739, "node_name": "w", "Dec": "the width"}{"idx": 67740, "node_name": "h", "Dec": "the height"}{"idx": 67743, "node_name": "propertyname", "Dec": "a string containing the property name"}{"idx": 67744, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 67745, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 67757, "node_name": "gc", "Dec": "the graphicsconfiguration that is used to construct the new window with ; if gc is null , the system default graphicsconfiguration is assumed"}{"idx": 67759, "node_name": "owner", "Dec": "the frame from which the window is displayed"}{"idx": 67761, "node_name": "owner", "Dec": "the window from which the window is displayed"}{"idx": 67763, "node_name": "owner", "Dec": "the window from which the window is displayed"}{"idx": 67764, "node_name": "gc", "Dec": "the graphicsconfiguration that is used to construct the new window with ; if gc is null , the system default graphicsconfiguration is assumed , unless owner is also null , in which case the graphicsconfiguration from the shared owner frame will be used ."}{"idx": 67769, "node_name": "newhandler", "Dec": "the new transferhandler"}{"idx": 67772, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 67774, "node_name": "enabled", "Dec": "true if add and setlayout are forwarded , false if they should operate directly on the jwindow ."}{"idx": 67776, "node_name": "comp", "Dec": "the component to be enhanced"}{"idx": 67777, "node_name": "constraints", "Dec": "the constraints to be respected"}{"idx": 67778, "node_name": "index", "Dec": "the index"}{"idx": 67780, "node_name": "comp", "Dec": "the component to be removed"}{"idx": 67782, "node_name": "manager", "Dec": "the layoutmanager"}{"idx": 67785, "node_name": "root", "Dec": "the new rootpane property"}{"idx": 67788, "node_name": "contentpane", "Dec": "the new contentpane"}{"idx": 67791, "node_name": "layeredpane", "Dec": "the new layeredpane object"}{"idx": 67794, "node_name": "glasspane", "Dec": "the glasspane object for this window"}{"idx": 67797, "node_name": "time", "Dec": "maximum time in milliseconds before update"}{"idx": 67798, "node_name": "x", "Dec": "the x coordinate"}{"idx": 67799, "node_name": "y", "Dec": "the y coordinate"}{"idx": 67800, "node_name": "width", "Dec": "the width"}{"idx": 67801, "node_name": "height", "Dec": "the height"}{"idx": 67806, "node_name": "keychar", "Dec": "the character value for a keyboard key"}{"idx": 67808, "node_name": "keychar", "Dec": "the character object for a keyboard character"}{"idx": 67809, "node_name": "modifiers", "Dec": "a bitwise-ored combination of any modifiers"}{"idx": 67811, "node_name": "keycode", "Dec": "an int specifying the numeric code for a keyboard key"}{"idx": 67812, "node_name": "modifiers", "Dec": "a bitwise-ored combination of any modifiers"}{"idx": 67813, "node_name": "onkeyrelease", "Dec": "true if the keystroke should represent a key release ; false otherwise ."}{"idx": 67815, "node_name": "keycode", "Dec": "an int specifying the numeric code for a keyboard key"}{"idx": 67816, "node_name": "modifiers", "Dec": "a bitwise-ored combination of any modifiers"}{"idx": 67818, "node_name": "anevent", "Dec": "the keyevent from which to obtain the keystroke"}{"idx": 67820, "node_name": "s", "Dec": "a string formatted as described above"}{"idx": 67824, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or a focus traversal policy provider"}{"idx": 67825, "node_name": "acomponent", "Dec": "a ( possibly indirect ) child of acontainer , or acontainer itself"}{"idx": 67827, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or a focus traversal policy provider"}{"idx": 67828, "node_name": "acomponent", "Dec": "a ( possibly indirect ) child of acontainer , or acontainer itself"}{"idx": 67830, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or a focus traversal policy provider whose first component is to be returned"}{"idx": 67832, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or a focus traversal policy provider whose last component is to be returned"}{"idx": 67834, "node_name": "acomponent", "Dec": "the component whose fitness as a focus owner is to be tested"}{"idx": 67838, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 67842, "node_name": "style", "Dec": "the layoutstyle , or null"}{"idx": 67845, "node_name": "component1", "Dec": "the jcomponent component2 is being placed relative to"}{"idx": 67846, "node_name": "component2", "Dec": "the jcomponent being placed"}{"idx": 67847, "node_name": "position", "Dec": "the position component2 is being placed relative to component1 ; one of swingconstants.north , swingconstants.south , swingconstants.east or swingconstants.west"}{"idx": 67848, "node_name": "type", "Dec": "how the two components are being placed"}{"idx": 67849, "node_name": "parent", "Dec": "the parent of component2 ; this may differ from the actual parent and it may be null"}{"idx": 67851, "node_name": "component", "Dec": "the jcomponent being positioned"}{"idx": 67852, "node_name": "position", "Dec": "the position component is being placed relative to its parent ; one of swingconstants.north , swingconstants.south , swingconstants.east or swingconstants.west"}{"idx": 67853, "node_name": "parent", "Dec": "the parent of component ; this may differ from the actual parent and may be null"}{"idx": 67856, "node_name": "list", "Dec": "the jlist we're painting ."}{"idx": 67857, "node_name": "value", "Dec": "the value returned by list.getmodel() .getelementat ( index ) ."}{"idx": 67858, "node_name": "index", "Dec": "the cells index ."}{"idx": 67859, "node_name": "isselected", "Dec": "true if the specified cell was selected ."}{"idx": 67860, "node_name": "cellhasfocus", "Dec": "true if the specified cell has the focus ."}{"idx": 67864, "node_name": "index", "Dec": "the requested index"}{"idx": 67866, "node_name": "l", "Dec": "the listdatalistener to be added"}{"idx": 67868, "node_name": "l", "Dec": "the listdatalistener to be removed"}{"idx": 67874, "node_name": "index0", "Dec": "one end of the interval ."}{"idx": 67875, "node_name": "index1", "Dec": "other end of the interval"}{"idx": 67877, "node_name": "index0", "Dec": "one end of the interval ."}{"idx": 67878, "node_name": "index1", "Dec": "other end of the interval"}{"idx": 67880, "node_name": "index0", "Dec": "one end of the interval ."}{"idx": 67881, "node_name": "index1", "Dec": "other end of the interval"}{"idx": 67885, "node_name": "index", "Dec": "an index"}{"idx": 67888, "node_name": "index", "Dec": "the anchor selection index"}{"idx": 67891, "node_name": "index", "Dec": "the lead selection index"}{"idx": 67895, "node_name": "index", "Dec": "the beginning of the interval"}{"idx": 67896, "node_name": "length", "Dec": "the length of the interval"}{"idx": 67897, "node_name": "before", "Dec": "if true , interval inserts before the index , otherwise , interval inserts after the index"}{"idx": 67899, "node_name": "index0", "Dec": "the beginning of the interval"}{"idx": 67900, "node_name": "index1", "Dec": "the end of the interval"}{"idx": 67902, "node_name": "valueisadjusting", "Dec": "the new value of the property"}{"idx": 67905, "node_name": "selectionmode", "Dec": "the selection mode"}{"idx": 67908, "node_name": "x", "Dec": "the listselectionlistener"}{"idx": 67910, "node_name": "x", "Dec": "the listselectionlistener"}{"idx": 67916, "node_name": "c", "Dec": "component to set the colors on"}{"idx": 67917, "node_name": "defaultbgname", "Dec": "key for the background"}{"idx": 67918, "node_name": "defaultfgname", "Dec": "key for the foreground"}{"idx": 67920, "node_name": "c", "Dec": "component set to the colors and font on"}{"idx": 67921, "node_name": "defaultbgname", "Dec": "key for the background"}{"idx": 67922, "node_name": "defaultfgname", "Dec": "key for the foreground"}{"idx": 67923, "node_name": "defaultfontname", "Dec": "key for the font"}{"idx": 67925, "node_name": "c", "Dec": "component to set the border on"}{"idx": 67926, "node_name": "defaultbordername", "Dec": "key specifying the border"}{"idx": 67928, "node_name": "c", "Dec": "component to uninstall the border on"}{"idx": 67930, "node_name": "c", "Dec": "target component to set the property on"}{"idx": 67931, "node_name": "propertyname", "Dec": "name of the property to set"}{"idx": 67932, "node_name": "propertyvalue", "Dec": "value of the property"}{"idx": 67934, "node_name": "keybindinglist", "Dec": "an array of key-action pairs"}{"idx": 67936, "node_name": "keys", "Dec": "alternating pairs of keystroke-action key pairs as described in loadkeybindings ( javax.swing.inputmap , java.lang.object [ ])"}{"idx": 67938, "node_name": "c", "Dec": "component to create the componentinputmapuiresource with"}{"idx": 67939, "node_name": "keys", "Dec": "alternating pairs of keystroke-action key pairs as described in loadkeybindings ( javax.swing.inputmap , java.lang.object [ ])"}{"idx": 67941, "node_name": "retmap", "Dec": "inputmap to add the key-action pairs to"}{"idx": 67942, "node_name": "keys", "Dec": "bindings to add to retmap"}{"idx": 67944, "node_name": "baseclass", "Dec": "class used to load the resource"}{"idx": 67945, "node_name": "giffile", "Dec": "path to the image to load"}{"idx": 67948, "node_name": "component", "Dec": "the component the error occurred in , may be null indicating the error condition is not directly associated with a component"}{"idx": 67950, "node_name": "systempropertyname", "Dec": "the name of the system desktop property being queried"}{"idx": 67951, "node_name": "fallbackvalue", "Dec": "the object to be returned as the value if the system value is null"}{"idx": 67953, "node_name": "component", "Dec": "jcomponent that will display the icon , may be null"}{"idx": 67954, "node_name": "icon", "Dec": "icon to generate the disabled icon from"}{"idx": 67956, "node_name": "component", "Dec": "jcomponent that will display the icon , may be null"}{"idx": 67957, "node_name": "icon", "Dec": "icon to generate disabled and selected icon from"}{"idx": 67970, "node_name": "event", "Dec": "a mouseevent to be processed"}{"idx": 67971, "node_name": "path", "Dec": "the path of the receiving element in the menu hierarchy"}{"idx": 67972, "node_name": "manager", "Dec": "the menuselectionmanager for the menu hierarchy"}{"idx": 67974, "node_name": "event", "Dec": "a keyevent to be processed"}{"idx": 67975, "node_name": "path", "Dec": "the path of the receiving element in the menu hierarchy"}{"idx": 67976, "node_name": "manager", "Dec": "the menuselectionmanager for the menu hierarchy"}{"idx": 67978, "node_name": "isincluded", "Dec": "can be used to indicate if this menuelement is active ( if it is a menu ) or is on the part of the menu path that changed ( if it is a menu item ) ."}{"idx": 67987, "node_name": "path", "Dec": "an array of menuelement objects specifying the selected path"}{"idx": 67991, "node_name": "l", "Dec": "the listener to add"}{"idx": 67993, "node_name": "l", "Dec": "the listener to remove"}{"idx": 67997, "node_name": "event", "Dec": "a mouseevent object"}{"idx": 67999, "node_name": "source", "Dec": "the component in whose coordinate space sourcepoint is given"}{"idx": 68000, "node_name": "sourcepoint", "Dec": "the point which is being tested"}{"idx": 68002, "node_name": "e", "Dec": "a keyevent object"}{"idx": 68004, "node_name": "c", "Dec": "a component"}{"idx": 68007, "node_name": "item", "Dec": "the item to be added"}{"idx": 68009, "node_name": "obj", "Dec": "the object to be removed"}{"idx": 68011, "node_name": "item", "Dec": "the item to be added"}{"idx": 68012, "node_name": "index", "Dec": "location to add the object"}{"idx": 68014, "node_name": "index", "Dec": "location of the item to be removed"}{"idx": 68017, "node_name": "target", "Dec": "the container to do layout against"}{"idx": 68020, "node_name": "target", "Dec": "the container"}{"idx": 68022, "node_name": "name", "Dec": "the name of the component"}{"idx": 68023, "node_name": "comp", "Dec": "the component to be added"}{"idx": 68025, "node_name": "comp", "Dec": "the component to remove"}{"idx": 68027, "node_name": "comp", "Dec": "the component to be added"}{"idx": 68028, "node_name": "constraints", "Dec": "where / how the component is added to the layout ."}{"idx": 68030, "node_name": "target", "Dec": "the component which needs to be laid out"}{"idx": 68032, "node_name": "target", "Dec": "the component which needs to be laid out"}{"idx": 68034, "node_name": "target", "Dec": "the component that needs to be laid out"}{"idx": 68036, "node_name": "target", "Dec": "the container"}{"idx": 68038, "node_name": "target", "Dec": "the container"}{"idx": 68040, "node_name": "target", "Dec": "the container to lay out"}{"idx": 68043, "node_name": "g", "Dec": "the graphics2d to render to . this must not be null ."}{"idx": 68044, "node_name": "object", "Dec": "an optional configuration parameter . this may be null ."}{"idx": 68045, "node_name": "width", "Dec": "width of the area to paint ."}{"idx": 68046, "node_name": "height", "Dec": "height of the area to paint ."}{"idx": 68052, "node_name": "direction", "Dec": "the direction of the arrow ; one of swingconstants.north , swingconstants.south , swingconstants.east or swingconstants.west"}{"idx": 68053, "node_name": "background", "Dec": "the background color of the button"}{"idx": 68054, "node_name": "shadow", "Dec": "the color of the shadow"}{"idx": 68055, "node_name": "darkshadow", "Dec": "the color of the dark shadow"}{"idx": 68056, "node_name": "highlight", "Dec": "the color of the highlight"}{"idx": 68058, "node_name": "direction", "Dec": "the direction of the arrow ; one of swingconstants.north , swingconstants.south , swingconstants.east or swingconstants.west"}{"idx": 68061, "node_name": "direction", "Dec": "the direction of the arrow ; one of of swingconstants.north , swingconstants.south , swingconstants.east or swingconstants.west"}{"idx": 68067, "node_name": "g", "Dec": "the graphics to draw to"}{"idx": 68068, "node_name": "x", "Dec": "the x coordinate"}{"idx": 68069, "node_name": "y", "Dec": "the y coordinate"}{"idx": 68070, "node_name": "size", "Dec": "the size of the triangle to draw"}{"idx": 68071, "node_name": "direction", "Dec": "the direction in which to draw the arrow ; one of swingconstants.north , swingconstants.south , swingconstants.east or swingconstants.west"}{"idx": 68072, "node_name": "isenabled", "Dec": "whether or not the arrow is drawn enabled"}{"idx": 68079, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68080, "node_name": "darkshadow", "Dec": "a color of dark shadow"}{"idx": 68081, "node_name": "highlight", "Dec": "a color of highlight"}{"idx": 68082, "node_name": "lighthighlight", "Dec": "a color of light highlight"}{"idx": 68089, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68090, "node_name": "darkshadow", "Dec": "a color of dark shadow"}{"idx": 68091, "node_name": "highlight", "Dec": "a color of highlight"}{"idx": 68092, "node_name": "lighthighlight", "Dec": "a color of light highlight"}{"idx": 68108, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68109, "node_name": "highlight", "Dec": "a color of highlight"}{"idx": 68112, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68113, "node_name": "darkshadow", "Dec": "a color of dark shadow"}{"idx": 68114, "node_name": "highlight", "Dec": "a color of highlight"}{"idx": 68115, "node_name": "lighthighlight", "Dec": "a color of light highlight"}{"idx": 68118, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68119, "node_name": "darkshadow", "Dec": "a color of dark shadow"}{"idx": 68120, "node_name": "highlight", "Dec": "a color of highlight"}{"idx": 68121, "node_name": "lighthighlight", "Dec": "a color of light highlight"}{"idx": 68126, "node_name": "highlight", "Dec": "a color of highlight"}{"idx": 68127, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68130, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68131, "node_name": "darkshadow", "Dec": "a color of dark shadow"}{"idx": 68132, "node_name": "highlight", "Dec": "a color of highlight"}{"idx": 68133, "node_name": "lighthighlight", "Dec": "a color of light highlight"}{"idx": 68136, "node_name": "b", "Dec": "an abstract button"}{"idx": 68138, "node_name": "b", "Dec": "an abstract button"}{"idx": 68140, "node_name": "c", "Dec": "a component"}{"idx": 68142, "node_name": "c", "Dec": "a component"}{"idx": 68148, "node_name": "c", "Dec": "a component"}{"idx": 68151, "node_name": "b", "Dec": "an abstract button"}{"idx": 68153, "node_name": "b", "Dec": "an abstract button"}{"idx": 68155, "node_name": "b", "Dec": "an abstract button"}{"idx": 68157, "node_name": "b", "Dec": "an abstract button"}{"idx": 68159, "node_name": "b", "Dec": "an abstract button"}{"idx": 68161, "node_name": "b", "Dec": "an abstract button"}{"idx": 68163, "node_name": "b", "Dec": "an abstract button"}{"idx": 68165, "node_name": "b", "Dec": "an abstract button"}{"idx": 68167, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68168, "node_name": "c", "Dec": "a component"}{"idx": 68169, "node_name": "iconrect", "Dec": "a bounding rectangle to render the icon"}{"idx": 68171, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68172, "node_name": "c", "Dec": "a component"}{"idx": 68173, "node_name": "textrect", "Dec": "a bounding rectangle to render the text"}{"idx": 68174, "node_name": "text", "Dec": "a string to render"}{"idx": 68176, "node_name": "g", "Dec": "graphics context"}{"idx": 68177, "node_name": "b", "Dec": "current button to render"}{"idx": 68178, "node_name": "textrect", "Dec": "bounding rectangle to render the text"}{"idx": 68179, "node_name": "text", "Dec": "string to render"}{"idx": 68181, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68182, "node_name": "b", "Dec": "an abstract button"}{"idx": 68183, "node_name": "viewrect", "Dec": "a bounding rectangle to render the button"}{"idx": 68184, "node_name": "textrect", "Dec": "a bounding rectangle to render the text"}{"idx": 68185, "node_name": "iconrect", "Dec": "a bounding rectangle to render the icon"}{"idx": 68187, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68188, "node_name": "b", "Dec": "an abstract button"}{"idx": 68193, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 68194, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 68195, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 68197, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 68201, "node_name": "c", "Dec": "a component"}{"idx": 68203, "node_name": "item", "Dec": "a menu item"}{"idx": 68204, "node_name": "e", "Dec": "a mouse event"}{"idx": 68205, "node_name": "path", "Dec": "an array of menuelement"}{"idx": 68206, "node_name": "manager", "Dec": "an instance of menuselectionmanager"}{"idx": 68210, "node_name": "b", "Dec": "a component"}{"idx": 68218, "node_name": "c", "Dec": "a component"}{"idx": 68235, "node_name": "anobject", "Dec": "the displayed value of the editor"}{"idx": 68271, "node_name": "c", "Dec": "a component"}{"idx": 68295, "node_name": "c", "Dec": "a jcombobox"}{"idx": 68297, "node_name": "c", "Dec": "a jcombobox"}{"idx": 68298, "node_name": "v", "Dec": "a boolean determining the visibilty of the popup"}{"idx": 68300, "node_name": "c", "Dec": "a jcombobox"}{"idx": 68302, "node_name": "c", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 68304, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 68305, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 68306, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 68308, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 68310, "node_name": "keycode", "Dec": "a key code"}{"idx": 68317, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68318, "node_name": "bounds", "Dec": "a bounding rectangle to render to"}{"idx": 68319, "node_name": "hasfocus", "Dec": "is focused"}{"idx": 68321, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68322, "node_name": "bounds", "Dec": "a bounding rectangle to render to"}{"idx": 68323, "node_name": "hasfocus", "Dec": "is focused"}{"idx": 68327, "node_name": "comp", "Dec": "a component to check"}{"idx": 68341, "node_name": "e", "Dec": "the mouse-press event to be handled"}{"idx": 68343, "node_name": "e", "Dec": "the mouse-release event to be handled"}{"idx": 68369, "node_name": "combo", "Dec": "an instance of jcombobox"}{"idx": 68378, "node_name": "model", "Dec": "the combo box model to install listeners"}{"idx": 68397, "node_name": "model", "Dec": "the combo box model to install listeners"}{"idx": 68401, "node_name": "direction", "Dec": "the direction of scrolling"}{"idx": 68407, "node_name": "e", "Dec": "a mouse event"}{"idx": 68410, "node_name": "e", "Dec": "a mouse event"}{"idx": 68412, "node_name": "maxrowcount", "Dec": "the row count"}{"idx": 68414, "node_name": "px", "Dec": "starting x location"}{"idx": 68415, "node_name": "py", "Dec": "starting y location"}{"idx": 68416, "node_name": "pw", "Dec": "starting width"}{"idx": 68417, "node_name": "ph", "Dec": "starting height"}{"idx": 68419, "node_name": "anevent", "Dec": "a mouse event"}{"idx": 68420, "node_name": "shouldscroll", "Dec": "if true list should be scrolled ."}{"idx": 68437, "node_name": "c", "Dec": "a component"}{"idx": 68446, "node_name": "c", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 68448, "node_name": "c", "Dec": "a component"}{"idx": 68453, "node_name": "f", "Dec": "a component"}{"idx": 68454, "node_name": "newx", "Dec": "a new x coordinate"}{"idx": 68455, "node_name": "newy", "Dec": "a new y coordinate"}{"idx": 68456, "node_name": "newwidth", "Dec": "a new width"}{"idx": 68457, "node_name": "newheight", "Dec": "a new height"}{"idx": 68465, "node_name": "c", "Dec": "a component"}{"idx": 68487, "node_name": "filechooser", "Dec": "an instance of { jfilechooser }"}{"idx": 68493, "node_name": "oldfile", "Dec": "a file object representing the existing file"}{"idx": 68494, "node_name": "newfile", "Dec": "a file object representing the desired new file name"}{"idx": 68497, "node_name": "o", "Dec": "an element"}{"idx": 68499, "node_name": "o", "Dec": "an element"}{"idx": 68501, "node_name": "e", "Dec": "list data event"}{"idx": 68503, "node_name": "e", "Dec": "list data event"}{"idx": 68505, "node_name": "v", "Dec": "a list of files"}{"idx": 68507, "node_name": "a", "Dec": "a file"}{"idx": 68508, "node_name": "b", "Dec": "another file"}{"idx": 68510, "node_name": "listener", "Dec": "the property change listener to be added"}{"idx": 68512, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 68515, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 68516, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 68517, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 68521, "node_name": "c", "Dec": "the jtextpane component"}{"idx": 68524, "node_name": "c", "Dec": "the editor component"}{"idx": 68526, "node_name": "c", "Dec": "the editor component"}{"idx": 68528, "node_name": "tc", "Dec": "the text component for which this ui is installed"}{"idx": 68530, "node_name": "evt", "Dec": "the property change event"}{"idx": 68534, "node_name": "f", "Dec": "the file"}{"idx": 68542, "node_name": "f", "Dec": "the file"}{"idx": 68544, "node_name": "f", "Dec": "the file"}{"idx": 68545, "node_name": "i", "Dec": "the icon"}{"idx": 68547, "node_name": "f", "Dec": "the file"}{"idx": 68554, "node_name": "list", "Dec": "the lsit"}{"idx": 68556, "node_name": "e", "Dec": "the event to be processed"}{"idx": 68590, "node_name": "b", "Dec": "file chooser"}{"idx": 68592, "node_name": "c", "Dec": "the jfilechooser which needs a ui"}{"idx": 68594, "node_name": "c", "Dec": "the component"}{"idx": 68596, "node_name": "c", "Dec": "the component"}{"idx": 68598, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68600, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68602, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68604, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68606, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68608, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68610, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68612, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68614, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68616, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68620, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68624, "node_name": "filename", "Dec": "the file name"}{"idx": 68626, "node_name": "dirname", "Dec": "the file name"}{"idx": 68630, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68632, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68635, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68636, "node_name": "list", "Dec": "the list"}{"idx": 68638, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68641, "node_name": "b", "Dec": "iff a directory is currently selected ."}{"idx": 68644, "node_name": "f", "Dec": "the file object representing the directory that is currently selected"}{"idx": 68646, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68648, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68650, "node_name": "fc", "Dec": "the file chooser"}{"idx": 68666, "node_name": "c", "Dec": "the formatted text field"}{"idx": 68671, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68672, "node_name": "x", "Dec": "an x coordinate"}{"idx": 68673, "node_name": "y", "Dec": "an y coordinate"}{"idx": 68674, "node_name": "w", "Dec": "a width"}{"idx": 68675, "node_name": "h", "Dec": "a height"}{"idx": 68676, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68677, "node_name": "darkshadow", "Dec": "a color of dark shadow"}{"idx": 68678, "node_name": "highlight", "Dec": "a color highlighting"}{"idx": 68679, "node_name": "lighthighlight", "Dec": "a color of light highlighting"}{"idx": 68682, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68683, "node_name": "x", "Dec": "an x coordinate"}{"idx": 68684, "node_name": "y", "Dec": "an y coordinate"}{"idx": 68685, "node_name": "w", "Dec": "a width"}{"idx": 68686, "node_name": "h", "Dec": "a height"}{"idx": 68687, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68688, "node_name": "highlight", "Dec": "a color highlighting"}{"idx": 68691, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68692, "node_name": "x", "Dec": "an x coordinate"}{"idx": 68693, "node_name": "y", "Dec": "an y coordinate"}{"idx": 68694, "node_name": "w", "Dec": "a width"}{"idx": 68695, "node_name": "h", "Dec": "a height"}{"idx": 68696, "node_name": "ispressed", "Dec": "is component pressed"}{"idx": 68697, "node_name": "isdefault", "Dec": "is default drawing"}{"idx": 68698, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68699, "node_name": "darkshadow", "Dec": "a color of dark shadow"}{"idx": 68700, "node_name": "highlight", "Dec": "a color highlighting"}{"idx": 68701, "node_name": "lighthighlight", "Dec": "a color of light highlighting"}{"idx": 68703, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68704, "node_name": "x", "Dec": "an x coordinate"}{"idx": 68705, "node_name": "y", "Dec": "an y coordinate"}{"idx": 68706, "node_name": "w", "Dec": "a width"}{"idx": 68707, "node_name": "h", "Dec": "a height"}{"idx": 68708, "node_name": "shadow", "Dec": "a color of shadow"}{"idx": 68709, "node_name": "darkshadow", "Dec": "a color of dark shadow"}{"idx": 68710, "node_name": "highlight", "Dec": "a color highlighting"}{"idx": 68711, "node_name": "lighthighlight", "Dec": "a color of light highlighting"}{"idx": 68713, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68714, "node_name": "text", "Dec": "a text"}{"idx": 68715, "node_name": "underlinedchar", "Dec": "an underlined char"}{"idx": 68716, "node_name": "x", "Dec": "an x coordinate"}{"idx": 68717, "node_name": "y", "Dec": "an y coordinate"}{"idx": 68719, "node_name": "g", "Dec": "graphics to draw with"}{"idx": 68720, "node_name": "text", "Dec": "string to draw"}{"idx": 68721, "node_name": "underlinedindex", "Dec": "index of character in text to underline"}{"idx": 68722, "node_name": "x", "Dec": "x coordinate to draw at"}{"idx": 68723, "node_name": "y", "Dec": "y coordinate to draw at"}{"idx": 68725, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68726, "node_name": "x", "Dec": "an x coordinate"}{"idx": 68727, "node_name": "y", "Dec": "an y coordinate"}{"idx": 68728, "node_name": "width", "Dec": "a width of rectangle"}{"idx": 68729, "node_name": "height", "Dec": "a height of rectangle"}{"idx": 68731, "node_name": "b", "Dec": "an instance of abstractbutton"}{"idx": 68732, "node_name": "texticongap", "Dec": "a gap between text and icon"}{"idx": 68734, "node_name": "c", "Dec": "the component that will display the string , may be null"}{"idx": 68735, "node_name": "g", "Dec": "the graphics context , must not be null"}{"idx": 68736, "node_name": "string", "Dec": "the string to display , may be null"}{"idx": 68737, "node_name": "x", "Dec": "the x coordinate to draw the text at"}{"idx": 68738, "node_name": "y", "Dec": "the y coordinate to draw the text at"}{"idx": 68740, "node_name": "c", "Dec": "the component that will display the string , may be null"}{"idx": 68741, "node_name": "g", "Dec": "the graphics context , must not be null"}{"idx": 68742, "node_name": "string", "Dec": "the string to display , may be null"}{"idx": 68743, "node_name": "underlinedindex", "Dec": "index of a a char value ( unicode code unit ) in the string to underline"}{"idx": 68744, "node_name": "x", "Dec": "the x coordinate to draw the text at"}{"idx": 68745, "node_name": "y", "Dec": "the y coordinate to draw the text at"}{"idx": 68747, "node_name": "c", "Dec": "the component , may be null"}{"idx": 68748, "node_name": "fm", "Dec": "the fontmetrics used to measure the string width , must be obtained from the correct font and graphics . must not be null ."}{"idx": 68749, "node_name": "string", "Dec": "the string to clip , may be null"}{"idx": 68750, "node_name": "availtextwidth", "Dec": "the amount of space that the string can be drawn in"}{"idx": 68752, "node_name": "c", "Dec": "the component , may be null"}{"idx": 68753, "node_name": "fm", "Dec": "the fontmetrics used to measure the advance string width , must be obtained from the correct font and graphics . must not be null ."}{"idx": 68754, "node_name": "string", "Dec": "the string to get the advance width of , may be null"}{"idx": 68760, "node_name": "c", "Dec": "a component"}{"idx": 68761, "node_name": "html", "Dec": "an html string"}{"idx": 68763, "node_name": "view", "Dec": "the view to get the baseline for"}{"idx": 68764, "node_name": "w", "Dec": "the width to get the baseline for"}{"idx": 68765, "node_name": "h", "Dec": "the height to get the baseline for"}{"idx": 68767, "node_name": "s", "Dec": "a text"}{"idx": 68769, "node_name": "c", "Dec": "a component"}{"idx": 68770, "node_name": "text", "Dec": "a text"}{"idx": 68814, "node_name": "f", "Dec": "an instance of jinternalframe"}{"idx": 68826, "node_name": "systemmenu", "Dec": "an instance of jmenu"}{"idx": 68831, "node_name": "g", "Dec": "the graphics to use to render the background"}{"idx": 68833, "node_name": "text", "Dec": "a text"}{"idx": 68834, "node_name": "fm", "Dec": "an instance of fontmetrics"}{"idx": 68835, "node_name": "availtextwidth", "Dec": "an available text width"}{"idx": 68837, "node_name": "frame", "Dec": "an instance of jinternalframe"}{"idx": 68863, "node_name": "e", "Dec": "the event to be processed"}{"idx": 68871, "node_name": "evt", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 68885, "node_name": "b", "Dec": "the internal frame"}{"idx": 68887, "node_name": "b", "Dec": "a component"}{"idx": 68889, "node_name": "c", "Dec": "the component"}{"idx": 68891, "node_name": "c", "Dec": "the component"}{"idx": 68903, "node_name": "x", "Dec": "the component"}{"idx": 68905, "node_name": "x", "Dec": "the component"}{"idx": 68907, "node_name": "x", "Dec": "the component"}{"idx": 68909, "node_name": "currentpane", "Dec": "this jcomponent is the current pane being viewed that has mouse handlers installed"}{"idx": 68910, "node_name": "newpane", "Dec": "this jcomponent is the pane which will be added and have mouse handlers installed"}{"idx": 68912, "node_name": "c", "Dec": "the component"}{"idx": 68914, "node_name": "c", "Dec": "the component"}{"idx": 68916, "node_name": "w", "Dec": "the internal frame"}{"idx": 68918, "node_name": "w", "Dec": "the internal frame"}{"idx": 68920, "node_name": "w", "Dec": "the internal frame"}{"idx": 68922, "node_name": "w", "Dec": "the internal frame"}{"idx": 68924, "node_name": "w", "Dec": "the internal frame"}{"idx": 68928, "node_name": "b", "Dec": "new value for key binding registration"}{"idx": 68931, "node_name": "b", "Dec": "new value for key binding activity"}{"idx": 68936, "node_name": "c", "Dec": "the new north pane"}{"idx": 68939, "node_name": "c", "Dec": "the new south pane"}{"idx": 68942, "node_name": "c", "Dec": "the new west pane"}{"idx": 68945, "node_name": "c", "Dec": "the new east pane"}{"idx": 68949, "node_name": "f", "Dec": "the jinternalframe being viewed"}{"idx": 68951, "node_name": "f", "Dec": "the jinternalframe being viewed"}{"idx": 68953, "node_name": "f", "Dec": "the jinternalframe being viewed"}{"idx": 68955, "node_name": "f", "Dec": "the jinternalframe being viewed"}{"idx": 68957, "node_name": "f", "Dec": "the jinternalframe being viewed"}{"idx": 68959, "node_name": "f", "Dec": "the jinternalframe being viewed"}{"idx": 68961, "node_name": "f", "Dec": "the jinternalframe being viewed"}{"idx": 68968, "node_name": "label", "Dec": "an instance of jlabel"}{"idx": 68969, "node_name": "fontmetrics", "Dec": "a font metrics"}{"idx": 68970, "node_name": "text", "Dec": "a text"}{"idx": 68971, "node_name": "icon", "Dec": "an icon"}{"idx": 68972, "node_name": "viewr", "Dec": "a bounding rectangle to lay out label"}{"idx": 68973, "node_name": "iconr", "Dec": "a bounding rectangle to lay out icon"}{"idx": 68974, "node_name": "textr", "Dec": "a bounding rectangle to lay out text"}{"idx": 68976, "node_name": "l", "Dec": "an instance of jlabel"}{"idx": 68977, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68978, "node_name": "s", "Dec": "a text"}{"idx": 68979, "node_name": "textx", "Dec": "an x coordinate"}{"idx": 68980, "node_name": "texty", "Dec": "an y coordinate"}{"idx": 68982, "node_name": "l", "Dec": "an instance of jlabel"}{"idx": 68983, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 68984, "node_name": "s", "Dec": "a text"}{"idx": 68985, "node_name": "textx", "Dec": "an x coordinate"}{"idx": 68986, "node_name": "texty", "Dec": "an y coordinate"}{"idx": 68988, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 68989, "node_name": "c", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 68991, "node_name": "c", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 68993, "node_name": "c", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 68995, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 68996, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 68997, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 68999, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 69001, "node_name": "c", "Dec": "an instance of jlabel"}{"idx": 69003, "node_name": "c", "Dec": "an instance of jlabel"}{"idx": 69005, "node_name": "c", "Dec": "an instance of jlabel"}{"idx": 69007, "node_name": "l", "Dec": "an instance of jlabel"}{"idx": 69009, "node_name": "c", "Dec": "an instance of jlabel"}{"idx": 69011, "node_name": "c", "Dec": "an instance of jlabel"}{"idx": 69013, "node_name": "c", "Dec": "an instance of jlabel"}{"idx": 69015, "node_name": "c", "Dec": "an instance of jlabel"}{"idx": 69017, "node_name": "c", "Dec": "a component"}{"idx": 69042, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 69043, "node_name": "row", "Dec": "a row"}{"idx": 69044, "node_name": "rowbounds", "Dec": "a bounding rectangle to render to"}{"idx": 69045, "node_name": "cellrenderer", "Dec": "a list of listcellrenderer"}{"idx": 69046, "node_name": "datamodel", "Dec": "a list model"}{"idx": 69047, "node_name": "selmodel", "Dec": "a selection model"}{"idx": 69048, "node_name": "leadindex", "Dec": "a lead index"}{"idx": 69050, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 69051, "node_name": "c", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 69053, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 69054, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 69055, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 69057, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 69059, "node_name": "c", "Dec": "the jlist component ."}{"idx": 69069, "node_name": "c", "Dec": "the component where this ui delegate is being installed"}{"idx": 69071, "node_name": "c", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 69073, "node_name": "list", "Dec": "a component"}{"idx": 69075, "node_name": "list", "Dec": "the list"}{"idx": 69076, "node_name": "location", "Dec": "the coordinates of the point"}{"idx": 69078, "node_name": "row", "Dec": "a row"}{"idx": 69080, "node_name": "y0", "Dec": "a relative y coordinate"}{"idx": 69082, "node_name": "row", "Dec": "a row"}{"idx": 69102, "node_name": "table", "Dec": "the uidefaults instance the entries are added to"}{"idx": 69104, "node_name": "table", "Dec": "the uidefaults object the values are added to"}{"idx": 69106, "node_name": "table", "Dec": "the uidefaults object the values are added to"}{"idx": 69107, "node_name": "systemcolors", "Dec": "array of name-color pairs as described in initsystemcolordefaults ( uidefaults )"}{"idx": 69108, "node_name": "usenative", "Dec": "whether the color is obtained from systemcolor or color.decode"}{"idx": 69110, "node_name": "table", "Dec": "the uidefaults to add the values to"}{"idx": 69113, "node_name": "key", "Dec": "the key identifying the audio action"}{"idx": 69115, "node_name": "audioaction", "Dec": "an action that knows how to render the audio associated with the system or user activity that is occurring ; a value of null , is ignored"}{"idx": 69122, "node_name": "x", "Dec": "a component"}{"idx": 69150, "node_name": "c", "Dec": "a component"}{"idx": 69153, "node_name": "menuitem", "Dec": "a menu item"}{"idx": 69159, "node_name": "menuitem", "Dec": "a menu item"}{"idx": 69163, "node_name": "c", "Dec": "a component"}{"idx": 69165, "node_name": "c", "Dec": "a component"}{"idx": 69167, "node_name": "c", "Dec": "a component"}{"idx": 69169, "node_name": "c", "Dec": "a component"}{"idx": 69171, "node_name": "c", "Dec": "a component"}{"idx": 69172, "node_name": "checkicon", "Dec": "a check icon"}{"idx": 69173, "node_name": "arrowicon", "Dec": "an arrow icon"}{"idx": 69174, "node_name": "defaulttexticongap", "Dec": "a gap between a text and an icon"}{"idx": 69176, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 69177, "node_name": "c", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 69179, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 69180, "node_name": "c", "Dec": "a component"}{"idx": 69181, "node_name": "checkicon", "Dec": "a check icon"}{"idx": 69182, "node_name": "arrowicon", "Dec": "an arrow icon"}{"idx": 69183, "node_name": "background", "Dec": "a background color"}{"idx": 69184, "node_name": "foreground", "Dec": "a foreground color"}{"idx": 69185, "node_name": "defaulttexticongap", "Dec": "a gap between a text and an icon"}{"idx": 69187, "node_name": "g", "Dec": "the paint graphics"}{"idx": 69188, "node_name": "menuitem", "Dec": "menu item to be painted"}{"idx": 69189, "node_name": "bgcolor", "Dec": "selection background color"}{"idx": 69191, "node_name": "g", "Dec": "graphics context"}{"idx": 69192, "node_name": "menuitem", "Dec": "menu item to render"}{"idx": 69193, "node_name": "textrect", "Dec": "bounding rectangle for rendering the text"}{"idx": 69194, "node_name": "text", "Dec": "string to render"}{"idx": 69197, "node_name": "msm", "Dec": "a menuselectionmanager . the visual feedback and internal bookkeeping tasks are delegated to this menuselectionmanager . if null is passed as this argument , the menuselectionmanager.defaultmanager is used ."}{"idx": 69206, "node_name": "m", "Dec": "an instance of jmenu"}{"idx": 69207, "node_name": "ui", "Dec": "an instance of basicmenuui"}{"idx": 69213, "node_name": "x", "Dec": "a component"}{"idx": 69215, "node_name": "c", "Dec": "a component"}{"idx": 69217, "node_name": "c", "Dec": "a component"}{"idx": 69219, "node_name": "menu", "Dec": "an instance of jmenu ."}{"idx": 69223, "node_name": "e", "Dec": "the mouse event"}{"idx": 69225, "node_name": "e", "Dec": "the mouse event"}{"idx": 69227, "node_name": "e", "Dec": "the mouse event ; not used"}{"idx": 69229, "node_name": "e", "Dec": "the mouse event"}{"idx": 69233, "node_name": "buttonindex", "Dec": "an index of the button"}{"idx": 69239, "node_name": "syncallwidths", "Dec": "if the width of children should be synchronized"}{"idx": 69240, "node_name": "padding", "Dec": "the padding value"}{"idx": 69242, "node_name": "newvalue", "Dec": "if the width of children should be synchronized"}{"idx": 69245, "node_name": "newpadding", "Dec": "the new padding"}{"idx": 69248, "node_name": "newvalue", "Dec": "a new value"}{"idx": 69261, "node_name": "x", "Dec": "the component"}{"idx": 69263, "node_name": "c", "Dec": "the component where this ui delegate is being installed"}{"idx": 69265, "node_name": "c", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 69278, "node_name": "c", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 69281, "node_name": "container", "Dec": "a container"}{"idx": 69282, "node_name": "cons", "Dec": "an instance of gridbagconstraints"}{"idx": 69283, "node_name": "msg", "Dec": "a message"}{"idx": 69284, "node_name": "maxll", "Dec": "a maximum length"}{"idx": 69285, "node_name": "internallycreated", "Dec": "true if the component was internally created"}{"idx": 69288, "node_name": "top", "Dec": "a container"}{"idx": 69291, "node_name": "messagetype", "Dec": "a type of message"}{"idx": 69294, "node_name": "c", "Dec": "a container"}{"idx": 69295, "node_name": "d", "Dec": "a text"}{"idx": 69296, "node_name": "maxll", "Dec": "a maximum length of a text"}{"idx": 69300, "node_name": "container", "Dec": "a container"}{"idx": 69301, "node_name": "buttons", "Dec": "an array of buttons"}{"idx": 69302, "node_name": "initialindex", "Dec": "an initial index"}{"idx": 69304, "node_name": "buttonindex", "Dec": "an index of the button"}{"idx": 69310, "node_name": "op", "Dec": "a joptionpane"}{"idx": 69312, "node_name": "op", "Dec": "a joptionpane"}{"idx": 69316, "node_name": "e", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 69320, "node_name": "c", "Dec": "a component"}{"idx": 69322, "node_name": "p", "Dec": "an instance of jpanel"}{"idx": 69324, "node_name": "p", "Dec": "an instance of jpanel"}{"idx": 69326, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 69327, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 69328, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 69330, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 69334, "node_name": "c", "Dec": "the jpasswordfield"}{"idx": 69338, "node_name": "elem", "Dec": "the element"}{"idx": 69342, "node_name": "c", "Dec": "a component"}{"idx": 69347, "node_name": "x", "Dec": "a component"}{"idx": 69362, "node_name": "x", "Dec": "a component"}{"idx": 69370, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 69371, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 69372, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 69374, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 69381, "node_name": "celllen", "Dec": "a new cell length"}{"idx": 69384, "node_name": "cellspace", "Dec": "a new cell spacing"}{"idx": 69386, "node_name": "b", "Dec": "insets"}{"idx": 69387, "node_name": "width", "Dec": "a width"}{"idx": 69388, "node_name": "height", "Dec": "a height"}{"idx": 69390, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 69391, "node_name": "c", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 69393, "node_name": "r", "Dec": "the rectangle instance to be modified ; may be null"}{"idx": 69395, "node_name": "availablelength", "Dec": "the amount of space available for the bouncing box to move in ; for a horizontal progress bar , for example , this should be the inside width of the progress bar ( the component width minus borders )"}{"idx": 69396, "node_name": "otherdimension", "Dec": "for a horizontal progress bar , this should be the inside height of the progress bar ; this value might be used to constrain or determine the return value"}{"idx": 69398, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 69399, "node_name": "c", "Dec": "a component"}{"idx": 69401, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 69402, "node_name": "c", "Dec": "a component"}{"idx": 69404, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 69405, "node_name": "x", "Dec": "x location of bounding box"}{"idx": 69406, "node_name": "y", "Dec": "y location of bounding box"}{"idx": 69407, "node_name": "width", "Dec": "width of bounding box"}{"idx": 69408, "node_name": "height", "Dec": "height of bounding box"}{"idx": 69409, "node_name": "amountfull", "Dec": "size of the fill region , either width or height depending upon orientation ."}{"idx": 69410, "node_name": "b", "Dec": "insets of the progress bar ."}{"idx": 69412, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 69413, "node_name": "progressstring", "Dec": "a text"}{"idx": 69414, "node_name": "x", "Dec": "an x coordinate"}{"idx": 69415, "node_name": "y", "Dec": "an y coordinate"}{"idx": 69416, "node_name": "width", "Dec": "a width"}{"idx": 69417, "node_name": "height", "Dec": "a height"}{"idx": 69419, "node_name": "c", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 69423, "node_name": "newvalue", "Dec": "the new animation index ; no checking is performed on its value"}{"idx": 69428, "node_name": "b", "Dec": "a component"}{"idx": 69430, "node_name": "item", "Dec": "a menu item"}{"idx": 69431, "node_name": "e", "Dec": "a mouse event"}{"idx": 69432, "node_name": "path", "Dec": "an array of menuelement"}{"idx": 69433, "node_name": "manager", "Dec": "an instance of menuselectionmanager"}{"idx": 69438, "node_name": "b", "Dec": "a component"}{"idx": 69441, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 69442, "node_name": "c", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 69444, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 69445, "node_name": "textrect", "Dec": "bounds"}{"idx": 69446, "node_name": "size", "Dec": "the size of radio button"}{"idx": 69448, "node_name": "c", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 69452, "node_name": "c", "Dec": "a component"}{"idx": 69454, "node_name": "c", "Dec": "an instance of jrootpane"}{"idx": 69456, "node_name": "root", "Dec": "an instance of jrootpane"}{"idx": 69458, "node_name": "root", "Dec": "an instance of jrootpane"}{"idx": 69460, "node_name": "root", "Dec": "an instance of jrootpane"}{"idx": 69462, "node_name": "root", "Dec": "an instance of jrootpane"}{"idx": 69464, "node_name": "root", "Dec": "an instance of jrootpane"}{"idx": 69466, "node_name": "root", "Dec": "an instance of jrootpane"}{"idx": 69468, "node_name": "root", "Dec": "an instance of jrootpane"}{"idx": 69470, "node_name": "e", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 69503, "node_name": "c", "Dec": "the component"}{"idx": 69506, "node_name": "c", "Dec": "the component"}{"idx": 69508, "node_name": "c", "Dec": "the component"}{"idx": 69523, "node_name": "active", "Dec": "true indicates the thumb is currently active ."}{"idx": 69526, "node_name": "c", "Dec": "the jscrollbar that's delegating getPreferredSize(javax.swing.JComponent) to us"}{"idx": 69528, "node_name": "c", "Dec": "the jscrollbar that's delegating getMaximumSize(javax.swing.JComponent) to us ."}{"idx": 69530, "node_name": "orientation", "Dec": "the orientation"}{"idx": 69532, "node_name": "orientation", "Dec": "the orientation"}{"idx": 69534, "node_name": "g", "Dec": "the graphics"}{"idx": 69536, "node_name": "g", "Dec": "the graphics"}{"idx": 69538, "node_name": "g", "Dec": "the graphics"}{"idx": 69539, "node_name": "c", "Dec": "the component"}{"idx": 69540, "node_name": "trackbounds", "Dec": "the track bounds"}{"idx": 69542, "node_name": "g", "Dec": "the graphics"}{"idx": 69543, "node_name": "c", "Dec": "the component"}{"idx": 69544, "node_name": "thumbbounds", "Dec": "the thumb bounds"}{"idx": 69548, "node_name": "sb", "Dec": "the scroll bar"}{"idx": 69550, "node_name": "sb", "Dec": "the scroll bar"}{"idx": 69552, "node_name": "x", "Dec": "set the x location of the thumb"}{"idx": 69553, "node_name": "y", "Dec": "set the y location of the thumb"}{"idx": 69554, "node_name": "width", "Dec": "set the width of the thumb"}{"idx": 69555, "node_name": "height", "Dec": "set the height of the thumb"}{"idx": 69559, "node_name": "direction", "Dec": "the direction to scroll"}{"idx": 69561, "node_name": "direction", "Dec": "the direction to scroll"}{"idx": 69570, "node_name": "dir", "Dec": "direction"}{"idx": 69571, "node_name": "block", "Dec": "use block increment"}{"idx": 69573, "node_name": "direction", "Dec": "the new direction"}{"idx": 69575, "node_name": "block", "Dec": "whether or not to scroll by block"}{"idx": 69582, "node_name": "e", "Dec": "the event to be processed"}{"idx": 69584, "node_name": "e", "Dec": "the event to be processed"}{"idx": 69586, "node_name": "e", "Dec": "mouseevent further describing the event"}{"idx": 69597, "node_name": "x", "Dec": "a component ."}{"idx": 69599, "node_name": "c", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 69601, "node_name": "scrollpane", "Dec": "an instance of jscrollpane"}{"idx": 69603, "node_name": "c", "Dec": "an instance of jscrollpane"}{"idx": 69605, "node_name": "c", "Dec": "an instance of jscrollpane"}{"idx": 69607, "node_name": "c", "Dec": "an instance of jscrollpane"}{"idx": 69609, "node_name": "c", "Dec": "a component"}{"idx": 69611, "node_name": "c", "Dec": "an instance of jscrollpane"}{"idx": 69614, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 69615, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 69616, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 69618, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 69624, "node_name": "e", "Dec": "the property change event"}{"idx": 69626, "node_name": "e", "Dec": "the property change event"}{"idx": 69628, "node_name": "e", "Dec": "the property change event"}{"idx": 69630, "node_name": "e", "Dec": "the property change event"}{"idx": 69635, "node_name": "e", "Dec": "mousewheelevent to be handled"}{"idx": 69647, "node_name": "c", "Dec": "a component"}{"idx": 69649, "node_name": "s", "Dec": "an instance of jseparator"}{"idx": 69651, "node_name": "s", "Dec": "an instance of jseparator"}{"idx": 69653, "node_name": "s", "Dec": "an instance of jseparator"}{"idx": 69655, "node_name": "s", "Dec": "an instance of jseparator"}{"idx": 69658, "node_name": "slider", "Dec": "a slider"}{"idx": 69659, "node_name": "dir", "Dec": "the direction"}{"idx": 69660, "node_name": "block", "Dec": "block scrolling or not"}{"idx": 69691, "node_name": "b", "Dec": "a slider"}{"idx": 69697, "node_name": "b", "Dec": "a component"}{"idx": 69699, "node_name": "c", "Dec": "a component"}{"idx": 69701, "node_name": "c", "Dec": "a component"}{"idx": 69703, "node_name": "slider", "Dec": "a slider"}{"idx": 69705, "node_name": "slider", "Dec": "a slider"}{"idx": 69707, "node_name": "slider", "Dec": "a slider"}{"idx": 69709, "node_name": "slider", "Dec": "a slider"}{"idx": 69711, "node_name": "slider", "Dec": "a slider"}{"idx": 69713, "node_name": "slider", "Dec": "a slider"}{"idx": 69715, "node_name": "slider", "Dec": "a slider"}{"idx": 69717, "node_name": "slider", "Dec": "a slider"}{"idx": 69719, "node_name": "slider", "Dec": "a slider"}{"idx": 69721, "node_name": "slider", "Dec": "a slider"}{"idx": 69723, "node_name": "slider", "Dec": "a slider"}{"idx": 69725, "node_name": "slider", "Dec": "a slider"}{"idx": 69727, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 69728, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 69729, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 69731, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 69738, "node_name": "c", "Dec": "a component"}{"idx": 69740, "node_name": "c", "Dec": "a component"}{"idx": 69742, "node_name": "c", "Dec": "a component"}{"idx": 69768, "node_name": "g", "Dec": "the graphics"}{"idx": 69770, "node_name": "g", "Dec": "the graphics"}{"idx": 69772, "node_name": "g", "Dec": "the graphics"}{"idx": 69774, "node_name": "g", "Dec": "the graphics"}{"idx": 69775, "node_name": "tickbounds", "Dec": "the tick bounds"}{"idx": 69776, "node_name": "x", "Dec": "the x coordinate"}{"idx": 69778, "node_name": "g", "Dec": "the graphics"}{"idx": 69779, "node_name": "tickbounds", "Dec": "the tick bounds"}{"idx": 69780, "node_name": "x", "Dec": "the x coordinate"}{"idx": 69782, "node_name": "g", "Dec": "the graphics"}{"idx": 69783, "node_name": "tickbounds", "Dec": "the tick bounds"}{"idx": 69784, "node_name": "y", "Dec": "the y coordinate"}{"idx": 69786, "node_name": "g", "Dec": "the graphics"}{"idx": 69787, "node_name": "tickbounds", "Dec": "the tick bounds"}{"idx": 69788, "node_name": "y", "Dec": "the y coordinate"}{"idx": 69790, "node_name": "g", "Dec": "the graphics"}{"idx": 69792, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 69793, "node_name": "value", "Dec": "the value of the slider"}{"idx": 69794, "node_name": "label", "Dec": "the component label in the label table that needs to be painted"}{"idx": 69796, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 69797, "node_name": "value", "Dec": "the value of the slider"}{"idx": 69798, "node_name": "label", "Dec": "the component label in the label table that needs to be painted"}{"idx": 69800, "node_name": "g", "Dec": "the graphics"}{"idx": 69802, "node_name": "x", "Dec": "the x coordinate"}{"idx": 69803, "node_name": "y", "Dec": "the y coordinate"}{"idx": 69805, "node_name": "direction", "Dec": "the direction"}{"idx": 69807, "node_name": "direction", "Dec": "the direction"}{"idx": 69809, "node_name": "dir", "Dec": "the direction and number of blocks to scroll"}{"idx": 69811, "node_name": "value", "Dec": "the value"}{"idx": 69813, "node_name": "value", "Dec": "the value"}{"idx": 69815, "node_name": "value", "Dec": "the slider value to get the location for"}{"idx": 69816, "node_name": "tracky", "Dec": "y-origin of the track"}{"idx": 69817, "node_name": "trackheight", "Dec": "the height of the track"}{"idx": 69819, "node_name": "ypos", "Dec": "the location of the slider along the y axis"}{"idx": 69821, "node_name": "xpos", "Dec": "the location of the slider along the x axis"}{"idx": 69827, "node_name": "dir", "Dec": "the direction"}{"idx": 69828, "node_name": "block", "Dec": "whether or not to scroll by block"}{"idx": 69830, "node_name": "direction", "Dec": "the new direction"}{"idx": 69832, "node_name": "block", "Dec": "the new scroll by block value"}{"idx": 69839, "node_name": "e", "Dec": "the event to be processed"}{"idx": 69841, "node_name": "direction", "Dec": "the direction ."}{"idx": 69843, "node_name": "e", "Dec": "the event to be processed"}{"idx": 69848, "node_name": "c", "Dec": "the jspinner ( not used )"}{"idx": 69850, "node_name": "c", "Dec": "the jspinner"}{"idx": 69852, "node_name": "c", "Dec": "the jspinner ( not used )"}{"idx": 69858, "node_name": "c", "Dec": "component to install the listeners on"}{"idx": 69860, "node_name": "c", "Dec": "component to install the listeners on ."}{"idx": 69867, "node_name": "oldeditor", "Dec": "an old instance of editor"}{"idx": 69868, "node_name": "neweditor", "Dec": "a new instance of editor"}{"idx": 69871, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 69872, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 69873, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 69875, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 69880, "node_name": "e", "Dec": "a mouse event"}{"idx": 69883, "node_name": "e", "Dec": "a mouse event"}{"idx": 69885, "node_name": "x", "Dec": "an x coordinate"}{"idx": 69886, "node_name": "y", "Dec": "an y coordinate"}{"idx": 69888, "node_name": "newx", "Dec": "an x coordinate"}{"idx": 69889, "node_name": "newy", "Dec": "an y coordinate"}{"idx": 69891, "node_name": "e", "Dec": "a mouse event"}{"idx": 69893, "node_name": "x", "Dec": "an x coordinate"}{"idx": 69894, "node_name": "y", "Dec": "an y coordinate"}{"idx": 69896, "node_name": "e", "Dec": "a mouse event"}{"idx": 69910, "node_name": "ui", "Dec": "an instance of basicsplitpaneui"}{"idx": 69912, "node_name": "newui", "Dec": "the new splitpaneui"}{"idx": 69915, "node_name": "newsize", "Dec": "a new size"}{"idx": 69918, "node_name": "border", "Dec": "a new border"}{"idx": 69922, "node_name": "mouseover", "Dec": "whether or not the mouse is currently over the divider"}{"idx": 69927, "node_name": "e", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 69929, "node_name": "g", "Dec": "the specified graphics window"}{"idx": 69935, "node_name": "location", "Dec": "a location"}{"idx": 69937, "node_name": "location", "Dec": "a location"}{"idx": 69941, "node_name": "e", "Dec": "the event to be processed"}{"idx": 69943, "node_name": "e", "Dec": "the event to be processed"}{"idx": 69945, "node_name": "e", "Dec": "the event to be processed"}{"idx": 69947, "node_name": "e", "Dec": "the event to be processed"}{"idx": 69949, "node_name": "e", "Dec": "mouseevent describing the details of the enter event ."}{"idx": 69951, "node_name": "e", "Dec": "mouseevent describing the details of the exit event ."}{"idx": 69954, "node_name": "e", "Dec": "a mouse event"}{"idx": 69956, "node_name": "x", "Dec": "an x coordinate"}{"idx": 69957, "node_name": "y", "Dec": "an y coordinate"}{"idx": 69959, "node_name": "e", "Dec": "a mouse event"}{"idx": 69964, "node_name": "container", "Dec": "the container to be laid out"}{"idx": 69966, "node_name": "place", "Dec": "the string to be associated with the component"}{"idx": 69967, "node_name": "component", "Dec": "the component to be added"}{"idx": 69969, "node_name": "container", "Dec": "the component to be laid out"}{"idx": 69971, "node_name": "container", "Dec": "the container to be laid out"}{"idx": 69973, "node_name": "component", "Dec": "the component to be removed"}{"idx": 69975, "node_name": "comp", "Dec": "the component to be added"}{"idx": 69976, "node_name": "constraints", "Dec": "where / how the component is added to the layout ."}{"idx": 69978, "node_name": "target", "Dec": "the target container"}{"idx": 69980, "node_name": "target", "Dec": "the target container"}{"idx": 69982, "node_name": "c", "Dec": "the target container"}{"idx": 69984, "node_name": "target", "Dec": "the target container"}{"idx": 69987, "node_name": "index", "Dec": "the index of a component"}{"idx": 69989, "node_name": "newsizes", "Dec": "the new sizes"}{"idx": 69992, "node_name": "c", "Dec": "a component"}{"idx": 69994, "node_name": "c", "Dec": "a component"}{"idx": 69996, "node_name": "containersize", "Dec": "a container size"}{"idx": 69997, "node_name": "insets", "Dec": "an insets"}{"idx": 69999, "node_name": "insets", "Dec": "the insets"}{"idx": 70001, "node_name": "c", "Dec": "a component"}{"idx": 70002, "node_name": "size", "Dec": "a new width"}{"idx": 70003, "node_name": "location", "Dec": "a new x coordinate"}{"idx": 70004, "node_name": "insets", "Dec": "an insets"}{"idx": 70005, "node_name": "containersize", "Dec": "a container size"}{"idx": 70025, "node_name": "x", "Dec": "a component"}{"idx": 70027, "node_name": "c", "Dec": "the component where this ui delegate is being installed"}{"idx": 70032, "node_name": "c", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70040, "node_name": "orientation", "Dec": "the orientation"}{"idx": 70043, "node_name": "b", "Dec": "if true the continuous layout turns on"}{"idx": 70046, "node_name": "l", "Dec": "the drag location"}{"idx": 70050, "node_name": "newdivider", "Dec": "the new divider"}{"idx": 70052, "node_name": "newdivider", "Dec": "the new divider"}{"idx": 70053, "node_name": "remembersizes", "Dec": "if true the pane size is remembered"}{"idx": 70058, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 70060, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 70061, "node_name": "location", "Dec": "an integer specifying the location of the divider"}{"idx": 70063, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 70065, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 70067, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 70069, "node_name": "sp", "Dec": "a jsplitpane"}{"idx": 70070, "node_name": "g", "Dec": "the graphics context"}{"idx": 70072, "node_name": "jc", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70074, "node_name": "jc", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70076, "node_name": "jc", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70078, "node_name": "jc", "Dec": "a component"}{"idx": 70082, "node_name": "location", "Dec": "the location of divider"}{"idx": 70084, "node_name": "location", "Dec": "the location of divider"}{"idx": 70098, "node_name": "e", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 70127, "node_name": "c", "Dec": "a component"}{"idx": 70131, "node_name": "direction", "Dec": "one of the swingconstants constants : south , north , east or west"}{"idx": 70144, "node_name": "index", "Dec": "index of the tab the mouse is over ."}{"idx": 70147, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 70148, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 70149, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 70151, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 70153, "node_name": "tab", "Dec": "index of tab to get baseline for"}{"idx": 70156, "node_name": "g", "Dec": "the graphics object to use for rendering"}{"idx": 70157, "node_name": "tabplacement", "Dec": "the placement for the tabs within the jtabbedpane"}{"idx": 70158, "node_name": "selectedindex", "Dec": "the tab index of the selected component"}{"idx": 70160, "node_name": "g", "Dec": "the graphics"}{"idx": 70161, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70162, "node_name": "rects", "Dec": "rectangles"}{"idx": 70163, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 70164, "node_name": "iconrect", "Dec": "the icon rectangle"}{"idx": 70165, "node_name": "textrect", "Dec": "the text rectangle"}{"idx": 70167, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70168, "node_name": "metrics", "Dec": "the font metric"}{"idx": 70169, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 70170, "node_name": "title", "Dec": "the title"}{"idx": 70171, "node_name": "icon", "Dec": "the icon"}{"idx": 70172, "node_name": "tabrect", "Dec": "the tab rectangle"}{"idx": 70173, "node_name": "iconrect", "Dec": "the icon rectangle"}{"idx": 70174, "node_name": "textrect", "Dec": "the text rectangle"}{"idx": 70175, "node_name": "isselected", "Dec": "selection status"}{"idx": 70177, "node_name": "g", "Dec": "the graphics"}{"idx": 70178, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70179, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 70180, "node_name": "icon", "Dec": "the icon"}{"idx": 70181, "node_name": "iconrect", "Dec": "the icon rectangle"}{"idx": 70182, "node_name": "isselected", "Dec": "selection status"}{"idx": 70184, "node_name": "g", "Dec": "the graphics"}{"idx": 70185, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70186, "node_name": "font", "Dec": "the font"}{"idx": 70187, "node_name": "metrics", "Dec": "the font metrics"}{"idx": 70188, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 70189, "node_name": "title", "Dec": "the title"}{"idx": 70190, "node_name": "textrect", "Dec": "the text rectangle"}{"idx": 70191, "node_name": "isselected", "Dec": "selection status"}{"idx": 70193, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70194, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 70195, "node_name": "isselected", "Dec": "selection status"}{"idx": 70197, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70198, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 70199, "node_name": "isselected", "Dec": "selection status"}{"idx": 70201, "node_name": "g", "Dec": "the graphics"}{"idx": 70202, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70203, "node_name": "rects", "Dec": "rectangles"}{"idx": 70204, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 70205, "node_name": "iconrect", "Dec": "the icon rectangle"}{"idx": 70206, "node_name": "textrect", "Dec": "the text rectangle"}{"idx": 70207, "node_name": "isselected", "Dec": "selection status"}{"idx": 70209, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 70210, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70211, "node_name": "tabindex", "Dec": "the index of the tab with respect to other tabs"}{"idx": 70212, "node_name": "x", "Dec": "the x coordinate of tab"}{"idx": 70213, "node_name": "y", "Dec": "the y coordinate of tab"}{"idx": 70214, "node_name": "w", "Dec": "the width of the tab"}{"idx": 70215, "node_name": "h", "Dec": "the height of the tab"}{"idx": 70216, "node_name": "isselected", "Dec": "a boolean which determines whether or not the tab is selected"}{"idx": 70218, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 70219, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70220, "node_name": "tabindex", "Dec": "the index of the tab with respect to other tabs"}{"idx": 70221, "node_name": "x", "Dec": "the x coordinate of tab"}{"idx": 70222, "node_name": "y", "Dec": "the y coordinate of tab"}{"idx": 70223, "node_name": "w", "Dec": "the width of the tab"}{"idx": 70224, "node_name": "h", "Dec": "the height of the tab"}{"idx": 70225, "node_name": "isselected", "Dec": "a boolean which determines whether or not the tab is selected"}{"idx": 70227, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 70228, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70229, "node_name": "selectedindex", "Dec": "the tab index of the selected component"}{"idx": 70231, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 70232, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70233, "node_name": "selectedindex", "Dec": "the tab index of the selected component"}{"idx": 70234, "node_name": "x", "Dec": "the x coordinate of tab"}{"idx": 70235, "node_name": "y", "Dec": "the y coordinate of tab"}{"idx": 70236, "node_name": "w", "Dec": "the width of the tab"}{"idx": 70237, "node_name": "h", "Dec": "the height of the tab"}{"idx": 70239, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 70240, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70241, "node_name": "selectedindex", "Dec": "the tab index of the selected component"}{"idx": 70242, "node_name": "x", "Dec": "the x coordinate of tab"}{"idx": 70243, "node_name": "y", "Dec": "the y coordinate of tab"}{"idx": 70244, "node_name": "w", "Dec": "the width of the tab"}{"idx": 70245, "node_name": "h", "Dec": "the height of the tab"}{"idx": 70247, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 70248, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70249, "node_name": "selectedindex", "Dec": "the tab index of the selected component"}{"idx": 70250, "node_name": "x", "Dec": "the x coordinate of tab"}{"idx": 70251, "node_name": "y", "Dec": "the y coordinate of tab"}{"idx": 70252, "node_name": "w", "Dec": "the width of the tab"}{"idx": 70253, "node_name": "h", "Dec": "the height of the tab"}{"idx": 70255, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 70256, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70257, "node_name": "selectedindex", "Dec": "the tab index of the selected component"}{"idx": 70258, "node_name": "x", "Dec": "the x coordinate of tab"}{"idx": 70259, "node_name": "y", "Dec": "the y coordinate of tab"}{"idx": 70260, "node_name": "w", "Dec": "the width of the tab"}{"idx": 70261, "node_name": "h", "Dec": "the height of the tab"}{"idx": 70263, "node_name": "pane", "Dec": "the pane"}{"idx": 70264, "node_name": "i", "Dec": "the index"}{"idx": 70266, "node_name": "pane", "Dec": "the pane"}{"idx": 70267, "node_name": "x", "Dec": "the x coordinate"}{"idx": 70268, "node_name": "y", "Dec": "the y coordinate"}{"idx": 70270, "node_name": "tabindex", "Dec": "the index of the tab"}{"idx": 70271, "node_name": "dest", "Dec": "the rectangle where the result should be placed"}{"idx": 70274, "node_name": "component", "Dec": "the component"}{"idx": 70276, "node_name": "tabcount", "Dec": "the tab count"}{"idx": 70279, "node_name": "tabcount", "Dec": "the tab count"}{"idx": 70280, "node_name": "tabindex", "Dec": "the tab index ."}{"idx": 70282, "node_name": "tabcount", "Dec": "the tab count"}{"idx": 70283, "node_name": "run", "Dec": "the run"}{"idx": 70285, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70287, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70288, "node_name": "run", "Dec": "the tab run"}{"idx": 70290, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70291, "node_name": "run", "Dec": "the tab run"}{"idx": 70293, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70295, "node_name": "tabindex", "Dec": "the index of the tab"}{"idx": 70297, "node_name": "tabindex", "Dec": "the index of the tab"}{"idx": 70299, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70300, "node_name": "tabindex", "Dec": "the index of the tab with respect to other tabs"}{"idx": 70301, "node_name": "fontheight", "Dec": "the font height"}{"idx": 70303, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70305, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70306, "node_name": "tabindex", "Dec": "the index of the tab with respect to other tabs"}{"idx": 70307, "node_name": "metrics", "Dec": "the font metrics"}{"idx": 70309, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70311, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70312, "node_name": "horizruncount", "Dec": "horizontal run count"}{"idx": 70313, "node_name": "maxtabheight", "Dec": "maximum tab height"}{"idx": 70315, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70316, "node_name": "vertruncount", "Dec": "vertical run count"}{"idx": 70317, "node_name": "maxtabwidth", "Dec": "maximum tab width"}{"idx": 70319, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70320, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 70322, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70324, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70326, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70329, "node_name": "direction", "Dec": "the direction"}{"idx": 70331, "node_name": "current", "Dec": "the current tab"}{"idx": 70333, "node_name": "current", "Dec": "the current tab"}{"idx": 70335, "node_name": "current", "Dec": "the current tab"}{"idx": 70337, "node_name": "current", "Dec": "the current tab"}{"idx": 70339, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70340, "node_name": "tabindex", "Dec": "the index of the tab with respect to other tabs"}{"idx": 70341, "node_name": "offset", "Dec": "selection offset"}{"idx": 70344, "node_name": "tabplacement", "Dec": "the placement ( left , right , bottom , top ) of the tab"}{"idx": 70345, "node_name": "tabcount", "Dec": "the tab count"}{"idx": 70346, "node_name": "tabindex", "Dec": "the index of the tab with respect to other tabs"}{"idx": 70347, "node_name": "forward", "Dec": "forward or not"}{"idx": 70349, "node_name": "base", "Dec": "the base"}{"idx": 70351, "node_name": "base", "Dec": "the base"}{"idx": 70353, "node_name": "tabcount", "Dec": "the tab count"}{"idx": 70354, "node_name": "base", "Dec": "the base"}{"idx": 70356, "node_name": "tabcount", "Dec": "the tab count"}{"idx": 70357, "node_name": "base", "Dec": "the base"}{"idx": 70359, "node_name": "baserun", "Dec": "the base run"}{"idx": 70361, "node_name": "baserun", "Dec": "the base run"}{"idx": 70363, "node_name": "topinsets", "Dec": "the top insets"}{"idx": 70364, "node_name": "targetinsets", "Dec": "the target insets"}{"idx": 70365, "node_name": "targetplacement", "Dec": "the target placement"}{"idx": 70373, "node_name": "minimum", "Dec": "use the minimum size or preferred size"}{"idx": 70375, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70376, "node_name": "width", "Dec": "the width"}{"idx": 70378, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70379, "node_name": "height", "Dec": "the height"}{"idx": 70382, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70383, "node_name": "tabcount", "Dec": "the tab count"}{"idx": 70385, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70386, "node_name": "selectedrun", "Dec": "the selected run"}{"idx": 70388, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70389, "node_name": "tabcount", "Dec": "the tab count"}{"idx": 70390, "node_name": "start", "Dec": "the start"}{"idx": 70391, "node_name": "max", "Dec": "the max"}{"idx": 70393, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70394, "node_name": "start", "Dec": "the start"}{"idx": 70395, "node_name": "end", "Dec": "the end"}{"idx": 70396, "node_name": "max", "Dec": "the max"}{"idx": 70398, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 70399, "node_name": "selectedindex", "Dec": "the selected index"}{"idx": 70409, "node_name": "h", "Dec": "a component ."}{"idx": 70418, "node_name": "oldcolumn", "Dec": "the index of the previous rollover column or -1 if the mouse was not over a column"}{"idx": 70419, "node_name": "newcolumn", "Dec": "the index of the new rollover column or -1 if the mouse is not over a column"}{"idx": 70421, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 70422, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 70423, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 70425, "node_name": "c", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70427, "node_name": "c", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70429, "node_name": "c", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70445, "node_name": "c", "Dec": "a component"}{"idx": 70453, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 70454, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 70455, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 70457, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 70459, "node_name": "c", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70461, "node_name": "c", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70463, "node_name": "c", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70465, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 70466, "node_name": "c", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70474, "node_name": "ta", "Dec": "a text area"}{"idx": 70477, "node_name": "evt", "Dec": "the property change event"}{"idx": 70479, "node_name": "c", "Dec": "the editor component"}{"idx": 70481, "node_name": "c", "Dec": "the editor component"}{"idx": 70483, "node_name": "elem", "Dec": "the element"}{"idx": 70485, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 70486, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 70487, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 70489, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 70493, "node_name": "c", "Dec": "the text field"}{"idx": 70496, "node_name": "elem", "Dec": "the element"}{"idx": 70498, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 70499, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 70500, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 70502, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 70506, "node_name": "c", "Dec": "the jtextpane object"}{"idx": 70509, "node_name": "evt", "Dec": "the property change event"}{"idx": 70521, "node_name": "evt", "Dec": "the property change event"}{"idx": 70530, "node_name": "g", "Dec": "the graphics context"}{"idx": 70534, "node_name": "v", "Dec": "the root view"}{"idx": 70536, "node_name": "g", "Dec": "the graphics context"}{"idx": 70538, "node_name": "c", "Dec": "the editor component"}{"idx": 70540, "node_name": "c", "Dec": "the editor component"}{"idx": 70542, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 70543, "node_name": "c", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70545, "node_name": "g", "Dec": "the graphics context"}{"idx": 70546, "node_name": "c", "Dec": "the editor component"}{"idx": 70548, "node_name": "c", "Dec": "the editor component"}{"idx": 70550, "node_name": "c", "Dec": "the editor component"}{"idx": 70552, "node_name": "c", "Dec": "the editor component"}{"idx": 70555, "node_name": "tc", "Dec": "the text component for which this ui is installed"}{"idx": 70556, "node_name": "p0", "Dec": "the beginning of the range > = 0"}{"idx": 70557, "node_name": "p1", "Dec": "the end of the range > = p0"}{"idx": 70559, "node_name": "p0", "Dec": "the beginning of the range > = 0"}{"idx": 70560, "node_name": "p1", "Dec": "the end of the range > = p0"}{"idx": 70561, "node_name": "t", "Dec": "the text component for which this ui is installed"}{"idx": 70562, "node_name": "p0bias", "Dec": "the bias of the first character position , toward the previous character or the next character"}{"idx": 70563, "node_name": "p1bias", "Dec": "the bias of the second character position , toward the previous character or the next character"}{"idx": 70565, "node_name": "tc", "Dec": "the text component for which this ui is installed"}{"idx": 70567, "node_name": "tc", "Dec": "the text component for which this ui is installed"}{"idx": 70569, "node_name": "t", "Dec": "the text component for which this ui is installed"}{"idx": 70570, "node_name": "pt", "Dec": "a point specifying location for which to get a tooltip"}{"idx": 70572, "node_name": "elem", "Dec": "the element"}{"idx": 70574, "node_name": "elem", "Dec": "the element"}{"idx": 70575, "node_name": "p0", "Dec": "the starting offset > = 0"}{"idx": 70576, "node_name": "p1", "Dec": "the ending offset > = p0"}{"idx": 70580, "node_name": "b", "Dec": "a component"}{"idx": 70582, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 70583, "node_name": "b", "Dec": "an instance of button"}{"idx": 70584, "node_name": "iconrect", "Dec": "bounds of an icon"}{"idx": 70589, "node_name": "c", "Dec": "a component"}{"idx": 70595, "node_name": "t", "Dec": "an instance of jtoolbar"}{"idx": 70599, "node_name": "o", "Dec": "the new orientation"}{"idx": 70602, "node_name": "p", "Dec": "the new offset"}{"idx": 70604, "node_name": "c", "Dec": "the new border color"}{"idx": 70623, "node_name": "c", "Dec": "a component"}{"idx": 70633, "node_name": "direction", "Dec": "a direction"}{"idx": 70637, "node_name": "toolbar", "Dec": "an instance of jtoolbar"}{"idx": 70639, "node_name": "toolbar", "Dec": "an instance of jtoolbar"}{"idx": 70641, "node_name": "toolbar", "Dec": "an instance of jtoolbar"}{"idx": 70644, "node_name": "rollover", "Dec": "if true , rollover borders are installed . otherwise non-rollover borders are installed"}{"idx": 70646, "node_name": "c", "Dec": "container which holds the child components ( usually a jtoolbar )"}{"idx": 70648, "node_name": "c", "Dec": "container which holds the child components ( usually a jtoolbar )"}{"idx": 70650, "node_name": "c", "Dec": "container which holds the child components ( usually a jtoolbar )"}{"idx": 70652, "node_name": "c", "Dec": "component which will have a rollover border installed"}{"idx": 70654, "node_name": "b", "Dec": "the button to calculate the rollover border for"}{"idx": 70656, "node_name": "c", "Dec": "component which will have a non-rollover border installed"}{"idx": 70658, "node_name": "b", "Dec": "the button to calculate the non-rollover border for"}{"idx": 70660, "node_name": "c", "Dec": "component which will have a normal border re-installed"}{"idx": 70662, "node_name": "x", "Dec": "an x coordinate"}{"idx": 70663, "node_name": "y", "Dec": "an y coordinate"}{"idx": 70666, "node_name": "b", "Dec": "true if the jtoolbar is floating"}{"idx": 70667, "node_name": "p", "Dec": "the position"}{"idx": 70669, "node_name": "orientation", "Dec": "the new orientation"}{"idx": 70672, "node_name": "c", "Dec": "the new color"}{"idx": 70675, "node_name": "c", "Dec": "the new color"}{"idx": 70677, "node_name": "c", "Dec": "a component"}{"idx": 70678, "node_name": "p", "Dec": "a position"}{"idx": 70680, "node_name": "position", "Dec": "the relative to the jtollbar position"}{"idx": 70681, "node_name": "origin", "Dec": "the screen position of jtoolbar before dragging"}{"idx": 70683, "node_name": "position", "Dec": "the relative to the jtollbar position"}{"idx": 70684, "node_name": "origin", "Dec": "the screen position of jtoolbar before dragging"}{"idx": 70691, "node_name": "g", "Dec": "graphics to paint to ."}{"idx": 70701, "node_name": "c", "Dec": "a component"}{"idx": 70703, "node_name": "c", "Dec": "a component"}{"idx": 70705, "node_name": "c", "Dec": "a component"}{"idx": 70707, "node_name": "c", "Dec": "a component"}{"idx": 70709, "node_name": "c", "Dec": "a component"}{"idx": 70713, "node_name": "e", "Dec": "the changeevent containing the source of the event"}{"idx": 70715, "node_name": "e", "Dec": "the changeevent containing the source of the event"}{"idx": 70723, "node_name": "ae", "Dec": "the event to be processed"}{"idx": 70727, "node_name": "e", "Dec": "the event to be processed"}{"idx": 70729, "node_name": "e", "Dec": "the event to be processed"}{"idx": 70760, "node_name": "x", "Dec": "a component"}{"idx": 70763, "node_name": "color", "Dec": "the hash color"}{"idx": 70765, "node_name": "newamount", "Dec": "the left child indent"}{"idx": 70768, "node_name": "newamount", "Dec": "the right child indent"}{"idx": 70771, "node_name": "newg", "Dec": "the expanded icon"}{"idx": 70774, "node_name": "newg", "Dec": "the collapsed icon"}{"idx": 70777, "node_name": "largemodel", "Dec": "the new value"}{"idx": 70780, "node_name": "rowheight", "Dec": "the row height"}{"idx": 70783, "node_name": "tcr", "Dec": "the new value"}{"idx": 70786, "node_name": "model", "Dec": "the new value"}{"idx": 70789, "node_name": "newvalue", "Dec": "the new value"}{"idx": 70792, "node_name": "newvalue", "Dec": "the new value"}{"idx": 70795, "node_name": "editor", "Dec": "the new cell editor"}{"idx": 70798, "node_name": "newvalue", "Dec": "the new value"}{"idx": 70801, "node_name": "newlsm", "Dec": "new selection model"}{"idx": 70804, "node_name": "tree", "Dec": "the jtree for path"}{"idx": 70805, "node_name": "path", "Dec": "the treepath identifying the node"}{"idx": 70807, "node_name": "tree", "Dec": "a jtree object"}{"idx": 70808, "node_name": "row", "Dec": "an integer specifying a row"}{"idx": 70810, "node_name": "tree", "Dec": "the jtree for path"}{"idx": 70811, "node_name": "path", "Dec": "the treepath object to look in"}{"idx": 70813, "node_name": "tree", "Dec": "the jtree for which to count rows"}{"idx": 70815, "node_name": "tree", "Dec": "a jtree object"}{"idx": 70816, "node_name": "x", "Dec": "an integer giving the number of pixels horizontally from the left edge of the display area"}{"idx": 70817, "node_name": "y", "Dec": "an integer giving the number of pixels vertically from the top of the display area , minus any top margin"}{"idx": 70819, "node_name": "tree", "Dec": "a jtree object"}{"idx": 70821, "node_name": "tree", "Dec": "a jtree object"}{"idx": 70823, "node_name": "tree", "Dec": "a jtree object"}{"idx": 70825, "node_name": "tree", "Dec": "the jtree being edited"}{"idx": 70826, "node_name": "path", "Dec": "the treepath to be edited"}{"idx": 70828, "node_name": "tree", "Dec": "the jtree for which to return a path"}{"idx": 70857, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 70858, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 70859, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 70861, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 70863, "node_name": "loc", "Dec": "a droplocation"}{"idx": 70865, "node_name": "g", "Dec": "graphics object to draw on"}{"idx": 70867, "node_name": "loc", "Dec": "a droplocation"}{"idx": 70869, "node_name": "g", "Dec": "a graphics context"}{"idx": 70870, "node_name": "clipbounds", "Dec": "a clipped rectangle"}{"idx": 70871, "node_name": "insets", "Dec": "insets"}{"idx": 70872, "node_name": "bounds", "Dec": "a bounding rectangle"}{"idx": 70873, "node_name": "path", "Dec": "a tree path"}{"idx": 70874, "node_name": "row", "Dec": "a row"}{"idx": 70875, "node_name": "isexpanded", "Dec": "true if the path is expanded"}{"idx": 70876, "node_name": "hasbeenexpanded", "Dec": "true if the path has been expanded"}{"idx": 70877, "node_name": "isleaf", "Dec": "true if the path is leaf"}{"idx": 70879, "node_name": "g", "Dec": "a graphics context"}{"idx": 70880, "node_name": "clipbounds", "Dec": "a clipped rectangle"}{"idx": 70881, "node_name": "insets", "Dec": "insets"}{"idx": 70882, "node_name": "path", "Dec": "a tree path"}{"idx": 70884, "node_name": "g", "Dec": "a graphics context"}{"idx": 70885, "node_name": "clipbounds", "Dec": "a clipped rectangle"}{"idx": 70886, "node_name": "insets", "Dec": "insets"}{"idx": 70887, "node_name": "bounds", "Dec": "a bounding rectangle"}{"idx": 70888, "node_name": "path", "Dec": "a tree path"}{"idx": 70889, "node_name": "row", "Dec": "a row"}{"idx": 70890, "node_name": "isexpanded", "Dec": "true if the path is expanded"}{"idx": 70891, "node_name": "hasbeenexpanded", "Dec": "true if the path has been expanded"}{"idx": 70892, "node_name": "isleaf", "Dec": "true if the row is leaf"}{"idx": 70894, "node_name": "g", "Dec": "a graphics context"}{"idx": 70895, "node_name": "clipbounds", "Dec": "a clipped rectangle"}{"idx": 70896, "node_name": "insets", "Dec": "insets"}{"idx": 70897, "node_name": "bounds", "Dec": "a bounding rectangle"}{"idx": 70898, "node_name": "path", "Dec": "a tree path"}{"idx": 70899, "node_name": "row", "Dec": "a row"}{"idx": 70900, "node_name": "isexpanded", "Dec": "true if the path is expanded"}{"idx": 70901, "node_name": "hasbeenexpanded", "Dec": "true if the path has been expanded"}{"idx": 70902, "node_name": "isleaf", "Dec": "true if the path is leaf"}{"idx": 70904, "node_name": "path", "Dec": "a tree path"}{"idx": 70905, "node_name": "row", "Dec": "a row"}{"idx": 70906, "node_name": "isexpanded", "Dec": "true if the path is expanded"}{"idx": 70907, "node_name": "hasbeenexpanded", "Dec": "true if the path has been expanded"}{"idx": 70908, "node_name": "isleaf", "Dec": "true if the row is leaf"}{"idx": 70910, "node_name": "g", "Dec": "a graphics context"}{"idx": 70911, "node_name": "c", "Dec": "a component"}{"idx": 70912, "node_name": "x", "Dec": "an x coordinate"}{"idx": 70913, "node_name": "top", "Dec": "an y1 coordinate"}{"idx": 70914, "node_name": "bottom", "Dec": "an y2 coordinate"}{"idx": 70916, "node_name": "g", "Dec": "a graphics context"}{"idx": 70917, "node_name": "c", "Dec": "a component"}{"idx": 70918, "node_name": "y", "Dec": "an y coordinate"}{"idx": 70919, "node_name": "left", "Dec": "an x1 coordinate"}{"idx": 70920, "node_name": "right", "Dec": "an x2 coordinate"}{"idx": 70924, "node_name": "c", "Dec": "a component"}{"idx": 70925, "node_name": "graphics", "Dec": "a graphics context"}{"idx": 70926, "node_name": "icon", "Dec": "an icon"}{"idx": 70927, "node_name": "x", "Dec": "an x coordinate"}{"idx": 70928, "node_name": "y", "Dec": "an y coordinate"}{"idx": 70930, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 70931, "node_name": "y", "Dec": "an y coordinate"}{"idx": 70932, "node_name": "x1", "Dec": "an x1 coordinate"}{"idx": 70933, "node_name": "x2", "Dec": "an x2 coordinate"}{"idx": 70935, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 70936, "node_name": "x", "Dec": "an x coordinate"}{"idx": 70937, "node_name": "y1", "Dec": "an y1 coordinate"}{"idx": 70938, "node_name": "y2", "Dec": "an y2 coordinate"}{"idx": 70940, "node_name": "row", "Dec": "row to return x location for"}{"idx": 70941, "node_name": "depth", "Dec": "depth of the row"}{"idx": 70944, "node_name": "path", "Dec": "a tree path"}{"idx": 70946, "node_name": "parent", "Dec": "a tree path"}{"idx": 70954, "node_name": "path", "Dec": "a tree path"}{"idx": 70956, "node_name": "path", "Dec": "a tree path"}{"idx": 70958, "node_name": "beginrow", "Dec": "the begin row"}{"idx": 70959, "node_name": "endrow", "Dec": "the end row"}{"idx": 70961, "node_name": "newsize", "Dec": "the new preferred size"}{"idx": 70964, "node_name": "c", "Dec": "a component"}{"idx": 70966, "node_name": "c", "Dec": "a component"}{"idx": 70967, "node_name": "checkconsistency", "Dec": "if true consistency is checked"}{"idx": 70969, "node_name": "c", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70971, "node_name": "c", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 70974, "node_name": "messagestop", "Dec": "message to stop editing"}{"idx": 70975, "node_name": "messagecancel", "Dec": "message to cancel editing"}{"idx": 70976, "node_name": "messagetree", "Dec": "message to tree"}{"idx": 70978, "node_name": "path", "Dec": "a tree path"}{"idx": 70979, "node_name": "event", "Dec": "a mouse event"}{"idx": 70981, "node_name": "path", "Dec": "a tree path"}{"idx": 70982, "node_name": "mousex", "Dec": "an x coordinate"}{"idx": 70983, "node_name": "mousey", "Dec": "an y coordinate"}{"idx": 70985, "node_name": "path", "Dec": "a tree path"}{"idx": 70986, "node_name": "mousex", "Dec": "an x coordinate"}{"idx": 70987, "node_name": "mousey", "Dec": "an y coordinate"}{"idx": 70989, "node_name": "path", "Dec": "a tree path"}{"idx": 70990, "node_name": "mousex", "Dec": "an x coordinate"}{"idx": 70991, "node_name": "mousey", "Dec": "an y coordinate"}{"idx": 70993, "node_name": "path", "Dec": "a tree path"}{"idx": 70995, "node_name": "event", "Dec": "a mouse event"}{"idx": 70997, "node_name": "event", "Dec": "a mouse event"}{"idx": 70999, "node_name": "event", "Dec": "a mouse event"}{"idx": 71001, "node_name": "path", "Dec": "the selected path"}{"idx": 71002, "node_name": "event", "Dec": "the mouse event"}{"idx": 71004, "node_name": "row", "Dec": "a row"}{"idx": 71012, "node_name": "e", "Dec": "the event to be processed"}{"idx": 71016, "node_name": "e", "Dec": "the event to be processed"}{"idx": 71018, "node_name": "e", "Dec": "the event to be processed"}{"idx": 71023, "node_name": "source", "Dec": "a source component"}{"idx": 71024, "node_name": "destination", "Dec": "a destination component"}{"idx": 71025, "node_name": "event", "Dec": "a mouse event"}{"idx": 71030, "node_name": "value", "Dec": "the value to be represented"}{"idx": 71031, "node_name": "row", "Dec": "row being queried"}{"idx": 71032, "node_name": "depth", "Dec": "the depth of the row"}{"idx": 71033, "node_name": "expanded", "Dec": "true if row is expanded , false otherwise"}{"idx": 71034, "node_name": "size", "Dec": "a rectangle containing the size needed to represent value"}{"idx": 71036, "node_name": "row", "Dec": "a row"}{"idx": 71037, "node_name": "depth", "Dec": "a depth"}{"idx": 71044, "node_name": "name", "Dec": "the name of action"}{"idx": 71048, "node_name": "event", "Dec": "a treeexpansionevent containing a treepath object for the expanded node"}{"idx": 71050, "node_name": "event", "Dec": "a treeexpansionevent containing a treepath object for the collapsed node"}{"idx": 71054, "node_name": "direction", "Dec": "the direction"}{"idx": 71055, "node_name": "name", "Dec": "the name of action"}{"idx": 71059, "node_name": "direction", "Dec": "the direction"}{"idx": 71060, "node_name": "name", "Dec": "the name of action"}{"idx": 71066, "node_name": "direction", "Dec": "the direction"}{"idx": 71067, "node_name": "name", "Dec": "the name of action"}{"idx": 71071, "node_name": "event", "Dec": "the event that characterizes the change ."}{"idx": 71074, "node_name": "name", "Dec": "the name of action"}{"idx": 71078, "node_name": "direction", "Dec": "the direction"}{"idx": 71079, "node_name": "name", "Dec": "the name of action"}{"idx": 71083, "node_name": "c", "Dec": "a component"}{"idx": 71085, "node_name": "c", "Dec": "a component"}{"idx": 71087, "node_name": "c", "Dec": "a component"}{"idx": 71099, "node_name": "target", "Dec": "the container that needs to be laid out"}{"idx": 71100, "node_name": "axis", "Dec": "the axis to lay out components along . can be one of : boxlayout.x_axis , boxlayout.y_axis , boxlayout.line_axis or boxlayout.page_axis"}{"idx": 71103, "node_name": "beveltype", "Dec": "the type of bevel for the border"}{"idx": 71105, "node_name": "beveltype", "Dec": "the type of bevel for the border"}{"idx": 71106, "node_name": "highlight", "Dec": "the color to use for the bevel highlight"}{"idx": 71107, "node_name": "shadow", "Dec": "the color to use for the bevel shadow"}{"idx": 71109, "node_name": "beveltype", "Dec": "the type of bevel for the border"}{"idx": 71110, "node_name": "highlightouter", "Dec": "the color to use for the bevel outer highlight"}{"idx": 71111, "node_name": "highlightinner", "Dec": "the color to use for the bevel inner highlight"}{"idx": 71112, "node_name": "shadowouter", "Dec": "the color to use for the bevel outer shadow"}{"idx": 71113, "node_name": "shadowinner", "Dec": "the color to use for the bevel inner shadow"}{"idx": 71116, "node_name": "outsideborder", "Dec": "the outside border"}{"idx": 71117, "node_name": "insideborder", "Dec": "the inside border"}{"idx": 71120, "node_name": "top", "Dec": "the top inset of the border"}{"idx": 71121, "node_name": "left", "Dec": "the left inset of the border"}{"idx": 71122, "node_name": "bottom", "Dec": "the bottom inset of the border"}{"idx": 71123, "node_name": "right", "Dec": "the right inset of the border"}{"idx": 71125, "node_name": "insets", "Dec": "the insets of the border"}{"idx": 71129, "node_name": "etchtype", "Dec": "the type of etch to be drawn by the border"}{"idx": 71131, "node_name": "highlight", "Dec": "the color to use for the etched highlight"}{"idx": 71132, "node_name": "shadow", "Dec": "the color to use for the etched shadow"}{"idx": 71134, "node_name": "etchtype", "Dec": "the type of etch to be drawn by the border"}{"idx": 71135, "node_name": "highlight", "Dec": "the color to use for the etched highlight"}{"idx": 71136, "node_name": "shadow", "Dec": "the color to use for the etched shadow"}{"idx": 71139, "node_name": "delegate", "Dec": "the border being wrapped"}{"idx": 71146, "node_name": "color", "Dec": "the color for the border"}{"idx": 71148, "node_name": "color", "Dec": "the color for the border"}{"idx": 71149, "node_name": "thickness", "Dec": "the thickness of the border"}{"idx": 71152, "node_name": "top", "Dec": "the top inset of the border"}{"idx": 71153, "node_name": "left", "Dec": "the left inset of the border"}{"idx": 71154, "node_name": "bottom", "Dec": "the bottom inset of the border"}{"idx": 71155, "node_name": "right", "Dec": "the right inset of the border"}{"idx": 71156, "node_name": "color", "Dec": "the color rendered for the border"}{"idx": 71158, "node_name": "top", "Dec": "the top inset of the border"}{"idx": 71159, "node_name": "left", "Dec": "the left inset of the border"}{"idx": 71160, "node_name": "bottom", "Dec": "the bottom inset of the border"}{"idx": 71161, "node_name": "right", "Dec": "the right inset of the border"}{"idx": 71162, "node_name": "tileicon", "Dec": "the icon to be used for tiling the border"}{"idx": 71164, "node_name": "tileicon", "Dec": "the icon to be used for tiling the border"}{"idx": 71167, "node_name": "title", "Dec": "the title the border should display"}{"idx": 71169, "node_name": "border", "Dec": "the border"}{"idx": 71171, "node_name": "border", "Dec": "the border"}{"idx": 71172, "node_name": "title", "Dec": "the title the border should display"}{"idx": 71174, "node_name": "border", "Dec": "the border"}{"idx": 71175, "node_name": "title", "Dec": "the title the border should display"}{"idx": 71176, "node_name": "titlejustification", "Dec": "the justification fro the title"}{"idx": 71177, "node_name": "titleposition", "Dec": "the position for the title"}{"idx": 71179, "node_name": "border", "Dec": "the border"}{"idx": 71180, "node_name": "title", "Dec": "the title the border should display"}{"idx": 71181, "node_name": "titlejustification", "Dec": "the justification fro the title"}{"idx": 71182, "node_name": "titleposition", "Dec": "the position for the title"}{"idx": 71183, "node_name": "titlefont", "Dec": "the font for rendering the title"}{"idx": 71185, "node_name": "border", "Dec": "the border"}{"idx": 71186, "node_name": "title", "Dec": "the title the border should display"}{"idx": 71187, "node_name": "titlejustification", "Dec": "the justification fro the title"}{"idx": 71188, "node_name": "titleposition", "Dec": "the position for the title"}{"idx": 71189, "node_name": "titlefont", "Dec": "the font for rendering the title"}{"idx": 71190, "node_name": "titlecolor", "Dec": "the color of the title"}{"idx": 71197, "node_name": "r", "Dec": "the red component"}{"idx": 71198, "node_name": "g", "Dec": "the green component"}{"idx": 71199, "node_name": "b", "Dec": "the blue component"}{"idx": 71201, "node_name": "rgb", "Dec": "the combined rgb components"}{"idx": 71203, "node_name": "r", "Dec": "the red component"}{"idx": 71204, "node_name": "g", "Dec": "the green component"}{"idx": 71205, "node_name": "b", "Dec": "the blue component"}{"idx": 71207, "node_name": "c", "Dec": "the color"}{"idx": 71211, "node_name": "c", "Dec": "a jcombobox"}{"idx": 71212, "node_name": "v", "Dec": "a boolean determining the visibilty of the popup"}{"idx": 71214, "node_name": "c", "Dec": "a jcombobox"}{"idx": 71216, "node_name": "c", "Dec": "a jcombobox"}{"idx": 71219, "node_name": "component", "Dec": "a non-null jcomponent"}{"idx": 71223, "node_name": "c", "Dec": "the component where this ui delegate is being installed"}{"idx": 71225, "node_name": "c", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 71227, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 71228, "node_name": "c", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 71230, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 71231, "node_name": "c", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 71233, "node_name": "c", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 71235, "node_name": "c", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 71237, "node_name": "c", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 71239, "node_name": "c", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 71240, "node_name": "x", "Dec": "the x coordinate of the point"}{"idx": 71241, "node_name": "y", "Dec": "the y coordinate of the point"}{"idx": 71243, "node_name": "c", "Dec": "a jcomponent for which to create a ui delegate"}{"idx": 71245, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 71246, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 71247, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 71249, "node_name": "c", "Dec": "jcomponent to return baseline resize behavior for"}{"idx": 71251, "node_name": "c", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 71253, "node_name": "c", "Dec": "a jcomponent for which to get a child object"}{"idx": 71254, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 71261, "node_name": "width", "Dec": "the width"}{"idx": 71262, "node_name": "height", "Dec": "the height"}{"idx": 71266, "node_name": "fc", "Dec": "the file chooser"}{"idx": 71268, "node_name": "fc", "Dec": "the file chooser"}{"idx": 71270, "node_name": "fc", "Dec": "the file chooser"}{"idx": 71272, "node_name": "fc", "Dec": "the file chooser"}{"idx": 71274, "node_name": "fc", "Dec": "the file chooser"}{"idx": 71276, "node_name": "fc", "Dec": "the file chooser"}{"idx": 71277, "node_name": "f", "Dec": "the file"}{"idx": 71279, "node_name": "fc", "Dec": "the jfilechooser whose default button is requested"}{"idx": 71282, "node_name": "name", "Dec": "the font name"}{"idx": 71283, "node_name": "style", "Dec": "the style constant for the font"}{"idx": 71284, "node_name": "size", "Dec": "the point size of the font"}{"idx": 71286, "node_name": "font", "Dec": "the font"}{"idx": 71289, "node_name": "delegate", "Dec": "the icon being wrapped"}{"idx": 71294, "node_name": "top", "Dec": "the inset from the top"}{"idx": 71295, "node_name": "left", "Dec": "the inset from the left"}{"idx": 71296, "node_name": "bottom", "Dec": "the inset from the bottom"}{"idx": 71297, "node_name": "right", "Dec": "the inset from the right"}{"idx": 71305, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 71306, "node_name": "c", "Dec": "the component being painted"}{"idx": 71308, "node_name": "e", "Dec": "the event to be dispatched"}{"idx": 71309, "node_name": "l", "Dec": "the layer this layerui is set to"}{"idx": 71311, "node_name": "e", "Dec": "the componentevent to be processed"}{"idx": 71312, "node_name": "l", "Dec": "the layer this layerui instance is set to"}{"idx": 71314, "node_name": "e", "Dec": "the focusevent to be processed"}{"idx": 71315, "node_name": "l", "Dec": "the layer this layerui instance is set to"}{"idx": 71317, "node_name": "e", "Dec": "the keyevent to be processed"}{"idx": 71318, "node_name": "l", "Dec": "the layer this layerui instance is set to"}{"idx": 71320, "node_name": "e", "Dec": "the mouseevent to be processed"}{"idx": 71321, "node_name": "l", "Dec": "the layer this layerui instance is set to"}{"idx": 71323, "node_name": "e", "Dec": "the mouseevent to be processed"}{"idx": 71324, "node_name": "l", "Dec": "the layer this layerui instance is set to"}{"idx": 71326, "node_name": "e", "Dec": "the mouseevent to be processed"}{"idx": 71327, "node_name": "l", "Dec": "the layer this layerui instance is set to"}{"idx": 71329, "node_name": "e", "Dec": "the inputmethodevent to be processed"}{"idx": 71330, "node_name": "l", "Dec": "the layer this layerui instance is set to"}{"idx": 71332, "node_name": "e", "Dec": "the hierarchyevent to be processed"}{"idx": 71333, "node_name": "l", "Dec": "the layer this layerui instance is set to"}{"idx": 71335, "node_name": "e", "Dec": "the hierarchyevent to be processed"}{"idx": 71336, "node_name": "l", "Dec": "the layer this layerui instance is set to"}{"idx": 71338, "node_name": "l", "Dec": "the jlayer which ui is updated"}{"idx": 71340, "node_name": "c", "Dec": "the jlayer component where this ui delegate is being installed"}{"idx": 71342, "node_name": "c", "Dec": "the component from which this ui delegate is being removed ."}{"idx": 71344, "node_name": "listener", "Dec": "the property change listener to be added"}{"idx": 71346, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 71349, "node_name": "propertyname", "Dec": "one of the property names listed above"}{"idx": 71350, "node_name": "listener", "Dec": "the property change listener to be added"}{"idx": 71352, "node_name": "propertyname", "Dec": "a valid property name"}{"idx": 71353, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 71355, "node_name": "propertyname", "Dec": "the name of the property being listened to"}{"idx": 71357, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 71358, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 71359, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 71361, "node_name": "evt", "Dec": "the propertychangeevent generated by this layerui"}{"idx": 71362, "node_name": "l", "Dec": "the jlayer this layerui is set to"}{"idx": 71364, "node_name": "c", "Dec": "jlayer to return baseline resize behavior for"}{"idx": 71365, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 71366, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 71368, "node_name": "c", "Dec": "jlayer to return baseline resize behavior for"}{"idx": 71370, "node_name": "l", "Dec": "the jlayer component where this ui delegate is being installed"}{"idx": 71372, "node_name": "c", "Dec": "jlayer to return preferred size for"}{"idx": 71374, "node_name": "c", "Dec": "jlayer to return preferred size for"}{"idx": 71376, "node_name": "c", "Dec": "jlayer to return preferred size for"}{"idx": 71378, "node_name": "x", "Dec": "the x value of the region to be painted"}{"idx": 71379, "node_name": "y", "Dec": "the y value of the region to be painted"}{"idx": 71380, "node_name": "width", "Dec": "the width of the region to be painted"}{"idx": 71381, "node_name": "height", "Dec": "the height of the region to be painted"}{"idx": 71382, "node_name": "l", "Dec": "a jlayer component"}{"idx": 71384, "node_name": "img", "Dec": "the image being observed"}{"idx": 71385, "node_name": "infoflags", "Dec": "see imageupdate for information"}{"idx": 71386, "node_name": "x", "Dec": "the x coordinate"}{"idx": 71387, "node_name": "y", "Dec": "the y coordinate"}{"idx": 71388, "node_name": "w", "Dec": "the width"}{"idx": 71389, "node_name": "h", "Dec": "the height"}{"idx": 71390, "node_name": "l", "Dec": "a jlayer component"}{"idx": 71394, "node_name": "list", "Dec": "the list"}{"idx": 71395, "node_name": "location", "Dec": "the coordinates of the point"}{"idx": 71397, "node_name": "list", "Dec": "the list"}{"idx": 71398, "node_name": "index", "Dec": "the cell index"}{"idx": 71400, "node_name": "list", "Dec": "the list"}{"idx": 71401, "node_name": "index1", "Dec": "the first index in the range"}{"idx": 71402, "node_name": "index2", "Dec": "the second index in the range"}{"idx": 71467, "node_name": "c", "Dec": "a component"}{"idx": 71472, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 71473, "node_name": "c", "Dec": "jcomponent painting on"}{"idx": 71478, "node_name": "c", "Dec": "a component"}{"idx": 71479, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 71480, "node_name": "x", "Dec": "an x coordinate"}{"idx": 71481, "node_name": "y", "Dec": "an y coordinate"}{"idx": 71485, "node_name": "b", "Dec": "a component"}{"idx": 71493, "node_name": "cb", "Dec": "an instance of jcombobox"}{"idx": 71494, "node_name": "i", "Dec": "an icon"}{"idx": 71495, "node_name": "pane", "Dec": "an instance of cellrendererpane"}{"idx": 71496, "node_name": "list", "Dec": "an instance of jlist"}{"idx": 71498, "node_name": "cb", "Dec": "an instance of jcombobox"}{"idx": 71499, "node_name": "i", "Dec": "an icon"}{"idx": 71500, "node_name": "onlyicon", "Dec": "if true only icon is painted"}{"idx": 71501, "node_name": "pane", "Dec": "an instance of cellrendererpane"}{"idx": 71502, "node_name": "list", "Dec": "an instance of jlist"}{"idx": 71505, "node_name": "cb", "Dec": "the jcombobox"}{"idx": 71508, "node_name": "i", "Dec": "the icon of the jcombobox"}{"idx": 71511, "node_name": "isicononly", "Dec": "if true then only icon is painted"}{"idx": 71520, "node_name": "c", "Dec": "a component to get properties useful for painting"}{"idx": 71521, "node_name": "g", "Dec": "the graphics context"}{"idx": 71522, "node_name": "x", "Dec": "the x coordinate of the icon's top-left corner"}{"idx": 71523, "node_name": "y", "Dec": "the y coordinate of the icon's top-left corner"}{"idx": 71529, "node_name": "c", "Dec": "a component"}{"idx": 71531, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 71532, "node_name": "bounds", "Dec": "region to paint current value to"}{"idx": 71533, "node_name": "hasfocus", "Dec": "whether or not the jcombobox has focus"}{"idx": 71535, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 71536, "node_name": "bounds", "Dec": "region to paint background to"}{"idx": 71537, "node_name": "hasfocus", "Dec": "whether or not the jcombobox has focus"}{"idx": 71539, "node_name": "c", "Dec": "jcomponent baseline is being requested for"}{"idx": 71540, "node_name": "width", "Dec": "the width to get the baseline for"}{"idx": 71541, "node_name": "height", "Dec": "the height to get the baseline for"}{"idx": 71543, "node_name": "parent", "Dec": "a container"}{"idx": 71544, "node_name": "manager", "Dec": "an instance of metalcomboboxlayoutmanager"}{"idx": 71548, "node_name": "parent", "Dec": "a container"}{"idx": 71555, "node_name": "c", "Dec": "a component"}{"idx": 71561, "node_name": "i", "Dec": "an index"}{"idx": 71570, "node_name": "filechooser", "Dec": "a jfilechooser"}{"idx": 71572, "node_name": "c", "Dec": "a component"}{"idx": 71578, "node_name": "fc", "Dec": "a jfilechooser"}{"idx": 71580, "node_name": "fc", "Dec": "a jfilechooser"}{"idx": 71582, "node_name": "fc", "Dec": "a jfilechooser"}{"idx": 71584, "node_name": "c", "Dec": "a jfilechooser"}{"idx": 71586, "node_name": "c", "Dec": "a jfilechooser"}{"idx": 71588, "node_name": "c", "Dec": "a jfilechooser"}{"idx": 71592, "node_name": "directoryselected", "Dec": "if a directory is currently selected ."}{"idx": 71595, "node_name": "dirname", "Dec": "the directory name"}{"idx": 71597, "node_name": "fc", "Dec": "a jfilechooser"}{"idx": 71601, "node_name": "e", "Dec": "an instance of listselectionevent"}{"idx": 71621, "node_name": "size", "Dec": "the size of the icon"}{"idx": 71623, "node_name": "size", "Dec": "the size of the icon"}{"idx": 71626, "node_name": "size", "Dec": "the size of the icon"}{"idx": 71628, "node_name": "size", "Dec": "the size of the icon"}{"idx": 71637, "node_name": "iscollapsed", "Dec": "if true the icon is collapsed"}{"idx": 71650, "node_name": "iscollapsed", "Dec": "if true the icon is collapsed"}{"idx": 71652, "node_name": "c", "Dec": "a component"}{"idx": 71653, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 71654, "node_name": "x", "Dec": "an x coordinate"}{"idx": 71655, "node_name": "y", "Dec": "an y coordinate"}{"idx": 71665, "node_name": "f", "Dec": "an instance of jinternalframe"}{"idx": 71668, "node_name": "systemmenu", "Dec": "an instance of jmenu"}{"idx": 71672, "node_name": "g", "Dec": "a instance of graphics"}{"idx": 71674, "node_name": "b", "Dec": "if true , sets palette icons"}{"idx": 71678, "node_name": "b", "Dec": "an internal frame"}{"idx": 71680, "node_name": "c", "Dec": "a component"}{"idx": 71682, "node_name": "ispalette", "Dec": "if true , sets palette border and title"}{"idx": 71684, "node_name": "w", "Dec": "the jinternalframe"}{"idx": 71689, "node_name": "c", "Dec": "a component"}{"idx": 71691, "node_name": "l", "Dec": "an instance of jlabel"}{"idx": 71692, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 71693, "node_name": "s", "Dec": "a text"}{"idx": 71694, "node_name": "textx", "Dec": "an x coordinate"}{"idx": 71695, "node_name": "texty", "Dec": "an y coordinate"}{"idx": 71705, "node_name": "table", "Dec": "the uidefaults instance the entries are added to"}{"idx": 71707, "node_name": "table", "Dec": "the uidefaults object the values are added to"}{"idx": 71709, "node_name": "table", "Dec": "the uidefaults to add the values to"}{"idx": 71713, "node_name": "component", "Dec": "the component the error occurred in , may be null indicating the error condition is not directly associated with a component"}{"idx": 71715, "node_name": "theme", "Dec": "the theme to use"}{"idx": 71718, "node_name": "component", "Dec": "jcomponent that will display the icon , may be null"}{"idx": 71719, "node_name": "icon", "Dec": "icon to generate disable icon from ."}{"idx": 71721, "node_name": "component", "Dec": "jcomponent that will display the icon , may be null"}{"idx": 71722, "node_name": "icon", "Dec": "icon to generate disabled and selected icon from ."}{"idx": 71769, "node_name": "x", "Dec": "jcomponent to create the componentui implementation for"}{"idx": 71771, "node_name": "c", "Dec": "the component where this ui delegate is being installed"}{"idx": 71773, "node_name": "c", "Dec": "the component where this ui delegate is being installed"}{"idx": 71775, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 71776, "node_name": "c", "Dec": "jcomponent painting on"}{"idx": 71780, "node_name": "c", "Dec": "a component"}{"idx": 71784, "node_name": "c", "Dec": "a component"}{"idx": 71786, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 71787, "node_name": "c", "Dec": "a component"}{"idx": 71789, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 71790, "node_name": "c", "Dec": "a component"}{"idx": 71797, "node_name": "c", "Dec": "a component"}{"idx": 71804, "node_name": "c", "Dec": "the jrootpane the rootpaneui will be created for"}{"idx": 71806, "node_name": "c", "Dec": "the jrootpane to install state onto"}{"idx": 71808, "node_name": "c", "Dec": "the jrootpane to uninstall state from"}{"idx": 71810, "node_name": "e", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 71819, "node_name": "c", "Dec": "a component"}{"idx": 71821, "node_name": "orientation", "Dec": "the orientation"}{"idx": 71823, "node_name": "orientation", "Dec": "the orientation"}{"idx": 71825, "node_name": "x", "Dec": "set the x location of the thumb"}{"idx": 71826, "node_name": "y", "Dec": "set the y location of the thumb"}{"idx": 71827, "node_name": "width", "Dec": "set the width of the thumb"}{"idx": 71828, "node_name": "height", "Dec": "set the height of the thumb"}{"idx": 71831, "node_name": "direction", "Dec": "the direction"}{"idx": 71832, "node_name": "width", "Dec": "the width"}{"idx": 71833, "node_name": "freestanding", "Dec": "the free standing value"}{"idx": 71835, "node_name": "freestanding", "Dec": "the free standing value"}{"idx": 71840, "node_name": "x", "Dec": "a component"}{"idx": 71845, "node_name": "c", "Dec": "a component"}{"idx": 71859, "node_name": "c", "Dec": "a component"}{"idx": 71861, "node_name": "slider", "Dec": "a jslider"}{"idx": 71871, "node_name": "x", "Dec": "a component"}{"idx": 71880, "node_name": "x", "Dec": "a component"}{"idx": 71882, "node_name": "tabindex", "Dec": "a tab index"}{"idx": 71883, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 71884, "node_name": "x", "Dec": "an x coordinate"}{"idx": 71885, "node_name": "y", "Dec": "an y coordinate"}{"idx": 71886, "node_name": "w", "Dec": "a width"}{"idx": 71887, "node_name": "h", "Dec": "a height"}{"idx": 71888, "node_name": "btm", "Dec": "bottom"}{"idx": 71889, "node_name": "rght", "Dec": "right"}{"idx": 71890, "node_name": "isselected", "Dec": "a selection"}{"idx": 71892, "node_name": "currentrun", "Dec": "the current run"}{"idx": 71893, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 71894, "node_name": "x", "Dec": "an x coordinate"}{"idx": 71895, "node_name": "y", "Dec": "an y coordinate"}{"idx": 71897, "node_name": "currentrun", "Dec": "the current run"}{"idx": 71898, "node_name": "x", "Dec": "an x coordinate"}{"idx": 71899, "node_name": "y", "Dec": "an y coordinate"}{"idx": 71901, "node_name": "tabindex", "Dec": "a tab index"}{"idx": 71902, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 71903, "node_name": "x", "Dec": "an x coordinate"}{"idx": 71904, "node_name": "y", "Dec": "an y coordinate"}{"idx": 71905, "node_name": "w", "Dec": "a width"}{"idx": 71906, "node_name": "h", "Dec": "a height"}{"idx": 71907, "node_name": "btm", "Dec": "bottom"}{"idx": 71908, "node_name": "rght", "Dec": "right"}{"idx": 71909, "node_name": "isselected", "Dec": "a selection"}{"idx": 71911, "node_name": "tabindex", "Dec": "a tab index"}{"idx": 71912, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 71913, "node_name": "x", "Dec": "an x coordinate"}{"idx": 71914, "node_name": "y", "Dec": "an y coordinate"}{"idx": 71915, "node_name": "w", "Dec": "a width"}{"idx": 71916, "node_name": "h", "Dec": "a height"}{"idx": 71917, "node_name": "btm", "Dec": "bottom"}{"idx": 71918, "node_name": "rght", "Dec": "right"}{"idx": 71919, "node_name": "isselected", "Dec": "a selection"}{"idx": 71921, "node_name": "tabindex", "Dec": "a tab index"}{"idx": 71922, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 71923, "node_name": "x", "Dec": "an x coordinate"}{"idx": 71924, "node_name": "y", "Dec": "an y coordinate"}{"idx": 71925, "node_name": "w", "Dec": "a width"}{"idx": 71926, "node_name": "h", "Dec": "a height"}{"idx": 71927, "node_name": "btm", "Dec": "bottom"}{"idx": 71928, "node_name": "rght", "Dec": "right"}{"idx": 71929, "node_name": "isselected", "Dec": "a selection"}{"idx": 71931, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 71932, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 71933, "node_name": "isselected", "Dec": "selection status"}{"idx": 71935, "node_name": "tabplacement", "Dec": "the tab placement"}{"idx": 71936, "node_name": "tabindex", "Dec": "the tab index"}{"idx": 71937, "node_name": "isselected", "Dec": "selection status"}{"idx": 71941, "node_name": "tabplacement", "Dec": "a tab placement"}{"idx": 71942, "node_name": "selectedrun", "Dec": "a selected run"}{"idx": 71948, "node_name": "c", "Dec": "a component"}{"idx": 71950, "node_name": "evt", "Dec": "the property change event"}{"idx": 72003, "node_name": "table", "Dec": "the uidefaults to add the values to"}{"idx": 72010, "node_name": "b", "Dec": "a component"}{"idx": 72015, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 72016, "node_name": "c", "Dec": "jcomponent painting on"}{"idx": 72018, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 72019, "node_name": "b", "Dec": "button to render for"}{"idx": 72020, "node_name": "iconrect", "Dec": "space to render in"}{"idx": 72026, "node_name": "c", "Dec": "a component"}{"idx": 72030, "node_name": "p", "Dec": "the offset"}{"idx": 72032, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 72033, "node_name": "c", "Dec": "jcomponent painting on"}{"idx": 72038, "node_name": "t", "Dec": "an instance of jtoolbar"}{"idx": 72045, "node_name": "c", "Dec": "a component"}{"idx": 72051, "node_name": "x", "Dec": "a component"}{"idx": 72053, "node_name": "linestyleflag", "Dec": "a flag"}{"idx": 72055, "node_name": "row", "Dec": "a row"}{"idx": 72056, "node_name": "rowlevel", "Dec": "a row level"}{"idx": 72057, "node_name": "mousex", "Dec": "x coordinate"}{"idx": 72058, "node_name": "mousey", "Dec": "y coordinate"}{"idx": 72060, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 72061, "node_name": "c", "Dec": "a component"}{"idx": 72065, "node_name": "table", "Dec": "the defaults table , non-null"}{"idx": 72083, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72084, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72085, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72087, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72088, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72090, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72092, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72094, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72096, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72097, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72099, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72101, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72103, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72105, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72107, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72108, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72114, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72115, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72116, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72118, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72119, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72121, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72123, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72125, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72127, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72128, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72130, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72132, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72134, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72136, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72138, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72139, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72145, "node_name": "a", "Dec": "a jcombobox"}{"idx": 72147, "node_name": "a", "Dec": "a jcombobox"}{"idx": 72148, "node_name": "b", "Dec": "a boolean determining the visibilty of the popup"}{"idx": 72150, "node_name": "a", "Dec": "a jcombobox"}{"idx": 72152, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72153, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72154, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72156, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72157, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72159, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72161, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72163, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72165, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72166, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72168, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72170, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72172, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72174, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72176, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72177, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72183, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72184, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72185, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72187, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72188, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72190, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72192, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72194, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72196, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72197, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72199, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72201, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72203, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72205, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72207, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72208, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72214, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72215, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72216, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72218, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72219, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72221, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72223, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72225, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72227, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72228, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72230, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72232, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72234, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72236, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72238, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72239, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72245, "node_name": "a", "Dec": "the file chooser"}{"idx": 72247, "node_name": "a", "Dec": "the file chooser"}{"idx": 72249, "node_name": "a", "Dec": "the file chooser"}{"idx": 72251, "node_name": "a", "Dec": "the file chooser"}{"idx": 72253, "node_name": "a", "Dec": "the file chooser"}{"idx": 72255, "node_name": "a", "Dec": "the file chooser"}{"idx": 72256, "node_name": "b", "Dec": "the file"}{"idx": 72258, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72259, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72260, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72262, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72263, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72265, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72267, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72269, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72271, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72272, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72274, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72276, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72278, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72280, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72282, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72283, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72289, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72290, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72291, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72293, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72294, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72296, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72298, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72300, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72302, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72303, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72305, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72307, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72309, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72311, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72313, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72314, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72320, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72321, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72322, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72324, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72325, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72327, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72329, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72331, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72333, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72334, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72336, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72338, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72340, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72342, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72344, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72345, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72351, "node_name": "a", "Dec": "the list"}{"idx": 72352, "node_name": "b", "Dec": "the coordinates of the point"}{"idx": 72354, "node_name": "a", "Dec": "the list"}{"idx": 72355, "node_name": "b", "Dec": "the cell index"}{"idx": 72357, "node_name": "a", "Dec": "the list"}{"idx": 72358, "node_name": "b", "Dec": "the first index in the range"}{"idx": 72359, "node_name": "c", "Dec": "the second index in the range"}{"idx": 72361, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72362, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72363, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72365, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72366, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72368, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72370, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72372, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72374, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72375, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72377, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72379, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72381, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72383, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72385, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72386, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72396, "node_name": "mui", "Dec": "the componentui object that represents the complete ui for the target component ; this should be an instance of one of the multixxxxui classes"}{"idx": 72397, "node_name": "uis", "Dec": "a vector ; generally this is the uis field of the mui argument"}{"idx": 72398, "node_name": "target", "Dec": "a component whose ui is represented by mui"}{"idx": 72400, "node_name": "uis", "Dec": "a vector containing componentui objects"}{"idx": 72406, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72407, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72408, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72410, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72411, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72413, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72415, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72417, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72419, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72420, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72422, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72424, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72426, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72428, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72430, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72431, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72437, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72438, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72439, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72441, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72442, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72444, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72446, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72448, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72450, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72451, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72453, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72455, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72457, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72459, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72461, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72462, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72468, "node_name": "a", "Dec": "a joptionpane"}{"idx": 72470, "node_name": "a", "Dec": "a joptionpane"}{"idx": 72472, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72473, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72474, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72476, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72477, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72479, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72481, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72483, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72485, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72486, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72488, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72490, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72492, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72494, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72496, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72497, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72503, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72504, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72505, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72507, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72508, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72510, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72512, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72514, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72516, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72517, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72519, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72521, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72523, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72525, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72527, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72528, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72534, "node_name": "a", "Dec": "a mouseevent"}{"idx": 72536, "node_name": "a", "Dec": "jpopupmenu requesting popup"}{"idx": 72537, "node_name": "b", "Dec": "screen x location popup is to be shown at"}{"idx": 72538, "node_name": "c", "Dec": "screen y location popup is to be shown at ."}{"idx": 72540, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72541, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72542, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72544, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72545, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72547, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72549, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72551, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72553, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72554, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72556, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72558, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72560, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72562, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72564, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72565, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72571, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72572, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72573, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72575, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72576, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72578, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72580, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72582, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72584, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72585, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72587, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72589, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72591, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72593, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72595, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72596, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72602, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72603, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72604, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72606, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72607, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72609, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72611, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72613, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72615, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72616, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72618, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72620, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72622, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72624, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72626, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72627, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72633, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72634, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72635, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72637, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72638, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72640, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72642, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72644, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72646, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72647, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72649, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72651, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72653, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72655, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72657, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72658, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72664, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72665, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72666, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72668, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72669, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72671, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72673, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72675, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72677, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72678, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72680, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72682, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72684, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72686, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72688, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72689, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72695, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72696, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72697, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72699, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72700, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72702, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72704, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72706, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72708, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72709, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72711, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72713, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72715, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72717, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72719, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72720, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72726, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72727, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72728, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72730, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72731, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72733, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72735, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72737, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72739, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72740, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72742, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72744, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72746, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72748, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72750, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72751, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72757, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72758, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72759, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72761, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72762, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72764, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72766, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72768, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72770, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72771, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72773, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72775, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72777, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72779, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72781, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72782, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72788, "node_name": "a", "Dec": "a jsplitpane"}{"idx": 72790, "node_name": "a", "Dec": "a jsplitpane"}{"idx": 72791, "node_name": "b", "Dec": "an integer specifying the location of the divider"}{"idx": 72793, "node_name": "a", "Dec": "a jsplitpane"}{"idx": 72795, "node_name": "a", "Dec": "a jsplitpane"}{"idx": 72797, "node_name": "a", "Dec": "a jsplitpane"}{"idx": 72799, "node_name": "a", "Dec": "a jsplitpane"}{"idx": 72800, "node_name": "b", "Dec": "the graphics context"}{"idx": 72802, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72803, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72804, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72806, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72807, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72809, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72811, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72813, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72815, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72816, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72818, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72820, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72822, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72824, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72826, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72827, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72833, "node_name": "a", "Dec": "the pane"}{"idx": 72834, "node_name": "b", "Dec": "the x coordinate"}{"idx": 72835, "node_name": "c", "Dec": "the y coordinate"}{"idx": 72837, "node_name": "a", "Dec": "the pane"}{"idx": 72838, "node_name": "b", "Dec": "the index"}{"idx": 72840, "node_name": "a", "Dec": "the pane"}{"idx": 72842, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72843, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72844, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72846, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72847, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72849, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72851, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72853, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72855, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72856, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72858, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72860, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72862, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72864, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72866, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72867, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72873, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72874, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72875, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72877, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72878, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72880, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72882, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72884, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72886, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72887, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72889, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72891, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72893, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72895, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72897, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72898, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72904, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72905, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72906, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72908, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72909, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72911, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72913, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72915, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72917, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72918, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72920, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72922, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72924, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72926, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72928, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72929, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72935, "node_name": "a", "Dec": "the text component for which this ui is installed"}{"idx": 72936, "node_name": "b", "Dec": "a point specifying location for which to get a tooltip"}{"idx": 72938, "node_name": "a", "Dec": "the text component for which this ui is installed"}{"idx": 72939, "node_name": "b", "Dec": "the position to convert > = 0"}{"idx": 72940, "node_name": "c", "Dec": "the bias for the position"}{"idx": 72941, "node_name": "d", "Dec": "the direction from the current position that can be thought of as the arrow keys typically found on a keyboard . this may be swingconstants.west , swingconstants.east , swingconstants.north , or swingconstants.south"}{"idx": 72942, "node_name": "e", "Dec": "an array to contain the bias for the returned position"}{"idx": 72944, "node_name": "a", "Dec": "the text component for which this ui is installed"}{"idx": 72945, "node_name": "b", "Dec": "the beginning of the range > = 0"}{"idx": 72946, "node_name": "c", "Dec": "the end of the range > = p0"}{"idx": 72948, "node_name": "a", "Dec": "the text component for which this ui is installed"}{"idx": 72949, "node_name": "b", "Dec": "the beginning of the range > = 0"}{"idx": 72950, "node_name": "c", "Dec": "the end of the range > = p0"}{"idx": 72951, "node_name": "d", "Dec": "the bias of the first character position , toward the previous character or the next character"}{"idx": 72952, "node_name": "e", "Dec": "the bias of the second character position , toward the previous character or the next character"}{"idx": 72954, "node_name": "a", "Dec": "the text component for which this ui is installed"}{"idx": 72956, "node_name": "a", "Dec": "the text component for which this ui is installed"}{"idx": 72958, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72959, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72960, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72962, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72963, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72965, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72967, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 72969, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72971, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72972, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72974, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72976, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72978, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72980, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 72982, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 72983, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 72989, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72990, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 72991, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 72993, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 72994, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 72996, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 72998, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 73000, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73002, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 73003, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73005, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73007, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73009, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73011, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 73013, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 73014, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 73020, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73021, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 73022, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 73024, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 73025, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73027, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 73029, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 73031, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73033, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 73034, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73036, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73038, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73040, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73042, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 73044, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 73045, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 73051, "node_name": "a", "Dec": "the jtree for path"}{"idx": 73052, "node_name": "b", "Dec": "the treepath identifying the node"}{"idx": 73054, "node_name": "a", "Dec": "a jtree object"}{"idx": 73055, "node_name": "b", "Dec": "an integer specifying a row"}{"idx": 73057, "node_name": "a", "Dec": "the jtree for path"}{"idx": 73058, "node_name": "b", "Dec": "the treepath object to look in"}{"idx": 73060, "node_name": "a", "Dec": "the jtree for which to count rows"}{"idx": 73062, "node_name": "a", "Dec": "a jtree object"}{"idx": 73063, "node_name": "b", "Dec": "an integer giving the number of pixels horizontally from the left edge of the display area"}{"idx": 73064, "node_name": "c", "Dec": "an integer giving the number of pixels vertically from the top of the display area , minus any top margin"}{"idx": 73066, "node_name": "a", "Dec": "a jtree object"}{"idx": 73068, "node_name": "a", "Dec": "a jtree object"}{"idx": 73070, "node_name": "a", "Dec": "a jtree object"}{"idx": 73072, "node_name": "a", "Dec": "the jtree being edited"}{"idx": 73073, "node_name": "b", "Dec": "the treepath to be edited"}{"idx": 73075, "node_name": "a", "Dec": "the jtree for which to return a path"}{"idx": 73077, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73078, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 73079, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 73081, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 73082, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73084, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 73086, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 73088, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73090, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 73091, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73093, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73095, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73097, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73099, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 73101, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 73102, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 73108, "node_name": "a", "Dec": "the component where the x , y location is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73109, "node_name": "b", "Dec": "the x coordinate of the point"}{"idx": 73110, "node_name": "c", "Dec": "the y coordinate of the point"}{"idx": 73112, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 73113, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73115, "node_name": "a", "Dec": "the component to create the ui for"}{"idx": 73117, "node_name": "a", "Dec": "the component where this ui delegate is being installed"}{"idx": 73119, "node_name": "a", "Dec": "the component from which this ui delegate is being removed ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73121, "node_name": "a", "Dec": "the graphics context in which to paint"}{"idx": 73122, "node_name": "b", "Dec": "the component being painted ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73124, "node_name": "a", "Dec": "the component whose preferred size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73126, "node_name": "a", "Dec": "the component whose minimum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73128, "node_name": "a", "Dec": "the component whose maximum size is being queried ; this argument is often ignored , but might be used if the ui object is stateless and shared by multiple components"}{"idx": 73130, "node_name": "a", "Dec": "jcomponent for which to get count of accessible children"}{"idx": 73132, "node_name": "a", "Dec": "a jcomponent for which to get a child object"}{"idx": 73133, "node_name": "b", "Dec": "zero-based index of child"}{"idx": 73137, "node_name": "c", "Dec": "the component on the current paint call"}{"idx": 73140, "node_name": "g", "Dec": "the graphics2d object to configure . will not be null ."}{"idx": 73142, "node_name": "g", "Dec": "the graphics2d surface to paint to"}{"idx": 73143, "node_name": "c", "Dec": "the jcomponent related to the drawing event . for example , if the region being rendered is button , then c will be a jbutton . if the region being drawn is scrollbarslider , then the component will be jscrollbar . this value may be null ."}{"idx": 73144, "node_name": "width", "Dec": "the width of the region to paint . note that in the case of painting the foreground , this value may differ from c.getwidth() ."}{"idx": 73145, "node_name": "height", "Dec": "the height of the region to paint . note that in the case of painting the foreground , this value may differ from c.getheight() ."}{"idx": 73146, "node_name": "extendedcachekeys", "Dec": "the result of the call to getextendedcachekeys()"}{"idx": 73148, "node_name": "x", "Dec": "an encoded x value ( 0 ... 1 , or 1 ... 2 , or 2 ... 3 )"}{"idx": 73150, "node_name": "y", "Dec": "an encoded y value ( 0 ... 1 , or 1 ... 2 , or 2 ... 3 )"}{"idx": 73152, "node_name": "x", "Dec": "an encoded x value of the bezier control point ( 0 ... 1 , or 1 ... 2 , or 2 ... 3 )"}{"idx": 73153, "node_name": "dx", "Dec": "the offset distance to the anchor from the control point x"}{"idx": 73155, "node_name": "y", "Dec": "an encoded y value of the bezier control point ( 0 ... 1 , or 1 ... 2 , or 2 ... 3 )"}{"idx": 73156, "node_name": "dy", "Dec": "the offset distance to the anchor from the control point y"}{"idx": 73158, "node_name": "key", "Dec": "a key corresponding to the value in the ui defaults table of uimanager where the base color is defined"}{"idx": 73159, "node_name": "hoffset", "Dec": "the hue offset used for derivation ."}{"idx": 73160, "node_name": "soffset", "Dec": "the saturation offset used for derivation ."}{"idx": 73161, "node_name": "boffset", "Dec": "the brightness offset used for derivation ."}{"idx": 73162, "node_name": "aoffset", "Dec": "the alpha offset used for derivation . between 0 ... 255"}{"idx": 73164, "node_name": "color1", "Dec": "the first color"}{"idx": 73165, "node_name": "color2", "Dec": "the second color"}{"idx": 73166, "node_name": "midpoint", "Dec": "the offset between color 1 and color 2 , a value of 0.0 is color 1 and 1.0 is color 2 ;"}{"idx": 73168, "node_name": "x1", "Dec": "x1"}{"idx": 73169, "node_name": "y1", "Dec": "y1"}{"idx": 73170, "node_name": "x2", "Dec": "x2"}{"idx": 73171, "node_name": "y2", "Dec": "y2"}{"idx": 73172, "node_name": "midpoints", "Dec": "the midpoints"}{"idx": 73173, "node_name": "colors", "Dec": "the colors"}{"idx": 73175, "node_name": "x", "Dec": "x-coordinate"}{"idx": 73176, "node_name": "y", "Dec": "y-coordinate"}{"idx": 73177, "node_name": "r", "Dec": "radius"}{"idx": 73178, "node_name": "midpoints", "Dec": "the midpoints"}{"idx": 73179, "node_name": "colors", "Dec": "the colors"}{"idx": 73181, "node_name": "c", "Dec": "the component to get the color property from"}{"idx": 73182, "node_name": "property", "Dec": "the name of a bean style property or client property"}{"idx": 73183, "node_name": "defaultcolor", "Dec": "the color to return if no color was obtained from the component ."}{"idx": 73184, "node_name": "saturationoffset", "Dec": "additively modifies the hsb saturation component of the color returned ( ignored if default color is returned ) ."}{"idx": 73185, "node_name": "brightnessoffset", "Dec": "additively modifies the hsb brightness component of the color returned ( ignored if default color is returned ) ."}{"idx": 73186, "node_name": "alphaoffset", "Dec": "additively modifies the argb alpha component of the color returned ( ignored if default color is returned ) ."}{"idx": 73190, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 73193, "node_name": "insets", "Dec": "the stretching insets . may be null . if null , then assumed to be 0 , 0 , 0 , 0 ."}{"idx": 73194, "node_name": "canvassize", "Dec": "the size of the canvas used when encoding the various x / y values . may be null . if null , then it is assumed that there are no encoded values , and any calls to one of the \" decode \" methods will return the passed in value ."}{"idx": 73195, "node_name": "inverted", "Dec": "whether to \" invert \" the meaning of the 9-square grid and stretching insets"}{"idx": 73197, "node_name": "insets", "Dec": "the stretching insets . may be null . if null , then assumed to be 0 , 0 , 0 , 0 ."}{"idx": 73198, "node_name": "canvassize", "Dec": "the size of the canvas used when encoding the various x / y values . may be null . if null , then it is assumed that there are no encoded values , and any calls to one of the \" decode \" methods will return the passed in value ."}{"idx": 73199, "node_name": "inverted", "Dec": "whether to \" invert \" the meaning of the 9-square grid and stretching insets"}{"idx": 73200, "node_name": "cachemode", "Dec": "a hint as to which caching mode to use . if null , then set to no caching ."}{"idx": 73201, "node_name": "maxh", "Dec": "the maximum scale in the horizontal direction to use before punting and redrawing from scratch . for example , if maxh is 2 , then we will attempt to scale any cached images up to 2x the canvas width before redrawing from scratch . reasonable maxh values may improve painting performance . if set too high , then you may get poor looking graphics at higher zoom levels . must be > = 1 ."}{"idx": 73202, "node_name": "maxv", "Dec": "the maximum scale in the vertical direction to use before punting and redrawing from scratch . for example , if maxv is 2 , then we will attempt to scale any cached images up to 2x the canvas height before redrawing from scratch . reasonable maxv values may improve painting performance . if set too high , then you may get poor looking graphics at higher zoom levels . must be > = 1 ."}{"idx": 73208, "node_name": "c", "Dec": "a non-null reference to a jcomponent"}{"idx": 73209, "node_name": "r", "Dec": "a non-null reference to the region of the component c"}{"idx": 73215, "node_name": "ev", "Dec": "a propertychangeevent"}{"idx": 73217, "node_name": "region", "Dec": "the synth region that is being registered . such as button , or scrollbarthumb , or nimbusfooui.foo_region ."}{"idx": 73218, "node_name": "prefix", "Dec": "the uidefault prefix . for example , could be combobox , or if a named components , \" mycombobox \" , or even something like toolbar . \" mycombobox \" . \" combobox.arrowbutton \""}{"idx": 73220, "node_name": "uidefaultparentname", "Dec": "the parent uidefault key"}{"idx": 73221, "node_name": "hoffset", "Dec": "the hue offset"}{"idx": 73222, "node_name": "soffset", "Dec": "the saturation offset"}{"idx": 73223, "node_name": "boffset", "Dec": "the brightness offset"}{"idx": 73224, "node_name": "aoffset", "Dec": "the alpha offset"}{"idx": 73225, "node_name": "uiresource", "Dec": "true if the derived color should be a uiresource , false if it should not be"}{"idx": 73227, "node_name": "color1", "Dec": "the first color"}{"idx": 73228, "node_name": "color2", "Dec": "the second color"}{"idx": 73229, "node_name": "midpoint", "Dec": "the offset between color 1 and color 2 , a value of 0.0 is color 1 and 1.0 is color 2 ;"}{"idx": 73230, "node_name": "uiresource", "Dec": "true if the derived color should be a uiresource"}{"idx": 73232, "node_name": "color1", "Dec": "the first color"}{"idx": 73233, "node_name": "color2", "Dec": "the second color"}{"idx": 73234, "node_name": "midpoint", "Dec": "the offset between color 1 and color 2 , a value of 0.0 is color 1 and 1.0 is color 2 ;"}{"idx": 73243, "node_name": "ctx", "Dec": "synthcontext identifying component to install properties to ."}{"idx": 73245, "node_name": "ctx", "Dec": "synthcontext identifying requester"}{"idx": 73246, "node_name": "in", "Dec": "insets to place return value in ."}{"idx": 73248, "node_name": "ctx", "Dec": "synthcontext identifying requester"}{"idx": 73249, "node_name": "type", "Dec": "type of color being requested ."}{"idx": 73251, "node_name": "ctx", "Dec": "synthcontext identifying requester"}{"idx": 73253, "node_name": "ctx", "Dec": "synthcontext identifying requester"}{"idx": 73255, "node_name": "ctx", "Dec": "synthcontext identifying requester"}{"idx": 73257, "node_name": "ctx", "Dec": "synthcontext identifying requester"}{"idx": 73258, "node_name": "key", "Dec": "must not be null"}{"idx": 73260, "node_name": "ctx", "Dec": "the synthcontext . must not be null ."}{"idx": 73262, "node_name": "ctx", "Dec": "the synthcontext . must not be null ."}{"idx": 73264, "node_name": "ctx", "Dec": "the synthcontext . must not be null ."}{"idx": 73267, "node_name": "name", "Dec": "a simple user friendly name for the state , such as \" indeterminate \" or \" embeddedpanel \" or \" blurred \" . it is customary to use camel case , with the first letter capitalized ."}{"idx": 73269, "node_name": "c", "Dec": "the jcomponent to test . this will never be null ."}{"idx": 73273, "node_name": "op", "Dec": "a joptionpane"}{"idx": 73275, "node_name": "op", "Dec": "a joptionpane"}{"idx": 73281, "node_name": "e", "Dec": "a mouseevent"}{"idx": 73283, "node_name": "popup", "Dec": "jpopupmenu requesting popup"}{"idx": 73284, "node_name": "x", "Dec": "screen x location popup is to be shown at"}{"idx": 73285, "node_name": "y", "Dec": "screen y location popup is to be shown at ."}{"idx": 73303, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 73305, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 73306, "node_name": "location", "Dec": "an integer specifying the location of the divider"}{"idx": 73308, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 73310, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 73312, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 73314, "node_name": "jc", "Dec": "a jsplitpane"}{"idx": 73315, "node_name": "g", "Dec": "the graphics context"}{"idx": 73324, "node_name": "description", "Dec": "string description of the colortype ."}{"idx": 73386, "node_name": "name", "Dec": "name of the region"}{"idx": 73387, "node_name": "ui", "Dec": "string that will be returned from component.getuiclassid . this will be null if this is a subregion ."}{"idx": 73388, "node_name": "subregion", "Dec": "whether or not this is a subregion ."}{"idx": 73395, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 73397, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73398, "node_name": "c", "Dec": "the component being painted"}{"idx": 73400, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73401, "node_name": "c", "Dec": "the component being painted"}{"idx": 73403, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73404, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73406, "node_name": "b", "Dec": "button the icon is associated with"}{"idx": 73408, "node_name": "b", "Dec": "button the icon is associated with"}{"idx": 73410, "node_name": "b", "Dec": "specifies the abstractbutton used when calculating the preferred / minimum / maximum size ."}{"idx": 73414, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 73418, "node_name": "b", "Dec": "component to create ui object for"}{"idx": 73422, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 73424, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73425, "node_name": "c", "Dec": "the component being painted"}{"idx": 73427, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73428, "node_name": "c", "Dec": "the component being painted"}{"idx": 73430, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73431, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73435, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 73437, "node_name": "c", "Dec": "the component where this ui delegate is being installed"}{"idx": 73439, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73440, "node_name": "c", "Dec": "the component being painted"}{"idx": 73442, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73443, "node_name": "c", "Dec": "the component being painted"}{"idx": 73445, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73446, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73448, "node_name": "g", "Dec": "an instance of graphics"}{"idx": 73449, "node_name": "bounds", "Dec": "a bounding rectangle to render to"}{"idx": 73450, "node_name": "hasfocus", "Dec": "is focused"}{"idx": 73462, "node_name": "component", "Dec": "jcomponent"}{"idx": 73463, "node_name": "region", "Dec": "identifies the portion of the jcomponent"}{"idx": 73464, "node_name": "style", "Dec": "style associated with the component"}{"idx": 73465, "node_name": "state", "Dec": "state of the component as defined in synthconstants ."}{"idx": 73473, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 73475, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73476, "node_name": "c", "Dec": "the component being painted"}{"idx": 73478, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73479, "node_name": "c", "Dec": "the component being painted"}{"idx": 73481, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73482, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73486, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 73488, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73489, "node_name": "c", "Dec": "the component being painted"}{"idx": 73491, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73492, "node_name": "c", "Dec": "the component being painted"}{"idx": 73494, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73495, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73499, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 73501, "node_name": "evt", "Dec": "the property change event"}{"idx": 73503, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73504, "node_name": "c", "Dec": "the component being painted"}{"idx": 73506, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73507, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73511, "node_name": "c", "Dec": "the formatted text field"}{"idx": 73516, "node_name": "context", "Dec": "identifies hosting region ."}{"idx": 73517, "node_name": "paintkey", "Dec": "identifies the portion of the component being asked to paint , may be null ."}{"idx": 73518, "node_name": "g", "Dec": "graphics object to paint to"}{"idx": 73519, "node_name": "x1", "Dec": "x origin"}{"idx": 73520, "node_name": "y1", "Dec": "y origin"}{"idx": 73521, "node_name": "x2", "Dec": "x destination"}{"idx": 73522, "node_name": "y2", "Dec": "y destination"}{"idx": 73524, "node_name": "context", "Dec": "identifies hosting region"}{"idx": 73525, "node_name": "paintkey", "Dec": "identifies the portion of the component being asked to paint , may be null"}{"idx": 73526, "node_name": "g", "Dec": "graphics object to paint to"}{"idx": 73527, "node_name": "x1", "Dec": "x origin"}{"idx": 73528, "node_name": "y1", "Dec": "y origin"}{"idx": 73529, "node_name": "x2", "Dec": "x destination"}{"idx": 73530, "node_name": "y2", "Dec": "y destination"}{"idx": 73531, "node_name": "stylekey", "Dec": "identifies the requested style of the line ( e.g. \" dashed \")"}{"idx": 73533, "node_name": "ss", "Dec": "synthcontext"}{"idx": 73534, "node_name": "fm", "Dec": "fontmetrics for the font to use , this may be ignored"}{"idx": 73535, "node_name": "text", "Dec": "text to layout"}{"idx": 73536, "node_name": "icon", "Dec": "icon to layout"}{"idx": 73537, "node_name": "halign", "Dec": "horizontal alignment"}{"idx": 73538, "node_name": "valign", "Dec": "vertical alignment"}{"idx": 73539, "node_name": "htextposition", "Dec": "horizontal text position"}{"idx": 73540, "node_name": "vtextposition", "Dec": "vertical text position"}{"idx": 73541, "node_name": "viewr", "Dec": "rectangle to layout text and icon in ."}{"idx": 73542, "node_name": "iconr", "Dec": "rectangle to place icon bounds in"}{"idx": 73543, "node_name": "textr", "Dec": "rectangle to place text in"}{"idx": 73544, "node_name": "icontextgap", "Dec": "gap between icon and text"}{"idx": 73546, "node_name": "ss", "Dec": "synthcontext"}{"idx": 73547, "node_name": "font", "Dec": "font to use"}{"idx": 73548, "node_name": "metrics", "Dec": "fontmetrics , may be ignored"}{"idx": 73549, "node_name": "text", "Dec": "text to get size of ."}{"idx": 73551, "node_name": "ss", "Dec": "synthcontext"}{"idx": 73552, "node_name": "font", "Dec": "font to use"}{"idx": 73553, "node_name": "text", "Dec": "text to layout"}{"idx": 73554, "node_name": "icon", "Dec": "icon to layout"}{"idx": 73555, "node_name": "halign", "Dec": "horizontal alignment"}{"idx": 73556, "node_name": "valign", "Dec": "vertical alignment"}{"idx": 73557, "node_name": "htextposition", "Dec": "horizontal text position"}{"idx": 73558, "node_name": "vtextposition", "Dec": "vertical text position"}{"idx": 73559, "node_name": "icontextgap", "Dec": "gap between icon and text"}{"idx": 73560, "node_name": "mnemonicindex", "Dec": "index into text to render the mnemonic at , -1 indicates no mnemonic ."}{"idx": 73562, "node_name": "ss", "Dec": "synthcontext"}{"idx": 73563, "node_name": "font", "Dec": "font to use"}{"idx": 73564, "node_name": "text", "Dec": "text to layout"}{"idx": 73565, "node_name": "icon", "Dec": "icon to layout"}{"idx": 73566, "node_name": "halign", "Dec": "horizontal alignment"}{"idx": 73567, "node_name": "valign", "Dec": "vertical alignment"}{"idx": 73568, "node_name": "htextposition", "Dec": "horizontal text position"}{"idx": 73569, "node_name": "vtextposition", "Dec": "vertical text position"}{"idx": 73570, "node_name": "icontextgap", "Dec": "gap between icon and text"}{"idx": 73571, "node_name": "mnemonicindex", "Dec": "index into text to render the mnemonic at , -1 indicates no mnemonic ."}{"idx": 73573, "node_name": "context", "Dec": "synthcontext used to determine font ."}{"idx": 73575, "node_name": "ss", "Dec": "synthcontext"}{"idx": 73576, "node_name": "font", "Dec": "font to use"}{"idx": 73577, "node_name": "text", "Dec": "text to layout"}{"idx": 73578, "node_name": "icon", "Dec": "icon to layout"}{"idx": 73579, "node_name": "halign", "Dec": "horizontal alignment"}{"idx": 73580, "node_name": "valign", "Dec": "vertical alignment"}{"idx": 73581, "node_name": "htextposition", "Dec": "horizontal text position"}{"idx": 73582, "node_name": "vtextposition", "Dec": "vertical text position"}{"idx": 73583, "node_name": "icontextgap", "Dec": "gap between icon and text"}{"idx": 73584, "node_name": "mnemonicindex", "Dec": "index into text to render the mnemonic at , -1 indicates no mnemonic ."}{"idx": 73586, "node_name": "ss", "Dec": "synthcontext"}{"idx": 73587, "node_name": "g", "Dec": "graphics used to render string in ."}{"idx": 73588, "node_name": "text", "Dec": "text to render"}{"idx": 73589, "node_name": "bounds", "Dec": "bounds of the text to be drawn ."}{"idx": 73590, "node_name": "mnemonicindex", "Dec": "index to draw string at ."}{"idx": 73592, "node_name": "ss", "Dec": "synthcontext"}{"idx": 73593, "node_name": "g", "Dec": "graphics used to render string in ."}{"idx": 73594, "node_name": "text", "Dec": "text to render"}{"idx": 73595, "node_name": "x", "Dec": "x location to draw text at ."}{"idx": 73596, "node_name": "y", "Dec": "upper left corner to draw text at ."}{"idx": 73597, "node_name": "mnemonicindex", "Dec": "index to draw string at ."}{"idx": 73599, "node_name": "ss", "Dec": "synthcontext"}{"idx": 73600, "node_name": "g", "Dec": "graphics to render string and icon into"}{"idx": 73601, "node_name": "text", "Dec": "text to layout"}{"idx": 73602, "node_name": "icon", "Dec": "icon to layout"}{"idx": 73603, "node_name": "halign", "Dec": "horizontal alignment"}{"idx": 73604, "node_name": "valign", "Dec": "vertical alignment"}{"idx": 73605, "node_name": "htextposition", "Dec": "horizontal text position"}{"idx": 73606, "node_name": "vtextposition", "Dec": "vertical text position"}{"idx": 73607, "node_name": "icontextgap", "Dec": "gap between icon and text"}{"idx": 73608, "node_name": "mnemonicindex", "Dec": "index into text to render the mnemonic at , -1 indicates no mnemonic ."}{"idx": 73609, "node_name": "textoffset", "Dec": "amount to offset the text when painting"}{"idx": 73611, "node_name": "icon", "Dec": "the icon"}{"idx": 73612, "node_name": "context", "Dec": "synthcontext requesting the icon , may be null ."}{"idx": 73614, "node_name": "icon", "Dec": "the icon"}{"idx": 73615, "node_name": "context", "Dec": "synthcontext requesting the icon , may be null ."}{"idx": 73617, "node_name": "icon", "Dec": "the icon"}{"idx": 73618, "node_name": "context", "Dec": "identifies hosting region , may be null ."}{"idx": 73619, "node_name": "g", "Dec": "the graphics context"}{"idx": 73620, "node_name": "x", "Dec": "the x location to paint to"}{"idx": 73621, "node_name": "y", "Dec": "the y location to paint to"}{"idx": 73622, "node_name": "width", "Dec": "the width of the region to paint to , may be 0"}{"idx": 73623, "node_name": "height", "Dec": "the height of the region to paint to , may be 0"}{"idx": 73626, "node_name": "context", "Dec": "identifies hosting region , may be null ."}{"idx": 73627, "node_name": "g", "Dec": "the graphics context"}{"idx": 73628, "node_name": "x", "Dec": "the x location to paint to"}{"idx": 73629, "node_name": "y", "Dec": "the y location to paint to"}{"idx": 73630, "node_name": "width", "Dec": "the width of the region to paint to , may be 0"}{"idx": 73631, "node_name": "height", "Dec": "the height of the region to paint to , may be 0"}{"idx": 73633, "node_name": "context", "Dec": "synthcontext requesting the icon , may be null ."}{"idx": 73635, "node_name": "context", "Dec": "synthcontext requesting the icon , may be null ."}{"idx": 73638, "node_name": "b", "Dec": "an internal frame"}{"idx": 73640, "node_name": "b", "Dec": "component to create ui object for"}{"idx": 73642, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73643, "node_name": "c", "Dec": "the component being painted"}{"idx": 73645, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73646, "node_name": "c", "Dec": "the component being painted"}{"idx": 73648, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73649, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73653, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 73655, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73656, "node_name": "c", "Dec": "the component being painted"}{"idx": 73658, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73659, "node_name": "c", "Dec": "the component being painted"}{"idx": 73661, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73662, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73666, "node_name": "list", "Dec": "component to create ui object for"}{"idx": 73668, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73669, "node_name": "c", "Dec": "the component being painted"}{"idx": 73673, "node_name": "cache", "Dec": "synthstylefactory the uis should use ."}{"idx": 73676, "node_name": "c", "Dec": "jcomponent to get the synthstyle for"}{"idx": 73677, "node_name": "region", "Dec": "identifies the region of the specified component"}{"idx": 73679, "node_name": "c", "Dec": "component to update style for ."}{"idx": 73681, "node_name": "c", "Dec": "jcomponent to fetch the region for"}{"idx": 73683, "node_name": "c", "Dec": "jcomponent to create the componentui for"}{"idx": 73685, "node_name": "input", "Dec": "inputstream to load from"}{"idx": 73686, "node_name": "resourcebase", "Dec": "used to resolve any images or other resources"}{"idx": 73688, "node_name": "url", "Dec": "the url to load the set of synthstyle from"}{"idx": 73699, "node_name": "ev", "Dec": "a propertychangeevent"}{"idx": 73703, "node_name": "x", "Dec": "component to create ui object for"}{"idx": 73705, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73706, "node_name": "c", "Dec": "the component being painted"}{"idx": 73708, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73709, "node_name": "c", "Dec": "the component being painted"}{"idx": 73711, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73712, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73716, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 73718, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73719, "node_name": "c", "Dec": "the component being painted"}{"idx": 73721, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73722, "node_name": "c", "Dec": "the component being painted"}{"idx": 73724, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73725, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73729, "node_name": "x", "Dec": "component to create ui object for"}{"idx": 73731, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73732, "node_name": "c", "Dec": "the component being painted"}{"idx": 73734, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73735, "node_name": "c", "Dec": "the component being painted"}{"idx": 73737, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73738, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73742, "node_name": "x", "Dec": "component to create ui object for"}{"idx": 73744, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73745, "node_name": "c", "Dec": "the component being painted"}{"idx": 73747, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73748, "node_name": "c", "Dec": "the component being painted"}{"idx": 73750, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 73751, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 73756, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73757, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73758, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73759, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73760, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73761, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73763, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73764, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73765, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73766, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73767, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73768, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73770, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73771, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73772, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73773, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73774, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73775, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73776, "node_name": "direction", "Dec": "one of swingconstants.north , swingconstants.south swingconstants.east or swingconstants.west"}{"idx": 73778, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73779, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73780, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73781, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73782, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73783, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73785, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73786, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73787, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73788, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73789, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73790, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73792, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73793, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73794, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73795, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73796, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73797, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73799, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73800, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73801, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73802, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73803, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73804, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73806, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73807, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73808, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73809, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73810, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73811, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73813, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73814, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73815, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73816, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73817, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73818, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73820, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73821, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73822, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73823, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73824, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73825, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73827, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73828, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73829, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73830, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73831, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73832, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73834, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73835, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73836, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73837, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73838, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73839, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73841, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73842, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73843, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73844, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73845, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73846, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73848, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73849, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73850, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73851, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73852, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73853, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73855, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73856, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73857, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73858, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73859, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73860, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73862, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73863, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73864, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73865, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73866, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73867, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73869, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73870, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73871, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73872, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73873, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73874, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73876, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73877, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73878, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73879, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73880, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73881, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73883, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73884, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73885, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73886, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73887, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73888, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73890, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73891, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73892, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73893, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73894, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73895, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73897, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73898, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73899, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73900, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73901, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73902, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73904, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73905, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73906, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73907, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73908, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73909, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73911, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73912, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73913, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73914, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73915, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73916, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73918, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73919, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73920, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73921, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73922, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73923, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73925, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73926, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73927, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73928, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73929, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73930, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73932, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73933, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73934, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73935, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73936, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73937, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73939, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73940, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73941, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73942, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73943, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73944, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73946, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73947, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73948, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73949, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73950, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73951, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73953, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73954, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73955, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73956, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73957, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73958, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73960, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73961, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73962, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73963, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73964, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73965, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73967, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73968, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73969, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73970, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73971, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73972, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73974, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73975, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73976, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73977, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73978, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73979, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73981, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73982, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73983, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73984, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73985, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73986, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73988, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73989, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73990, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73991, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73992, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 73993, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 73995, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 73996, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 73997, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 73998, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 73999, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74000, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74002, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74003, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74004, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74005, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74006, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74007, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74009, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74010, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74011, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74012, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74013, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74014, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74016, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74017, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74018, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74019, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74020, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74021, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74023, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74024, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74025, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74026, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74027, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74028, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74030, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74031, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74032, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74033, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74034, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74035, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74037, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74038, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74039, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74040, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74041, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74042, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74044, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74045, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74046, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74047, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74048, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74049, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74051, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74052, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74053, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74054, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74055, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74056, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74058, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74059, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74060, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74061, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74062, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74063, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74065, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74066, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74067, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74068, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74069, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74070, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74072, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74073, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74074, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74075, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74076, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74077, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74079, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74080, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74081, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74082, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74083, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74084, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74085, "node_name": "orientation", "Dec": "one of jprogressbar.horizontal or jprogressbar.vertical"}{"idx": 74087, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74088, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74089, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74090, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74091, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74092, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74094, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74095, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74096, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74097, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74098, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74099, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74100, "node_name": "orientation", "Dec": "one of jprogressbar.horizontal or jprogressbar.vertical"}{"idx": 74102, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74103, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74104, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74105, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74106, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74107, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74108, "node_name": "orientation", "Dec": "one of jprogressbar.horizontal or jprogressbar.vertical"}{"idx": 74110, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74111, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74112, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74113, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74114, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74115, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74117, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74118, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74119, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74120, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74121, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74122, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74124, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74125, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74126, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74127, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74128, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74129, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74131, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74132, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74133, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74134, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74135, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74136, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74138, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74139, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74140, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74141, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74142, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74143, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74145, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74146, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74147, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74148, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74149, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74150, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74152, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74153, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74154, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74155, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74156, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74157, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74159, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74160, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74161, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74162, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74163, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74164, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74165, "node_name": "orientation", "Dec": "orientation of the jscrollbar , one of jscrollbar.horizontal or jscrollbar.vertical"}{"idx": 74167, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74168, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74169, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74170, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74171, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74172, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74174, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74175, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74176, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74177, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74178, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74179, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74180, "node_name": "orientation", "Dec": "orientation of the jscrollbar , one of jscrollbar.horizontal or jscrollbar.vertical"}{"idx": 74182, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74183, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74184, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74185, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74186, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74187, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74188, "node_name": "orientation", "Dec": "orientation of the jscrollbar , one of jscrollbar.horizontal or jscrollbar.vertical"}{"idx": 74190, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74191, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74192, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74193, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74194, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74195, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74196, "node_name": "orientation", "Dec": "orientation of the jscrollbar , one of jscrollbar.horizontal or jscrollbar.vertical"}{"idx": 74198, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74199, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74200, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74201, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74202, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74203, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74205, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74206, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74207, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74208, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74209, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74210, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74211, "node_name": "orientation", "Dec": "orientation of the jscrollbar , one of jscrollbar.horizontal or jscrollbar.vertical"}{"idx": 74213, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74214, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74215, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74216, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74217, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74218, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74220, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74221, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74222, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74223, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74224, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74225, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74226, "node_name": "orientation", "Dec": "orientation of the jscrollbar , one of jscrollbar.horizontal or jscrollbar.vertical"}{"idx": 74228, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74229, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74230, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74231, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74232, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74233, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74235, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74236, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74237, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74238, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74239, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74240, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74242, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74243, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74244, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74245, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74246, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74247, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74249, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74250, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74251, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74252, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74253, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74254, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74255, "node_name": "orientation", "Dec": "one of jseparator.horizontal or jseparator.vertical"}{"idx": 74257, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74258, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74259, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74260, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74261, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74262, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74264, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74265, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74266, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74267, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74268, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74269, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74270, "node_name": "orientation", "Dec": "one of jseparator.horizontal or jseparator.vertical"}{"idx": 74272, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74273, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74274, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74275, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74276, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74277, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74278, "node_name": "orientation", "Dec": "one of jseparator.horizontal or jseparator.vertical"}{"idx": 74280, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74281, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74282, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74283, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74284, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74285, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74287, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74288, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74289, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74290, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74291, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74292, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74293, "node_name": "orientation", "Dec": "one of jslider.horizontal or jslider.vertical"}{"idx": 74295, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74296, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74297, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74298, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74299, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74300, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74302, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74303, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74304, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74305, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74306, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74307, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74308, "node_name": "orientation", "Dec": "one of jslider.horizontal or jslider.vertical"}{"idx": 74310, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74311, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74312, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74313, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74314, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74315, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74316, "node_name": "orientation", "Dec": "one of jslider.horizontal or jslider.vertical"}{"idx": 74318, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74319, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74320, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74321, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74322, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74323, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74324, "node_name": "orientation", "Dec": "one of jslider.horizontal or jslider.vertical"}{"idx": 74326, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74327, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74328, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74329, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74330, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74331, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74333, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74334, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74335, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74336, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74337, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74338, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74339, "node_name": "orientation", "Dec": "one of jslider.horizontal or jslider.vertical"}{"idx": 74341, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74342, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74343, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74344, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74345, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74346, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74348, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74349, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74350, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74351, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74352, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74353, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74354, "node_name": "orientation", "Dec": "one of jslider.horizontal or jslider.vertical"}{"idx": 74356, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74357, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74358, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74359, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74360, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74361, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74363, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74364, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74365, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74366, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74367, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74368, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74370, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74371, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74372, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74373, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74374, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74375, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74377, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74378, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74379, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74380, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74381, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74382, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74383, "node_name": "orientation", "Dec": "one of jsplitpane.horizontal_split or jsplitpane.vertical_split"}{"idx": 74385, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74386, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74387, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74388, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74389, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74390, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74391, "node_name": "orientation", "Dec": "one of jsplitpane.horizontal_split or jsplitpane.vertical_split"}{"idx": 74393, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74394, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74395, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74396, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74397, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74398, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74399, "node_name": "orientation", "Dec": "one of jsplitpane.horizontal_split or jsplitpane.vertical_split"}{"idx": 74401, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74402, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74403, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74404, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74405, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74406, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74408, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74409, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74410, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74411, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74412, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74413, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74415, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74416, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74417, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74418, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74419, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74420, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74422, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74423, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74424, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74425, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74426, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74427, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74429, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74430, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74431, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74432, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74433, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74434, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74436, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74437, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74438, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74439, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74440, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74441, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74442, "node_name": "orientation", "Dec": "one of jtabbedpane.top , jtabbedpane.left , jtabbedpane.bottom , or jtabbedpane.right"}{"idx": 74444, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74445, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74446, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74447, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74448, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74449, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74451, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74452, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74453, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74454, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74455, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74456, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74457, "node_name": "orientation", "Dec": "one of jtabbedpane.top , jtabbedpane.left , jtabbedpane.bottom , or jtabbedpane.right"}{"idx": 74459, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74460, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74461, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74462, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74463, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74464, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74465, "node_name": "tabindex", "Dec": "index of tab being painted ."}{"idx": 74467, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74468, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74469, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74470, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74471, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74472, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74473, "node_name": "tabindex", "Dec": "index of tab being painted ."}{"idx": 74474, "node_name": "orientation", "Dec": "one of jtabbedpane.top , jtabbedpane.left , jtabbedpane.bottom , or jtabbedpane.right"}{"idx": 74476, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74477, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74478, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74479, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74480, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74481, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74482, "node_name": "tabindex", "Dec": "index of tab being painted ."}{"idx": 74484, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74485, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74486, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74487, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74488, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74489, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74490, "node_name": "tabindex", "Dec": "index of tab being painted ."}{"idx": 74491, "node_name": "orientation", "Dec": "one of jtabbedpane.top , jtabbedpane.left , jtabbedpane.bottom , or jtabbedpane.right"}{"idx": 74493, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74494, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74495, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74496, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74497, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74498, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74500, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74501, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74502, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74503, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74504, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74505, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74507, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74508, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74509, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74510, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74511, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74512, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74514, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74515, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74516, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74517, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74518, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74519, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74521, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74522, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74523, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74524, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74525, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74526, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74528, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74529, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74530, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74531, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74532, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74533, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74535, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74536, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74537, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74538, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74539, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74540, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74542, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74543, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74544, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74545, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74546, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74547, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74549, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74550, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74551, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74552, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74553, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74554, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74556, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74557, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74558, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74559, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74560, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74561, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74563, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74564, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74565, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74566, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74567, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74568, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74570, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74571, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74572, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74573, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74574, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74575, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74577, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74578, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74579, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74580, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74581, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74582, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74584, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74585, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74586, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74587, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74588, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74589, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74591, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74592, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74593, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74594, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74595, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74596, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74598, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74599, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74600, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74601, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74602, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74603, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74604, "node_name": "orientation", "Dec": "one of jtoolbar.horizontal or jtoolbar.vertical"}{"idx": 74606, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74607, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74608, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74609, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74610, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74611, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74613, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74614, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74615, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74616, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74617, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74618, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74619, "node_name": "orientation", "Dec": "one of jtoolbar.horizontal or jtoolbar.vertical"}{"idx": 74621, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74622, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74623, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74624, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74625, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74626, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74628, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74629, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74630, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74631, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74632, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74633, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74634, "node_name": "orientation", "Dec": "one of jtoolbar.horizontal or jtoolbar.vertical"}{"idx": 74636, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74637, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74638, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74639, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74640, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74641, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74643, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74644, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74645, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74646, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74647, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74648, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74649, "node_name": "orientation", "Dec": "one of jtoolbar.horizontal or jtoolbar.vertical"}{"idx": 74651, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74652, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74653, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74654, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74655, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74656, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74658, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74659, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74660, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74661, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74662, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74663, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74664, "node_name": "orientation", "Dec": "one of jtoolbar.horizontal or jtoolbar.vertical"}{"idx": 74666, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74667, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74668, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74669, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74670, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74671, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74673, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74674, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74675, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74676, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74677, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74678, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74679, "node_name": "orientation", "Dec": "one of jtoolbar.horizontal or jtoolbar.vertical"}{"idx": 74681, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74682, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74683, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74684, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74685, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74686, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74688, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74689, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74690, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74691, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74692, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74693, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74695, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74696, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74697, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74698, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74699, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74700, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74702, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74703, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74704, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74705, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74706, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74707, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74709, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74710, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74711, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74712, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74713, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74714, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74716, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74717, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74718, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74719, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74720, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74721, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74723, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74724, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74725, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74726, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74727, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74728, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74730, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74731, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74732, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74733, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74734, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74735, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74737, "node_name": "context", "Dec": "synthcontext identifying the jcomponent and region to paint to"}{"idx": 74738, "node_name": "g", "Dec": "graphics to paint to"}{"idx": 74739, "node_name": "x", "Dec": "x coordinate of the area to paint to"}{"idx": 74740, "node_name": "y", "Dec": "y coordinate of the area to paint to"}{"idx": 74741, "node_name": "w", "Dec": "width of the area to paint to"}{"idx": 74742, "node_name": "h", "Dec": "height of the area to paint to"}{"idx": 74746, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 74748, "node_name": "p", "Dec": "the jpanel object"}{"idx": 74750, "node_name": "p", "Dec": "the jpanel object"}{"idx": 74752, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74753, "node_name": "c", "Dec": "the component being painted"}{"idx": 74755, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74756, "node_name": "c", "Dec": "the component being painted"}{"idx": 74758, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74759, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74763, "node_name": "c", "Dec": "the jpasswordfield"}{"idx": 74766, "node_name": "elem", "Dec": "the element"}{"idx": 74770, "node_name": "x", "Dec": "component to create ui object for"}{"idx": 74772, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74773, "node_name": "c", "Dec": "the component being painted"}{"idx": 74775, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74776, "node_name": "c", "Dec": "the component being painted"}{"idx": 74778, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74779, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74783, "node_name": "x", "Dec": "component to create ui object for"}{"idx": 74785, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74786, "node_name": "c", "Dec": "the component being painted"}{"idx": 74788, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74789, "node_name": "c", "Dec": "the component being painted"}{"idx": 74791, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74792, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74794, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74795, "node_name": "g", "Dec": "graphics object used for painting"}{"idx": 74796, "node_name": "title", "Dec": "the text to paint"}{"idx": 74800, "node_name": "b", "Dec": "component to create ui object for"}{"idx": 74804, "node_name": "b", "Dec": "component to create ui object for"}{"idx": 74806, "node_name": "b", "Dec": "specifies the abstractbutton used when calculating the preferred / minimum / maximum size ."}{"idx": 74810, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 74812, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74813, "node_name": "c", "Dec": "the component being painted"}{"idx": 74815, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74816, "node_name": "c", "Dec": "the component being painted"}{"idx": 74818, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74819, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74821, "node_name": "e", "Dec": "a propertychangeevent object describing the event source and the property that has changed ."}{"idx": 74825, "node_name": "c", "Dec": "a component"}{"idx": 74827, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74828, "node_name": "c", "Dec": "the component being painted"}{"idx": 74830, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74831, "node_name": "c", "Dec": "the component being painted"}{"idx": 74833, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74834, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74836, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74837, "node_name": "g", "Dec": "graphics object used for painting"}{"idx": 74838, "node_name": "trackbounds", "Dec": "bounding box for the track"}{"idx": 74840, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74841, "node_name": "g", "Dec": "graphics object used for painting"}{"idx": 74842, "node_name": "thumbbounds", "Dec": "bounding box for the thumb"}{"idx": 74844, "node_name": "c", "Dec": "the jscrollbar that's delegating getPreferredSize(javax.swing.JComponent) to us"}{"idx": 74848, "node_name": "x", "Dec": "component to create ui object for"}{"idx": 74850, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74851, "node_name": "c", "Dec": "the component being painted"}{"idx": 74853, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74854, "node_name": "c", "Dec": "the component being painted"}{"idx": 74856, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74857, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74861, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 74863, "node_name": "c", "Dec": "specifies the jseparator for the installed lookandfeel ."}{"idx": 74865, "node_name": "c", "Dec": "specifies the jseparator for the ( un ) installed lookandfeel ."}{"idx": 74867, "node_name": "c", "Dec": "specifies the jseparator for the installed lookandfeel ."}{"idx": 74869, "node_name": "c", "Dec": "specifies the jseparator for the ( un ) installed lookandfeel ."}{"idx": 74871, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74872, "node_name": "c", "Dec": "the component being painted"}{"idx": 74874, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74875, "node_name": "c", "Dec": "the component being painted"}{"idx": 74877, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74878, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74881, "node_name": "c", "Dec": "a slider"}{"idx": 74883, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 74885, "node_name": "slider", "Dec": "a slider"}{"idx": 74888, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74889, "node_name": "c", "Dec": "the component being painted"}{"idx": 74891, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74892, "node_name": "c", "Dec": "the component being painted"}{"idx": 74894, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74895, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74897, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74898, "node_name": "g", "Dec": "graphics object used for painting"}{"idx": 74899, "node_name": "thumbbounds", "Dec": "bounding box for the thumb"}{"idx": 74901, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74902, "node_name": "g", "Dec": "graphics object used for painting"}{"idx": 74903, "node_name": "trackbounds", "Dec": "bounding box for the track"}{"idx": 74907, "node_name": "c", "Dec": "the jspinner ( not used )"}{"idx": 74912, "node_name": "oldeditor", "Dec": "an old instance of editor"}{"idx": 74913, "node_name": "neweditor", "Dec": "a new instance of editor"}{"idx": 74915, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74916, "node_name": "c", "Dec": "the component being painted"}{"idx": 74918, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74919, "node_name": "c", "Dec": "the component being painted"}{"idx": 74921, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74922, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74926, "node_name": "x", "Dec": "component to create ui object for"}{"idx": 74933, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74934, "node_name": "c", "Dec": "the component being painted"}{"idx": 74936, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74937, "node_name": "c", "Dec": "the component being painted"}{"idx": 74939, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 74940, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74944, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74946, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74947, "node_name": "type", "Dec": "type of color being requested ."}{"idx": 74949, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74950, "node_name": "type", "Dec": "type of color being requested ."}{"idx": 74952, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74954, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74956, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74957, "node_name": "insets", "Dec": "insets to place return value in ."}{"idx": 74959, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74961, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74963, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74964, "node_name": "key", "Dec": "property being requested ."}{"idx": 74966, "node_name": "context", "Dec": "synthcontext identifying component to install properties to ."}{"idx": 74968, "node_name": "context", "Dec": "synthcontext identifying component to install properties to ."}{"idx": 74970, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74971, "node_name": "key", "Dec": "property being requested ."}{"idx": 74972, "node_name": "defaultvalue", "Dec": "value to return if the property has not been specified , or is not a number"}{"idx": 74974, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74975, "node_name": "key", "Dec": "property being requested ."}{"idx": 74976, "node_name": "defaultvalue", "Dec": "value to return if the property has not been specified , or is not a boolean"}{"idx": 74978, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74979, "node_name": "key", "Dec": "property being requested ."}{"idx": 74981, "node_name": "context", "Dec": "synthcontext identifying requester"}{"idx": 74982, "node_name": "key", "Dec": "property being requested ."}{"idx": 74983, "node_name": "defaultvalue", "Dec": "value to return if the property has not been specified , or is not a string"}{"idx": 74987, "node_name": "c", "Dec": "component asking for"}{"idx": 74988, "node_name": "id", "Dec": "region identifier"}{"idx": 74992, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 74995, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74996, "node_name": "c", "Dec": "the component being painted"}{"idx": 74998, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 74999, "node_name": "c", "Dec": "the component being painted"}{"idx": 75001, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 75002, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75007, "node_name": "h", "Dec": "component to create ui object for"}{"idx": 75009, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75010, "node_name": "c", "Dec": "the component being painted"}{"idx": 75012, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75013, "node_name": "c", "Dec": "the component being painted"}{"idx": 75015, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 75016, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75020, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 75024, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75025, "node_name": "c", "Dec": "the component being painted"}{"idx": 75027, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75028, "node_name": "c", "Dec": "the component being painted"}{"idx": 75030, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 75031, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75035, "node_name": "ta", "Dec": "a text area"}{"idx": 75037, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75038, "node_name": "c", "Dec": "the component being painted"}{"idx": 75040, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 75041, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75043, "node_name": "g", "Dec": "the graphics context"}{"idx": 75045, "node_name": "evt", "Dec": "the property change event"}{"idx": 75049, "node_name": "c", "Dec": "the text field"}{"idx": 75051, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75052, "node_name": "c", "Dec": "the component being painted"}{"idx": 75054, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 75055, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75057, "node_name": "g", "Dec": "the graphics context"}{"idx": 75059, "node_name": "evt", "Dec": "the property change event"}{"idx": 75063, "node_name": "c", "Dec": "the jtextpane object"}{"idx": 75066, "node_name": "c", "Dec": "the editor component"}{"idx": 75068, "node_name": "evt", "Dec": "the property change event"}{"idx": 75072, "node_name": "b", "Dec": "component to create ui object for"}{"idx": 75076, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 75079, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75080, "node_name": "c", "Dec": "the component being painted"}{"idx": 75082, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75083, "node_name": "c", "Dec": "the component being painted"}{"idx": 75085, "node_name": "c", "Dec": "component which will have a non-rollover border installed"}{"idx": 75087, "node_name": "c", "Dec": "component which will have a rollover border installed"}{"idx": 75089, "node_name": "c", "Dec": "component which will have a normal border re-installed"}{"idx": 75091, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 75092, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75094, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 75095, "node_name": "g", "Dec": "graphics object used for painting"}{"idx": 75096, "node_name": "bounds", "Dec": "bounding box for the toolbar"}{"idx": 75100, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 75102, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75103, "node_name": "c", "Dec": "the component being painted"}{"idx": 75105, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75106, "node_name": "c", "Dec": "the component being painted"}{"idx": 75108, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 75109, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75113, "node_name": "x", "Dec": "component to create ui object for"}{"idx": 75115, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75116, "node_name": "c", "Dec": "the component being painted"}{"idx": 75118, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75119, "node_name": "c", "Dec": "the component being painted"}{"idx": 75121, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 75122, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75125, "node_name": "c", "Dec": "component requesting synthcontext ."}{"idx": 75127, "node_name": "context", "Dec": "a component context"}{"idx": 75128, "node_name": "g", "Dec": "graphics to paint on"}{"idx": 75129, "node_name": "x", "Dec": "the x coordinate"}{"idx": 75130, "node_name": "y", "Dec": "the y coordinate"}{"idx": 75131, "node_name": "w", "Dec": "width of the border"}{"idx": 75132, "node_name": "h", "Dec": "height of the border"}{"idx": 75136, "node_name": "c", "Dec": "component to create ui object for"}{"idx": 75138, "node_name": "c", "Dec": "a jviewport object"}{"idx": 75140, "node_name": "c", "Dec": "a jviewport object"}{"idx": 75142, "node_name": "c", "Dec": "a jviewport object"}{"idx": 75144, "node_name": "c", "Dec": "a jviewport object"}{"idx": 75146, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75147, "node_name": "c", "Dec": "the component being painted"}{"idx": 75149, "node_name": "context", "Dec": "a component context"}{"idx": 75150, "node_name": "g", "Dec": "the graphics to paint on"}{"idx": 75151, "node_name": "x", "Dec": "the x coordinate"}{"idx": 75152, "node_name": "y", "Dec": "the y coordinate"}{"idx": 75153, "node_name": "w", "Dec": "width of the border"}{"idx": 75154, "node_name": "h", "Dec": "height of the border"}{"idx": 75156, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75157, "node_name": "c", "Dec": "the component being painted"}{"idx": 75159, "node_name": "context", "Dec": "context for the component being painted"}{"idx": 75160, "node_name": "g", "Dec": "the graphics object used for painting"}{"idx": 75164, "node_name": "pane", "Dec": "the pane"}{"idx": 75165, "node_name": "x", "Dec": "the x coordinate"}{"idx": 75166, "node_name": "y", "Dec": "the y coordinate"}{"idx": 75168, "node_name": "pane", "Dec": "the pane"}{"idx": 75169, "node_name": "index", "Dec": "the index"}{"idx": 75171, "node_name": "pane", "Dec": "the pane"}{"idx": 75179, "node_name": "t", "Dec": "the text component for which this ui is installed"}{"idx": 75180, "node_name": "pos", "Dec": "the local location in the model to translate > = 0"}{"idx": 75181, "node_name": "bias", "Dec": "the bias for the position"}{"idx": 75183, "node_name": "t", "Dec": "the text component for which this ui is installed"}{"idx": 75184, "node_name": "pt", "Dec": "the location in the view to translate ."}{"idx": 75185, "node_name": "biasreturn", "Dec": "filled in by viewToModel2D(javax.swing.text.JTextComponent,java.awt.geom.Point2D,javax.swing.text.Position.Bias[]) to indicate whether the point given is closer to the previous or the next character in the model"}{"idx": 75187, "node_name": "t", "Dec": "the text component for which this ui is installed"}{"idx": 75188, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 75189, "node_name": "b", "Dec": "the bias for the position"}{"idx": 75190, "node_name": "direction", "Dec": "the direction from the current position that can be thought of as the arrow keys typically found on a keyboard . this may be swingconstants.west , swingconstants.east , swingconstants.north , or swingconstants.south"}{"idx": 75191, "node_name": "biasret", "Dec": "an array to contain the bias for the returned position"}{"idx": 75193, "node_name": "t", "Dec": "the text component for which this ui is installed"}{"idx": 75194, "node_name": "p0", "Dec": "the beginning of the range > = 0"}{"idx": 75195, "node_name": "p1", "Dec": "the end of the range > = p0"}{"idx": 75197, "node_name": "t", "Dec": "the text component for which this ui is installed"}{"idx": 75198, "node_name": "p0", "Dec": "the beginning of the range > = 0"}{"idx": 75199, "node_name": "p1", "Dec": "the end of the range > = p0"}{"idx": 75200, "node_name": "firstbias", "Dec": "the bias of the first character position , toward the previous character or the next character"}{"idx": 75201, "node_name": "secondbias", "Dec": "the bias of the second character position , toward the previous character or the next character"}{"idx": 75203, "node_name": "t", "Dec": "the text component for which this ui is installed"}{"idx": 75205, "node_name": "t", "Dec": "the text component for which this ui is installed"}{"idx": 75207, "node_name": "t", "Dec": "the text component for which this ui is installed"}{"idx": 75208, "node_name": "pt", "Dec": "a point specifying location for which to get a tooltip"}{"idx": 75216, "node_name": "tree", "Dec": "the jtree for path"}{"idx": 75217, "node_name": "path", "Dec": "the treepath identifying the node"}{"idx": 75219, "node_name": "tree", "Dec": "a jtree object"}{"idx": 75220, "node_name": "row", "Dec": "an integer specifying a row"}{"idx": 75222, "node_name": "tree", "Dec": "the jtree for path"}{"idx": 75223, "node_name": "path", "Dec": "the treepath object to look in"}{"idx": 75225, "node_name": "tree", "Dec": "the jtree for which to count rows"}{"idx": 75227, "node_name": "tree", "Dec": "a jtree object"}{"idx": 75228, "node_name": "x", "Dec": "an integer giving the number of pixels horizontally from the left edge of the display area"}{"idx": 75229, "node_name": "y", "Dec": "an integer giving the number of pixels vertically from the top of the display area , minus any top margin"}{"idx": 75231, "node_name": "tree", "Dec": "a jtree object"}{"idx": 75233, "node_name": "tree", "Dec": "a jtree object"}{"idx": 75235, "node_name": "tree", "Dec": "a jtree object"}{"idx": 75237, "node_name": "tree", "Dec": "the jtree being edited"}{"idx": 75238, "node_name": "path", "Dec": "the treepath to be edited"}{"idx": 75240, "node_name": "tree", "Dec": "the jtree for which to return a path"}{"idx": 75246, "node_name": "owner", "Dec": "component mouse coordinates are relative to , may be null"}{"idx": 75247, "node_name": "contents", "Dec": "contents of the popup"}{"idx": 75248, "node_name": "x", "Dec": "initial x screen coordinate"}{"idx": 75249, "node_name": "y", "Dec": "initial y screen coordinate"}{"idx": 75256, "node_name": "factory", "Dec": "shared popupfactory"}{"idx": 75259, "node_name": "owner", "Dec": "component mouse coordinates are relative to , may be null"}{"idx": 75260, "node_name": "contents", "Dec": "contents of the popup"}{"idx": 75261, "node_name": "x", "Dec": "initial x screen coordinate"}{"idx": 75262, "node_name": "y", "Dec": "initial y screen coordinate"}{"idx": 75264, "node_name": "owner", "Dec": "component mouse coordinates are relative to , may be null"}{"idx": 75265, "node_name": "contents", "Dec": "contents of the popup"}{"idx": 75266, "node_name": "x", "Dec": "initial x screen coordinate"}{"idx": 75267, "node_name": "y", "Dec": "initial y screen coordinate"}{"idx": 75268, "node_name": "isheavyweightpopup", "Dec": "true if popup should be heavy weight , otherwise popup type will be selected by popup factory ."}{"idx": 75272, "node_name": "e", "Dec": "a changeevent object . must not be null ."}{"idx": 75274, "node_name": "e", "Dec": "a propertychangeevent object describing the event source and the property that has changed . must not be null ."}{"idx": 75283, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 75289, "node_name": "p", "Dec": "the point in local coordinates"}{"idx": 75291, "node_name": "i", "Dec": "the index into the string"}{"idx": 75295, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 75296, "node_name": "index", "Dec": "an index within the text"}{"idx": 75298, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 75299, "node_name": "index", "Dec": "an index within the text"}{"idx": 75301, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 75302, "node_name": "index", "Dec": "an index within the text"}{"idx": 75304, "node_name": "i", "Dec": "the zero-based index into the text"}{"idx": 75311, "node_name": "parentcomponent", "Dec": "the parent component for the dialog box"}{"idx": 75312, "node_name": "message", "Dec": "a descriptive message that will be shown to the user to indicate what operation is being monitored . this does not change as the operation progresses . see the message parameters to methods in joptionpane.message for the range of values ."}{"idx": 75313, "node_name": "note", "Dec": "a short note describing the state of the operation . as the operation progresses , you can call setnote to change the note displayed . this is used , for example , in operations that iterate through a list of files to show the name of the file being processes . if note is initially null , there will be no note line in the dialog box and setnote will be ineffective"}{"idx": 75314, "node_name": "min", "Dec": "the lower bound of the range"}{"idx": 75315, "node_name": "max", "Dec": "the upper bound of the range"}{"idx": 75317, "node_name": "nv", "Dec": "an int specifying the current value , between the maximum and minimum specified for this component"}{"idx": 75321, "node_name": "m", "Dec": "an int specifying the minimum value"}{"idx": 75324, "node_name": "m", "Dec": "an int specifying the maximum value"}{"idx": 75327, "node_name": "millistodecidetopopup", "Dec": "an int specifying the time to wait , in milliseconds"}{"idx": 75330, "node_name": "millistopopup", "Dec": "an int specifying the time in milliseconds"}{"idx": 75333, "node_name": "note", "Dec": "a string specifying the note to display"}{"idx": 75338, "node_name": "message", "Dec": "descriptive text to be placed in the dialog box if one is popped up ."}{"idx": 75339, "node_name": "parentcomponent", "Dec": "the component triggering the operation being monitored ."}{"idx": 75340, "node_name": "in", "Dec": "the input stream to be monitored ."}{"idx": 75344, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 75346, "node_name": "b", "Dec": "the buffer into which the data is read ."}{"idx": 75347, "node_name": "off", "Dec": "the start offset in the destination array b"}{"idx": 75348, "node_name": "len", "Dec": "the maximum number of bytes read ."}{"idx": 75350, "node_name": "n", "Dec": "the number of bytes to be skipped ."}{"idx": 75355, "node_name": "avalue", "Dec": "an object object"}{"idx": 75356, "node_name": "isselected", "Dec": "a boolean"}{"idx": 75361, "node_name": "c", "Dec": "a component -- unused in the default implementation , but could be used by an overridden version to return a different repaintmanager depending on the component"}{"idx": 75363, "node_name": "c", "Dec": "a jcomponent -- unused"}{"idx": 75365, "node_name": "arepaintmanager", "Dec": "the repaintmanager object to use"}{"idx": 75367, "node_name": "invalidcomponent", "Dec": "a component"}{"idx": 75369, "node_name": "component", "Dec": "a component"}{"idx": 75371, "node_name": "c", "Dec": "component to repaint , null results in nothing happening ."}{"idx": 75372, "node_name": "x", "Dec": "x coordinate of the region to repaint"}{"idx": 75373, "node_name": "y", "Dec": "y coordinate of the region to repaint"}{"idx": 75374, "node_name": "w", "Dec": "width of the region to repaint"}{"idx": 75375, "node_name": "h", "Dec": "height of the region to repaint"}{"idx": 75377, "node_name": "window", "Dec": "window to repaint , null results in nothing happening ."}{"idx": 75378, "node_name": "x", "Dec": "x coordinate of the region to repaint"}{"idx": 75379, "node_name": "y", "Dec": "y coordinate of the region to repaint"}{"idx": 75380, "node_name": "w", "Dec": "width of the region to repaint"}{"idx": 75381, "node_name": "h", "Dec": "height of the region to repaint"}{"idx": 75383, "node_name": "acomponent", "Dec": "a component"}{"idx": 75385, "node_name": "acomponent", "Dec": "a component"}{"idx": 75387, "node_name": "acomponent", "Dec": "a component"}{"idx": 75389, "node_name": "acomponent", "Dec": "a component"}{"idx": 75394, "node_name": "c", "Dec": "the component"}{"idx": 75395, "node_name": "proposedwidth", "Dec": "the width of the buffer"}{"idx": 75396, "node_name": "proposedheight", "Dec": "the height of the buffer"}{"idx": 75398, "node_name": "c", "Dec": "the component"}{"idx": 75399, "node_name": "proposedwidth", "Dec": "the width of the buffer"}{"idx": 75400, "node_name": "proposedheight", "Dec": "the height of the buffer"}{"idx": 75402, "node_name": "d", "Dec": "the dimension"}{"idx": 75405, "node_name": "aflag", "Dec": "true to activate double buffering"}{"idx": 75410, "node_name": "contentpane", "Dec": "the container to use for the contents of this jrootpane"}{"idx": 75413, "node_name": "layeredpane", "Dec": "the layered pane"}{"idx": 75416, "node_name": "glasspane", "Dec": "the glass pane"}{"idx": 75421, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 75427, "node_name": "index", "Dec": "the index of the value to get"}{"idx": 75429, "node_name": "index", "Dec": "the index of the value to get"}{"idx": 75434, "node_name": "regex", "Dec": "the regular expression to filter on"}{"idx": 75435, "node_name": "indices", "Dec": "the indices of the values to check . if not supplied all values are evaluated"}{"idx": 75437, "node_name": "type", "Dec": "the type of comparison to perform"}{"idx": 75438, "node_name": "date", "Dec": "the date to compare against"}{"idx": 75439, "node_name": "indices", "Dec": "the indices of the values to check . if not supplied all values are evaluated"}{"idx": 75441, "node_name": "type", "Dec": "the type of comparison to perform"}{"idx": 75442, "node_name": "number", "Dec": "a number value to compare against"}{"idx": 75443, "node_name": "indices", "Dec": "the indices of the values to check . if not supplied all values are evaluated"}{"idx": 75445, "node_name": "filters", "Dec": "the rowfilters to test"}{"idx": 75447, "node_name": "filters", "Dec": "the rowfilters to test"}{"idx": 75449, "node_name": "filter", "Dec": "the rowfilter to negate"}{"idx": 75451, "node_name": "entry", "Dec": "a non-null object that wraps the underlying object from the model"}{"idx": 75456, "node_name": "column", "Dec": "the column to toggle the sort ordering of , in terms of the underlying model"}{"idx": 75458, "node_name": "index", "Dec": "the row index in terms of the underlying view"}{"idx": 75460, "node_name": "index", "Dec": "the row index in terms of the underlying model"}{"idx": 75462, "node_name": "keys", "Dec": "the new sortkeys ; null is a shorthand for specifying an empty list , indicating that the view should be unsorted"}{"idx": 75469, "node_name": "firstrow", "Dec": "the first row"}{"idx": 75470, "node_name": "endrow", "Dec": "the last row"}{"idx": 75472, "node_name": "firstrow", "Dec": "the first row"}{"idx": 75473, "node_name": "endrow", "Dec": "the last row"}{"idx": 75475, "node_name": "firstrow", "Dec": "the first row , in terms of the underlying model"}{"idx": 75476, "node_name": "endrow", "Dec": "the last row , in terms of the underlying model"}{"idx": 75478, "node_name": "firstrow", "Dec": "the first row , in terms of the underlying model"}{"idx": 75479, "node_name": "endrow", "Dec": "the last row , in terms of the underlying model"}{"idx": 75480, "node_name": "column", "Dec": "the column that has changed , in terms of the underlying model"}{"idx": 75482, "node_name": "l", "Dec": "the rowsorterlistener"}{"idx": 75484, "node_name": "l", "Dec": "the rowsorterlistener"}{"idx": 75487, "node_name": "lastrowindextomodel", "Dec": "the mapping from model indices to view indices prior to the sort , may be null"}{"idx": 75490, "node_name": "column", "Dec": "index of the column , in terms of the model"}{"idx": 75491, "node_name": "sortorder", "Dec": "the sorter order"}{"idx": 75496, "node_name": "o", "Dec": "the object to compare to"}{"idx": 75500, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 75501, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal ."}{"idx": 75502, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right ."}{"idx": 75504, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 75505, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal ."}{"idx": 75506, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right ."}{"idx": 75545, "node_name": "sp", "Dec": "an instance of the jscrollpane"}{"idx": 75547, "node_name": "oldc", "Dec": "the component to replace"}{"idx": 75548, "node_name": "newc", "Dec": "the component to add"}{"idx": 75550, "node_name": "s", "Dec": "the component identifier"}{"idx": 75551, "node_name": "c", "Dec": "the component to be added"}{"idx": 75553, "node_name": "c", "Dec": "the component to remove"}{"idx": 75556, "node_name": "x", "Dec": "an integer giving the display policy"}{"idx": 75559, "node_name": "x", "Dec": "an int giving the display policy"}{"idx": 75566, "node_name": "key", "Dec": "the string specifying the corner"}{"idx": 75568, "node_name": "parent", "Dec": "the container that will be laid out"}{"idx": 75570, "node_name": "parent", "Dec": "the container that will be laid out"}{"idx": 75572, "node_name": "parent", "Dec": "the container to lay out"}{"idx": 75578, "node_name": "index", "Dec": "an int specifying the model selection"}{"idx": 75582, "node_name": "listener", "Dec": "the changelistener to add"}{"idx": 75584, "node_name": "listener", "Dec": "the changelistener to remove"}{"idx": 75592, "node_name": "min", "Dec": "the minimum size > = 0"}{"idx": 75593, "node_name": "pref", "Dec": "the preferred size > = 0"}{"idx": 75594, "node_name": "max", "Dec": "the maximum size > = 0"}{"idx": 75595, "node_name": "a", "Dec": "the alignment > = 0.0f && <= 1.0f"}{"idx": 75598, "node_name": "children", "Dec": "the space requirements for a set of components . the vector may be of zero length , which will result in a default sizerequirements object instance being passed back ."}{"idx": 75600, "node_name": "children", "Dec": "the set of child requirements . if of zero length , the returns result will be a default instance of sizerequirements ."}{"idx": 75602, "node_name": "allocated", "Dec": "the total span to be allocated > = 0 ."}{"idx": 75603, "node_name": "total", "Dec": "the total of the children requests . this argument is optional and may be null ."}{"idx": 75604, "node_name": "children", "Dec": "the size requirements for each component ."}{"idx": 75605, "node_name": "offsets", "Dec": "the offset from 0 for each child where the spans were allocated ( determines placement of the span ) ."}{"idx": 75606, "node_name": "spans", "Dec": "the span allocated for each child to make the total target span ."}{"idx": 75608, "node_name": "allocated", "Dec": "the total span to be allocated > = 0 ."}{"idx": 75609, "node_name": "total", "Dec": "the total of the children requests . this argument is optional and may be null ."}{"idx": 75610, "node_name": "children", "Dec": "the size requirements for each component ."}{"idx": 75611, "node_name": "offsets", "Dec": "the offset from 0 for each child where the spans were allocated ( determines placement of the span ) ."}{"idx": 75612, "node_name": "spans", "Dec": "the span allocated for each child to make the total target span ."}{"idx": 75613, "node_name": "forward", "Dec": "tile with offsets increasing from 0 if true and with offsets decreasing from the end of the allocated space if false ."}{"idx": 75615, "node_name": "allocated", "Dec": "the total span to be allocated > = 0 ."}{"idx": 75616, "node_name": "total", "Dec": "the total of the children requests ."}{"idx": 75617, "node_name": "children", "Dec": "the size requirements for each component ."}{"idx": 75618, "node_name": "offsets", "Dec": "the offset from 0 for each child where the spans were allocated ( determines placement of the span ) ."}{"idx": 75619, "node_name": "spans", "Dec": "the span allocated for each child to make the total target span ."}{"idx": 75621, "node_name": "allocated", "Dec": "the total span to be allocated > = 0 ."}{"idx": 75622, "node_name": "total", "Dec": "the total of the children requests ."}{"idx": 75623, "node_name": "children", "Dec": "the size requirements for each component ."}{"idx": 75624, "node_name": "offsets", "Dec": "the offset from 0 for each child where the spans were allocated ( determines placement of the span ) ."}{"idx": 75625, "node_name": "spans", "Dec": "the span allocated for each child to make the total target span ."}{"idx": 75626, "node_name": "normal", "Dec": "when true , the alignment value 0.0f means left / top ; when false , it means right / bottom ."}{"idx": 75628, "node_name": "delta", "Dec": "an int specifying the size difference"}{"idx": 75629, "node_name": "children", "Dec": "an array of sizerequirements objects"}{"idx": 75633, "node_name": "numentries", "Dec": "the number of sizes to track"}{"idx": 75635, "node_name": "numentries", "Dec": "the number of sizes to track"}{"idx": 75636, "node_name": "value", "Dec": "the initial value of each size"}{"idx": 75638, "node_name": "sizes", "Dec": "the array of sizes to be contained in the sizesequence"}{"idx": 75640, "node_name": "sizes", "Dec": "the array of sizes to be contained in this sizesequence"}{"idx": 75643, "node_name": "index", "Dec": "the index of the entry whose position is desired"}{"idx": 75645, "node_name": "position", "Dec": "the position of the entry"}{"idx": 75647, "node_name": "index", "Dec": "the index corresponding to the entry"}{"idx": 75649, "node_name": "index", "Dec": "the index corresponding to the entry"}{"idx": 75650, "node_name": "size", "Dec": "the size of the entry"}{"idx": 75652, "node_name": "start", "Dec": "the index to be assigned to the first entry in the group"}{"idx": 75653, "node_name": "length", "Dec": "the number of entries in the group"}{"idx": 75654, "node_name": "value", "Dec": "the size to be assigned to each new entry"}{"idx": 75656, "node_name": "start", "Dec": "the index of the first entry to be removed"}{"idx": 75657, "node_name": "length", "Dec": "the number of entries to be removed"}{"idx": 75661, "node_name": "comparator", "Dec": "the comparator to sort by"}{"idx": 75663, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or a focus traversal policy provider"}{"idx": 75664, "node_name": "acomponent", "Dec": "a ( possibly indirect ) child of acontainer , or acontainer itself"}{"idx": 75666, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or a focus traversal policy provider"}{"idx": 75667, "node_name": "acomponent", "Dec": "a ( possibly indirect ) child of acontainer , or acontainer itself"}{"idx": 75669, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or a focus traversal policy provider whose first component is to be returned"}{"idx": 75671, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or a focus traversal policy provider whose last component is to be returned"}{"idx": 75673, "node_name": "acontainer", "Dec": "a focus cycle root of acomponent or a focus traversal policy provider whose default component is to be returned"}{"idx": 75675, "node_name": "implicitdowncycletraversal", "Dec": "whether this sortingfocustraversalpolicy transfers focus down-cycle implicitly"}{"idx": 75678, "node_name": "comparator", "Dec": "the comparator which will be used for sorting"}{"idx": 75681, "node_name": "acomponent", "Dec": "the component whose fitness as a focus owner is to be tested"}{"idx": 75685, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 75688, "node_name": "value", "Dec": "the current ( non null ) value of the model"}{"idx": 75689, "node_name": "start", "Dec": "the first date in the sequence or null"}{"idx": 75690, "node_name": "end", "Dec": "the last date in the sequence or null"}{"idx": 75691, "node_name": "calendarfield", "Dec": "one of calendar.era calendar.year calendar.month calendar.week_of_year calendar.week_of_month calendar.day_of_month calendar.day_of_year calendar.day_of_week calendar.day_of_week_in_month calendar.am_pm calendar.hour calendar.hour_of_day calendar.minute calendar.second calendar.millisecond"}{"idx": 75694, "node_name": "start", "Dec": "defines the first date in the sequence"}{"idx": 75697, "node_name": "end", "Dec": "defines the last date in the sequence"}{"idx": 75700, "node_name": "calendarfield", "Dec": "one of calendar.era calendar.year calendar.month calendar.week_of_year calendar.week_of_month calendar.day_of_month calendar.day_of_year calendar.day_of_week calendar.day_of_week_in_month calendar.am_pm calendar.hour calendar.hour_of_day calendar.minute calendar.second calendar.millisecond setCalendarField(int) fires a changeevent if the calendarfield has changed ."}{"idx": 75707, "node_name": "value", "Dec": "the current ( non null ) date for this sequence"}{"idx": 75710, "node_name": "values", "Dec": "the sequence this model represents"}{"idx": 75712, "node_name": "values", "Dec": "the sequence this model represents"}{"idx": 75716, "node_name": "list", "Dec": "the sequence that this model represents"}{"idx": 75719, "node_name": "elt", "Dec": "the sequence element that will be model's current value"}{"idx": 75725, "node_name": "value", "Dec": "new value for the spinner"}{"idx": 75729, "node_name": "l", "Dec": "the changelistener to add"}{"idx": 75731, "node_name": "l", "Dec": "the changelistener to remove"}{"idx": 75734, "node_name": "value", "Dec": "the current ( non null ) value of the model"}{"idx": 75735, "node_name": "minimum", "Dec": "the first number in the sequence or null"}{"idx": 75736, "node_name": "maximum", "Dec": "the last number in the sequence or null"}{"idx": 75737, "node_name": "stepsize", "Dec": "the difference between elements of the sequence"}{"idx": 75739, "node_name": "value", "Dec": "the current value of the model"}{"idx": 75740, "node_name": "minimum", "Dec": "the first number in the sequence"}{"idx": 75741, "node_name": "maximum", "Dec": "the last number in the sequence"}{"idx": 75742, "node_name": "stepsize", "Dec": "the difference between elements of the sequence"}{"idx": 75744, "node_name": "value", "Dec": "the current value of the model"}{"idx": 75745, "node_name": "minimum", "Dec": "the first number in the sequence"}{"idx": 75746, "node_name": "maximum", "Dec": "the last number in the sequence"}{"idx": 75747, "node_name": "stepsize", "Dec": "the difference between elements of the sequence"}{"idx": 75750, "node_name": "minimum", "Dec": "a comparable that has a compareto method for numbers with the same type as value"}{"idx": 75753, "node_name": "maximum", "Dec": "a comparable that has a compareto method for numbers with the same type as value"}{"idx": 75756, "node_name": "stepsize", "Dec": "the size of the value change computed by the getnextvalue and getpreviousvalue methods"}{"idx": 75763, "node_name": "value", "Dec": "the current ( non null ) number for this sequence"}{"idx": 75772, "node_name": "value", "Dec": "the new setting of the value property"}{"idx": 75774, "node_name": "pref", "Dec": "the minimum , preferred , and maximum values of the new spring"}{"idx": 75776, "node_name": "min", "Dec": "the minimum value of the new spring"}{"idx": 75777, "node_name": "pref", "Dec": "the preferred value of the new spring"}{"idx": 75778, "node_name": "max", "Dec": "the maximum value of the new spring"}{"idx": 75780, "node_name": "s", "Dec": "a spring object"}{"idx": 75782, "node_name": "s1", "Dec": "a spring object"}{"idx": 75783, "node_name": "s2", "Dec": "a spring object"}{"idx": 75785, "node_name": "s1", "Dec": "a spring object"}{"idx": 75786, "node_name": "s2", "Dec": "a spring object"}{"idx": 75788, "node_name": "s", "Dec": "the spring to scale"}{"idx": 75789, "node_name": "factor", "Dec": "amount to scale by ."}{"idx": 75791, "node_name": "c", "Dec": "component used for calculating size"}{"idx": 75793, "node_name": "c", "Dec": "component used for calculating size"}{"idx": 75797, "node_name": "x", "Dec": "the spring controlling the component's x value"}{"idx": 75798, "node_name": "y", "Dec": "the spring controlling the component's y value"}{"idx": 75800, "node_name": "x", "Dec": "the spring value for the x property"}{"idx": 75801, "node_name": "y", "Dec": "the spring value for the y property"}{"idx": 75802, "node_name": "width", "Dec": "the spring value for the width property"}{"idx": 75803, "node_name": "height", "Dec": "the spring value for the height property"}{"idx": 75805, "node_name": "c", "Dec": "the component whose characteristics will be reflected by this constraints object"}{"idx": 75807, "node_name": "x", "Dec": "the spring controlling the x value of a component's location"}{"idx": 75810, "node_name": "y", "Dec": "the spring controlling the y value of a component's location"}{"idx": 75813, "node_name": "width", "Dec": "the spring controlling the width of this constraints object"}{"idx": 75816, "node_name": "height", "Dec": "the spring controlling the height of this constraints object"}{"idx": 75819, "node_name": "edgename", "Dec": "the edge to be set"}{"idx": 75820, "node_name": "s", "Dec": "the spring controlling the specified edge"}{"idx": 75822, "node_name": "edgename", "Dec": "the edge whose value is to be returned"}{"idx": 75835, "node_name": "name", "Dec": "the string to be associated with the component"}{"idx": 75836, "node_name": "c", "Dec": "the component to be added"}{"idx": 75838, "node_name": "c", "Dec": "the component being removed from the container"}{"idx": 75840, "node_name": "component", "Dec": "the component being added"}{"idx": 75841, "node_name": "constraints", "Dec": "the component's constraints"}{"idx": 75843, "node_name": "p", "Dec": "the target container"}{"idx": 75845, "node_name": "p", "Dec": "the target container"}{"idx": 75847, "node_name": "e1", "Dec": "the edge of the dependent"}{"idx": 75848, "node_name": "c1", "Dec": "the component of the dependent"}{"idx": 75849, "node_name": "pad", "Dec": "the fixed distance between dependent and anchor"}{"idx": 75850, "node_name": "e2", "Dec": "the edge of the anchor"}{"idx": 75851, "node_name": "c2", "Dec": "the component of the anchor"}{"idx": 75853, "node_name": "e1", "Dec": "the edge of the dependent"}{"idx": 75854, "node_name": "c1", "Dec": "the component of the dependent"}{"idx": 75855, "node_name": "s", "Dec": "the spring linking dependent and anchor"}{"idx": 75856, "node_name": "e2", "Dec": "the edge of the anchor"}{"idx": 75857, "node_name": "c2", "Dec": "the component of the anchor"}{"idx": 75859, "node_name": "c", "Dec": "the component whose constraints will be returned"}{"idx": 75861, "node_name": "edgename", "Dec": "must be one of springlayout.north , springlayout.south , springlayout.east , springlayout.west , springlayout.vertical_center , springlayout.horizontal_center or springlayout.baseline"}{"idx": 75862, "node_name": "c", "Dec": "the component whose edge spring is desired"}{"idx": 75886, "node_name": "a", "Dec": "the first rectangle"}{"idx": 75887, "node_name": "b", "Dec": "the second rectangle"}{"idx": 75889, "node_name": "acomponent", "Dec": "a component"}{"idx": 75891, "node_name": "c", "Dec": "component to get window ancestor of ."}{"idx": 75893, "node_name": "source", "Dec": "the source component"}{"idx": 75894, "node_name": "apoint", "Dec": "the point"}{"idx": 75895, "node_name": "destination", "Dec": "the destination component"}{"idx": 75897, "node_name": "source", "Dec": "the source component"}{"idx": 75898, "node_name": "x", "Dec": "the x-coordinate of the point"}{"idx": 75899, "node_name": "y", "Dec": "the y-coordinate of the point"}{"idx": 75900, "node_name": "destination", "Dec": "the destination component"}{"idx": 75902, "node_name": "source", "Dec": "the source component"}{"idx": 75903, "node_name": "arectangle", "Dec": "a rectangle"}{"idx": 75904, "node_name": "destination", "Dec": "the destination component"}{"idx": 75906, "node_name": "c", "Dec": "the class of a component"}{"idx": 75907, "node_name": "comp", "Dec": "the component"}{"idx": 75909, "node_name": "name", "Dec": "the name of a component"}{"idx": 75910, "node_name": "comp", "Dec": "the component"}{"idx": 75912, "node_name": "parent", "Dec": "the root component to begin the search"}{"idx": 75913, "node_name": "x", "Dec": "the x target location"}{"idx": 75914, "node_name": "y", "Dec": "the y target location"}{"idx": 75916, "node_name": "source", "Dec": "the source component"}{"idx": 75917, "node_name": "sourceevent", "Dec": "the source mouse event"}{"idx": 75918, "node_name": "destination", "Dec": "the destination component"}{"idx": 75920, "node_name": "p", "Dec": "a point object ( converted to the new coordinate system )"}{"idx": 75921, "node_name": "c", "Dec": "a component object"}{"idx": 75923, "node_name": "p", "Dec": "a point object ( converted to the new coordinate system )"}{"idx": 75924, "node_name": "c", "Dec": "a component object"}{"idx": 75926, "node_name": "c", "Dec": "component to get window ancestor of ."}{"idx": 75928, "node_name": "a", "Dec": "the first component"}{"idx": 75929, "node_name": "b", "Dec": "the second component"}{"idx": 75931, "node_name": "x", "Dec": "the x coordinate of the first rectangle's top-left point"}{"idx": 75932, "node_name": "y", "Dec": "the y coordinate of the first rectangle's top-left point"}{"idx": 75933, "node_name": "width", "Dec": "the width of the first rectangle"}{"idx": 75934, "node_name": "height", "Dec": "the height of the first rectangle"}{"idx": 75935, "node_name": "dest", "Dec": "the second rectangle"}{"idx": 75937, "node_name": "x", "Dec": "the x-coordinate of the first rectangle"}{"idx": 75938, "node_name": "y", "Dec": "the y-coordinate of the first rectangle"}{"idx": 75939, "node_name": "width", "Dec": "the width of the first rectangle"}{"idx": 75940, "node_name": "height", "Dec": "the height of the first rectangle"}{"idx": 75941, "node_name": "dest", "Dec": "the coordinates of the second rectangle ; the union of the two rectangles is returned in this rectangle"}{"idx": 75943, "node_name": "recta", "Dec": "the first rectangle"}{"idx": 75944, "node_name": "rectb", "Dec": "the second rectangle"}{"idx": 75946, "node_name": "anevent", "Dec": "a mouseevent object"}{"idx": 75948, "node_name": "anevent", "Dec": "a mouseevent object"}{"idx": 75950, "node_name": "anevent", "Dec": "a mouseevent object"}{"idx": 75952, "node_name": "fm", "Dec": "a fontmetrics object to compute with"}{"idx": 75953, "node_name": "str", "Dec": "the string to compute"}{"idx": 75955, "node_name": "c", "Dec": "the component"}{"idx": 75956, "node_name": "fm", "Dec": "the instance of fontmetrics"}{"idx": 75957, "node_name": "text", "Dec": "the text"}{"idx": 75958, "node_name": "icon", "Dec": "the icon"}{"idx": 75959, "node_name": "verticalalignment", "Dec": "the vertical alignment"}{"idx": 75960, "node_name": "horizontalalignment", "Dec": "the horizontal alignment"}{"idx": 75961, "node_name": "verticaltextposition", "Dec": "the vertical text position"}{"idx": 75962, "node_name": "horizontaltextposition", "Dec": "the horizontal text position"}{"idx": 75963, "node_name": "viewr", "Dec": "the available rectangle"}{"idx": 75964, "node_name": "iconr", "Dec": "the rectangle for the icon"}{"idx": 75965, "node_name": "textr", "Dec": "the rectangle for the text"}{"idx": 75966, "node_name": "texticongap", "Dec": "the gap between text and icon"}{"idx": 75968, "node_name": "fm", "Dec": "the instance of fontmetrics"}{"idx": 75969, "node_name": "text", "Dec": "the text"}{"idx": 75970, "node_name": "icon", "Dec": "the icon"}{"idx": 75971, "node_name": "verticalalignment", "Dec": "the vertical alignment"}{"idx": 75972, "node_name": "horizontalalignment", "Dec": "the horizontal alignment"}{"idx": 75973, "node_name": "verticaltextposition", "Dec": "the vertical text position"}{"idx": 75974, "node_name": "horizontaltextposition", "Dec": "the horizontal text position"}{"idx": 75975, "node_name": "viewr", "Dec": "the available rectangle"}{"idx": 75976, "node_name": "iconr", "Dec": "the rectangle for the icon"}{"idx": 75977, "node_name": "textr", "Dec": "the rectangle for the text"}{"idx": 75978, "node_name": "texticongap", "Dec": "the gap between text and icon"}{"idx": 75980, "node_name": "g", "Dec": "the graphics object to draw on"}{"idx": 75981, "node_name": "c", "Dec": "the component to draw"}{"idx": 75982, "node_name": "p", "Dec": "the intermediate container"}{"idx": 75983, "node_name": "x", "Dec": "an int specifying the left side of the area draw in , in pixels , measured from the left edge of the graphics context"}{"idx": 75984, "node_name": "y", "Dec": "an int specifying the top of the area to draw in , in pixels measured down from the top edge of the graphics context"}{"idx": 75985, "node_name": "w", "Dec": "an int specifying the width of the area draw in , in pixels"}{"idx": 75986, "node_name": "h", "Dec": "an int specifying the height of the area draw in , in pixels"}{"idx": 75988, "node_name": "g", "Dec": "the graphics object to draw on"}{"idx": 75989, "node_name": "c", "Dec": "the component to draw"}{"idx": 75990, "node_name": "p", "Dec": "the intermediate container"}{"idx": 75991, "node_name": "r", "Dec": "the rectangle to draw in"}{"idx": 75993, "node_name": "c", "Dec": "the component"}{"idx": 75995, "node_name": "dorun", "Dec": "the instance of runnable"}{"idx": 75997, "node_name": "dorun", "Dec": "the instance of runnable"}{"idx": 76000, "node_name": "c", "Dec": "the component"}{"idx": 76002, "node_name": "c", "Dec": "the component"}{"idx": 76003, "node_name": "p", "Dec": "the local coordinate"}{"idx": 76005, "node_name": "c", "Dec": "the component"}{"idx": 76007, "node_name": "c", "Dec": "the component"}{"idx": 76009, "node_name": "c", "Dec": "the component"}{"idx": 76010, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 76012, "node_name": "c", "Dec": "the component"}{"idx": 76014, "node_name": "c", "Dec": "the component"}{"idx": 76016, "node_name": "event", "Dec": "keyevent used to identify which bindings to process , as well as which component has focus ."}{"idx": 76018, "node_name": "action", "Dec": "an action"}{"idx": 76019, "node_name": "ks", "Dec": "a key stroke"}{"idx": 76020, "node_name": "event", "Dec": "a key event"}{"idx": 76021, "node_name": "sender", "Dec": "a sender"}{"idx": 76022, "node_name": "modifiers", "Dec": "action modifiers"}{"idx": 76024, "node_name": "component", "Dec": "a component"}{"idx": 76025, "node_name": "type", "Dec": "a type"}{"idx": 76026, "node_name": "uiinputmap", "Dec": "an inputmap"}{"idx": 76028, "node_name": "component", "Dec": "a component"}{"idx": 76029, "node_name": "uiactionmap", "Dec": "an actionmap"}{"idx": 76031, "node_name": "component", "Dec": "a component"}{"idx": 76032, "node_name": "condition", "Dec": "a condition"}{"idx": 76034, "node_name": "component", "Dec": "a component"}{"idx": 76036, "node_name": "c", "Dec": "the jcomponent in question ; if null , calculateInnerArea(javax.swing.JComponent,java.awt.Rectangle) returns null"}{"idx": 76037, "node_name": "r", "Dec": "the rectangle instance to be modified ; may be null"}{"idx": 76039, "node_name": "component", "Dec": "component to get the first ancestor of , which is not a jlayer instance ."}{"idx": 76041, "node_name": "viewport", "Dec": "jviewport to get the first descendant of , which in not a jlayer instance ."}{"idx": 76047, "node_name": "chunks", "Dec": "intermediate results to process"}{"idx": 76049, "node_name": "chunks", "Dec": "intermediate results to process"}{"idx": 76052, "node_name": "progress", "Dec": "the progress value to set"}{"idx": 76057, "node_name": "timeout", "Dec": "the maximum time to wait"}{"idx": 76058, "node_name": "unit", "Dec": "the time unit of the timeout argument"}{"idx": 76060, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 76062, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 76064, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 76065, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 76066, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 76072, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 76077, "node_name": "column", "Dec": "the column being queried"}{"idx": 76079, "node_name": "columnname", "Dec": "string containing name of column to be located"}{"idx": 76081, "node_name": "columnindex", "Dec": "the column being queried"}{"idx": 76083, "node_name": "rowindex", "Dec": "the row being queried"}{"idx": 76084, "node_name": "columnindex", "Dec": "the column being queried"}{"idx": 76086, "node_name": "avalue", "Dec": "value to assign to cell"}{"idx": 76087, "node_name": "rowindex", "Dec": "row of cell"}{"idx": 76088, "node_name": "columnindex", "Dec": "column of cell"}{"idx": 76090, "node_name": "l", "Dec": "the tablemodellistener"}{"idx": 76092, "node_name": "l", "Dec": "the tablemodellistener"}{"idx": 76097, "node_name": "firstrow", "Dec": "the first row"}{"idx": 76098, "node_name": "lastrow", "Dec": "the last row"}{"idx": 76100, "node_name": "firstrow", "Dec": "the first row"}{"idx": 76101, "node_name": "lastrow", "Dec": "the last row"}{"idx": 76103, "node_name": "firstrow", "Dec": "the first row"}{"idx": 76104, "node_name": "lastrow", "Dec": "the last row"}{"idx": 76106, "node_name": "row", "Dec": "row of cell which has been updated"}{"idx": 76107, "node_name": "column", "Dec": "column of cell which has been updated"}{"idx": 76109, "node_name": "e", "Dec": "the event to be forwarded"}{"idx": 76111, "node_name": "listenertype", "Dec": "the type of listeners requested"}{"idx": 76116, "node_name": "c", "Dec": "set the foreground color to this value"}{"idx": 76118, "node_name": "c", "Dec": "set the background color to this value"}{"idx": 76121, "node_name": "table", "Dec": "the jtable"}{"idx": 76122, "node_name": "value", "Dec": "the value to assign to the cell at [ row , column ]"}{"idx": 76123, "node_name": "isselected", "Dec": "true if cell is selected"}{"idx": 76124, "node_name": "hasfocus", "Dec": "true if cell has focus"}{"idx": 76125, "node_name": "row", "Dec": "the row of the cell to render"}{"idx": 76126, "node_name": "column", "Dec": "the column of the cell to render"}{"idx": 76132, "node_name": "tm", "Dec": "this parameter is not used"}{"idx": 76133, "node_name": "x", "Dec": "the x value of the dirty region"}{"idx": 76134, "node_name": "y", "Dec": "the y value of the dirty region"}{"idx": 76135, "node_name": "width", "Dec": "the width of the dirty region"}{"idx": 76136, "node_name": "height", "Dec": "the height of the dirty region"}{"idx": 76138, "node_name": "r", "Dec": "a rectangle containing the dirty region"}{"idx": 76141, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 76142, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 76143, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 76145, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 76146, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 76147, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 76149, "node_name": "value", "Dec": "the string value for this cell ; if value is null it sets the text value to an empty string"}{"idx": 76162, "node_name": "acolumn", "Dec": "the tablecolumn to be added"}{"idx": 76164, "node_name": "column", "Dec": "the tablecolumn to be removed"}{"idx": 76166, "node_name": "columnindex", "Dec": "the index of column to be moved"}{"idx": 76167, "node_name": "newindex", "Dec": "new index to move the column"}{"idx": 76169, "node_name": "newmargin", "Dec": "the new margin width , in pixels"}{"idx": 76173, "node_name": "identifier", "Dec": "the identifier object"}{"idx": 76175, "node_name": "columnindex", "Dec": "the index of the column desired"}{"idx": 76178, "node_name": "x", "Dec": "the horizontal location of interest"}{"idx": 76181, "node_name": "newmodel", "Dec": "the new selection model"}{"idx": 76184, "node_name": "flag", "Dec": "true if column selection will be allowed , false otherwise"}{"idx": 76189, "node_name": "x", "Dec": "a tablecolumnmodellistener object"}{"idx": 76191, "node_name": "x", "Dec": "a tablecolumnmodellistener object"}{"idx": 76194, "node_name": "e", "Dec": "the event received"}{"idx": 76196, "node_name": "e", "Dec": "the event received"}{"idx": 76198, "node_name": "e", "Dec": "the event received"}{"idx": 76200, "node_name": "e", "Dec": "the event received"}{"idx": 76203, "node_name": "listenertype", "Dec": "the type of listeners requested"}{"idx": 76205, "node_name": "evt", "Dec": "propertychangeevent"}{"idx": 76207, "node_name": "e", "Dec": "the change event"}{"idx": 76215, "node_name": "rowcount", "Dec": "the number of rows the table holds"}{"idx": 76216, "node_name": "columncount", "Dec": "the number of columns the table holds"}{"idx": 76218, "node_name": "columnnames", "Dec": "vector containing the names of the new columns ; if this is null then the model has no columns"}{"idx": 76219, "node_name": "rowcount", "Dec": "the number of rows the table holds"}{"idx": 76221, "node_name": "columnnames", "Dec": "array containing the names of the new columns ; if this is null then the model has no columns"}{"idx": 76222, "node_name": "rowcount", "Dec": "the number of rows the table holds"}{"idx": 76224, "node_name": "data", "Dec": "the data of the table , a vector of vectors of object values"}{"idx": 76225, "node_name": "columnnames", "Dec": "vector containing the names of the new columns"}{"idx": 76227, "node_name": "data", "Dec": "the data of the table"}{"idx": 76228, "node_name": "columnnames", "Dec": "the names of the columns"}{"idx": 76231, "node_name": "datavector", "Dec": "the new data vector"}{"idx": 76232, "node_name": "columnidentifiers", "Dec": "the names of the columns"}{"idx": 76234, "node_name": "datavector", "Dec": "the new data vector"}{"idx": 76235, "node_name": "columnidentifiers", "Dec": "the names of the columns"}{"idx": 76237, "node_name": "event", "Dec": "the change event"}{"idx": 76239, "node_name": "e", "Dec": "this tablemodelevent describes where the rows were added . if null it assumes all the rows were newly added"}{"idx": 76241, "node_name": "event", "Dec": "the change event"}{"idx": 76243, "node_name": "rowcount", "Dec": "the new number of rows"}{"idx": 76245, "node_name": "rowcount", "Dec": "number of rows in the model"}{"idx": 76247, "node_name": "rowdata", "Dec": "optional data of the row being added"}{"idx": 76249, "node_name": "rowdata", "Dec": "optional data of the row being added"}{"idx": 76251, "node_name": "row", "Dec": "the row index of the row to be inserted"}{"idx": 76252, "node_name": "rowdata", "Dec": "optional data of the row being added"}{"idx": 76254, "node_name": "row", "Dec": "the row index of the row to be inserted"}{"idx": 76255, "node_name": "rowdata", "Dec": "optional data of the row being added"}{"idx": 76257, "node_name": "start", "Dec": "the starting row index to be moved"}{"idx": 76258, "node_name": "end", "Dec": "the ending row index to be moved"}{"idx": 76259, "node_name": "to", "Dec": "the destination of the rows to be moved"}{"idx": 76261, "node_name": "row", "Dec": "the row index of the row to be removed"}{"idx": 76263, "node_name": "columnidentifiers", "Dec": "vector of column identifiers . if null , set the model to zero columns"}{"idx": 76265, "node_name": "newidentifiers", "Dec": "array of column identifiers . if null , set the model to zero columns"}{"idx": 76267, "node_name": "columncount", "Dec": "the new number of columns in the model"}{"idx": 76269, "node_name": "columnname", "Dec": "the identifier of the column being added"}{"idx": 76271, "node_name": "columnname", "Dec": "the identifier of the column being added"}{"idx": 76272, "node_name": "columndata", "Dec": "optional data of the column being added"}{"idx": 76274, "node_name": "columnname", "Dec": "identifier of the newly created column"}{"idx": 76275, "node_name": "columndata", "Dec": "new data to be added to the column"}{"idx": 76279, "node_name": "column", "Dec": "the column being queried"}{"idx": 76281, "node_name": "row", "Dec": "the row whose value is to be queried"}{"idx": 76282, "node_name": "column", "Dec": "the column whose value is to be queried"}{"idx": 76284, "node_name": "row", "Dec": "the row whose value is to be queried"}{"idx": 76285, "node_name": "column", "Dec": "the column whose value is to be queried"}{"idx": 76287, "node_name": "avalue", "Dec": "the new value ; this can be null"}{"idx": 76288, "node_name": "row", "Dec": "the row whose value is to be changed"}{"idx": 76289, "node_name": "column", "Dec": "the column whose value is to be changed"}{"idx": 76291, "node_name": "anarray", "Dec": "the array to be converted"}{"idx": 76293, "node_name": "anarray", "Dec": "the double array to be converted"}{"idx": 76296, "node_name": "c", "Dec": "the column index"}{"idx": 76297, "node_name": "p", "Dec": "the parent jtableheader"}{"idx": 76298, "node_name": "t", "Dec": "the table jtable"}{"idx": 76305, "node_name": "p", "Dec": "the point defining the top-left corner of the accessible , given in the coordinate space of the object's parent ."}{"idx": 76308, "node_name": "i", "Dec": "zero-based index of child"}{"idx": 76320, "node_name": "cm", "Dec": "the column model for the table"}{"idx": 76322, "node_name": "table", "Dec": "the new table"}{"idx": 76325, "node_name": "reorderingallowed", "Dec": "true if the table view should allow reordering ; otherwise false"}{"idx": 76328, "node_name": "resizingallowed", "Dec": "true if table view should allow resizing"}{"idx": 76334, "node_name": "flag", "Dec": "true if tableview should update the body of the table in real time"}{"idx": 76337, "node_name": "defaultrenderer", "Dec": "the default renderer"}{"idx": 76340, "node_name": "point", "Dec": "if this point lies within a column , the index of that column will be returned ; otherwise it is out of bounds and -1 is returned"}{"idx": 76342, "node_name": "column", "Dec": "index of the column"}{"idx": 76344, "node_name": "event", "Dec": "the location of the event identifies the proper renderer and , therefore , the proper tip"}{"idx": 76348, "node_name": "ui", "Dec": "the tableheaderui l&f object"}{"idx": 76352, "node_name": "columnmodel", "Dec": "the new data source for this table"}{"idx": 76355, "node_name": "e", "Dec": "the event received"}{"idx": 76357, "node_name": "e", "Dec": "the event received"}{"idx": 76359, "node_name": "e", "Dec": "the event received"}{"idx": 76361, "node_name": "e", "Dec": "the event received"}{"idx": 76363, "node_name": "e", "Dec": "the event received"}{"idx": 76369, "node_name": "acolumn", "Dec": "the column being dragged , or null if no column is being dragged"}{"idx": 76371, "node_name": "distance", "Dec": "the distance dragged"}{"idx": 76373, "node_name": "acolumn", "Dec": "the column being resized , or null if no column is being resized"}{"idx": 76378, "node_name": "table", "Dec": "the jtable that is asking the editor to edit ; can be null"}{"idx": 76379, "node_name": "value", "Dec": "the value of the cell to be edited ; it is up to the specific editor to interpret and draw the value . for example , if value is the string \" true \" , it could be rendered as a string or it could be rendered as a check box that is checked . null is a valid value"}{"idx": 76380, "node_name": "isselected", "Dec": "true if the cell is to be rendered with highlighting"}{"idx": 76381, "node_name": "row", "Dec": "the row of the cell being edited"}{"idx": 76382, "node_name": "column", "Dec": "the column of the cell being edited"}{"idx": 76385, "node_name": "table", "Dec": "the jtable that is asking the renderer to draw ; can be null"}{"idx": 76386, "node_name": "value", "Dec": "the value of the cell to be rendered . it is up to the specific renderer to interpret and draw the value . for example , if value is the string \" true \" , it could be rendered as a string or it could be rendered as a check box that is checked . null is a valid value"}{"idx": 76387, "node_name": "isselected", "Dec": "true if the cell is to be rendered with the selection highlighted ; otherwise false"}{"idx": 76388, "node_name": "hasfocus", "Dec": "if true , render cell appropriately . for example , put a special border on the cell , if the cell can be edited , render in the color used to indicate editing"}{"idx": 76389, "node_name": "row", "Dec": "the row index of the cell being drawn . when drawing the header , the value of row is -1"}{"idx": 76390, "node_name": "column", "Dec": "the column index of the cell being drawn"}{"idx": 76408, "node_name": "modelindex", "Dec": "the index of the column in the model that supplies the data for this column in the table ; the model index remains the same even when columns are reordered in the view"}{"idx": 76410, "node_name": "modelindex", "Dec": "the index of the column in the model that supplies the data for this column in the table ; the model index remains the same even when columns are reordered in the view"}{"idx": 76411, "node_name": "width", "Dec": "this column's preferred width and initial width"}{"idx": 76413, "node_name": "modelindex", "Dec": "the index of the column in the model that supplies the data for this column in the table ; the model index remains the same even when columns are reordered in the view"}{"idx": 76414, "node_name": "width", "Dec": "this column's preferred width and initial width"}{"idx": 76415, "node_name": "cellrenderer", "Dec": "the object used to render values in this column"}{"idx": 76416, "node_name": "celleditor", "Dec": "the object used to edit values in this column"}{"idx": 76418, "node_name": "modelindex", "Dec": "the new modelindex"}{"idx": 76421, "node_name": "identifier", "Dec": "an identifier for this column"}{"idx": 76424, "node_name": "headervalue", "Dec": "the new headervalue"}{"idx": 76427, "node_name": "headerrenderer", "Dec": "the new headerrenderer"}{"idx": 76430, "node_name": "cellrenderer", "Dec": "the new cellrenderer"}{"idx": 76433, "node_name": "celleditor", "Dec": "the new celleditor"}{"idx": 76436, "node_name": "width", "Dec": "the new width"}{"idx": 76439, "node_name": "preferredwidth", "Dec": "the new preferred width"}{"idx": 76442, "node_name": "minwidth", "Dec": "the new minimum width"}{"idx": 76445, "node_name": "maxwidth", "Dec": "the new maximum width"}{"idx": 76448, "node_name": "isresizable", "Dec": "if true , resizing is allowed ; otherwise false"}{"idx": 76452, "node_name": "listener", "Dec": "the listener to be added"}{"idx": 76454, "node_name": "listener", "Dec": "the listener to be removed"}{"idx": 76459, "node_name": "acolumn", "Dec": "the tablecolumn to be added"}{"idx": 76461, "node_name": "column", "Dec": "the tablecolumn to be removed"}{"idx": 76463, "node_name": "columnindex", "Dec": "the index of column to be moved"}{"idx": 76464, "node_name": "newindex", "Dec": "index of the column's new location"}{"idx": 76466, "node_name": "newmargin", "Dec": "the width , in pixels , of the new column margins"}{"idx": 76470, "node_name": "columnidentifier", "Dec": "the identifier object"}{"idx": 76472, "node_name": "columnindex", "Dec": "the index of the desired column"}{"idx": 76475, "node_name": "xposition", "Dec": "width from the start of the first column in the model ."}{"idx": 76478, "node_name": "flag", "Dec": "true if columns may be selected ; otherwise false"}{"idx": 76483, "node_name": "newmodel", "Dec": "a listselectionmodel object"}{"idx": 76486, "node_name": "x", "Dec": "a tablecolumnmodellistener object"}{"idx": 76488, "node_name": "x", "Dec": "a tablecolumnmodellistener object"}{"idx": 76493, "node_name": "columnindex", "Dec": "the index of the column"}{"idx": 76495, "node_name": "columnindex", "Dec": "the index of the column"}{"idx": 76497, "node_name": "rowindex", "Dec": "the row whose value to be queried"}{"idx": 76498, "node_name": "columnindex", "Dec": "the column whose value to be queried"}{"idx": 76500, "node_name": "rowindex", "Dec": "the row whose value is to be queried"}{"idx": 76501, "node_name": "columnindex", "Dec": "the column whose value is to be queried"}{"idx": 76503, "node_name": "avalue", "Dec": "the new value"}{"idx": 76504, "node_name": "rowindex", "Dec": "the row whose value is to be changed"}{"idx": 76505, "node_name": "columnindex", "Dec": "the column whose value is to be changed"}{"idx": 76507, "node_name": "l", "Dec": "the tablemodellistener"}{"idx": 76509, "node_name": "l", "Dec": "the tablemodellistener"}{"idx": 76513, "node_name": "model", "Dec": "the underlying tablemodel to use , null is treated as an empty model"}{"idx": 76515, "node_name": "model", "Dec": "the underlying model to use , or null"}{"idx": 76517, "node_name": "stringconverter", "Dec": "the object responsible for converting values from the model to strings"}{"idx": 76520, "node_name": "column", "Dec": "the column to fetch the comparator for , in terms of the underlying model"}{"idx": 76522, "node_name": "column", "Dec": "the index of the column to test , in terms of the underlying model"}{"idx": 76526, "node_name": "model", "Dec": "the tablemodel to fetch the value from"}{"idx": 76527, "node_name": "row", "Dec": "the row the string is being requested for"}{"idx": 76528, "node_name": "column", "Dec": "the column the string is being requested for"}{"idx": 76531, "node_name": "parent", "Dec": "the parent element"}{"idx": 76532, "node_name": "a", "Dec": "the attributes for the element"}{"idx": 76534, "node_name": "psout", "Dec": "the output stream"}{"idx": 76535, "node_name": "indentamount", "Dec": "the indentation level > = 0"}{"idx": 76538, "node_name": "attrname", "Dec": "the non-null attribute name"}{"idx": 76540, "node_name": "attr", "Dec": "the attribute set to check against"}{"idx": 76543, "node_name": "attrname", "Dec": "the non-null attribute name"}{"idx": 76546, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 76547, "node_name": "value", "Dec": "the attribute value"}{"idx": 76549, "node_name": "attrs", "Dec": "the attributes to check"}{"idx": 76552, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 76553, "node_name": "value", "Dec": "the attribute value"}{"idx": 76555, "node_name": "attr", "Dec": "the attributes to add"}{"idx": 76557, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 76559, "node_name": "names", "Dec": "the attribute names"}{"idx": 76561, "node_name": "attrs", "Dec": "the attributes"}{"idx": 76563, "node_name": "parent", "Dec": "the parent , null if none"}{"idx": 76571, "node_name": "index", "Dec": "the child index , > = 0 && < getelementcount()"}{"idx": 76574, "node_name": "offset", "Dec": "the offset > = 0"}{"idx": 76577, "node_name": "childindex", "Dec": "index of child"}{"idx": 76581, "node_name": "node", "Dec": "the location of interest"}{"idx": 76586, "node_name": "old", "Dec": "the old attribute set"}{"idx": 76587, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 76588, "node_name": "value", "Dec": "the attribute value"}{"idx": 76590, "node_name": "old", "Dec": "the old attribute set"}{"idx": 76591, "node_name": "attr", "Dec": "the attributes to add"}{"idx": 76593, "node_name": "old", "Dec": "the old attribute set"}{"idx": 76594, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 76596, "node_name": "old", "Dec": "the old attribute set"}{"idx": 76597, "node_name": "names", "Dec": "the attribute names"}{"idx": 76599, "node_name": "old", "Dec": "the old attribute set"}{"idx": 76600, "node_name": "attrs", "Dec": "the attributes"}{"idx": 76603, "node_name": "a", "Dec": "the attribute set to reclaim"}{"idx": 76606, "node_name": "parent", "Dec": "the parent element"}{"idx": 76607, "node_name": "a", "Dec": "the attributes for the element"}{"idx": 76609, "node_name": "pos", "Dec": "the position > = 0"}{"idx": 76611, "node_name": "offset", "Dec": "the starting offset > = 0"}{"idx": 76612, "node_name": "length", "Dec": "the length to replace > = 0"}{"idx": 76613, "node_name": "elems", "Dec": "the new elements"}{"idx": 76619, "node_name": "index", "Dec": "the child index , > = 0 && < getelementcount()"}{"idx": 76622, "node_name": "offset", "Dec": "the offset > = 0"}{"idx": 76628, "node_name": "offset", "Dec": "the offset in the content > = 0"}{"idx": 76631, "node_name": "where", "Dec": "offset into the sequence to make the insertion > = 0"}{"idx": 76632, "node_name": "str", "Dec": "string to insert"}{"idx": 76634, "node_name": "where", "Dec": "the offset into the sequence to make the insertion > = 0 ."}{"idx": 76635, "node_name": "nitems", "Dec": "the number of items in the sequence to remove > = 0 ."}{"idx": 76637, "node_name": "where", "Dec": "offset into the sequence to fetch > = 0 ."}{"idx": 76638, "node_name": "len", "Dec": "number of characters to copy > = 0 ."}{"idx": 76640, "node_name": "where", "Dec": "the starting offset > = 0"}{"idx": 76641, "node_name": "len", "Dec": "the number of characters > = 0"}{"idx": 76642, "node_name": "txt", "Dec": "the target location to copy into"}{"idx": 76645, "node_name": "offs", "Dec": "the offset into the document of the change > = 0"}{"idx": 76646, "node_name": "len", "Dec": "the length of the change > = 0"}{"idx": 76647, "node_name": "type", "Dec": "the type of event ( documentevent.eventtype )"}{"idx": 76650, "node_name": "anedit", "Dec": "a document edit record"}{"idx": 76662, "node_name": "elem", "Dec": "the element"}{"idx": 76665, "node_name": "e", "Dec": "the element"}{"idx": 76666, "node_name": "index", "Dec": "the index into the model > = 0"}{"idx": 76667, "node_name": "removed", "Dec": "a set of elements that were removed"}{"idx": 76668, "node_name": "added", "Dec": "a set of elements that were added"}{"idx": 76684, "node_name": "data", "Dec": "the content"}{"idx": 76686, "node_name": "data", "Dec": "the content"}{"idx": 76687, "node_name": "context", "Dec": "the attribute context"}{"idx": 76690, "node_name": "x", "Dec": "the new dictionary"}{"idx": 76692, "node_name": "e", "Dec": "the event"}{"idx": 76694, "node_name": "e", "Dec": "the event"}{"idx": 76696, "node_name": "e", "Dec": "the event"}{"idx": 76698, "node_name": "e", "Dec": "the event"}{"idx": 76700, "node_name": "listenertype", "Dec": "the type of listeners requested"}{"idx": 76703, "node_name": "p", "Dec": "the new asynchronous loading priority ; a value less than zero indicates that the document should not be loaded asynchronously"}{"idx": 76705, "node_name": "filter", "Dec": "the documentfilter used to constrain text"}{"idx": 76708, "node_name": "r", "Dec": "the renderer to execute"}{"idx": 76711, "node_name": "listener", "Dec": "the documentlistener to add"}{"idx": 76713, "node_name": "listener", "Dec": "the documentlistener to remove"}{"idx": 76716, "node_name": "listener", "Dec": "the undoableeditlistener to add"}{"idx": 76718, "node_name": "listener", "Dec": "the undoableeditlistener to remove"}{"idx": 76721, "node_name": "key", "Dec": "the non-null property key"}{"idx": 76723, "node_name": "key", "Dec": "the non-null key"}{"idx": 76724, "node_name": "value", "Dec": "the property value"}{"idx": 76726, "node_name": "offs", "Dec": "the starting offset > = 0"}{"idx": 76727, "node_name": "len", "Dec": "the number of characters to remove > = 0"}{"idx": 76729, "node_name": "offset", "Dec": "index of child element"}{"idx": 76730, "node_name": "length", "Dec": "length of text to delete , may be 0 indicating don't delete anything"}{"idx": 76731, "node_name": "text", "Dec": "text to insert , null indicates no text to insert"}{"idx": 76732, "node_name": "attrs", "Dec": "attributeset indicating attributes of inserted text , null is legal , and typically treated as an empty attributeset , but exact interpretation is left to the subclass"}{"idx": 76734, "node_name": "offs", "Dec": "the starting offset > = 0"}{"idx": 76735, "node_name": "str", "Dec": "the string to insert ; does nothing with null / empty strings"}{"idx": 76736, "node_name": "a", "Dec": "the attributes for the inserted content"}{"idx": 76738, "node_name": "offset", "Dec": "the starting offset > = 0"}{"idx": 76739, "node_name": "length", "Dec": "the number of characters to retrieve > = 0"}{"idx": 76741, "node_name": "offset", "Dec": "the starting offset > = 0"}{"idx": 76742, "node_name": "length", "Dec": "the number of characters to retrieve > = 0"}{"idx": 76743, "node_name": "txt", "Dec": "the segment object to retrieve the text into"}{"idx": 76745, "node_name": "offs", "Dec": "the position in the model > = 0"}{"idx": 76752, "node_name": "pos", "Dec": "the starting offset > = 0"}{"idx": 76755, "node_name": "chng", "Dec": "a description of the change"}{"idx": 76756, "node_name": "attr", "Dec": "the attributes for the change"}{"idx": 76758, "node_name": "chng", "Dec": "a description of the change"}{"idx": 76760, "node_name": "chng", "Dec": "a description of the change"}{"idx": 76762, "node_name": "out", "Dec": "the output stream"}{"idx": 76765, "node_name": "parent", "Dec": "the parent element"}{"idx": 76766, "node_name": "a", "Dec": "the attributes for the element"}{"idx": 76767, "node_name": "p0", "Dec": "the beginning of the range > = 0"}{"idx": 76768, "node_name": "p1", "Dec": "the end of the range > = p0"}{"idx": 76770, "node_name": "parent", "Dec": "the parent element"}{"idx": 76771, "node_name": "a", "Dec": "the attributes"}{"idx": 76779, "node_name": "parent", "Dec": "the parent element"}{"idx": 76780, "node_name": "a", "Dec": "the element attributes"}{"idx": 76781, "node_name": "offs0", "Dec": "the start offset > = 0"}{"idx": 76782, "node_name": "offs1", "Dec": "the end offset > = offs0"}{"idx": 76788, "node_name": "pos", "Dec": "the offset > = 0"}{"idx": 76790, "node_name": "index", "Dec": "the child index , > = 0 && < getelementcount()"}{"idx": 76798, "node_name": "w", "Dec": "a writer ."}{"idx": 76799, "node_name": "doc", "Dec": "a document"}{"idx": 76801, "node_name": "w", "Dec": "a writer"}{"idx": 76802, "node_name": "doc", "Dec": "an element"}{"idx": 76803, "node_name": "pos", "Dec": "the location in the document to fetch the content ."}{"idx": 76804, "node_name": "len", "Dec": "the amount to write out ."}{"idx": 76806, "node_name": "w", "Dec": "a writer"}{"idx": 76807, "node_name": "root", "Dec": "an element"}{"idx": 76809, "node_name": "w", "Dec": "a writer"}{"idx": 76810, "node_name": "root", "Dec": "an element"}{"idx": 76811, "node_name": "pos", "Dec": "the location in the document to fetch the content ."}{"idx": 76812, "node_name": "len", "Dec": "the amount to write out ."}{"idx": 76819, "node_name": "next", "Dec": "an element ."}{"idx": 76822, "node_name": "elem", "Dec": "an element"}{"idx": 76824, "node_name": "elem", "Dec": "an element ."}{"idx": 76826, "node_name": "l", "Dec": "the maximum line length ."}{"idx": 76829, "node_name": "length", "Dec": "the new line length"}{"idx": 76833, "node_name": "newvalue", "Dec": "new value for line wrapping"}{"idx": 76836, "node_name": "space", "Dec": "an int representing the space to indent mapping ."}{"idx": 76839, "node_name": "value", "Dec": "the new line separator"}{"idx": 76846, "node_name": "ch", "Dec": "a char ."}{"idx": 76848, "node_name": "content", "Dec": "a string ."}{"idx": 76851, "node_name": "chars", "Dec": "characters to output"}{"idx": 76852, "node_name": "startindex", "Dec": "starting index"}{"idx": 76853, "node_name": "length", "Dec": "length of output"}{"idx": 76855, "node_name": "attr", "Dec": "an attributeset ."}{"idx": 76857, "node_name": "content", "Dec": "characters to output"}{"idx": 76858, "node_name": "start", "Dec": "starting index"}{"idx": 76859, "node_name": "length", "Dec": "length of output"}{"idx": 76866, "node_name": "cs", "Dec": "the child state"}{"idx": 76868, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 76870, "node_name": "index", "Dec": "the child index"}{"idx": 76871, "node_name": "a", "Dec": "the allocation"}{"idx": 76873, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 76874, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 76875, "node_name": "a", "Dec": "the allocation to the view"}{"idx": 76877, "node_name": "index", "Dec": "the index"}{"idx": 76879, "node_name": "a", "Dec": "the allocation"}{"idx": 76881, "node_name": "targetoffset", "Dec": "the target offset"}{"idx": 76884, "node_name": "v", "Dec": "the view"}{"idx": 76892, "node_name": "offs", "Dec": "offsets"}{"idx": 76894, "node_name": "width", "Dec": "true if the width preference has changed"}{"idx": 76895, "node_name": "height", "Dec": "true if the height preference has changed"}{"idx": 76900, "node_name": "elem", "Dec": "the element of the model to represent"}{"idx": 76901, "node_name": "axis", "Dec": "the axis to tile along . this can be either x_axis or y_axis ."}{"idx": 76906, "node_name": "i", "Dec": "the value of the inset"}{"idx": 76909, "node_name": "i", "Dec": "the value of the inset"}{"idx": 76912, "node_name": "i", "Dec": "the value of the inset"}{"idx": 76915, "node_name": "i", "Dec": "the value of the inset"}{"idx": 76917, "node_name": "axis", "Dec": "the axis to determine the total insets along , either x_axis or y_axis ."}{"idx": 76919, "node_name": "isestimated", "Dec": "new value for the estimatedmajorspan property"}{"idx": 76922, "node_name": "index", "Dec": "the child index . this should be a value > = 0 and < getviewcount() ."}{"idx": 76925, "node_name": "v", "Dec": "the view"}{"idx": 76927, "node_name": "cs", "Dec": "the child state"}{"idx": 76928, "node_name": "delta", "Dec": "the delta"}{"idx": 76930, "node_name": "cs", "Dec": "the child state"}{"idx": 76933, "node_name": "offset", "Dec": "the starting offset into the child views > = 0"}{"idx": 76934, "node_name": "length", "Dec": "the number of existing views to replace > = 0"}{"idx": 76935, "node_name": "views", "Dec": "the child views to insert"}{"idx": 76937, "node_name": "f", "Dec": "the view factory"}{"idx": 76939, "node_name": "pos", "Dec": "the position > = 0"}{"idx": 76940, "node_name": "b", "Dec": "the position bias"}{"idx": 76942, "node_name": "ec", "Dec": "changes to the element this view is responsible for ( may be null if there were no changes ) ."}{"idx": 76943, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 76944, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 76946, "node_name": "parent", "Dec": "the parent of the view , null if none"}{"idx": 76948, "node_name": "child", "Dec": "the child view"}{"idx": 76949, "node_name": "width", "Dec": "true if the width preference has changed"}{"idx": 76950, "node_name": "height", "Dec": "true if the height preference has changed"}{"idx": 76952, "node_name": "width", "Dec": "the width > = 0"}{"idx": 76953, "node_name": "height", "Dec": "the height > = 0"}{"idx": 76955, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 76956, "node_name": "alloc", "Dec": "the allocated region to render into"}{"idx": 76958, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 76960, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 76962, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 76965, "node_name": "n", "Dec": "the number of the view to get , > = 0 && < getviewcount()"}{"idx": 76967, "node_name": "index", "Dec": "the index of the child , > = 0 && < getviewcount()"}{"idx": 76968, "node_name": "a", "Dec": "the allocation to this view ."}{"idx": 76970, "node_name": "pos", "Dec": "the position > = 0"}{"idx": 76971, "node_name": "b", "Dec": "the bias"}{"idx": 76973, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 76974, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 76975, "node_name": "b", "Dec": "the bias toward the previous character or the next character represented by the offset , in case the position is a boundary of two views ."}{"idx": 76977, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 76978, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 76979, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 76980, "node_name": "biasreturn", "Dec": "the returned bias"}{"idx": 76982, "node_name": "pos", "Dec": "the position to convert"}{"idx": 76983, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 76984, "node_name": "direction", "Dec": "the direction from the current position that can be thought of as the arrow keys typically found on a keyboard ; this may be one of the following : swingconstants.west swingconstants.east swingconstants.north swingconstants.south"}{"idx": 76985, "node_name": "biasret", "Dec": "an array contain the bias that was checked"}{"idx": 76986, "node_name": "b", "Dec": "the bias"}{"idx": 76995, "node_name": "attrname", "Dec": "the attribute name"}{"idx": 76997, "node_name": "attr", "Dec": "an attribute set"}{"idx": 77000, "node_name": "key", "Dec": "the non-null key of the attribute binding"}{"idx": 77003, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 77004, "node_name": "value", "Dec": "the value"}{"idx": 77006, "node_name": "attributes", "Dec": "the set of attributes to check against"}{"idx": 77011, "node_name": "s", "Dec": "a string indicating what was wrong with the arguments"}{"idx": 77012, "node_name": "offs", "Dec": "offset within the document that was requested > = 0"}{"idx": 77016, "node_name": "elem", "Dec": "the element to create a view for"}{"idx": 77017, "node_name": "axis", "Dec": "either view.x_axis or view.y_axis"}{"idx": 77019, "node_name": "parent", "Dec": "the new parent , or null if the view is being removed from a parent it was previously added to"}{"idx": 77021, "node_name": "axis", "Dec": "the axis being studied"}{"idx": 77022, "node_name": "r", "Dec": "the sizerequirements object ; if null one will be created"}{"idx": 77024, "node_name": "axis", "Dec": "the axis being studied"}{"idx": 77025, "node_name": "r", "Dec": "the sizerequirements object ; if null one will be created"}{"idx": 77027, "node_name": "targetspan", "Dec": "the total span given to the view , which would be used to layout the children ."}{"idx": 77028, "node_name": "axis", "Dec": "the axis being layed out"}{"idx": 77029, "node_name": "offsets", "Dec": "the offsets from the origin of the view for each of the child views ; this is a return value and is filled in by the implementation of layoutMinorAxis(int,int,int[],int[])"}{"idx": 77030, "node_name": "spans", "Dec": "the span of each child view ; this is a return value and is filled in by the implementation of layoutMinorAxis(int,int,int[],int[])"}{"idx": 77032, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 77033, "node_name": "allocation", "Dec": "the allocated region to render into"}{"idx": 77036, "node_name": "axis", "Dec": "may be either x_axis or y_axis"}{"idx": 77038, "node_name": "axis", "Dec": "may be either x_axis or y_axis"}{"idx": 77040, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77042, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77044, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77049, "node_name": "elem", "Dec": "the element this view is responsible for"}{"idx": 77050, "node_name": "axis", "Dec": "either view.x_axis or view.y_axis"}{"idx": 77053, "node_name": "axis", "Dec": "either view.x_axis or view.y_axis"}{"idx": 77055, "node_name": "axis", "Dec": "either view.x_axis or view.y_axis"}{"idx": 77057, "node_name": "axis", "Dec": "either view.x_axis or view.y_axis"}{"idx": 77059, "node_name": "g", "Dec": "the graphics context"}{"idx": 77060, "node_name": "alloc", "Dec": "the allocated region to paint into"}{"idx": 77061, "node_name": "index", "Dec": "the child index , > = 0 && < getviewcount()"}{"idx": 77063, "node_name": "index", "Dec": "the starting index into the child views to insert the new views ; this should be a value > = 0 and <= getviewcount"}{"idx": 77064, "node_name": "length", "Dec": "the number of existing child views to remove ; this should be a value > = 0 and <= ( getviewcount()"}{"idx": 77065, "node_name": "elems", "Dec": "the child views to add ; this value can be nullto indicate no children are being added ( useful to remove )"}{"idx": 77067, "node_name": "ec", "Dec": "changes to the element this view is responsible for ( may be null if there were no changes )"}{"idx": 77068, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 77069, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 77070, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 77072, "node_name": "child", "Dec": "the child view"}{"idx": 77073, "node_name": "width", "Dec": "true if the width preference should change"}{"idx": 77074, "node_name": "height", "Dec": "true if the height preference should change"}{"idx": 77076, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77078, "node_name": "width", "Dec": "the width > = 0"}{"idx": 77079, "node_name": "height", "Dec": "the height > = 0"}{"idx": 77081, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 77082, "node_name": "allocation", "Dec": "the allocated region to render into"}{"idx": 77084, "node_name": "index", "Dec": "the index of the child , > = 0 && > getviewcount()"}{"idx": 77085, "node_name": "a", "Dec": "the allocation to this view"}{"idx": 77087, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 77088, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77089, "node_name": "b", "Dec": "a bias value of either position.bias.forward or position.bias.backward"}{"idx": 77091, "node_name": "x", "Dec": "x coordinate of the view location to convert > = 0"}{"idx": 77092, "node_name": "y", "Dec": "y coordinate of the view location to convert > = 0"}{"idx": 77093, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77094, "node_name": "bias", "Dec": "either position.bias.forward or position.bias.backward"}{"idx": 77096, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77098, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77100, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77102, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77105, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 77106, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 77107, "node_name": "inneralloc", "Dec": "the allocated region ; this is the area inside of the insets"}{"idx": 77109, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 77110, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 77111, "node_name": "inneralloc", "Dec": "the allocated region ; this is the area inside of the insets"}{"idx": 77113, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 77114, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 77115, "node_name": "alloc", "Dec": "the parents inner allocation on entry , which should be changed to the child's allocation on exit"}{"idx": 77117, "node_name": "index", "Dec": "the index of the child view to allocate , > = 0 && < getviewcount()"}{"idx": 77118, "node_name": "alloc", "Dec": "the allocated region"}{"idx": 77120, "node_name": "width", "Dec": "the width ( inside of the insets ) > = 0"}{"idx": 77121, "node_name": "height", "Dec": "the height ( inside of the insets ) > = 0"}{"idx": 77125, "node_name": "targetspan", "Dec": "the total span given to the view , which would be used to layout the children"}{"idx": 77126, "node_name": "axis", "Dec": "the axis being layed out"}{"idx": 77127, "node_name": "offsets", "Dec": "the offsets from the origin of the view for each of the child views ; this is a return value and is filled in by the implementation of layoutMajorAxis(int,int,int[],int[])"}{"idx": 77128, "node_name": "spans", "Dec": "the span of each child view ; this is a return value and is filled in by the implementation of layoutMajorAxis(int,int,int[],int[])"}{"idx": 77130, "node_name": "targetspan", "Dec": "the total span given to the view , which would be used to layout the children"}{"idx": 77131, "node_name": "axis", "Dec": "the axis being layed out"}{"idx": 77132, "node_name": "offsets", "Dec": "the offsets from the origin of the view for each of the child views ; this is a return value and is filled in by the implementation of layoutMinorAxis(int,int,int[],int[])"}{"idx": 77133, "node_name": "spans", "Dec": "the span of each child view ; this is a return value and is filled in by the implementation of layoutMinorAxis(int,int,int[],int[])"}{"idx": 77135, "node_name": "axis", "Dec": "the axis being studied"}{"idx": 77136, "node_name": "r", "Dec": "the sizerequirements object ; if null one will be created"}{"idx": 77138, "node_name": "axis", "Dec": "the axis being studied"}{"idx": 77139, "node_name": "r", "Dec": "the sizerequirements object ; if null one will be created"}{"idx": 77141, "node_name": "targetspan", "Dec": "the total span given to the view , which would be used to layout the children"}{"idx": 77142, "node_name": "axis", "Dec": "the axis being studied , either view.x_axis or view.y_axis"}{"idx": 77143, "node_name": "offsets", "Dec": "an empty array filled by baselineLayout(int,int,int[],int[]) with values specifying the location of each child view"}{"idx": 77144, "node_name": "spans", "Dec": "an empty array filled by baselineLayout(int,int,int[],int[]) with values specifying the extent of each child view"}{"idx": 77146, "node_name": "axis", "Dec": "the axis being studied"}{"idx": 77147, "node_name": "r", "Dec": "the sizerequirements object ; if null one will be created"}{"idx": 77149, "node_name": "axis", "Dec": "the axis being studied"}{"idx": 77150, "node_name": "childindex", "Dec": "the index of the requested child"}{"idx": 77152, "node_name": "axis", "Dec": "the axis being studied"}{"idx": 77153, "node_name": "childindex", "Dec": "the index of the requested child"}{"idx": 77155, "node_name": "position", "Dec": "position into the model"}{"idx": 77156, "node_name": "bias", "Dec": "either position.bias.forward or position.bias.backward"}{"idx": 77159, "node_name": "c", "Dec": "the jtextcomponent"}{"idx": 77161, "node_name": "c", "Dec": "the jtextcomponent"}{"idx": 77163, "node_name": "g", "Dec": "the graphics context"}{"idx": 77165, "node_name": "l", "Dec": "the change listener"}{"idx": 77167, "node_name": "l", "Dec": "the change listener"}{"idx": 77170, "node_name": "v", "Dec": "true if the caret should be shown , and false if the caret should be hidden"}{"idx": 77173, "node_name": "v", "Dec": "true if the caret should be shown , and false if the caret should be hidden"}{"idx": 77175, "node_name": "p", "Dec": "the point to use for the saved position . this can be null to indicate there is no visual location ."}{"idx": 77178, "node_name": "rate", "Dec": "the delay in milliseconds > =0 . if this is zero the caret will not blink ."}{"idx": 77183, "node_name": "dot", "Dec": "the new position to set the caret to"}{"idx": 77185, "node_name": "dot", "Dec": "the new position to move the caret to > =0"}{"idx": 77188, "node_name": "charsetspec", "Dec": "name of the char set specification"}{"idx": 77189, "node_name": "charsetkey", "Dec": "char set key"}{"idx": 77194, "node_name": "elem", "Dec": "the element to decorate"}{"idx": 77198, "node_name": "g", "Dec": "the graphics context"}{"idx": 77199, "node_name": "a", "Dec": "the shape"}{"idx": 77201, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77203, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77205, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77207, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77209, "node_name": "p", "Dec": "the parent"}{"idx": 77211, "node_name": "pos", "Dec": "the position to convert > =0"}{"idx": 77212, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77213, "node_name": "b", "Dec": "the bias toward the previous character or the next character represented by the offset , in case the position is a boundary of two views ; b will have one of these values : position.bias.forward position.bias.backward"}{"idx": 77215, "node_name": "x", "Dec": "the x coordinate > =0"}{"idx": 77216, "node_name": "y", "Dec": "the y coordinate > =0"}{"idx": 77217, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77218, "node_name": "bias", "Dec": "the returned bias"}{"idx": 77221, "node_name": "elem", "Dec": "the element this view is responsible for"}{"idx": 77223, "node_name": "f", "Dec": "the view factory"}{"idx": 77225, "node_name": "parent", "Dec": "the parent of the view , null if none"}{"idx": 77228, "node_name": "n", "Dec": "the number of the desired view , > = 0 && < getviewcount()"}{"idx": 77230, "node_name": "offset", "Dec": "the starting index into the child views to insert the new views ; > = 0 and <= getviewcount"}{"idx": 77231, "node_name": "length", "Dec": "the number of existing child views to remove ; this should be a value > = 0 and <= ( getviewcount()"}{"idx": 77232, "node_name": "views", "Dec": "the child views to add ; this value can be null to indicate no children are being added ( useful to remove )"}{"idx": 77234, "node_name": "index", "Dec": "the index of the child , > = 0 && < getviewcount()"}{"idx": 77235, "node_name": "a", "Dec": "the allocation to this view"}{"idx": 77237, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 77238, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77239, "node_name": "b", "Dec": "a bias value of either position.bias.forward or position.bias.backward"}{"idx": 77241, "node_name": "p0", "Dec": "the position to convert > = 0"}{"idx": 77242, "node_name": "b0", "Dec": "the bias toward the previous character or the next character represented by p0 , in case the position is a boundary of two views ; either position.bias.forward or position.bias.backward"}{"idx": 77243, "node_name": "p1", "Dec": "the position to convert > = 0"}{"idx": 77244, "node_name": "b1", "Dec": "the bias toward the previous character or the next character represented by p1 , in case the position is a boundary of two views"}{"idx": 77245, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77247, "node_name": "x", "Dec": "x coordinate of the view location to convert > = 0"}{"idx": 77248, "node_name": "y", "Dec": "y coordinate of the view location to convert > = 0"}{"idx": 77249, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77250, "node_name": "bias", "Dec": "either position.bias.forward or position.bias.backward"}{"idx": 77252, "node_name": "pos", "Dec": "the position to convert"}{"idx": 77253, "node_name": "b", "Dec": "a bias value of either position.bias.forward or position.bias.backward"}{"idx": 77254, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77255, "node_name": "direction", "Dec": "the direction from the current position that can be thought of as the arrow keys typically found on a keyboard ; this may be one of the following : swingconstants.west swingconstants.east swingconstants.north swingconstants.south"}{"idx": 77256, "node_name": "biasret", "Dec": "an array containing the bias that was checked"}{"idx": 77258, "node_name": "pos", "Dec": "the position > = 0"}{"idx": 77259, "node_name": "b", "Dec": "the bias"}{"idx": 77261, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 77262, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 77263, "node_name": "alloc", "Dec": "the rectangle"}{"idx": 77265, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 77266, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 77267, "node_name": "alloc", "Dec": "the rectangle"}{"idx": 77269, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 77270, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 77271, "node_name": "alloc", "Dec": "the parent's allocation on entry , which should be changed to the child's allocation on exit"}{"idx": 77273, "node_name": "index", "Dec": "the index of the child , > = 0 && < getviewcount()"}{"idx": 77274, "node_name": "a", "Dec": "the allocation to the interior of the box on entry , and the allocation of the child view at the index on exit ."}{"idx": 77276, "node_name": "pos", "Dec": "the position > = 0"}{"idx": 77277, "node_name": "a", "Dec": "the allocation to the interior of the box on entry , and the allocation of the view containing the position on exit"}{"idx": 77279, "node_name": "pos", "Dec": "the position > = 0"}{"idx": 77281, "node_name": "a", "Dec": "the allocation given to the view"}{"idx": 77283, "node_name": "attr", "Dec": "the attributes"}{"idx": 77285, "node_name": "top", "Dec": "the top inset > = 0"}{"idx": 77286, "node_name": "left", "Dec": "the left inset > = 0"}{"idx": 77287, "node_name": "bottom", "Dec": "the bottom inset > = 0"}{"idx": 77288, "node_name": "right", "Dec": "the right inset > = 0"}{"idx": 77294, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 77295, "node_name": "b", "Dec": "a bias value of either position.bias.forward or position.bias.backward"}{"idx": 77296, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77297, "node_name": "direction", "Dec": "the direction from the current position that can be thought of as the arrow keys typically found on a keyboard ; this may be one of the following : swingconstants.north swingconstants.south"}{"idx": 77298, "node_name": "biasret", "Dec": "an array containing the bias that was checked"}{"idx": 77300, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 77301, "node_name": "b", "Dec": "a bias value of either position.bias.forward or position.bias.backward"}{"idx": 77302, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77303, "node_name": "direction", "Dec": "the direction from the current position that can be thought of as the arrow keys typically found on a keyboard ; this may be one of the following : swingconstants.west swingconstants.east"}{"idx": 77304, "node_name": "biasret", "Dec": "an array containing the bias that was checked"}{"idx": 77306, "node_name": "position", "Dec": "position into the model"}{"idx": 77307, "node_name": "bias", "Dec": "either position.bias.forward or position.bias.backward"}{"idx": 77377, "node_name": "name", "Dec": "the name of the css attribute to fetch the typesafe enumeration for"}{"idx": 77381, "node_name": "format", "Dec": "format used to dictate legal values"}{"idx": 77383, "node_name": "format", "Dec": "dateformat instance used for converting from / to strings"}{"idx": 77392, "node_name": "policy", "Dec": "one of the following values : update_when_on_edt , never_update , always_update"}{"idx": 77397, "node_name": "r", "Dec": "the current location of the caret"}{"idx": 77399, "node_name": "nloc", "Dec": "the new position to scroll to"}{"idx": 77402, "node_name": "e", "Dec": "the mouse event"}{"idx": 77404, "node_name": "e", "Dec": "the mouse event"}{"idx": 77406, "node_name": "e", "Dec": "the focus event"}{"idx": 77408, "node_name": "e", "Dec": "the focus event"}{"idx": 77410, "node_name": "e", "Dec": "the mouse event"}{"idx": 77412, "node_name": "e", "Dec": "the mouse event"}{"idx": 77414, "node_name": "e", "Dec": "the mouse event"}{"idx": 77416, "node_name": "e", "Dec": "the mouse event"}{"idx": 77418, "node_name": "e", "Dec": "the mouse event"}{"idx": 77420, "node_name": "e", "Dec": "the mouse event"}{"idx": 77422, "node_name": "e", "Dec": "the mouse event"}{"idx": 77424, "node_name": "g", "Dec": "the graphics context"}{"idx": 77426, "node_name": "c", "Dec": "the component"}{"idx": 77428, "node_name": "c", "Dec": "the component"}{"idx": 77430, "node_name": "l", "Dec": "the listener"}{"idx": 77432, "node_name": "l", "Dec": "the listener"}{"idx": 77436, "node_name": "listenertype", "Dec": "the type of listeners requested"}{"idx": 77438, "node_name": "vis", "Dec": "the new visibility"}{"idx": 77443, "node_name": "e", "Dec": "the visibility specifier"}{"idx": 77445, "node_name": "rate", "Dec": "the rate in milliseconds , 0 to stop blinking"}{"idx": 77450, "node_name": "dot", "Dec": "the position > = 0"}{"idx": 77452, "node_name": "dot", "Dec": "the position > = 0"}{"idx": 77454, "node_name": "dot", "Dec": "the position > = 0"}{"idx": 77455, "node_name": "dotbias", "Dec": "the bias for this position , not null"}{"idx": 77457, "node_name": "dot", "Dec": "the position > = 0"}{"idx": 77458, "node_name": "dotbias", "Dec": "the bias for this position , not null"}{"idx": 77462, "node_name": "p", "Dec": "the position"}{"idx": 77465, "node_name": "obj", "Dec": "the object to compare this font with"}{"idx": 77469, "node_name": "e", "Dec": "the action event"}{"idx": 77473, "node_name": "e", "Dec": "the action event"}{"idx": 77477, "node_name": "e", "Dec": "the action event"}{"idx": 77481, "node_name": "e", "Dec": "the action event"}{"idx": 77485, "node_name": "e", "Dec": "the action event"}{"idx": 77489, "node_name": "e", "Dec": "the action event"}{"idx": 77493, "node_name": "e", "Dec": "the action event"}{"idx": 77551, "node_name": "in", "Dec": "the stream to read from"}{"idx": 77552, "node_name": "doc", "Dec": "the destination for the insertion ."}{"idx": 77553, "node_name": "pos", "Dec": "the location in the document to place the content > =0 ."}{"idx": 77555, "node_name": "out", "Dec": "the stream to write to"}{"idx": 77556, "node_name": "doc", "Dec": "the source for the write ."}{"idx": 77557, "node_name": "pos", "Dec": "the location in the document to fetch the content > =0 ."}{"idx": 77558, "node_name": "len", "Dec": "the amount to write out > =0 ."}{"idx": 77560, "node_name": "in", "Dec": "the stream to read from"}{"idx": 77561, "node_name": "doc", "Dec": "the destination for the insertion ."}{"idx": 77562, "node_name": "pos", "Dec": "the location in the document to place the content > =0 ."}{"idx": 77564, "node_name": "out", "Dec": "the stream to write to"}{"idx": 77565, "node_name": "doc", "Dec": "the source for the write ."}{"idx": 77566, "node_name": "pos", "Dec": "the location in the document to fetch the content from > =0 ."}{"idx": 77567, "node_name": "len", "Dec": "the amount to write out > =0 ."}{"idx": 77571, "node_name": "e", "Dec": "the action event"}{"idx": 77575, "node_name": "ftf", "Dec": "jformattedtextfield to format for , may be null indicating uninstall from current jformattedtextfield ."}{"idx": 77577, "node_name": "commit", "Dec": "used to indicate when edits are committed back to the jtextcomponent"}{"idx": 77580, "node_name": "overwritemode", "Dec": "indicates if overwrite or overstrike mode is used"}{"idx": 77583, "node_name": "allowsinvalid", "Dec": "used to indicate if the edited value must always be valid"}{"idx": 77586, "node_name": "valueclass", "Dec": "class used to construct return value from stringtovalue"}{"idx": 77589, "node_name": "string", "Dec": "string to convert"}{"idx": 77591, "node_name": "value", "Dec": "value to convert"}{"idx": 77598, "node_name": "defaultformat", "Dec": "jformattedtextfield.abstractformatter to be used if a more specific jformattedtextfield.abstractformatter can not be found ."}{"idx": 77600, "node_name": "defaultformat", "Dec": "jformattedtextfield.abstractformatter to be used if a more specific jformattedtextfield.abstractformatter can not be found ."}{"idx": 77601, "node_name": "displayformat", "Dec": "jformattedtextfield.abstractformatter to be used when the jformattedtextfield does not have focus ."}{"idx": 77603, "node_name": "defaultformat", "Dec": "jformattedtextfield.abstractformatter to be used if a more specific jformattedtextfield.abstractformatter can not be found ."}{"idx": 77604, "node_name": "displayformat", "Dec": "jformattedtextfield.abstractformatter to be used when the jformattedtextfield does not have focus ."}{"idx": 77605, "node_name": "editformat", "Dec": "jformattedtextfield.abstractformatter to be used when the jformattedtextfield has focus ."}{"idx": 77607, "node_name": "defaultformat", "Dec": "jformattedtextfield.abstractformatter to be used if a more specific jformattedtextfield.abstractformatter can not be found ."}{"idx": 77608, "node_name": "displayformat", "Dec": "jformattedtextfield.abstractformatter to be used when the jformattedtextfield does not have focus ."}{"idx": 77609, "node_name": "editformat", "Dec": "jformattedtextfield.abstractformatter to be used when the jformattedtextfield has focus ."}{"idx": 77610, "node_name": "nullformat", "Dec": "jformattedtextfield.abstractformatter to be used when the jformattedtextfield has a null value ."}{"idx": 77612, "node_name": "atf", "Dec": "jformattedtextfield.abstractformatter used if a more specific is not specified"}{"idx": 77615, "node_name": "atf", "Dec": "jformattedtextfield.abstractformatter to use when the jformattedtextfield does not have focus"}{"idx": 77618, "node_name": "atf", "Dec": "jformattedtextfield.abstractformatter to use when the component has focus"}{"idx": 77621, "node_name": "atf", "Dec": "jformattedtextfield.abstractformatter to use when the value of the jformattedtextfield is null ."}{"idx": 77624, "node_name": "source", "Dec": "jformattedtextfield requesting jformattedtextfield.abstractformatter"}{"idx": 77627, "node_name": "c", "Dec": "the color for the highlight"}{"idx": 77630, "node_name": "g", "Dec": "the graphics context"}{"idx": 77631, "node_name": "offs0", "Dec": "the starting model offset > = 0"}{"idx": 77632, "node_name": "offs1", "Dec": "the ending model offset > = offs1"}{"idx": 77633, "node_name": "bounds", "Dec": "the bounding box for the highlight"}{"idx": 77634, "node_name": "c", "Dec": "the editor"}{"idx": 77636, "node_name": "g", "Dec": "the graphics context"}{"idx": 77637, "node_name": "offs0", "Dec": "the starting model offset > = 0"}{"idx": 77638, "node_name": "offs1", "Dec": "the ending model offset > = offs1"}{"idx": 77639, "node_name": "bounds", "Dec": "the bounding box of the view , which is not necessarily the region to paint ."}{"idx": 77640, "node_name": "c", "Dec": "the editor"}{"idx": 77641, "node_name": "view", "Dec": "view painting for"}{"idx": 77646, "node_name": "g", "Dec": "the graphics context"}{"idx": 77648, "node_name": "c", "Dec": "the editor component"}{"idx": 77650, "node_name": "c", "Dec": "the component"}{"idx": 77652, "node_name": "p0", "Dec": "the start offset of the range to highlight > = 0"}{"idx": 77653, "node_name": "p1", "Dec": "the end offset of the range to highlight > = p0"}{"idx": 77654, "node_name": "p", "Dec": "the painter to use to actually render the highlight"}{"idx": 77656, "node_name": "tag", "Dec": "the reference to the highlight"}{"idx": 77659, "node_name": "tag", "Dec": "the highlight tag"}{"idx": 77660, "node_name": "p0", "Dec": "the beginning of the range > = 0"}{"idx": 77661, "node_name": "p1", "Dec": "the end of the range > = p0"}{"idx": 77664, "node_name": "g", "Dec": "graphics used to draw"}{"idx": 77665, "node_name": "p0", "Dec": "starting offset of view"}{"idx": 77666, "node_name": "p1", "Dec": "ending offset of view"}{"idx": 77667, "node_name": "viewbounds", "Dec": "bounds of view"}{"idx": 77668, "node_name": "editor", "Dec": "jtextcomponent"}{"idx": 77669, "node_name": "view", "Dec": "view instance being rendered"}{"idx": 77671, "node_name": "newvalue", "Dec": "the new value"}{"idx": 77679, "node_name": "element", "Dec": "the element"}{"idx": 77680, "node_name": "newattributes", "Dec": "the new attributes"}{"idx": 77681, "node_name": "isreplacing", "Dec": "true if all the attributes in the element were removed first ."}{"idx": 77686, "node_name": "root", "Dec": "the root element"}{"idx": 77689, "node_name": "offset", "Dec": "the starting offset > = 0"}{"idx": 77690, "node_name": "length", "Dec": "the length > = 0"}{"idx": 77691, "node_name": "data", "Dec": "the data to insert"}{"idx": 77692, "node_name": "de", "Dec": "the event capturing this edit"}{"idx": 77694, "node_name": "offset", "Dec": "the starting offset > = 0"}{"idx": 77695, "node_name": "length", "Dec": "the length > = 0"}{"idx": 77696, "node_name": "de", "Dec": "the event capturing this edit"}{"idx": 77698, "node_name": "offset", "Dec": "the starting offset > = 0"}{"idx": 77699, "node_name": "length", "Dec": "the length > = 0"}{"idx": 77700, "node_name": "de", "Dec": "the event capturing this edit"}{"idx": 77702, "node_name": "data", "Dec": "the elements to insert"}{"idx": 77706, "node_name": "parent", "Dec": "the parent element"}{"idx": 77707, "node_name": "clonee", "Dec": "the element to be cloned"}{"idx": 77717, "node_name": "a", "Dec": "the attributes for the element"}{"idx": 77718, "node_name": "type", "Dec": "the type of the element ( starttagtype , endtagtype , contenttype )"}{"idx": 77720, "node_name": "a", "Dec": "the attributes for the element"}{"idx": 77721, "node_name": "type", "Dec": "the type of the element ( starttagtype , endtagtype , contenttype )"}{"idx": 77722, "node_name": "len", "Dec": "the length > = 0"}{"idx": 77724, "node_name": "a", "Dec": "the attributes for the element"}{"idx": 77725, "node_name": "type", "Dec": "the type of the element ( starttagtype , endtagtype , contenttype )"}{"idx": 77726, "node_name": "txt", "Dec": "the text for the element"}{"idx": 77727, "node_name": "offs", "Dec": "the offset into the text > = 0"}{"idx": 77728, "node_name": "len", "Dec": "the length of the text > = 0"}{"idx": 77730, "node_name": "type", "Dec": "the type of the element ( starttagtype , endtagtype , contenttype )"}{"idx": 77733, "node_name": "direction", "Dec": "the direction ( joinpreviousdirection , joinnextdirection )"}{"idx": 77744, "node_name": "c", "Dec": "the container for the content"}{"idx": 77745, "node_name": "styles", "Dec": "resources and style definitions which may be shared across documents"}{"idx": 77747, "node_name": "styles", "Dec": "the styles"}{"idx": 77751, "node_name": "data", "Dec": "the element data"}{"idx": 77753, "node_name": "offset", "Dec": "the starting offset > = 0"}{"idx": 77754, "node_name": "data", "Dec": "the element data"}{"idx": 77756, "node_name": "elem", "Dec": "the element to remove"}{"idx": 77758, "node_name": "nm", "Dec": "the name of the style ( must be unique within the collection of named styles ) . the name may be null if the style is unnamed , but the caller is responsible for managing the reference returned as an unnamed style can't be fetched by name . an unnamed style may be useful for things like character attribute overrides such as found in a style run ."}{"idx": 77759, "node_name": "parent", "Dec": "the parent style . this may be null if unspecified attributes need not be resolved in some other style ."}{"idx": 77761, "node_name": "nm", "Dec": "the name of the style to remove"}{"idx": 77763, "node_name": "nm", "Dec": "the name of the style"}{"idx": 77766, "node_name": "pos", "Dec": "the offset from the start of the document > = 0"}{"idx": 77767, "node_name": "s", "Dec": "the logical style to assign to the paragraph , null if none"}{"idx": 77769, "node_name": "p", "Dec": "the location to translate to a paragraph and determine the logical style assigned > = 0 . this is an offset from the start of the document ."}{"idx": 77771, "node_name": "offset", "Dec": "the offset in the document > = 0"}{"idx": 77772, "node_name": "length", "Dec": "the length > = 0"}{"idx": 77773, "node_name": "s", "Dec": "the attributes"}{"idx": 77774, "node_name": "replace", "Dec": "true if the previous attributes should be replaced before setting the new attributes"}{"idx": 77776, "node_name": "offset", "Dec": "the offset into the paragraph > = 0"}{"idx": 77777, "node_name": "length", "Dec": "the number of characters affected > = 0"}{"idx": 77778, "node_name": "s", "Dec": "the attributes"}{"idx": 77779, "node_name": "replace", "Dec": "whether to replace existing attributes , or merge them"}{"idx": 77781, "node_name": "pos", "Dec": "the starting offset > = 0"}{"idx": 77783, "node_name": "pos", "Dec": "the position in the document > = 0"}{"idx": 77785, "node_name": "chng", "Dec": "a description of the document change"}{"idx": 77786, "node_name": "attr", "Dec": "the attributes"}{"idx": 77788, "node_name": "chng", "Dec": "a description of the document change"}{"idx": 77791, "node_name": "attr", "Dec": "the attribute set"}{"idx": 77793, "node_name": "attr", "Dec": "the attribute set"}{"idx": 77795, "node_name": "attr", "Dec": "the attribute set"}{"idx": 77797, "node_name": "style", "Dec": "the style that has changed ."}{"idx": 77799, "node_name": "listener", "Dec": "the listener"}{"idx": 77801, "node_name": "listener", "Dec": "the listener"}{"idx": 77811, "node_name": "listener", "Dec": "the observer to register"}{"idx": 77813, "node_name": "listener", "Dec": "the observer to register"}{"idx": 77815, "node_name": "listener", "Dec": "the observer to register"}{"idx": 77817, "node_name": "listener", "Dec": "the observer to register"}{"idx": 77819, "node_name": "key", "Dec": "a non-null property key"}{"idx": 77821, "node_name": "key", "Dec": "the non-null property key"}{"idx": 77822, "node_name": "value", "Dec": "the property value"}{"idx": 77824, "node_name": "offs", "Dec": "the offset from the beginning > = 0"}{"idx": 77825, "node_name": "len", "Dec": "the number of characters to remove > = 0"}{"idx": 77827, "node_name": "offset", "Dec": "the offset into the document to insert the content > = 0 . all positions that track change at or after the given location will move ."}{"idx": 77828, "node_name": "str", "Dec": "the string to insert"}{"idx": 77829, "node_name": "a", "Dec": "the attributes to associate with the inserted content . this may be null if there are no attributes ."}{"idx": 77831, "node_name": "offset", "Dec": "the offset into the document representing the desired start of the text > = 0"}{"idx": 77832, "node_name": "length", "Dec": "the length of the desired string > = 0"}{"idx": 77834, "node_name": "offset", "Dec": "the offset into the document representing the desired start of the text > = 0"}{"idx": 77835, "node_name": "length", "Dec": "the length of the desired string > = 0"}{"idx": 77836, "node_name": "txt", "Dec": "the segment object to return the text in"}{"idx": 77840, "node_name": "offs", "Dec": "the offset from the start of the document > = 0"}{"idx": 77844, "node_name": "r", "Dec": "a runnable used to render the model"}{"idx": 77849, "node_name": "offset", "Dec": "the offset from the beginning > = 0"}{"idx": 77850, "node_name": "length", "Dec": "the number of characters to remove > = 0"}{"idx": 77852, "node_name": "offset", "Dec": "the offset into the document to insert the content > = 0 . all positions that track change at or after the given location will move ."}{"idx": 77853, "node_name": "string", "Dec": "the string to insert"}{"idx": 77854, "node_name": "attr", "Dec": "the attributes to associate with the inserted content . this may be null if there are no attributes ."}{"idx": 77856, "node_name": "offset", "Dec": "location in document"}{"idx": 77857, "node_name": "length", "Dec": "length of text to delete"}{"idx": 77858, "node_name": "string", "Dec": "text to insert , null indicates no text to insert"}{"idx": 77859, "node_name": "attrs", "Dec": "attributeset indicating attributes of inserted text , null is legal ."}{"idx": 77863, "node_name": "fb", "Dec": "filterbypass that can be used to mutate document"}{"idx": 77864, "node_name": "offset", "Dec": "the offset from the beginning > = 0"}{"idx": 77865, "node_name": "length", "Dec": "the number of characters to remove > = 0"}{"idx": 77867, "node_name": "fb", "Dec": "filterbypass that can be used to mutate document"}{"idx": 77868, "node_name": "offset", "Dec": "the offset into the document to insert the content > = 0 . all positions that track change at or after the given location will move ."}{"idx": 77869, "node_name": "string", "Dec": "the string to insert"}{"idx": 77870, "node_name": "attr", "Dec": "the attributes to associate with the inserted content . this may be null if there are no attributes ."}{"idx": 77872, "node_name": "fb", "Dec": "filterbypass that can be used to mutate document"}{"idx": 77873, "node_name": "offset", "Dec": "location in document"}{"idx": 77874, "node_name": "length", "Dec": "length of text to delete"}{"idx": 77875, "node_name": "text", "Dec": "text to insert , null indicates no text to insert"}{"idx": 77876, "node_name": "attrs", "Dec": "attributeset indicating attributes of inserted text , null is legal ."}{"idx": 77881, "node_name": "c", "Dec": "the jeditorpane"}{"idx": 77883, "node_name": "c", "Dec": "the jeditorpane"}{"idx": 77890, "node_name": "in", "Dec": "the stream to read from"}{"idx": 77891, "node_name": "doc", "Dec": "the destination for the insertion ."}{"idx": 77892, "node_name": "pos", "Dec": "the location in the document to place the content > = 0 ."}{"idx": 77894, "node_name": "out", "Dec": "the stream to write to"}{"idx": 77895, "node_name": "doc", "Dec": "the source for the write ."}{"idx": 77896, "node_name": "pos", "Dec": "the location in the document to fetch the content from > = 0 ."}{"idx": 77897, "node_name": "len", "Dec": "the amount to write out > = 0 ."}{"idx": 77899, "node_name": "in", "Dec": "the stream to read from"}{"idx": 77900, "node_name": "doc", "Dec": "the destination for the insertion ."}{"idx": 77901, "node_name": "pos", "Dec": "the location in the document to place the content > = 0 ."}{"idx": 77903, "node_name": "out", "Dec": "the stream to write to"}{"idx": 77904, "node_name": "doc", "Dec": "the source for the write ."}{"idx": 77905, "node_name": "pos", "Dec": "the location in the document to fetch the content > = 0 ."}{"idx": 77906, "node_name": "len", "Dec": "the amount to write out > = 0 ."}{"idx": 77915, "node_name": "offset", "Dec": "the specified offset > = 0"}{"idx": 77918, "node_name": "index", "Dec": "the specified index > = 0"}{"idx": 77922, "node_name": "document", "Dec": "a document"}{"idx": 77924, "node_name": "root", "Dec": "the root element"}{"idx": 77933, "node_name": "elem", "Dec": "the element"}{"idx": 77936, "node_name": "a", "Dec": "the allocation given to the view , which may need to be adjusted ."}{"idx": 77938, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 77939, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77941, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 77943, "node_name": "axis", "Dec": "view.x_axis or view.y_axis"}{"idx": 77945, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 77946, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77947, "node_name": "b", "Dec": "the bias toward the previous character or the next character represented by the offset , in case the position is a boundary of two views ; b will have one of these values : position.bias.forward position.bias.backward"}{"idx": 77949, "node_name": "fx", "Dec": "the x coordinate > = 0.0f"}{"idx": 77950, "node_name": "fy", "Dec": "the y coordinate > = 0.0f"}{"idx": 77951, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 77952, "node_name": "bias", "Dec": "the returned bias"}{"idx": 77954, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 77955, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 77956, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 77958, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 77959, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 77960, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 77964, "node_name": "fv", "Dec": "the flow view"}{"idx": 77965, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 77966, "node_name": "alloc", "Dec": "the current allocation of the view inside of the insets . this value will be null if the view has not yet been displayed ."}{"idx": 77968, "node_name": "fv", "Dec": "the flow view"}{"idx": 77969, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 77970, "node_name": "alloc", "Dec": "the current allocation of the view inside of the insets ."}{"idx": 77972, "node_name": "fv", "Dec": "the flowview containing the changes"}{"idx": 77973, "node_name": "e", "Dec": "the documentevent describing the changes done to the document"}{"idx": 77974, "node_name": "alloc", "Dec": "bounds of the view"}{"idx": 77976, "node_name": "fv", "Dec": "the flowview"}{"idx": 77978, "node_name": "fv", "Dec": "the view to reflow"}{"idx": 77980, "node_name": "fv", "Dec": "the flow view"}{"idx": 77981, "node_name": "rowindex", "Dec": "the index of the row to fill in with views . the row is assumed to be empty on entry ."}{"idx": 77982, "node_name": "pos", "Dec": "the current position in the children of this views element from which to start ."}{"idx": 77984, "node_name": "fv", "Dec": "the flow view"}{"idx": 77985, "node_name": "rowindex", "Dec": "the row to adjust to the current layout span ."}{"idx": 77986, "node_name": "desiredspan", "Dec": "the current layout span > = 0"}{"idx": 77987, "node_name": "x", "Dec": "the location r starts at ."}{"idx": 77989, "node_name": "fv", "Dec": "the view holding the flow"}{"idx": 77990, "node_name": "startoffset", "Dec": "the start location for the view being created"}{"idx": 77991, "node_name": "spanleft", "Dec": "the about of span left to fill in the row"}{"idx": 77992, "node_name": "rowindex", "Dec": "the row the view will be placed into"}{"idx": 77998, "node_name": "elem", "Dec": "the element that this view is responsible for"}{"idx": 77999, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 78002, "node_name": "index", "Dec": "the index of the row being updated . this should be a value > = 0 and < getviewcount() ."}{"idx": 78004, "node_name": "index", "Dec": "the index of the row being updated . this should be a value > = 0 and < getviewcount() ."}{"idx": 78007, "node_name": "f", "Dec": "the view factory"}{"idx": 78009, "node_name": "pos", "Dec": "the position > = 0"}{"idx": 78011, "node_name": "width", "Dec": "the width to lay out against > = 0 . this is the width inside of the inset area ."}{"idx": 78012, "node_name": "height", "Dec": "the height to lay out against > = 0 this is the height inside of the inset area ."}{"idx": 78014, "node_name": "axis", "Dec": "the axis being studied"}{"idx": 78015, "node_name": "r", "Dec": "the sizerequirements object ; if null one will be created"}{"idx": 78017, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 78018, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78019, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 78021, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 78022, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78023, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 78025, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 78026, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78027, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 78034, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 78037, "node_name": "elem", "Dec": "the element to decorate"}{"idx": 78040, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 78042, "node_name": "evt", "Dec": "the actionevent ."}{"idx": 78044, "node_name": "data", "Dec": "data to submit"}{"idx": 78046, "node_name": "imagedata", "Dec": "the mouse click coordinates ."}{"idx": 78052, "node_name": "initiallength", "Dec": "the initial size"}{"idx": 78057, "node_name": "where", "Dec": "the starting position > = 0 , < length()"}{"idx": 78058, "node_name": "str", "Dec": "the non-null string to insert"}{"idx": 78060, "node_name": "where", "Dec": "the starting position > = 0 , where + nitems < length()"}{"idx": 78061, "node_name": "nitems", "Dec": "the number of characters to remove > = 0"}{"idx": 78063, "node_name": "where", "Dec": "the starting position > = 0"}{"idx": 78064, "node_name": "len", "Dec": "the length to retrieve > = 0"}{"idx": 78066, "node_name": "where", "Dec": "the starting position > = 0 , where + len <= length()"}{"idx": 78067, "node_name": "len", "Dec": "the number of characters to retrieve > = 0"}{"idx": 78068, "node_name": "chars", "Dec": "the segment object to return the characters in"}{"idx": 78070, "node_name": "offset", "Dec": "the offset to track > = 0"}{"idx": 78077, "node_name": "v", "Dec": "the vector to use , with a new one created on null"}{"idx": 78078, "node_name": "offset", "Dec": "the starting offset > = 0"}{"idx": 78079, "node_name": "length", "Dec": "the length > = 0"}{"idx": 78081, "node_name": "positions", "Dec": "the undoposref instances to reset"}{"idx": 78082, "node_name": "offset", "Dec": "where the string was inserted"}{"idx": 78083, "node_name": "length", "Dec": "length of inserted string"}{"idx": 78088, "node_name": "position", "Dec": "the location to make the replacement . this is not the location in the underlying storage array , but the location in the contiguous space being modeled ."}{"idx": 78089, "node_name": "rmsize", "Dec": "the number of items to remove"}{"idx": 78090, "node_name": "additems", "Dec": "the new items to place in storage ."}{"idx": 78094, "node_name": "v", "Dec": "the glyphview"}{"idx": 78095, "node_name": "p0", "Dec": "the beginning position"}{"idx": 78096, "node_name": "p1", "Dec": "the ending position"}{"idx": 78097, "node_name": "e", "Dec": "how to expand the tabs when encountered"}{"idx": 78098, "node_name": "x", "Dec": "the x coordinate"}{"idx": 78100, "node_name": "v", "Dec": "the glyphview"}{"idx": 78102, "node_name": "v", "Dec": "the glyphview"}{"idx": 78104, "node_name": "v", "Dec": "the glyphview"}{"idx": 78106, "node_name": "v", "Dec": "the glyphview"}{"idx": 78107, "node_name": "g", "Dec": "the graphics context"}{"idx": 78108, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78109, "node_name": "p0", "Dec": "the beginning position"}{"idx": 78110, "node_name": "p1", "Dec": "the ending position"}{"idx": 78112, "node_name": "v", "Dec": "the glyphview containing the destination coordinate space"}{"idx": 78113, "node_name": "pos", "Dec": "the position to convert"}{"idx": 78114, "node_name": "bias", "Dec": "either position.bias.forward or position.bias.backward"}{"idx": 78115, "node_name": "a", "Dec": "bounds of the view"}{"idx": 78117, "node_name": "v", "Dec": "the glyphview to provide a mapping for"}{"idx": 78118, "node_name": "x", "Dec": "the x coordinate"}{"idx": 78119, "node_name": "y", "Dec": "the y coordinate"}{"idx": 78120, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78121, "node_name": "biasreturn", "Dec": "either position.bias.forward or position.bias.backward is returned as the zero-th element of this array"}{"idx": 78123, "node_name": "v", "Dec": "the view to find the model location to break at ."}{"idx": 78124, "node_name": "p0", "Dec": "the location in the model where the fragment should start it's representation > = 0 ."}{"idx": 78125, "node_name": "x", "Dec": "the graphic location along the axis that the broken view would occupy > = 0 . this may be useful for things like tab calculations ."}{"idx": 78126, "node_name": "len", "Dec": "specifies the distance into the view where a potential break is desired > = 0 ."}{"idx": 78128, "node_name": "v", "Dec": "the glyphview to provide a painter for"}{"idx": 78129, "node_name": "p0", "Dec": "the starting document offset > = 0"}{"idx": 78130, "node_name": "p1", "Dec": "the ending document offset > = p0"}{"idx": 78132, "node_name": "v", "Dec": "the view to use"}{"idx": 78133, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 78134, "node_name": "b", "Dec": "either position.bias.forward or position.bias.backward"}{"idx": 78135, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78136, "node_name": "direction", "Dec": "the direction from the current position that can be thought of as the arrow keys typically found on a keyboard . this may be swingconstants.west , swingconstants.east , swingconstants.north , or swingconstants.south ."}{"idx": 78137, "node_name": "biasret", "Dec": "either position.bias.forward or position.bias.backward is returned as the zero-th element of this array"}{"idx": 78140, "node_name": "elem", "Dec": "the element"}{"idx": 78144, "node_name": "p", "Dec": "the painter to use for rendering glyphs"}{"idx": 78146, "node_name": "p0", "Dec": "the starting document offset > = 0"}{"idx": 78147, "node_name": "p1", "Dec": "the ending document offset > = p0"}{"idx": 78158, "node_name": "x", "Dec": "the position the view would be located at for the purpose of tab expansion > = 0 ."}{"idx": 78159, "node_name": "e", "Dec": "how to expand the tabs when encountered ."}{"idx": 78161, "node_name": "p0", "Dec": "the starting document offset > = 0"}{"idx": 78162, "node_name": "p1", "Dec": "the ending document offset > = p0"}{"idx": 78166, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 78167, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78169, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 78171, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 78173, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 78175, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 78176, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78177, "node_name": "b", "Dec": "either position.bias.forward or position.bias.backward"}{"idx": 78179, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 78180, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 78181, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78182, "node_name": "biasreturn", "Dec": "either position.bias.forward or position.bias.backward is returned as the zero-th element of this array"}{"idx": 78185, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 78186, "node_name": "p0", "Dec": "the location in the model where the fragment should start it's representation > = 0 ."}{"idx": 78187, "node_name": "pos", "Dec": "the position along the axis that the broken view would occupy > = 0 . this may be useful for things like tab calculations ."}{"idx": 78188, "node_name": "len", "Dec": "specifies the distance along the axis where a potential break is desired > = 0 ."}{"idx": 78190, "node_name": "p0", "Dec": "the starting offset > = 0 . this should be a value greater or equal to the element starting offset and less than the element ending offset ."}{"idx": 78191, "node_name": "p1", "Dec": "the ending offset > p0 . this should be a value less than or equal to the elements end offset and greater than the elements starting offset ."}{"idx": 78193, "node_name": "pos", "Dec": "the position to convert"}{"idx": 78194, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78195, "node_name": "direction", "Dec": "the direction from the current position that can be thought of as the arrow keys typically found on a keyboard . this may be swingconstants.west , swingconstants.east , swingconstants.north , or swingconstants.south ."}{"idx": 78196, "node_name": "b", "Dec": "the bias"}{"idx": 78197, "node_name": "biasret", "Dec": "the returned bias"}{"idx": 78199, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 78200, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78201, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 78203, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 78204, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78205, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 78207, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 78208, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78209, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 78216, "node_name": "g", "Dec": "the graphics context"}{"idx": 78217, "node_name": "p0", "Dec": "the starting offset in the model > = 0"}{"idx": 78218, "node_name": "p1", "Dec": "the ending offset in the model > = p0"}{"idx": 78219, "node_name": "bounds", "Dec": "the bounding box for the highlight"}{"idx": 78220, "node_name": "c", "Dec": "the editor"}{"idx": 78223, "node_name": "c", "Dec": "the jtextcomponent editor"}{"idx": 78225, "node_name": "c", "Dec": "the jtextcomponent editor"}{"idx": 78227, "node_name": "g", "Dec": "the graphics context ."}{"idx": 78229, "node_name": "p0", "Dec": "the beginning of the range > = 0"}{"idx": 78230, "node_name": "p1", "Dec": "the end of the range > = p0"}{"idx": 78231, "node_name": "p", "Dec": "the painter to use for the actual highlighting"}{"idx": 78233, "node_name": "tag", "Dec": "which highlight to remove"}{"idx": 78236, "node_name": "tag", "Dec": "which highlight to change"}{"idx": 78237, "node_name": "p0", "Dec": "the beginning of the range > = 0"}{"idx": 78238, "node_name": "p1", "Dec": "the end of the range > = p0"}{"idx": 78327, "node_name": "tagname", "Dec": "the string name requested"}{"idx": 78329, "node_name": "attr", "Dec": "the set of attributes to use to try to fetch a value"}{"idx": 78330, "node_name": "key", "Dec": "the key to use to fetch the value"}{"idx": 78331, "node_name": "def", "Dec": "the default value to use if the attribute isn't defined or there is an error converting to an integer"}{"idx": 78334, "node_name": "attname", "Dec": "the string requested"}{"idx": 78414, "node_name": "id", "Dec": "the id of the new tag"}{"idx": 78416, "node_name": "id", "Dec": "the id of the new tag"}{"idx": 78417, "node_name": "causesbreak", "Dec": "true if this tag causes a break to the flow of data"}{"idx": 78418, "node_name": "isblock", "Dec": "true if the tag is used to add structure to a document"}{"idx": 78425, "node_name": "id", "Dec": "the id of the new tag"}{"idx": 78428, "node_name": "obj", "Dec": "the object to compare this tag with"}{"idx": 78431, "node_name": "parent", "Dec": "the parent element"}{"idx": 78432, "node_name": "a", "Dec": "the attributes for the element"}{"idx": 78449, "node_name": "offset", "Dec": "the starting offset"}{"idx": 78451, "node_name": "offset", "Dec": "the starting offset"}{"idx": 78452, "node_name": "popdepth", "Dec": "how many parents to ascend before insert new element"}{"idx": 78453, "node_name": "pushdepth", "Dec": "how many parents to descend ( relative to popdepth ) before inserting"}{"idx": 78454, "node_name": "inserttag", "Dec": "a tag to insert ( may be null )"}{"idx": 78457, "node_name": "data", "Dec": "a data"}{"idx": 78458, "node_name": "pos", "Dec": "a position"}{"idx": 78460, "node_name": "t", "Dec": "an html tag"}{"idx": 78461, "node_name": "a", "Dec": "a set of attributes"}{"idx": 78462, "node_name": "pos", "Dec": "a position"}{"idx": 78464, "node_name": "t", "Dec": "an html tag"}{"idx": 78465, "node_name": "pos", "Dec": "a position"}{"idx": 78467, "node_name": "t", "Dec": "an html tag"}{"idx": 78468, "node_name": "a", "Dec": "a set of attributes"}{"idx": 78469, "node_name": "pos", "Dec": "a position"}{"idx": 78471, "node_name": "eol", "Dec": "value of eol"}{"idx": 78473, "node_name": "t", "Dec": "an html tag"}{"idx": 78474, "node_name": "a", "Dec": "tag action handler"}{"idx": 78478, "node_name": "data", "Dec": "the given content"}{"idx": 78480, "node_name": "data", "Dec": "the given content"}{"idx": 78482, "node_name": "t", "Dec": "an html tag"}{"idx": 78483, "node_name": "attr", "Dec": "the attribute set"}{"idx": 78485, "node_name": "t", "Dec": "the html tag"}{"idx": 78487, "node_name": "data", "Dec": "the content to add"}{"idx": 78488, "node_name": "offs", "Dec": "the initial offset"}{"idx": 78489, "node_name": "length", "Dec": "the length"}{"idx": 78491, "node_name": "data", "Dec": "the content to add"}{"idx": 78492, "node_name": "offs", "Dec": "the initial offset"}{"idx": 78493, "node_name": "length", "Dec": "the length"}{"idx": 78494, "node_name": "generateimpliedpifnecessary", "Dec": "whether to generate implied paragraphs"}{"idx": 78496, "node_name": "t", "Dec": "an html tag"}{"idx": 78497, "node_name": "a", "Dec": "the attribute set"}{"idx": 78507, "node_name": "t", "Dec": "the html tag"}{"idx": 78508, "node_name": "a", "Dec": "the attributes"}{"idx": 78510, "node_name": "t", "Dec": "the html tag"}{"idx": 78523, "node_name": "styles", "Dec": "the styles"}{"idx": 78525, "node_name": "c", "Dec": "the container for the content"}{"idx": 78526, "node_name": "styles", "Dec": "the styles"}{"idx": 78528, "node_name": "pos", "Dec": "the starting position"}{"idx": 78530, "node_name": "pos", "Dec": "the starting position"}{"idx": 78531, "node_name": "popdepth", "Dec": "the number of elementspec.endtagtypes to generate before inserting"}{"idx": 78532, "node_name": "pushdepth", "Dec": "the number of elementspec.starttagtypes with a direction of elementspec.joinnextdirection that should be generated before inserting , but after the end tags have been generated"}{"idx": 78533, "node_name": "inserttag", "Dec": "the first tag to start inserting into document"}{"idx": 78536, "node_name": "u", "Dec": "the desired base url"}{"idx": 78538, "node_name": "offset", "Dec": "the starting offset"}{"idx": 78539, "node_name": "data", "Dec": "the element data"}{"idx": 78541, "node_name": "chng", "Dec": "a description of the document change"}{"idx": 78542, "node_name": "attr", "Dec": "the attributes"}{"idx": 78544, "node_name": "data", "Dec": "the new contents of the document"}{"idx": 78546, "node_name": "offset", "Dec": "the offset into the paragraph ( must be at least 0 )"}{"idx": 78547, "node_name": "length", "Dec": "the number of characters affected ( must be at least 0 )"}{"idx": 78548, "node_name": "s", "Dec": "the attributes"}{"idx": 78549, "node_name": "replace", "Dec": "whether to replace existing attributes , or merge them"}{"idx": 78552, "node_name": "t", "Dec": "the requested html.tag"}{"idx": 78554, "node_name": "parent", "Dec": "the parent element"}{"idx": 78555, "node_name": "a", "Dec": "the attributes for the element"}{"idx": 78556, "node_name": "p0", "Dec": "the beginning of the range ( must be at least 0 )"}{"idx": 78557, "node_name": "p1", "Dec": "the end of the range ( must be at least p0 )"}{"idx": 78559, "node_name": "parent", "Dec": "the parent element"}{"idx": 78560, "node_name": "a", "Dec": "the attributes"}{"idx": 78563, "node_name": "n", "Dec": "the number of tokens to buffer"}{"idx": 78566, "node_name": "preservestags", "Dec": "true if unknown tags should be saved in the model , otherwise tags are dropped"}{"idx": 78569, "node_name": "e", "Dec": "the event"}{"idx": 78571, "node_name": "parser", "Dec": "the parser to be used for text insertion"}{"idx": 78574, "node_name": "elem", "Dec": "the branch element whose children will be replaced"}{"idx": 78575, "node_name": "htmltext", "Dec": "the string to be parsed and assigned to elem"}{"idx": 78577, "node_name": "elem", "Dec": "the element to replace"}{"idx": 78578, "node_name": "htmltext", "Dec": "the string to be parsed and inserted in place of elem"}{"idx": 78580, "node_name": "elem", "Dec": "the branch element to be the root for the new text"}{"idx": 78581, "node_name": "htmltext", "Dec": "the string to be parsed and assigned to elem"}{"idx": 78583, "node_name": "elem", "Dec": "the element to be the root for the new text"}{"idx": 78584, "node_name": "htmltext", "Dec": "the string to be parsed and assigned to elem"}{"idx": 78586, "node_name": "elem", "Dec": "the element the content is inserted before"}{"idx": 78587, "node_name": "htmltext", "Dec": "the string to be parsed and inserted before elem"}{"idx": 78589, "node_name": "elem", "Dec": "the element the content is inserted after"}{"idx": 78590, "node_name": "htmltext", "Dec": "the string to be parsed and inserted after elem"}{"idx": 78592, "node_name": "id", "Dec": "the string representing the desired attribute"}{"idx": 78594, "node_name": "e", "Dec": "the root element where the search begins"}{"idx": 78595, "node_name": "attribute", "Dec": "the desired attribute"}{"idx": 78596, "node_name": "value", "Dec": "the values for the specified attribute"}{"idx": 78598, "node_name": "e", "Dec": "the event"}{"idx": 78600, "node_name": "e", "Dec": "the event"}{"idx": 78603, "node_name": "parent", "Dec": "the parent element"}{"idx": 78604, "node_name": "a", "Dec": "the element attributes"}{"idx": 78605, "node_name": "offs0", "Dec": "the start offset ( must be at least 0 )"}{"idx": 78606, "node_name": "offs1", "Dec": "the end offset ( must be at least offs0 )"}{"idx": 78612, "node_name": "elem", "Dec": "the element"}{"idx": 78615, "node_name": "name", "Dec": "the name of the action"}{"idx": 78617, "node_name": "e", "Dec": "the jeditorpane"}{"idx": 78619, "node_name": "e", "Dec": "the jeditorpane"}{"idx": 78621, "node_name": "doc", "Dec": "an instance of htmldocument"}{"idx": 78622, "node_name": "offset", "Dec": "value of offset"}{"idx": 78624, "node_name": "doc", "Dec": "an instance of htmldocument"}{"idx": 78625, "node_name": "offset", "Dec": "an offset to start from"}{"idx": 78626, "node_name": "tag", "Dec": "tag to represent"}{"idx": 78628, "node_name": "doc", "Dec": "an instance of htmldocument"}{"idx": 78629, "node_name": "offset", "Dec": "the specified offset > = 0"}{"idx": 78630, "node_name": "tag", "Dec": "an instance of html.tag"}{"idx": 78638, "node_name": "name", "Dec": "a name of the action"}{"idx": 78639, "node_name": "html", "Dec": "an html string"}{"idx": 78640, "node_name": "parenttag", "Dec": "a parent tag"}{"idx": 78641, "node_name": "addtag", "Dec": "the first tag to start inserting into document"}{"idx": 78643, "node_name": "name", "Dec": "a name of the action"}{"idx": 78644, "node_name": "html", "Dec": "an html string"}{"idx": 78645, "node_name": "parenttag", "Dec": "a parent tag"}{"idx": 78646, "node_name": "addtag", "Dec": "the first tag to start inserting into document"}{"idx": 78647, "node_name": "alternateparenttag", "Dec": "an alternative parent tag"}{"idx": 78648, "node_name": "alternateaddtag", "Dec": "an alternative tag"}{"idx": 78650, "node_name": "editor", "Dec": "an instance of jeditorpane"}{"idx": 78651, "node_name": "doc", "Dec": "the document to insert into"}{"idx": 78652, "node_name": "offset", "Dec": "the offset to insert html at"}{"idx": 78653, "node_name": "html", "Dec": "an html string"}{"idx": 78654, "node_name": "popdepth", "Dec": "the number of elementspec.endtagtypes to generate before inserting"}{"idx": 78655, "node_name": "pushdepth", "Dec": "the number of elementspec.starttagtypes with a direction of elementspec.joinnextdirection that should be generated before inserting , but after the end tags have been generated"}{"idx": 78656, "node_name": "addtag", "Dec": "the first tag to start inserting into document"}{"idx": 78658, "node_name": "editor", "Dec": "an instance of jeditorpane"}{"idx": 78659, "node_name": "doc", "Dec": "an instance of htmldocument"}{"idx": 78660, "node_name": "offset", "Dec": "an offset to start from"}{"idx": 78661, "node_name": "insertelement", "Dec": "an instance of element"}{"idx": 78662, "node_name": "html", "Dec": "an html string"}{"idx": 78663, "node_name": "parenttag", "Dec": "a parent tag"}{"idx": 78664, "node_name": "addtag", "Dec": "the first tag to start inserting into document"}{"idx": 78666, "node_name": "ae", "Dec": "the event"}{"idx": 78686, "node_name": "in", "Dec": "the stream to read from"}{"idx": 78687, "node_name": "doc", "Dec": "the destination for the insertion"}{"idx": 78688, "node_name": "pos", "Dec": "the location in the document to place the content"}{"idx": 78690, "node_name": "doc", "Dec": "the document to insert into"}{"idx": 78691, "node_name": "offset", "Dec": "the offset to insert html at"}{"idx": 78692, "node_name": "popdepth", "Dec": "the number of elementspec.endtagtypes to generate before inserting"}{"idx": 78693, "node_name": "html", "Dec": "the html string"}{"idx": 78694, "node_name": "pushdepth", "Dec": "the number of elementspec.starttagtypes with a direction of elementspec.joinnextdirection that should be generated before inserting , but after the end tags have been generated"}{"idx": 78695, "node_name": "inserttag", "Dec": "the first tag to start inserting into document"}{"idx": 78697, "node_name": "out", "Dec": "the stream to write to"}{"idx": 78698, "node_name": "doc", "Dec": "the source for the write"}{"idx": 78699, "node_name": "pos", "Dec": "the location in the document to fetch the content"}{"idx": 78700, "node_name": "len", "Dec": "the amount to write out"}{"idx": 78702, "node_name": "c", "Dec": "the jeditorpane"}{"idx": 78704, "node_name": "c", "Dec": "the jeditorpane"}{"idx": 78706, "node_name": "s", "Dec": "a stylesheet"}{"idx": 78710, "node_name": "element", "Dec": "the element"}{"idx": 78711, "node_name": "set", "Dec": "the attributes"}{"idx": 78714, "node_name": "cursor", "Dec": "a cursor"}{"idx": 78717, "node_name": "cursor", "Dec": "a cursor"}{"idx": 78721, "node_name": "isauto", "Dec": "if true , html form submission is processed automatically ."}{"idx": 78728, "node_name": "e", "Dec": "the mouse event"}{"idx": 78730, "node_name": "pos", "Dec": "the position"}{"idx": 78731, "node_name": "editor", "Dec": "the editor pane"}{"idx": 78735, "node_name": "r", "Dec": "a reader"}{"idx": 78736, "node_name": "cb", "Dec": "a parser callback"}{"idx": 78737, "node_name": "ignorecharset", "Dec": "if true charset is ignoring"}{"idx": 78743, "node_name": "data", "Dec": "a data"}{"idx": 78744, "node_name": "pos", "Dec": "a position"}{"idx": 78746, "node_name": "data", "Dec": "a data"}{"idx": 78747, "node_name": "pos", "Dec": "a position"}{"idx": 78749, "node_name": "t", "Dec": "an html tag"}{"idx": 78750, "node_name": "a", "Dec": "a set of attributes"}{"idx": 78751, "node_name": "pos", "Dec": "a position"}{"idx": 78753, "node_name": "t", "Dec": "an html tag"}{"idx": 78754, "node_name": "pos", "Dec": "a position"}{"idx": 78756, "node_name": "t", "Dec": "an html tag"}{"idx": 78757, "node_name": "a", "Dec": "a set of attributes"}{"idx": 78758, "node_name": "pos", "Dec": "a position"}{"idx": 78760, "node_name": "errormsg", "Dec": "a error message"}{"idx": 78761, "node_name": "pos", "Dec": "a position"}{"idx": 78763, "node_name": "eol", "Dec": "value of eol"}{"idx": 78766, "node_name": "source", "Dec": "the object responsible for the event"}{"idx": 78767, "node_name": "type", "Dec": "the event type"}{"idx": 78768, "node_name": "targeturl", "Dec": "the affected url"}{"idx": 78769, "node_name": "targetframe", "Dec": "the frame to display the document in"}{"idx": 78771, "node_name": "source", "Dec": "the object responsible for the event"}{"idx": 78772, "node_name": "type", "Dec": "the event type"}{"idx": 78773, "node_name": "targeturl", "Dec": "the affected url"}{"idx": 78774, "node_name": "desc", "Dec": "a description"}{"idx": 78775, "node_name": "targetframe", "Dec": "the frame to display the document in"}{"idx": 78777, "node_name": "source", "Dec": "the object responsible for the event"}{"idx": 78778, "node_name": "type", "Dec": "the event type"}{"idx": 78779, "node_name": "targeturl", "Dec": "the affected url"}{"idx": 78780, "node_name": "sourceelement", "Dec": "the element that corresponds to the source of the event"}{"idx": 78781, "node_name": "targetframe", "Dec": "the frame to display the document in"}{"idx": 78783, "node_name": "source", "Dec": "the object responsible for the event"}{"idx": 78784, "node_name": "type", "Dec": "the event type"}{"idx": 78785, "node_name": "targeturl", "Dec": "the affected url"}{"idx": 78786, "node_name": "desc", "Dec": "a description"}{"idx": 78787, "node_name": "sourceelement", "Dec": "the element that corresponds to the source of the event"}{"idx": 78788, "node_name": "targetframe", "Dec": "the frame to display the document in"}{"idx": 78790, "node_name": "source", "Dec": "the object responsible for the event"}{"idx": 78791, "node_name": "type", "Dec": "the event type"}{"idx": 78792, "node_name": "targeturl", "Dec": "the affected url"}{"idx": 78793, "node_name": "desc", "Dec": "a description"}{"idx": 78794, "node_name": "sourceelement", "Dec": "the element that corresponds to the source of the event"}{"idx": 78795, "node_name": "inputevent", "Dec": "inputevent that triggered the hyperlink event"}{"idx": 78796, "node_name": "targetframe", "Dec": "the frame to display the document in"}{"idx": 78800, "node_name": "w", "Dec": "a writer"}{"idx": 78801, "node_name": "doc", "Dec": "an htmldocument"}{"idx": 78803, "node_name": "w", "Dec": "a writer"}{"idx": 78804, "node_name": "doc", "Dec": "an htmldocument"}{"idx": 78805, "node_name": "pos", "Dec": "the document location from which to fetch the content"}{"idx": 78806, "node_name": "len", "Dec": "the amount to write out"}{"idx": 78809, "node_name": "attr", "Dec": "an attributeset"}{"idx": 78811, "node_name": "elem", "Dec": "an element"}{"idx": 78813, "node_name": "attr", "Dec": "an attributeset"}{"idx": 78815, "node_name": "elem", "Dec": "an element"}{"idx": 78817, "node_name": "attr", "Dec": "an attributeset"}{"idx": 78819, "node_name": "elem", "Dec": "an element"}{"idx": 78821, "node_name": "attr", "Dec": "the attributeset associated with the form element"}{"idx": 78823, "node_name": "option", "Dec": "an option"}{"idx": 78825, "node_name": "elem", "Dec": "an element"}{"idx": 78827, "node_name": "elem", "Dec": "an element"}{"idx": 78829, "node_name": "elem", "Dec": "an element"}{"idx": 78831, "node_name": "attr", "Dec": "a set of attributes"}{"idx": 78832, "node_name": "tag", "Dec": "an html tag"}{"idx": 78834, "node_name": "attr", "Dec": "a set of attributes"}{"idx": 78836, "node_name": "attr", "Dec": "a set of attributes"}{"idx": 78839, "node_name": "chars", "Dec": "characters to output"}{"idx": 78840, "node_name": "start", "Dec": "starting index"}{"idx": 78841, "node_name": "length", "Dec": "length of output"}{"idx": 78844, "node_name": "elem", "Dec": "the element to create a view for"}{"idx": 78846, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 78847, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78849, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 78851, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 78853, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 78854, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78855, "node_name": "b", "Dec": "the bias toward the previous character or the next character represented by the offset , in case the position is a boundary of two views ; b will have one of these values : position.bias.forward position.bias.backward"}{"idx": 78857, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 78858, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 78859, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78860, "node_name": "bias", "Dec": "the returned bias"}{"idx": 78863, "node_name": "elem", "Dec": "the element to create a view for"}{"idx": 78870, "node_name": "newvalue", "Dec": "if true the image will be loaded when first asked for , otherwise it will be asynchronously ."}{"idx": 78875, "node_name": "x", "Dec": "the x coordinate"}{"idx": 78876, "node_name": "y", "Dec": "the y coordinate"}{"idx": 78877, "node_name": "allocation", "Dec": "current allocation of the view ."}{"idx": 78880, "node_name": "parent", "Dec": "the new parent , or null if the view is being removed from a parent"}{"idx": 78882, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 78883, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78884, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 78886, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 78887, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78889, "node_name": "axis", "Dec": "may be either x_axis or y_axis"}{"idx": 78891, "node_name": "axis", "Dec": "may be either x_axis or y_axis"}{"idx": 78893, "node_name": "pos", "Dec": "the position to convert"}{"idx": 78894, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78895, "node_name": "b", "Dec": "the bias toward the previous character or the next character represented by the offset , in case the position is a boundary of two views ; b will have one of these values : position.bias.forward position.bias.backward"}{"idx": 78897, "node_name": "x", "Dec": "the x coordinate"}{"idx": 78898, "node_name": "y", "Dec": "the y coordinate"}{"idx": 78899, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 78900, "node_name": "bias", "Dec": "the returned bias"}{"idx": 78902, "node_name": "width", "Dec": "the width > = 0"}{"idx": 78903, "node_name": "height", "Dec": "the height > = 0"}{"idx": 78906, "node_name": "elem", "Dec": "the element"}{"idx": 78908, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 78909, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78910, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 78912, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 78913, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78914, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 78916, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 78917, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 78918, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 78921, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 78922, "node_name": "pos", "Dec": "the potential location of the start of the broken view > = 0 . this may be useful for calculating tab positions ."}{"idx": 78923, "node_name": "len", "Dec": "specifies the relative length from pos where a potential break is desired > = 0 ."}{"idx": 78925, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 78926, "node_name": "offset", "Dec": "the location in the document model that a broken fragment would occupy > = 0 . this would be the starting offset of the fragment returned"}{"idx": 78927, "node_name": "pos", "Dec": "the position along the axis that the broken view would occupy > = 0 . this may be useful for things like tab calculations"}{"idx": 78928, "node_name": "len", "Dec": "specifies the distance along the axis where a potential break is desired > = 0"}{"idx": 78934, "node_name": "format", "Dec": "format instance used for converting from / to strings"}{"idx": 78936, "node_name": "format", "Dec": "format instance used for converting from / to strings"}{"idx": 78939, "node_name": "minimum", "Dec": "minimum legal value that can be input"}{"idx": 78942, "node_name": "max", "Dec": "maximum legal value that can be input"}{"idx": 78945, "node_name": "ftf", "Dec": "jformattedtextfield to format for , may be null indicating uninstall from current jformattedtextfield ."}{"idx": 78947, "node_name": "value", "Dec": "value to convert"}{"idx": 78949, "node_name": "text", "Dec": "string to convert"}{"idx": 78951, "node_name": "offset", "Dec": "offset into text to be examined"}{"idx": 78957, "node_name": "e", "Dec": "the caretevent"}{"idx": 78959, "node_name": "e", "Dec": "the documentevent"}{"idx": 78961, "node_name": "e", "Dec": "the documentevent"}{"idx": 78963, "node_name": "e", "Dec": "the documentevent"}{"idx": 78968, "node_name": "p", "Dec": "the point in local coordinates"}{"idx": 78970, "node_name": "i", "Dec": "the index into the string \u2265 0"}{"idx": 78974, "node_name": "i", "Dec": "the zero-based index into the text"}{"idx": 78979, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 78980, "node_name": "index", "Dec": "an index within the text"}{"idx": 78982, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 78983, "node_name": "index", "Dec": "an index within the text"}{"idx": 78985, "node_name": "part", "Dec": "the character , word , or sentence to retrieve"}{"idx": 78986, "node_name": "index", "Dec": "an index within the text"}{"idx": 78989, "node_name": "s", "Dec": "the string to set the text contents"}{"idx": 78991, "node_name": "index", "Dec": "the index in the text where the string will be inserted"}{"idx": 78992, "node_name": "s", "Dec": "the string to insert in the text"}{"idx": 78994, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 78995, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 78997, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 78998, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 79000, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 79001, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 79003, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 79005, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 79006, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 79007, "node_name": "s", "Dec": "the string to replace the text between two indices"}{"idx": 79009, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 79010, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 79012, "node_name": "startindex", "Dec": "the starting index in the text"}{"idx": 79013, "node_name": "endindex", "Dec": "the ending index in the text"}{"idx": 79014, "node_name": "as", "Dec": "the attribute set"}{"idx": 79016, "node_name": "part", "Dec": "the character , word , sentence , line or attribute_run to retrieve"}{"idx": 79017, "node_name": "index", "Dec": "an index within the text"}{"idx": 79019, "node_name": "part", "Dec": "the character , word , sentence , line or attribute_run to retrieve"}{"idx": 79020, "node_name": "index", "Dec": "an index within the text"}{"idx": 79022, "node_name": "part", "Dec": "the character , word , sentence , line or attribute_run to retrieve"}{"idx": 79023, "node_name": "index", "Dec": "an index within the text"}{"idx": 79025, "node_name": "startindex", "Dec": "the start index in the text"}{"idx": 79026, "node_name": "endindex", "Dec": "the end index in the text"}{"idx": 79029, "node_name": "i", "Dec": "zero-based index of the actions"}{"idx": 79031, "node_name": "i", "Dec": "zero-based index of actions"}{"idx": 79042, "node_name": "ui", "Dec": "the factory"}{"idx": 79045, "node_name": "listener", "Dec": "the listener to be added"}{"idx": 79047, "node_name": "listener", "Dec": "the listener to be removed"}{"idx": 79050, "node_name": "e", "Dec": "the event"}{"idx": 79052, "node_name": "doc", "Dec": "the document to display / edit"}{"idx": 79056, "node_name": "m", "Dec": "the space between the border and the text"}{"idx": 79059, "node_name": "filter", "Dec": "the filter"}{"idx": 79063, "node_name": "c", "Dec": "the caret"}{"idx": 79066, "node_name": "h", "Dec": "the highlighter"}{"idx": 79068, "node_name": "map", "Dec": "the keymap"}{"idx": 79070, "node_name": "b", "Dec": "whether or not to enable automatic drag handling"}{"idx": 79073, "node_name": "dropmode", "Dec": "the drop mode to use"}{"idx": 79078, "node_name": "nm", "Dec": "the name of the keymap ( must be unique within the collection of named keymaps in the document ); the name may be null if the keymap is unnamed , but the caller is responsible for managing the reference returned as an unnamed keymap can't be fetched by name"}{"idx": 79079, "node_name": "parent", "Dec": "the parent keymap ; this may be null if unspecified bindings need not be resolved in some other keymap"}{"idx": 79081, "node_name": "nm", "Dec": "the name of the keymap to remove"}{"idx": 79083, "node_name": "nm", "Dec": "the name of the keymap"}{"idx": 79085, "node_name": "map", "Dec": "the keymap"}{"idx": 79086, "node_name": "bindings", "Dec": "the bindings"}{"idx": 79087, "node_name": "actions", "Dec": "the set of actions"}{"idx": 79090, "node_name": "c", "Dec": "the color"}{"idx": 79093, "node_name": "c", "Dec": "the color"}{"idx": 79096, "node_name": "c", "Dec": "the color"}{"idx": 79099, "node_name": "c", "Dec": "the color"}{"idx": 79101, "node_name": "content", "Dec": "the content to replace the selection with"}{"idx": 79103, "node_name": "offs", "Dec": "the offset \u2265 0"}{"idx": 79104, "node_name": "len", "Dec": "the length \u2265 0"}{"idx": 79106, "node_name": "pos", "Dec": "the position > = 0"}{"idx": 79108, "node_name": "pt", "Dec": "the location in the view to translate"}{"idx": 79113, "node_name": "pos", "Dec": "the position"}{"idx": 79115, "node_name": "akey", "Dec": "the key"}{"idx": 79118, "node_name": "in", "Dec": "the stream to read from"}{"idx": 79119, "node_name": "desc", "Dec": "an object describing the stream ; this might be a string , a file , a url , etc . some kinds of documents ( such as html for example ) might be able to make use of this information ; if non-null , it is added as a property of the document"}{"idx": 79121, "node_name": "out", "Dec": "the output stream"}{"idx": 79123, "node_name": "position", "Dec": "the position"}{"idx": 79126, "node_name": "t", "Dec": "the new text to be set"}{"idx": 79131, "node_name": "b", "Dec": "the boolean to be set"}{"idx": 79134, "node_name": "selectionstart", "Dec": "the start position of the text \u2265 0"}{"idx": 79137, "node_name": "selectionend", "Dec": "the end position of the text \u2265 0"}{"idx": 79139, "node_name": "selectionstart", "Dec": "the start position of the text"}{"idx": 79140, "node_name": "selectionend", "Dec": "the end position of the text"}{"idx": 79143, "node_name": "event", "Dec": "the event in question"}{"idx": 79146, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 79147, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal"}{"idx": 79148, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right"}{"idx": 79150, "node_name": "visiblerect", "Dec": "the view area visible within the viewport"}{"idx": 79151, "node_name": "orientation", "Dec": "either swingconstants.vertical or swingconstants.horizontal"}{"idx": 79152, "node_name": "direction", "Dec": "less than zero to scroll up / left , greater than zero for down / right"}{"idx": 79157, "node_name": "headerformat", "Dec": "the text , in messageformat , to be used as the header , or null for no header"}{"idx": 79158, "node_name": "footerformat", "Dec": "the text , in messageformat , to be used as the footer , or null for no footer"}{"idx": 79160, "node_name": "headerformat", "Dec": "the text , in messageformat , to be used as the header , or null for no header"}{"idx": 79161, "node_name": "footerformat", "Dec": "the text , in messageformat , to be used as the footer , or null for no footer"}{"idx": 79162, "node_name": "showprintdialog", "Dec": "true to display a print dialog , false otherwise"}{"idx": 79163, "node_name": "service", "Dec": "initial printservice , or null for the default"}{"idx": 79164, "node_name": "attributes", "Dec": "the job attributes to be applied to the print job , or null for none"}{"idx": 79165, "node_name": "interactive", "Dec": "whether to print in an interactive mode"}{"idx": 79167, "node_name": "headerformat", "Dec": "the text , in messageformat , to be used as the header , or null for no header"}{"idx": 79168, "node_name": "footerformat", "Dec": "the text , in messageformat , to be used as the footer , or null for no footer"}{"idx": 79172, "node_name": "pos", "Dec": "document position to identify the composed text location"}{"idx": 79178, "node_name": "key", "Dec": "the key"}{"idx": 79179, "node_name": "actionname", "Dec": "the name of the action for the key"}{"idx": 79184, "node_name": "a", "Dec": "the action"}{"idx": 79186, "node_name": "key", "Dec": "the key sequence"}{"idx": 79190, "node_name": "a", "Dec": "the action"}{"idx": 79192, "node_name": "key", "Dec": "the key sequence"}{"idx": 79194, "node_name": "key", "Dec": "the key sequence"}{"idx": 79195, "node_name": "a", "Dec": "the action"}{"idx": 79197, "node_name": "keys", "Dec": "the key sequence"}{"idx": 79201, "node_name": "parent", "Dec": "the parent keymap"}{"idx": 79204, "node_name": "elem", "Dec": "the element"}{"idx": 79206, "node_name": "u", "Dec": "true if the view is underlined , otherwise false"}{"idx": 79208, "node_name": "s", "Dec": "true if the view has a strike / line through it , otherwise false"}{"idx": 79210, "node_name": "s", "Dec": "true if the view represents a superscript , otherwise false"}{"idx": 79212, "node_name": "s", "Dec": "true if the view represents a subscript , otherwise false"}{"idx": 79214, "node_name": "bg", "Dec": "background color , or null"}{"idx": 79224, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 79225, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 79226, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 79230, "node_name": "g", "Dec": "graphics used to draw"}{"idx": 79231, "node_name": "p0", "Dec": "starting offset of view"}{"idx": 79232, "node_name": "p1", "Dec": "ending offset of view"}{"idx": 79233, "node_name": "viewbounds", "Dec": "bounds of view"}{"idx": 79234, "node_name": "editor", "Dec": "jtextcomponent"}{"idx": 79235, "node_name": "view", "Dec": "view instance being rendered"}{"idx": 79239, "node_name": "g", "Dec": "graphics used to draw"}{"idx": 79240, "node_name": "p0", "Dec": "starting offset of view"}{"idx": 79241, "node_name": "p1", "Dec": "ending offset of view"}{"idx": 79242, "node_name": "viewbounds", "Dec": "bounds of view"}{"idx": 79243, "node_name": "editor", "Dec": "jtextcomponent"}{"idx": 79244, "node_name": "view", "Dec": "view instance being rendered"}{"idx": 79249, "node_name": "q", "Dec": "the new queue ."}{"idx": 79251, "node_name": "task", "Dec": "the task to add to the queue"}{"idx": 79255, "node_name": "elem", "Dec": "the element to create a view for"}{"idx": 79257, "node_name": "axis", "Dec": "may be either x_axis or y_axis"}{"idx": 79259, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 79260, "node_name": "allocation", "Dec": "the allocated region to render into"}{"idx": 79262, "node_name": "g", "Dec": "the graphics context"}{"idx": 79263, "node_name": "alloc", "Dec": "the allocated region to render the child into"}{"idx": 79264, "node_name": "index", "Dec": "the index of the child"}{"idx": 79268, "node_name": "mask", "Dec": "the mask"}{"idx": 79270, "node_name": "mask", "Dec": "the mask"}{"idx": 79273, "node_name": "validcharacters", "Dec": "if non-null , specifies legal characters ."}{"idx": 79276, "node_name": "invalidcharacters", "Dec": "if non-null , specifies illegal characters ."}{"idx": 79279, "node_name": "placeholder", "Dec": "string used when formatting if the value does not completely fill the mask"}{"idx": 79282, "node_name": "placeholder", "Dec": "character used when formatting if the value does not completely fill the mask"}{"idx": 79285, "node_name": "containsliteralchars", "Dec": "used to indicate if literal characters in mask should be returned in stringtovalue"}{"idx": 79288, "node_name": "value", "Dec": "string to convert"}{"idx": 79290, "node_name": "value", "Dec": "value to convert"}{"idx": 79292, "node_name": "ftf", "Dec": "jformattedtextfield to format for , may be null indicating uninstall from current jformattedtextfield ."}{"idx": 79295, "node_name": "w", "Dec": "writer"}{"idx": 79296, "node_name": "doc", "Dec": "styleddocument"}{"idx": 79298, "node_name": "w", "Dec": "writer"}{"idx": 79299, "node_name": "doc", "Dec": "styleddocument"}{"idx": 79300, "node_name": "pos", "Dec": "the location in the document to fetch the content ."}{"idx": 79301, "node_name": "len", "Dec": "the amount to write out ."}{"idx": 79304, "node_name": "attr", "Dec": "an attributeset ."}{"idx": 79306, "node_name": "elem", "Dec": "an element ."}{"idx": 79308, "node_name": "tag", "Dec": "a start tag"}{"idx": 79310, "node_name": "endtag", "Dec": "an end tag"}{"idx": 79316, "node_name": "elem", "Dec": "an element"}{"idx": 79318, "node_name": "elem", "Dec": "an element"}{"idx": 79320, "node_name": "elem", "Dec": "an element of type styleconstants.iconelementname"}{"idx": 79322, "node_name": "elem", "Dec": "an element of type styleconstants.componentelementname"}{"idx": 79324, "node_name": "elem", "Dec": "an element"}{"idx": 79326, "node_name": "elem", "Dec": "an element"}{"idx": 79327, "node_name": "needsindenting", "Dec": "indention will be added if needsindenting is true"}{"idx": 79329, "node_name": "attr", "Dec": "a set of attributes"}{"idx": 79331, "node_name": "attr", "Dec": "a set of attributes"}{"idx": 79335, "node_name": "style", "Dec": "a font style"}{"idx": 79338, "node_name": "name", "Dec": "the name"}{"idx": 79339, "node_name": "value", "Dec": "the value"}{"idx": 79341, "node_name": "attributes", "Dec": "the set of attributes"}{"idx": 79343, "node_name": "name", "Dec": "the attribute name"}{"idx": 79345, "node_name": "names", "Dec": "the set of names"}{"idx": 79347, "node_name": "attributes", "Dec": "the set of attributes"}{"idx": 79349, "node_name": "parent", "Dec": "the parent"}{"idx": 79354, "node_name": "dot", "Dec": "the position > = 0"}{"idx": 79355, "node_name": "bias", "Dec": "bias to place the dot at"}{"idx": 79357, "node_name": "dot", "Dec": "the position > = 0"}{"idx": 79358, "node_name": "bias", "Dec": "bias for new location"}{"idx": 79362, "node_name": "fb", "Dec": "filterbypass that can be used to mutate caret position"}{"idx": 79363, "node_name": "dot", "Dec": "the position > = 0"}{"idx": 79364, "node_name": "bias", "Dec": "bias to place the dot at"}{"idx": 79366, "node_name": "fb", "Dec": "filterbypass that can be used to mutate caret position"}{"idx": 79367, "node_name": "dot", "Dec": "the position > = 0"}{"idx": 79368, "node_name": "bias", "Dec": "bias for new location"}{"idx": 79370, "node_name": "text", "Dec": "jtextcomponent containing text"}{"idx": 79371, "node_name": "pos", "Dec": "position used in determining next position"}{"idx": 79372, "node_name": "bias", "Dec": "bias used in determining next position"}{"idx": 79373, "node_name": "direction", "Dec": "the direction from the current position that can be thought of as the arrow keys typically found on a keyboard . this will be one of the following values : swingconstants.west swingconstants.east swingconstants.north swingconstants.south"}{"idx": 79374, "node_name": "biasret", "Dec": "used to return resulting bias of next position"}{"idx": 79378, "node_name": "format", "Dec": "format used to dictate legal values"}{"idx": 79380, "node_name": "format", "Dec": "numberformat instance used to dictate legal values"}{"idx": 79383, "node_name": "elem", "Dec": "the element to decorate"}{"idx": 79387, "node_name": "attr", "Dec": "the attributes associated with the option element . the attributes are copied to ensure they won't change ."}{"idx": 79389, "node_name": "label", "Dec": "a label ."}{"idx": 79394, "node_name": "state", "Dec": "a selection state"}{"idx": 79399, "node_name": "elem", "Dec": "the element that this view is responsible for"}{"idx": 79401, "node_name": "parent", "Dec": "the new parent , or null if the view is being removed from a parent it was previously added to"}{"idx": 79406, "node_name": "axis", "Dec": "the minor axis"}{"idx": 79407, "node_name": "r", "Dec": "the input sizerequirements object"}{"idx": 79410, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 79411, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 79413, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 79415, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 79417, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 79426, "node_name": "name", "Dec": "the attribute name"}{"idx": 79428, "node_name": "name", "Dec": "the attribute name"}{"idx": 79429, "node_name": "type", "Dec": "the attribute type"}{"idx": 79430, "node_name": "modifier", "Dec": "the attribute modifier"}{"idx": 79431, "node_name": "value", "Dec": "the default attribute value"}{"idx": 79432, "node_name": "values", "Dec": "the possible attribute values"}{"idx": 79433, "node_name": "next", "Dec": "the next attribute in the list"}{"idx": 79442, "node_name": "nm", "Dec": "an attribute name"}{"idx": 79444, "node_name": "tp", "Dec": "a type"}{"idx": 79451, "node_name": "content", "Dec": "the element"}{"idx": 79453, "node_name": "type", "Dec": "the type"}{"idx": 79454, "node_name": "content", "Dec": "the content"}{"idx": 79456, "node_name": "type", "Dec": "the type"}{"idx": 79457, "node_name": "content", "Dec": "the content"}{"idx": 79458, "node_name": "next", "Dec": "the next content model"}{"idx": 79461, "node_name": "elemvec", "Dec": "the list of elements"}{"idx": 79463, "node_name": "token", "Dec": "the token"}{"idx": 79468, "node_name": "dtd", "Dec": "the dtd ."}{"idx": 79470, "node_name": "in", "Dec": "the reader to read the source from"}{"idx": 79471, "node_name": "callback", "Dec": "the callback"}{"idx": 79472, "node_name": "ignorecharset", "Dec": "if true the charset is ignored"}{"idx": 79474, "node_name": "tag", "Dec": "the tag being handled"}{"idx": 79476, "node_name": "tag", "Dec": "the tag being handled"}{"idx": 79478, "node_name": "tag", "Dec": "the tag being handled"}{"idx": 79480, "node_name": "data", "Dec": "the section text"}{"idx": 79499, "node_name": "name", "Dec": "the name , as a string of the new dtd"}{"idx": 79502, "node_name": "name", "Dec": "the entity name"}{"idx": 79504, "node_name": "ch", "Dec": "the character"}{"idx": 79506, "node_name": "name", "Dec": "the requested string"}{"idx": 79508, "node_name": "index", "Dec": "the requested index"}{"idx": 79510, "node_name": "name", "Dec": "the name of the entity as a string"}{"idx": 79511, "node_name": "type", "Dec": "the type of the entity"}{"idx": 79512, "node_name": "data", "Dec": "the entity's data"}{"idx": 79514, "node_name": "name", "Dec": "the name of the element"}{"idx": 79515, "node_name": "type", "Dec": "the type of the element"}{"idx": 79516, "node_name": "omitstart", "Dec": "true if start should be omitted"}{"idx": 79517, "node_name": "omitend", "Dec": "true if end should be omitted"}{"idx": 79518, "node_name": "content", "Dec": "the contentmodel"}{"idx": 79519, "node_name": "exclusions", "Dec": "the set of elements that must not occur inside the element"}{"idx": 79520, "node_name": "inclusions", "Dec": "the set of elements that can occur inside the element"}{"idx": 79521, "node_name": "atts", "Dec": "the attributelist specifying the element"}{"idx": 79523, "node_name": "name", "Dec": "the name of the element"}{"idx": 79524, "node_name": "atts", "Dec": "the attributelist specifying the element"}{"idx": 79526, "node_name": "name", "Dec": "the entity's name"}{"idx": 79527, "node_name": "type", "Dec": "the entity's type"}{"idx": 79528, "node_name": "ch", "Dec": "the entity's value ( character )"}{"idx": 79530, "node_name": "name", "Dec": "the entity's name"}{"idx": 79531, "node_name": "type", "Dec": "the entity's type"}{"idx": 79532, "node_name": "str", "Dec": "the entity's data section"}{"idx": 79534, "node_name": "name", "Dec": "the element's name"}{"idx": 79535, "node_name": "type", "Dec": "the element's type"}{"idx": 79536, "node_name": "omitstart", "Dec": "true if the element needs no starting tag"}{"idx": 79537, "node_name": "omitend", "Dec": "true if the element needs no closing tag"}{"idx": 79538, "node_name": "content", "Dec": "the element's content"}{"idx": 79539, "node_name": "exclusions", "Dec": "the elements that must be excluded from the content of the element"}{"idx": 79540, "node_name": "inclusions", "Dec": "the elements that can be included as the content of the element"}{"idx": 79541, "node_name": "atts", "Dec": "the attributes of the element"}{"idx": 79543, "node_name": "name", "Dec": "the attribute's name"}{"idx": 79544, "node_name": "type", "Dec": "the attribute's type"}{"idx": 79545, "node_name": "modifier", "Dec": "the attribute's modifier"}{"idx": 79546, "node_name": "value", "Dec": "the default value of the attribute"}{"idx": 79547, "node_name": "values", "Dec": "the allowed values for the attribute ( multiple values could be separated by ' | ')"}{"idx": 79548, "node_name": "atts", "Dec": "the previous attribute of the element ; to be placed to attributelist.next , creating a linked list"}{"idx": 79550, "node_name": "type", "Dec": "the type of the new content model"}{"idx": 79551, "node_name": "obj", "Dec": "the content of the content model"}{"idx": 79552, "node_name": "next", "Dec": "pointer to the next content model"}{"idx": 79555, "node_name": "name", "Dec": "the name of the dtd"}{"idx": 79556, "node_name": "dtd", "Dec": "the dtd"}{"idx": 79558, "node_name": "name", "Dec": "the name of the dtd"}{"idx": 79560, "node_name": "in", "Dec": "the datainputstream to read from"}{"idx": 79618, "node_name": "name", "Dec": "the attribute name"}{"idx": 79620, "node_name": "value", "Dec": "the string representation of value"}{"idx": 79622, "node_name": "nm", "Dec": "a name"}{"idx": 79628, "node_name": "name", "Dec": "the name of the entity"}{"idx": 79629, "node_name": "type", "Dec": "the type of the entity"}{"idx": 79630, "node_name": "data", "Dec": "the char array of data"}{"idx": 79638, "node_name": "nm", "Dec": "the string to be converted"}{"idx": 79643, "node_name": "dtd", "Dec": "the dtd ."}{"idx": 79646, "node_name": "elem", "Dec": "the element storing the tag definition"}{"idx": 79647, "node_name": "fictional", "Dec": "the value of the flag \" fictional \" to be set for the tag"}{"idx": 79649, "node_name": "elem", "Dec": "the element storing the tag definition"}{"idx": 79653, "node_name": "text", "Dec": "the section text"}{"idx": 79655, "node_name": "text", "Dec": "the title text"}{"idx": 79657, "node_name": "text", "Dec": "the comment being handled"}{"idx": 79660, "node_name": "tag", "Dec": "the tag being handled"}{"idx": 79662, "node_name": "tag", "Dec": "the tag being handled"}{"idx": 79664, "node_name": "tag", "Dec": "the tag being handled"}{"idx": 79666, "node_name": "ln", "Dec": "the number of line containing the error"}{"idx": 79667, "node_name": "msg", "Dec": "the error message"}{"idx": 79669, "node_name": "err", "Dec": "the error type"}{"idx": 79670, "node_name": "arg1", "Dec": "the 1st error message argument"}{"idx": 79671, "node_name": "arg2", "Dec": "the 2nd error message argument"}{"idx": 79672, "node_name": "arg3", "Dec": "the 3rd error message argument"}{"idx": 79674, "node_name": "err", "Dec": "the error type"}{"idx": 79675, "node_name": "arg1", "Dec": "the 1st error message argument"}{"idx": 79676, "node_name": "arg2", "Dec": "the 2nd error message argument"}{"idx": 79678, "node_name": "err", "Dec": "the error type"}{"idx": 79679, "node_name": "arg1", "Dec": "the 1st error message argument"}{"idx": 79681, "node_name": "err", "Dec": "the error type"}{"idx": 79683, "node_name": "tag", "Dec": "the tag"}{"idx": 79685, "node_name": "omitted", "Dec": "true if the tag is no actually present in the document , but is supposed by the parser"}{"idx": 79687, "node_name": "elem", "Dec": "the element represented by the tag"}{"idx": 79690, "node_name": "strbuff", "Dec": "the markup declaration"}{"idx": 79692, "node_name": "in", "Dec": "the reader to read the source from"}{"idx": 79698, "node_name": "dtd", "Dec": "a dtd"}{"idx": 79699, "node_name": "name", "Dec": "the name of the resource , relative to the parserdelegator class ."}{"idx": 79702, "node_name": "elem", "Dec": "an element"}{"idx": 79704, "node_name": "elem", "Dec": "an element"}{"idx": 79705, "node_name": "fictional", "Dec": "if true the tag is inserted by error recovery ."}{"idx": 79713, "node_name": "elem", "Dec": "the element"}{"idx": 79715, "node_name": "g", "Dec": "the graphics context"}{"idx": 79716, "node_name": "x", "Dec": "the starting x coordinate > = 0"}{"idx": 79717, "node_name": "y", "Dec": "the starting y coordinate > = 0"}{"idx": 79718, "node_name": "c", "Dec": "the echo character"}{"idx": 79720, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 79721, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 79722, "node_name": "b", "Dec": "the bias toward the previous character or the next character represented by the offset , in case the position is a boundary of two views ; b will have one of these values : position.bias.forward position.bias.backward"}{"idx": 79724, "node_name": "fx", "Dec": "the x coordinate > = 0.0f"}{"idx": 79725, "node_name": "fy", "Dec": "the y coordinate > = 0.0f"}{"idx": 79726, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 79727, "node_name": "bias", "Dec": "the returned bias"}{"idx": 79729, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 79735, "node_name": "c", "Dec": "the container for the content"}{"idx": 79737, "node_name": "offs", "Dec": "the starting offset > = 0"}{"idx": 79738, "node_name": "str", "Dec": "the string to insert ; does nothing with null / empty strings"}{"idx": 79739, "node_name": "a", "Dec": "the attributes for the inserted content"}{"idx": 79743, "node_name": "pos", "Dec": "the starting offset > = 0"}{"idx": 79745, "node_name": "chng", "Dec": "the change event describing the dit"}{"idx": 79746, "node_name": "attr", "Dec": "the set of attributes for the inserted text"}{"idx": 79748, "node_name": "chng", "Dec": "the change event describing the edit"}{"idx": 79752, "node_name": "elem", "Dec": "the element"}{"idx": 79755, "node_name": "lineindex", "Dec": "the line to draw > = 0"}{"idx": 79756, "node_name": "g", "Dec": "the graphics context"}{"idx": 79757, "node_name": "x", "Dec": "the starting x position > = 0"}{"idx": 79758, "node_name": "y", "Dec": "the starting y position > = 0"}{"idx": 79760, "node_name": "g", "Dec": "the graphics context"}{"idx": 79761, "node_name": "x", "Dec": "the starting x coordinate > = 0"}{"idx": 79762, "node_name": "y", "Dec": "the starting y coordinate > = 0"}{"idx": 79763, "node_name": "p0", "Dec": "the beginning position in the model > = 0"}{"idx": 79764, "node_name": "p1", "Dec": "the ending position in the model > = 0"}{"idx": 79766, "node_name": "g", "Dec": "the graphics context"}{"idx": 79767, "node_name": "x", "Dec": "the starting x coordinate > = 0"}{"idx": 79768, "node_name": "y", "Dec": "the starting y coordinate > = 0"}{"idx": 79769, "node_name": "p0", "Dec": "the beginning position in the model > = 0"}{"idx": 79770, "node_name": "p1", "Dec": "the ending position in the model > = 0"}{"idx": 79774, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 79776, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 79777, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 79779, "node_name": "pos", "Dec": "the position to convert > = 0"}{"idx": 79780, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 79781, "node_name": "b", "Dec": "the bias toward the previous character or the next character represented by the offset , in case the position is a boundary of two views ; b will have one of these values : position.bias.forward position.bias.backward"}{"idx": 79783, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 79784, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 79785, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 79786, "node_name": "bias", "Dec": "the returned bias"}{"idx": 79788, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 79789, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 79790, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 79792, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 79793, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 79794, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 79796, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 79797, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 79798, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 79800, "node_name": "width", "Dec": "the width > = 0"}{"idx": 79801, "node_name": "height", "Dec": "the height > = 0"}{"idx": 79803, "node_name": "x", "Dec": "the current position > = 0"}{"idx": 79804, "node_name": "taboffset", "Dec": "the position within the text stream that the tab occurred at > = 0 ."}{"idx": 79806, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 79807, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 79808, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 79810, "node_name": "host", "Dec": "the component hosting the view ( used to call repaint )"}{"idx": 79811, "node_name": "a", "Dec": "the region allocated for the view to render into"}{"idx": 79812, "node_name": "line0", "Dec": "the starting line number to repaint . this must be a valid line number in the model ."}{"idx": 79813, "node_name": "line1", "Dec": "the ending line number to repaint . this must be a valid line number in the model ."}{"idx": 79815, "node_name": "a", "Dec": "the region allocated for the view to render into"}{"idx": 79816, "node_name": "line", "Dec": "the line number to find the region of . this must be a valid line number in the model ."}{"idx": 79827, "node_name": "in", "Dec": "the stream to read from"}{"idx": 79828, "node_name": "doc", "Dec": "the destination for the insertion ."}{"idx": 79829, "node_name": "pos", "Dec": "the location in the document to place the content ."}{"idx": 79831, "node_name": "out", "Dec": "the stream to write to"}{"idx": 79832, "node_name": "doc", "Dec": "the source for the write ."}{"idx": 79833, "node_name": "pos", "Dec": "the location in the document to fetch the content ."}{"idx": 79834, "node_name": "len", "Dec": "the amount to write out ."}{"idx": 79836, "node_name": "in", "Dec": "the stream to read from"}{"idx": 79837, "node_name": "doc", "Dec": "the destination for the insertion ."}{"idx": 79838, "node_name": "pos", "Dec": "the location in the document to place the content ."}{"idx": 79840, "node_name": "out", "Dec": "the stream to write to"}{"idx": 79841, "node_name": "doc", "Dec": "the source for the write ."}{"idx": 79842, "node_name": "pos", "Dec": "the location in the document to fetch the content ."}{"idx": 79843, "node_name": "len", "Dec": "the amount to write out ."}{"idx": 79850, "node_name": "array", "Dec": "the array to refer to"}{"idx": 79851, "node_name": "offset", "Dec": "the offset into the array"}{"idx": 79852, "node_name": "count", "Dec": "the number of characters"}{"idx": 79854, "node_name": "p", "Dec": "whether or not partial returns are valid ."}{"idx": 79863, "node_name": "position", "Dec": "the position within the text . valid values range from getbeginindex() to getendindex() . an illegalargumentexception is thrown if an invalid value is supplied ."}{"idx": 79868, "node_name": "index", "Dec": "the index of the char value to be returned"}{"idx": 79871, "node_name": "start", "Dec": "the start index , inclusive"}{"idx": 79872, "node_name": "end", "Dec": "the end index , exclusive"}{"idx": 79878, "node_name": "source", "Dec": "the set of attributes"}{"idx": 79882, "node_name": "attrname", "Dec": "the attribute name"}{"idx": 79884, "node_name": "attr", "Dec": "the second attribute set"}{"idx": 79888, "node_name": "name", "Dec": "the attribute name"}{"idx": 79890, "node_name": "name", "Dec": "the name"}{"idx": 79891, "node_name": "value", "Dec": "the value"}{"idx": 79893, "node_name": "attributes", "Dec": "the attribute list"}{"idx": 79895, "node_name": "name", "Dec": "the attribute name"}{"idx": 79896, "node_name": "value", "Dec": "the attribute value"}{"idx": 79898, "node_name": "attributes", "Dec": "the set of attributes to add"}{"idx": 79900, "node_name": "name", "Dec": "the attribute name"}{"idx": 79902, "node_name": "names", "Dec": "the set of names to remove"}{"idx": 79904, "node_name": "attributes", "Dec": "the set of attributes to remove"}{"idx": 79907, "node_name": "parent", "Dec": "the parent"}{"idx": 79911, "node_name": "obj", "Dec": "the object to compare this attribute set with"}{"idx": 79916, "node_name": "initiallength", "Dec": "the initial size"}{"idx": 79919, "node_name": "where", "Dec": "the starting position > = 0 && < length()"}{"idx": 79920, "node_name": "str", "Dec": "the non-null string to insert"}{"idx": 79922, "node_name": "where", "Dec": "the starting position > = 0"}{"idx": 79923, "node_name": "nitems", "Dec": "the number of characters to remove > = 0"}{"idx": 79925, "node_name": "where", "Dec": "the starting position > = 0"}{"idx": 79926, "node_name": "len", "Dec": "the length to retrieve > = 0"}{"idx": 79928, "node_name": "where", "Dec": "the starting position > = 0"}{"idx": 79929, "node_name": "len", "Dec": "the number of characters to retrieve > = 0"}{"idx": 79930, "node_name": "chars", "Dec": "the segment object to return the characters in"}{"idx": 79932, "node_name": "offset", "Dec": "the offset to create a position for > = 0"}{"idx": 79934, "node_name": "v", "Dec": "the vector to use , with a new one created on null"}{"idx": 79935, "node_name": "offset", "Dec": "the starting offset > = 0"}{"idx": 79936, "node_name": "length", "Dec": "the length > = 0"}{"idx": 79938, "node_name": "positions", "Dec": "the positions of the instances"}{"idx": 79942, "node_name": "l", "Dec": "the change listener"}{"idx": 79944, "node_name": "l", "Dec": "the change listener"}{"idx": 79985, "node_name": "a", "Dec": "the attribute set"}{"idx": 79987, "node_name": "a", "Dec": "the attribute set"}{"idx": 79988, "node_name": "o", "Dec": "the bidi level value"}{"idx": 79990, "node_name": "a", "Dec": "the attribute set"}{"idx": 79992, "node_name": "a", "Dec": "the attribute set"}{"idx": 79993, "node_name": "c", "Dec": "the component"}{"idx": 79995, "node_name": "a", "Dec": "the attribute set"}{"idx": 79997, "node_name": "a", "Dec": "the attribute set"}{"idx": 79998, "node_name": "c", "Dec": "the icon"}{"idx": 80000, "node_name": "a", "Dec": "the attribute set"}{"idx": 80002, "node_name": "a", "Dec": "the attribute set"}{"idx": 80003, "node_name": "fam", "Dec": "the font"}{"idx": 80005, "node_name": "a", "Dec": "the attribute set"}{"idx": 80007, "node_name": "a", "Dec": "the attribute set"}{"idx": 80008, "node_name": "s", "Dec": "the font size"}{"idx": 80010, "node_name": "a", "Dec": "the attribute set"}{"idx": 80012, "node_name": "a", "Dec": "the attribute set"}{"idx": 80013, "node_name": "b", "Dec": "specifies true / false for setting the attribute"}{"idx": 80015, "node_name": "a", "Dec": "the attribute set"}{"idx": 80017, "node_name": "a", "Dec": "the attribute set"}{"idx": 80018, "node_name": "b", "Dec": "specifies true / false for setting the attribute"}{"idx": 80020, "node_name": "a", "Dec": "the attribute set"}{"idx": 80022, "node_name": "a", "Dec": "the attribute set"}{"idx": 80024, "node_name": "a", "Dec": "the attribute set"}{"idx": 80026, "node_name": "a", "Dec": "the attribute set"}{"idx": 80028, "node_name": "a", "Dec": "the attribute set"}{"idx": 80029, "node_name": "b", "Dec": "specifies true / false for setting the attribute"}{"idx": 80031, "node_name": "a", "Dec": "the attribute set"}{"idx": 80032, "node_name": "b", "Dec": "specifies true / false for setting the attribute"}{"idx": 80034, "node_name": "a", "Dec": "the attribute set"}{"idx": 80035, "node_name": "b", "Dec": "specifies true / false for setting the attribute"}{"idx": 80037, "node_name": "a", "Dec": "the attribute set"}{"idx": 80038, "node_name": "b", "Dec": "specifies true / false for setting the attribute"}{"idx": 80040, "node_name": "a", "Dec": "the attribute set"}{"idx": 80042, "node_name": "a", "Dec": "the attribute set"}{"idx": 80043, "node_name": "fg", "Dec": "the color"}{"idx": 80045, "node_name": "a", "Dec": "the attribute set"}{"idx": 80047, "node_name": "a", "Dec": "the attribute set"}{"idx": 80048, "node_name": "fg", "Dec": "the color"}{"idx": 80050, "node_name": "a", "Dec": "the attribute set"}{"idx": 80052, "node_name": "a", "Dec": "the attribute set"}{"idx": 80053, "node_name": "i", "Dec": "the value"}{"idx": 80055, "node_name": "a", "Dec": "the attribute set"}{"idx": 80057, "node_name": "a", "Dec": "the attribute set"}{"idx": 80058, "node_name": "i", "Dec": "the value"}{"idx": 80060, "node_name": "a", "Dec": "the attribute set"}{"idx": 80062, "node_name": "a", "Dec": "the attribute set"}{"idx": 80063, "node_name": "i", "Dec": "the value"}{"idx": 80065, "node_name": "a", "Dec": "the attribute set"}{"idx": 80067, "node_name": "a", "Dec": "the attribute set"}{"idx": 80068, "node_name": "i", "Dec": "the value"}{"idx": 80070, "node_name": "a", "Dec": "the attribute set"}{"idx": 80072, "node_name": "a", "Dec": "the attribute set"}{"idx": 80073, "node_name": "i", "Dec": "the value"}{"idx": 80075, "node_name": "a", "Dec": "the attribute set"}{"idx": 80077, "node_name": "a", "Dec": "the attribute set"}{"idx": 80078, "node_name": "i", "Dec": "the value"}{"idx": 80080, "node_name": "a", "Dec": "the attribute set"}{"idx": 80082, "node_name": "a", "Dec": "the attribute set"}{"idx": 80083, "node_name": "align", "Dec": "the alignment value"}{"idx": 80085, "node_name": "a", "Dec": "the attribute set"}{"idx": 80087, "node_name": "a", "Dec": "the attribute set ."}{"idx": 80088, "node_name": "tabs", "Dec": "the tabset"}{"idx": 80095, "node_name": "nm", "Dec": "the name of the style ( must be unique within the collection of named styles in the document ) . the name may be null if the style is unnamed , but the caller is responsible for managing the reference returned as an unnamed style can't be fetched by name . an unnamed style may be useful for things like character attribute overrides such as found in a style run ."}{"idx": 80096, "node_name": "parent", "Dec": "the parent style . this may be null if unspecified attributes need not be resolved in some other style ."}{"idx": 80098, "node_name": "nm", "Dec": "the name of the style to remove"}{"idx": 80100, "node_name": "nm", "Dec": "the name of the style"}{"idx": 80103, "node_name": "l", "Dec": "the change listener"}{"idx": 80105, "node_name": "l", "Dec": "the change listener"}{"idx": 80108, "node_name": "attr", "Dec": "the attribute set"}{"idx": 80110, "node_name": "attr", "Dec": "the set of attributes"}{"idx": 80112, "node_name": "attr", "Dec": "the set of attributes"}{"idx": 80114, "node_name": "family", "Dec": "the font family ( such as \" monospaced \")"}{"idx": 80115, "node_name": "style", "Dec": "the style of the font ( such as font.plain )"}{"idx": 80116, "node_name": "size", "Dec": "the point size > = 1"}{"idx": 80118, "node_name": "f", "Dec": "the font"}{"idx": 80120, "node_name": "old", "Dec": "the old attribute set"}{"idx": 80121, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 80122, "node_name": "value", "Dec": "the attribute value"}{"idx": 80124, "node_name": "old", "Dec": "the old attribute set"}{"idx": 80125, "node_name": "attr", "Dec": "the attributes to add"}{"idx": 80127, "node_name": "old", "Dec": "the old set of attributes"}{"idx": 80128, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 80130, "node_name": "old", "Dec": "the old attribute set"}{"idx": 80131, "node_name": "names", "Dec": "the attribute names"}{"idx": 80133, "node_name": "old", "Dec": "the old attribute set"}{"idx": 80134, "node_name": "attrs", "Dec": "the attributes"}{"idx": 80137, "node_name": "a", "Dec": "the set to reclaim"}{"idx": 80140, "node_name": "a", "Dec": "the set of attributes to be represented in the the compact form ."}{"idx": 80142, "node_name": "a", "Dec": "the set of attributes to be represented in the the larger form ."}{"idx": 80145, "node_name": "out", "Dec": "the output stream"}{"idx": 80146, "node_name": "a", "Dec": "the attribute set"}{"idx": 80148, "node_name": "in", "Dec": "the object stream to read the attribute data from ."}{"idx": 80149, "node_name": "a", "Dec": "the attribute set to place the attribute definitions in ."}{"idx": 80151, "node_name": "out", "Dec": "the output stream"}{"idx": 80152, "node_name": "a", "Dec": "the attribute set"}{"idx": 80154, "node_name": "in", "Dec": "the object stream to read the attribute data from ."}{"idx": 80155, "node_name": "a", "Dec": "the attribute set to place the attribute definitions in ."}{"idx": 80157, "node_name": "key", "Dec": "the non-null object key"}{"idx": 80159, "node_name": "key", "Dec": "the object key"}{"idx": 80161, "node_name": "key", "Dec": "the object key"}{"idx": 80166, "node_name": "name", "Dec": "the style name , null for unnamed"}{"idx": 80167, "node_name": "parent", "Dec": "the parent style , null if none"}{"idx": 80169, "node_name": "parent", "Dec": "the parent style , null if none"}{"idx": 80174, "node_name": "name", "Dec": "the new name"}{"idx": 80176, "node_name": "l", "Dec": "the change listener"}{"idx": 80178, "node_name": "l", "Dec": "the change listener"}{"idx": 80182, "node_name": "listenertype", "Dec": "the type of listeners requested"}{"idx": 80185, "node_name": "attrname", "Dec": "the non-null attribute name"}{"idx": 80187, "node_name": "attr", "Dec": "the attribute set to check against"}{"idx": 80190, "node_name": "attrname", "Dec": "the non-null attribute name"}{"idx": 80193, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 80194, "node_name": "value", "Dec": "the attribute value"}{"idx": 80196, "node_name": "attrs", "Dec": "the attributes to check"}{"idx": 80199, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 80200, "node_name": "value", "Dec": "the attribute value"}{"idx": 80202, "node_name": "attr", "Dec": "the attributes to add"}{"idx": 80204, "node_name": "name", "Dec": "the non-null attribute name"}{"idx": 80206, "node_name": "names", "Dec": "the attribute names"}{"idx": 80208, "node_name": "attrs", "Dec": "the attributes"}{"idx": 80210, "node_name": "parent", "Dec": "the parent , null if none"}{"idx": 80213, "node_name": "attributes", "Dec": "the attributes"}{"idx": 80215, "node_name": "attrs", "Dec": "the attributes"}{"idx": 80219, "node_name": "obj", "Dec": "the object to compare with ."}{"idx": 80223, "node_name": "key", "Dec": "the attribute key"}{"idx": 80225, "node_name": "attr", "Dec": "the attribute set to check against"}{"idx": 80228, "node_name": "key", "Dec": "the attribute name"}{"idx": 80231, "node_name": "name", "Dec": "the attribute name"}{"idx": 80232, "node_name": "value", "Dec": "the attribute value"}{"idx": 80234, "node_name": "attrs", "Dec": "the attributes to check"}{"idx": 80238, "node_name": "nm", "Dec": "the name of the style ( must be unique within the collection of named styles ) . the name may be null if the style is unnamed , but the caller is responsible for managing the reference returned as an unnamed style can't be fetched by name . an unnamed style may be useful for things like character attribute overrides such as found in a style run ."}{"idx": 80239, "node_name": "parent", "Dec": "the parent style . this may be null if unspecified attributes need not be resolved in some other style ."}{"idx": 80241, "node_name": "nm", "Dec": "the name of the style to remove"}{"idx": 80243, "node_name": "nm", "Dec": "the name of the style"}{"idx": 80245, "node_name": "offset", "Dec": "the start of the change > = 0"}{"idx": 80246, "node_name": "length", "Dec": "the length of the change > = 0"}{"idx": 80247, "node_name": "s", "Dec": "the non-null attributes to change to . any attributes defined will be applied to the text for the given range ."}{"idx": 80248, "node_name": "replace", "Dec": "indicates whether or not the previous attributes should be cleared before the new attributes as set . if true , the operation will replace the previous attributes entirely . if false , the new attributes will be merged with the previous attributes ."}{"idx": 80250, "node_name": "offset", "Dec": "the start of the change > = 0"}{"idx": 80251, "node_name": "length", "Dec": "the length of the change > = 0"}{"idx": 80252, "node_name": "s", "Dec": "the non-null attributes to change to . any attributes defined will be applied to the text for the given range ."}{"idx": 80253, "node_name": "replace", "Dec": "indicates whether or not the previous attributes should be cleared before the new attributes are set . if true , the operation will replace the previous attributes entirely . if false , the new attributes will be merged with the previous attributes ."}{"idx": 80255, "node_name": "pos", "Dec": "the starting position > = 0"}{"idx": 80256, "node_name": "s", "Dec": "the style to set"}{"idx": 80258, "node_name": "p", "Dec": "the position > = 0"}{"idx": 80260, "node_name": "pos", "Dec": "the offset > = 0"}{"idx": 80262, "node_name": "pos", "Dec": "the offset > = 0"}{"idx": 80264, "node_name": "attr", "Dec": "the set of attributes"}{"idx": 80266, "node_name": "attr", "Dec": "the set of attributes"}{"idx": 80268, "node_name": "attr", "Dec": "the set of attributes"}{"idx": 80271, "node_name": "nm", "Dec": "the action name"}{"idx": 80272, "node_name": "a", "Dec": "the alignment > = 0"}{"idx": 80274, "node_name": "e", "Dec": "the action event"}{"idx": 80278, "node_name": "e", "Dec": "the action event"}{"idx": 80281, "node_name": "nm", "Dec": "the action name"}{"idx": 80282, "node_name": "family", "Dec": "the font family"}{"idx": 80284, "node_name": "e", "Dec": "the event"}{"idx": 80287, "node_name": "nm", "Dec": "the action name"}{"idx": 80288, "node_name": "size", "Dec": "the font size"}{"idx": 80290, "node_name": "e", "Dec": "the action event"}{"idx": 80293, "node_name": "nm", "Dec": "the action name"}{"idx": 80294, "node_name": "fg", "Dec": "the foreground color"}{"idx": 80296, "node_name": "e", "Dec": "the action event"}{"idx": 80300, "node_name": "e", "Dec": "the action event"}{"idx": 80308, "node_name": "c", "Dec": "the jeditorpane"}{"idx": 80310, "node_name": "c", "Dec": "the jeditorpane"}{"idx": 80314, "node_name": "element", "Dec": "the element"}{"idx": 80315, "node_name": "set", "Dec": "the attributes"}{"idx": 80318, "node_name": "nm", "Dec": "the name of the action"}{"idx": 80320, "node_name": "e", "Dec": "the action event"}{"idx": 80322, "node_name": "e", "Dec": "the editor"}{"idx": 80324, "node_name": "e", "Dec": "the editor pane"}{"idx": 80326, "node_name": "editor", "Dec": "the editor"}{"idx": 80327, "node_name": "attr", "Dec": "the attributes"}{"idx": 80328, "node_name": "replace", "Dec": "if true , then replace the existing attributes first"}{"idx": 80330, "node_name": "editor", "Dec": "the editor"}{"idx": 80331, "node_name": "attr", "Dec": "the attributes"}{"idx": 80332, "node_name": "replace", "Dec": "if true , replace the existing attributes first"}{"idx": 80336, "node_name": "e", "Dec": "the action event"}{"idx": 80339, "node_name": "side", "Dec": "the size of the box to fetch the inset for . this can be view.top , view.left , view.bottom , or view.right ."}{"idx": 80340, "node_name": "v", "Dec": "the view making the request . this is used to get the attributeset , and may be used to resolve percentage arguments ."}{"idx": 80342, "node_name": "g", "Dec": "the rendering surface ."}{"idx": 80343, "node_name": "x", "Dec": "the x coordinate of the allocated area to render into ."}{"idx": 80344, "node_name": "y", "Dec": "the y coordinate of the allocated area to render into ."}{"idx": 80345, "node_name": "w", "Dec": "the width of the allocated area to render into ."}{"idx": 80346, "node_name": "h", "Dec": "the height of the allocated area to render into ."}{"idx": 80347, "node_name": "v", "Dec": "the view making the request . this is used to get the attributeset , and may be used to resolve percentage arguments ."}{"idx": 80351, "node_name": "t", "Dec": "the type to translate to visual attributes"}{"idx": 80352, "node_name": "e", "Dec": "the element representing the tag ; the element can be used to determine the nesting for situations where the attributes will differ if nested inside of other elements"}{"idx": 80354, "node_name": "selector", "Dec": "a space separated string of the element names ."}{"idx": 80356, "node_name": "rule", "Dec": "a set of rules"}{"idx": 80358, "node_name": "decl", "Dec": "a css declaration"}{"idx": 80360, "node_name": "in", "Dec": "the stream to read the css grammar from"}{"idx": 80361, "node_name": "ref", "Dec": "the reference url . this value represents the location of the stream and may be null . all relative urls specified in the stream will be based upon this parameter ."}{"idx": 80363, "node_name": "v", "Dec": "a view"}{"idx": 80365, "node_name": "nm", "Dec": "the name of the style to remove"}{"idx": 80367, "node_name": "ss", "Dec": "a stylesheet"}{"idx": 80369, "node_name": "ss", "Dec": "a stylesheet"}{"idx": 80372, "node_name": "url", "Dec": "an url"}{"idx": 80374, "node_name": "base", "Dec": "a base ."}{"idx": 80377, "node_name": "attr", "Dec": "a set of attributes"}{"idx": 80378, "node_name": "key", "Dec": "a css property"}{"idx": 80379, "node_name": "value", "Dec": "an html attribute value"}{"idx": 80381, "node_name": "attr", "Dec": "a set of attributes"}{"idx": 80382, "node_name": "key", "Dec": "a css property"}{"idx": 80383, "node_name": "value", "Dec": "an html attribute value"}{"idx": 80385, "node_name": "htmlattrset", "Dec": "attributeset containing the html attributes ."}{"idx": 80387, "node_name": "old", "Dec": "the old attribute set"}{"idx": 80388, "node_name": "key", "Dec": "the non-null attribute key"}{"idx": 80389, "node_name": "value", "Dec": "the attribute value"}{"idx": 80391, "node_name": "old", "Dec": "the old attribute set"}{"idx": 80392, "node_name": "attr", "Dec": "the attributes to add"}{"idx": 80394, "node_name": "old", "Dec": "the old set of attributes"}{"idx": 80395, "node_name": "key", "Dec": "the non-null attribute name"}{"idx": 80397, "node_name": "old", "Dec": "the old attribute set"}{"idx": 80398, "node_name": "names", "Dec": "the attribute names"}{"idx": 80400, "node_name": "old", "Dec": "the old attribute set"}{"idx": 80401, "node_name": "attrs", "Dec": "the attributes"}{"idx": 80403, "node_name": "a", "Dec": "the set of attributes to be represented in the the compact form ."}{"idx": 80405, "node_name": "a", "Dec": "the set of attributes to be represented in the the larger form ."}{"idx": 80407, "node_name": "a", "Dec": "the attribute set"}{"idx": 80409, "node_name": "a", "Dec": "the set of attributes"}{"idx": 80411, "node_name": "a", "Dec": "the set of attributes"}{"idx": 80413, "node_name": "a", "Dec": "a set of css attributes"}{"idx": 80415, "node_name": "a", "Dec": "a set of css attributes"}{"idx": 80417, "node_name": "sz", "Dec": "a font size ."}{"idx": 80419, "node_name": "size", "Dec": "a font size ."}{"idx": 80421, "node_name": "pt", "Dec": "a size of point"}{"idx": 80423, "node_name": "index", "Dec": "a size index"}{"idx": 80425, "node_name": "size", "Dec": "a css string describing font size"}{"idx": 80427, "node_name": "string", "Dec": "color string such as \" red \" or \" #nnnnnn \""}{"idx": 80430, "node_name": "g", "Dec": "the rendering surface ."}{"idx": 80431, "node_name": "x", "Dec": "the x coordinate of the list item allocation"}{"idx": 80432, "node_name": "y", "Dec": "the y coordinate of the list item allocation"}{"idx": 80433, "node_name": "w", "Dec": "the width of the list item allocation"}{"idx": 80434, "node_name": "h", "Dec": "the height of the list item allocation"}{"idx": 80435, "node_name": "v", "Dec": "the allocated area to paint into ."}{"idx": 80436, "node_name": "item", "Dec": "which list item is being painted . this is a number greater than or equal to 0 ."}{"idx": 80439, "node_name": "x", "Dec": "the position the view would be located at for the purpose of tab expansion > = 0 ."}{"idx": 80440, "node_name": "e", "Dec": "how to expand the tabs when encountered ."}{"idx": 80442, "node_name": "p0", "Dec": "the starting location in the text document > = 0"}{"idx": 80443, "node_name": "p1", "Dec": "the ending location in the text document > = p0"}{"idx": 80446, "node_name": "x", "Dec": "the position in points > = 0"}{"idx": 80447, "node_name": "taboffset", "Dec": "the position within the text stream that the tab occurred at > = 0 ."}{"idx": 80450, "node_name": "elem", "Dec": "the element that this view is responsible for"}{"idx": 80452, "node_name": "elem", "Dec": "an element"}{"idx": 80454, "node_name": "offset", "Dec": "the starting index into the child views to insert the new views ; this should be a value > = 0 and <= getviewcount"}{"idx": 80455, "node_name": "length", "Dec": "the number of existing child views to remove ; this should be a value > = 0 and <= ( getviewcount()"}{"idx": 80456, "node_name": "views", "Dec": "the child views to add ; this value can be nullto indicate no children are being added ( useful to remove )"}{"idx": 80458, "node_name": "targetspan", "Dec": "the given span for total of all the table columns"}{"idx": 80459, "node_name": "reqs", "Dec": "the requirements desired for each column . this is the column maximum of the cells minimum , preferred , and maximum requested span"}{"idx": 80460, "node_name": "spans", "Dec": "the return value of how much to allocated to each column"}{"idx": 80461, "node_name": "offsets", "Dec": "the return value of the offset from the origin for each column"}{"idx": 80463, "node_name": "targetspan", "Dec": "the total span given to the view , which would be used to layout the children ."}{"idx": 80464, "node_name": "axis", "Dec": "the axis being layed out ."}{"idx": 80465, "node_name": "offsets", "Dec": "the offsets from the origin of the view for each of the child views . this is a return value and is filled in by the implementation of layoutMinorAxis(int,int,int[],int[]) ."}{"idx": 80466, "node_name": "spans", "Dec": "the span of each child view . this is a return value and is filled in by the implementation of layoutMinorAxis(int,int,int[],int[]) ."}{"idx": 80468, "node_name": "axis", "Dec": "the axis being studied"}{"idx": 80469, "node_name": "r", "Dec": "the sizerequirements object ; if null one will be created"}{"idx": 80471, "node_name": "pos", "Dec": "the search position > = 0"}{"idx": 80472, "node_name": "a", "Dec": "the allocation to the table on entry , and the allocation of the view containing the position on exit"}{"idx": 80476, "node_name": "elem", "Dec": "the element that this view is responsible for"}{"idx": 80478, "node_name": "offset", "Dec": "the starting index into the child views to insert the new views ; this should be a value > = 0 and <= getviewcount"}{"idx": 80479, "node_name": "length", "Dec": "the number of existing child views to remove ; this should be a value > = 0 and <= ( getviewcount()"}{"idx": 80480, "node_name": "views", "Dec": "the child views to add ; this value can be nullto indicate no children are being added ( useful to remove )"}{"idx": 80482, "node_name": "targetspan", "Dec": "the total span given to the view , which would be used to layout the children ."}{"idx": 80483, "node_name": "axis", "Dec": "the axis being layed out ."}{"idx": 80484, "node_name": "offsets", "Dec": "the offsets from the origin of the view for each of the child views . this is a return value and is filled in by the implementation of layoutMajorAxis(int,int,int[],int[]) ."}{"idx": 80485, "node_name": "spans", "Dec": "the span of each child view . this is a return value and is filled in by the implementation of layoutMajorAxis(int,int,int[],int[]) ."}{"idx": 80487, "node_name": "targetspan", "Dec": "the total span given to the view , which would be used to layout the children ."}{"idx": 80488, "node_name": "axis", "Dec": "the axis being layed out ."}{"idx": 80489, "node_name": "offsets", "Dec": "the offsets from the origin of the view for each of the child views . this is a return value and is filled in by the implementation of layoutMinorAxis(int,int,int[],int[]) ."}{"idx": 80490, "node_name": "spans", "Dec": "the span of each child view . this is a return value and is filled in by the implementation of layoutMinorAxis(int,int,int[],int[]) ."}{"idx": 80492, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80494, "node_name": "pos", "Dec": "the search position > = 0"}{"idx": 80495, "node_name": "a", "Dec": "the allocation to the table on entry , and the allocation of the view containing the position on exit"}{"idx": 80498, "node_name": "tabs", "Dec": "the tabstops to initialize the tabset"}{"idx": 80501, "node_name": "index", "Dec": "which tapstop to return"}{"idx": 80503, "node_name": "location", "Dec": "location to find a tab after"}{"idx": 80505, "node_name": "tab", "Dec": "the tabstop to find"}{"idx": 80507, "node_name": "location", "Dec": "location to find a tab after"}{"idx": 80509, "node_name": "o", "Dec": "the tabset instance which this instance should be compared to ."}{"idx": 80525, "node_name": "pos", "Dec": "position of the tab"}{"idx": 80527, "node_name": "pos", "Dec": "position of the tab"}{"idx": 80528, "node_name": "align", "Dec": "alignment of the tab"}{"idx": 80529, "node_name": "leader", "Dec": "leader of the tab"}{"idx": 80534, "node_name": "other", "Dec": "the reference object with which to compare ."}{"idx": 80538, "node_name": "name", "Dec": "the name of the action"}{"idx": 80540, "node_name": "e", "Dec": "the actionevent"}{"idx": 80542, "node_name": "list1", "Dec": "the first list , may be empty but not null"}{"idx": 80543, "node_name": "list2", "Dec": "the second list , may be empty but not null"}{"idx": 80548, "node_name": "s", "Dec": "the source of the text"}{"idx": 80549, "node_name": "x", "Dec": "the x origin > = 0"}{"idx": 80550, "node_name": "y", "Dec": "the y origin > = 0"}{"idx": 80551, "node_name": "g", "Dec": "the graphics context"}{"idx": 80552, "node_name": "e", "Dec": "how to expand the tabs . if this value is null , tabs will be expanded as a space character ."}{"idx": 80553, "node_name": "startoffset", "Dec": "starting offset of the text in the document > = 0"}{"idx": 80555, "node_name": "s", "Dec": "the source of the text"}{"idx": 80556, "node_name": "metrics", "Dec": "the font metrics to use for the calculation"}{"idx": 80557, "node_name": "x", "Dec": "the x origin > = 0"}{"idx": 80558, "node_name": "e", "Dec": "how to expand the tabs . if this value is null , tabs will be expanded as a space character ."}{"idx": 80559, "node_name": "startoffset", "Dec": "starting offset of the text in the document > = 0"}{"idx": 80561, "node_name": "s", "Dec": "the source of the text"}{"idx": 80562, "node_name": "metrics", "Dec": "the font metrics to use for the calculation"}{"idx": 80563, "node_name": "x0", "Dec": "the starting view location representing the start of the given text > = 0 ."}{"idx": 80564, "node_name": "x", "Dec": "the target view location to translate to an offset into the text > = 0 ."}{"idx": 80565, "node_name": "e", "Dec": "how to expand the tabs . if this value is null , tabs will be expanded as a space character ."}{"idx": 80566, "node_name": "startoffset", "Dec": "starting offset of the text in the document > = 0"}{"idx": 80567, "node_name": "round", "Dec": "whether or not to round"}{"idx": 80569, "node_name": "s", "Dec": "the source of the text"}{"idx": 80570, "node_name": "metrics", "Dec": "the font metrics to use for the calculation"}{"idx": 80571, "node_name": "x0", "Dec": "the starting view location representing the start of the given text ."}{"idx": 80572, "node_name": "x", "Dec": "the target view location to translate to an offset into the text ."}{"idx": 80573, "node_name": "e", "Dec": "how to expand the tabs . if this value is null , tabs will be expanded as a space character ."}{"idx": 80574, "node_name": "startoffset", "Dec": "starting offset in the document of the text"}{"idx": 80576, "node_name": "c", "Dec": "the editor"}{"idx": 80577, "node_name": "offs", "Dec": "the offset in the document > = 0"}{"idx": 80579, "node_name": "c", "Dec": "the editor"}{"idx": 80580, "node_name": "offs", "Dec": "the offset in the document > = 0"}{"idx": 80582, "node_name": "c", "Dec": "the editor"}{"idx": 80583, "node_name": "offs", "Dec": "the offset in the document > = 0"}{"idx": 80584, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 80586, "node_name": "c", "Dec": "the editor"}{"idx": 80587, "node_name": "offs", "Dec": "the offset in the document > = 0"}{"idx": 80588, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 80590, "node_name": "c", "Dec": "the editor"}{"idx": 80591, "node_name": "offs", "Dec": "the offset in the document > = 0"}{"idx": 80593, "node_name": "c", "Dec": "the editor"}{"idx": 80594, "node_name": "offs", "Dec": "the offset in the document > = 0"}{"idx": 80596, "node_name": "c", "Dec": "the editor"}{"idx": 80597, "node_name": "offs", "Dec": "the offset in the document > = 0"}{"idx": 80599, "node_name": "c", "Dec": "the editor"}{"idx": 80600, "node_name": "offs", "Dec": "the offset in the document > = 0"}{"idx": 80602, "node_name": "c", "Dec": "the editor"}{"idx": 80603, "node_name": "offs", "Dec": "the starting offset in the document > = 0"}{"idx": 80612, "node_name": "elem", "Dec": "the element to represent"}{"idx": 80616, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80618, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80620, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80622, "node_name": "child", "Dec": "the child view"}{"idx": 80623, "node_name": "width", "Dec": "true if the width preference has changed"}{"idx": 80624, "node_name": "height", "Dec": "true if the height preference has changed"}{"idx": 80626, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80628, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 80629, "node_name": "allocation", "Dec": "the allocated region to render into"}{"idx": 80631, "node_name": "parent", "Dec": "the new parent , or null if the view is being removed from a parent"}{"idx": 80634, "node_name": "n", "Dec": "the number of the view to get , > = 0 && < getviewcount()"}{"idx": 80637, "node_name": "i", "Dec": "the position"}{"idx": 80639, "node_name": "offs", "Dec": "the offset of the view to insert before > = 0"}{"idx": 80640, "node_name": "v", "Dec": "the view"}{"idx": 80642, "node_name": "v", "Dec": "the view"}{"idx": 80644, "node_name": "offset", "Dec": "the starting index into the child views to insert the new views . this should be a value > = 0 and <= getviewcount"}{"idx": 80645, "node_name": "length", "Dec": "the number of existing child views to remove this should be a value > = 0 and <= ( getviewcount()"}{"idx": 80646, "node_name": "views", "Dec": "the child views to add . this value can be null to indicate no children are being added ( useful to remove ) ."}{"idx": 80648, "node_name": "pos", "Dec": "the position > = 0"}{"idx": 80649, "node_name": "b", "Dec": "the bias"}{"idx": 80651, "node_name": "index", "Dec": "the index of the child , > = 0 && < getviewcount()"}{"idx": 80652, "node_name": "a", "Dec": "the allocation to this view"}{"idx": 80654, "node_name": "pos", "Dec": "the position to convert"}{"idx": 80655, "node_name": "b", "Dec": "the bias"}{"idx": 80656, "node_name": "a", "Dec": "the allocated region in which to render"}{"idx": 80657, "node_name": "direction", "Dec": "the direction from the current position that can be thought of as the arrow keys typically found on a keyboard . this will be one of the following values : swingconstants.west swingconstants.east swingconstants.north swingconstants.south"}{"idx": 80658, "node_name": "biasret", "Dec": "the returned bias"}{"idx": 80660, "node_name": "pos", "Dec": "the position of the desired character ( > =0 )"}{"idx": 80661, "node_name": "a", "Dec": "the area of the view , which encompasses the requested character"}{"idx": 80662, "node_name": "b", "Dec": "the bias toward the previous character or the next character represented by the offset , in case the position is a boundary of two views ; b will have one of these values : position.bias.forward position.bias.backward"}{"idx": 80664, "node_name": "p0", "Dec": "the position of the first character ( > =0 )"}{"idx": 80665, "node_name": "b0", "Dec": "the bias of the first character position , toward the previous character or the next character represented by the offset , in case the position is a boundary of two views ; b0 will have one of these values : position.bias.forward position.bias.backward"}{"idx": 80666, "node_name": "p1", "Dec": "the position of the last character ( > =0 )"}{"idx": 80667, "node_name": "b1", "Dec": "the bias for the second character position , defined one of the legal values shown above"}{"idx": 80668, "node_name": "a", "Dec": "the area of the view , which encompasses the requested region"}{"idx": 80670, "node_name": "x", "Dec": "the x coordinate > = 0"}{"idx": 80671, "node_name": "y", "Dec": "the y coordinate > = 0"}{"idx": 80672, "node_name": "a", "Dec": "the allocated region in which to render"}{"idx": 80673, "node_name": "biasreturn", "Dec": "the returned bias"}{"idx": 80675, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80676, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80677, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 80679, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80680, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80681, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 80683, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80684, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80685, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 80693, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80694, "node_name": "offset", "Dec": "the location in the document model that a broken fragment would occupy > = 0 . this would be the starting offset of the fragment returned"}{"idx": 80695, "node_name": "pos", "Dec": "the position along the axis that the broken view would occupy > = 0 . this may be useful for things like tab calculations"}{"idx": 80696, "node_name": "len", "Dec": "specifies the distance along the axis where a potential break is desired > = 0"}{"idx": 80698, "node_name": "p0", "Dec": "the starting offset > = 0 . this should be a value greater or equal to the element starting offset and less than the element ending offset ."}{"idx": 80699, "node_name": "p1", "Dec": "the ending offset > p0 . this should be a value less than or equal to the elements end offset and greater than the elements starting offset ."}{"idx": 80701, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80702, "node_name": "pos", "Dec": "the potential location of the start of the broken view > = 0 . this may be useful for calculating tab positions"}{"idx": 80703, "node_name": "len", "Dec": "specifies the relative length from pos where a potential break is desired > = 0"}{"idx": 80705, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80707, "node_name": "width", "Dec": "the width > = 0"}{"idx": 80708, "node_name": "height", "Dec": "the height > = 0"}{"idx": 80712, "node_name": "x", "Dec": "the x coordinate"}{"idx": 80713, "node_name": "y", "Dec": "the y coordinate"}{"idx": 80714, "node_name": "allocation", "Dec": "current allocation of the view ."}{"idx": 80716, "node_name": "x", "Dec": "the x coordinate"}{"idx": 80717, "node_name": "y", "Dec": "the y coordinate"}{"idx": 80718, "node_name": "allocation", "Dec": "current allocation of the view ."}{"idx": 80720, "node_name": "ec", "Dec": "the change information for the element this view is responsible for . this should not be null if updateChildren(javax.swing.event.DocumentEvent.ElementChange,javax.swing.event.DocumentEvent,javax.swing.text.ViewFactory) gets called"}{"idx": 80721, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80722, "node_name": "f", "Dec": "the factory to use to build child views"}{"idx": 80724, "node_name": "ec", "Dec": "changes to the element this view is responsible for ( may be null if there were no changes ) ."}{"idx": 80725, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80726, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80727, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 80729, "node_name": "v", "Dec": "the child view to forward the event to"}{"idx": 80730, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80731, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80732, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 80734, "node_name": "ec", "Dec": "changes to the element this view is responsible for ( may be null if there were no changes )"}{"idx": 80735, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80736, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80739, "node_name": "elem", "Dec": "the piece of the document to build a view of"}{"idx": 80742, "node_name": "elem", "Dec": "the element underlying the view"}{"idx": 80744, "node_name": "elem", "Dec": "the element underlying the view"}{"idx": 80745, "node_name": "wordwrap", "Dec": "should lines be wrapped on word boundaries ?"}{"idx": 80748, "node_name": "p0", "Dec": "the starting document location to use > = 0"}{"idx": 80749, "node_name": "p1", "Dec": "the ending document location to use > = p1"}{"idx": 80750, "node_name": "g", "Dec": "the graphics context"}{"idx": 80751, "node_name": "x", "Dec": "the starting x position > = 0"}{"idx": 80752, "node_name": "y", "Dec": "the starting y position > = 0"}{"idx": 80754, "node_name": "g", "Dec": "the graphics context"}{"idx": 80755, "node_name": "x", "Dec": "the starting x coordinate > = 0"}{"idx": 80756, "node_name": "y", "Dec": "the starting y coordinate > = 0"}{"idx": 80757, "node_name": "p0", "Dec": "the beginning position in the model > = 0"}{"idx": 80758, "node_name": "p1", "Dec": "the ending position in the model > = p0"}{"idx": 80760, "node_name": "g", "Dec": "the graphics context"}{"idx": 80761, "node_name": "x", "Dec": "the starting x coordinate > = 0"}{"idx": 80762, "node_name": "y", "Dec": "the starting y coordinate > = 0"}{"idx": 80763, "node_name": "p0", "Dec": "the beginning position in the model > = 0"}{"idx": 80764, "node_name": "p1", "Dec": "the ending position in the model > = p0"}{"idx": 80767, "node_name": "p0", "Dec": "the starting document location"}{"idx": 80768, "node_name": "p1", "Dec": "the ending document location to use"}{"idx": 80770, "node_name": "f", "Dec": "the view factory"}{"idx": 80772, "node_name": "x", "Dec": "the current position > = 0"}{"idx": 80773, "node_name": "taboffset", "Dec": "the position within the text stream that the tab occurred at > = 0 ."}{"idx": 80775, "node_name": "g", "Dec": "the rendering surface to use"}{"idx": 80776, "node_name": "a", "Dec": "the allocated region to render into"}{"idx": 80778, "node_name": "width", "Dec": "the width > = 0"}{"idx": 80779, "node_name": "height", "Dec": "the height > = 0"}{"idx": 80781, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80783, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80785, "node_name": "axis", "Dec": "may be either view.x_axis or view.y_axis"}{"idx": 80787, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80788, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80789, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 80791, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80792, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80793, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 80795, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80796, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80797, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 80800, "node_name": "elem", "Dec": "the element this view is responsible for"}{"idx": 80801, "node_name": "axis", "Dec": "either view.x_axis or view.y_axis"}{"idx": 80804, "node_name": "size", "Dec": "the number of characters the zone may represent before attempting to break the zone into a smaller size ."}{"idx": 80807, "node_name": "mzl", "Dec": "the desired maximum number of zones to be actively loaded , must be greater than 0"}{"idx": 80809, "node_name": "zone", "Dec": "the child view that was just loaded ."}{"idx": 80811, "node_name": "zone", "Dec": "the child view desired to be set to an unloaded state ."}{"idx": 80813, "node_name": "zone", "Dec": "the zone"}{"idx": 80815, "node_name": "p0", "Dec": "the start of the desired zone . this should be > = getstartoffset() and < getendoffset() . this value should also be < p1 ."}{"idx": 80816, "node_name": "p1", "Dec": "the end of the desired zone . this should be > getstartoffset() and <= getendoffset() . this value should also be > p0 ."}{"idx": 80818, "node_name": "f", "Dec": "the view factory"}{"idx": 80820, "node_name": "pos", "Dec": "the position > = 0"}{"idx": 80822, "node_name": "ec", "Dec": "the change information for the element this view is responsible for . this should not be null if updateChildren(javax.swing.event.DocumentEvent.ElementChange,javax.swing.event.DocumentEvent,javax.swing.text.ViewFactory) gets called"}{"idx": 80823, "node_name": "e", "Dec": "the change information from the associated document"}{"idx": 80824, "node_name": "f", "Dec": "the factory to use to build child views"}{"idx": 80826, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 80827, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80828, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 80830, "node_name": "changes", "Dec": "the change information from the associated document"}{"idx": 80831, "node_name": "a", "Dec": "the current allocation of the view"}{"idx": 80832, "node_name": "f", "Dec": "the factory to use to rebuild if the view has children"}{"idx": 80836, "node_name": "delay", "Dec": "milliseconds for the initial and between-event delay"}{"idx": 80837, "node_name": "listener", "Dec": "an initial listener ; can be null"}{"idx": 80839, "node_name": "listener", "Dec": "the listener to add"}{"idx": 80841, "node_name": "listener", "Dec": "the listener to remove"}{"idx": 80844, "node_name": "e", "Dec": "the action event to fire"}{"idx": 80846, "node_name": "listenertype", "Dec": "the type of listeners requested ; this parameter should specify an interface that descends from java.util.eventlistener"}{"idx": 80848, "node_name": "flag", "Dec": "true to enable logging"}{"idx": 80851, "node_name": "delay", "Dec": "the delay in milliseconds"}{"idx": 80854, "node_name": "initialdelay", "Dec": "the initial delay , in milliseconds"}{"idx": 80857, "node_name": "flag", "Dec": "specify false to make the timer stop after sending its first action event"}{"idx": 80860, "node_name": "flag", "Dec": "specify false to turn off coalescing"}{"idx": 80863, "node_name": "command", "Dec": "the action command"}{"idx": 80875, "node_name": "flag", "Dec": "true to enable the tip , false otherwise"}{"idx": 80878, "node_name": "aflag", "Dec": "true if a lightweight panel is desired , false otherwise"}{"idx": 80881, "node_name": "milliseconds", "Dec": "the number of milliseconds to delay ( after the cursor has paused ) before displaying the tooltip"}{"idx": 80884, "node_name": "milliseconds", "Dec": "the number of milliseconds to delay before taking away the tooltip"}{"idx": 80887, "node_name": "milliseconds", "Dec": "time in milliseconds"}{"idx": 80891, "node_name": "component", "Dec": "a jcomponent object to add"}{"idx": 80893, "node_name": "component", "Dec": "a jcomponent object to remove"}{"idx": 80895, "node_name": "event", "Dec": "the event in question"}{"idx": 80897, "node_name": "event", "Dec": "the event in question"}{"idx": 80899, "node_name": "event", "Dec": "the event in question"}{"idx": 80901, "node_name": "event", "Dec": "the event in question"}{"idx": 80903, "node_name": "event", "Dec": "the event in question"}{"idx": 80910, "node_name": "droppoint", "Dec": "the drop point , representing the mouse's current location within the component ."}{"idx": 80920, "node_name": "property", "Dec": "the name of the property to transfer ; this can be null if there is no property associated with the transfer handler ( a subclass that performs some other kind of transfer , for example )"}{"idx": 80926, "node_name": "img", "Dec": "an image to drag"}{"idx": 80929, "node_name": "p", "Dec": "a point object that corresponds to coordinates of an anchor offset of the image relative to the upper left corner of the image"}{"idx": 80932, "node_name": "comp", "Dec": "the component holding the data to be transferred ; provided to enable sharing of transferhandlers"}{"idx": 80933, "node_name": "e", "Dec": "the event that triggered the transfer"}{"idx": 80934, "node_name": "action", "Dec": "the transfer action initially requested ; either copy , move or link ; the dnd system may change the action used during the course of the drag operation"}{"idx": 80936, "node_name": "comp", "Dec": "the component holding the data to be transferred ; provided to enable sharing of transferhandlers"}{"idx": 80937, "node_name": "clip", "Dec": "the clipboard to transfer the data into"}{"idx": 80938, "node_name": "action", "Dec": "the transfer action requested ; this should be a value of either copy or move ; the operation performed is the intersection of the transfer capabilities given by getsourceactions and the requested action ; the intersection may result in an action of none if the requested action isn't supported"}{"idx": 80940, "node_name": "support", "Dec": "the object containing the details of the transfer , not null ."}{"idx": 80942, "node_name": "comp", "Dec": "the component to receive the transfer ; provided to enable sharing of transferhandlers"}{"idx": 80943, "node_name": "t", "Dec": "the data to import"}{"idx": 80945, "node_name": "support", "Dec": "the object containing the details of the transfer , not null ."}{"idx": 80947, "node_name": "comp", "Dec": "the component to receive the transfer ; provided to enable sharing of transferhandlers"}{"idx": 80948, "node_name": "transferflavors", "Dec": "the data formats available"}{"idx": 80950, "node_name": "c", "Dec": "the component holding the data to be transferred ; provided to enable sharing of transferhandlers"}{"idx": 80952, "node_name": "t", "Dec": "the data to be transferred ; this value is expected to have been created by the createtransferable method"}{"idx": 80954, "node_name": "c", "Dec": "the component holding the data to be transferred ; provided to enable sharing of transferhandlers"}{"idx": 80956, "node_name": "source", "Dec": "the component that was the source of the data"}{"idx": 80957, "node_name": "data", "Dec": "the data that was transferred or possibly null if the action is none ."}{"idx": 80958, "node_name": "action", "Dec": "the actual action that was performed"}{"idx": 80961, "node_name": "component", "Dec": "the target component"}{"idx": 80962, "node_name": "transferable", "Dec": "the transferable"}{"idx": 80967, "node_name": "showdroplocation", "Dec": "whether or not to indicate the drop location"}{"idx": 80969, "node_name": "dropaction", "Dec": "the drop action"}{"idx": 80975, "node_name": "df", "Dec": "the dataflavor to test"}{"idx": 80985, "node_name": "nd", "Dec": "a nodedimensions object"}{"idx": 80988, "node_name": "newmodel", "Dec": "the treemodel that is to provide the data"}{"idx": 80991, "node_name": "rootvisible", "Dec": "true if the root node of the tree is to be displayed"}{"idx": 80994, "node_name": "rowheight", "Dec": "the height of each cell , in pixels"}{"idx": 80997, "node_name": "newlsm", "Dec": "the new treeselectionmodel"}{"idx": 81001, "node_name": "bounds", "Dec": "the region being queried"}{"idx": 81003, "node_name": "path", "Dec": "treepath to check"}{"idx": 81005, "node_name": "path", "Dec": "a treepath specifying a node"}{"idx": 81006, "node_name": "placein", "Dec": "a rectangle object giving the available space"}{"idx": 81008, "node_name": "row", "Dec": "the row being queried"}{"idx": 81010, "node_name": "path", "Dec": "the treepath being queried"}{"idx": 81012, "node_name": "x", "Dec": "the horizontal component of the desired location"}{"idx": 81013, "node_name": "y", "Dec": "the vertical component of the desired location"}{"idx": 81015, "node_name": "path", "Dec": "the starting location for the enumeration"}{"idx": 81017, "node_name": "path", "Dec": "the path being queried"}{"idx": 81019, "node_name": "path", "Dec": "the path being expanded or collapsed"}{"idx": 81020, "node_name": "isexpanded", "Dec": "true if the path should be expanded , false otherwise"}{"idx": 81022, "node_name": "path", "Dec": "the path being queried"}{"idx": 81026, "node_name": "path", "Dec": "the path being updated"}{"idx": 81028, "node_name": "e", "Dec": "the treemodelevent"}{"idx": 81030, "node_name": "e", "Dec": "the treemodelevent"}{"idx": 81032, "node_name": "e", "Dec": "the treemodelevent"}{"idx": 81034, "node_name": "e", "Dec": "the treemodelevent"}{"idx": 81036, "node_name": "paths", "Dec": "the array of treepaths being queried"}{"idx": 81038, "node_name": "value", "Dec": "the value to be represented"}{"idx": 81039, "node_name": "row", "Dec": "row being queried"}{"idx": 81040, "node_name": "depth", "Dec": "the depth of the row"}{"idx": 81041, "node_name": "expanded", "Dec": "true if row is expanded , false otherwise"}{"idx": 81042, "node_name": "placein", "Dec": "a rectangle containing the size needed to represent value"}{"idx": 81047, "node_name": "value", "Dec": "the value to be represented"}{"idx": 81048, "node_name": "row", "Dec": "row being queried"}{"idx": 81049, "node_name": "depth", "Dec": "the depth of the row"}{"idx": 81050, "node_name": "expanded", "Dec": "true if row is expanded , false otherwise"}{"idx": 81051, "node_name": "bounds", "Dec": "a rectangle containing the size needed to represent value"}{"idx": 81060, "node_name": "userobject", "Dec": "an object provided by the user that constitutes the node's data"}{"idx": 81062, "node_name": "userobject", "Dec": "an object provided by the user that constitutes the node's data"}{"idx": 81063, "node_name": "allowschildren", "Dec": "if true , the node is allowed to have child nodes -- otherwise , it is always a leaf node"}{"idx": 81065, "node_name": "newchild", "Dec": "the mutabletreenode to insert under this node"}{"idx": 81066, "node_name": "childindex", "Dec": "the index in this node's child array where this node is to be inserted"}{"idx": 81068, "node_name": "childindex", "Dec": "the index in this node's child array of the child to remove"}{"idx": 81070, "node_name": "newparent", "Dec": "this node's new parent"}{"idx": 81073, "node_name": "index", "Dec": "an index into this node's child array"}{"idx": 81076, "node_name": "achild", "Dec": "the treenode to search for among this node's children"}{"idx": 81079, "node_name": "allows", "Dec": "true if this node is allowed to have children"}{"idx": 81082, "node_name": "userobject", "Dec": "the object that constitutes this node's user-specified data"}{"idx": 81086, "node_name": "achild", "Dec": "a child of this node to remove"}{"idx": 81089, "node_name": "newchild", "Dec": "node to add as a child of this node"}{"idx": 81091, "node_name": "anothernode", "Dec": "node to test as an ancestor of this node"}{"idx": 81093, "node_name": "anothernode", "Dec": "node to test as descendant of this node"}{"idx": 81095, "node_name": "anode", "Dec": "node to find common ancestor with"}{"idx": 81097, "node_name": "anode", "Dec": "node to find common ancestor with"}{"idx": 81102, "node_name": "anode", "Dec": "the treenode to get the path for"}{"idx": 81103, "node_name": "depth", "Dec": "an int giving the number of steps already taken towards the root ( on recursive calls ) , used to size the returned array"}{"idx": 81114, "node_name": "ancestor", "Dec": "the node to start enumeration from"}{"idx": 81116, "node_name": "anode", "Dec": "the node to determinate whether it is a child"}{"idx": 81120, "node_name": "achild", "Dec": "the child node to look for next child after it"}{"idx": 81122, "node_name": "achild", "Dec": "the child node to look for previous child before it"}{"idx": 81124, "node_name": "anothernode", "Dec": "node to test as sibling of this node"}{"idx": 81139, "node_name": "border", "Dec": "a border object"}{"idx": 81141, "node_name": "border", "Dec": "the border to be rendered for this component"}{"idx": 81148, "node_name": "g", "Dec": "the specified graphics window"}{"idx": 81166, "node_name": "tree", "Dec": "a jtree object"}{"idx": 81167, "node_name": "renderer", "Dec": "a defaulttreecellrenderer object"}{"idx": 81169, "node_name": "tree", "Dec": "a jtree object"}{"idx": 81170, "node_name": "renderer", "Dec": "a defaulttreecellrenderer object"}{"idx": 81171, "node_name": "editor", "Dec": "a treecelleditor object"}{"idx": 81173, "node_name": "newcolor", "Dec": "the new border color"}{"idx": 81176, "node_name": "font", "Dec": "the editing font"}{"idx": 81179, "node_name": "tree", "Dec": "the jtree that is asking the editor to edit ; this parameter can be null"}{"idx": 81180, "node_name": "value", "Dec": "the value of the cell to be edited"}{"idx": 81181, "node_name": "isselected", "Dec": "true if the cell is to be rendered with selection highlighting"}{"idx": 81182, "node_name": "expanded", "Dec": "true if the node is expanded"}{"idx": 81183, "node_name": "leaf", "Dec": "true if the node is a leaf node"}{"idx": 81184, "node_name": "row", "Dec": "the row index of the node being edited"}{"idx": 81187, "node_name": "event", "Dec": "the event the editor should use to consider whether to begin editing or not"}{"idx": 81189, "node_name": "event", "Dec": "the event the editor should use to start editing"}{"idx": 81193, "node_name": "l", "Dec": "the listener to be added"}{"idx": 81195, "node_name": "l", "Dec": "the listener to be removed"}{"idx": 81198, "node_name": "e", "Dec": "the event that characterizes the change ."}{"idx": 81200, "node_name": "e", "Dec": "the event to be processed"}{"idx": 81202, "node_name": "newtree", "Dec": "the new tree to be edited"}{"idx": 81204, "node_name": "event", "Dec": "the event being studied"}{"idx": 81207, "node_name": "event", "Dec": "the event being studied"}{"idx": 81209, "node_name": "x", "Dec": "the x-coordinate of the point"}{"idx": 81210, "node_name": "y", "Dec": "the y-coordinate of the point"}{"idx": 81212, "node_name": "tree", "Dec": "a jtree object"}{"idx": 81213, "node_name": "value", "Dec": "a value"}{"idx": 81214, "node_name": "isselected", "Dec": "selection status"}{"idx": 81215, "node_name": "expanded", "Dec": "expansion status"}{"idx": 81216, "node_name": "leaf", "Dec": "leaf status"}{"idx": 81217, "node_name": "row", "Dec": "current row"}{"idx": 81238, "node_name": "newicon", "Dec": "the icon to be used for expanded non-leaf nodes"}{"idx": 81241, "node_name": "newicon", "Dec": "the icon to be used for not expanded non-leaf nodes"}{"idx": 81244, "node_name": "newicon", "Dec": "icon to be used for leaf nodes"}{"idx": 81247, "node_name": "newcolor", "Dec": "color to be used for text when the node is selected"}{"idx": 81250, "node_name": "newcolor", "Dec": "color to be used for text when the node isn't selected"}{"idx": 81253, "node_name": "newcolor", "Dec": "to be used for the background if the node is selected"}{"idx": 81256, "node_name": "newcolor", "Dec": "color to be used for the background for non selected nodes"}{"idx": 81259, "node_name": "newcolor", "Dec": "color to be used for the border"}{"idx": 81262, "node_name": "font", "Dec": "the desired font for this component"}{"idx": 81265, "node_name": "color", "Dec": "the desired background color"}{"idx": 81267, "node_name": "tree", "Dec": "the receiver is being configured for"}{"idx": 81268, "node_name": "value", "Dec": "the value to render"}{"idx": 81269, "node_name": "sel", "Dec": "whether node is selected"}{"idx": 81270, "node_name": "expanded", "Dec": "whether node is expanded"}{"idx": 81271, "node_name": "leaf", "Dec": "whether node is a lead node"}{"idx": 81272, "node_name": "row", "Dec": "row index"}{"idx": 81273, "node_name": "hasfocus", "Dec": "whether node has focus"}{"idx": 81275, "node_name": "g", "Dec": "the graphics context in which to paint"}{"idx": 81281, "node_name": "tm", "Dec": "this parameter is not used"}{"idx": 81282, "node_name": "x", "Dec": "the x value of the dirty region"}{"idx": 81283, "node_name": "y", "Dec": "the y value of the dirty region"}{"idx": 81284, "node_name": "width", "Dec": "the width of the dirty region"}{"idx": 81285, "node_name": "height", "Dec": "the height of the dirty region"}{"idx": 81287, "node_name": "r", "Dec": "a rectangle containing the dirty region"}{"idx": 81290, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 81291, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 81292, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 81294, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 81295, "node_name": "oldvalue", "Dec": "the old value of the property ( as a byte )"}{"idx": 81296, "node_name": "newvalue", "Dec": "the new value of the property ( as a byte )"}{"idx": 81298, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 81299, "node_name": "oldvalue", "Dec": "the old value of the property ( as a char )"}{"idx": 81300, "node_name": "newvalue", "Dec": "the new value of the property ( as a char )"}{"idx": 81302, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 81303, "node_name": "oldvalue", "Dec": "the old value of the property ( as a short )"}{"idx": 81304, "node_name": "newvalue", "Dec": "the new value of the property ( as a short )"}{"idx": 81306, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 81307, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 81308, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 81310, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 81311, "node_name": "oldvalue", "Dec": "the old value of the property ( as a long )"}{"idx": 81312, "node_name": "newvalue", "Dec": "the new value of the property ( as a long )"}{"idx": 81314, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 81315, "node_name": "oldvalue", "Dec": "the old value of the property ( as a float )"}{"idx": 81316, "node_name": "newvalue", "Dec": "the new value of the property ( as a float )"}{"idx": 81318, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 81319, "node_name": "oldvalue", "Dec": "the old value of the property ( as a double )"}{"idx": 81320, "node_name": "newvalue", "Dec": "the new value of the property ( as a double )"}{"idx": 81322, "node_name": "propertyname", "Dec": "the property whose value has changed"}{"idx": 81323, "node_name": "oldvalue", "Dec": "the property's previous value"}{"idx": 81324, "node_name": "newvalue", "Dec": "the property's new value"}{"idx": 81330, "node_name": "root", "Dec": "a treenode object that is the root of the tree"}{"idx": 81332, "node_name": "root", "Dec": "a treenode object that is the root of the tree"}{"idx": 81333, "node_name": "asksallowschildren", "Dec": "a boolean , false if any node can have children , true if each node is asked to see if it can have children"}{"idx": 81335, "node_name": "newvalue", "Dec": "if true , getallowschildren() is messaged , otherwise isleaf() is messaged"}{"idx": 81338, "node_name": "root", "Dec": "new value of tree root"}{"idx": 81341, "node_name": "parent", "Dec": "a note in the tree , obtained from this data source"}{"idx": 81342, "node_name": "child", "Dec": "the node we are interested in"}{"idx": 81344, "node_name": "parent", "Dec": "a node in the tree , obtained from this data source"}{"idx": 81345, "node_name": "index", "Dec": "index of child to be returned"}{"idx": 81347, "node_name": "parent", "Dec": "a node in the tree , obtained from this data source"}{"idx": 81349, "node_name": "node", "Dec": "the node to check"}{"idx": 81352, "node_name": "path", "Dec": "path to the node that the user has altered"}{"idx": 81353, "node_name": "newvalue", "Dec": "the new value from the treecelleditor"}{"idx": 81355, "node_name": "newchild", "Dec": "child node to be inserted"}{"idx": 81356, "node_name": "parent", "Dec": "node to which children new node will be added"}{"idx": 81357, "node_name": "index", "Dec": "index of parent's children"}{"idx": 81359, "node_name": "node", "Dec": "the node to be removed from it's parrent"}{"idx": 81361, "node_name": "node", "Dec": "the changed node"}{"idx": 81363, "node_name": "node", "Dec": "the node below which the model has changed"}{"idx": 81365, "node_name": "node", "Dec": "parent node which children count been incremented"}{"idx": 81366, "node_name": "childindices", "Dec": "indexes of inserted children"}{"idx": 81368, "node_name": "node", "Dec": "parent node which childred were removed"}{"idx": 81369, "node_name": "childindices", "Dec": "indexes of removed childs"}{"idx": 81370, "node_name": "removedchildren", "Dec": "array of the children objects that were removed"}{"idx": 81372, "node_name": "node", "Dec": "changed node"}{"idx": 81373, "node_name": "childindices", "Dec": "indexes of changed children"}{"idx": 81375, "node_name": "node", "Dec": "changed node"}{"idx": 81377, "node_name": "anode", "Dec": "the treenode to get the path for"}{"idx": 81379, "node_name": "anode", "Dec": "the treenode to get the path for"}{"idx": 81380, "node_name": "depth", "Dec": "an int giving the number of steps already taken towards the root ( on recursive calls ) , used to size the returned array"}{"idx": 81382, "node_name": "l", "Dec": "the listener to add"}{"idx": 81384, "node_name": "l", "Dec": "the listener to remove"}{"idx": 81387, "node_name": "source", "Dec": "the source of the treemodelevent ; typically this"}{"idx": 81388, "node_name": "path", "Dec": "the path to the parent of the nodes that changed ; use null to identify the root has changed"}{"idx": 81389, "node_name": "childindices", "Dec": "the indices of the changed elements"}{"idx": 81390, "node_name": "children", "Dec": "the changed elements"}{"idx": 81392, "node_name": "source", "Dec": "the source of the treemodelevent ; typically this"}{"idx": 81393, "node_name": "path", "Dec": "the path to the parent the nodes were added to"}{"idx": 81394, "node_name": "childindices", "Dec": "the indices of the new elements"}{"idx": 81395, "node_name": "children", "Dec": "the new elements"}{"idx": 81397, "node_name": "source", "Dec": "the source of the treemodelevent ; typically this"}{"idx": 81398, "node_name": "path", "Dec": "the path to the parent the nodes were removed from"}{"idx": 81399, "node_name": "childindices", "Dec": "the indices of the removed elements"}{"idx": 81400, "node_name": "children", "Dec": "the removed elements"}{"idx": 81402, "node_name": "source", "Dec": "the source of the treemodelevent ; typically this"}{"idx": 81403, "node_name": "path", "Dec": "the path to the parent of the structure that has changed ; use null to identify the root has changed"}{"idx": 81404, "node_name": "childindices", "Dec": "the indices of the affected elements"}{"idx": 81405, "node_name": "children", "Dec": "the affected elements"}{"idx": 81407, "node_name": "listenertype", "Dec": "the type of listeners requested"}{"idx": 81421, "node_name": "newmapper", "Dec": "rowmapper to be set"}{"idx": 81424, "node_name": "mode", "Dec": "selection mode to be set"}{"idx": 81427, "node_name": "path", "Dec": "new path to select"}{"idx": 81429, "node_name": "ppaths", "Dec": "the new selection"}{"idx": 81431, "node_name": "path", "Dec": "the new path to add to the current selection"}{"idx": 81433, "node_name": "paths", "Dec": "the new path to add to the current selection"}{"idx": 81435, "node_name": "path", "Dec": "the path to remove from the selection"}{"idx": 81437, "node_name": "paths", "Dec": "the paths to remove from the selection"}{"idx": 81442, "node_name": "path", "Dec": "the path to be loked for"}{"idx": 81446, "node_name": "x", "Dec": "the new listener to be added"}{"idx": 81448, "node_name": "x", "Dec": "the listener to remove"}{"idx": 81451, "node_name": "e", "Dec": "the event that characterizes the change"}{"idx": 81453, "node_name": "listenertype", "Dec": "the type of listeners requested"}{"idx": 81458, "node_name": "row", "Dec": "row to check"}{"idx": 81463, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 81465, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 81469, "node_name": "paths", "Dec": "array of paths to check"}{"idx": 81471, "node_name": "paths", "Dec": "array of treepaths to check"}{"idx": 81473, "node_name": "paths", "Dec": "array of treepath to check"}{"idx": 81481, "node_name": "event", "Dec": "a treeexpansionevent object"}{"idx": 81483, "node_name": "event", "Dec": "a treeexpansionevent object"}{"idx": 81484, "node_name": "message", "Dec": "a string containing the message"}{"idx": 81488, "node_name": "newmodel", "Dec": "the treemodel that is to provide the data"}{"idx": 81490, "node_name": "rootvisible", "Dec": "true if the root node of the tree is to be displayed"}{"idx": 81492, "node_name": "rowheight", "Dec": "the height of each cell , in pixels"}{"idx": 81495, "node_name": "path", "Dec": "the path being updated"}{"idx": 81498, "node_name": "path", "Dec": "treepath to check"}{"idx": 81500, "node_name": "path", "Dec": "a treepath specifying a node"}{"idx": 81501, "node_name": "placein", "Dec": "a rectangle object giving the available space"}{"idx": 81503, "node_name": "row", "Dec": "the row being queried"}{"idx": 81505, "node_name": "path", "Dec": "the treepath being queried"}{"idx": 81507, "node_name": "x", "Dec": "the horizontal component of the desired location"}{"idx": 81508, "node_name": "y", "Dec": "the vertical component of the desired location"}{"idx": 81510, "node_name": "path", "Dec": "the path being queried"}{"idx": 81512, "node_name": "path", "Dec": "the starting location for the enumeration"}{"idx": 81514, "node_name": "path", "Dec": "the path being expanded or collapsed"}{"idx": 81515, "node_name": "isexpanded", "Dec": "true if the path should be expanded , false otherwise"}{"idx": 81517, "node_name": "path", "Dec": "the path being queried"}{"idx": 81519, "node_name": "e", "Dec": "the treemodelevent"}{"idx": 81521, "node_name": "e", "Dec": "the treemodelevent"}{"idx": 81523, "node_name": "e", "Dec": "the treemodelevent"}{"idx": 81525, "node_name": "e", "Dec": "the treemodelevent"}{"idx": 81528, "node_name": "child", "Dec": "node to be added"}{"idx": 81529, "node_name": "index", "Dec": "index of the receiver"}{"idx": 81531, "node_name": "index", "Dec": "index of child to be removed"}{"idx": 81533, "node_name": "node", "Dec": "node to be removed from the receiver"}{"idx": 81535, "node_name": "object", "Dec": "object to be set as a receiver"}{"idx": 81538, "node_name": "newparent", "Dec": "node to be set as parent of the receiver"}{"idx": 81541, "node_name": "path", "Dec": "array of treepath to parse"}{"idx": 81544, "node_name": "tree", "Dec": "the jtree that is asking the editor to edit ; this parameter can be null"}{"idx": 81545, "node_name": "value", "Dec": "the value of the cell to be edited"}{"idx": 81546, "node_name": "isselected", "Dec": "true if the cell is to be rendered with selection highlighting"}{"idx": 81547, "node_name": "expanded", "Dec": "true if the node is expanded"}{"idx": 81548, "node_name": "leaf", "Dec": "true if the node is a leaf node"}{"idx": 81549, "node_name": "row", "Dec": "the row index of the node being edited"}{"idx": 81552, "node_name": "tree", "Dec": "the receiver is being configured for"}{"idx": 81553, "node_name": "value", "Dec": "the value to render"}{"idx": 81554, "node_name": "selected", "Dec": "whether node is selected"}{"idx": 81555, "node_name": "expanded", "Dec": "whether node is expanded"}{"idx": 81556, "node_name": "leaf", "Dec": "whether node is a lead node"}{"idx": 81557, "node_name": "row", "Dec": "row index"}{"idx": 81558, "node_name": "hasfocus", "Dec": "whether node has focus"}{"idx": 81562, "node_name": "parent", "Dec": "a node in the tree , obtained from this data source"}{"idx": 81563, "node_name": "index", "Dec": "index of child to be returned"}{"idx": 81565, "node_name": "parent", "Dec": "a node in the tree , obtained from this data source"}{"idx": 81567, "node_name": "node", "Dec": "a node in the tree , obtained from this data source"}{"idx": 81569, "node_name": "path", "Dec": "path to the node that the user has altered"}{"idx": 81570, "node_name": "newvalue", "Dec": "the new value from the treecelleditor"}{"idx": 81572, "node_name": "parent", "Dec": "a node in the tree , obtained from this data source"}{"idx": 81573, "node_name": "child", "Dec": "the node we are interested in"}{"idx": 81575, "node_name": "l", "Dec": "the listener to add"}{"idx": 81577, "node_name": "l", "Dec": "the listener to remove"}{"idx": 81580, "node_name": "childindex", "Dec": "index of child"}{"idx": 81584, "node_name": "node", "Dec": "node to be loked for"}{"idx": 81590, "node_name": "path", "Dec": "an array of objects representing the path to a node"}{"idx": 81592, "node_name": "lastpathcomponent", "Dec": "the root"}{"idx": 81594, "node_name": "parent", "Dec": "the path to the parent , or null to indicate the root"}{"idx": 81595, "node_name": "lastpathcomponent", "Dec": "the last path element"}{"idx": 81597, "node_name": "path", "Dec": "the array to create the treepath from"}{"idx": 81598, "node_name": "length", "Dec": "identifies the number of elements in path to create the treepath from"}{"idx": 81604, "node_name": "index", "Dec": "the index of the element requested"}{"idx": 81606, "node_name": "o", "Dec": "the object to compare"}{"idx": 81609, "node_name": "atreepath", "Dec": "the treepath to check"}{"idx": 81611, "node_name": "child", "Dec": "the path element to add"}{"idx": 81619, "node_name": "mode", "Dec": "selection mode to be set"}{"idx": 81622, "node_name": "path", "Dec": "new path to select"}{"idx": 81624, "node_name": "paths", "Dec": "new selection"}{"idx": 81626, "node_name": "path", "Dec": "the new path to add to the current selection"}{"idx": 81628, "node_name": "paths", "Dec": "the new paths to add to the current selection"}{"idx": 81630, "node_name": "path", "Dec": "the path to remove from the selection"}{"idx": 81632, "node_name": "paths", "Dec": "the path to remove from the selection"}{"idx": 81637, "node_name": "path", "Dec": "the path to be loked for"}{"idx": 81641, "node_name": "newmapper", "Dec": "rowmapper to be set"}{"idx": 81647, "node_name": "row", "Dec": "row to check"}{"idx": 81652, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 81654, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 81656, "node_name": "x", "Dec": "the new listener to be added"}{"idx": 81658, "node_name": "x", "Dec": "the listener to remove"}{"idx": 81662, "node_name": "newmodel", "Dec": "the treemodel that is to provide the data"}{"idx": 81664, "node_name": "rootvisible", "Dec": "true if the root node of the tree is to be displayed"}{"idx": 81666, "node_name": "rowheight", "Dec": "the height of each cell , in pixels"}{"idx": 81668, "node_name": "nd", "Dec": "the renderer"}{"idx": 81670, "node_name": "path", "Dec": "the treepath of interest"}{"idx": 81671, "node_name": "isexpanded", "Dec": "true if the path should be expanded , otherwise false"}{"idx": 81673, "node_name": "path", "Dec": "the path being queried"}{"idx": 81675, "node_name": "path", "Dec": "the path to be drawn"}{"idx": 81676, "node_name": "placein", "Dec": "the bounds of the enclosing rectangle"}{"idx": 81678, "node_name": "row", "Dec": "the location of interest"}{"idx": 81680, "node_name": "path", "Dec": "the treepath of interest"}{"idx": 81683, "node_name": "path", "Dec": "the treepath which is now invalid"}{"idx": 81686, "node_name": "bounds", "Dec": "the region being queried"}{"idx": 81688, "node_name": "x", "Dec": "the x-coordinate"}{"idx": 81689, "node_name": "y", "Dec": "the y-coordinate"}{"idx": 81691, "node_name": "path", "Dec": "the location in the treepath to start"}{"idx": 81693, "node_name": "path", "Dec": "the path being queried"}{"idx": 81696, "node_name": "path", "Dec": "treepath to check"}{"idx": 81698, "node_name": "e", "Dec": "the treemodelevent of interest"}{"idx": 81700, "node_name": "e", "Dec": "the treemodelevent of interest"}{"idx": 81702, "node_name": "e", "Dec": "the treemodelevent of interest"}{"idx": 81704, "node_name": "e", "Dec": "the treemodelevent of interest"}{"idx": 81708, "node_name": "table", "Dec": "a uidefaults table"}{"idx": 81712, "node_name": "initialcapacity", "Dec": "the initial capacity of the defaults table"}{"idx": 81713, "node_name": "loadfactor", "Dec": "the load factor of the defaults table"}{"idx": 81715, "node_name": "keyvaluelist", "Dec": "an array of objects containing the key / value pairs"}{"idx": 81717, "node_name": "key", "Dec": "the desired key"}{"idx": 81719, "node_name": "key", "Dec": "the desired key"}{"idx": 81720, "node_name": "l", "Dec": "the desired locale"}{"idx": 81722, "node_name": "key", "Dec": "the unique object who's value will be used to retrieve the data value associated with it"}{"idx": 81723, "node_name": "value", "Dec": "the new object to store as data under that key"}{"idx": 81725, "node_name": "keyvaluelist", "Dec": "an array of key / value pairs"}{"idx": 81727, "node_name": "key", "Dec": "the desired key"}{"idx": 81729, "node_name": "key", "Dec": "the desired key"}{"idx": 81730, "node_name": "l", "Dec": "the desired locale"}{"idx": 81732, "node_name": "key", "Dec": "the desired key"}{"idx": 81734, "node_name": "key", "Dec": "the desired key"}{"idx": 81735, "node_name": "l", "Dec": "the desired locale"}{"idx": 81737, "node_name": "key", "Dec": "the desired key"}{"idx": 81739, "node_name": "key", "Dec": "the desired key"}{"idx": 81740, "node_name": "l", "Dec": "the desired locale"}{"idx": 81742, "node_name": "key", "Dec": "the desired key"}{"idx": 81744, "node_name": "key", "Dec": "the desired key"}{"idx": 81745, "node_name": "l", "Dec": "the desired locale"}{"idx": 81747, "node_name": "key", "Dec": "the desired key"}{"idx": 81749, "node_name": "key", "Dec": "the desired key"}{"idx": 81750, "node_name": "l", "Dec": "the desired locale"}{"idx": 81752, "node_name": "key", "Dec": "the desired key"}{"idx": 81754, "node_name": "key", "Dec": "the desired key"}{"idx": 81755, "node_name": "l", "Dec": "the desired locale"}{"idx": 81757, "node_name": "key", "Dec": "an object specifying the key for the desired boolean value"}{"idx": 81759, "node_name": "key", "Dec": "an object specifying the key for the desired boolean value"}{"idx": 81760, "node_name": "l", "Dec": "the desired locale"}{"idx": 81762, "node_name": "key", "Dec": "the desired key"}{"idx": 81764, "node_name": "key", "Dec": "the desired key"}{"idx": 81765, "node_name": "l", "Dec": "the desired locale"}{"idx": 81767, "node_name": "key", "Dec": "the desired key"}{"idx": 81769, "node_name": "key", "Dec": "the desired key"}{"idx": 81770, "node_name": "l", "Dec": "the desired locale"}{"idx": 81772, "node_name": "uiclassid", "Dec": "a string containing the class id"}{"idx": 81773, "node_name": "uiclassloader", "Dec": "the object which will load the class"}{"idx": 81775, "node_name": "uiclassid", "Dec": "a string containing the class id"}{"idx": 81777, "node_name": "msg", "Dec": "message string to print"}{"idx": 81779, "node_name": "target", "Dec": "the jcomponent which needs a ui"}{"idx": 81781, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 81783, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 81786, "node_name": "propertyname", "Dec": "the programmatic name of the property that was changed"}{"idx": 81787, "node_name": "oldvalue", "Dec": "the old value of the property"}{"idx": 81788, "node_name": "newvalue", "Dec": "the new value of the property"}{"idx": 81790, "node_name": "bundlename", "Dec": "the base name of the resource bundle to be added"}{"idx": 81792, "node_name": "bundlename", "Dec": "the base name of the resource bundle to be removed"}{"idx": 81794, "node_name": "l", "Dec": "the new default locale"}{"idx": 81798, "node_name": "bindings", "Dec": "the bindings"}{"idx": 81800, "node_name": "table", "Dec": "a uidefaults table"}{"idx": 81803, "node_name": "table", "Dec": "a uidefaults table"}{"idx": 81806, "node_name": "c", "Dec": "a string specifying the classname of the instance to be created on demand"}{"idx": 81808, "node_name": "c", "Dec": "a string specifying the classname of the class containing a static method to be called for instance creation"}{"idx": 81809, "node_name": "m", "Dec": "a string specifying the static method to be called on class c"}{"idx": 81811, "node_name": "c", "Dec": "a string specifying the classname of the instance to be created on demand"}{"idx": 81812, "node_name": "o", "Dec": "an array of objects to be passed as paramaters to <init>(java.lang.String,java.lang.Object[]) in class c"}{"idx": 81814, "node_name": "c", "Dec": "a string specifying the classname of the class containing a static method to be called for instance creation ."}{"idx": 81815, "node_name": "m", "Dec": "a string specifying the static method to be called on class c"}{"idx": 81816, "node_name": "o", "Dec": "an array of objects to be passed as paramaters to the static method in class c"}{"idx": 81818, "node_name": "table", "Dec": "a uidefaults table"}{"idx": 81823, "node_name": "infos", "Dec": "set of lookandfeelinfo objects specifying the available look and feels"}{"idx": 81825, "node_name": "info", "Dec": "a lookandfeelinfo object that names the look and feel and identifies the class that implements it"}{"idx": 81827, "node_name": "name", "Dec": "descriptive name of the look and feel"}{"idx": 81828, "node_name": "classname", "Dec": "name of the class that implements the look and feel"}{"idx": 81831, "node_name": "name", "Dec": "a string specifying the name of the built-in look and feel"}{"idx": 81833, "node_name": "newlookandfeel", "Dec": "lookandfeel to install"}{"idx": 81835, "node_name": "classname", "Dec": "a string specifying the name of the class that implements the look and feel"}{"idx": 81840, "node_name": "key", "Dec": "an object specifying the font"}{"idx": 81842, "node_name": "key", "Dec": "an object specifying the font"}{"idx": 81843, "node_name": "l", "Dec": "the locale for which the font is desired ; refer to uidefaults for details on how a null locale is handled"}{"idx": 81845, "node_name": "key", "Dec": "an object specifying the color"}{"idx": 81847, "node_name": "key", "Dec": "an object specifying the color"}{"idx": 81848, "node_name": "l", "Dec": "the locale for which the color is desired ; refer to uidefaults for details on how a null locale is handled"}{"idx": 81850, "node_name": "key", "Dec": "an object specifying the icon"}{"idx": 81852, "node_name": "key", "Dec": "an object specifying the icon"}{"idx": 81853, "node_name": "l", "Dec": "the locale for which the icon is desired ; refer to uidefaults for details on how a null locale is handled"}{"idx": 81855, "node_name": "key", "Dec": "an object specifying the border"}{"idx": 81857, "node_name": "key", "Dec": "an object specifying the border"}{"idx": 81858, "node_name": "l", "Dec": "the locale for which the border is desired ; refer to uidefaults for details on how a null locale is handled"}{"idx": 81860, "node_name": "key", "Dec": "an object specifying the string"}{"idx": 81862, "node_name": "key", "Dec": "an object specifying the string"}{"idx": 81863, "node_name": "l", "Dec": "the locale for which the string is desired ; refer to uidefaults for details on how a null locale is handled"}{"idx": 81865, "node_name": "key", "Dec": "an object specifying the int"}{"idx": 81867, "node_name": "key", "Dec": "an object specifying the int"}{"idx": 81868, "node_name": "l", "Dec": "the locale for which the int is desired ; refer to uidefaults for details on how a null locale is handled"}{"idx": 81870, "node_name": "key", "Dec": "an object specifying the key for the desired boolean value"}{"idx": 81872, "node_name": "key", "Dec": "an object specifying the key for the desired boolean value"}{"idx": 81873, "node_name": "l", "Dec": "the locale for which the boolean is desired ; refer to uidefaults for details on how a null locale is handled"}{"idx": 81875, "node_name": "key", "Dec": "an object specifying the insets object"}{"idx": 81877, "node_name": "key", "Dec": "an object specifying the insets object"}{"idx": 81878, "node_name": "l", "Dec": "the locale for which the object is desired ; refer to uidefaults for details on how a null locale is handled"}{"idx": 81880, "node_name": "key", "Dec": "an object specifying the dimension object"}{"idx": 81882, "node_name": "key", "Dec": "an object specifying the dimension object"}{"idx": 81883, "node_name": "l", "Dec": "the locale for which the object is desired ; refer to uidefaults for details on how a null locale is handled"}{"idx": 81885, "node_name": "key", "Dec": "an object specifying the desired object"}{"idx": 81887, "node_name": "key", "Dec": "an object specifying the desired object"}{"idx": 81888, "node_name": "l", "Dec": "the locale for which the object is desired ; refer to uidefaults for details on how a null locale is handled"}{"idx": 81890, "node_name": "key", "Dec": "an object specifying the retrieval key"}{"idx": 81891, "node_name": "value", "Dec": "the object to store ; refer to uidefaults for details on how null is handled"}{"idx": 81893, "node_name": "target", "Dec": "the jcomponent to return the componentui for"}{"idx": 81896, "node_name": "laf", "Dec": "the lookandfeel object"}{"idx": 81898, "node_name": "laf", "Dec": "the lookandfeel to be removed"}{"idx": 81901, "node_name": "listener", "Dec": "the propertychangelistener to be added"}{"idx": 81903, "node_name": "listener", "Dec": "the propertychangelistener to be removed"}{"idx": 81907, "node_name": "name", "Dec": "a string specifying the name of the look and feel"}{"idx": 81908, "node_name": "classname", "Dec": "a string specifying the name of the class that implements the look and feel"}{"idx": 81922, "node_name": "anedit", "Dec": "the edit to be added"}{"idx": 81924, "node_name": "anedit", "Dec": "the edit to replace"}{"idx": 81942, "node_name": "anedit", "Dec": "the edit to be added"}{"idx": 81959, "node_name": "anobject", "Dec": "the object to watch for changing state"}{"idx": 81961, "node_name": "anobject", "Dec": "the object to watch for changing state"}{"idx": 81962, "node_name": "name", "Dec": "the presentation name to be used for this edit"}{"idx": 81964, "node_name": "anobject", "Dec": "the object to watch for changing state"}{"idx": 81965, "node_name": "name", "Dec": "the presentation name to be used for this edit"}{"idx": 81974, "node_name": "state", "Dec": "hashtable object to store the state"}{"idx": 81976, "node_name": "state", "Dec": "hashtable object to restore the state from it"}{"idx": 81984, "node_name": "anedit", "Dec": "the edit to be added"}{"idx": 81986, "node_name": "anedit", "Dec": "the edit that replaces the current edit"}{"idx": 81998, "node_name": "r", "Dec": "an object"}{"idx": 82000, "node_name": "l", "Dec": "an undoableeditlistener object"}{"idx": 82002, "node_name": "l", "Dec": "the undoableeditlistener object to be removed"}{"idx": 82005, "node_name": "e", "Dec": "edit to be verified"}{"idx": 82007, "node_name": "e", "Dec": "edit to be posted"}{"idx": 82019, "node_name": "from", "Dec": "the minimum index to remove"}{"idx": 82020, "node_name": "to", "Dec": "the maximum index to remove"}{"idx": 82022, "node_name": "l", "Dec": "the new limit"}{"idx": 82026, "node_name": "edit", "Dec": "the edit to be undo to"}{"idx": 82028, "node_name": "edit", "Dec": "the edit to be redo to"}{"idx": 82036, "node_name": "anedit", "Dec": "the edit to be added"}{"idx": 82042, "node_name": "e", "Dec": "the undoableeditevent the undoableeditevent will be added from"}{"idx": 82046, "node_name": "s", "Dec": "a message string"}{"idx": 82050, "node_name": "name", "Dec": "the name of the component"}{"idx": 82051, "node_name": "c", "Dec": "the component to be added"}{"idx": 82053, "node_name": "c", "Dec": "the component to remove"}{"idx": 82055, "node_name": "parent", "Dec": "the component which needs to be laid out"}{"idx": 82057, "node_name": "parent", "Dec": "the component which needs to be laid out"}{"idx": 82059, "node_name": "parent", "Dec": "the container to lay out"}{"idx": 82076, "node_name": "locale", "Dec": "a locale ; might be null"}{"idx": 82080, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 82086, "node_name": "diagnostic", "Dec": "a diagnostic representing the problem that was found"}{"idx": 82089, "node_name": "modulenames", "Dec": "the names of the root modules"}{"idx": 82091, "node_name": "locale", "Dec": "the locale to apply ; null means apply no locale"}{"idx": 82095, "node_name": "out", "Dec": "a writer for additional output from the tool ; use system.err if null"}{"idx": 82096, "node_name": "filemanager", "Dec": "a file manager ; if null use the tool's standard filemanager"}{"idx": 82097, "node_name": "diagnosticlistener", "Dec": "a diagnostic listener ; if null use the tool's default method for reporting diagnostics"}{"idx": 82098, "node_name": "docletclass", "Dec": "a class providing the necessary methods required of a doclet ; a value of null means to use the standard doclet ."}{"idx": 82099, "node_name": "options", "Dec": "documentation tool options and doclet options , null means no options"}{"idx": 82100, "node_name": "compilationunits", "Dec": "the compilation units to compile , null means no compilation units"}{"idx": 82102, "node_name": "diagnosticlistener", "Dec": "a diagnostic listener for non-fatal diagnostics ; if null use the compiler's default method for reporting diagnostics"}{"idx": 82103, "node_name": "locale", "Dec": "the locale to apply when formatting diagnostics ; null means the default locale ."}{"idx": 82104, "node_name": "charset", "Dec": "the character set used for decoding bytes ; if null use the platform default"}{"idx": 82108, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 82115, "node_name": "ignoreencodingerrors", "Dec": "ignore encoding errors if true"}{"idx": 82117, "node_name": "ignoreencodingerrors", "Dec": "ignore encoding errors if true"}{"idx": 82124, "node_name": "fileobject", "Dec": "delegate to this file object"}{"idx": 82128, "node_name": "ignoreencodingerrors", "Dec": "ignore encoding errors if true"}{"idx": 82130, "node_name": "ignoreencodingerrors", "Dec": "ignore encoding errors if true"}{"idx": 82135, "node_name": "filemanager", "Dec": "delegate to this file manager"}{"idx": 82137, "node_name": "location", "Dec": "a location"}{"idx": 82139, "node_name": "location", "Dec": "a location"}{"idx": 82140, "node_name": "packagename", "Dec": "a package name"}{"idx": 82141, "node_name": "kinds", "Dec": "return objects only of these kinds"}{"idx": 82142, "node_name": "recurse", "Dec": "if true include \" subpackages \""}{"idx": 82144, "node_name": "location", "Dec": "a location"}{"idx": 82145, "node_name": "file", "Dec": "a file object"}{"idx": 82147, "node_name": "a", "Dec": "a file object"}{"idx": 82148, "node_name": "b", "Dec": "a file object"}{"idx": 82150, "node_name": "current", "Dec": "current option"}{"idx": 82151, "node_name": "remaining", "Dec": "remaining options"}{"idx": 82153, "node_name": "location", "Dec": "a location"}{"idx": 82154, "node_name": "classname", "Dec": "the name of a class"}{"idx": 82155, "node_name": "kind", "Dec": "the kind of file , must be one of source or class"}{"idx": 82157, "node_name": "location", "Dec": "a package-oriented location"}{"idx": 82158, "node_name": "classname", "Dec": "the name of a class"}{"idx": 82159, "node_name": "kind", "Dec": "the kind of file , must be one of source or class"}{"idx": 82160, "node_name": "sibling", "Dec": "a file object to be used as hint for placement ; might be null"}{"idx": 82162, "node_name": "location", "Dec": "a package-oriented location"}{"idx": 82163, "node_name": "packagename", "Dec": "a package name"}{"idx": 82164, "node_name": "relativename", "Dec": "a relative name"}{"idx": 82166, "node_name": "location", "Dec": "an output location"}{"idx": 82167, "node_name": "packagename", "Dec": "a package name"}{"idx": 82168, "node_name": "relativename", "Dec": "a relative name"}{"idx": 82169, "node_name": "sibling", "Dec": "a file object to be used as hint for placement ; might be null"}{"idx": 82171, "node_name": "location", "Dec": "the module-oriented location"}{"idx": 82172, "node_name": "modulename", "Dec": "the name of the module to be found"}{"idx": 82174, "node_name": "location", "Dec": "the module-oriented location"}{"idx": 82175, "node_name": "fo", "Dec": "the file"}{"idx": 82177, "node_name": "location", "Dec": "the module-oriented location"}{"idx": 82178, "node_name": "service", "Dec": "the class object of the service class"}{"idx": 82180, "node_name": "location", "Dec": "a package-oriented location representing a module"}{"idx": 82182, "node_name": "location", "Dec": "the module-oriented location for which to list the modules"}{"idx": 82184, "node_name": "location", "Dec": "the location"}{"idx": 82185, "node_name": "fo", "Dec": "the file object"}{"idx": 82188, "node_name": "fileobject", "Dec": "delegate to this file object"}{"idx": 82191, "node_name": "modulenames", "Dec": "the names of the root modules"}{"idx": 82193, "node_name": "processors", "Dec": "processors ( for annotation processing )"}{"idx": 82195, "node_name": "locale", "Dec": "the locale to apply ; null means apply no locale"}{"idx": 82199, "node_name": "out", "Dec": "a writer for additional output from the compiler ; use system.err if null"}{"idx": 82200, "node_name": "filemanager", "Dec": "a file manager ; if null use the compiler's standard filemanager"}{"idx": 82201, "node_name": "diagnosticlistener", "Dec": "a diagnostic listener ; if null use the compiler's default method for reporting diagnostics"}{"idx": 82202, "node_name": "options", "Dec": "compiler options , null means no options"}{"idx": 82203, "node_name": "classes", "Dec": "names of classes to be processed by annotation processing , null means no class names"}{"idx": 82204, "node_name": "compilationunits", "Dec": "the compilation units to compile , null means no compilation units"}{"idx": 82206, "node_name": "diagnosticlistener", "Dec": "a diagnostic listener for non-fatal diagnostics ; if null use the compiler's default method for reporting diagnostics"}{"idx": 82207, "node_name": "locale", "Dec": "the locale to apply when formatting diagnostics ; null means the default locale ."}{"idx": 82208, "node_name": "charset", "Dec": "the character set used for decoding bytes ; if null use the platform default"}{"idx": 82211, "node_name": "location", "Dec": "a location"}{"idx": 82213, "node_name": "location", "Dec": "a location"}{"idx": 82214, "node_name": "packagename", "Dec": "a package name"}{"idx": 82215, "node_name": "kinds", "Dec": "return objects only of these kinds"}{"idx": 82216, "node_name": "recurse", "Dec": "if true include \" subpackages \""}{"idx": 82218, "node_name": "location", "Dec": "a location"}{"idx": 82219, "node_name": "file", "Dec": "a file object"}{"idx": 82221, "node_name": "a", "Dec": "a file object"}{"idx": 82222, "node_name": "b", "Dec": "a file object"}{"idx": 82224, "node_name": "current", "Dec": "current option"}{"idx": 82225, "node_name": "remaining", "Dec": "remaining options"}{"idx": 82227, "node_name": "location", "Dec": "a location"}{"idx": 82229, "node_name": "location", "Dec": "a location"}{"idx": 82230, "node_name": "classname", "Dec": "the name of a class"}{"idx": 82231, "node_name": "kind", "Dec": "the kind of file , must be one of source or class"}{"idx": 82233, "node_name": "location", "Dec": "a package-oriented location"}{"idx": 82234, "node_name": "classname", "Dec": "the name of a class"}{"idx": 82235, "node_name": "kind", "Dec": "the kind of file , must be one of source or class"}{"idx": 82236, "node_name": "sibling", "Dec": "a file object to be used as hint for placement ; might be null"}{"idx": 82238, "node_name": "location", "Dec": "a package-oriented location"}{"idx": 82239, "node_name": "packagename", "Dec": "a package name"}{"idx": 82240, "node_name": "relativename", "Dec": "a relative name"}{"idx": 82242, "node_name": "location", "Dec": "an output location"}{"idx": 82243, "node_name": "packagename", "Dec": "a package name"}{"idx": 82244, "node_name": "relativename", "Dec": "a relative name"}{"idx": 82245, "node_name": "sibling", "Dec": "a file object to be used as hint for placement ; might be null"}{"idx": 82249, "node_name": "location", "Dec": "the module-oriented location"}{"idx": 82250, "node_name": "modulename", "Dec": "the name of the module to be found"}{"idx": 82252, "node_name": "location", "Dec": "the module-oriented location"}{"idx": 82253, "node_name": "fo", "Dec": "the file"}{"idx": 82255, "node_name": "location", "Dec": "the module-oriented location"}{"idx": 82256, "node_name": "service", "Dec": "the class object of the service class"}{"idx": 82258, "node_name": "location", "Dec": "a package-oriented location representing a module"}{"idx": 82260, "node_name": "location", "Dec": "the module-oriented location for which to list the modules"}{"idx": 82262, "node_name": "location", "Dec": "the location"}{"idx": 82263, "node_name": "fo", "Dec": "the file object"}{"idx": 82271, "node_name": "simplename", "Dec": "a simple name of a class"}{"idx": 82272, "node_name": "kind", "Dec": "a kind"}{"idx": 82279, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 82282, "node_name": "option", "Dec": "an option"}{"idx": 82287, "node_name": "uri", "Dec": "the uri for this file object"}{"idx": 82288, "node_name": "kind", "Dec": "the kind of this file object"}{"idx": 82292, "node_name": "ignoreencodingerrors", "Dec": "ignore encoding errors if true"}{"idx": 82294, "node_name": "ignoreencodingerrors", "Dec": "ignore encoding errors if true"}{"idx": 82300, "node_name": "simplename", "Dec": "a simple name of a class"}{"idx": 82301, "node_name": "kind", "Dec": "a kind"}{"idx": 82306, "node_name": "a", "Dec": "a file object"}{"idx": 82307, "node_name": "b", "Dec": "a file object"}{"idx": 82309, "node_name": "files", "Dec": "a list of files"}{"idx": 82311, "node_name": "paths", "Dec": "a list of paths"}{"idx": 82313, "node_name": "files", "Dec": "an array of files"}{"idx": 82315, "node_name": "paths", "Dec": "an array of paths"}{"idx": 82317, "node_name": "names", "Dec": "a list of file names"}{"idx": 82319, "node_name": "names", "Dec": "a list of file names"}{"idx": 82321, "node_name": "location", "Dec": "a location"}{"idx": 82322, "node_name": "files", "Dec": "a list of files , if null use the default search path for this location"}{"idx": 82324, "node_name": "location", "Dec": "a location"}{"idx": 82325, "node_name": "paths", "Dec": "a list of paths , if null use the default search path for this location"}{"idx": 82327, "node_name": "location", "Dec": "the location"}{"idx": 82328, "node_name": "modulename", "Dec": "the name of the module"}{"idx": 82329, "node_name": "paths", "Dec": "the search path to associate with the location and module ."}{"idx": 82331, "node_name": "location", "Dec": "a location"}{"idx": 82333, "node_name": "location", "Dec": "a location"}{"idx": 82335, "node_name": "file", "Dec": "a file object"}{"idx": 82337, "node_name": "f", "Dec": "the factory"}{"idx": 82340, "node_name": "first", "Dec": "the path string or initial part of the path string"}{"idx": 82341, "node_name": "more", "Dec": "additional strings to be joined to form the path string"}{"idx": 82345, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 82347, "node_name": "name", "Dec": "a name"}{"idx": 82352, "node_name": "in", "Dec": "\" standard \" input ; use system.in if null"}{"idx": 82353, "node_name": "out", "Dec": "\" standard \" output ; use system.out if null"}{"idx": 82354, "node_name": "err", "Dec": "\" standard \" error ; use system.err if null"}{"idx": 82355, "node_name": "arguments", "Dec": "arguments to pass to the tool"}{"idx": 82390, "node_name": "s", "Dec": "the string object containing the exception message ."}{"idx": 82392, "node_name": "errcode", "Dec": "the error code identifying the exception ."}{"idx": 82406, "node_name": "xid", "Dec": "a global transaction identifier"}{"idx": 82407, "node_name": "onephase", "Dec": "if true , the resource manager should use a one-phase commit protocol to commit the work done on behalf of xid ."}{"idx": 82409, "node_name": "xid", "Dec": "a global transaction identifier that is the same as the identifier used previously in the start method ."}{"idx": 82410, "node_name": "flags", "Dec": "one of tmsuccess , tmfail , or tmsuspend ."}{"idx": 82412, "node_name": "xid", "Dec": "a global transaction identifier ."}{"idx": 82415, "node_name": "xares", "Dec": "an xaresource object whose resource manager instance is to be compared with the resource manager instance of the target object ."}{"idx": 82417, "node_name": "xid", "Dec": "a global transaction identifier ."}{"idx": 82419, "node_name": "flag", "Dec": "one of tmstartrscan , tmendrscan , tmnoflags . tmnoflags must be used when no other flags are set in the parameter ."}{"idx": 82421, "node_name": "xid", "Dec": "a global transaction identifier ."}{"idx": 82423, "node_name": "seconds", "Dec": "the transaction timeout value in seconds ."}{"idx": 82425, "node_name": "xid", "Dec": "a global transaction identifier to be associated with the resource ."}{"idx": 82426, "node_name": "flags", "Dec": "one of tmnoflags , tmjoin , or tmresume ."}{"idx": 82435, "node_name": "systemid", "Dec": "the system identifier of the entity to be matched"}{"idx": 82437, "node_name": "publicid", "Dec": "the public identifier of the entity to be matched"}{"idx": 82439, "node_name": "uri", "Dec": "the uri reference of the entity to be matched"}{"idx": 82443, "node_name": "message", "Dec": "the detail message"}{"idx": 82445, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method )"}{"idx": 82446, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 82449, "node_name": "feature", "Dec": "the feature to be set"}{"idx": 82450, "node_name": "value", "Dec": "the value to be set for the feature"}{"idx": 82455, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 82461, "node_name": "cf", "Dec": "the type of the catalog feature"}{"idx": 82465, "node_name": "features", "Dec": "the catalog features"}{"idx": 82466, "node_name": "uris", "Dec": "uri ( s ) to one or more catalogs ."}{"idx": 82468, "node_name": "catalog", "Dec": "the catalog instance"}{"idx": 82470, "node_name": "features", "Dec": "the catalog features"}{"idx": 82471, "node_name": "uris", "Dec": "the uri ( s ) to one or more catalogs"}{"idx": 82474, "node_name": "publicid", "Dec": "the public identifier of the external entity being referenced , or null if none was supplied"}{"idx": 82475, "node_name": "systemid", "Dec": "the system identifier of the external entity being referenced . a system identifier is required on all external entities . xml requires a system identifier on all external entities , so this value is always specified ."}{"idx": 82477, "node_name": "href", "Dec": "the href attribute that specifies the uri of a style sheet , which may be relative or absolute"}{"idx": 82478, "node_name": "base", "Dec": "the base uri against which the href attribute will be made absolute if the absolute uri is required"}{"idx": 82480, "node_name": "publicid", "Dec": "the public identifier of the external entity being referenced , or null if none was supplied"}{"idx": 82481, "node_name": "systemid", "Dec": "the system identifier of the external entity being referenced . a system identifier is required on all external entities . xml requires a system identifier on all external entities , so this value is always specified ."}{"idx": 82482, "node_name": "baseuri", "Dec": "the absolute base uri , not used by the catalogresolver"}{"idx": 82483, "node_name": "namespace", "Dec": "the namespace of the entity to resolve , not used by the catalogresolver ."}{"idx": 82485, "node_name": "type", "Dec": "the type of the resource being resolved , not used by the catalogresolver"}{"idx": 82486, "node_name": "namespaceuri", "Dec": "the namespace of the resource being resolved , not used by the catalogresolver"}{"idx": 82487, "node_name": "publicid", "Dec": "the public identifier of the external entity being referenced , or null if no public identifier was supplied or if the resource is not an entity ."}{"idx": 82488, "node_name": "systemid", "Dec": "the system identifier , a uri reference of the external resource being referenced"}{"idx": 82489, "node_name": "baseuri", "Dec": "the absolute base uri , not used by the catalogresolver"}{"idx": 82497, "node_name": "namespaceuri", "Dec": "a namespace uri"}{"idx": 82498, "node_name": "defaultprefix", "Dec": "the prefix to be returned in the event that the the specified namespace uri has not been bound to a prefix ."}{"idx": 82500, "node_name": "namespaceuri", "Dec": "a namespace uri"}{"idx": 82501, "node_name": "prefix", "Dec": "a namespace prefix ( or null to remove any existing mapping ) . specifying the empty string ( \"\") binds no prefix to the namespace uri ."}{"idx": 82503, "node_name": "baseuri", "Dec": "the base uri , or null to remove current value"}{"idx": 82505, "node_name": "name", "Dec": "the name of the property"}{"idx": 82507, "node_name": "name", "Dec": "the name of the property"}{"idx": 82508, "node_name": "value", "Dec": "the value of the property to be set"}{"idx": 82510, "node_name": "idvalue", "Dec": "the value of the id"}{"idx": 82512, "node_name": "element", "Dec": "the element"}{"idx": 82513, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute ( specify null if not applicable )"}{"idx": 82514, "node_name": "localname", "Dec": "the local name of the attribute"}{"idx": 82517, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 82519, "node_name": "key", "Dec": "key with which the specified value is to be associated with"}{"idx": 82520, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 82523, "node_name": "node", "Dec": "the node"}{"idx": 82526, "node_name": "feature", "Dec": "the feature name ( as an absolute uri )"}{"idx": 82551, "node_name": "signingkey", "Dec": "the signing key"}{"idx": 82552, "node_name": "parent", "Dec": "the parent node"}{"idx": 82554, "node_name": "signingkey", "Dec": "the signing key"}{"idx": 82555, "node_name": "parent", "Dec": "the parent node"}{"idx": 82556, "node_name": "nextsibling", "Dec": "the next sibling node"}{"idx": 82558, "node_name": "ks", "Dec": "the key selector"}{"idx": 82559, "node_name": "parent", "Dec": "the parent node"}{"idx": 82561, "node_name": "ks", "Dec": "the key selector"}{"idx": 82562, "node_name": "parent", "Dec": "the parent node"}{"idx": 82563, "node_name": "nextsibling", "Dec": "the next sibling node"}{"idx": 82565, "node_name": "parent", "Dec": "the parent node . the marshalled xmlsignature will be added as a child element of this node ."}{"idx": 82567, "node_name": "nextsibling", "Dec": "the next sibling node . the marshalled xmlsignature will be inserted immediately before this node . specify null to remove the current setting ."}{"idx": 82572, "node_name": "ks", "Dec": "a key selector for finding a validation key"}{"idx": 82573, "node_name": "node", "Dec": "the node"}{"idx": 82575, "node_name": "validatingkey", "Dec": "the validating key"}{"idx": 82576, "node_name": "node", "Dec": "the node"}{"idx": 82578, "node_name": "node", "Dec": "the node"}{"idx": 82584, "node_name": "parent", "Dec": "a mechanism-specific structure containing the parent node that the marshalled key info will be appended to"}{"idx": 82585, "node_name": "context", "Dec": "the xmlcryptocontext containing additional context ( may be null if not applicable )"}{"idx": 82589, "node_name": "mechanismtype", "Dec": "the type of the xml processing mechanism and representation . see the keyinfofactory section in the java security standard algorithm names specification for a list of standard mechanism types ."}{"idx": 82591, "node_name": "mechanismtype", "Dec": "the type of the xml processing mechanism and representation . see the keyinfofactory section in the java security standard algorithm names specification for a list of standard mechanism types ."}{"idx": 82592, "node_name": "provider", "Dec": "the provider object"}{"idx": 82594, "node_name": "mechanismtype", "Dec": "the type of the xml processing mechanism and representation . see the keyinfofactory section in the java security standard algorithm names specification for a list of standard mechanism types ."}{"idx": 82595, "node_name": "provider", "Dec": "the string name of the provider"}{"idx": 82600, "node_name": "content", "Dec": "a list of one or more xmlstructures representing key information types . the list is defensively copied to protect against subsequent modification ."}{"idx": 82602, "node_name": "content", "Dec": "a list of one or more xmlstructures representing key information types . the list is defensively copied to protect against subsequent modification ."}{"idx": 82603, "node_name": "id", "Dec": "the value of an xml id ( may be null )"}{"idx": 82605, "node_name": "name", "Dec": "the name that identifies the key"}{"idx": 82607, "node_name": "key", "Dec": "the public key"}{"idx": 82609, "node_name": "keyid", "Dec": "a pgp public key identifier as defined in rfc 2440 , section 11.2 . the array is cloned to protect against subsequent modification ."}{"idx": 82611, "node_name": "keyid", "Dec": "a pgp public key identifier as defined in rfc 2440 , section 11.2 . the array is cloned to protect against subsequent modification ."}{"idx": 82612, "node_name": "keypacket", "Dec": "a pgp key material packet as defined in rfc 2440 , section 5.5 . the array is cloned to protect against subsequent modification . may be null ."}{"idx": 82613, "node_name": "other", "Dec": "a list of xmlstructures representing elements from an external namespace . the list is defensively copied to protect against subsequent modification . may be null or empty ."}{"idx": 82615, "node_name": "keypacket", "Dec": "a pgp key material packet as defined in rfc 2440 , section 5.5 . the array is cloned to protect against subsequent modification ."}{"idx": 82616, "node_name": "other", "Dec": "a list of xmlstructures representing elements from an external namespace . the list is defensively copied to protect against subsequent modification . may be null or empty ."}{"idx": 82618, "node_name": "uri", "Dec": "the uri that identifies the keyinfo information to be retrieved"}{"idx": 82620, "node_name": "uri", "Dec": "the uri that identifies the keyinfo information to be retrieved"}{"idx": 82621, "node_name": "type", "Dec": "a uri that identifies the type of keyinfo information to be retrieved ( may be null )"}{"idx": 82622, "node_name": "transforms", "Dec": "a list of transforms . the list is defensively copied to protect against subsequent modification . may be null or empty ."}{"idx": 82624, "node_name": "content", "Dec": "a list of one or more x.509 content types . valid types are string ( subject names ) , byte [ ] ( subject key ids ) , x509certificate , x509crl , or xmlstructure ( x509issuerserial objects or elements from an external namespace ) . subject names are distinguished names in rfc 2253 string format . implementations must support the attribute type keywords defined in rfc 2253 ( cn , l , st , o , ou , c , street , dc and uid ) . implementations may support additional keywords . the list is defensively copied to protect against subsequent modification ."}{"idx": 82626, "node_name": "issuername", "Dec": "the issuer's distinguished name in rfc 2253 string format . implementations must support the attribute type keywords defined in rfc 2253 ( cn , l , st , o , ou , c , street , dc and uid ) . implementations may support additional keywords ."}{"idx": 82627, "node_name": "serialnumber", "Dec": "the serial number"}{"idx": 82629, "node_name": "feature", "Dec": "the feature name ( as an absolute uri )"}{"idx": 82632, "node_name": "xmlstructure", "Dec": "a mechanism-specific xml structure from which to unmarshal the keyinfo from"}{"idx": 82649, "node_name": "context", "Dec": "an xmlcryptocontext that may contain additional useful information for dereferencing the uri . the context's baseuri and dereferencer parameters ( if specified ) are used to resolve and dereference this retrievalmethod"}{"idx": 82668, "node_name": "validatecontext", "Dec": "the validating context"}{"idx": 82715, "node_name": "prefixlist", "Dec": "the inclusive namespace prefix list . each entry in the list is a string that represents a namespace prefix ."}{"idx": 82719, "node_name": "outputlength", "Dec": "the truncation length in number of bits"}{"idx": 82725, "node_name": "xpathlist", "Dec": "a list of one or more xpathtype objects . the list is defensively copied to protect against subsequent modification ."}{"idx": 82729, "node_name": "xpath", "Dec": "the xpath expression to be evaluated"}{"idx": 82731, "node_name": "xpath", "Dec": "the xpath expression to be evaluated"}{"idx": 82732, "node_name": "namespacemap", "Dec": "the map of namespace prefixes . each key is a namespace prefix string that maps to a corresponding namespace uri string ."}{"idx": 82742, "node_name": "expression", "Dec": "the xpath expression to be evaluated"}{"idx": 82743, "node_name": "filter", "Dec": "the filter operation ( xpathtype.filter.intersect , xpathtype.filter.subtract , or xpathtype.filter.union )"}{"idx": 82745, "node_name": "expression", "Dec": "the xpath expression to be evaluated"}{"idx": 82746, "node_name": "filter", "Dec": "the filter operation ( xpathtype.filter.intersect , xpathtype.filter.subtract , or xpathtype.filter.union )"}{"idx": 82747, "node_name": "namespacemap", "Dec": "the map of namespace prefixes . each key is a namespace prefix string that maps to a corresponding namespace uri string ."}{"idx": 82753, "node_name": "stylesheet", "Dec": "the xslt stylesheet to be used"}{"idx": 82763, "node_name": "data", "Dec": "the data to be transformed"}{"idx": 82764, "node_name": "context", "Dec": "the xmlcryptocontext containing additional context ( may be null if not applicable )"}{"idx": 82766, "node_name": "data", "Dec": "the data to be transformed"}{"idx": 82767, "node_name": "context", "Dec": "the xmlcryptocontext containing additional context ( may be null if not applicable )"}{"idx": 82768, "node_name": "os", "Dec": "the outputstream that should be used to write the transformed data to"}{"idx": 82772, "node_name": "message", "Dec": "the detail message"}{"idx": 82774, "node_name": "message", "Dec": "the detail message"}{"idx": 82775, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 82777, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 82781, "node_name": "s", "Dec": "printstream to use for output"}{"idx": 82783, "node_name": "s", "Dec": "printwriter to use for output"}{"idx": 82787, "node_name": "algorithm", "Dec": "the uri of the algorithm . see the transformservice section in the java security standard algorithm names specification for a list of standard transform algorithms ."}{"idx": 82788, "node_name": "mechanismtype", "Dec": "the type of the xml processing mechanism and representation . see the transformservice section in the java security standard algorithm names specification for a list of standard mechanism types ."}{"idx": 82790, "node_name": "algorithm", "Dec": "the uri of the algorithm . see the transformservice section in the java security standard algorithm names specification for a list of standard transform algorithms ."}{"idx": 82791, "node_name": "mechanismtype", "Dec": "the type of the xml processing mechanism and representation . see the transformservice section in the java security standard algorithm names specification for a list of standard mechanism types ."}{"idx": 82792, "node_name": "provider", "Dec": "the provider object"}{"idx": 82794, "node_name": "algorithm", "Dec": "the uri of the algorithm . see the transformservice section in the java security standard algorithm names specification for a list of standard transform algorithms ."}{"idx": 82795, "node_name": "mechanismtype", "Dec": "the type of the xml processing mechanism and representation . see the transformservice section in the java security standard algorithm names specification for a list of standard mechanism types ."}{"idx": 82796, "node_name": "provider", "Dec": "the string name of the provider"}{"idx": 82801, "node_name": "params", "Dec": "the algorithm parameters ( may be null if not required or optional )"}{"idx": 82803, "node_name": "parent", "Dec": "a mechanism-specific structure containing the parent node that the marshalled parameters should be appended to"}{"idx": 82804, "node_name": "context", "Dec": "the xmlcryptocontext containing additional context ( may be null if not applicable )"}{"idx": 82806, "node_name": "parent", "Dec": "a mechanism-specific structure containing the parent structure"}{"idx": 82807, "node_name": "context", "Dec": "the xmlcryptocontext containing additional context ( may be null if not applicable )"}{"idx": 82817, "node_name": "validatecontext", "Dec": "the validating context"}{"idx": 82824, "node_name": "signcontext", "Dec": "the signing context"}{"idx": 82830, "node_name": "validatecontext", "Dec": "the validating context"}{"idx": 82834, "node_name": "message", "Dec": "the detail message"}{"idx": 82836, "node_name": "message", "Dec": "the detail message"}{"idx": 82837, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 82839, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 82843, "node_name": "s", "Dec": "printstream to use for output"}{"idx": 82845, "node_name": "s", "Dec": "printwriter to use for output"}{"idx": 82849, "node_name": "mechanismtype", "Dec": "the type of the xml processing mechanism and representation . see the xmlsignaturefactory section in the java security standard algorithm names specification for a list of standard mechanism types ."}{"idx": 82851, "node_name": "mechanismtype", "Dec": "the type of the xml processing mechanism and representation . see the xmlsignaturefactory section in the java security standard algorithm names specification for a list of standard mechanism types ."}{"idx": 82852, "node_name": "provider", "Dec": "the provider object"}{"idx": 82854, "node_name": "mechanismtype", "Dec": "the type of the xml processing mechanism and representation . see the xmlsignaturefactory section in the java security standard algorithm names specification for a list of standard mechanism types ."}{"idx": 82855, "node_name": "provider", "Dec": "the string name of the provider"}{"idx": 82860, "node_name": "si", "Dec": "the signed info"}{"idx": 82861, "node_name": "ki", "Dec": "the key info ( may be null )"}{"idx": 82863, "node_name": "si", "Dec": "the signed info"}{"idx": 82864, "node_name": "ki", "Dec": "the key info ( may be null )"}{"idx": 82865, "node_name": "objects", "Dec": "a list of xmlobjects ( may be empty or null )"}{"idx": 82866, "node_name": "id", "Dec": "the id ( may be null )"}{"idx": 82867, "node_name": "signaturevalueid", "Dec": "the signaturevalue id ( may be null )"}{"idx": 82869, "node_name": "uri", "Dec": "the reference uri ( may be null )"}{"idx": 82870, "node_name": "dm", "Dec": "the digest method"}{"idx": 82872, "node_name": "uri", "Dec": "the reference uri ( may be null )"}{"idx": 82873, "node_name": "dm", "Dec": "the digest method"}{"idx": 82874, "node_name": "transforms", "Dec": "a list of transforms . the list is defensively copied to protect against subsequent modification . may be null or empty ."}{"idx": 82875, "node_name": "type", "Dec": "the reference type , as a uri ( may be null )"}{"idx": 82876, "node_name": "id", "Dec": "the reference id ( may be null )"}{"idx": 82878, "node_name": "uri", "Dec": "the reference uri ( may be null )"}{"idx": 82879, "node_name": "dm", "Dec": "the digest method"}{"idx": 82880, "node_name": "transforms", "Dec": "a list of transforms . the list is defensively copied to protect against subsequent modification . may be null or empty ."}{"idx": 82881, "node_name": "type", "Dec": "the reference type , as a uri ( may be null )"}{"idx": 82882, "node_name": "id", "Dec": "the reference id ( may be null )"}{"idx": 82883, "node_name": "digestvalue", "Dec": "the digest value . the array is cloned to protect against subsequent modification ."}{"idx": 82885, "node_name": "uri", "Dec": "the reference uri ( may be null )"}{"idx": 82886, "node_name": "dm", "Dec": "the digest method"}{"idx": 82887, "node_name": "appliedtransforms", "Dec": "a list of transforms that have already been applied . the list is defensively copied to protect against subsequent modification . the list must contain at least one entry ."}{"idx": 82888, "node_name": "result", "Dec": "the result of processing the sequence of appliedtransforms"}{"idx": 82889, "node_name": "transforms", "Dec": "a list of transforms that are to be applied when generating the signature . the list is defensively copied to protect against subsequent modification . may be null or empty ."}{"idx": 82890, "node_name": "type", "Dec": "the reference type , as a uri ( may be null )"}{"idx": 82891, "node_name": "id", "Dec": "the reference id ( may be null )"}{"idx": 82893, "node_name": "cm", "Dec": "the canonicalization method"}{"idx": 82894, "node_name": "sm", "Dec": "the signature method"}{"idx": 82895, "node_name": "references", "Dec": "a list of one or more references . the list is defensively copied to protect against subsequent modification ."}{"idx": 82897, "node_name": "cm", "Dec": "the canonicalization method"}{"idx": 82898, "node_name": "sm", "Dec": "the signature method"}{"idx": 82899, "node_name": "references", "Dec": "a list of one or more references . the list is defensively copied to protect against subsequent modification ."}{"idx": 82900, "node_name": "id", "Dec": "the id ( may be null )"}{"idx": 82902, "node_name": "content", "Dec": "a list of xmlstructures . the list is defensively copied to protect against subsequent modification . may be null or empty ."}{"idx": 82903, "node_name": "id", "Dec": "the id ( may be null )"}{"idx": 82904, "node_name": "mimetype", "Dec": "the mime type ( may be null )"}{"idx": 82905, "node_name": "encoding", "Dec": "the encoding ( may be null )"}{"idx": 82907, "node_name": "references", "Dec": "a list of one or more references . the list is defensively copied to protect against subsequent modification ."}{"idx": 82909, "node_name": "references", "Dec": "a list of one or more references . the list is defensively copied to protect against subsequent modification ."}{"idx": 82910, "node_name": "id", "Dec": "the id ( may be null )"}{"idx": 82912, "node_name": "content", "Dec": "a list of one or more xmlstructures . the list is defensively copied to protect against subsequent modification ."}{"idx": 82913, "node_name": "target", "Dec": "the target uri of the signature that this property applies to"}{"idx": 82914, "node_name": "id", "Dec": "the id ( may be null )"}{"idx": 82916, "node_name": "properties", "Dec": "a list of one or more signaturepropertys . the list is defensively copied to protect against subsequent modification ."}{"idx": 82917, "node_name": "id", "Dec": "the id ( may be null )"}{"idx": 82919, "node_name": "algorithm", "Dec": "the uri identifying the digest algorithm"}{"idx": 82920, "node_name": "params", "Dec": "algorithm-specific digest parameters ( may be null )"}{"idx": 82922, "node_name": "algorithm", "Dec": "the uri identifying the signature algorithm"}{"idx": 82923, "node_name": "params", "Dec": "algorithm-specific signature parameters ( may be null )"}{"idx": 82925, "node_name": "algorithm", "Dec": "the uri identifying the transform algorithm"}{"idx": 82926, "node_name": "params", "Dec": "algorithm-specific transform parameters ( may be null )"}{"idx": 82928, "node_name": "algorithm", "Dec": "the uri identifying the transform algorithm"}{"idx": 82929, "node_name": "params", "Dec": "a mechanism-specific xml structure from which to unmarshal the parameters from ( may be null if not required or optional )"}{"idx": 82931, "node_name": "algorithm", "Dec": "the uri identifying the canonicalization algorithm"}{"idx": 82932, "node_name": "params", "Dec": "algorithm-specific canonicalization parameters ( may be null )"}{"idx": 82934, "node_name": "algorithm", "Dec": "the uri identifying the canonicalization algorithm"}{"idx": 82935, "node_name": "params", "Dec": "a mechanism-specific xml structure from which to unmarshal the parameters from ( may be null if not required or optional )"}{"idx": 82938, "node_name": "context", "Dec": "a mechanism-specific context from which to unmarshal the signature from"}{"idx": 82940, "node_name": "xmlstructure", "Dec": "a mechanism-specific xml structure from which to unmarshal the signature from"}{"idx": 82942, "node_name": "feature", "Dec": "the feature name ( as an absolute uri )"}{"idx": 82949, "node_name": "keyinfo", "Dec": "a keyinfo ( may be null )"}{"idx": 82950, "node_name": "purpose", "Dec": "the key's purpose ( keyselector.purpose.sign , keyselector.purpose.verify , keyselector.purpose.encrypt , or keyselector.purpose.decrypt )"}{"idx": 82951, "node_name": "method", "Dec": "the algorithm method that this key is to be used for . only keys that are compatible with the algorithm and meet the constraints of the specified algorithm should be returned ."}{"idx": 82952, "node_name": "context", "Dec": "an xmlcryptocontext that may contain useful information for finding an appropriate key . if this key selector supports resolving retrievalmethod types , the context's baseuri and dereferencer parameters ( if specified ) should be used by the selector to resolve and dereference the uri ."}{"idx": 82954, "node_name": "key", "Dec": "the sole key to be stored in the key selector"}{"idx": 82964, "node_name": "message", "Dec": "the detail message"}{"idx": 82966, "node_name": "message", "Dec": "the detail message"}{"idx": 82967, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 82969, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 82973, "node_name": "s", "Dec": "printstream to use for output"}{"idx": 82975, "node_name": "s", "Dec": "printwriter to use for output"}{"idx": 82981, "node_name": "message", "Dec": "the detail message"}{"idx": 82983, "node_name": "message", "Dec": "the detail message"}{"idx": 82984, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 82986, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 82990, "node_name": "s", "Dec": "printstream to use for output"}{"idx": 82992, "node_name": "s", "Dec": "printwriter to use for output"}{"idx": 82998, "node_name": "message", "Dec": "the detail message"}{"idx": 83000, "node_name": "message", "Dec": "the detail message"}{"idx": 83001, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 83003, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 83007, "node_name": "s", "Dec": "printstream to use for output"}{"idx": 83009, "node_name": "s", "Dec": "printwriter to use for output"}{"idx": 83012, "node_name": "octetstream", "Dec": "the input stream containing the octets"}{"idx": 83014, "node_name": "octetstream", "Dec": "the input stream containing the octets"}{"idx": 83015, "node_name": "uri", "Dec": "the uri string identifying the data object ( may be null )"}{"idx": 83016, "node_name": "mimetype", "Dec": "the mime type associated with the data object ( may be null )"}{"idx": 83022, "node_name": "urireference", "Dec": "the urireference"}{"idx": 83023, "node_name": "context", "Dec": "an xmlcryptocontext that may contain additional useful information for dereferencing the uri . this implementation should dereference the specified urireference against the context's baseuri parameter , if specified ."}{"idx": 83030, "node_name": "message", "Dec": "the detail message"}{"idx": 83032, "node_name": "message", "Dec": "the detail message"}{"idx": 83033, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 83035, "node_name": "message", "Dec": "the detail message"}{"idx": 83036, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 83037, "node_name": "urireference", "Dec": "the urireference that was being dereferenced when the error was encountered"}{"idx": 83039, "node_name": "cause", "Dec": "the cause ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 83044, "node_name": "s", "Dec": "printstream to use for output"}{"idx": 83046, "node_name": "s", "Dec": "printwriter to use for output"}{"idx": 83050, "node_name": "baseuri", "Dec": "the base uri , or null to remove current value"}{"idx": 83053, "node_name": "ks", "Dec": "the key selector , or null to remove the current setting"}{"idx": 83056, "node_name": "dereferencer", "Dec": "the uridereferencer , or null to remove any current setting"}{"idx": 83058, "node_name": "namespaceuri", "Dec": "a namespace uri"}{"idx": 83059, "node_name": "defaultprefix", "Dec": "the prefix to be returned in the event that the the specified namespace uri has not been bound to a prefix ."}{"idx": 83061, "node_name": "namespaceuri", "Dec": "a namespace uri"}{"idx": 83062, "node_name": "prefix", "Dec": "a namespace prefix ( or null to remove any existing mapping ) . specifying the empty string ( \"\") binds no prefix to the namespace uri ."}{"idx": 83065, "node_name": "defaultprefix", "Dec": "the default namespace prefix , or null to remove the current setting . specify the empty string ( \"\") to bind no prefix ."}{"idx": 83067, "node_name": "name", "Dec": "the name of the property"}{"idx": 83068, "node_name": "value", "Dec": "the value of the property to be set"}{"idx": 83070, "node_name": "name", "Dec": "the name of the property"}{"idx": 83072, "node_name": "key", "Dec": "the key whose associated value is to be returned"}{"idx": 83074, "node_name": "key", "Dec": "key with which the specified value is to be associated with"}{"idx": 83075, "node_name": "value", "Dec": "value to be associated with the specified key"}{"idx": 83078, "node_name": "feature", "Dec": "the feature name ( as an absolute uri )"}{"idx": 83082, "node_name": "message", "Dec": "the detail message ."}{"idx": 83084, "node_name": "message", "Dec": "the detail message ."}{"idx": 83085, "node_name": "cause", "Dec": "the cause . a null value is permitted , and indicates that the cause is nonexistent or unknown ."}{"idx": 83087, "node_name": "cause", "Dec": "the cause . a null value is permitted , and indicates that the cause is nonexistent or unknown ."}{"idx": 83135, "node_name": "factoryclassname", "Dec": "fully qualified factory class name that provides implementation of javax.xml.datatype.datatypefactory ."}{"idx": 83136, "node_name": "classloader", "Dec": "classloader used to load the factory class . if null current thread's context classloader is used to load the factory class ."}{"idx": 83138, "node_name": "lexicalrepresentation", "Dec": "string representation of a duration ."}{"idx": 83140, "node_name": "durationinmilliseconds", "Dec": "duration in milliseconds to create ."}{"idx": 83142, "node_name": "ispositive", "Dec": "set to false to create a negative duration . when the length of the duration is zero , this parameter will be ignored ."}{"idx": 83143, "node_name": "years", "Dec": "of this duration"}{"idx": 83144, "node_name": "months", "Dec": "of this duration"}{"idx": 83145, "node_name": "days", "Dec": "of this duration"}{"idx": 83146, "node_name": "hours", "Dec": "of this duration"}{"idx": 83147, "node_name": "minutes", "Dec": "of this duration"}{"idx": 83148, "node_name": "seconds", "Dec": "of this duration"}{"idx": 83150, "node_name": "ispositive", "Dec": "set to false to create a negative duration . when the length of the duration is zero , this parameter will be ignored ."}{"idx": 83151, "node_name": "years", "Dec": "of this duration"}{"idx": 83152, "node_name": "months", "Dec": "of this duration"}{"idx": 83153, "node_name": "days", "Dec": "of this duration"}{"idx": 83154, "node_name": "hours", "Dec": "of this duration"}{"idx": 83155, "node_name": "minutes", "Dec": "of this duration"}{"idx": 83156, "node_name": "seconds", "Dec": "of this duration"}{"idx": 83158, "node_name": "lexicalrepresentation", "Dec": "lexical representation of a duration ."}{"idx": 83160, "node_name": "durationinmilliseconds", "Dec": "milliseconds of duration to create ."}{"idx": 83162, "node_name": "ispositive", "Dec": "set to false to create a negative duration . when the length of the duration is zero , this parameter will be ignored ."}{"idx": 83163, "node_name": "day", "Dec": "day of duration ."}{"idx": 83164, "node_name": "hour", "Dec": "hour of duration ."}{"idx": 83165, "node_name": "minute", "Dec": "minute of duration ."}{"idx": 83166, "node_name": "second", "Dec": "second of duration ."}{"idx": 83168, "node_name": "ispositive", "Dec": "set to false to create a negative duration . when the length of the duration is zero , this parameter will be ignored ."}{"idx": 83169, "node_name": "day", "Dec": "day of duration ."}{"idx": 83170, "node_name": "hour", "Dec": "hour of duration ."}{"idx": 83171, "node_name": "minute", "Dec": "minute of duration ."}{"idx": 83172, "node_name": "second", "Dec": "second of duration ."}{"idx": 83174, "node_name": "lexicalrepresentation", "Dec": "lexical representation of a duration ."}{"idx": 83176, "node_name": "durationinmilliseconds", "Dec": "milliseconds of duration to create ."}{"idx": 83178, "node_name": "ispositive", "Dec": "set to false to create a negative duration . when the length of the duration is zero , this parameter will be ignored ."}{"idx": 83179, "node_name": "year", "Dec": "year of duration ."}{"idx": 83180, "node_name": "month", "Dec": "month of duration ."}{"idx": 83182, "node_name": "ispositive", "Dec": "set to false to create a negative duration . when the length of the duration is zero , this parameter will be ignored ."}{"idx": 83183, "node_name": "year", "Dec": "year of duration ."}{"idx": 83184, "node_name": "month", "Dec": "month of duration ."}{"idx": 83187, "node_name": "lexicalrepresentation", "Dec": "lexical representation of one the eight xml schema date / time datatypes ."}{"idx": 83189, "node_name": "cal", "Dec": "java.util.gregoriancalendar used to create xmlgregoriancalendar"}{"idx": 83191, "node_name": "year", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83192, "node_name": "month", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83193, "node_name": "day", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83194, "node_name": "hour", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83195, "node_name": "minute", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83196, "node_name": "second", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83197, "node_name": "fractionalsecond", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83198, "node_name": "timezone", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83200, "node_name": "year", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83201, "node_name": "month", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83202, "node_name": "day", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83203, "node_name": "hour", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83204, "node_name": "minute", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83205, "node_name": "second", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83206, "node_name": "millisecond", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83207, "node_name": "timezone", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83209, "node_name": "year", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83210, "node_name": "month", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83211, "node_name": "day", "Dec": "of xmlgregoriancalendar to be created ."}{"idx": 83212, "node_name": "timezone", "Dec": "offset in minutes . datatypeconstants.field_undefined indicates optional field is not set ."}{"idx": 83214, "node_name": "hours", "Dec": "number of hours"}{"idx": 83215, "node_name": "minutes", "Dec": "number of minutes"}{"idx": 83216, "node_name": "seconds", "Dec": "number of seconds"}{"idx": 83217, "node_name": "timezone", "Dec": "offset in minutes . datatypeconstants.field_undefined indicates optional field is not set ."}{"idx": 83219, "node_name": "hours", "Dec": "number of hours"}{"idx": 83220, "node_name": "minutes", "Dec": "number of minutes"}{"idx": 83221, "node_name": "seconds", "Dec": "number of seconds"}{"idx": 83222, "node_name": "fractionalsecond", "Dec": "value of null indicates that this optional field is not set ."}{"idx": 83223, "node_name": "timezone", "Dec": "offset in minutes . datatypeconstants.field_undefined indicates optional field is not set ."}{"idx": 83225, "node_name": "hours", "Dec": "number of hours"}{"idx": 83226, "node_name": "minutes", "Dec": "number of minutes"}{"idx": 83227, "node_name": "seconds", "Dec": "number of seconds"}{"idx": 83228, "node_name": "milliseconds", "Dec": "number of milliseconds"}{"idx": 83229, "node_name": "timezone", "Dec": "offset in minutes . datatypeconstants.field_undefined indicates optional field is not set ."}{"idx": 83241, "node_name": "startinstant", "Dec": "the length of a month / year varies . the startinstant is used to disambiguate this variance . specifically , getTimeInMillis(java.util.Calendar) returns the difference between startinstant and startinstant+duration"}{"idx": 83243, "node_name": "startinstant", "Dec": "the length of a month / year varies . the startinstant is used to disambiguate this variance . specifically , getTimeInMillis(java.util.Date) returns the difference between startinstant and startinstant+duration ."}{"idx": 83245, "node_name": "field", "Dec": "one of the six field constants ( years , months , days , hours , minutes , or seconds . )"}{"idx": 83247, "node_name": "field", "Dec": "one of the six field constants ( years , months , days , hours , minutes , or seconds . )"}{"idx": 83249, "node_name": "rhs", "Dec": "duration to add to this duration"}{"idx": 83251, "node_name": "calendar", "Dec": "a calendar object whose value will be modified ."}{"idx": 83253, "node_name": "date", "Dec": "a date object whose value will be modified ."}{"idx": 83255, "node_name": "rhs", "Dec": "duration to subtract from this duration ."}{"idx": 83257, "node_name": "factor", "Dec": "factor times longer of new duration to create ."}{"idx": 83259, "node_name": "factor", "Dec": "to multiply by"}{"idx": 83262, "node_name": "starttimeinstant", "Dec": "calendar reference point ."}{"idx": 83264, "node_name": "duration", "Dec": "to compare"}{"idx": 83266, "node_name": "duration", "Dec": "duration to test this duration against ."}{"idx": 83268, "node_name": "duration", "Dec": "duration to test this duration against ."}{"idx": 83270, "node_name": "duration", "Dec": "the object to compare this duration against ."}{"idx": 83278, "node_name": "year", "Dec": "value constraints summarized in year field of date / time field mapping table ."}{"idx": 83280, "node_name": "year", "Dec": "value constraints are summarized in year field of date / time field mapping table . if year is datatypeconstants.field_undefined , then eon is set to null ."}{"idx": 83282, "node_name": "month", "Dec": "value constraints summarized in month field of date / time field mapping table ."}{"idx": 83284, "node_name": "day", "Dec": "value constraints summarized in day field of date / time field mapping table ."}{"idx": 83286, "node_name": "offset", "Dec": "value constraints summarized in timezone field of date / time field mapping table ."}{"idx": 83288, "node_name": "hour", "Dec": "value constraints are summarized in hour field of date / time field mapping table ."}{"idx": 83289, "node_name": "minute", "Dec": "value constraints are summarized in minute field of date / time field mapping table ."}{"idx": 83290, "node_name": "second", "Dec": "value constraints are summarized in second field of date / time field mapping table ."}{"idx": 83292, "node_name": "hour", "Dec": "value constraints summarized in hour field of date / time field mapping table ."}{"idx": 83294, "node_name": "minute", "Dec": "value constraints summarized in minute field of date / time field mapping table ."}{"idx": 83296, "node_name": "second", "Dec": "value constraints summarized in second field of date / time field mapping table ."}{"idx": 83298, "node_name": "millisecond", "Dec": "value constraints summarized in second field of date / time field mapping table ."}{"idx": 83300, "node_name": "fractional", "Dec": "value constraints summarized in second field of date / time field mapping table ."}{"idx": 83302, "node_name": "hour", "Dec": "value constraints are summarized in hour field of date / time field mapping table ."}{"idx": 83303, "node_name": "minute", "Dec": "value constraints are summarized in minute field of date / time field mapping table ."}{"idx": 83304, "node_name": "second", "Dec": "value constraints are summarized in second field of date / time field mapping table ."}{"idx": 83305, "node_name": "fractional", "Dec": "value of null indicates this optional field is not set ."}{"idx": 83307, "node_name": "hour", "Dec": "value constraints are summarized in hour field of date / time field mapping table ."}{"idx": 83308, "node_name": "minute", "Dec": "value constraints are summarized in minute field of date / time field mapping table ."}{"idx": 83309, "node_name": "second", "Dec": "value constraints are summarized in second field of date / time field mapping table ."}{"idx": 83310, "node_name": "millisecond", "Dec": "value of datatypeconstants.field_undefined indicates this optional field is not set ."}{"idx": 83323, "node_name": "xmlgregoriancalendar", "Dec": "instance of xmlgregoriancalendar to compare"}{"idx": 83326, "node_name": "obj", "Dec": "to compare ."}{"idx": 83333, "node_name": "duration", "Dec": "duration to add to this xmlgregoriancalendar ."}{"idx": 83336, "node_name": "timezone", "Dec": "provide timezone . null is a legal value ."}{"idx": 83337, "node_name": "alocale", "Dec": "provide explicit locale . use default gregoriancalendar locale if value is null ."}{"idx": 83338, "node_name": "defaults", "Dec": "provide default field values to use when corresponding field for this instance is field_undefined or null . if defaultsis null or a field within the specified defaults is undefined , just use java.util.gregoriancalendar defaults ."}{"idx": 83340, "node_name": "defaultzoneoffset", "Dec": "default zoneoffset if this zoneoffset is datatypeconstants.field_undefined ."}{"idx": 83344, "node_name": "prefix", "Dec": "prefix to look up"}{"idx": 83346, "node_name": "namespaceuri", "Dec": "uri of namespace to lookup"}{"idx": 83348, "node_name": "namespaceuri", "Dec": "uri of namespace to lookup"}{"idx": 83351, "node_name": "namespaceuri", "Dec": "namespace uri of the qname"}{"idx": 83352, "node_name": "localpart", "Dec": "local part of the qname"}{"idx": 83354, "node_name": "namespaceuri", "Dec": "namespace uri of the qname"}{"idx": 83355, "node_name": "localpart", "Dec": "local part of the qname"}{"idx": 83356, "node_name": "prefix", "Dec": "prefix of the qname"}{"idx": 83358, "node_name": "localpart", "Dec": "local part of the qname"}{"idx": 83363, "node_name": "objecttotest", "Dec": "the object to test for equality with this qname"}{"idx": 83367, "node_name": "qnameasstring", "Dec": "string representation of the qname"}{"idx": 83372, "node_name": "is", "Dec": "inputstream containing the content to be parsed ."}{"idx": 83374, "node_name": "is", "Dec": "inputstream containing the content to be parsed ."}{"idx": 83375, "node_name": "systemid", "Dec": "provide a base for resolving relative uris ."}{"idx": 83377, "node_name": "uri", "Dec": "the location of the content to be parsed ."}{"idx": 83379, "node_name": "f", "Dec": "the file containing the xml to parse ."}{"idx": 83381, "node_name": "is", "Dec": "inputsource containing the content to be parsed ."}{"idx": 83385, "node_name": "er", "Dec": "the entityresolver to be used to resolve entities present in the xml document to be parsed ."}{"idx": 83387, "node_name": "eh", "Dec": "the errorhandler to be used by the parser ."}{"idx": 83397, "node_name": "factoryclassname", "Dec": "a fully qualified factory class name that provides implementation of javax.xml.parsers.documentbuilderfactory ."}{"idx": 83398, "node_name": "classloader", "Dec": "the classloader used to load the factory class . if it is null , the current thread's context classloader is used to load the factory class ."}{"idx": 83402, "node_name": "factoryclassname", "Dec": "fully qualified factory class name that provides implementation of javax.xml.parsers.documentbuilderfactory ."}{"idx": 83403, "node_name": "classloader", "Dec": "classloader used to load the factory class . if null current thread's context classloader is used to load the factory class ."}{"idx": 83406, "node_name": "awareness", "Dec": "true if the parser produced will provide support for xml namespaces ; false otherwise ."}{"idx": 83408, "node_name": "validating", "Dec": "true if the parser produced will validate documents as they are parsed ; false otherwise ."}{"idx": 83410, "node_name": "whitespace", "Dec": "true if the parser created must eliminate whitespace in the element content when parsing xml documents ; false otherwise ."}{"idx": 83412, "node_name": "expandentityref", "Dec": "true if the parser produced will expand entity reference nodes ; false otherwise ."}{"idx": 83414, "node_name": "ignorecomments", "Dec": "boolean value to ignore comments during processing"}{"idx": 83416, "node_name": "coalescing", "Dec": "true if the parser produced will convert cdata nodes to text nodes and append it to the adjacent ( if any ) text node ; false otherwise ."}{"idx": 83424, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 83425, "node_name": "value", "Dec": "the value of the attribute ."}{"idx": 83427, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 83429, "node_name": "name", "Dec": "feature name ."}{"idx": 83430, "node_name": "value", "Dec": "is feature state true or false ."}{"idx": 83432, "node_name": "name", "Dec": "feature name ."}{"idx": 83435, "node_name": "schema", "Dec": "schema to use or null to remove a schema ."}{"idx": 83437, "node_name": "state", "Dec": "set xinclude processing to true or false"}{"idx": 83442, "node_name": "msg", "Dec": "the error message for the exception ."}{"idx": 83444, "node_name": "e", "Dec": "the exception to be encapsulated in a factoryconfigurationerror ."}{"idx": 83446, "node_name": "e", "Dec": "the exception to be encapsulated in a factoryconfigurationerror"}{"idx": 83447, "node_name": "msg", "Dec": "the detail message ."}{"idx": 83454, "node_name": "msg", "Dec": "the error message for the exception ."}{"idx": 83459, "node_name": "is", "Dec": "inputstream containing the content to be parsed ."}{"idx": 83460, "node_name": "hb", "Dec": "the sax handlerbase to use ."}{"idx": 83462, "node_name": "is", "Dec": "inputstream containing the content to be parsed ."}{"idx": 83463, "node_name": "hb", "Dec": "the sax handlerbase to use ."}{"idx": 83464, "node_name": "systemid", "Dec": "the systemid which is needed for resolving relative uris ."}{"idx": 83466, "node_name": "is", "Dec": "inputstream containing the content to be parsed ."}{"idx": 83467, "node_name": "dh", "Dec": "the sax defaulthandler to use ."}{"idx": 83469, "node_name": "is", "Dec": "inputstream containing the content to be parsed ."}{"idx": 83470, "node_name": "dh", "Dec": "the sax defaulthandler to use ."}{"idx": 83471, "node_name": "systemid", "Dec": "the systemid which is needed for resolving relative uris ."}{"idx": 83473, "node_name": "uri", "Dec": "the location of the content to be parsed ."}{"idx": 83474, "node_name": "hb", "Dec": "the sax handlerbase to use ."}{"idx": 83476, "node_name": "uri", "Dec": "the location of the content to be parsed ."}{"idx": 83477, "node_name": "dh", "Dec": "the sax defaulthandler to use ."}{"idx": 83479, "node_name": "f", "Dec": "the file containing the xml to parse"}{"idx": 83480, "node_name": "hb", "Dec": "the sax handlerbase to use ."}{"idx": 83482, "node_name": "f", "Dec": "the file containing the xml to parse"}{"idx": 83483, "node_name": "dh", "Dec": "the sax defaulthandler to use ."}{"idx": 83485, "node_name": "is", "Dec": "the inputsource containing the content to be parsed ."}{"idx": 83486, "node_name": "hb", "Dec": "the sax handlerbase to use ."}{"idx": 83488, "node_name": "is", "Dec": "the inputsource containing the content to be parsed ."}{"idx": 83489, "node_name": "dh", "Dec": "the sax defaulthandler to use ."}{"idx": 83495, "node_name": "name", "Dec": "the name of the property to be set ."}{"idx": 83496, "node_name": "value", "Dec": "the value of the property to be set ."}{"idx": 83498, "node_name": "name", "Dec": "the name of the property to be retrieved ."}{"idx": 83506, "node_name": "factoryclassname", "Dec": "a fully qualified factory class name that provides implementation of javax.xml.parsers.saxparserfactory ."}{"idx": 83507, "node_name": "classloader", "Dec": "the classloader used to load the factory class . if it is null , the current thread's context classloader is used to load the factory class ."}{"idx": 83511, "node_name": "factoryclassname", "Dec": "fully qualified factory class name that provides implementation of javax.xml.parsers.saxparserfactory ."}{"idx": 83512, "node_name": "classloader", "Dec": "classloader used to load the factory class . if null current thread's context classloader is used to load the factory class ."}{"idx": 83515, "node_name": "awareness", "Dec": "true if the parser produced by this code will provide support for xml namespaces ; false otherwise ."}{"idx": 83517, "node_name": "validating", "Dec": "true if the parser produced by this code will validate documents as they are parsed ; false otherwise ."}{"idx": 83521, "node_name": "name", "Dec": "the name of the feature to be set ."}{"idx": 83522, "node_name": "value", "Dec": "the value of the feature to be set ."}{"idx": 83524, "node_name": "name", "Dec": "the name of the property to be retrieved ."}{"idx": 83527, "node_name": "schema", "Dec": "schema to use , null to remove a schema ."}{"idx": 83529, "node_name": "state", "Dec": "set xinclude processing to true or false"}{"idx": 83533, "node_name": "event", "Dec": "the event to test"}{"idx": 83588, "node_name": "name", "Dec": "the qname of the desired attribute"}{"idx": 83591, "node_name": "prefix", "Dec": "the prefix to lookup"}{"idx": 83609, "node_name": "writer", "Dec": "the writer that will output the data"}{"idx": 83613, "node_name": "e", "Dec": "the exception to nest"}{"idx": 83615, "node_name": "e", "Dec": "the exception to nest"}{"idx": 83616, "node_name": "msg", "Dec": "the message to report"}{"idx": 83618, "node_name": "msg", "Dec": "the message to report"}{"idx": 83619, "node_name": "e", "Dec": "the exception to nest"}{"idx": 83621, "node_name": "msg", "Dec": "the message to report"}{"idx": 83633, "node_name": "reader", "Dec": "the event to test"}{"idx": 83637, "node_name": "reader", "Dec": "the parent"}{"idx": 83639, "node_name": "reader", "Dec": "the new parent"}{"idx": 83644, "node_name": "reader", "Dec": "the parent"}{"idx": 83646, "node_name": "reader", "Dec": "the new parent"}{"idx": 83651, "node_name": "reader", "Dec": "the xmlstreamreader to allocate from"}{"idx": 83653, "node_name": "reader", "Dec": "the xmlstreamreader to allocate from"}{"idx": 83654, "node_name": "consumer", "Dec": "the xmleventconsumer to add to ."}{"idx": 83657, "node_name": "event", "Dec": "the event to add , may not be null"}{"idx": 83664, "node_name": "factoryid", "Dec": "name of the factory to find , same as a property name"}{"idx": 83665, "node_name": "classloader", "Dec": "classloader to use"}{"idx": 83667, "node_name": "location", "Dec": "the location to set on each event created"}{"idx": 83669, "node_name": "prefix", "Dec": "the prefix of this attribute , may not be null"}{"idx": 83670, "node_name": "namespaceuri", "Dec": "the attribute value is set to this value , may not be null"}{"idx": 83671, "node_name": "localname", "Dec": "the local name of the xml name of the attribute , localname cannot be null"}{"idx": 83672, "node_name": "value", "Dec": "the attribute value to set , may not be null"}{"idx": 83674, "node_name": "localname", "Dec": "the local name of the xml name of the attribute , localname cannot be null"}{"idx": 83675, "node_name": "value", "Dec": "the attribute value to set , may not be null"}{"idx": 83677, "node_name": "name", "Dec": "the qualified name of the attribute , may not be null"}{"idx": 83678, "node_name": "value", "Dec": "the attribute value to set , may not be null"}{"idx": 83680, "node_name": "namespaceuri", "Dec": "the default namespace uri"}{"idx": 83682, "node_name": "prefix", "Dec": "the prefix of this namespace , may not be null"}{"idx": 83683, "node_name": "namespaceuri", "Dec": "the attribute value is set to this value , may not be null"}{"idx": 83685, "node_name": "name", "Dec": "the qualified name of the attribute , may not be null"}{"idx": 83686, "node_name": "attributes", "Dec": "an optional unordered set of objects that implement attribute to add to the new startelement , may be null"}{"idx": 83687, "node_name": "namespaces", "Dec": "an optional unordered set of objects that implement namespace to add to the new startelement , may be null"}{"idx": 83689, "node_name": "namespaceuri", "Dec": "the uri of the qname of the new startelement"}{"idx": 83690, "node_name": "localname", "Dec": "the local name of the qname of the new startelement"}{"idx": 83691, "node_name": "prefix", "Dec": "the prefix of the qname of the new startelement"}{"idx": 83693, "node_name": "namespaceuri", "Dec": "the uri of the qname of the new startelement"}{"idx": 83694, "node_name": "localname", "Dec": "the local name of the qname of the new startelement"}{"idx": 83695, "node_name": "prefix", "Dec": "the prefix of the qname of the new startelement"}{"idx": 83696, "node_name": "attributes", "Dec": "an unordered set of objects that implement attribute to add to the new startelement"}{"idx": 83697, "node_name": "namespaces", "Dec": "an unordered set of objects that implement namespace to add to the new startelement"}{"idx": 83699, "node_name": "namespaceuri", "Dec": "the uri of the qname of the new startelement"}{"idx": 83700, "node_name": "localname", "Dec": "the local name of the qname of the new startelement"}{"idx": 83701, "node_name": "prefix", "Dec": "the prefix of the qname of the new startelement"}{"idx": 83702, "node_name": "attributes", "Dec": "an unordered set of objects that implement attribute to add to the new startelement , may be null"}{"idx": 83703, "node_name": "namespaces", "Dec": "an unordered set of objects that implement namespace to add to the new startelement , may be null"}{"idx": 83704, "node_name": "context", "Dec": "the namespace context of this element"}{"idx": 83706, "node_name": "name", "Dec": "the qualified name of the endelement"}{"idx": 83707, "node_name": "namespaces", "Dec": "an optional unordered set of objects that implement namespace that have gone out of scope , may be null"}{"idx": 83709, "node_name": "namespaceuri", "Dec": "the uri of the qname of the new startelement"}{"idx": 83710, "node_name": "localname", "Dec": "the local name of the qname of the new startelement"}{"idx": 83711, "node_name": "prefix", "Dec": "the prefix of the qname of the new startelement"}{"idx": 83713, "node_name": "namespaceuri", "Dec": "the uri of the qname of the new startelement"}{"idx": 83714, "node_name": "localname", "Dec": "the local name of the qname of the new startelement"}{"idx": 83715, "node_name": "prefix", "Dec": "the prefix of the qname of the new startelement"}{"idx": 83716, "node_name": "namespaces", "Dec": "an unordered set of objects that implement namespace that have gone out of scope , may be null"}{"idx": 83718, "node_name": "content", "Dec": "the string to create"}{"idx": 83720, "node_name": "content", "Dec": "the string to create"}{"idx": 83722, "node_name": "content", "Dec": "the content of the space to create"}{"idx": 83724, "node_name": "content", "Dec": "the space to create"}{"idx": 83727, "node_name": "encoding", "Dec": "the encoding style"}{"idx": 83728, "node_name": "version", "Dec": "the xml version"}{"idx": 83729, "node_name": "standalone", "Dec": "the status of standalone may be set to \" true \" or \" false \""}{"idx": 83731, "node_name": "encoding", "Dec": "the encoding style"}{"idx": 83732, "node_name": "version", "Dec": "the xml version"}{"idx": 83734, "node_name": "encoding", "Dec": "the encoding style"}{"idx": 83737, "node_name": "name", "Dec": "the name of the reference"}{"idx": 83738, "node_name": "declaration", "Dec": "the declaration for the event"}{"idx": 83740, "node_name": "text", "Dec": "the text of the comment a comment event"}{"idx": 83742, "node_name": "target", "Dec": "the target of the processing instruction"}{"idx": 83743, "node_name": "data", "Dec": "the text of the processing instruction"}{"idx": 83745, "node_name": "dtd", "Dec": "the text of the document type definition"}{"idx": 83753, "node_name": "name", "Dec": "the name of the property"}{"idx": 83759, "node_name": "event", "Dec": "the event to be added"}{"idx": 83761, "node_name": "reader", "Dec": "the event stream to add to the output"}{"idx": 83763, "node_name": "uri", "Dec": "the uri to look up"}{"idx": 83765, "node_name": "prefix", "Dec": "the prefix to bind to the uri"}{"idx": 83766, "node_name": "uri", "Dec": "the uri to bind to the prefix"}{"idx": 83768, "node_name": "uri", "Dec": "the uri to bind to the default namespace"}{"idx": 83770, "node_name": "context", "Dec": "the namespace context to use for this writer"}{"idx": 83787, "node_name": "factoryid", "Dec": "name of the factory to find , same as a property name"}{"idx": 83788, "node_name": "classloader", "Dec": "classloader to use"}{"idx": 83790, "node_name": "reader", "Dec": "the xml data to read from"}{"idx": 83792, "node_name": "source", "Dec": "the source to read from"}{"idx": 83794, "node_name": "stream", "Dec": "the inputstream to read from"}{"idx": 83796, "node_name": "stream", "Dec": "the inputstream to read from"}{"idx": 83797, "node_name": "encoding", "Dec": "the character encoding of the stream"}{"idx": 83799, "node_name": "systemid", "Dec": "the system id of the stream"}{"idx": 83800, "node_name": "stream", "Dec": "the inputstream to read from"}{"idx": 83802, "node_name": "systemid", "Dec": "the system id of the stream"}{"idx": 83803, "node_name": "reader", "Dec": "the inputstream to read from"}{"idx": 83805, "node_name": "reader", "Dec": "the xml data to read from"}{"idx": 83807, "node_name": "systemid", "Dec": "the system id of the input"}{"idx": 83808, "node_name": "reader", "Dec": "the xml data to read from"}{"idx": 83810, "node_name": "reader", "Dec": "the xmlstreamreader to read from ( may not be modified )"}{"idx": 83812, "node_name": "source", "Dec": "the source to read from"}{"idx": 83814, "node_name": "stream", "Dec": "the inputstream to read from"}{"idx": 83816, "node_name": "stream", "Dec": "the inputstream to read from"}{"idx": 83817, "node_name": "encoding", "Dec": "the character encoding of the stream"}{"idx": 83819, "node_name": "systemid", "Dec": "the system id of the stream"}{"idx": 83820, "node_name": "stream", "Dec": "the inputstream to read from"}{"idx": 83822, "node_name": "reader", "Dec": "the reader to filter"}{"idx": 83823, "node_name": "filter", "Dec": "the filter to apply to the reader"}{"idx": 83825, "node_name": "reader", "Dec": "the event reader to wrap"}{"idx": 83826, "node_name": "filter", "Dec": "the filter to apply to the event reader"}{"idx": 83829, "node_name": "resolver", "Dec": "the resolver to use to resolve references"}{"idx": 83832, "node_name": "reporter", "Dec": "the resolver to use to report non fatal errors"}{"idx": 83834, "node_name": "name", "Dec": "the name of the property ( may not be null )"}{"idx": 83835, "node_name": "value", "Dec": "the value of the property"}{"idx": 83837, "node_name": "name", "Dec": "the name of the property ( may not be null )"}{"idx": 83839, "node_name": "name", "Dec": "the name of the property ( may not be null )"}{"idx": 83841, "node_name": "allocator", "Dec": "the user defined allocator"}{"idx": 83850, "node_name": "factoryid", "Dec": "name of the factory to find , same as a property name"}{"idx": 83851, "node_name": "classloader", "Dec": "classloader to use"}{"idx": 83853, "node_name": "stream", "Dec": "the writer to write to"}{"idx": 83855, "node_name": "stream", "Dec": "the stream to write to"}{"idx": 83857, "node_name": "stream", "Dec": "the stream to write to"}{"idx": 83858, "node_name": "encoding", "Dec": "the encoding to use"}{"idx": 83860, "node_name": "result", "Dec": "the result to write to"}{"idx": 83862, "node_name": "result", "Dec": "the result to write to"}{"idx": 83864, "node_name": "stream", "Dec": "the stream to write to"}{"idx": 83866, "node_name": "stream", "Dec": "the stream to write to"}{"idx": 83867, "node_name": "encoding", "Dec": "the encoding to use"}{"idx": 83869, "node_name": "stream", "Dec": "the stream to write to"}{"idx": 83871, "node_name": "name", "Dec": "the name of the property"}{"idx": 83872, "node_name": "value", "Dec": "the value of the property"}{"idx": 83874, "node_name": "name", "Dec": "the name of the property"}{"idx": 83876, "node_name": "name", "Dec": "the name of the property ( may not be null )"}{"idx": 83879, "node_name": "message", "Dec": "the error message"}{"idx": 83880, "node_name": "errortype", "Dec": "an implementation defined error type"}{"idx": 83881, "node_name": "relatedinformation", "Dec": "information related to the error , if available"}{"idx": 83882, "node_name": "location", "Dec": "the location of the error , if available"}{"idx": 83885, "node_name": "publicid", "Dec": "the public identifier of the external entity being referenced , or null if none was supplied ."}{"idx": 83886, "node_name": "systemid", "Dec": "the system identifier of the external entity being referenced ."}{"idx": 83887, "node_name": "baseuri", "Dec": "absolute base uri associated with systemid ."}{"idx": 83888, "node_name": "namespace", "Dec": "the namespace of the entity to resolve ."}{"idx": 83910, "node_name": "msg", "Dec": "the message to report"}{"idx": 83912, "node_name": "th", "Dec": "a nested exception"}{"idx": 83914, "node_name": "th", "Dec": "a nested exception"}{"idx": 83915, "node_name": "msg", "Dec": "the message to report"}{"idx": 83917, "node_name": "th", "Dec": "a nested exception"}{"idx": 83918, "node_name": "msg", "Dec": "the message to report"}{"idx": 83919, "node_name": "location", "Dec": "the location of the error"}{"idx": 83921, "node_name": "msg", "Dec": "the message to report"}{"idx": 83922, "node_name": "location", "Dec": "the location of the error"}{"idx": 83927, "node_name": "name", "Dec": "the name of the property , may not be null"}{"idx": 83930, "node_name": "type", "Dec": "the event type"}{"idx": 83931, "node_name": "namespaceuri", "Dec": "the uri of the event , may be null"}{"idx": 83932, "node_name": "localname", "Dec": "the localname of the event , may be null"}{"idx": 83938, "node_name": "prefix", "Dec": "the prefix to lookup , may not be null"}{"idx": 83944, "node_name": "namespaceuri", "Dec": "the namespace of the attribute"}{"idx": 83945, "node_name": "localname", "Dec": "the local name of the attribute , cannot be null"}{"idx": 83948, "node_name": "index", "Dec": "the position of the attribute"}{"idx": 83950, "node_name": "index", "Dec": "the position of the attribute"}{"idx": 83952, "node_name": "index", "Dec": "the position of the attribute"}{"idx": 83954, "node_name": "index", "Dec": "the position of the attribute"}{"idx": 83956, "node_name": "index", "Dec": "the position of the attribute"}{"idx": 83958, "node_name": "index", "Dec": "the position of the attribute"}{"idx": 83960, "node_name": "index", "Dec": "the position of the attribute"}{"idx": 83963, "node_name": "index", "Dec": "the position of the namespace declaration"}{"idx": 83965, "node_name": "index", "Dec": "the position of the namespace declaration"}{"idx": 83971, "node_name": "sourcestart", "Dec": "the index of the first character in the source array to copy"}{"idx": 83972, "node_name": "target", "Dec": "the destination array"}{"idx": 83973, "node_name": "targetstart", "Dec": "the start offset in the target array"}{"idx": 83974, "node_name": "length", "Dec": "the number of characters to copy"}{"idx": 83993, "node_name": "localname", "Dec": "local name of the tag , may not be null"}{"idx": 83995, "node_name": "namespaceuri", "Dec": "the namespaceuri of the prefix to use , may not be null"}{"idx": 83996, "node_name": "localname", "Dec": "local name of the tag , may not be null"}{"idx": 83998, "node_name": "localname", "Dec": "local name of the tag , may not be null"}{"idx": 83999, "node_name": "prefix", "Dec": "the prefix of the tag , may not be null"}{"idx": 84000, "node_name": "namespaceuri", "Dec": "the uri to bind the prefix to , may not be null"}{"idx": 84002, "node_name": "namespaceuri", "Dec": "the uri to bind the tag to , may not be null"}{"idx": 84003, "node_name": "localname", "Dec": "local name of the tag , may not be null"}{"idx": 84005, "node_name": "prefix", "Dec": "the prefix of the tag , may not be null"}{"idx": 84006, "node_name": "localname", "Dec": "local name of the tag , may not be null"}{"idx": 84007, "node_name": "namespaceuri", "Dec": "the uri to bind the tag to , may not be null"}{"idx": 84009, "node_name": "localname", "Dec": "local name of the tag , may not be null"}{"idx": 84015, "node_name": "localname", "Dec": "the local name of the attribute"}{"idx": 84016, "node_name": "value", "Dec": "the value of the attribute"}{"idx": 84018, "node_name": "prefix", "Dec": "the prefix for this attribute"}{"idx": 84019, "node_name": "namespaceuri", "Dec": "the uri of the prefix for this attribute"}{"idx": 84020, "node_name": "localname", "Dec": "the local name of the attribute"}{"idx": 84021, "node_name": "value", "Dec": "the value of the attribute"}{"idx": 84023, "node_name": "namespaceuri", "Dec": "the uri of the prefix for this attribute"}{"idx": 84024, "node_name": "localname", "Dec": "the local name of the attribute"}{"idx": 84025, "node_name": "value", "Dec": "the value of the attribute"}{"idx": 84027, "node_name": "prefix", "Dec": "the prefix to bind this namespace to"}{"idx": 84028, "node_name": "namespaceuri", "Dec": "the uri to bind the prefix to"}{"idx": 84030, "node_name": "namespaceuri", "Dec": "the uri to bind the default namespace to"}{"idx": 84032, "node_name": "data", "Dec": "the data contained in the comment , may be null"}{"idx": 84034, "node_name": "target", "Dec": "the target of the processing instruction , may not be null"}{"idx": 84036, "node_name": "target", "Dec": "the target of the processing instruction , may not be null"}{"idx": 84037, "node_name": "data", "Dec": "the data contained in the processing instruction , may not be null"}{"idx": 84039, "node_name": "data", "Dec": "the data contained in the cdata section , may not be null"}{"idx": 84041, "node_name": "dtd", "Dec": "the dtd to be written"}{"idx": 84043, "node_name": "name", "Dec": "the name of the entity"}{"idx": 84046, "node_name": "version", "Dec": "version of the xml document"}{"idx": 84048, "node_name": "encoding", "Dec": "encoding of the xml declaration"}{"idx": 84049, "node_name": "version", "Dec": "version of the xml document"}{"idx": 84051, "node_name": "text", "Dec": "the value to write"}{"idx": 84053, "node_name": "text", "Dec": "the value to write"}{"idx": 84054, "node_name": "start", "Dec": "the starting position in the array"}{"idx": 84055, "node_name": "len", "Dec": "the number of characters to write"}{"idx": 84058, "node_name": "prefix", "Dec": "the prefix to bind to the uri , may not be null"}{"idx": 84059, "node_name": "uri", "Dec": "the uri to bind to the prefix , may be null"}{"idx": 84061, "node_name": "uri", "Dec": "the uri to bind to the default namespace , may be null"}{"idx": 84063, "node_name": "context", "Dec": "the namespace context to use for this writer , may not be null"}{"idx": 84066, "node_name": "name", "Dec": "the name of the property , may not be null"}{"idx": 84073, "node_name": "node", "Dec": "the dom node that will contain the result tree ."}{"idx": 84075, "node_name": "node", "Dec": "the dom node that will contain the result tree ."}{"idx": 84076, "node_name": "systemid", "Dec": "the system identifier which may be used in association with this node ."}{"idx": 84078, "node_name": "node", "Dec": "the dom node that will contain the result tree ."}{"idx": 84079, "node_name": "nextsibling", "Dec": "the child node where the result nodes should be inserted before ."}{"idx": 84081, "node_name": "node", "Dec": "the dom node that will contain the result tree ."}{"idx": 84082, "node_name": "nextsibling", "Dec": "the child node where the result nodes should be inserted before ."}{"idx": 84083, "node_name": "systemid", "Dec": "the system identifier which may be used in association with this node ."}{"idx": 84085, "node_name": "node", "Dec": "the node to which the transformation will be appended ."}{"idx": 84088, "node_name": "nextsibling", "Dec": "the child node before which the result nodes will be inserted ."}{"idx": 84091, "node_name": "systemid", "Dec": "the system identifier as a uri string ."}{"idx": 84097, "node_name": "n", "Dec": "the dom node that will contain the source tree ."}{"idx": 84099, "node_name": "node", "Dec": "the dom node that will contain the source tree ."}{"idx": 84100, "node_name": "systemid", "Dec": "specifies the base uri associated with node ."}{"idx": 84102, "node_name": "node", "Dec": "the node that is to be transformed ."}{"idx": 84105, "node_name": "systemid", "Dec": "base url for this dom tree ."}{"idx": 84110, "node_name": "exception", "Dec": "the warning information encapsulated in a transformer exception ."}{"idx": 84112, "node_name": "exception", "Dec": "the error information encapsulated in a transformer exception ."}{"idx": 84114, "node_name": "exception", "Dec": "the error information encapsulated in a transformerexception ."}{"idx": 84130, "node_name": "systemid", "Dec": "the system identifier as a uri string ."}{"idx": 84136, "node_name": "handler", "Dec": "must be a non-null contenthandler reference ."}{"idx": 84138, "node_name": "handler", "Dec": "must be a non-null contenthandler reference ."}{"idx": 84141, "node_name": "handler", "Dec": "a non-null lexicalhandler for handling lexical parse events ."}{"idx": 84144, "node_name": "systemid", "Dec": "the system identifier as a uri string ."}{"idx": 84150, "node_name": "reader", "Dec": "an xmlreader to be used for the parse ."}{"idx": 84151, "node_name": "inputsource", "Dec": "a sax input source reference that must be non-null and that will be passed to the reader parse method ."}{"idx": 84153, "node_name": "inputsource", "Dec": "an input source reference that must be non-null and that will be passed to the parse method of the reader ."}{"idx": 84155, "node_name": "reader", "Dec": "a valid xmlreader or xmlfilter reference ."}{"idx": 84158, "node_name": "inputsource", "Dec": "a valid inputsource reference ."}{"idx": 84161, "node_name": "systemid", "Dec": "the system identifier as a uri string ."}{"idx": 84164, "node_name": "source", "Dec": "must be a non-null source reference ."}{"idx": 84171, "node_name": "src", "Dec": "the source of the transformation instructions ."}{"idx": 84173, "node_name": "templates", "Dec": "the compiled transformation instructions ."}{"idx": 84177, "node_name": "src", "Dec": "the source of the transformation instructions ."}{"idx": 84179, "node_name": "templates", "Dec": "the compiled transformation instructions ."}{"idx": 84183, "node_name": "systemid", "Dec": "base uri for this stylesheet ."}{"idx": 84187, "node_name": "result", "Dec": "a result instance , should not be null ."}{"idx": 84189, "node_name": "systemid", "Dec": "base uri for the source tree ."}{"idx": 84194, "node_name": "systemid", "Dec": "the system identifier as a url string ."}{"idx": 84205, "node_name": "xmleventwriter", "Dec": "xmleventwriter used to create this staxresult ."}{"idx": 84207, "node_name": "xmlstreamwriter", "Dec": "xmlstreamwriter used to create this staxresult ."}{"idx": 84211, "node_name": "systemid", "Dec": "ignored ."}{"idx": 84216, "node_name": "xmleventreader", "Dec": "xmleventreader used to create this staxsource ."}{"idx": 84218, "node_name": "xmlstreamreader", "Dec": "xmlstreamreader used to create this staxsource ."}{"idx": 84222, "node_name": "systemid", "Dec": "ignored ."}{"idx": 84229, "node_name": "outputstream", "Dec": "a valid outputstream reference ."}{"idx": 84231, "node_name": "writer", "Dec": "a valid writer reference ."}{"idx": 84233, "node_name": "systemid", "Dec": "must be a string that conforms to the uri syntax ."}{"idx": 84235, "node_name": "f", "Dec": "must a non-null file reference ."}{"idx": 84237, "node_name": "outputstream", "Dec": "a valid outputstream reference ."}{"idx": 84240, "node_name": "writer", "Dec": "a valid writer reference ."}{"idx": 84243, "node_name": "systemid", "Dec": "the system identifier as a uri string ."}{"idx": 84245, "node_name": "f", "Dec": "must a non-null file reference ."}{"idx": 84251, "node_name": "inputstream", "Dec": "a valid inputstream reference to an xml stream ."}{"idx": 84253, "node_name": "inputstream", "Dec": "a valid inputstream reference to an xml stream ."}{"idx": 84254, "node_name": "systemid", "Dec": "must be a string that conforms to the uri syntax ."}{"idx": 84256, "node_name": "reader", "Dec": "a valid reader reference to an xml character stream ."}{"idx": 84258, "node_name": "reader", "Dec": "a valid reader reference to an xml character stream ."}{"idx": 84259, "node_name": "systemid", "Dec": "must be a string that conforms to the uri syntax ."}{"idx": 84261, "node_name": "systemid", "Dec": "must be a string that conforms to the uri syntax ."}{"idx": 84263, "node_name": "f", "Dec": "must a non-null file reference ."}{"idx": 84265, "node_name": "inputstream", "Dec": "a valid inputstream reference to an xml stream ."}{"idx": 84268, "node_name": "reader", "Dec": "a valid reader reference to an xml characterstream ."}{"idx": 84271, "node_name": "publicid", "Dec": "the public identifier as a string ."}{"idx": 84274, "node_name": "systemid", "Dec": "the system identifier as a url string ."}{"idx": 84277, "node_name": "f", "Dec": "must a non-null file reference ."}{"idx": 84286, "node_name": "xmlsource", "Dec": "the xml input to transform ."}{"idx": 84287, "node_name": "outputtarget", "Dec": "the result of transforming the xmlsource ."}{"idx": 84289, "node_name": "name", "Dec": "the name of the parameter , which may begin with a namespace uri in curly braces ( {} ) ."}{"idx": 84290, "node_name": "value", "Dec": "the value object . this can be any valid java object . it is up to the processor to provide the proper object coersion or to simply pass the object on for use in an extension ."}{"idx": 84292, "node_name": "name", "Dec": "of object to get"}{"idx": 84295, "node_name": "resolver", "Dec": "an object that implements the uriresolver interface , or null ."}{"idx": 84298, "node_name": "oformat", "Dec": "a set of output properties that will be used to override any of the same properties in affect for the transformation ."}{"idx": 84301, "node_name": "name", "Dec": "a non-null string that specifies an output property name , which may be namespace qualified ."}{"idx": 84302, "node_name": "value", "Dec": "the non-null string value of the output property ."}{"idx": 84304, "node_name": "name", "Dec": "a non-null string that specifies an output property name , which may be namespace qualified ."}{"idx": 84306, "node_name": "listener", "Dec": "the new error listener ."}{"idx": 84311, "node_name": "msg", "Dec": "the error message for the exception ."}{"idx": 84313, "node_name": "e", "Dec": "the exception to be encapsulated in a transformerconfigurationexception ."}{"idx": 84315, "node_name": "e", "Dec": "the exception to be encapsulated in a transformerconfigurationexception"}{"idx": 84316, "node_name": "msg", "Dec": "the detail message ."}{"idx": 84318, "node_name": "message", "Dec": "the error or warning message ."}{"idx": 84319, "node_name": "locator", "Dec": "the locator object for the error or warning ."}{"idx": 84321, "node_name": "message", "Dec": "the error or warning message , or null to use the message from the embedded exception ."}{"idx": 84322, "node_name": "locator", "Dec": "the locator object for the error or warning ."}{"idx": 84323, "node_name": "e", "Dec": "any exception ."}{"idx": 84326, "node_name": "message", "Dec": "the error or warning message ."}{"idx": 84328, "node_name": "e", "Dec": "the exception to be wrapped ."}{"idx": 84330, "node_name": "message", "Dec": "the error or warning message , or null to use the message from the embedded exception ."}{"idx": 84331, "node_name": "e", "Dec": "any exception"}{"idx": 84333, "node_name": "message", "Dec": "the error or warning message ."}{"idx": 84334, "node_name": "locator", "Dec": "the locator object for the error or warning ."}{"idx": 84336, "node_name": "message", "Dec": "the error or warning message , or null to use the message from the embedded exception ."}{"idx": 84337, "node_name": "locator", "Dec": "the locator object for the error or warning ."}{"idx": 84338, "node_name": "e", "Dec": "any exception"}{"idx": 84341, "node_name": "location", "Dec": "a sourcelocator object , or null to clear the location ."}{"idx": 84345, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 84350, "node_name": "s", "Dec": "the stream where the dump will be sent to ."}{"idx": 84352, "node_name": "s", "Dec": "the writer where the dump will be sent to ."}{"idx": 84358, "node_name": "factoryclassname", "Dec": "fully qualified factory class name that provides implementation of javax.xml.transform.transformerfactory ."}{"idx": 84359, "node_name": "classloader", "Dec": "classloader used to load the factory class . if null current thread's context classloader is used to load the factory class ."}{"idx": 84361, "node_name": "source", "Dec": "source of xslt document used to create transformer . examples of xml sources include domsource , saxsource , and streamsource ."}{"idx": 84364, "node_name": "source", "Dec": "an object that holds a url , input stream , etc ."}{"idx": 84366, "node_name": "source", "Dec": "the xml source document ."}{"idx": 84367, "node_name": "media", "Dec": "the media attribute to be matched . may be null , in which case the prefered templates will be used ( i.e. alternate = no ) ."}{"idx": 84368, "node_name": "title", "Dec": "the value of the title attribute to match . may be null ."}{"idx": 84369, "node_name": "charset", "Dec": "the value of the charset attribute to match . may be null ."}{"idx": 84371, "node_name": "resolver", "Dec": "an object that implements the uriresolver interface , or null ."}{"idx": 84374, "node_name": "name", "Dec": "feature name ."}{"idx": 84375, "node_name": "value", "Dec": "is feature state true or false ."}{"idx": 84377, "node_name": "name", "Dec": "feature name ."}{"idx": 84379, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 84380, "node_name": "value", "Dec": "the value of the attribute ."}{"idx": 84382, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 84384, "node_name": "listener", "Dec": "the new error listener ."}{"idx": 84389, "node_name": "msg", "Dec": "the error message for the exception ."}{"idx": 84391, "node_name": "e", "Dec": "the exception to be encapsulated in a transformerfactoryconfigurationerror ."}{"idx": 84393, "node_name": "e", "Dec": "the exception to be encapsulated in a transformerfactoryconfigurationerror"}{"idx": 84394, "node_name": "msg", "Dec": "the detail message ."}{"idx": 84400, "node_name": "href", "Dec": "an href attribute , which may be relative or absolute ."}{"idx": 84401, "node_name": "base", "Dec": "the base uri against which the first argument will be made absolute if the absolute uri is required ."}{"idx": 84410, "node_name": "schemalanguage", "Dec": "specifies the schema language which the returned schemafactory will understand . see the list of available schema languages for the possible values ."}{"idx": 84412, "node_name": "schemalanguage", "Dec": "specifies the schema language which the returned schemafactory will understand . see the list of available schema languages for the possible values ."}{"idx": 84413, "node_name": "factoryclassname", "Dec": "fully qualified factory class name that provides implementation of javax.xml.validation.schemafactory ."}{"idx": 84414, "node_name": "classloader", "Dec": "classloader used to load the factory class . if null current thread's context classloader is used to load the factory class ."}{"idx": 84416, "node_name": "schemalanguage", "Dec": "specifies the schema language which the returned schemafactory will understand . schemalanguage must specify a valid schema language ."}{"idx": 84418, "node_name": "name", "Dec": "the feature name , which is a non-null fully-qualified uri ."}{"idx": 84420, "node_name": "name", "Dec": "the feature name , which is a non-null fully-qualified uri ."}{"idx": 84421, "node_name": "value", "Dec": "the requested value of the feature ( true or false ) ."}{"idx": 84423, "node_name": "name", "Dec": "the property name , which is a non-null fully-qualified uri ."}{"idx": 84424, "node_name": "object", "Dec": "the requested value for the property ."}{"idx": 84426, "node_name": "name", "Dec": "the property name , which is a non-null fully-qualified uri ."}{"idx": 84428, "node_name": "errorhandler", "Dec": "a new error handler to be set . this parameter can be null ."}{"idx": 84431, "node_name": "resourceresolver", "Dec": "a new resource resolver to be set . this parameter can be null ."}{"idx": 84434, "node_name": "schema", "Dec": "source that represents a schema ."}{"idx": 84436, "node_name": "schema", "Dec": "file that represents a schema ."}{"idx": 84438, "node_name": "schema", "Dec": "url that represents a schema ."}{"idx": 84440, "node_name": "schemas", "Dec": "inputs to be parsed . schemafactory is required to recognize saxsource , streamsource , staxsource , and domsource . input schemas must be xml documents or xml elements and must not be null . for backwards compatibility , the results of passing anything other than a document or element are implementation-dependent . implementations must either recognize and process the input or thrown an illegalargumentexception ."}{"idx": 84445, "node_name": "message", "Dec": "the error message for the exception ."}{"idx": 84447, "node_name": "cause", "Dec": "the exception or error to be encapsulated in a schemafactoryconfigurationerror ."}{"idx": 84449, "node_name": "cause", "Dec": "the exception or error to be encapsulated in a schemafactoryconfigurationerror ."}{"idx": 84450, "node_name": "message", "Dec": "the detail message ."}{"idx": 84454, "node_name": "schemalanguage", "Dec": "see the list of available schema languages ."}{"idx": 84459, "node_name": "index", "Dec": "the index of the attribute . the same index for the attributes object passed to the startelement callback ."}{"idx": 84461, "node_name": "index", "Dec": "the index of the attribute . the same index for the attributes object passed to the startelement callback ."}{"idx": 84463, "node_name": "index", "Dec": "the index of the attribute . the same index for the attributes object passed to the startelement callback ."}{"idx": 84468, "node_name": "source", "Dec": "xml to be validated . must be an xml document or xml element and must not be null . for backwards compatibility , the results of attempting to validate anything other than a document or element are implementation-dependent . implementations must either recognize and process the input or throw an illegalargumentexception ."}{"idx": 84470, "node_name": "source", "Dec": "xml to be validated . must be an xml document or xml element and must not be null . for backwards compatibility , the results of attempting to validate anything other than a document or element are implementation-dependent . implementations must either recognize and process the input or throw an illegalargumentexception ."}{"idx": 84471, "node_name": "result", "Dec": "the result object that receives ( possibly augmented ) xml . this parameter can be null if the caller is not interested in it . note that when a domresult is used , a validator might just pass the same dom node from domsource to domresult ( in which case source.getnode() == result.getnode() ) , it might copy the entire dom tree , or it might alter the node given by the source ."}{"idx": 84473, "node_name": "errorhandler", "Dec": "a new error handler to be set . this parameter can be null ."}{"idx": 84476, "node_name": "resourceresolver", "Dec": "a new resource resolver to be set . this parameter can be null ."}{"idx": 84479, "node_name": "name", "Dec": "the feature name , which is a non-null fully-qualified uri ."}{"idx": 84481, "node_name": "name", "Dec": "the feature name , which is a non-null fully-qualified uri ."}{"idx": 84482, "node_name": "value", "Dec": "the requested value of the feature ( true or false ) ."}{"idx": 84484, "node_name": "name", "Dec": "the property name , which is a non-null fully-qualified uri ."}{"idx": 84485, "node_name": "object", "Dec": "the requested value for the property ."}{"idx": 84487, "node_name": "name", "Dec": "the property name , which is a non-null fully-qualified uri ."}{"idx": 84491, "node_name": "receiver", "Dec": "a contenthandler or a null value ."}{"idx": 84494, "node_name": "errorhandler", "Dec": "a new error handler to be set . this parameter can be null ."}{"idx": 84497, "node_name": "resourceresolver", "Dec": "a new resource resolver to be set . this parameter can be null ."}{"idx": 84501, "node_name": "name", "Dec": "the feature name , which is a non-null fully-qualified uri ."}{"idx": 84503, "node_name": "name", "Dec": "the feature name , which is a non-null fully-qualified uri ."}{"idx": 84504, "node_name": "value", "Dec": "the requested value of the feature ( true or false ) ."}{"idx": 84506, "node_name": "name", "Dec": "the property name , which is a non-null fully-qualified uri ."}{"idx": 84507, "node_name": "object", "Dec": "the requested value for the property ."}{"idx": 84509, "node_name": "name", "Dec": "the property name , which is a non-null fully-qualified uri ."}{"idx": 84530, "node_name": "resolver", "Dec": "variable resolver ."}{"idx": 84533, "node_name": "resolver", "Dec": "xpath function resolver ."}{"idx": 84536, "node_name": "nscontext", "Dec": "namespace context to use ."}{"idx": 84539, "node_name": "expression", "Dec": "the xpath expression ."}{"idx": 84541, "node_name": "expression", "Dec": "the xpath expression ."}{"idx": 84542, "node_name": "item", "Dec": "the context the xpath expression will be evaluated in ."}{"idx": 84543, "node_name": "returntype", "Dec": "the result type expected to be returned by the xpath expression ."}{"idx": 84545, "node_name": "expression", "Dec": "the xpath expression ."}{"idx": 84546, "node_name": "item", "Dec": "the context the xpath expression will be evaluated in ."}{"idx": 84548, "node_name": "expression", "Dec": "the xpath expression ."}{"idx": 84549, "node_name": "source", "Dec": "the input source of the document to evaluate over ."}{"idx": 84550, "node_name": "returntype", "Dec": "the desired return type ."}{"idx": 84552, "node_name": "expression", "Dec": "the xpath expression ."}{"idx": 84553, "node_name": "source", "Dec": "the inputsource of the document to evaluate over ."}{"idx": 84555, "node_name": "expression", "Dec": "the xpath expression ."}{"idx": 84556, "node_name": "item", "Dec": "the context the xpath expression will be evaluated in ."}{"idx": 84557, "node_name": "type", "Dec": "the class type expected to be returned by the xpath expression ."}{"idx": 84559, "node_name": "expression", "Dec": "the xpath expression ."}{"idx": 84560, "node_name": "item", "Dec": "the context the xpath expression will be evaluated in ."}{"idx": 84562, "node_name": "expression", "Dec": "the xpath expression ."}{"idx": 84563, "node_name": "source", "Dec": "the input source of the document to evaluate over ."}{"idx": 84564, "node_name": "type", "Dec": "the class type expected to be returned by the xpath expression ."}{"idx": 84566, "node_name": "expression", "Dec": "the xpath expression ."}{"idx": 84567, "node_name": "source", "Dec": "the input source of the document to evaluate over ."}{"idx": 84581, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 84583, "node_name": "clstype", "Dec": "a class type that the enum type supports"}{"idx": 84586, "node_name": "message", "Dec": "the detail message ."}{"idx": 84588, "node_name": "cause", "Dec": "the cause ."}{"idx": 84591, "node_name": "s", "Dec": "print stack trace to this printstream ."}{"idx": 84594, "node_name": "s", "Dec": "print stack trace to this printwriter ."}{"idx": 84597, "node_name": "item", "Dec": "the context the xpath expression will be evaluated in ."}{"idx": 84598, "node_name": "returntype", "Dec": "the result type expected to be returned by the xpath expression ."}{"idx": 84600, "node_name": "item", "Dec": "the context the xpath expression will be evaluated in ."}{"idx": 84602, "node_name": "source", "Dec": "the inputsource of the document to evaluate over ."}{"idx": 84603, "node_name": "returntype", "Dec": "the desired return type ."}{"idx": 84605, "node_name": "source", "Dec": "the inputsource of the document to evaluate over ."}{"idx": 84607, "node_name": "item", "Dec": "the context the xpath expression will be evaluated in ."}{"idx": 84608, "node_name": "type", "Dec": "the class type expected to be returned by the xpath expression ."}{"idx": 84610, "node_name": "item", "Dec": "the context the xpath expression will be evaluated in ."}{"idx": 84612, "node_name": "source", "Dec": "the inputsource of the document to evaluate over ."}{"idx": 84613, "node_name": "type", "Dec": "the class type expected to be returned by the xpath expression ."}{"idx": 84615, "node_name": "source", "Dec": "the inputsource of the document to evaluate over ."}{"idx": 84618, "node_name": "message", "Dec": "the detail message ."}{"idx": 84620, "node_name": "cause", "Dec": "the cause ."}{"idx": 84628, "node_name": "uri", "Dec": "identifies the underlying object model . the specification only defines the uri default_object_model_uri , http://java.sun.com/jaxp/xpath/dom for the w3c dom , the org.w3c.dom package , and implementations are free to introduce other uris for other object models ."}{"idx": 84630, "node_name": "uri", "Dec": "identifies the underlying object model . the specification only defines the uri default_object_model_uri , http://java.sun.com/jaxp/xpath/dom for the w3c dom , the org.w3c.dom package , and implementations are free to introduce other uris for other object models ."}{"idx": 84631, "node_name": "factoryclassname", "Dec": "fully qualified factory class name that provides implementation of javax.xml.xpath.xpathfactory ."}{"idx": 84632, "node_name": "classloader", "Dec": "classloader used to load the factory class . if null current thread's context classloader is used to load the factory class ."}{"idx": 84634, "node_name": "objectmodel", "Dec": "specifies the object model which the returned xpathfactory will understand ."}{"idx": 84636, "node_name": "name", "Dec": "feature name ."}{"idx": 84637, "node_name": "value", "Dec": "is feature state true or false ."}{"idx": 84639, "node_name": "name", "Dec": "feature name ."}{"idx": 84641, "node_name": "resolver", "Dec": "variable resolver ."}{"idx": 84643, "node_name": "resolver", "Dec": "xpath function resolver ."}{"idx": 84647, "node_name": "message", "Dec": "the detail message ."}{"idx": 84649, "node_name": "cause", "Dec": "the cause ."}{"idx": 84652, "node_name": "args", "Dec": "the arguments , null is a valid value ."}{"idx": 84655, "node_name": "message", "Dec": "the detail message ."}{"idx": 84657, "node_name": "cause", "Dec": "the cause ."}{"idx": 84660, "node_name": "functionname", "Dec": "the function name ."}{"idx": 84661, "node_name": "arity", "Dec": "the number of arguments that the returned function must accept ."}{"idx": 84666, "node_name": "index", "Dec": "index of the element to return ."}{"idx": 84669, "node_name": "variablename", "Dec": "the qname of the variable name ."}{"idx": 84673, "node_name": "missingmemberhandlerfactory", "Dec": "a factory for creating handlers for operations on missing members ."}{"idx": 84675, "node_name": "clazz", "Dec": "the class"}{"idx": 84677, "node_name": "obj", "Dec": "the object we want to test for being a java dynamic method ."}{"idx": 84679, "node_name": "obj", "Dec": "the object we want to test for being a java constructor ."}{"idx": 84681, "node_name": "clazz", "Dec": "the class"}{"idx": 84682, "node_name": "signature", "Dec": "full signature of the constructor . note how you can use names of primitive types , array names with normal java notation ( e.g. \" int [ ]\") , and normally you can even use unqualified class names ( e.g. \" string , list \" instead of \" java.lang.string , java.util.list \" as long as they don't cause ambiguity in the specific parameter position ."}{"idx": 84684, "node_name": "clazz", "Dec": "the class"}{"idx": 84686, "node_name": "clazz", "Dec": "the class"}{"idx": 84688, "node_name": "clazz", "Dec": "the class"}{"idx": 84690, "node_name": "clazz", "Dec": "the class"}{"idx": 84692, "node_name": "clazz", "Dec": "the class"}{"idx": 84694, "node_name": "clazz", "Dec": "the class"}{"idx": 84697, "node_name": "linkrequest", "Dec": "the current link request"}{"idx": 84698, "node_name": "linkerservices", "Dec": "the current link services"}{"idx": 84701, "node_name": "clazz", "Dec": "the class for which the static facet is requested ."}{"idx": 84705, "node_name": "lookup", "Dec": "the lookup object describing the class the call site belongs to . when creating descriptors from a java.lang.invoke bootstrap method , it should be the lookup passed to the bootstrap ."}{"idx": 84706, "node_name": "operation", "Dec": "the dynamic operation at the call site ."}{"idx": 84707, "node_name": "methodtype", "Dec": "the method type of the call site . when creating descriptors from a java.lang.invoke bootstrap method , it should be the method type passed to the bootstrap ."}{"idx": 84711, "node_name": "newmethodtype", "Dec": "the new method type"}{"idx": 84713, "node_name": "newmethodtype", "Dec": "the new method type"}{"idx": 84715, "node_name": "newoperation", "Dec": "the new operation"}{"idx": 84717, "node_name": "newoperation", "Dec": "the new operation"}{"idx": 84719, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 84724, "node_name": "callsite", "Dec": "the call site to link ."}{"idx": 84730, "node_name": "classloader", "Dec": "the class loader used for the automatic discovery of available linkers ."}{"idx": 84732, "node_name": "prioritizedlinkers", "Dec": "the list of prioritized linkers . can be null ."}{"idx": 84734, "node_name": "prioritizedlinkers", "Dec": "an array of prioritized linkers . can be null ."}{"idx": 84736, "node_name": "prioritizedlinker", "Dec": "the single prioritized linker . must not be null ."}{"idx": 84738, "node_name": "fallbacklinkers", "Dec": "the list of fallback linkers . can be empty to indicate the caller wishes to set no fallback linkers . note that if setFallbackLinkers(java.util.List) is not invoked explicitly or is passed null , then the factory will create an instance of beanslinker to serve as the default fallback linker ."}{"idx": 84740, "node_name": "fallbacklinkers", "Dec": "an array of fallback linkers . can be empty to indicate the caller wishes to set no fallback linkers . note that if setFallbackLinkers(jdk.dynalink.linker.GuardingDynamicLinker...) is not invoked explicitly or is passed null , then the factory will create an instance of beanslinker to serve as the default fallback linker ."}{"idx": 84742, "node_name": "synconrelink", "Dec": "true for invoking sync on relink , false otherwise ."}{"idx": 84744, "node_name": "unstablerelinkthreshold", "Dec": "the new threshold . must not be less than zero . the value of zero means that call sites will never be considered unstable ."}{"idx": 84746, "node_name": "prelinktransformer", "Dec": "the pre-link transformer for the dynamic linker . can be null to have the factory use the default transformer ."}{"idx": 84748, "node_name": "autoconversionstrategy", "Dec": "the strategy for applying method invocation conversions for the linker created by this factory . can be null for no custom strategy ."}{"idx": 84750, "node_name": "internalobjectsfilter", "Dec": "a method handle transformer filtering out internal objects , or null ."}{"idx": 84756, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 84759, "node_name": "sourcetype", "Dec": "the source type ."}{"idx": 84760, "node_name": "targettype1", "Dec": "one potential target type"}{"idx": 84761, "node_name": "targettype2", "Dec": "another potential target type ."}{"idx": 84764, "node_name": "invocation", "Dec": "the method handle representing the invocation . must not be null ."}{"idx": 84766, "node_name": "invocation", "Dec": "the method handle representing the invocation . must not be null ."}{"idx": 84767, "node_name": "guard", "Dec": "the method handle representing the guard . must have be compatible with the invocation handle as per methodhandles.guardwithtest ( methodhandle , methodhandle , methodhandle ) . for some useful guards , check out the guards class . it can be null to represent an unconditional invocation ."}{"idx": 84769, "node_name": "invocation", "Dec": "the method handle representing the invocation . must not be null ."}{"idx": 84770, "node_name": "switchpoint", "Dec": "the optional switch point that can be used to invalidate this linkage . it can be null . if it is null , this represents an unconditional invocation ."}{"idx": 84772, "node_name": "invocation", "Dec": "the method handle representing the invocation . must not be null ."}{"idx": 84773, "node_name": "guard", "Dec": "the method handle representing the guard . must have be compatible with the invocation handle as per methodhandles.guardwithtest ( methodhandle , methodhandle , methodhandle ) . for some useful guards , check out the guards class . it can be null . if both it and the switch point are null , this represents an unconditional invocation ."}{"idx": 84774, "node_name": "switchpoint", "Dec": "the optional switch point that can be used to invalidate this linkage ."}{"idx": 84776, "node_name": "invocation", "Dec": "the method handle representing the invocation . must not be null ."}{"idx": 84777, "node_name": "guard", "Dec": "the method handle representing the guard . must have be compatible with the invocation handle as per methodhandles.guardwithtest ( methodhandle , methodhandle , methodhandle ) . for some useful guards , check out the guards class . it can be null . if it and the switch point and the exception are all null , this represents an unconditional invocation ."}{"idx": 84778, "node_name": "switchpoint", "Dec": "the optional switch point that can be used to invalidate this linkage ."}{"idx": 84779, "node_name": "exception", "Dec": "the optional exception type that is when thrown by the invocation also invalidates it ."}{"idx": 84781, "node_name": "invocation", "Dec": "the method handle representing the invocation . must not be null ."}{"idx": 84782, "node_name": "guard", "Dec": "the method handle representing the guard . must have be compatible with the invocation handle as per methodhandles.guardwithtest ( methodhandle , methodhandle , methodhandle ) . for some useful guards , check out the guards class . it can be null . if it and the exception are both null , and no switch points were specified , this represents an unconditional invocation ."}{"idx": 84783, "node_name": "switchpoints", "Dec": "optional switch points that can be used to invalidate this linkage ."}{"idx": 84784, "node_name": "exception", "Dec": "the optional exception type that is when thrown by the invocation also invalidates it ."}{"idx": 84791, "node_name": "newinvocation", "Dec": "the new invocation"}{"idx": 84792, "node_name": "newguard", "Dec": "the new guard"}{"idx": 84794, "node_name": "newswitchpoint", "Dec": "new switch point . can be null in which case addSwitchPoint(java.lang.invoke.SwitchPoint) return the current guarded invocation with no changes ."}{"idx": 84796, "node_name": "newtype", "Dec": "the new type of the invocation ."}{"idx": 84798, "node_name": "linkerservices", "Dec": "the linker services to use for the conversion"}{"idx": 84799, "node_name": "newtype", "Dec": "the new type of the invocation ."}{"idx": 84801, "node_name": "linkerservices", "Dec": "the linker services to use for the conversion"}{"idx": 84802, "node_name": "newtype", "Dec": "the new type of the invocation ."}{"idx": 84804, "node_name": "desc", "Dec": "a call descriptor whose method type is adapted ."}{"idx": 84806, "node_name": "pos", "Dec": "the position of the first argument being filtered"}{"idx": 84807, "node_name": "filters", "Dec": "the argument filters"}{"idx": 84809, "node_name": "pos", "Dec": "the position of the first argument being dropped"}{"idx": 84810, "node_name": "valuetypes", "Dec": "the types of the values being dropped"}{"idx": 84812, "node_name": "pos", "Dec": "the position of the first argument being dropped"}{"idx": 84813, "node_name": "valuetypes", "Dec": "the types of the values being dropped"}{"idx": 84815, "node_name": "fallback", "Dec": "the fallback method handle for when a switch point is invalidated , a guard returns false , or invalidating exception is thrown ."}{"idx": 84817, "node_name": "switchpointfallback", "Dec": "the fallback method handle in case a switch point is invalidated ."}{"idx": 84818, "node_name": "guardfallback", "Dec": "the fallback method handle in case guard returns false ."}{"idx": 84819, "node_name": "catchfallback", "Dec": "the fallback method in case the exception handler triggers ."}{"idx": 84822, "node_name": "inv", "Dec": "the original guarded invocation ."}{"idx": 84823, "node_name": "linkrequest", "Dec": "the link request for which the invocation was generated ( usually by some linker ) ."}{"idx": 84824, "node_name": "linkerservices", "Dec": "the linker services that can be used during creation of a new invocation ."}{"idx": 84827, "node_name": "linkrequest", "Dec": "the object describing the request for linking a particular invocation"}{"idx": 84828, "node_name": "linkerservices", "Dec": "linker services"}{"idx": 84834, "node_name": "sourcetype", "Dec": "source type"}{"idx": 84835, "node_name": "targettype", "Dec": "the target type ."}{"idx": 84836, "node_name": "lookupsupplier", "Dec": "a supplier for retrieving the lookup of the class on whose behalf a type converter is requested . when a converter is requested as part of linking an invokedynamic instruction the supplier will return the lookup passed to the bootstrap method , otherwise if convertToType(java.lang.Class,java.lang.Class,java.util.function.Supplier) is invoked from within a linkerservices.getwithlookup ( supplier , jdk.dynalink.securelookupsupplier ) it will delegate to the secure lookup supplier . in any other case , it will return the public lookup . a typical case where the lookup might be needed is when the converter creates a java adapter class on the fly ( e.g. to convert some object from the dynamic language into a java interface for interoperability ) . invoking the supplier.get() method on the passed supplier will be subject to the same security checks as securelookupsupplier.getlookup() . an implementation should avoid retrieving the lookup if it is not needed so as to avoid the expense of accesscontroller.doprivileged call ."}{"idx": 84839, "node_name": "handle", "Dec": "target method handle"}{"idx": 84840, "node_name": "fromtype", "Dec": "the types of source arguments"}{"idx": 84842, "node_name": "handle", "Dec": "target method handle"}{"idx": 84843, "node_name": "fromtype", "Dec": "the types of source arguments"}{"idx": 84845, "node_name": "sourcetype", "Dec": "the type to convert from"}{"idx": 84846, "node_name": "targettype", "Dec": "the type to convert to"}{"idx": 84848, "node_name": "from", "Dec": "the source type for the conversion"}{"idx": 84849, "node_name": "to", "Dec": "the target type for the conversion"}{"idx": 84851, "node_name": "linkrequest", "Dec": "a request for linking the invocation"}{"idx": 84853, "node_name": "sourcetype", "Dec": "the source type ."}{"idx": 84854, "node_name": "targettype1", "Dec": "one potential target type"}{"idx": 84855, "node_name": "targettype2", "Dec": "another potential target type ."}{"idx": 84857, "node_name": "target", "Dec": "the target method handle"}{"idx": 84859, "node_name": "operation", "Dec": "the operation to execute in context of the specified lookup ."}{"idx": 84860, "node_name": "lookupsupplier", "Dec": "secure supplier of the lookup"}{"idx": 84867, "node_name": "callsitedescriptor", "Dec": "the new call site descriptor"}{"idx": 84868, "node_name": "arguments", "Dec": "the new arguments"}{"idx": 84871, "node_name": "target", "Dec": "transform(java.lang.invoke.MethodHandle) handle being transformed ."}{"idx": 84874, "node_name": "target", "Dec": "target method handle"}{"idx": 84875, "node_name": "newtype", "Dec": "new type"}{"idx": 84878, "node_name": "linkers", "Dec": "a list of component linkers ."}{"idx": 84880, "node_name": "linkrequest", "Dec": "the object describing the request for linking a particular invocation"}{"idx": 84881, "node_name": "linkerservices", "Dec": "linker services"}{"idx": 84884, "node_name": "linkers", "Dec": "the component linkers"}{"idx": 84886, "node_name": "type", "Dec": "the type to link"}{"idx": 84888, "node_name": "linkers", "Dec": "the list of linkers to optimize"}{"idx": 84891, "node_name": "parameterfilter", "Dec": "the filter for method parameters . must be of type object ( object ) , or null ."}{"idx": 84892, "node_name": "returnfilter", "Dec": "the filter for return values . must be of type object ( object ) , or null ."}{"idx": 84895, "node_name": "clazz", "Dec": "the class of the first argument to test for"}{"idx": 84896, "node_name": "type", "Dec": "isOfClass(java.lang.Class,java.lang.invoke.MethodType) type"}{"idx": 84898, "node_name": "clazz", "Dec": "the class of the first argument to test for"}{"idx": 84899, "node_name": "type", "Dec": "isInstance(java.lang.Class,java.lang.invoke.MethodType) type"}{"idx": 84901, "node_name": "clazz", "Dec": "the class of the first argument to test for"}{"idx": 84902, "node_name": "pos", "Dec": "the position on the argument list to test"}{"idx": 84903, "node_name": "type", "Dec": "isInstance(java.lang.Class,int,java.lang.invoke.MethodType) type"}{"idx": 84905, "node_name": "pos", "Dec": "the position in the argument lit"}{"idx": 84906, "node_name": "type", "Dec": "isArray(int,java.lang.invoke.MethodType) type of the handle"}{"idx": 84908, "node_name": "test", "Dec": "the test method handle"}{"idx": 84909, "node_name": "type", "Dec": "the type to adapt asType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType) handle to"}{"idx": 84911, "node_name": "linkerservices", "Dec": "the linker services to use for type conversions"}{"idx": 84912, "node_name": "test", "Dec": "the test method handle"}{"idx": 84913, "node_name": "type", "Dec": "the type to adapt asType(jdk.dynalink.linker.LinkerServices,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType) handle to"}{"idx": 84915, "node_name": "clazz", "Dec": "the class to test for ."}{"idx": 84917, "node_name": "clazz", "Dec": "the class to test for ."}{"idx": 84919, "node_name": "obj", "Dec": "the object used as referential identity test"}{"idx": 84925, "node_name": "lookup", "Dec": "the methodhandles.lookup it delegates to ."}{"idx": 84927, "node_name": "m", "Dec": "unreflect(java.lang.reflect.Method) to unreflect"}{"idx": 84929, "node_name": "lookup", "Dec": "the lookup used to unreflect"}{"idx": 84930, "node_name": "m", "Dec": "unreflect(java.lang.invoke.MethodHandles.Lookup,java.lang.reflect.Method) to unreflect"}{"idx": 84932, "node_name": "f", "Dec": "the field for which a getter is unreflected"}{"idx": 84934, "node_name": "refc", "Dec": "the class declaring the field"}{"idx": 84935, "node_name": "name", "Dec": "the name of the field"}{"idx": 84936, "node_name": "type", "Dec": "the type of the field"}{"idx": 84938, "node_name": "f", "Dec": "the field for which a setter is unreflected"}{"idx": 84940, "node_name": "c", "Dec": "the constructor to unreflect"}{"idx": 84942, "node_name": "lookup", "Dec": "the lookup used to unreflect"}{"idx": 84943, "node_name": "c", "Dec": "the constructor to unreflect"}{"idx": 84945, "node_name": "declaringclass", "Dec": "class declaring findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 84946, "node_name": "name", "Dec": "the name of findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 84947, "node_name": "type", "Dec": "the type of findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 84949, "node_name": "declaringclass", "Dec": "class declaring findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 84950, "node_name": "name", "Dec": "the name of findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 84951, "node_name": "type", "Dec": "the type of findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 84953, "node_name": "declaringclass", "Dec": "class declaring findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 84954, "node_name": "name", "Dec": "the name of findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 84955, "node_name": "type", "Dec": "the type of findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)"}{"idx": 84957, "node_name": "lookup", "Dec": "the lookup for the class"}{"idx": 84958, "node_name": "name", "Dec": "the name of findOwnSpecial(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84959, "node_name": "rtype", "Dec": "the return type of findOwnSpecial(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84960, "node_name": "ptypes", "Dec": "the parameter types of findOwnSpecial(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84962, "node_name": "name", "Dec": "the name of findOwnSpecial(java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84963, "node_name": "rtype", "Dec": "the return type of findOwnSpecial(java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84964, "node_name": "ptypes", "Dec": "the parameter types of findOwnSpecial(java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84966, "node_name": "lookup", "Dec": "the lookup for the class"}{"idx": 84967, "node_name": "name", "Dec": "the name of findOwnStatic(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84968, "node_name": "rtype", "Dec": "the return type of findOwnStatic(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84969, "node_name": "ptypes", "Dec": "the parameter types of findOwnStatic(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84971, "node_name": "name", "Dec": "the name of findOwnStatic(java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84972, "node_name": "rtype", "Dec": "the return type of findOwnStatic(java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84973, "node_name": "ptypes", "Dec": "the parameter types of findOwnStatic(java.lang.String,java.lang.Class,java.lang.Class...)"}{"idx": 84976, "node_name": "callsitedescriptor", "Dec": "the descriptor for the call site being linked . must not be null ."}{"idx": 84977, "node_name": "callsiteunstable", "Dec": "true if the call site being linked is considered unstable ."}{"idx": 84978, "node_name": "arguments", "Dec": "the arguments for the invocation . must not be null ."}{"idx": 84981, "node_name": "sourcetype", "Dec": "the type being converted from ( call site type for parameter types , method type for return types )"}{"idx": 84982, "node_name": "targettype", "Dec": "the parameter type being converted to ( method type for parameter types , call site type for return types )"}{"idx": 84984, "node_name": "sourcetype", "Dec": "the source type"}{"idx": 84985, "node_name": "targettype", "Dec": "the target type"}{"idx": 84987, "node_name": "subtype", "Dec": "the supposed subtype"}{"idx": 84988, "node_name": "supertype", "Dec": "the supposed supertype of the subtype"}{"idx": 84990, "node_name": "name", "Dec": "the name of the primitive type"}{"idx": 84992, "node_name": "wrappertype", "Dec": "the class object representing a wrapper for a primitive type ."}{"idx": 84994, "node_name": "primitivetype", "Dec": "the class object representing a primitive type"}{"idx": 84996, "node_name": "type", "Dec": "the examined type"}{"idx": 84999, "node_name": "type", "Dec": "the type to link"}{"idx": 85002, "node_name": "baseoperation", "Dec": "the base operation that is associated with a name ."}{"idx": 85003, "node_name": "name", "Dec": "the name associated with the base operation . note that the name is not necessarily a string , but can be an arbitrary object . as the name is used for addressing , it can be an integer when meant to be used as an index into an array or list etc ."}{"idx": 85007, "node_name": "newname", "Dec": "the new name to replace the old name with ."}{"idx": 85009, "node_name": "obj", "Dec": "the reference object with which to compare ."}{"idx": 85013, "node_name": "op", "Dec": "the operation"}{"idx": 85015, "node_name": "op", "Dec": "the operation"}{"idx": 85019, "node_name": "baseoperation", "Dec": "the base operation that operates on one or more namespaces ."}{"idx": 85020, "node_name": "namespaces", "Dec": "one or more namespaces this operation operates on ."}{"idx": 85025, "node_name": "i", "Dec": "the namespace index"}{"idx": 85027, "node_name": "namespace", "Dec": "the namespace being searched for . must not be null ."}{"idx": 85029, "node_name": "obj", "Dec": "the object to compare to"}{"idx": 85033, "node_name": "op", "Dec": "the operation"}{"idx": 85035, "node_name": "op", "Dec": "the operation"}{"idx": 85037, "node_name": "op", "Dec": "the operation . must not be null ."}{"idx": 85038, "node_name": "baseoperation", "Dec": "the base operation being searched for . must not be null ."}{"idx": 85039, "node_name": "namespace", "Dec": "the namespace being searched for . must not be null ."}{"idx": 85042, "node_name": "message", "Dec": "the message of the exception ."}{"idx": 85045, "node_name": "namespace", "Dec": "the namespace that is the target of the namespace operation ."}{"idx": 85047, "node_name": "namespaces", "Dec": "the namespaces that are the target of the namespace operation ."}{"idx": 85049, "node_name": "name", "Dec": "the name that is the target of the named operation ."}{"idx": 85052, "node_name": "relinkandinvoke", "Dec": "a relink-and-invoke method handle supplied by dynalink ."}{"idx": 85055, "node_name": "guardedinvocation", "Dec": "the guarded invocation that the call site should incorporate into its target method handle ."}{"idx": 85056, "node_name": "relinkandinvoke", "Dec": "a relink-and-invoke method handle . this is a method handle matching relink(jdk.dynalink.linker.GuardedInvocation,java.lang.invoke.MethodHandle) type of the call site that is supplied by the dynamiclinker as a callback . it should be used by this call site as the ultimate fallback when it can't invoke its target with the passed arguments . the fallback method is such that when it's invoked , it'll try to obtain an adequate target guardedinvocation for the invocation , and subsequently invoke relink ( guardedinvocation , methodhandle ) or resetandrelink ( guardedinvocation , methodhandle ) , and finally invoke the target ."}{"idx": 85058, "node_name": "guardedinvocation", "Dec": "the guarded invocation that the call site should use to build its target method handle ."}{"idx": 85059, "node_name": "relinkandinvoke", "Dec": "a relink-and-invoke method handle . this is a method handle matching resetAndRelink(jdk.dynalink.linker.GuardedInvocation,java.lang.invoke.MethodHandle) type of the call site that is supplied by the dynamiclinker as a callback . it should be used by this call site as the ultimate fallback when it can't invoke its target with the passed arguments . the fallback method is such that when it's invoked , it'll try to obtain an adequate target guardedinvocation for the invocation , and subsequently invoke relink ( guardedinvocation , methodhandle ) or resetandrelink ( guardedinvocation , methodhandle ) , and finally invoke the target ."}{"idx": 85063, "node_name": "lookup", "Dec": "the lookup to secure . can not be null ."}{"idx": 85069, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 85071, "node_name": "op", "Dec": "the operation"}{"idx": 85075, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 85078, "node_name": "descriptor", "Dec": "the descriptor for this call site that will be returned from relinkablecallsite.getdescriptor() . the call site's callsite.type() will be equal to descriptor's callsitedescriptor.getmethodtype() ."}{"idx": 85081, "node_name": "descriptor", "Dec": "the descriptor for the call site ."}{"idx": 85085, "node_name": "descriptor", "Dec": "the descriptor for this call site"}{"idx": 85094, "node_name": "index", "Dec": "the index of the field that is passed to eventfactory #create ( string , java.util.list , java.util.list )"}{"idx": 85095, "node_name": "value", "Dec": "value to set , can be null"}{"idx": 85098, "node_name": "locale", "Dec": "the locale to be used"}{"idx": 85099, "node_name": "reporter", "Dec": "the reporter to be used"}{"idx": 85104, "node_name": "environment", "Dec": "from which essential information can be extracted"}{"idx": 85112, "node_name": "option", "Dec": "the option"}{"idx": 85113, "node_name": "arguments", "Dec": "a list encapsulating the arguments"}{"idx": 85117, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 85125, "node_name": "e", "Dec": "the element"}{"idx": 85127, "node_name": "e", "Dec": "the element"}{"idx": 85132, "node_name": "type", "Dec": "the type element"}{"idx": 85136, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 85139, "node_name": "kind", "Dec": "specify the diagnostic kind"}{"idx": 85140, "node_name": "msg", "Dec": "message to print"}{"idx": 85142, "node_name": "kind", "Dec": "specify the diagnostic kind"}{"idx": 85143, "node_name": "path", "Dec": "the doctreepath of item where the error occurs"}{"idx": 85144, "node_name": "msg", "Dec": "message to print"}{"idx": 85146, "node_name": "kind", "Dec": "specify the diagnostic kind"}{"idx": 85147, "node_name": "e", "Dec": "the element for which the error occurs"}{"idx": 85148, "node_name": "msg", "Dec": "message to print"}{"idx": 85157, "node_name": "env", "Dec": "the environment in which the doclet and taglet are running"}{"idx": 85158, "node_name": "doclet", "Dec": "the doclet that instantiated this taglet"}{"idx": 85160, "node_name": "tags", "Dec": "the list of instances of this tag"}{"idx": 85161, "node_name": "element", "Dec": "the element to which the enclosing comment belongs"}{"idx": 85165, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 85168, "node_name": "annotationtype", "Dec": "interface extending java.lang.annotation.annotation , not null"}{"idx": 85169, "node_name": "values", "Dec": "a map with keys that match method names of the specified annotation interface"}{"idx": 85171, "node_name": "annotationtype", "Dec": "interface extending java.lang.annotation.annotation , not null"}{"idx": 85172, "node_name": "value", "Dec": "the value that matches the value method of the specified annotationtype"}{"idx": 85174, "node_name": "annotationtype", "Dec": "interface extending java.lang.annotation.annotation , not null"}{"idx": 85180, "node_name": "name", "Dec": "the name of getValue(java.lang.String) in the annotation interface , not null ."}{"idx": 85182, "node_name": "name", "Dec": "name of hasValue(java.lang.String) in the annotation interface to find , not null"}{"idx": 85184, "node_name": "annotationtype", "Dec": "the class object corresponding to the annotation type , not null"}{"idx": 85196, "node_name": "path", "Dec": "the file that contains the configuration , not null"}{"idx": 85198, "node_name": "reader", "Dec": "a reader that provides the configuration contents , not null"}{"idx": 85200, "node_name": "name", "Dec": "the name of the configuration ( for example , \" default \" or \" profile \")"}{"idx": 85233, "node_name": "name", "Dec": "name of the field to get , not null"}{"idx": 85235, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85238, "node_name": "name", "Dec": "name of the field to get , not null"}{"idx": 85240, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85242, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85244, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85246, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85248, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85250, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85252, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85254, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85256, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85258, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85260, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85262, "node_name": "name", "Dec": "of the field to get , not null"}{"idx": 85279, "node_name": "file", "Dec": "the path of the file to open , not null"}{"idx": 85285, "node_name": "path", "Dec": "the path to the file , not null"}{"idx": 85301, "node_name": "index", "Dec": "the index of the field that is passed to eventfactory #create ( string , java.util.list , java.util.list )"}{"idx": 85302, "node_name": "value", "Dec": "value to set , can be null"}{"idx": 85305, "node_name": "annotationelements", "Dec": "list of annotation elements that describes the annotations on the event , not null"}{"idx": 85306, "node_name": "fields", "Dec": "list of descriptors that describes the fields of the event , not null"}{"idx": 85316, "node_name": "duration", "Dec": "the duration , not null"}{"idx": 85318, "node_name": "duration", "Dec": "the duration , or null if no duration is used"}{"idx": 85320, "node_name": "name", "Dec": "the name of the setting ( for example , \" threshold \")"}{"idx": 85321, "node_name": "value", "Dec": "the value to set ( for example \" 20 ms \" not null )"}{"idx": 85332, "node_name": "annotationclass", "Dec": "the class object that corresponds to the annotation type , not null"}{"idx": 85334, "node_name": "eventclass", "Dec": "the event class , not null"}{"idx": 85342, "node_name": "eventclass", "Dec": "the event class to register , not null"}{"idx": 85344, "node_name": "eventclass", "Dec": "the event class to unregistered , not null"}{"idx": 85347, "node_name": "eventclass", "Dec": "the class that the hook should run for , not null"}{"idx": 85348, "node_name": "hook", "Dec": "the hook , not null"}{"idx": 85350, "node_name": "hook", "Dec": "the hook to remove , not null"}{"idx": 85353, "node_name": "changelistener", "Dec": "the listener to add , not null"}{"idx": 85355, "node_name": "changelistener", "Dec": "listener to remove , not null"}{"idx": 85360, "node_name": "recorder", "Dec": "flight recorder instance , not null"}{"idx": 85362, "node_name": "recording", "Dec": "the recording where the state change occurred , not null"}{"idx": 85365, "node_name": "name", "Dec": "the permission name , must be either \" accessflightrecorder \" or \" registerevent \" , not null"}{"idx": 85370, "node_name": "settingvalues", "Dec": "the set of values , not null"}{"idx": 85372, "node_name": "settingvalue", "Dec": "the string value , not null"}{"idx": 85385, "node_name": "configuration", "Dec": "configuration that contains the settings to be use , not null"}{"idx": 85388, "node_name": "delay", "Dec": "the time to wait before starting this recording , not null"}{"idx": 85398, "node_name": "settings", "Dec": "the settings to set , not null"}{"idx": 85402, "node_name": "stop", "Dec": "true if the newly created copy should be stopped immediately , false otherwise"}{"idx": 85404, "node_name": "destination", "Dec": "the location where recording data is written , not null"}{"idx": 85407, "node_name": "maxsize", "Dec": "the amount of data to retain , 0 if infinite"}{"idx": 85409, "node_name": "maxage", "Dec": "the length of time that data is kept , or null if infinite"}{"idx": 85411, "node_name": "destination", "Dec": "the destination path , or null if recording should not be dumped at stop"}{"idx": 85415, "node_name": "name", "Dec": "the recording name , not null"}{"idx": 85417, "node_name": "dumponexit", "Dec": "if this recording should be dumped when the jvm exits"}{"idx": 85420, "node_name": "disk", "Dec": "true if this recording is written to disk , false if in-memory"}{"idx": 85422, "node_name": "the", "Dec": "start start time for the stream , or null to get data from start time of the recording"}{"idx": 85423, "node_name": "the", "Dec": "end end time for the stream , or null to get data until the present time ."}{"idx": 85426, "node_name": "duration", "Dec": "the duration , or null if no duration is set"}{"idx": 85428, "node_name": "name", "Dec": "the settings for the event , not null"}{"idx": 85430, "node_name": "name", "Dec": "the settings for the event , not null"}{"idx": 85432, "node_name": "eventclass", "Dec": "the event to enable , not null"}{"idx": 85434, "node_name": "eventclass", "Dec": "the event to enable , not null"}{"idx": 85438, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 85444, "node_name": "settingvalues", "Dec": "the set of values , not null"}{"idx": 85446, "node_name": "settingvalue", "Dec": "the string value , not null"}{"idx": 85457, "node_name": "annotationtype", "Dec": "the class object that corresponds to the annotation type , not null"}{"idx": 85478, "node_name": "type", "Dec": "the type , not null"}{"idx": 85479, "node_name": "name", "Dec": "the name , not null"}{"idx": 85481, "node_name": "type", "Dec": "the type , not null"}{"idx": 85482, "node_name": "name", "Dec": "the name , not null"}{"idx": 85483, "node_name": "annotations", "Dec": "the annotations on the value descriptors , not null"}{"idx": 85492, "node_name": "annotationtype", "Dec": "the class object that corresponds to the annotation type , not null"}{"idx": 85504, "node_name": "locale", "Dec": "a locale ; might be null"}{"idx": 85512, "node_name": "loaderdelegate", "Dec": "the delegate to handle loading classes"}{"idx": 85515, "node_name": "cbcs", "Dec": "the class name and bytecodes to redefine"}{"idx": 85518, "node_name": "name", "Dec": "the binary name of the class"}{"idx": 85520, "node_name": "doitmethod", "Dec": "invoke(java.lang.reflect.Method) to invoke"}{"idx": 85522, "node_name": "value", "Dec": "the value to convert"}{"idx": 85524, "node_name": "cause", "Dec": "the exception to convert"}{"idx": 85526, "node_name": "ex", "Dec": "the exception to convert"}{"idx": 85534, "node_name": "env", "Dec": "the execution environment , provided by jshell"}{"idx": 85535, "node_name": "parameters", "Dec": "the modified parameter map ."}{"idx": 85540, "node_name": "out", "Dec": "the output from the remote agent"}{"idx": 85541, "node_name": "in", "Dec": "the input to the remote agent"}{"idx": 85544, "node_name": "cbcs", "Dec": "the class name and bytecodes to redefine"}{"idx": 85546, "node_name": "vm", "Dec": "the current jdi virtualmachine as returned by vm()"}{"idx": 85547, "node_name": "name", "Dec": "the class name to look-up"}{"idx": 85558, "node_name": "port", "Dec": "the socket port for ( non-jdi ) commands"}{"idx": 85559, "node_name": "remotevmoptions", "Dec": "any user requested vm command-line options"}{"idx": 85560, "node_name": "remoteagent", "Dec": "full class name of remote agent to launch"}{"idx": 85561, "node_name": "islaunch", "Dec": "does jdi do the launch ? that is , launchingconnector , otherwise we start explicitly and use listeningconnector"}{"idx": 85562, "node_name": "host", "Dec": "explicit hostname to use , if null use discovered hostname , applies to listening only ( ! islaunch )"}{"idx": 85563, "node_name": "timeout", "Dec": "the start-up time-out in milliseconds . if zero or negative , will not wait thus will timeout immediately if not already started ."}{"idx": 85564, "node_name": "customconnectorargs", "Dec": "custom arguments passed to the connector . these are jdi com.sun.jdi.connect.connector arguments ."}{"idx": 85569, "node_name": "cbcs", "Dec": "the class name and bytecodes to load"}{"idx": 85571, "node_name": "cbcs", "Dec": "the class names and bytecodes that have been redefined"}{"idx": 85573, "node_name": "path", "Dec": "the path to add"}{"idx": 85575, "node_name": "name", "Dec": "the binary name of the class"}{"idx": 85578, "node_name": "loaderdelegate", "Dec": "the delegate to handle loading classes"}{"idx": 85585, "node_name": "env", "Dec": "the execution environment , provided by jshell"}{"idx": 85586, "node_name": "parameters", "Dec": "the default or modified parameter map ."}{"idx": 85589, "node_name": "loaderdelegate", "Dec": "the delegate to handle loading classes"}{"idx": 85592, "node_name": "args", "Dec": "standard command-line arguments , expectation is the socket number is the only argument"}{"idx": 85594, "node_name": "cbcs", "Dec": "the class name and bytecodes to redefine"}{"idx": 85597, "node_name": "out", "Dec": "the output for commands"}{"idx": 85598, "node_name": "in", "Dec": "the input for command responses"}{"idx": 85602, "node_name": "ec", "Dec": "the direct instance of executioncontrol to process commands"}{"idx": 85603, "node_name": "in", "Dec": "the command input"}{"idx": 85604, "node_name": "out", "Dec": "the command response output"}{"idx": 85606, "node_name": "ec", "Dec": "the direct instance of executioncontrol to process commands"}{"idx": 85607, "node_name": "instream", "Dec": "the stream from which to create the command input"}{"idx": 85608, "node_name": "outstream", "Dec": "the stream that will carry any specified auxiliary channels ( like system.out and system.err ) , and the command response output ."}{"idx": 85609, "node_name": "outputstreammap", "Dec": "a map between names of additional streams to carry and setters for the stream . names starting with ' $ ' are reserved for internal use ."}{"idx": 85610, "node_name": "inputstreammap", "Dec": "a map between names of additional streams to carry and setters for the stream . names starting with ' $ ' are reserved for internal use ."}{"idx": 85612, "node_name": "input", "Dec": "the packetized input stream"}{"idx": 85613, "node_name": "output", "Dec": "the packetized output stream"}{"idx": 85614, "node_name": "outputstreammap", "Dec": "a map between stream names and the output streams to forward . names starting with ' $ ' are reserved for internal use ."}{"idx": 85615, "node_name": "inputstreammap", "Dec": "a map between stream names and the input streams to forward . names starting with ' $ ' are reserved for internal use ."}{"idx": 85616, "node_name": "factory", "Dec": "to create the executioncontrol from objectinput and objectoutput ."}{"idx": 85618, "node_name": "vm", "Dec": "the virtual machine to check"}{"idx": 85619, "node_name": "unbiddenexithandler", "Dec": "the handler , which will accept the exit information"}{"idx": 85629, "node_name": "in", "Dec": "the inputstream to be channelled to system.in in the remote execution process"}{"idx": 85631, "node_name": "out", "Dec": "the printstream to be channelled to system.out in the remote execution process"}{"idx": 85633, "node_name": "err", "Dec": "the printstream to be channelled to system.err in the remote execution process"}{"idx": 85635, "node_name": "generator", "Dec": "the supplier to generate the temporary variable name string or null"}{"idx": 85637, "node_name": "generator", "Dec": "the bifunction to generate the id string or null"}{"idx": 85639, "node_name": "options", "Dec": "the options for the remote vm"}{"idx": 85641, "node_name": "options", "Dec": "the addition options for compiler invocations"}{"idx": 85643, "node_name": "executioncontrolspec", "Dec": "the execution control spec , which is documented in the jdk.jshell.spi package documentation ."}{"idx": 85645, "node_name": "executioncontrolprovider", "Dec": "the provider to supply the execution engine"}{"idx": 85646, "node_name": "executioncontrolparameters", "Dec": "the parameters to the provider , or null for default parameters"}{"idx": 85648, "node_name": "mapping", "Dec": "a function that given the compiler's standard file manager , returns a file manager to use"}{"idx": 85655, "node_name": "input", "Dec": "the input string to evaluate"}{"idx": 85657, "node_name": "snippet", "Dec": "the snippet to remove"}{"idx": 85659, "node_name": "path", "Dec": "the path to add to the classpath ."}{"idx": 85668, "node_name": "snippet", "Dec": "the snippet to look up"}{"idx": 85670, "node_name": "snippet", "Dec": "the snippet to look up"}{"idx": 85672, "node_name": "snippet", "Dec": "the declaration snippet to look up"}{"idx": 85674, "node_name": "snippet", "Dec": "the variable snippet whose value is queried ."}{"idx": 85676, "node_name": "listener", "Dec": "action to perform when the status changes ."}{"idx": 85678, "node_name": "listener", "Dec": "action to perform when the state terminates ."}{"idx": 85680, "node_name": "token", "Dec": "the token corresponding to the subscription to be unsubscribed ."}{"idx": 85696, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 85701, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 85707, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 85723, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 85734, "node_name": "input", "Dec": "the input source string"}{"idx": 85736, "node_name": "input", "Dec": "the user input , so far"}{"idx": 85737, "node_name": "cursor", "Dec": "the current position of the cursors in the given input text"}{"idx": 85738, "node_name": "anchor", "Dec": "outgoing parameter"}{"idx": 85740, "node_name": "input", "Dec": "the snippet the user wrote so far"}{"idx": 85741, "node_name": "cursor", "Dec": "the current position of the cursors in the given input text"}{"idx": 85742, "node_name": "computejavadoc", "Dec": "true if the javadoc for the given input should be computed in addition to the signature"}{"idx": 85744, "node_name": "code", "Dec": "the expression for which the type should be inferred"}{"idx": 85745, "node_name": "cursor", "Dec": "current cursor position in the given code"}{"idx": 85747, "node_name": "code", "Dec": "the expression for which the candidate qualified names should be computed"}{"idx": 85748, "node_name": "cursor", "Dec": "current cursor position in the given code"}{"idx": 85750, "node_name": "snippet", "Dec": "the snippet from which to retrieve the wrapper"}{"idx": 85752, "node_name": "input", "Dec": "the source input from which to generate wrappers"}{"idx": 85754, "node_name": "input", "Dec": "the input string to convert"}{"idx": 85756, "node_name": "snippet", "Dec": "the snippet whose dependents are requested"}{"idx": 85768, "node_name": "pos", "Dec": "the position in source()"}{"idx": 85770, "node_name": "pos", "Dec": "the position in wrapped()"}{"idx": 85776, "node_name": "name", "Dec": "the class name"}{"idx": 85777, "node_name": "bytecodes", "Dec": "the class bytecodes"}{"idx": 85791, "node_name": "cbcs", "Dec": "the class name and bytecodes to load"}{"idx": 85793, "node_name": "cbcs", "Dec": "the class name and bytecodes to redefine"}{"idx": 85795, "node_name": "classname", "Dec": "the class whose method should be invoked"}{"idx": 85796, "node_name": "methodname", "Dec": "the name of method to invoke"}{"idx": 85798, "node_name": "classname", "Dec": "the name of the wrapper class of the variable"}{"idx": 85799, "node_name": "varname", "Dec": "the name of the variable"}{"idx": 85801, "node_name": "path", "Dec": "the path to add"}{"idx": 85804, "node_name": "command", "Dec": "the non-standard command"}{"idx": 85805, "node_name": "arg", "Dec": "the commands argument"}{"idx": 85808, "node_name": "env", "Dec": "the execution environment ( provided by jshell )"}{"idx": 85809, "node_name": "name", "Dec": "the name of provider"}{"idx": 85810, "node_name": "parameters", "Dec": "the parameter map ."}{"idx": 85812, "node_name": "env", "Dec": "the execution environment ( provided by jshell )"}{"idx": 85813, "node_name": "spec", "Dec": "the executioncontrol spec , which is described in the documentation of this package documentation ."}{"idx": 85818, "node_name": "id", "Dec": "an internal identifier of the specific method"}{"idx": 85819, "node_name": "stackelements", "Dec": "the stack trace"}{"idx": 85831, "node_name": "env", "Dec": "the execution environment , provided by jshell"}{"idx": 85832, "node_name": "parameters", "Dec": "the default or modified parameter map ."}{"idx": 85841, "node_name": "id", "Dec": "an internal identifier of the specific method"}{"idx": 85847, "node_name": "cmdin", "Dec": "source of command input"}{"idx": 85848, "node_name": "userin", "Dec": "source of input for running user code , or null to extract user input from cmdin"}{"idx": 85850, "node_name": "output", "Dec": "destination of command feedback , console interaction , and user code output"}{"idx": 85852, "node_name": "cmdout", "Dec": "destination of command feedback including error messages for users"}{"idx": 85853, "node_name": "console", "Dec": "destination of console interaction"}{"idx": 85854, "node_name": "userout", "Dec": "destination of user code output . for example , user snippet system.out.println ( \" hello \") when executed hello goes to userout ."}{"idx": 85856, "node_name": "error", "Dec": "destination of tool errors , and user code errors"}{"idx": 85858, "node_name": "cmderr", "Dec": "destination of tool start-up and fatal errors"}{"idx": 85859, "node_name": "usererr", "Dec": "destination of user code error output . for example , user snippet system.err.println ( \" oops \") when executed oops goes to usererr ."}{"idx": 85861, "node_name": "prefs", "Dec": "an instance of preferences that is used to retrieve and store persistent information"}{"idx": 85863, "node_name": "prefsmap", "Dec": "an instance of map that is used to retrieve and store persistent information"}{"idx": 85865, "node_name": "vars", "Dec": "the map of environment variable names to values"}{"idx": 85867, "node_name": "locale", "Dec": "the locale"}{"idx": 85869, "node_name": "capture", "Dec": "if true , basic prompt is the enq character and continuation prompt is the ack character . if false , prompts are as set with set-up or user / set commands ."}{"idx": 85871, "node_name": "arguments", "Dec": "the command-line arguments ( including options ) , if any"}{"idx": 85873, "node_name": "arguments", "Dec": "the command-line arguments ( including options ) , if any"}{"idx": 85887, "node_name": "cd", "Dec": "compositedata representing a configurationinfo"}{"idx": 85898, "node_name": "cd", "Dec": "compositedata representing the eventtypeinfo to return"}{"idx": 85904, "node_name": "recordingid", "Dec": "the recording id of the recording to create a clone from"}{"idx": 85905, "node_name": "stop", "Dec": "if the newly created clone is stopped before returning ."}{"idx": 85907, "node_name": "recordingid", "Dec": "id of the recording to start"}{"idx": 85909, "node_name": "recordingid", "Dec": "the id of the recording to stop"}{"idx": 85911, "node_name": "recordingid", "Dec": "the id of the recording to close"}{"idx": 85913, "node_name": "recordingid", "Dec": "id of the recording to open the stream for"}{"idx": 85914, "node_name": "streamoptions", "Dec": "a map that contains the options that controls the amount of data and how it is read , or null to get all data for the recording with the default block size"}{"idx": 85916, "node_name": "streamid", "Dec": "the id of the stream"}{"idx": 85918, "node_name": "streamid", "Dec": "the id of the stream"}{"idx": 85920, "node_name": "recordingid", "Dec": "the id of the recording to get options for"}{"idx": 85922, "node_name": "recordingid", "Dec": "the id of the recordings to get settings for"}{"idx": 85924, "node_name": "recordingid", "Dec": "id of the recording"}{"idx": 85925, "node_name": "contents", "Dec": "a string representation of the configuration file to use , not null"}{"idx": 85927, "node_name": "recordingid", "Dec": "id of the recording to set the configuration for"}{"idx": 85928, "node_name": "configurationname", "Dec": "the name of the configuration ( for example , \" profile \" or \" default \") , not null"}{"idx": 85930, "node_name": "recordingid", "Dec": "id of the recording"}{"idx": 85931, "node_name": "settings", "Dec": "name value map of the settings to set , not null"}{"idx": 85933, "node_name": "recordingid", "Dec": "the id of the recording to set options for"}{"idx": 85934, "node_name": "options", "Dec": "name / value map of the settings to set , not null"}{"idx": 85939, "node_name": "recordingid", "Dec": "the id of the recording to dump data for"}{"idx": 85940, "node_name": "outputfile", "Dec": "the system-dependent file name where data is written , not null"}{"idx": 85957, "node_name": "cd", "Dec": "compositedata representing the recordinginfo to return"}{"idx": 85966, "node_name": "cd", "Dec": "compositedata representing the settingdescriptorinfo to return"}{"idx": 86051, "node_name": "name", "Dec": "the permission target name"}{"idx": 86053, "node_name": "name", "Dec": "the permission target name"}{"idx": 86054, "node_name": "actions", "Dec": "should be null . is ignored if not ."}{"idx": 86068, "node_name": "name", "Dec": "the name of the enum constant to be returned ."}{"idx": 86071, "node_name": "s", "Dec": "the socket"}{"idx": 86072, "node_name": "name", "Dec": "the socket option"}{"idx": 86073, "node_name": "value", "Dec": "the value of the socket option . may be null for some options ."}{"idx": 86075, "node_name": "s", "Dec": "the socket"}{"idx": 86076, "node_name": "name", "Dec": "the socket option"}{"idx": 86078, "node_name": "s", "Dec": "the socket"}{"idx": 86079, "node_name": "name", "Dec": "the socket option"}{"idx": 86080, "node_name": "value", "Dec": "the value of the socket option ."}{"idx": 86082, "node_name": "s", "Dec": "the socket"}{"idx": 86083, "node_name": "name", "Dec": "the socket option"}{"idx": 86085, "node_name": "s", "Dec": "the socket"}{"idx": 86086, "node_name": "name", "Dec": "the socket option"}{"idx": 86087, "node_name": "value", "Dec": "the value of the socket option ."}{"idx": 86089, "node_name": "s", "Dec": "the socket"}{"idx": 86090, "node_name": "name", "Dec": "the socket option"}{"idx": 86092, "node_name": "sockettype", "Dec": "the type of java.net socket"}{"idx": 86095, "node_name": "fd", "Dec": "the file descriptor"}{"idx": 86096, "node_name": "closer", "Dec": "the object to close the channel"}{"idx": 86099, "node_name": "sc", "Dec": "the selectable channel"}{"idx": 86101, "node_name": "sc", "Dec": "the closed selectable channel"}{"idx": 86104, "node_name": "entry", "Dec": "the keystore.privatekeyentry of the signer ."}{"idx": 86106, "node_name": "privatekey", "Dec": "the private key of the signer ."}{"idx": 86107, "node_name": "certpath", "Dec": "the certification path of the signer ."}{"idx": 86109, "node_name": "algorithm", "Dec": "the standard name of the algorithm . see the messagedigest section in the java cryptography architecture standard algorithm name documentation for information about standard algorithm names ."}{"idx": 86111, "node_name": "algorithm", "Dec": "the standard name of the algorithm . see the messagedigest section in the java cryptography architecture standard algorithm name documentation for information about standard algorithm names ."}{"idx": 86112, "node_name": "provider", "Dec": "the provider ."}{"idx": 86114, "node_name": "algorithm", "Dec": "the standard name of the algorithm . see the signature section in the java cryptography architecture standard algorithm name documentation for information about standard algorithm names ."}{"idx": 86116, "node_name": "algorithm", "Dec": "the standard name of the algorithm . see the signature section in the java cryptography architecture standard algorithm name documentation for information about standard algorithm names ."}{"idx": 86117, "node_name": "provider", "Dec": "the provider ."}{"idx": 86119, "node_name": "uri", "Dec": "the uri ."}{"idx": 86121, "node_name": "name", "Dec": "the signer name ."}{"idx": 86123, "node_name": "handler", "Dec": "the event handler ."}{"idx": 86125, "node_name": "key", "Dec": "the name of the property ."}{"idx": 86126, "node_name": "value", "Dec": "the value of the property ."}{"idx": 86129, "node_name": "key", "Dec": "the private key ."}{"idx": 86133, "node_name": "file", "Dec": "the file to sign ."}{"idx": 86134, "node_name": "os", "Dec": "the output stream ."}{"idx": 86140, "node_name": "key", "Dec": "the name of the property ."}{"idx": 86143, "node_name": "message", "Dec": "the detail message ( which is saved for later retrieval by the throwable.getmessage() method ) ."}{"idx": 86144, "node_name": "cause", "Dec": "the cause ( which is saved for later retrieval by the throwable.getcause() method ) . ( a null value is permitted , and indicates that the cause is nonexistent or unknown . )"}{"idx": 86148, "node_name": "s", "Dec": "the detail message"}{"idx": 86150, "node_name": "t", "Dec": "throwable cause"}{"idx": 86154, "node_name": "methodname", "Dec": "the name of the javascript method to be invoked ."}{"idx": 86155, "node_name": "args", "Dec": "the java objects passed as arguments to call(java.lang.String,java.lang.Object...) ."}{"idx": 86157, "node_name": "s", "Dec": "the javascript expression ."}{"idx": 86159, "node_name": "name", "Dec": "the name of the javascript property to be accessed ."}{"idx": 86161, "node_name": "name", "Dec": "the name of the javascript property to be accessed ."}{"idx": 86162, "node_name": "value", "Dec": "the value of the propery ."}{"idx": 86164, "node_name": "name", "Dec": "the name of the javascript property to be removed ."}{"idx": 86166, "node_name": "index", "Dec": "the index of the array to be accessed ."}{"idx": 86168, "node_name": "index", "Dec": "the index of the array to be accessed ."}{"idx": 86169, "node_name": "value", "Dec": "the value to set"}{"idx": 86172, "node_name": "initaddr", "Dec": "the address of the context initiator . null value can be supplied to indicate that the application does not want to set this value ."}{"idx": 86173, "node_name": "acceptaddr", "Dec": "the address of the context acceptor . null value can be supplied to indicate that the application does not want to set this value ."}{"idx": 86174, "node_name": "appdata", "Dec": "application supplied data to be used as part of the channel bindings . null value can be supplied to indicate that the application does not want to set this value ."}{"idx": 86176, "node_name": "appdata", "Dec": "application supplied data to be used as part of the channel bindings ."}{"idx": 86181, "node_name": "obj", "Dec": "another channelbinding to compare this one with"}{"idx": 86187, "node_name": "inputbuf", "Dec": "token generated by the peer . this parameter is ignored on the first call since no token has been received from the peer ."}{"idx": 86188, "node_name": "offset", "Dec": "the offset within the inputbuf where the token begins ."}{"idx": 86189, "node_name": "len", "Dec": "the length of the token ."}{"idx": 86191, "node_name": "intoken", "Dec": "token generated by the peer ."}{"idx": 86192, "node_name": "offset", "Dec": "the offset within the intoken where the token begins ."}{"idx": 86193, "node_name": "len", "Dec": "the length of the token ."}{"idx": 86197, "node_name": "qop", "Dec": "the level of protection wrap will be asked to provide ."}{"idx": 86198, "node_name": "confreq", "Dec": "true if wrap will be asked to provide privacy , false otherwise ."}{"idx": 86199, "node_name": "maxtokensize", "Dec": "the desired maximum size of the token emitted by wrap ."}{"idx": 86201, "node_name": "inbuf", "Dec": "application data to be protected ."}{"idx": 86202, "node_name": "offset", "Dec": "the offset within the inbuf where the data begins ."}{"idx": 86203, "node_name": "len", "Dec": "the length of the data"}{"idx": 86204, "node_name": "msgprop", "Dec": "instance of messageprop that is used by the application to set the desired qop and privacy state . set the desired qop to 0 to request the default qop . upon return from wrap(byte[],int,int,org.ietf.jgss.MessageProp) , this object will contain the actual privacy state that was applied to the message by the underlying mechanism ."}{"idx": 86206, "node_name": "inbuf", "Dec": "a byte array containing the wrap token received from peer ."}{"idx": 86207, "node_name": "offset", "Dec": "the offset where the token begins ."}{"idx": 86208, "node_name": "len", "Dec": "the length of the token"}{"idx": 86209, "node_name": "msgprop", "Dec": "upon return from unwrap(byte[],int,int,org.ietf.jgss.MessageProp) , this object will contain the applied qop , the privacy state of the message , and supplementary information stating if the token was a duplicate , old , out of sequence or arriving after a gap ."}{"idx": 86211, "node_name": "inmsg", "Dec": "the message to generate the mic over ."}{"idx": 86212, "node_name": "offset", "Dec": "offset within the inmsg where the message begins ."}{"idx": 86213, "node_name": "len", "Dec": "the length of the message"}{"idx": 86214, "node_name": "msgprop", "Dec": "an instance of messageprop that is used by the application to set the desired qop . set the desired qop to 0 in msgprop to request the default qop . alternatively pass in null for msgprop to request the default qop ."}{"idx": 86216, "node_name": "intoken", "Dec": "the token generated by peer's getmic method ."}{"idx": 86217, "node_name": "tokoffset", "Dec": "the offset within the intoken where the token begins ."}{"idx": 86218, "node_name": "toklen", "Dec": "the length of the token ."}{"idx": 86219, "node_name": "inmsg", "Dec": "the application message to verify the cryptographic mic over ."}{"idx": 86220, "node_name": "msgoffset", "Dec": "the offset in inmsg where the message begins ."}{"idx": 86221, "node_name": "msglen", "Dec": "the length of the message ."}{"idx": 86222, "node_name": "msgprop", "Dec": "upon return from verifyMIC(byte[],int,int,byte[],int,int,org.ietf.jgss.MessageProp) , this object will contain the applied qop and supplementary information stating if the token was a duplicate , old , out of sequence or arriving after a gap ."}{"idx": 86225, "node_name": "state", "Dec": "a boolean value indicating whether mutual authentication should be used or not ."}{"idx": 86227, "node_name": "state", "Dec": "a boolean value indicating whether replay detection should be enabled over the established context or not ."}{"idx": 86229, "node_name": "state", "Dec": "a boolean value indicating whether sequence checking should be enabled over the established context or not ."}{"idx": 86231, "node_name": "state", "Dec": "a boolean value indicating whether the credentials should be delegated or not ."}{"idx": 86233, "node_name": "state", "Dec": "a boolean value indicating if the initiator should be authenticated to the acceptor as an anonymous principal ."}{"idx": 86235, "node_name": "state", "Dec": "a boolean value indicating whether confidentiality should be enabled or not ."}{"idx": 86237, "node_name": "state", "Dec": "a boolean value indicating whether integrity should be enabled or not ."}{"idx": 86239, "node_name": "lifetime", "Dec": "the desired context lifetime in seconds . use indefinite_lifetime to request an indefinite lifetime and default_lifetime to request a default lifetime ."}{"idx": 86241, "node_name": "cb", "Dec": "the channel bindings to use ."}{"idx": 86266, "node_name": "mech", "Dec": "the oid of the mechanism for which the mechanism name should be returned ."}{"idx": 86269, "node_name": "mech", "Dec": "the oid of the mechanism whose initiator credential element should be queried ."}{"idx": 86271, "node_name": "mech", "Dec": "the oid of the mechanism whose acceptor credential element should be queried ."}{"idx": 86274, "node_name": "mech", "Dec": "the oid of the mechanism whose credentials usage mode is to be determined ."}{"idx": 86277, "node_name": "name", "Dec": "the name of the principal for whom this credential is to be acquired . use null to specify the default principal ."}{"idx": 86278, "node_name": "initlifetime", "Dec": "the number of seconds that the credential element should remain valid for initiating of security contexts . use gsscredential.indefinite_lifetime to request that the credentials have the maximum permitted lifetime for this . use gsscredential.default_lifetime to request default credential lifetime for this ."}{"idx": 86279, "node_name": "acceptlifetime", "Dec": "the number of seconds that the credential element should remain valid for accepting security contexts . use gsscredential.indefinite_lifetime to request that the credentials have the maximum permitted lifetime for this . use gsscredential.default_lifetime to request default credential lifetime for this ."}{"idx": 86280, "node_name": "mech", "Dec": "the mechanism over which the credential is to be acquired ."}{"idx": 86281, "node_name": "usage", "Dec": "the usage mode that this credential element should add to the credential . the value of this parameter must be one of : initiate_and_accept , accept_only , and initiate_only ."}{"idx": 86283, "node_name": "another", "Dec": "another gsscredential for comparison to this one"}{"idx": 86309, "node_name": "majorcode", "Dec": "the the gss error code for the problem causing this exception to be thrown ."}{"idx": 86311, "node_name": "majorcode", "Dec": "the gss error code for the problem causing this exception to be thrown ."}{"idx": 86312, "node_name": "minorcode", "Dec": "the mechanism level error code for the problem causing this exception to be thrown ."}{"idx": 86313, "node_name": "minorstring", "Dec": "the textual explanation of the mechanism error code ."}{"idx": 86319, "node_name": "minorcode", "Dec": "the mechanism specific error code"}{"idx": 86320, "node_name": "message", "Dec": "textual explanation of the mechanism error code"}{"idx": 86328, "node_name": "mech", "Dec": "the oid of the mechanism to query"}{"idx": 86330, "node_name": "nametype", "Dec": "the oid of the name type to look for"}{"idx": 86332, "node_name": "namestr", "Dec": "the string representing a printable form of the name to create ."}{"idx": 86333, "node_name": "nametype", "Dec": "the oid specifying the namespace of the printable name supplied . null can be used to specify that a mechanism specific default printable syntax should be assumed by each mechanism that examines namestr . it is not advisable to use the nametype nt_export_name with createName(java.lang.String,org.ietf.jgss.Oid) ."}{"idx": 86335, "node_name": "name", "Dec": "the byte array containing the name to create"}{"idx": 86336, "node_name": "nametype", "Dec": "the oid specifying the namespace of the name supplied in the byte array . null can be used to specify that a mechanism specific default syntax should be assumed by each mechanism that examines the byte array ."}{"idx": 86338, "node_name": "namestr", "Dec": "the string representing a printable form of the name to create ."}{"idx": 86339, "node_name": "nametype", "Dec": "the oid specifying the namespace of the printable name supplied . null can be used to specify that a mechanism specific default printable syntax should be assumed by each mechanism that examines namestr . it is not advisable to use the nametype nt_export_name with createName(java.lang.String,org.ietf.jgss.Oid,org.ietf.jgss.Oid) ."}{"idx": 86340, "node_name": "mech", "Dec": "oid specifying the mechanism for which the name should be canonicalized"}{"idx": 86342, "node_name": "name", "Dec": "the byte array containing the name to create"}{"idx": 86343, "node_name": "nametype", "Dec": "the oid specifying the namespace of the name supplied in the byte array . null can be used to specify that a mechanism specific default syntax should be assumed by each mechanism that examines the byte array ."}{"idx": 86344, "node_name": "mech", "Dec": "oid specifying the mechanism for which the name should be canonicalized"}{"idx": 86346, "node_name": "usage", "Dec": "the intended usage for this credential object . the value of this parameter must be one of : gsscredential.initiate_and_accept , gsscredential.accept_only , and gsscredential.initiate_only ."}{"idx": 86348, "node_name": "name", "Dec": "the name of the principal for whom this credential is to be acquired . use null to specify the default principal ."}{"idx": 86349, "node_name": "lifetime", "Dec": "the number of seconds that credentials should remain valid . use gsscredential.indefinite_lifetime to request that the credentials have the maximum permitted lifetime . use gsscredential.default_lifetime to request default credential lifetime ."}{"idx": 86350, "node_name": "mech", "Dec": "the oid of the desired mechanism . use ( oid ) null to request the default mechanism ."}{"idx": 86351, "node_name": "usage", "Dec": "the intended usage for this credential object . the value of this parameter must be one of : gsscredential.initiate_and_accept , gsscredential.accept_only , and gsscredential.initiate_only ."}{"idx": 86353, "node_name": "name", "Dec": "the name of the principal for whom this credential is to be acquired . use null to specify the default principal ."}{"idx": 86354, "node_name": "lifetime", "Dec": "the number of seconds that credentials should remain valid . use gsscredential.indefinite_lifetime to request that the credentials have the maximum permitted lifetime . use gsscredential.default_lifetime to request default credential lifetime ."}{"idx": 86355, "node_name": "mechs", "Dec": "an array of oid's indicating the mechanisms over which the credential is to be acquired . use ( oid [ ]) null for requesting a system specific default set of mechanisms ."}{"idx": 86356, "node_name": "usage", "Dec": "the intended usage for this credential object . the value of this parameter must be one of : gsscredential.initiate_and_accept , gsscredential.accept_only , and gsscredential.initiate_only ."}{"idx": 86358, "node_name": "peer", "Dec": "the name of the target peer ."}{"idx": 86359, "node_name": "mech", "Dec": "the oid of the desired mechanism . use null to request the default mechanism ."}{"idx": 86360, "node_name": "mycred", "Dec": "the credentials of the initiator . use null to act as the default initiator principal ."}{"idx": 86361, "node_name": "lifetime", "Dec": "the lifetime , in seconds , requested for the context . use gsscontext.indefinite_lifetime to request that the context have the maximum permitted lifetime . use gsscontext.default_lifetime to request a default lifetime for the context ."}{"idx": 86363, "node_name": "mycred", "Dec": "the credentials for the acceptor . use null to act as a default acceptor principal ."}{"idx": 86365, "node_name": "interprocesstoken", "Dec": "the token previously emitted from the export method ."}{"idx": 86367, "node_name": "p", "Dec": "the provider instance that should be used whenever support is needed for mech ."}{"idx": 86368, "node_name": "mech", "Dec": "the mechanism for which the provider is being set"}{"idx": 86370, "node_name": "p", "Dec": "the provider instance that should be used whenever support is needed for mech ."}{"idx": 86371, "node_name": "mech", "Dec": "the mechanism for which the provider is being set"}{"idx": 86380, "node_name": "another", "Dec": "the gssname to compare this name with"}{"idx": 86382, "node_name": "another", "Dec": "the object to compare this name to"}{"idx": 86385, "node_name": "mech", "Dec": "the oid for the mechanism for which the canonical form of the name is requested ."}{"idx": 86393, "node_name": "privstate", "Dec": "the privacy ( i.e. confidentiality ) state"}{"idx": 86395, "node_name": "qop", "Dec": "the qop value"}{"idx": 86396, "node_name": "privstate", "Dec": "the privacy ( i.e. confidentiality ) state"}{"idx": 86400, "node_name": "qop", "Dec": "the int value to set the qop to"}{"idx": 86402, "node_name": "privstate", "Dec": "true is the privacy ( i.e. , confidentiality ) state is true , false otherwise ."}{"idx": 86410, "node_name": "duplicate", "Dec": "true if the token was a duplicate of an earlier token , false otherwise"}{"idx": 86411, "node_name": "old", "Dec": "true if the token's validity period has expired , false otherwise"}{"idx": 86412, "node_name": "unseq", "Dec": "true if a later token has already been processed , false otherwise"}{"idx": 86413, "node_name": "gap", "Dec": "true if one or more predecessor tokens have not yet been successfully processed , false otherwise"}{"idx": 86414, "node_name": "minorstatus", "Dec": "the int minor status code for the per-message operation"}{"idx": 86415, "node_name": "minorstring", "Dec": "the textual representation of the minorstatus value"}{"idx": 86418, "node_name": "stroid", "Dec": "the dot separated string representation of the oid . for instance , \" 1.2.840.113554.1.2.2 \" ."}{"idx": 86420, "node_name": "deroid", "Dec": "stream containing the der encoded oid"}{"idx": 86422, "node_name": "data", "Dec": "byte array containing the der encoded oid"}{"idx": 86425, "node_name": "other", "Dec": "the oid object that has to be compared to this one"}{"idx": 86428, "node_name": "oids", "Dec": "the array of oid's to search"}{"idx": 86442, "node_name": "features", "Dec": "a string that specifies which features are required . this is a space separated list in which each feature is specified by its name optionally followed by a space and a version number . this is something like : \" xml 1.0 traversal +events 2.0 \""}{"idx": 86444, "node_name": "features", "Dec": "a string that specifies which features are required . this is a space separated list in which each feature is specified by its name optionally followed by a space and a version number . this is something like : \" xml 1.0 traversal +events 2.0 \""}{"idx": 86446, "node_name": "s", "Dec": "the source to be registered , may not be null"}{"idx": 86453, "node_name": "offset", "Dec": "start offset of substring to extract ."}{"idx": 86454, "node_name": "count", "Dec": "the number of 16-bit units to extract ."}{"idx": 86456, "node_name": "arg", "Dec": "the domstring to append ."}{"idx": 86458, "node_name": "offset", "Dec": "the character offset at which to insert ."}{"idx": 86459, "node_name": "arg", "Dec": "the domstring to insert ."}{"idx": 86461, "node_name": "offset", "Dec": "the offset from which to start removing ."}{"idx": 86462, "node_name": "count", "Dec": "the number of 16-bit units to delete . if the sum of offset and count exceeds length then all 16-bit units from offset to the end of the data are deleted ."}{"idx": 86464, "node_name": "offset", "Dec": "the offset from which to start replacing ."}{"idx": 86465, "node_name": "count", "Dec": "the number of 16-bit units to replace . if the sum of offset and count exceeds length , then all 16-bit units to the end of the data are replaced ; ( i.e. , the effect is the same as a remove method call with the same range , followed by an append method invocation ) ."}{"idx": 86466, "node_name": "arg", "Dec": "the domstring with which the range must be replaced ."}{"idx": 86730, "node_name": "rule", "Dec": "the parsable text representing the rule . for rule sets this contains both the selector and the style declaration . for at-rules , this specifies both the at-identifier and the rule content ."}{"idx": 86731, "node_name": "index", "Dec": "the index within the media block's rule collection of the rule before which to insert the specified rule . if the specified index is equal to the length of the media blocks's rule collection , the rule will be added to the end of the media block ."}{"idx": 86733, "node_name": "index", "Dec": "the index within the media block's rule collection of the rule to remove ."}{"idx": 86767, "node_name": "unittype", "Dec": "a unit code as defined above . the unit code can only be a float unit type ( i.e. css_number , css_percentage , css_ems , css_exs , css_px , css_cm , css_mm , css_in , css_pt , css_pc , css_deg , css_rad , css_grad , css_ms , css_s , css_hz , css_khz , css_dimension ) ."}{"idx": 86768, "node_name": "floatvalue", "Dec": "the new float value ."}{"idx": 86770, "node_name": "unittype", "Dec": "a unit code to get the float value . the unit code can only be a float unit type ( i.e. css_number , css_percentage , css_ems , css_exs , css_px , css_cm , css_mm , css_in , css_pt , css_pc , css_deg , css_rad , css_grad , css_ms , css_s , css_hz , css_khz , css_dimension ) ."}{"idx": 86772, "node_name": "stringtype", "Dec": "a string code as defined above . the string code can only be a string unit type ( i.e. css_string , css_uri , css_ident , and css_attr ) ."}{"idx": 86773, "node_name": "stringvalue", "Dec": "the new string value ."}{"idx": 86794, "node_name": "index", "Dec": "index into the collection"}{"idx": 86799, "node_name": "propertyname", "Dec": "the name of the css property . see the css property index ."}{"idx": 86801, "node_name": "propertyname", "Dec": "the name of the css property . see the css property index ."}{"idx": 86803, "node_name": "propertyname", "Dec": "the name of the css property . see the css property index ."}{"idx": 86805, "node_name": "propertyname", "Dec": "the name of the css property . see the css property index ."}{"idx": 86807, "node_name": "propertyname", "Dec": "the name of the css property . see the css property index ."}{"idx": 86808, "node_name": "value", "Dec": "the new value of the property ."}{"idx": 86809, "node_name": "priority", "Dec": "the new priority of the property ( e.g. \" important \") or the empty string if none ."}{"idx": 86812, "node_name": "index", "Dec": "index of the property name to retrieve ."}{"idx": 86822, "node_name": "rule", "Dec": "the parsable text representing the rule . for rule sets this contains both the selector and the style declaration . for at-rules , this specifies both the at-identifier and the rule content ."}{"idx": 86823, "node_name": "index", "Dec": "the index within the style sheet's rule list of the rule before which to insert the specified rule . if the specified index is equal to the length of the style sheet's rule collection , the rule will be added to the end of the style sheet ."}{"idx": 86825, "node_name": "index", "Dec": "the index within the style sheet's rule list of the rule to remove ."}{"idx": 86838, "node_name": "index", "Dec": "index into the collection ."}{"idx": 86841, "node_name": "elt", "Dec": "the element whose style is to be modified . this parameter cannot be null ."}{"idx": 86842, "node_name": "pseudoelt", "Dec": "the pseudo-element or null if none ."}{"idx": 86845, "node_name": "title", "Dec": "the advisory title . see also the section ."}{"idx": 86846, "node_name": "media", "Dec": "the comma-separated list of media associated with the new style sheet . see also the section ."}{"idx": 86860, "node_name": "elt", "Dec": "the element whose style is to be computed . this parameter cannot be null ."}{"idx": 86861, "node_name": "pseudoelt", "Dec": "the pseudo-element or null if none ."}{"idx": 86867, "node_name": "tagname", "Dec": "the name of the element type to instantiate . for xml , this is case-sensitive , otherwise it depends on the case-sensitivity of the markup language in use . in that case , the name is mapped to the canonical form of that markup by the dom implementation ."}{"idx": 86870, "node_name": "data", "Dec": "the data for the node ."}{"idx": 86872, "node_name": "data", "Dec": "the data for the node ."}{"idx": 86874, "node_name": "data", "Dec": "the data for the cdatasection contents ."}{"idx": 86876, "node_name": "target", "Dec": "the target part of the processing instruction.unlike document.createelementns or document.createattributens , no namespace well-formed checking is done on the target name . applications should invoke document.normalizedocument() with the parameter \" namespaces \" set to true in order to ensure that the target name is namespace well-formed ."}{"idx": 86877, "node_name": "data", "Dec": "the data for the node ."}{"idx": 86879, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 86881, "node_name": "name", "Dec": "the name of the entity to reference.unlike document.createelementns or document.createattributens , no namespace well-formed checking is done on the entity name . applications should invoke document.normalizedocument() with the parameter \" namespaces \" set to true in order to ensure that the entity name is namespace well-formed ."}{"idx": 86883, "node_name": "tagname", "Dec": "the name of the tag to match on . the special value \" * \" matches all tags . for xml , the tagname parameter is case-sensitive , otherwise it depends on the case-sensitivity of the markup language in use ."}{"idx": 86886, "node_name": "namespaceuri", "Dec": "the namespace uri of the element to create ."}{"idx": 86887, "node_name": "qualifiedname", "Dec": "the qualified name of the element type to instantiate ."}{"idx": 86889, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to create ."}{"idx": 86890, "node_name": "qualifiedname", "Dec": "the qualified name of the attribute to instantiate ."}{"idx": 86892, "node_name": "namespaceuri", "Dec": "the namespace uri of the elements to match on . the special value \" * \" matches all namespaces ."}{"idx": 86893, "node_name": "localname", "Dec": "the local name of the elements to match on . the special value \" * \" matches all local names ."}{"idx": 86895, "node_name": "elementid", "Dec": "the unique id value for an element ."}{"idx": 86910, "node_name": "n", "Dec": "the node to rename ."}{"idx": 86911, "node_name": "namespaceuri", "Dec": "the new namespace uri ."}{"idx": 86912, "node_name": "qualifiedname", "Dec": "the new qualified name ."}{"idx": 86923, "node_name": "name", "Dec": "the name of the parameter to set ."}{"idx": 86924, "node_name": "value", "Dec": "the new value or null if the user wishes to unset the parameter . while the type of the value parameter is defined as domuserdata , the object type must match the type defined by the definition of the parameter . for example , if the parameter is \" error-handler \" , the value must be of type domerrorhandler ."}{"idx": 86926, "node_name": "name", "Dec": "the name of the parameter ."}{"idx": 86928, "node_name": "name", "Dec": "the name of the parameter to check ."}{"idx": 86929, "node_name": "value", "Dec": "an object . if null , the returned value is true ."}{"idx": 86943, "node_name": "error", "Dec": "the error object that describes the error . this object may be reused by the dom implementation across multiple calls to the handleerror method ."}{"idx": 86966, "node_name": "feature", "Dec": "the name of the feature to test ."}{"idx": 86967, "node_name": "version", "Dec": "this is the version number of the feature to test ."}{"idx": 86969, "node_name": "qualifiedname", "Dec": "the qualified name of the document type to be created ."}{"idx": 86970, "node_name": "publicid", "Dec": "the external subset public identifier ."}{"idx": 86971, "node_name": "systemid", "Dec": "the external subset system identifier ."}{"idx": 86973, "node_name": "namespaceuri", "Dec": "the namespace uri of the document element to create or null ."}{"idx": 86974, "node_name": "qualifiedname", "Dec": "the qualified name of the document element to be created or null ."}{"idx": 86975, "node_name": "doctype", "Dec": "the type of document to be created or null . when doctype is not null , its node.ownerdocument attribute is set to the document being created ."}{"idx": 86977, "node_name": "feature", "Dec": "the name of the feature requested . note that any plus sign \" + \" prepended to the name of the feature will be ignored since it is not significant in the context of getFeature(java.lang.String,java.lang.String) ."}{"idx": 86978, "node_name": "version", "Dec": "this is the version number of the feature to test ."}{"idx": 86981, "node_name": "index", "Dec": "index into the collection ."}{"idx": 86985, "node_name": "features", "Dec": "a string that specifies which features and versions are required . this is a space separated list in which each feature is specified by its name optionally followed by a space and a version number . getDOMImplementation(java.lang.String) returns the first item of the list returned by getdomimplementationlist . as an example , the string \" xml 3.0 traversal +events 2.0 \" will request a dom implementation that supports the module \" xml \" for its 3.0 version , a module that support of the \" traversal \" module for any version , and the module \" events \" for its 2.0 version . the module \" events \" must be accessible using getDOMImplementation(java.lang.String) node.getfeature() and domimplementation.getfeature() ."}{"idx": 86987, "node_name": "features", "Dec": "a string that specifies which features and versions are required . this is a space separated list in which each feature is specified by its name optionally followed by a space and a version number . this is something like : \" xml 3.0 traversal +events 2.0 \""}{"idx": 86997, "node_name": "index", "Dec": "index into the collection ."}{"idx": 87000, "node_name": "str", "Dec": "the string to look for ."}{"idx": 87004, "node_name": "name", "Dec": "the name of the attribute to retrieve ."}{"idx": 87006, "node_name": "name", "Dec": "the name of the attribute to create or alter ."}{"idx": 87007, "node_name": "value", "Dec": "value to set in string form ."}{"idx": 87009, "node_name": "name", "Dec": "the name of the attribute to remove ."}{"idx": 87011, "node_name": "name", "Dec": "the name ( nodename ) of the attribute to retrieve ."}{"idx": 87013, "node_name": "newattr", "Dec": "the attr node to add to the attribute list ."}{"idx": 87015, "node_name": "oldattr", "Dec": "the attr node to remove from the attribute list ."}{"idx": 87017, "node_name": "name", "Dec": "the name of the tag to match on . the special value \" * \" matches all tags ."}{"idx": 87019, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to retrieve ."}{"idx": 87020, "node_name": "localname", "Dec": "the local name of the attribute to retrieve ."}{"idx": 87022, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to create or alter ."}{"idx": 87023, "node_name": "qualifiedname", "Dec": "the qualified name of the attribute to create or alter ."}{"idx": 87024, "node_name": "value", "Dec": "the value to set in string form ."}{"idx": 87026, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to remove ."}{"idx": 87027, "node_name": "localname", "Dec": "the local name of the attribute to remove ."}{"idx": 87029, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to retrieve ."}{"idx": 87030, "node_name": "localname", "Dec": "the local name of the attribute to retrieve ."}{"idx": 87032, "node_name": "newattr", "Dec": "the attr node to add to the attribute list ."}{"idx": 87034, "node_name": "namespaceuri", "Dec": "the namespace uri of the elements to match on . the special value \" * \" matches all namespaces ."}{"idx": 87035, "node_name": "localname", "Dec": "the local name of the elements to match on . the special value \" * \" matches all local names ."}{"idx": 87037, "node_name": "name", "Dec": "the name of the attribute to look for ."}{"idx": 87039, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute to look for ."}{"idx": 87040, "node_name": "localname", "Dec": "the local name of the attribute to look for ."}{"idx": 87043, "node_name": "name", "Dec": "the name of the attribute ."}{"idx": 87044, "node_name": "isid", "Dec": "whether the attribute is a of type id ."}{"idx": 87046, "node_name": "namespaceuri", "Dec": "the namespace uri of the attribute ."}{"idx": 87047, "node_name": "localname", "Dec": "the local name of the attribute ."}{"idx": 87048, "node_name": "isid", "Dec": "whether the attribute is a of type id ."}{"idx": 87050, "node_name": "idattr", "Dec": "the attribute node ."}{"idx": 87051, "node_name": "isid", "Dec": "whether the attribute is a of type id ."}{"idx": 87068, "node_name": "eventtype", "Dec": "the eventtype parameter specifies the type of event interface to be created . if the event interface specified is supported by the implementation createEvent(java.lang.String) will return a new event of the interface type requested . if the event is to be dispatched via the dispatchevent method the appropriate event init method must be called after creation in order to initialize the event's values . as an example , a user wishing to synthesize some kind of uievent would call createevent with the parameter \" uievents \" . the inituievent method could then be called on the newly created uievent to set the specific type of uievent to be dispatched and set its context information.the createevent method is used in creating events when it is either inconvenient or unnecessary for the user to create an event themselves . in cases where the implementation provided event is insufficient , users may supply their own event implementations for use with the dispatchevent method ."}{"idx": 87083, "node_name": "eventtypearg", "Dec": "specifies the event type . this type may be any event type currently defined in this specification or a new event type .. the string must be an xml name . any new event type must not begin with any upper , lower , or mixed case version of the string \" dom \" . this prefix is reserved for future dom event sets . it is also strongly recommended that third parties adding their own events use their own prefix to avoid confusion and lessen the probability of conflicts with other new events ."}{"idx": 87084, "node_name": "canbubblearg", "Dec": "specifies whether or not the event can bubble ."}{"idx": 87085, "node_name": "cancelablearg", "Dec": "specifies whether or not the event's default action can be prevented ."}{"idx": 87092, "node_name": "evt", "Dec": "the event contains contextual information about the event . it also contains the stoppropagation and preventdefault methods which are used in determining the event's flow and default action ."}{"idx": 87095, "node_name": "type", "Dec": "the event type for which the user is registering"}{"idx": 87096, "node_name": "listener", "Dec": "the listener parameter takes an interface implemented by the user which contains addEventListener(java.lang.String,org.w3c.dom.events.EventListener,boolean)s to be called when the event occurs ."}{"idx": 87097, "node_name": "usecapture", "Dec": "if true , usecapture indicates that the user wishes to initiate capture . after initiating capture , all events of the specified type will be dispatched to the registered eventlistener before being dispatched to any eventtargets beneath them in the tree . events which are bubbling upward through the tree will not trigger an eventlistener designated to use capture ."}{"idx": 87099, "node_name": "type", "Dec": "specifies the event type of the eventlistener being removed ."}{"idx": 87100, "node_name": "listener", "Dec": "the eventlistener parameter indicates the eventlistener to be removed ."}{"idx": 87101, "node_name": "usecapture", "Dec": "specifies whether the eventlistener being removed was registered as a capturing listener or not . if a listener was registered twice , one with capture and one without , each must be removed separately . removal of a capturing listener does not affect a non-capturing version of the same listener , and vice versa ."}{"idx": 87103, "node_name": "evt", "Dec": "specifies the event type , behavior , and contextual information to be used in processing the event ."}{"idx": 87116, "node_name": "typearg", "Dec": "specifies the event type ."}{"idx": 87117, "node_name": "canbubblearg", "Dec": "specifies whether or not the event can bubble ."}{"idx": 87118, "node_name": "cancelablearg", "Dec": "specifies whether or not the event's default action can be prevented ."}{"idx": 87119, "node_name": "viewarg", "Dec": "specifies the event's abstractview ."}{"idx": 87120, "node_name": "detailarg", "Dec": "specifies the event's mouse click count ."}{"idx": 87121, "node_name": "screenxarg", "Dec": "specifies the event's screen x coordinate"}{"idx": 87122, "node_name": "screenyarg", "Dec": "specifies the event's screen y coordinate"}{"idx": 87123, "node_name": "clientxarg", "Dec": "specifies the event's client x coordinate"}{"idx": 87124, "node_name": "clientyarg", "Dec": "specifies the event's client y coordinate"}{"idx": 87125, "node_name": "ctrlkeyarg", "Dec": "specifies whether or not control key was depressed during the event ."}{"idx": 87126, "node_name": "altkeyarg", "Dec": "specifies whether or not alt key was depressed during the event ."}{"idx": 87127, "node_name": "shiftkeyarg", "Dec": "specifies whether or not shift key was depressed during the event ."}{"idx": 87128, "node_name": "metakeyarg", "Dec": "specifies whether or not meta key was depressed during the event ."}{"idx": 87129, "node_name": "buttonarg", "Dec": "specifies the event's mouse button ."}{"idx": 87130, "node_name": "relatedtargetarg", "Dec": "specifies the event's related eventtarget ."}{"idx": 87141, "node_name": "typearg", "Dec": "specifies the event type ."}{"idx": 87142, "node_name": "canbubblearg", "Dec": "specifies whether or not the event can bubble ."}{"idx": 87143, "node_name": "cancelablearg", "Dec": "specifies whether or not the event's default action can be prevented ."}{"idx": 87144, "node_name": "relatednodearg", "Dec": "specifies the event's related node ."}{"idx": 87145, "node_name": "prevvaluearg", "Dec": "specifies the event's prevvalue attribute . this value may be null ."}{"idx": 87146, "node_name": "newvaluearg", "Dec": "specifies the event's newvalue attribute . this value may be null ."}{"idx": 87147, "node_name": "attrnamearg", "Dec": "specifies the event's attrname attribute . this value may be null ."}{"idx": 87148, "node_name": "attrchangearg", "Dec": "specifies the event's attrchange attribute"}{"idx": 87153, "node_name": "typearg", "Dec": "specifies the event type ."}{"idx": 87154, "node_name": "canbubblearg", "Dec": "specifies whether or not the event can bubble ."}{"idx": 87155, "node_name": "cancelablearg", "Dec": "specifies whether or not the event's default action can be prevented ."}{"idx": 87156, "node_name": "viewarg", "Dec": "specifies the event's abstractview ."}{"idx": 87157, "node_name": "detailarg", "Dec": "specifies the event's detail ."}{"idx": 87269, "node_name": "index", "Dec": "the index of the node to be fetched . the index origin is 0 ."}{"idx": 87271, "node_name": "name", "Dec": "the name of the node to be fetched ."}{"idx": 87299, "node_name": "text", "Dec": "the string to be parsed into some structure in the document structure model ."}{"idx": 87301, "node_name": "text", "Dec": "the string to be parsed into some structure in the document structure model ."}{"idx": 87303, "node_name": "elementname", "Dec": "the name attribute value for an element ."}{"idx": 87306, "node_name": "title", "Dec": "the title of the document to be set as the content of the title element , through a child text node ."}{"idx": 87650, "node_name": "element", "Dec": "the element to add ."}{"idx": 87651, "node_name": "before", "Dec": "the element to insert before , or null for the tail of the list ."}{"idx": 87653, "node_name": "index", "Dec": "the index of the item to remove , starting from 0 ."}{"idx": 87743, "node_name": "index", "Dec": "the row number where to insert a new row . this index starts from 0 and is relative to all the rows contained inside the table , regardless of section parentage ."}{"idx": 87745, "node_name": "index", "Dec": "the index of the row to be deleted . this index starts from 0 and is relative to all the rows contained inside the table , regardless of section parentage ."}{"idx": 87761, "node_name": "index", "Dec": "the place to insert the cell , starting from 0 ."}{"idx": 87763, "node_name": "index", "Dec": "the index of the cell to delete , starting from 0 ."}{"idx": 87775, "node_name": "index", "Dec": "the row number where to insert a new row . this index starts from 0 and is relative only to the rows contained inside this section , not all the rows in the table ."}{"idx": 87777, "node_name": "index", "Dec": "the index of the row to be deleted . this index starts from 0 and is relative only to the rows contained inside this section , not all the rows in the table ."}{"idx": 87814, "node_name": "mode", "Dec": "the mode argument is either mode_synchronous or mode_asynchronous , if mode is mode_synchronous then the lsparser that is created will operate in synchronous mode , if it's mode_asynchronous then the lsparser that is created will operate in asynchronous mode ."}{"idx": 87815, "node_name": "schematype", "Dec": "an absolute uri representing the type of the schema language used during the load of a document using the newly created lsparser . note that no lexical checking is done on the absolute uri . in order to create a lsparser for any kind of schema types ( i.e. the lsparser will be free to use any schema found ) , use the value null . note : for w3c xml schema [ xml schema part 1 ] , applications must use the value \" http://www.w3.org/2001/xmlschema \" . for xml dtd [ xml 1.0 ] , applications must use the value \" http://www.w3.org/tr/rec-xml \" . other schema languages are outside the scope of the w3c and therefore should recommend an absolute uri in order to use createLSParser(short,java.lang.String) ."}{"idx": 87865, "node_name": "input", "Dec": "the lsinput from which the source of the document is to be read ."}{"idx": 87867, "node_name": "uri", "Dec": "the location of the xml document to be read ."}{"idx": 87869, "node_name": "input", "Dec": "the lsinput from which the source document is to be read . the source document must be an xml fragment , i.e. anything except a complete xml document ( except in the case where the context node of type document_node , and the action is action_replace_children ) , a doctype ( internal subset ) , entity declaration ( s ) , notation declaration ( s ) , or xml or text declaration ( s ) ."}{"idx": 87870, "node_name": "contextarg", "Dec": "the node that is used as the context for the data that is being parsed . this node must be a document node , a documentfragment node , or a node of a type that is allowed as a child of an element node , e.g. it cannot be an attribute node ."}{"idx": 87871, "node_name": "action", "Dec": "this parameter describes which action should be taken between the new set of nodes being inserted and the existing children of the context node . the set of possible actions is defined in action_types above ."}{"idx": 87879, "node_name": "elementarg", "Dec": "the newly encountered element . at the time startElement(org.w3c.dom.Element) is called , the element is incomplete"}{"idx": 87881, "node_name": "nodearg", "Dec": "the newly constructed element . at the time acceptNode(org.w3c.dom.Node) is called , the element is complete"}{"idx": 87889, "node_name": "type", "Dec": "the type of the resource being resolved . for xml [ xml 1.0 ] resources ( i.e. entities ) , applications must use the value \" http://www.w3.org/tr/rec-xml \" . for xml schema [ xml schema part 1 ] , applications must use the value \" http://www.w3.org/2001/xmlschema \" . other types of resources are outside the scope of this specification and therefore should recommend an absolute uri in order to use resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) ."}{"idx": 87890, "node_name": "namespaceuri", "Dec": "the namespace of the resource being resolved , e.g. the target namespace of the xml schema [ xml schema part 1 ] when resolving xml schema resources ."}{"idx": 87891, "node_name": "publicid", "Dec": "the public identifier of the external entity being referenced , or null if no public identifier was supplied or if the resource is not an entity ."}{"idx": 87892, "node_name": "systemid", "Dec": "the system identifier , a uri reference [ ietf rfc 2396 ] , of the external resource being referenced , or null if no system identifier was supplied ."}{"idx": 87893, "node_name": "baseuri", "Dec": "the absolute base uri of the resource being parsed , or null if there is no base uri ."}{"idx": 87901, "node_name": "nodearg", "Dec": "the node to serialize ."}{"idx": 87902, "node_name": "destination", "Dec": "the destination for the serialized dom ."}{"idx": 87904, "node_name": "nodearg", "Dec": "the node to serialize ."}{"idx": 87905, "node_name": "uri", "Dec": "the uri to write to ."}{"idx": 87907, "node_name": "nodearg", "Dec": "the node to serialize ."}{"idx": 87912, "node_name": "name", "Dec": "the nodename of a node to retrieve ."}{"idx": 87914, "node_name": "arg", "Dec": "a node to store in this map . the node will later be accessible using the value of its nodename attribute ."}{"idx": 87916, "node_name": "name", "Dec": "the nodename of the node to remove ."}{"idx": 87918, "node_name": "index", "Dec": "index into this map ."}{"idx": 87921, "node_name": "namespaceuri", "Dec": "the namespace uri of the node to retrieve ."}{"idx": 87922, "node_name": "localname", "Dec": "the local name of the node to retrieve ."}{"idx": 87924, "node_name": "arg", "Dec": "a node to store in this map . the node will later be accessible using the value of its namespaceuri and localname attributes ."}{"idx": 87926, "node_name": "namespaceuri", "Dec": "the namespace uri of the node to remove ."}{"idx": 87927, "node_name": "localname", "Dec": "the local name of the node to remove ."}{"idx": 87930, "node_name": "index", "Dec": "index into the collection ."}{"idx": 87932, "node_name": "index", "Dec": "index into the collection ."}{"idx": 87935, "node_name": "str", "Dec": "the name to look for ."}{"idx": 87937, "node_name": "namespaceuri", "Dec": "the namespace uri to look for ."}{"idx": 87938, "node_name": "name", "Dec": "the name to look for ."}{"idx": 87971, "node_name": "newchild", "Dec": "the node to insert ."}{"idx": 87972, "node_name": "refchild", "Dec": "the reference node , i.e. , the node before which the new node must be inserted ."}{"idx": 87974, "node_name": "newchild", "Dec": "the new node to put in the child list ."}{"idx": 87975, "node_name": "oldchild", "Dec": "the node being replaced in the list ."}{"idx": 87977, "node_name": "oldchild", "Dec": "the node being removed ."}{"idx": 87979, "node_name": "newchild", "Dec": "the node to add.if it is a documentfragment object , the entire contents of the document fragment are moved into the child list of this node"}{"idx": 87982, "node_name": "deep", "Dec": "if true , recursively clone the subtree under the specified node ; if false , clone only the node itself ( and its attributes , if it is an element ) ."}{"idx": 87985, "node_name": "feature", "Dec": "the name of the feature to test ."}{"idx": 87986, "node_name": "version", "Dec": "this is the version number of the feature to test ."}{"idx": 87994, "node_name": "other", "Dec": "the node to compare against the reference node ."}{"idx": 87998, "node_name": "other", "Dec": "the node to test against ."}{"idx": 88000, "node_name": "namespaceuri", "Dec": "the namespace uri to look for ."}{"idx": 88002, "node_name": "namespaceuri", "Dec": "the namespace uri to look for ."}{"idx": 88004, "node_name": "prefix", "Dec": "the prefix to look for . if this parameter is null , lookupNamespaceURI(java.lang.String) will return the default namespace uri if any ."}{"idx": 88006, "node_name": "arg", "Dec": "the node to compare equality with ."}{"idx": 88008, "node_name": "feature", "Dec": "the name of the feature requested . note that any plus sign \" + \" prepended to the name of the feature will be ignored since it is not significant in the context of getFeature(java.lang.String,java.lang.String) ."}{"idx": 88009, "node_name": "version", "Dec": "this is the version number of the feature to test ."}{"idx": 88011, "node_name": "key", "Dec": "the key to associate the object to ."}{"idx": 88012, "node_name": "data", "Dec": "the object to associate to the given key , or null to remove any existing association to that key ."}{"idx": 88013, "node_name": "handler", "Dec": "the handler to associate to that key , or null ."}{"idx": 88015, "node_name": "key", "Dec": "the key the object is associated to ."}{"idx": 88018, "node_name": "index", "Dec": "index into the collection ."}{"idx": 88041, "node_name": "refnode", "Dec": "the refnode value . this parameter must be different from null ."}{"idx": 88042, "node_name": "offset", "Dec": "the startoffset value ."}{"idx": 88044, "node_name": "refnode", "Dec": "the refnode value . this parameter must be different from null ."}{"idx": 88045, "node_name": "offset", "Dec": "the endoffset value ."}{"idx": 88047, "node_name": "refnode", "Dec": "range starts before refnode"}{"idx": 88049, "node_name": "refnode", "Dec": "range starts after refnode"}{"idx": 88051, "node_name": "refnode", "Dec": "range ends before refnode"}{"idx": 88053, "node_name": "refnode", "Dec": "range ends after refnode ."}{"idx": 88055, "node_name": "tostart", "Dec": "if true , collapses the range onto its start ; if false , collapses it onto its end ."}{"idx": 88057, "node_name": "refnode", "Dec": "the node to select ."}{"idx": 88059, "node_name": "refnode", "Dec": "node to select from"}{"idx": 88061, "node_name": "how", "Dec": "a code representing the type of comparison , as defined above ."}{"idx": 88062, "node_name": "sourcerange", "Dec": "the range on which this current range is compared to ."}{"idx": 88067, "node_name": "newnode", "Dec": "the node to insert at the start of the range"}{"idx": 88069, "node_name": "newparent", "Dec": "the node to surround the contents with ."}{"idx": 88087, "node_name": "index", "Dec": "index into the collection ."}{"idx": 88089, "node_name": "oldmedium", "Dec": "the medium to delete in the media list ."}{"idx": 88091, "node_name": "newmedium", "Dec": "the new medium to add ."}{"idx": 88104, "node_name": "index", "Dec": "index into the collection"}{"idx": 88107, "node_name": "offset", "Dec": "the 16-bit unit offset at which to split , starting from 0 ."}{"idx": 88111, "node_name": "content", "Dec": "the content of the replacing text node ."}{"idx": 88114, "node_name": "root", "Dec": "the node which will be iterated together with its children . the nodeiterator is initially positioned just before this node . the whattoshow flags and the filter , if any , are not considered when setting this position . the root must not be null ."}{"idx": 88115, "node_name": "whattoshow", "Dec": "this flag specifies which node types may appear in the logical view of the tree presented by the nodeiterator . see the description of nodefilter for the set of possible show_ values.these flags can be combined using or ."}{"idx": 88116, "node_name": "filter", "Dec": "the nodefilter to be used with this nodeiterator , or null to indicate no filter ."}{"idx": 88117, "node_name": "entityreferenceexpansion", "Dec": "the value of this flag determines whether entity reference nodes are expanded ."}{"idx": 88119, "node_name": "root", "Dec": "the node which will serve as the root for the treewalker . the whattoshow flags and the nodefilter are not considered when setting this value ; any node type will be accepted as the root . the currentnode of the treewalker is initialized to this node , whether or not it is visible . the root functions as a stopping point for traversal methods that look upward in the document structure , such as parentnode and nextnode . the root must not be null ."}{"idx": 88120, "node_name": "whattoshow", "Dec": "this flag specifies which node types may appear in the logical view of the tree presented by the treewalker . see the description of nodefilter for the set of possible show_ values.these flags can be combined using or ."}{"idx": 88121, "node_name": "filter", "Dec": "the nodefilter to be used with this treewalker , or null to indicate no filter ."}{"idx": 88122, "node_name": "entityreferenceexpansion", "Dec": "if this flag is false , the contents of entityreference nodes are not presented in the logical view ."}{"idx": 88141, "node_name": "n", "Dec": "the node to check to see if it passes the filter or not ."}{"idx": 88172, "node_name": "typenamespacearg", "Dec": "the namespace of the other type definition ."}{"idx": 88173, "node_name": "typenamearg", "Dec": "the name of the other type definition ."}{"idx": 88174, "node_name": "derivationmethod", "Dec": "the type of derivation and conditions applied between two types , as described in the list of constants provided in this interface ."}{"idx": 88182, "node_name": "operation", "Dec": "specifies the type of operation that is being performed on the node ."}{"idx": 88183, "node_name": "key", "Dec": "specifies the key for which this handler is being called ."}{"idx": 88184, "node_name": "data", "Dec": "specifies the data for which this handler is being called ."}{"idx": 88185, "node_name": "src", "Dec": "specifies the node being cloned , adopted , imported , or renamed . this is null when the node is being deleted ."}{"idx": 88186, "node_name": "dst", "Dec": "specifies the node newly created if any , or null ."}{"idx": 88193, "node_name": "expression", "Dec": "the xpath expression string to be parsed ."}{"idx": 88194, "node_name": "resolver", "Dec": "the resolver permits translation of prefixes within the xpath expression into appropriate namespace uris . if this is specified as null , any namespace prefix within the expression will result in domexception being thrown with the code namespace_err ."}{"idx": 88196, "node_name": "noderesolver", "Dec": "the node to be used as a context for namespace resolution ."}{"idx": 88198, "node_name": "expression", "Dec": "the xpath expression string to be parsed and evaluated ."}{"idx": 88199, "node_name": "contextnode", "Dec": "the context is context node for the evaluation of this xpath expression . if the xpathevaluator was obtained by casting the document then this must be owned by the same document and must be a document , element , attribute , text , cdatasection , comment , processinginstruction , or xpathnamespace node . if the context node is a text or a cdatasection , then the context is interpreted as the whole logical text node as seen by xpath , unless the node is empty in which case it may not serve as the xpath context ."}{"idx": 88200, "node_name": "resolver", "Dec": "the resolver permits translation of prefixes within the xpath expression into appropriate namespace uris . if this is specified as null , any namespace prefix within the expression will result in domexception being thrown with the code namespace_err ."}{"idx": 88201, "node_name": "type", "Dec": "if a specific type is specified , then the result will be returned as the corresponding type.for xpath 1.0 results , this must be one of the codes of the xpathresult interface ."}{"idx": 88202, "node_name": "result", "Dec": "the result specifies a specific result object which may be reused and returned by evaluate(java.lang.String,org.w3c.dom.Node,org.w3c.dom.xpath.XPathNSResolver,short,java.lang.Object) . if this is specified as nullor the implementation does not reuse the specified result , a new result object will be constructed and returned.for xpath 1.0 results , this object will be of type xpathresult ."}{"idx": 88210, "node_name": "contextnode", "Dec": "the context is context node for the evaluation of this xpath expression.if the xpathevaluator was obtained by casting the document then this must be owned by the same document and must be a document , element , attribute , text , cdatasection , comment , processinginstruction , or xpathnamespace node.if the context node is a text or a cdatasection , then the context is interpreted as the whole logical text node as seen by xpath , unless the node is empty in which case it may not serve as the xpath context ."}{"idx": 88211, "node_name": "type", "Dec": "if a specific type is specified , then the result will be coerced to return the specified type relying on xpath conversions and fail if the desired coercion is not possible . this must be one of the type codes of xpathresult ."}{"idx": 88212, "node_name": "result", "Dec": "the result specifies a specific result object which may be reused and returned by evaluate(org.w3c.dom.Node,short,java.lang.Object) . if this is specified as nullor the implementation does not reuse the specified result , a new result object will be constructed and returned.for xpath 1.0 results , this object will be of type xpathresult ."}{"idx": 88218, "node_name": "prefix", "Dec": "the prefix to look for ."}{"idx": 88239, "node_name": "index", "Dec": "index into the snapshot collection ."}{"idx": 88244, "node_name": "index", "Dec": "the attribute index ( zero-based ) ."}{"idx": 88246, "node_name": "index", "Dec": "the attribute index ( zero-based ) ."}{"idx": 88248, "node_name": "index", "Dec": "the attribute index ( zero-based ) ."}{"idx": 88250, "node_name": "index", "Dec": "the attribute index ( zero-based ) ."}{"idx": 88252, "node_name": "index", "Dec": "the attribute index ( zero-based ) ."}{"idx": 88254, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the name has no namespace uri ."}{"idx": 88255, "node_name": "localname", "Dec": "the attribute's local name ."}{"idx": 88257, "node_name": "qname", "Dec": "the qualified ( prefixed ) name ."}{"idx": 88259, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the name has no namespace uri ."}{"idx": 88260, "node_name": "localname", "Dec": "the local name of the attribute ."}{"idx": 88262, "node_name": "qname", "Dec": "the xml qualified name ."}{"idx": 88264, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the name has no namespace uri ."}{"idx": 88265, "node_name": "localname", "Dec": "the local name of the attribute ."}{"idx": 88267, "node_name": "qname", "Dec": "the xml qualified name ."}{"idx": 88270, "node_name": "locator", "Dec": "an object that can return the location of any sax document event"}{"idx": 88274, "node_name": "prefix", "Dec": "the namespace prefix being declared . an empty string is used for the default element namespace , which has no prefix ."}{"idx": 88275, "node_name": "uri", "Dec": "the namespace uri the prefix is mapped to"}{"idx": 88277, "node_name": "prefix", "Dec": "the prefix that was being mapped . this is the empty string when a default mapping scope ends ."}{"idx": 88279, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the element has no namespace uri or if namespace processing is not being performed"}{"idx": 88280, "node_name": "localname", "Dec": "the local name ( without prefix ) , or the empty string if namespace processing is not being performed"}{"idx": 88281, "node_name": "qname", "Dec": "the qualified name ( with prefix ) , or the empty string if qualified names are not available"}{"idx": 88282, "node_name": "atts", "Dec": "the attributes attached to the element . if there are no attributes , it shall be an empty attributes object . the value of this object after startelement returns is undefined"}{"idx": 88284, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the element has no namespace uri or if namespace processing is not being performed"}{"idx": 88285, "node_name": "localname", "Dec": "the local name ( without prefix ) , or the empty string if namespace processing is not being performed"}{"idx": 88286, "node_name": "qname", "Dec": "the qualified xml name ( with prefix ) , or the empty string if qualified names are not available"}{"idx": 88288, "node_name": "ch", "Dec": "the characters from the xml document"}{"idx": 88289, "node_name": "start", "Dec": "the start position in the array"}{"idx": 88290, "node_name": "length", "Dec": "the number of characters to read from the array"}{"idx": 88292, "node_name": "ch", "Dec": "the characters from the xml document"}{"idx": 88293, "node_name": "start", "Dec": "the start position in the array"}{"idx": 88294, "node_name": "length", "Dec": "the number of characters to read from the array"}{"idx": 88296, "node_name": "target", "Dec": "the processing instruction target"}{"idx": 88297, "node_name": "data", "Dec": "the processing instruction data , or null if none was supplied . the data does not include any whitespace separating it from the target"}{"idx": 88299, "node_name": "name", "Dec": "the name of the skipped entity . if it is a parameter entity , the name will begin with ' % ' , and if it is the external dtd subset , it will be the string \" [ dtd ]\""}{"idx": 88303, "node_name": "name", "Dec": "the notation name ."}{"idx": 88304, "node_name": "publicid", "Dec": "the notation's public identifier , or null if none was given ."}{"idx": 88305, "node_name": "systemid", "Dec": "the notation's system identifier , or null if none was given ."}{"idx": 88307, "node_name": "name", "Dec": "the unparsed entity's name ."}{"idx": 88308, "node_name": "publicid", "Dec": "the entity's public identifier , or null if none was given ."}{"idx": 88309, "node_name": "systemid", "Dec": "the entity's system identifier ."}{"idx": 88310, "node_name": "notationname", "Dec": "the name of the associated notation ."}{"idx": 88313, "node_name": "publicid", "Dec": "the public identifier of the external entity being referenced , or null if none was supplied ."}{"idx": 88314, "node_name": "systemid", "Dec": "the system identifier of the external entity being referenced ."}{"idx": 88317, "node_name": "exception", "Dec": "the warning information encapsulated in a sax parse exception ."}{"idx": 88319, "node_name": "exception", "Dec": "the error information encapsulated in a sax parse exception ."}{"idx": 88321, "node_name": "exception", "Dec": "the error information encapsulated in a sax parse exception ."}{"idx": 88324, "node_name": "index", "Dec": "the attribute index ( zero-based ) ."}{"idx": 88326, "node_name": "qname", "Dec": "the xml qualified ( prefixed ) name ."}{"idx": 88328, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the name has no namespace uri ."}{"idx": 88329, "node_name": "localname", "Dec": "the attribute's local name ."}{"idx": 88331, "node_name": "index", "Dec": "the attribute index ( zero-based ) ."}{"idx": 88333, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the name has no namespace uri ."}{"idx": 88334, "node_name": "localname", "Dec": "the attribute's local name ."}{"idx": 88336, "node_name": "qname", "Dec": "the xml qualified ( prefixed ) name ."}{"idx": 88340, "node_name": "atts", "Dec": "the existing attributes object ."}{"idx": 88342, "node_name": "index", "Dec": "the attribute index ( zero-based ) ."}{"idx": 88344, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the name has no namespace uri ."}{"idx": 88345, "node_name": "localname", "Dec": "the attribute's local name ."}{"idx": 88347, "node_name": "qname", "Dec": "the xml qualified ( prefixed ) name ."}{"idx": 88349, "node_name": "index", "Dec": "the attribute index ( zero-based ) ."}{"idx": 88351, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the name has no namespace uri ."}{"idx": 88352, "node_name": "localname", "Dec": "the attribute's local name ."}{"idx": 88354, "node_name": "qname", "Dec": "the xml qualified ( prefixed ) name ."}{"idx": 88356, "node_name": "atts", "Dec": "the attributes to copy ."}{"idx": 88358, "node_name": "uri", "Dec": "the namespace uri , or the empty string if none is available or namespace processing is not being performed ."}{"idx": 88359, "node_name": "localname", "Dec": "the local name , or the empty string if namespace processing is not being performed ."}{"idx": 88360, "node_name": "qname", "Dec": "the qualified ( prefixed ) name , or the empty string if qualified names are not available ."}{"idx": 88361, "node_name": "type", "Dec": "the attribute type as a string ."}{"idx": 88362, "node_name": "value", "Dec": "the attribute value ."}{"idx": 88364, "node_name": "index", "Dec": "the index of the attribute ( zero-based ) ."}{"idx": 88365, "node_name": "value", "Dec": "the desired flag value ."}{"idx": 88367, "node_name": "index", "Dec": "the index of the attribute ( zero-based ) ."}{"idx": 88368, "node_name": "value", "Dec": "the desired flag value ."}{"idx": 88371, "node_name": "name", "Dec": "the element type name ."}{"idx": 88372, "node_name": "model", "Dec": "the content model as a normalized string ."}{"idx": 88374, "node_name": "ename", "Dec": "the name of the associated element ."}{"idx": 88375, "node_name": "aname", "Dec": "the name of the attribute ."}{"idx": 88376, "node_name": "type", "Dec": "a string representing the attribute type ."}{"idx": 88377, "node_name": "mode", "Dec": "a string representing the attribute defaulting mode ( \" #implied \" , \" #required \" , or \" #fixed \") or null if none of these applies ."}{"idx": 88378, "node_name": "value", "Dec": "a string representing the attribute's default value , or null if there is none ."}{"idx": 88380, "node_name": "name", "Dec": "the name of the entity . if it is a parameter entity , the name will begin with ' % ' ."}{"idx": 88381, "node_name": "value", "Dec": "the replacement text of the entity ."}{"idx": 88383, "node_name": "name", "Dec": "the name of the entity . if it is a parameter entity , the name will begin with ' % ' ."}{"idx": 88384, "node_name": "publicid", "Dec": "the entity's public identifier , or null if none was given ."}{"idx": 88385, "node_name": "systemid", "Dec": "the entity's system identifier ."}{"idx": 88389, "node_name": "name", "Dec": "identifies the document root element . this name comes from a doctype declaration ( where available ) or from the actual root element ."}{"idx": 88390, "node_name": "baseuri", "Dec": "the document's base uri , serving as an additional hint for selecting the external subset . this is always an absolute uri , unless it is null because the xmlreader was given an inputsource without one ."}{"idx": 88392, "node_name": "name", "Dec": "identifies the external entity being resolved . either \" [ dtd ]\" for the external subset , or a name starting with \" % \" to indicate a parameter entity , or else the name of a general entity . this is never null when invoked by a sax2 parser ."}{"idx": 88393, "node_name": "publicid", "Dec": "the public identifier of the external entity being referenced ( normalized as required by the xml specification ) , or null if none was supplied ."}{"idx": 88394, "node_name": "baseuri", "Dec": "the uri with respect to which relative systemids are interpreted . this is always an absolute uri , unless it is null ( likely because the xmlreader was given an inputsource without one ) . this uri is defined by the xml specification to be the one associated with the \" < \" starting the relevant declaration ."}{"idx": 88395, "node_name": "systemid", "Dec": "the system identifier of the external entity being referenced ; either a relative or absolute uri . this is never null when invoked by a sax2 parser ; only declared entities , and any external subset , are resolved by such parsers ."}{"idx": 88397, "node_name": "publicid", "Dec": "the public identifier , or null if none is available ."}{"idx": 88398, "node_name": "systemid", "Dec": "the system identifier provided in the xml document ."}{"idx": 88401, "node_name": "name", "Dec": "identifies the document root element . this name comes from a doctype declaration ( where available ) or from the actual root element ."}{"idx": 88402, "node_name": "baseuri", "Dec": "the document's base uri , serving as an additional hint for selecting the external subset . this is always an absolute uri , unless it is null because the xmlreader was given an inputsource without one ."}{"idx": 88404, "node_name": "name", "Dec": "identifies the external entity being resolved . either \" [ dtd ]\" for the external subset , or a name starting with \" % \" to indicate a parameter entity , or else the name of a general entity . this is never null when invoked by a sax2 parser ."}{"idx": 88405, "node_name": "publicid", "Dec": "the public identifier of the external entity being referenced ( normalized as required by the xml specification ) , or null if none was supplied ."}{"idx": 88406, "node_name": "baseuri", "Dec": "the uri with respect to which relative systemids are interpreted . this is always an absolute uri , unless it is null ( likely because the xmlreader was given an inputsource without one ) . this uri is defined by the xml specification to be the one associated with the \" < \" starting the relevant declaration ."}{"idx": 88407, "node_name": "systemid", "Dec": "the system identifier of the external entity being referenced ; either a relative or absolute uri . this is never null when invoked by a sax2 parser ; only declared entities , and any external subset , are resolved by such parsers ."}{"idx": 88410, "node_name": "name", "Dec": "the document type name ."}{"idx": 88411, "node_name": "publicid", "Dec": "the declared public identifier for the external dtd subset , or null if none was declared ."}{"idx": 88412, "node_name": "systemid", "Dec": "the declared system identifier for the external dtd subset , or null if none was declared . ( note that this is not resolved against the document base uri . )"}{"idx": 88415, "node_name": "name", "Dec": "the name of the entity . if it is a parameter entity , the name will begin with ' % ' , and if it is the external dtd subset , it will be \" [ dtd ]\" ."}{"idx": 88417, "node_name": "name", "Dec": "the name of the entity that is ending ."}{"idx": 88421, "node_name": "ch", "Dec": "an array holding the characters in the comment ."}{"idx": 88422, "node_name": "start", "Dec": "the starting position in the array ."}{"idx": 88423, "node_name": "length", "Dec": "the number of characters to use from the array ."}{"idx": 88430, "node_name": "locator", "Dec": "the existing locator object ."}{"idx": 88434, "node_name": "version", "Dec": "the new \" version \" value"}{"idx": 88436, "node_name": "encoding", "Dec": "the new \" encoding \" value"}{"idx": 88442, "node_name": "atts", "Dec": "the existing attributes object ."}{"idx": 88445, "node_name": "index", "Dec": "the attribute's index ( zero-based ) ."}{"idx": 88447, "node_name": "index", "Dec": "the attribute's index ( zero-based ) ."}{"idx": 88449, "node_name": "index", "Dec": "the attribute's index ( zero-based ) ."}{"idx": 88451, "node_name": "index", "Dec": "the attribute's index ( zero-based ) ."}{"idx": 88453, "node_name": "index", "Dec": "the attribute's index ( zero-based ) ."}{"idx": 88455, "node_name": "uri", "Dec": "the attribute's namespace uri , or the empty string if none is available ."}{"idx": 88456, "node_name": "localname", "Dec": "the attribute's local name ."}{"idx": 88458, "node_name": "qname", "Dec": "the qualified name ."}{"idx": 88460, "node_name": "uri", "Dec": "the namespace uri , or the empty string for a name with no explicit namespace uri ."}{"idx": 88461, "node_name": "localname", "Dec": "the local name ."}{"idx": 88463, "node_name": "qname", "Dec": "the qualified name ."}{"idx": 88465, "node_name": "uri", "Dec": "the namespace uri , or the empty string for a name with no explicit namespace uri ."}{"idx": 88466, "node_name": "localname", "Dec": "the local name ."}{"idx": 88468, "node_name": "qname", "Dec": "the qualified name ."}{"idx": 88471, "node_name": "atts", "Dec": "the attributes to copy ."}{"idx": 88473, "node_name": "uri", "Dec": "the namespace uri , or the empty string if none is available or namespace processing is not being performed ."}{"idx": 88474, "node_name": "localname", "Dec": "the local name , or the empty string if namespace processing is not being performed ."}{"idx": 88475, "node_name": "qname", "Dec": "the qualified ( prefixed ) name , or the empty string if qualified names are not available ."}{"idx": 88476, "node_name": "type", "Dec": "the attribute type as a string ."}{"idx": 88477, "node_name": "value", "Dec": "the attribute value ."}{"idx": 88479, "node_name": "index", "Dec": "the index of the attribute ( zero-based ) ."}{"idx": 88480, "node_name": "uri", "Dec": "the namespace uri , or the empty string if none is available or namespace processing is not being performed ."}{"idx": 88481, "node_name": "localname", "Dec": "the local name , or the empty string if namespace processing is not being performed ."}{"idx": 88482, "node_name": "qname", "Dec": "the qualified name , or the empty string if qualified names are not available ."}{"idx": 88483, "node_name": "type", "Dec": "the attribute type as a string ."}{"idx": 88484, "node_name": "value", "Dec": "the attribute value ."}{"idx": 88486, "node_name": "index", "Dec": "the index of the attribute ( zero-based ) ."}{"idx": 88488, "node_name": "index", "Dec": "the index of the attribute ( zero-based ) ."}{"idx": 88489, "node_name": "uri", "Dec": "the attribute's namespace uri , or the empty string for none ."}{"idx": 88491, "node_name": "index", "Dec": "the index of the attribute ( zero-based ) ."}{"idx": 88492, "node_name": "localname", "Dec": "the attribute's local name , or the empty string for none ."}{"idx": 88494, "node_name": "index", "Dec": "the index of the attribute ( zero-based ) ."}{"idx": 88495, "node_name": "qname", "Dec": "the attribute's qualified name , or the empty string for none ."}{"idx": 88497, "node_name": "index", "Dec": "the index of the attribute ( zero-based ) ."}{"idx": 88498, "node_name": "type", "Dec": "the attribute's type ."}{"idx": 88500, "node_name": "index", "Dec": "the index of the attribute ( zero-based ) ."}{"idx": 88501, "node_name": "value", "Dec": "the attribute's value ."}{"idx": 88505, "node_name": "publicid", "Dec": "the public identifier , or null if none is available ."}{"idx": 88506, "node_name": "systemid", "Dec": "the system identifier provided in the xml document ."}{"idx": 88508, "node_name": "name", "Dec": "the notation name ."}{"idx": 88509, "node_name": "publicid", "Dec": "the notation public identifier , or null if not available ."}{"idx": 88510, "node_name": "systemid", "Dec": "the notation system identifier ."}{"idx": 88512, "node_name": "name", "Dec": "the entity name ."}{"idx": 88513, "node_name": "publicid", "Dec": "the entity public identifier , or null if not available ."}{"idx": 88514, "node_name": "systemid", "Dec": "the entity system identifier ."}{"idx": 88515, "node_name": "notationname", "Dec": "the name of the associated notation ."}{"idx": 88517, "node_name": "locator", "Dec": "a locator for all sax document events ."}{"idx": 88521, "node_name": "prefix", "Dec": "the namespace prefix being declared ."}{"idx": 88522, "node_name": "uri", "Dec": "the namespace uri mapped to the prefix ."}{"idx": 88524, "node_name": "prefix", "Dec": "the namespace prefix being declared ."}{"idx": 88526, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the element has no namespace uri or if namespace processing is not being performed ."}{"idx": 88527, "node_name": "localname", "Dec": "the local name ( without prefix ) , or the empty string if namespace processing is not being performed ."}{"idx": 88528, "node_name": "qname", "Dec": "the qualified name ( with prefix ) , or the empty string if qualified names are not available ."}{"idx": 88529, "node_name": "attributes", "Dec": "the attributes attached to the element . if there are no attributes , it shall be an empty attributes object ."}{"idx": 88531, "node_name": "uri", "Dec": "the namespace uri , or the empty string if the element has no namespace uri or if namespace processing is not being performed ."}{"idx": 88532, "node_name": "localname", "Dec": "the local name ( without prefix ) , or the empty string if namespace processing is not being performed ."}{"idx": 88533, "node_name": "qname", "Dec": "the qualified name ( with prefix ) , or the empty string if qualified names are not available ."}{"idx": 88535, "node_name": "ch", "Dec": "the characters ."}{"idx": 88536, "node_name": "start", "Dec": "the start position in the character array ."}{"idx": 88537, "node_name": "length", "Dec": "the number of characters to use from the character array ."}{"idx": 88539, "node_name": "ch", "Dec": "the whitespace characters ."}{"idx": 88540, "node_name": "start", "Dec": "the start position in the character array ."}{"idx": 88541, "node_name": "length", "Dec": "the number of characters to use from the character array ."}{"idx": 88543, "node_name": "target", "Dec": "the processing instruction target ."}{"idx": 88544, "node_name": "data", "Dec": "the processing instruction data , or null if none is supplied ."}{"idx": 88546, "node_name": "name", "Dec": "the name of the skipped entity ."}{"idx": 88548, "node_name": "e", "Dec": "the warning information encoded as an exception ."}{"idx": 88550, "node_name": "e", "Dec": "the error information encoded as an exception ."}{"idx": 88552, "node_name": "e", "Dec": "the error information encoded as an exception ."}{"idx": 88556, "node_name": "locator", "Dec": "the locator to copy ."}{"idx": 88562, "node_name": "publicid", "Dec": "the new public identifier , or null if none is available ."}{"idx": 88564, "node_name": "systemid", "Dec": "the new system identifier , or null if none is available ."}{"idx": 88566, "node_name": "linenumber", "Dec": "the line number , or -1 if none is available ."}{"idx": 88568, "node_name": "columnnumber", "Dec": "the column number , or -1 if none is available ."}{"idx": 88577, "node_name": "prefix", "Dec": "the prefix to declare , or the empty string to indicate the default element namespace . this may never have the value \" xml \" or \" xmlns \" ."}{"idx": 88578, "node_name": "uri", "Dec": "the namespace uri to associate with the prefix ."}{"idx": 88581, "node_name": "prefix", "Dec": "the prefix to look up ."}{"idx": 88584, "node_name": "uri", "Dec": "the namespace uri"}{"idx": 88586, "node_name": "uri", "Dec": "the namespace uri ."}{"idx": 88593, "node_name": "parser", "Dec": "the sax1 parser to embed ."}{"idx": 88595, "node_name": "name", "Dec": "the feature name , as a complete uri ."}{"idx": 88596, "node_name": "value", "Dec": "the requested feature value ."}{"idx": 88598, "node_name": "name", "Dec": "the feature name , as a complete uri ."}{"idx": 88600, "node_name": "name", "Dec": "the property name ."}{"idx": 88601, "node_name": "value", "Dec": "the property value ."}{"idx": 88603, "node_name": "name", "Dec": "the property name ."}{"idx": 88605, "node_name": "resolver", "Dec": "the new entity resolver ."}{"idx": 88608, "node_name": "handler", "Dec": "the new dtd handler"}{"idx": 88611, "node_name": "handler", "Dec": "the new content handler"}{"idx": 88614, "node_name": "handler", "Dec": "the new error handler ."}{"idx": 88617, "node_name": "systemid", "Dec": "the absolute url of the document ."}{"idx": 88619, "node_name": "input", "Dec": "an input source for the document ."}{"idx": 88621, "node_name": "locator", "Dec": "a document locator ."}{"idx": 88625, "node_name": "qname", "Dec": "the qualified ( prefixed ) name ."}{"idx": 88626, "node_name": "qatts", "Dec": "the xml attribute list ( with qnames ) ."}{"idx": 88628, "node_name": "qname", "Dec": "the qualified ( prefixed ) name ."}{"idx": 88630, "node_name": "ch", "Dec": "an array of characters ."}{"idx": 88631, "node_name": "start", "Dec": "the starting position in the array ."}{"idx": 88632, "node_name": "length", "Dec": "the number of characters to use ."}{"idx": 88634, "node_name": "ch", "Dec": "an array of characters ."}{"idx": 88635, "node_name": "start", "Dec": "the starting position in the array ."}{"idx": 88636, "node_name": "length", "Dec": "the number of characters to use ."}{"idx": 88638, "node_name": "target", "Dec": "the processing instruction target ."}{"idx": 88639, "node_name": "data", "Dec": "the remainder of the processing instruction"}{"idx": 88645, "node_name": "parent", "Dec": "the parent xml reader ."}{"idx": 88648, "node_name": "name", "Dec": "the feature name ."}{"idx": 88649, "node_name": "value", "Dec": "the requested feature value ."}{"idx": 88651, "node_name": "name", "Dec": "the feature name ."}{"idx": 88653, "node_name": "name", "Dec": "the property name ."}{"idx": 88654, "node_name": "value", "Dec": "the requested property value ."}{"idx": 88656, "node_name": "name", "Dec": "the property name ."}{"idx": 88658, "node_name": "resolver", "Dec": "the new entity resolver ."}{"idx": 88661, "node_name": "handler", "Dec": "the new dtd handler"}{"idx": 88664, "node_name": "handler", "Dec": "the new content handler"}{"idx": 88667, "node_name": "handler", "Dec": "the new error handler"}{"idx": 88670, "node_name": "input", "Dec": "the input source for the document entity ."}{"idx": 88672, "node_name": "systemid", "Dec": "the system identifier as a fully-qualified uri ."}{"idx": 88674, "node_name": "publicid", "Dec": "the entity's public identifier , or null ."}{"idx": 88675, "node_name": "systemid", "Dec": "the entity's system identifier ."}{"idx": 88677, "node_name": "name", "Dec": "the notation name ."}{"idx": 88678, "node_name": "publicid", "Dec": "the notation's public identifier , or null ."}{"idx": 88679, "node_name": "systemid", "Dec": "the notation's system identifier , or null ."}{"idx": 88681, "node_name": "name", "Dec": "the entity name ."}{"idx": 88682, "node_name": "publicid", "Dec": "the entity's public identifier , or null ."}{"idx": 88683, "node_name": "systemid", "Dec": "the entity's system identifier , or null ."}{"idx": 88684, "node_name": "notationname", "Dec": "the name of the associated notation ."}{"idx": 88686, "node_name": "locator", "Dec": "the document locator ."}{"idx": 88690, "node_name": "prefix", "Dec": "the namespace prefix ."}{"idx": 88691, "node_name": "uri", "Dec": "the namespace uri ."}{"idx": 88693, "node_name": "prefix", "Dec": "the namespace prefix ."}{"idx": 88695, "node_name": "uri", "Dec": "the element's namespace uri , or the empty string ."}{"idx": 88696, "node_name": "localname", "Dec": "the element's local name , or the empty string ."}{"idx": 88697, "node_name": "qname", "Dec": "the element's qualified ( prefixed ) name , or the empty string ."}{"idx": 88698, "node_name": "atts", "Dec": "the element's attributes ."}{"idx": 88700, "node_name": "uri", "Dec": "the element's namespace uri , or the empty string ."}{"idx": 88701, "node_name": "localname", "Dec": "the element's local name , or the empty string ."}{"idx": 88702, "node_name": "qname", "Dec": "the element's qualified ( prefixed ) name , or the empty string ."}{"idx": 88704, "node_name": "ch", "Dec": "an array of characters ."}{"idx": 88705, "node_name": "start", "Dec": "the starting position in the array ."}{"idx": 88706, "node_name": "length", "Dec": "the number of characters to use from the array ."}{"idx": 88708, "node_name": "ch", "Dec": "an array of characters ."}{"idx": 88709, "node_name": "start", "Dec": "the starting position in the array ."}{"idx": 88710, "node_name": "length", "Dec": "the number of characters to use from the array ."}{"idx": 88712, "node_name": "target", "Dec": "the processing instruction target ."}{"idx": 88713, "node_name": "data", "Dec": "the text following the target ."}{"idx": 88715, "node_name": "name", "Dec": "the name of the skipped entity ."}{"idx": 88717, "node_name": "e", "Dec": "the warning as an exception ."}{"idx": 88719, "node_name": "e", "Dec": "the error as an exception ."}{"idx": 88721, "node_name": "e", "Dec": "the error as an exception ."}{"idx": 88725, "node_name": "xmlreader", "Dec": "the sax2 xmlreader to wrap ."}{"idx": 88727, "node_name": "locale", "Dec": "the locale for error reporting ."}{"idx": 88729, "node_name": "resolver", "Dec": "the new resolver ."}{"idx": 88731, "node_name": "handler", "Dec": "the new dtd event handler ."}{"idx": 88733, "node_name": "handler", "Dec": "the new sax1 document event handler ."}{"idx": 88735, "node_name": "handler", "Dec": "the new error event handler ."}{"idx": 88737, "node_name": "systemid", "Dec": "the absolute url of the document ."}{"idx": 88739, "node_name": "input", "Dec": "an input source for the document ."}{"idx": 88741, "node_name": "locator", "Dec": "the document locator ."}{"idx": 88745, "node_name": "prefix", "Dec": "the prefix being mapped ."}{"idx": 88746, "node_name": "uri", "Dec": "the namespace uri being mapped to ."}{"idx": 88748, "node_name": "prefix", "Dec": "the prefix being mapped ."}{"idx": 88750, "node_name": "uri", "Dec": "the namespace uri ."}{"idx": 88751, "node_name": "localname", "Dec": "the namespace local name ."}{"idx": 88752, "node_name": "qname", "Dec": "the qualified ( prefixed ) name ."}{"idx": 88753, "node_name": "atts", "Dec": "the sax2 attributes ."}{"idx": 88755, "node_name": "uri", "Dec": "the namespace uri ."}{"idx": 88756, "node_name": "localname", "Dec": "the namespace local name ."}{"idx": 88757, "node_name": "qname", "Dec": "the qualified ( prefixed ) name ."}{"idx": 88759, "node_name": "ch", "Dec": "an array of characters ."}{"idx": 88760, "node_name": "start", "Dec": "the starting position in the array ."}{"idx": 88761, "node_name": "length", "Dec": "the number of characters to use ."}{"idx": 88763, "node_name": "ch", "Dec": "an array of characters ."}{"idx": 88764, "node_name": "start", "Dec": "the starting position in the array ."}{"idx": 88765, "node_name": "length", "Dec": "the number of characters to use ."}{"idx": 88767, "node_name": "target", "Dec": "the processing instruction target ."}{"idx": 88768, "node_name": "data", "Dec": "the remainder of the processing instruction"}{"idx": 88770, "node_name": "name", "Dec": "the name of the skipped entity ."}{"idx": 88775, "node_name": "systemid", "Dec": "the system identifier ( uri ) ."}{"idx": 88777, "node_name": "bytestream", "Dec": "the raw byte stream containing the document ."}{"idx": 88780, "node_name": "publicid", "Dec": "the public identifier as a string ."}{"idx": 88783, "node_name": "systemid", "Dec": "the system identifier as a string ."}{"idx": 88786, "node_name": "bytestream", "Dec": "a byte stream containing an xml document or other entity ."}{"idx": 88789, "node_name": "encoding", "Dec": "a string describing the character encoding ."}{"idx": 88792, "node_name": "characterstream", "Dec": "the character stream containing the xml document or other entity ."}{"idx": 88804, "node_name": "message", "Dec": "the error or warning message ."}{"idx": 88806, "node_name": "e", "Dec": "the exception to be wrapped in a saxexception ."}{"idx": 88808, "node_name": "message", "Dec": "the detail message ."}{"idx": 88809, "node_name": "e", "Dec": "the exception to be wrapped in a saxexception ."}{"idx": 88817, "node_name": "message", "Dec": "the text message of the exception ."}{"idx": 88821, "node_name": "message", "Dec": "the text message of the exception ."}{"idx": 88824, "node_name": "message", "Dec": "the error or warning message ."}{"idx": 88825, "node_name": "locator", "Dec": "the locator object for the error or warning ( may be null ) ."}{"idx": 88827, "node_name": "message", "Dec": "the error or warning message , or null to use the message from the embedded exception ."}{"idx": 88828, "node_name": "locator", "Dec": "the locator object for the error or warning ( may be null ) ."}{"idx": 88829, "node_name": "e", "Dec": "any exception ."}{"idx": 88831, "node_name": "message", "Dec": "the error or warning message ."}{"idx": 88832, "node_name": "publicid", "Dec": "the public identifier of the entity that generated the error or warning ."}{"idx": 88833, "node_name": "systemid", "Dec": "the system identifier of the entity that generated the error or warning ."}{"idx": 88834, "node_name": "linenumber", "Dec": "the line number of the end of the text that caused the error or warning ."}{"idx": 88835, "node_name": "columnnumber", "Dec": "the column number of the end of the text that cause the error or warning ."}{"idx": 88837, "node_name": "message", "Dec": "the error or warning message , or null to use the message from the embedded exception ."}{"idx": 88838, "node_name": "publicid", "Dec": "the public identifier of the entity that generated the error or warning ."}{"idx": 88839, "node_name": "systemid", "Dec": "the system identifier of the entity that generated the error or warning ."}{"idx": 88840, "node_name": "linenumber", "Dec": "the line number of the end of the text that caused the error or warning ."}{"idx": 88841, "node_name": "columnnumber", "Dec": "the column number of the end of the text that cause the error or warning ."}{"idx": 88842, "node_name": "e", "Dec": "another exception to embed in this one ."}{"idx": 88850, "node_name": "parent", "Dec": "the parent reader ."}{"idx": 88854, "node_name": "name", "Dec": "the feature name , which is a fully-qualified uri ."}{"idx": 88856, "node_name": "name", "Dec": "the feature name , which is a fully-qualified uri ."}{"idx": 88857, "node_name": "value", "Dec": "the requested value of the feature ( true or false ) ."}{"idx": 88859, "node_name": "name", "Dec": "the property name , which is a fully-qualified uri ."}{"idx": 88861, "node_name": "name", "Dec": "the property name , which is a fully-qualified uri ."}{"idx": 88862, "node_name": "value", "Dec": "the requested value for the property ."}{"idx": 88864, "node_name": "resolver", "Dec": "the entity resolver ."}{"idx": 88867, "node_name": "handler", "Dec": "the dtd handler ."}{"idx": 88870, "node_name": "handler", "Dec": "the content handler ."}{"idx": 88873, "node_name": "handler", "Dec": "the error handler ."}{"idx": 88876, "node_name": "input", "Dec": "the input source for the top-level of the xml document ."}{"idx": 88878, "node_name": "systemid", "Dec": "the system identifier ( uri ) ."}